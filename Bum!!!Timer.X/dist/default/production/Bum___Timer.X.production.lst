

Microchip Technology PIC LITE Macro Assembler V1.45 build -152302408 
                                                                                               Thu Nov 15 11:49:44 2018

Microchip Technology Omniscient Code Generator v1.45 (Free mode) build 201711160504
     1                           	processor	16F18877
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	idataBANK0,global,class=CODE,delta=2
     5                           	psect	stringtext1,global,class=STRCODE,delta=2
     6                           	psect	stringtext2,global,class=STRCODE,delta=2
     7                           	psect	stringtext3,global,class=STRCODE,delta=2
     8                           	psect	cinit,global,class=CODE,merge=1,delta=2
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    10                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
    11                           	psect	clrtext,global,class=CODE,delta=2
    12                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    13                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    14                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    15                           	psect	text1,local,class=CODE,merge=1,delta=2
    16                           	psect	text2,local,class=CODE,merge=1,delta=2
    17                           	psect	intentry,global,class=CODE,delta=2
    18                           	psect	text4,local,class=CODE,merge=1,delta=2
    19                           	psect	text5,local,class=CODE,merge=1,delta=2,group=2
    20                           	psect	text6,local,class=CODE,merge=1,delta=2,group=2
    21                           	psect	text7,local,class=CODE,merge=1,delta=2
    22                           	psect	text8,local,class=CODE,merge=1,delta=2
    23                           	psect	text9,local,class=CODE,merge=1,delta=2
    24                           	psect	text10,local,class=CODE,merge=1,delta=2
    25                           	psect	text11,local,class=CODE,merge=1,delta=2
    26                           	dabs	1,0x7E,2
    27  0000                     
    28                           ; Version 1.45
    29                           ; Generated 16/11/2017 GMT
    30                           ; 
    31                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    32                           ; All rights reserved.
    33                           ; 
    34                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    35                           ; 
    36                           ; Redistribution and use in source and binary forms, with or without modification, are
    37                           ; permitted provided that the following conditions are met:
    38                           ; 
    39                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    40                           ;        conditions and the following disclaimer.
    41                           ; 
    42                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    43                           ;        of conditions and the following disclaimer in the documentation and/or other
    44                           ;        materials provided with the distribution.
    45                           ; 
    46                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    47                           ;        software without specific prior written permission.
    48                           ; 
    49                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    50                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    51                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    52                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    53                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    54                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    55                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    56                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    57                           ; 
    58                           ; 
    59                           ; Code-generator required, PIC16F18877 Definitions
    60                           ; 
    61                           ; SFR Addresses
    62  0000                     	;# 
    63  0001                     	;# 
    64  0002                     	;# 
    65  0003                     	;# 
    66  0004                     	;# 
    67  0005                     	;# 
    68  0006                     	;# 
    69  0007                     	;# 
    70  0008                     	;# 
    71  0009                     	;# 
    72  000A                     	;# 
    73  000B                     	;# 
    74  000C                     	;# 
    75  000D                     	;# 
    76  000E                     	;# 
    77  000F                     	;# 
    78  0010                     	;# 
    79  0011                     	;# 
    80  0012                     	;# 
    81  0013                     	;# 
    82  0014                     	;# 
    83  0015                     	;# 
    84  0016                     	;# 
    85  0017                     	;# 
    86  0018                     	;# 
    87  0019                     	;# 
    88  001A                     	;# 
    89  001C                     	;# 
    90  001C                     	;# 
    91  001D                     	;# 
    92  001D                     	;# 
    93  001E                     	;# 
    94  001F                     	;# 
    95  008C                     	;# 
    96  008C                     	;# 
    97  008D                     	;# 
    98  008E                     	;# 
    99  008E                     	;# 
   100  008F                     	;# 
   101  0090                     	;# 
   102  0090                     	;# 
   103  0091                     	;# 
   104  0093                     	;# 
   105  0094                     	;# 
   106  0095                     	;# 
   107  0096                     	;# 
   108  0097                     	;# 
   109  0098                     	;# 
   110  0099                     	;# 
   111  009A                     	;# 
   112  009B                     	;# 
   113  009C                     	;# 
   114  009D                     	;# 
   115  009E                     	;# 
   116  010C                     	;# 
   117  010D                     	;# 
   118  010E                     	;# 
   119  010E                     	;# 
   120  010F                     	;# 
   121  0110                     	;# 
   122  0110                     	;# 
   123  0111                     	;# 
   124  0112                     	;# 
   125  0112                     	;# 
   126  0113                     	;# 
   127  0114                     	;# 
   128  0114                     	;# 
   129  0115                     	;# 
   130  0116                     	;# 
   131  0116                     	;# 
   132  0117                     	;# 
   133  0119                     	;# 
   134  0119                     	;# 
   135  0119                     	;# 
   136  011A                     	;# 
   137  011A                     	;# 
   138  011A                     	;# 
   139  011B                     	;# 
   140  011B                     	;# 
   141  011B                     	;# 
   142  011B                     	;# 
   143  011B                     	;# 
   144  011C                     	;# 
   145  011C                     	;# 
   146  011C                     	;# 
   147  011D                     	;# 
   148  011D                     	;# 
   149  011D                     	;# 
   150  011E                     	;# 
   151  011E                     	;# 
   152  011E                     	;# 
   153  011F                     	;# 
   154  011F                     	;# 
   155  011F                     	;# 
   156  011F                     	;# 
   157  011F                     	;# 
   158  018C                     	;# 
   159  018D                     	;# 
   160  018E                     	;# 
   161  018F                     	;# 
   162  0190                     	;# 
   163  0191                     	;# 
   164  0192                     	;# 
   165  0196                     	;# 
   166  0197                     	;# 
   167  0198                     	;# 
   168  0199                     	;# 
   169  019A                     	;# 
   170  019B                     	;# 
   171  019C                     	;# 
   172  020C                     	;# 
   173  020C                     	;# 
   174  020D                     	;# 
   175  020E                     	;# 
   176  020F                     	;# 
   177  020F                     	;# 
   178  0210                     	;# 
   179  0210                     	;# 
   180  0211                     	;# 
   181  0211                     	;# 
   182  0212                     	;# 
   183  0212                     	;# 
   184  0213                     	;# 
   185  0214                     	;# 
   186  0215                     	;# 
   187  0215                     	;# 
   188  0216                     	;# 
   189  0216                     	;# 
   190  0217                     	;# 
   191  0217                     	;# 
   192  0218                     	;# 
   193  0218                     	;# 
   194  0219                     	;# 
   195  021A                     	;# 
   196  021B                     	;# 
   197  021B                     	;# 
   198  021C                     	;# 
   199  021C                     	;# 
   200  021D                     	;# 
   201  021D                     	;# 
   202  021E                     	;# 
   203  021F                     	;# 
   204  028C                     	;# 
   205  028C                     	;# 
   206  028D                     	;# 
   207  028D                     	;# 
   208  028E                     	;# 
   209  028F                     	;# 
   210  0290                     	;# 
   211  0290                     	;# 
   212  0291                     	;# 
   213  0292                     	;# 
   214  0292                     	;# 
   215  0293                     	;# 
   216  0293                     	;# 
   217  0294                     	;# 
   218  0295                     	;# 
   219  0296                     	;# 
   220  0296                     	;# 
   221  0297                     	;# 
   222  0298                     	;# 
   223  0298                     	;# 
   224  0299                     	;# 
   225  0299                     	;# 
   226  029A                     	;# 
   227  029B                     	;# 
   228  029C                     	;# 
   229  029C                     	;# 
   230  029D                     	;# 
   231  030C                     	;# 
   232  030C                     	;# 
   233  030D                     	;# 
   234  030E                     	;# 
   235  030F                     	;# 
   236  0310                     	;# 
   237  0310                     	;# 
   238  0311                     	;# 
   239  0312                     	;# 
   240  0313                     	;# 
   241  0314                     	;# 
   242  0314                     	;# 
   243  0315                     	;# 
   244  0316                     	;# 
   245  0317                     	;# 
   246  0318                     	;# 
   247  0318                     	;# 
   248  0319                     	;# 
   249  031A                     	;# 
   250  031B                     	;# 
   251  031C                     	;# 
   252  031C                     	;# 
   253  031D                     	;# 
   254  031E                     	;# 
   255  031F                     	;# 
   256  038C                     	;# 
   257  038D                     	;# 
   258  038E                     	;# 
   259  0390                     	;# 
   260  0391                     	;# 
   261  0392                     	;# 
   262  040C                     	;# 
   263  040D                     	;# 
   264  040E                     	;# 
   265  040F                     	;# 
   266  0410                     	;# 
   267  0411                     	;# 
   268  0416                     	;# 
   269  0416                     	;# 
   270  0417                     	;# 
   271  0418                     	;# 
   272  0418                     	;# 
   273  0419                     	;# 
   274  041A                     	;# 
   275  041A                     	;# 
   276  041B                     	;# 
   277  041C                     	;# 
   278  041C                     	;# 
   279  041D                     	;# 
   280  041E                     	;# 
   281  041F                     	;# 
   282  048C                     	;# 
   283  048C                     	;# 
   284  048D                     	;# 
   285  048E                     	;# 
   286  048F                     	;# 
   287  048F                     	;# 
   288  0490                     	;# 
   289  0491                     	;# 
   290  0492                     	;# 
   291  0492                     	;# 
   292  0493                     	;# 
   293  0494                     	;# 
   294  0495                     	;# 
   295  0495                     	;# 
   296  0496                     	;# 
   297  0497                     	;# 
   298  0498                     	;# 
   299  0499                     	;# 
   300  049A                     	;# 
   301  049B                     	;# 
   302  049C                     	;# 
   303  049D                     	;# 
   304  050C                     	;# 
   305  050C                     	;# 
   306  050D                     	;# 
   307  050E                     	;# 
   308  050F                     	;# 
   309  050F                     	;# 
   310  0510                     	;# 
   311  0511                     	;# 
   312  0512                     	;# 
   313  0512                     	;# 
   314  0513                     	;# 
   315  0514                     	;# 
   316  0515                     	;# 
   317  0515                     	;# 
   318  0516                     	;# 
   319  0517                     	;# 
   320  0518                     	;# 
   321  0519                     	;# 
   322  051A                     	;# 
   323  051B                     	;# 
   324  051C                     	;# 
   325  051D                     	;# 
   326  058C                     	;# 
   327  058C                     	;# 
   328  058D                     	;# 
   329  058E                     	;# 
   330  058F                     	;# 
   331  058F                     	;# 
   332  0590                     	;# 
   333  0591                     	;# 
   334  0592                     	;# 
   335  0593                     	;# 
   336  060C                     	;# 
   337  060D                     	;# 
   338  060E                     	;# 
   339  060F                     	;# 
   340  0610                     	;# 
   341  0611                     	;# 
   342  0612                     	;# 
   343  0613                     	;# 
   344  0614                     	;# 
   345  0616                     	;# 
   346  0617                     	;# 
   347  0618                     	;# 
   348  0619                     	;# 
   349  061A                     	;# 
   350  061B                     	;# 
   351  061C                     	;# 
   352  061D                     	;# 
   353  061E                     	;# 
   354  068C                     	;# 
   355  068D                     	;# 
   356  068E                     	;# 
   357  068F                     	;# 
   358  0690                     	;# 
   359  0691                     	;# 
   360  0692                     	;# 
   361  0693                     	;# 
   362  0694                     	;# 
   363  070C                     	;# 
   364  070D                     	;# 
   365  070E                     	;# 
   366  070F                     	;# 
   367  0710                     	;# 
   368  0711                     	;# 
   369  0712                     	;# 
   370  0713                     	;# 
   371  0714                     	;# 
   372  0716                     	;# 
   373  0717                     	;# 
   374  0718                     	;# 
   375  0719                     	;# 
   376  071A                     	;# 
   377  071B                     	;# 
   378  071C                     	;# 
   379  071D                     	;# 
   380  071E                     	;# 
   381  0796                     	;# 
   382  0797                     	;# 
   383  0798                     	;# 
   384  0799                     	;# 
   385  079A                     	;# 
   386  079B                     	;# 
   387  080C                     	;# 
   388  080D                     	;# 
   389  080E                     	;# 
   390  080F                     	;# 
   391  0810                     	;# 
   392  0811                     	;# 
   393  0812                     	;# 
   394  0813                     	;# 
   395  0814                     	;# 
   396  081A                     	;# 
   397  081B                     	;# 
   398  081C                     	;# 
   399  081D                     	;# 
   400  081E                     	;# 
   401  081F                     	;# 
   402  088C                     	;# 
   403  088D                     	;# 
   404  088E                     	;# 
   405  088F                     	;# 
   406  0890                     	;# 
   407  0891                     	;# 
   408  0892                     	;# 
   409  0893                     	;# 
   410  0895                     	;# 
   411  0896                     	;# 
   412  0897                     	;# 
   413  0898                     	;# 
   414  0899                     	;# 
   415  089A                     	;# 
   416  089B                     	;# 
   417  090C                     	;# 
   418  090E                     	;# 
   419  090F                     	;# 
   420  091F                     	;# 
   421  098F                     	;# 
   422  098F                     	;# 
   423  0990                     	;# 
   424  0991                     	;# 
   425  0992                     	;# 
   426  0993                     	;# 
   427  0994                     	;# 
   428  0995                     	;# 
   429  0996                     	;# 
   430  0997                     	;# 
   431  1E0F                     	;# 
   432  1E10                     	;# 
   433  1E11                     	;# 
   434  1E12                     	;# 
   435  1E13                     	;# 
   436  1E14                     	;# 
   437  1E15                     	;# 
   438  1E16                     	;# 
   439  1E17                     	;# 
   440  1E18                     	;# 
   441  1E19                     	;# 
   442  1E1A                     	;# 
   443  1E1B                     	;# 
   444  1E1C                     	;# 
   445  1E1D                     	;# 
   446  1E1E                     	;# 
   447  1E1F                     	;# 
   448  1E20                     	;# 
   449  1E21                     	;# 
   450  1E22                     	;# 
   451  1E23                     	;# 
   452  1E24                     	;# 
   453  1E25                     	;# 
   454  1E26                     	;# 
   455  1E27                     	;# 
   456  1E28                     	;# 
   457  1E29                     	;# 
   458  1E2A                     	;# 
   459  1E2B                     	;# 
   460  1E2C                     	;# 
   461  1E2D                     	;# 
   462  1E2E                     	;# 
   463  1E2F                     	;# 
   464  1E30                     	;# 
   465  1E31                     	;# 
   466  1E32                     	;# 
   467  1E33                     	;# 
   468  1E34                     	;# 
   469  1E35                     	;# 
   470  1E36                     	;# 
   471  1E37                     	;# 
   472  1E8F                     	;# 
   473  1E90                     	;# 
   474  1E91                     	;# 
   475  1E92                     	;# 
   476  1E93                     	;# 
   477  1E94                     	;# 
   478  1E95                     	;# 
   479  1E96                     	;# 
   480  1E97                     	;# 
   481  1E9C                     	;# 
   482  1E9D                     	;# 
   483  1E9E                     	;# 
   484  1EA1                     	;# 
   485  1EA2                     	;# 
   486  1EA3                     	;# 
   487  1EA4                     	;# 
   488  1EA5                     	;# 
   489  1EA9                     	;# 
   490  1EAA                     	;# 
   491  1EAB                     	;# 
   492  1EAC                     	;# 
   493  1EB1                     	;# 
   494  1EB2                     	;# 
   495  1EB3                     	;# 
   496  1EB8                     	;# 
   497  1EB9                     	;# 
   498  1EBA                     	;# 
   499  1EBB                     	;# 
   500  1EBC                     	;# 
   501  1EBD                     	;# 
   502  1EBE                     	;# 
   503  1EC3                     	;# 
   504  1EC5                     	;# 
   505  1EC6                     	;# 
   506  1EC7                     	;# 
   507  1EC8                     	;# 
   508  1EC9                     	;# 
   509  1ECA                     	;# 
   510  1ECB                     	;# 
   511  1ECC                     	;# 
   512  1F10                     	;# 
   513  1F11                     	;# 
   514  1F12                     	;# 
   515  1F13                     	;# 
   516  1F14                     	;# 
   517  1F15                     	;# 
   518  1F16                     	;# 
   519  1F17                     	;# 
   520  1F18                     	;# 
   521  1F19                     	;# 
   522  1F1A                     	;# 
   523  1F1B                     	;# 
   524  1F1C                     	;# 
   525  1F1D                     	;# 
   526  1F1E                     	;# 
   527  1F1F                     	;# 
   528  1F20                     	;# 
   529  1F21                     	;# 
   530  1F22                     	;# 
   531  1F23                     	;# 
   532  1F24                     	;# 
   533  1F25                     	;# 
   534  1F26                     	;# 
   535  1F27                     	;# 
   536  1F28                     	;# 
   537  1F29                     	;# 
   538  1F2A                     	;# 
   539  1F2B                     	;# 
   540  1F2C                     	;# 
   541  1F2D                     	;# 
   542  1F2E                     	;# 
   543  1F2F                     	;# 
   544  1F30                     	;# 
   545  1F31                     	;# 
   546  1F32                     	;# 
   547  1F38                     	;# 
   548  1F39                     	;# 
   549  1F3A                     	;# 
   550  1F3B                     	;# 
   551  1F3C                     	;# 
   552  1F3D                     	;# 
   553  1F3E                     	;# 
   554  1F3F                     	;# 
   555  1F40                     	;# 
   556  1F41                     	;# 
   557  1F43                     	;# 
   558  1F44                     	;# 
   559  1F45                     	;# 
   560  1F46                     	;# 
   561  1F47                     	;# 
   562  1F48                     	;# 
   563  1F49                     	;# 
   564  1F4A                     	;# 
   565  1F4B                     	;# 
   566  1F4C                     	;# 
   567  1F4E                     	;# 
   568  1F4F                     	;# 
   569  1F50                     	;# 
   570  1F51                     	;# 
   571  1F52                     	;# 
   572  1F53                     	;# 
   573  1F54                     	;# 
   574  1F55                     	;# 
   575  1F56                     	;# 
   576  1F57                     	;# 
   577  1F59                     	;# 
   578  1F5A                     	;# 
   579  1F5B                     	;# 
   580  1F5C                     	;# 
   581  1F5D                     	;# 
   582  1F61                     	;# 
   583  1F62                     	;# 
   584  1F64                     	;# 
   585  1F65                     	;# 
   586  1F66                     	;# 
   587  1F67                     	;# 
   588  1F68                     	;# 
   589  1F69                     	;# 
   590  1F6A                     	;# 
   591  1F6B                     	;# 
   592  1F6C                     	;# 
   593  1F6D                     	;# 
   594  1FE4                     	;# 
   595  1FE5                     	;# 
   596  1FE6                     	;# 
   597  1FE7                     	;# 
   598  1FE8                     	;# 
   599  1FE9                     	;# 
   600  1FEA                     	;# 
   601  1FEB                     	;# 
   602  1FED                     	;# 
   603  1FEE                     	;# 
   604  1FEF                     	;# 
   605                           
   606                           	psect	idataBANK0
   607  054B                     __pidataBANK0:	
   608                           
   609                           ;initializer for _precarga
   610  054B  34B0               	retlw	176
   611  054C  343C               	retlw	60
   612                           
   613                           ;initializer for _conthr
   614  054D  340B               	retlw	11
   615  054E  3400               	retlw	0
   616                           
   617                           ;initializer for _contmin
   618  054F  3432               	retlw	50
   619  0550  3400               	retlw	0
   620                           
   621                           	psect	stringtext1
   622  0528                     __pstringtext1:	
   623  0528                     _dpowers:	
   624  0528  3401               	retlw	1
   625  0529  3400               	retlw	0
   626  052A  340A               	retlw	10
   627  052B  3400               	retlw	0
   628  052C  3464               	retlw	100
   629  052D  3400               	retlw	0
   630  052E  34E8               	retlw	232
   631  052F  3403               	retlw	3
   632  0530  3410               	retlw	16
   633  0531  3427               	retlw	39
   634  0532                     __end_of_dpowers:	
   635  000B                     _INTCONbits	set	11
   636  000F                     _PORTD	set	15
   637  000E                     _PORTC	set	14
   638  0011                     _TRISA	set	17
   639  000C                     _PORTA	set	12
   640  0016                     _LATAbits	set	22
   641  000F                     _PORTDbits	set	15
   642  000E                     _PORTCbits	set	14
   643  0014                     _TRISDbits	set	20
   644  0013                     _TRISCbits	set	19
   645  020C                     _TMR1	set	524
   646  0211                     _T1CLKbits	set	529
   647  020E                     _T1CONbits	set	526
   648  071A                     _PIE4bits	set	1818
   649  0710                     _PIR4bits	set	1808
   650  0893                     _OSCFRQbits	set	2195
   651  1F59                     _ANSELD	set	8025
   652  1F4E                     _ANSELC	set	8014
   653  1F38                     _ANSELA	set	7992
   654  0532                     STR_1:	
   655  0532  3420               	retlw	32	;' '
   656  0533  3420               	retlw	32	;' '
   657  0534  3420               	retlw	32	;' '
   658  0535  3420               	retlw	32	;' '
   659  0536  3425               	retlw	37	;'%'
   660  0537  3464               	retlw	100	;'d'
   661  0538  343A               	retlw	58	;':'
   662  0539  3425               	retlw	37	;'%'
   663  053A  3464               	retlw	100	;'d'
   664  053B  343A               	retlw	58	;':'
   665  053C  3425               	retlw	37	;'%'
   666  053D  3464               	retlw	100	;'d'
   667  053E  3400               	retlw	0
   668                           
   669                           	psect	stringtext2
   670  053F                     __pstringtext2:	
   671  053F                     STR_2:	
   672  053F  344D               	retlw	77	;'M'
   673  0540  3465               	retlw	101	;'e'
   674  0541  3463               	retlw	99	;'c'
   675  0542  3461               	retlw	97	;'a'
   676  0543  3474               	retlw	116	;'t'
   677  0544  3472               	retlw	114	;'r'
   678  0545  346F               	retlw	111	;'o'
   679  0546  346E               	retlw	110	;'n'
   680  0547  3469               	retlw	105	;'i'
   681  0548  3463               	retlw	99	;'c'
   682  0549  3461               	retlw	97	;'a'
   683  054A  3400               	retlw	0
   684                           
   685                           	psect	stringtext3
   686  0000                     __pstringtext3:	
   687                           
   688                           ; #config settings
   689  0000                     
   690                           	psect	cinit
   691  00A4                     start_initialization:	
   692  00A4                     __initialization:	
   693                           
   694                           ; Initialize objects allocated to BANK0
   695  00A4  304B               	movlw	low __pidataBANK0
   696  00A5  0084               	movwf	4
   697  00A6  3085               	movlw	(high __pidataBANK0)| (0+128)
   698  00A7  0085               	movwf	5
   699  00A8  0012               	moviw fsr0++
   700  00A9  00D4               	movwf	__pdataBANK0& (0+127)
   701  00AA  0012               	moviw fsr0++
   702  00AB  00D5               	movwf	(__pdataBANK0+1)& (0+127)
   703  00AC  0012               	moviw fsr0++
   704  00AD  00D6               	movwf	(__pdataBANK0+2)& (0+127)
   705  00AE  0012               	moviw fsr0++
   706  00AF  00D7               	movwf	(__pdataBANK0+3)& (0+127)
   707  00B0  0012               	moviw fsr0++
   708  00B1  00D8               	movwf	(__pdataBANK0+4)& (0+127)
   709  00B2  0012               	moviw fsr0++
   710  00B3  00D9               	movwf	(__pdataBANK0+5)& (0+127)
   711                           
   712                           ; Clear objects allocated to BANK0
   713  00B4  3040               	movlw	low __pbssBANK0
   714  00B5  0084               	movwf	4
   715  00B6  3000               	movlw	high __pbssBANK0
   716  00B7  0085               	movwf	5
   717  00B8  3014               	movlw	20
   718  00B9  3185  2551         	fcall	clear_ram0
   719  00BB                     end_of_initialization:	
   720                           ;End of C runtime variable initialization code
   721                           
   722  00BB                     __end_of__initialization:	
   723  00BB  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
   724  00BC  0140               	movlb	0
   725  00BD  3184  2C02         	ljmp	_main	;jump to C main() function
   726                           
   727                           	psect	bssBANK0
   728  0040                     __pbssBANK0:	
   729  0040                     _conts:	
   730  0040                     	ds	2
   731  0042                     _contint:	
   732  0042                     	ds	2
   733  0044                     _buffer1:	
   734  0044                     	ds	16
   735                           
   736                           	psect	dataBANK0
   737  0054                     __pdataBANK0:	
   738  0054                     _precarga:	
   739  0054                     	ds	2
   740  0056                     _conthr:	
   741  0056                     	ds	2
   742  0058                     _contmin:	
   743  0058                     	ds	2
   744                           
   745                           	psect	clrtext
   746  0551                     clear_ram0:	
   747                           ;	Called with FSR0 containing the base address, and
   748                           ;	WREG with the size to clear
   749                           
   750  0551  0064               	clrwdt	;clear the watchdog before getting into this loop
   751  0552                     clrloop0:	
   752  0552  0180               	clrf	0	;clear RAM location pointed to by FSR
   753  0553  3101               	addfsr 0,1
   754  0554  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
   755  0555  2D52               	goto	clrloop0	;have we reached the end yet?
   756  0556  3400               	retlw	0	;all done for this memory range, return
   757                           
   758                           	psect	cstackCOMMON
   759  0070                     __pcstackCOMMON:	
   760  0070                     ?_Lcd_Cmd:	
   761  0070                     ?_Lcd_Chr_CP:	
   762                           ; 1 bytes @ 0x0
   763                           
   764  0070                     ??_Lcd_Chr_CP:	
   765                           ; 1 bytes @ 0x0
   766                           
   767  0070                     ?_Lcd_Init:	
   768                           ; 1 bytes @ 0x0
   769                           
   770  0070                     ?_bum:	
   771                           ; 1 bytes @ 0x0
   772                           
   773  0070                     ?_interrupcion:	
   774                           ; 1 bytes @ 0x0
   775                           
   776  0070                     ?i1_Lcd_Cmd:	
   777                           ; 1 bytes @ 0x0
   778                           
   779  0070                     ??i1_Lcd_Cmd:	
   780                           ; 1 bytes @ 0x0
   781                           
   782  0070                     ?___lwdiv:	
   783                           ; 1 bytes @ 0x0
   784                           
   785  0070                     bum@hr:	
   786                           ; 2 bytes @ 0x0
   787                           
   788  0070                     ___lwdiv@divisor:	
   789                           ; 2 bytes @ 0x0
   790                           
   791                           
   792                           ; 2 bytes @ 0x0
   793  0070                     	ds	2
   794  0072                     Lcd_Chr_CP@data:	
   795  0072                     i1Lcd_Cmd@data:	
   796                           ; 1 bytes @ 0x2
   797                           
   798  0072                     bum@min:	
   799                           ; 1 bytes @ 0x2
   800                           
   801  0072                     ___lwdiv@dividend:	
   802                           ; 2 bytes @ 0x2
   803                           
   804                           
   805                           ; 2 bytes @ 0x2
   806  0072                     	ds	1
   807  0073                     ?_Lcd_Out:	
   808  0073                     ?_Lcd_Out2:	
   809                           ; 1 bytes @ 0x3
   810                           
   811  0073                     Lcd_Out@x:	
   812                           ; 1 bytes @ 0x3
   813                           
   814  0073                     Lcd_Out2@x:	
   815                           ; 1 bytes @ 0x3
   816                           
   817                           
   818                           ; 1 bytes @ 0x3
   819  0073                     	ds	1
   820  0074                     ??___lwdiv:	
   821  0074                     Lcd_Out2@buffer:	
   822                           ; 1 bytes @ 0x4
   823                           
   824  0074                     Lcd_Out@buffer:	
   825                           ; 1 bytes @ 0x4
   826                           
   827  0074                     bum@seg:	
   828                           ; 2 bytes @ 0x4
   829                           
   830                           
   831                           ; 2 bytes @ 0x4
   832  0074                     	ds	1
   833  0075                     ??_Lcd_Out2:	
   834  0075                     ___lwdiv@quotient:	
   835                           ; 1 bytes @ 0x5
   836                           
   837                           
   838                           ; 2 bytes @ 0x5
   839  0075                     	ds	1
   840  0076                     ??_Lcd_Out:	
   841  0076                     ??_bum:	
   842                           ; 1 bytes @ 0x6
   843                           
   844  0076                     Lcd_Out2@y:	
   845                           ; 1 bytes @ 0x6
   846                           
   847                           
   848                           ; 1 bytes @ 0x6
   849  0076                     	ds	1
   850  0077                     Lcd_Out@y:	
   851  0077                     Lcd_Out2@data:	
   852                           ; 1 bytes @ 0x7
   853                           
   854  0077                     ___lwdiv@counter:	
   855                           ; 1 bytes @ 0x7
   856                           
   857                           
   858                           ; 1 bytes @ 0x7
   859  0077                     	ds	1
   860  0078                     ?___lwmod:	
   861  0078                     Lcd_Out@data:	
   862                           ; 2 bytes @ 0x8
   863                           
   864  0078                     ___lwmod@divisor:	
   865                           ; 1 bytes @ 0x8
   866                           
   867                           
   868                           ; 2 bytes @ 0x8
   869  0078                     	ds	2
   870  007A                     ___lwmod@dividend:	
   871                           
   872                           ; 2 bytes @ 0xA
   873  007A                     	ds	2
   874  007C                     ??___lwmod:	
   875                           
   876                           ; 1 bytes @ 0xC
   877  007C                     	ds	1
   878  007D                     ___lwmod@counter:	
   879                           
   880                           ; 1 bytes @ 0xD
   881  007D                     	ds	1
   882                           
   883                           	psect	cstackBANK0
   884  0020                     __pcstackBANK0:	
   885  0020                     ?_sprintf:	
   886  0020                     sprintf@f:	
   887                           ; 2 bytes @ 0x0
   888                           
   889                           
   890                           ; 2 bytes @ 0x0
   891  0020                     	ds	8
   892  0028                     ??_sprintf:	
   893                           
   894                           ; 1 bytes @ 0x8
   895  0028                     	ds	4
   896  002C                     sprintf@ap:	
   897                           
   898                           ; 1 bytes @ 0xC
   899  002C                     	ds	1
   900  002D                     sprintf@flag:	
   901                           
   902                           ; 1 bytes @ 0xD
   903  002D                     	ds	1
   904  002E                     sprintf@prec:	
   905                           
   906                           ; 1 bytes @ 0xE
   907  002E                     	ds	1
   908  002F                     sprintf@val:	
   909                           
   910                           ; 2 bytes @ 0xF
   911  002F                     	ds	2
   912  0031                     sprintf@sp:	
   913                           
   914                           ; 1 bytes @ 0x11
   915  0031                     	ds	1
   916  0032                     sprintf@c:	
   917                           
   918                           ; 1 bytes @ 0x12
   919  0032                     	ds	1
   920  0033                     ??_interrupcion:	
   921                           
   922                           ; 1 bytes @ 0x13
   923  0033                     	ds	2
   924  0035                     ??_Lcd_Cmd:	
   925                           
   926                           ; 1 bytes @ 0x15
   927  0035                     	ds	2
   928  0037                     Lcd_Cmd@data:	
   929                           
   930                           ; 1 bytes @ 0x17
   931  0037                     	ds	1
   932  0038                     ??_Lcd_Init:	
   933                           
   934                           ; 1 bytes @ 0x18
   935  0038                     	ds	1
   936  0039                     Lcd_Init@data:	
   937                           
   938                           ; 1 bytes @ 0x19
   939  0039                     	ds	1
   940  003A                     ?_main:	
   941  003A                     main@argc:	
   942                           ; 2 bytes @ 0x1A
   943                           
   944                           
   945                           ; 2 bytes @ 0x1A
   946  003A                     	ds	2
   947  003C                     main@argv:	
   948                           
   949                           ; 2 bytes @ 0x1C
   950  003C                     	ds	2
   951  003E                     ??_main:	
   952                           
   953                           ; 1 bytes @ 0x1E
   954  003E                     	ds	2
   955                           
   956                           	psect	maintext
   957  0402                     __pmaintext:	
   958 ;;
   959 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   960 ;;
   961 ;; *************** function _main *****************
   962 ;; Defined at:
   963 ;;		line 59 in file "main.c"
   964 ;; Parameters:    Size  Location     Type
   965 ;;  argc            2   26[BANK0 ] int 
   966 ;;  argv            2   28[BANK0 ] PTR PTR unsigned char 
   967 ;; Auto vars:     Size  Location     Type
   968 ;;		None
   969 ;; Return value:  Size  Location     Type
   970 ;;                  2   26[BANK0 ] int 
   971 ;; Registers used:
   972 ;;		wreg, status,2, status,0, pclath, cstack
   973 ;; Tracked objects:
   974 ;;		On entry : B3F/0
   975 ;;		On exit  : 0/0
   976 ;;		Unchanged: 0/0
   977 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
   978 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
   979 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
   980 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
   981 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
   982 ;;Total ram usage:        6 bytes
   983 ;; Hardware stack levels required when called:    5
   984 ;; This function calls:
   985 ;;		_Lcd_Cmd
   986 ;;		_Lcd_Init
   987 ;; This function is called by:
   988 ;;		Startup code after reset
   989 ;; This function uses a non-reentrant model
   990 ;;
   991                           
   992                           
   993                           ;psect for function _main
   994  0402                     _main:	
   995                           
   996                           ;main.c: 60: OSCFRQbits.HFFRQ=0b110;
   997                           
   998                           ;incstack = 0
   999                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
  1000  0402  0151               	movlb	17	; select bank17
  1001  0403  0813               	movf	19,w	;volatile
  1002  0404  39F8               	andlw	-8
  1003  0405  3806               	iorlw	6
  1004  0406  0093               	movwf	19	;volatile
  1005                           
  1006                           ;main.c: 62: PORTA=0;
  1007  0407  0140               	movlb	0	; select bank0
  1008  0408  018C               	clrf	12	;volatile
  1009                           
  1010                           ;main.c: 63: ANSELA=0;
  1011  0409  017E               	movlb	62	; select bank62
  1012  040A  01B8               	clrf	56	;volatile
  1013                           
  1014                           ;main.c: 64: TRISA=0;
  1015  040B  0140               	movlb	0	; select bank0
  1016  040C  0191               	clrf	17	;volatile
  1017                           
  1018                           ;main.c: 66: PORTC=0;
  1019  040D  018E               	clrf	14	;volatile
  1020                           
  1021                           ;main.c: 67: PORTD=0;
  1022  040E  018F               	clrf	15	;volatile
  1023                           
  1024                           ;main.c: 68: ANSELC=0b00000000;
  1025  040F  017E               	movlb	62	; select bank62
  1026  0410  01CE               	clrf	78	;volatile
  1027                           
  1028                           ;main.c: 69: ANSELD=0b00000000;
  1029  0411  01D9               	clrf	89	;volatile
  1030                           
  1031                           ;main.c: 71: PIR4bits.TMR1IF=0;
  1032  0412  014E               	movlb	14	; select bank14
  1033  0413  1010               	bcf	16,0	;volatile
  1034                           
  1035                           ;main.c: 72: PIE4bits.TMR1IE=1;
  1036  0414  141A               	bsf	26,0	;volatile
  1037                           
  1038                           ;main.c: 73: INTCONbits.GIE=1;
  1039  0415  178B               	bsf	11,7	;volatile
  1040                           
  1041                           ;main.c: 74: INTCONbits.PEIE=1;
  1042  0416  170B               	bsf	11,6	;volatile
  1043                           
  1044                           ;main.c: 75: PIE4bits.TMR1IE=1;
  1045  0417  141A               	bsf	26,0	;volatile
  1046                           
  1047                           ;main.c: 77: T1CONbits.CKPS=0b11;
  1048  0418  3030               	movlw	48
  1049  0419  0144               	movlb	4	; select bank4
  1050  041A  048E               	iorwf	14,f	;volatile
  1051                           
  1052                           ;main.c: 78: T1CLKbits.CS=0b0001;
  1053  041B  0811               	movf	17,w	;volatile
  1054  041C  39F0               	andlw	-16
  1055  041D  3801               	iorlw	1
  1056  041E  0091               	movwf	17	;volatile
  1057                           
  1058                           ;main.c: 79: T1CONbits.nSYNC=1;
  1059  041F  150E               	bsf	14,2	;volatile
  1060                           
  1061                           ;main.c: 80: TMR1=precarga;
  1062  0420  0140               	movlb	0	; select bank0
  1063  0421  0855               	movf	_precarga+1,w
  1064  0422  0144               	movlb	4	; select bank4
  1065  0423  008D               	movwf	13	;volatile
  1066  0424  0140               	movlb	0	; select bank0
  1067  0425  0854               	movf	_precarga,w
  1068  0426  0144               	movlb	4	; select bank4
  1069  0427  008C               	movwf	12	;volatile
  1070                           
  1071                           ;main.c: 81: T1CONbits.ON=1;
  1072  0428  140E               	bsf	14,0	;volatile
  1073                           
  1074                           ;main.c: 90: Lcd_Init();
  1075  0429  3181  218C  3184   	fcall	_Lcd_Init
  1076                           
  1077                           ;main.c: 91: Lcd_Cmd(1);
  1078  042C  3001               	movlw	1
  1079  042D  3182  22D4  3184   	fcall	_Lcd_Cmd
  1080                           
  1081                           ;main.c: 92: Lcd_Cmd(12);
  1082  0430  300C               	movlw	12
  1083  0431  3182  22D4  3184   	fcall	_Lcd_Cmd
  1084                           
  1085                           ;main.c: 93: _delay((unsigned long)((1000)*(32000000/4000.0)));
  1086  0434  3029               	movlw	41
  1087  0435  0140               	movlb	0	; select bank0
  1088  0436  00BF               	movwf	??_main+1
  1089  0437  3096               	movlw	150
  1090  0438  00BE               	movwf	??_main
  1091  0439  307F               	movlw	127
  1092  043A                     u1077:	
  1093  043A  0B89               	decfsz	9,f
  1094  043B  2C3A               	goto	u1077
  1095  043C  0BBE               	decfsz	??_main,f
  1096  043D  2C3A               	goto	u1077
  1097  043E  0BBF               	decfsz	??_main+1,f
  1098  043F  2C3A               	goto	u1077
  1099  0440                     l117:	
  1100                           ;main.c: 95: while(1){
  1101                           
  1102  0440  2C40               	goto	l117
  1103  0441                     __end_of_main:	
  1104                           ;main.c: 100: }
  1105                           ;main.c: 101: return (0);
  1106                           ;	Return value of _main is never used
  1107                           
  1108                           
  1109                           	psect	text1
  1110  018C                     __ptext1:	
  1111 ;; *************** function _Lcd_Init *****************
  1112 ;; Defined at:
  1113 ;;		line 52 in file "flex_lcd.h"
  1114 ;; Parameters:    Size  Location     Type
  1115 ;;		None
  1116 ;; Auto vars:     Size  Location     Type
  1117 ;;  data            1   25[BANK0 ] unsigned char 
  1118 ;; Return value:  Size  Location     Type
  1119 ;;                  1    wreg      void 
  1120 ;; Registers used:
  1121 ;;		wreg, status,2, status,0, pclath, cstack
  1122 ;; Tracked objects:
  1123 ;;		On entry : 0/0
  1124 ;;		On exit  : 0/0
  1125 ;;		Unchanged: 0/0
  1126 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
  1127 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  1128 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  1129 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  1130 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  1131 ;;Total ram usage:        2 bytes
  1132 ;; Hardware stack levels used:    1
  1133 ;; Hardware stack levels required when called:    4
  1134 ;; This function calls:
  1135 ;;		_Lcd_Cmd
  1136 ;; This function is called by:
  1137 ;;		_main
  1138 ;; This function uses a non-reentrant model
  1139 ;;
  1140                           
  1141                           
  1142                           ;psect for function _Lcd_Init
  1143  018C                     _Lcd_Init:	
  1144                           
  1145                           ;flex_lcd.h: 53: unsigned char data;
  1146                           ;flex_lcd.h: 54: TRISCbits.TRISC1 = 0;
  1147                           
  1148                           ;incstack = 0
  1149                           ; Regs used in _Lcd_Init: [wreg+status,2+status,0+pclath+cstack]
  1150  018C  0140               	movlb	0	; select bank0
  1151  018D  1093               	bcf	19,1	;volatile
  1152                           
  1153                           ;flex_lcd.h: 55: TRISCbits.TRISC2 = 0;
  1154  018E  1113               	bcf	19,2	;volatile
  1155                           
  1156                           ;flex_lcd.h: 56: TRISDbits.TRISD0 = 0;
  1157  018F  1014               	bcf	20,0	;volatile
  1158                           
  1159                           ;flex_lcd.h: 57: TRISDbits.TRISD1 = 0;
  1160  0190  1094               	bcf	20,1	;volatile
  1161                           
  1162                           ;flex_lcd.h: 58: TRISDbits.TRISD3 = 0;
  1163  0191  1194               	bcf	20,3	;volatile
  1164                           
  1165                           ;flex_lcd.h: 59: TRISDbits.TRISD2 = 0;
  1166  0192  1114               	bcf	20,2	;volatile
  1167                           
  1168                           ;flex_lcd.h: 60: PORTCbits.RC1 = 0;
  1169  0193  108E               	bcf	14,1	;volatile
  1170                           
  1171                           ;flex_lcd.h: 61: PORTCbits.RC2 = 0;
  1172  0194  110E               	bcf	14,2	;volatile
  1173                           
  1174                           ;flex_lcd.h: 62: PORTDbits.RD0 = 0;
  1175  0195  100F               	bcf	15,0	;volatile
  1176                           
  1177                           ;flex_lcd.h: 63: PORTDbits.RD1 = 0;
  1178  0196  108F               	bcf	15,1	;volatile
  1179                           
  1180                           ;flex_lcd.h: 64: PORTDbits.RD3 = 0;
  1181  0197  118F               	bcf	15,3	;volatile
  1182                           
  1183                           ;flex_lcd.h: 65: PORTDbits.RD2 = 0;
  1184  0198  110F               	bcf	15,2	;volatile
  1185                           
  1186                           ;flex_lcd.h: 66: _delay((unsigned long)((5500)*(32000000/4000000.0)));
  1187  0199  303A               	movlw	58
  1188  019A  0140               	movlb	0	; select bank0
  1189  019B  00B8               	movwf	??_Lcd_Init
  1190  019C  3023               	movlw	35
  1191  019D                     u1087:	
  1192  019D  0B89               	decfsz	9,f
  1193  019E  299D               	goto	u1087
  1194  019F  0BB8               	decfsz	??_Lcd_Init,f
  1195  01A0  299D               	goto	u1087
  1196                           
  1197                           ;flex_lcd.h: 67: _delay((unsigned long)((5500)*(32000000/4000000.0)));
  1198  01A1  303A               	movlw	58
  1199  01A2  0140               	movlb	0	; select bank0
  1200  01A3  00B8               	movwf	??_Lcd_Init
  1201  01A4  3023               	movlw	35
  1202  01A5                     u1097:	
  1203  01A5  0B89               	decfsz	9,f
  1204  01A6  29A5               	goto	u1097
  1205  01A7  0BB8               	decfsz	??_Lcd_Init,f
  1206  01A8  29A5               	goto	u1097
  1207                           
  1208                           ;flex_lcd.h: 68: _delay((unsigned long)((5500)*(32000000/4000000.0)));
  1209  01A9  303A               	movlw	58
  1210  01AA  0140               	movlb	0	; select bank0
  1211  01AB  00B8               	movwf	??_Lcd_Init
  1212  01AC  3023               	movlw	35
  1213  01AD                     u1107:	
  1214  01AD  0B89               	decfsz	9,f
  1215  01AE  29AD               	goto	u1107
  1216  01AF  0BB8               	decfsz	??_Lcd_Init,f
  1217  01B0  29AD               	goto	u1107
  1218                           
  1219                           ;flex_lcd.h: 69: _delay((unsigned long)((5500)*(32000000/4000000.0)));
  1220  01B1  303A               	movlw	58
  1221  01B2  0140               	movlb	0	; select bank0
  1222  01B3  00B8               	movwf	??_Lcd_Init
  1223  01B4  3023               	movlw	35
  1224  01B5                     u1117:	
  1225  01B5  0B89               	decfsz	9,f
  1226  01B6  29B5               	goto	u1117
  1227  01B7  0BB8               	decfsz	??_Lcd_Init,f
  1228  01B8  29B5               	goto	u1117
  1229                           
  1230                           ;flex_lcd.h: 70: _delay((unsigned long)((5500)*(32000000/4000000.0)));
  1231  01B9  303A               	movlw	58
  1232  01BA  0140               	movlb	0	; select bank0
  1233  01BB  00B8               	movwf	??_Lcd_Init
  1234  01BC  3023               	movlw	35
  1235  01BD                     u1127:	
  1236  01BD  0B89               	decfsz	9,f
  1237  01BE  29BD               	goto	u1127
  1238  01BF  0BB8               	decfsz	??_Lcd_Init,f
  1239  01C0  29BD               	goto	u1127
  1240                           
  1241                           ;flex_lcd.h: 71: _delay((unsigned long)((5500)*(32000000/4000000.0)));
  1242  01C1  303A               	movlw	58
  1243  01C2  0140               	movlb	0	; select bank0
  1244  01C3  00B8               	movwf	??_Lcd_Init
  1245  01C4  3023               	movlw	35
  1246  01C5                     u1137:	
  1247  01C5  0B89               	decfsz	9,f
  1248  01C6  29C5               	goto	u1137
  1249  01C7  0BB8               	decfsz	??_Lcd_Init,f
  1250  01C8  29C5               	goto	u1137
  1251                           
  1252                           ;flex_lcd.h: 72: for(data = 1; data < 4; data ++)
  1253  01C9  0140               	movlb	0	; select bank0
  1254  01CA  01B9               	clrf	Lcd_Init@data
  1255  01CB  0AB9               	incf	Lcd_Init@data,f
  1256  01CC  3004               	movlw	4
  1257  01CD  0239               	subwf	Lcd_Init@data,w
  1258  01CE  1803               	btfsc	3,0
  1259  01CF  29F8               	goto	l50
  1260  01D0                     l49:	
  1261                           
  1262                           ;flex_lcd.h: 73: {
  1263                           ;flex_lcd.h: 74: PORTCbits.RC1 = 0; PORTCbits.RC2 = 0; PORTDbits.RD0 = 1; PORTDbits.RD1 
      +                          = 1; PORTDbits.RD3 = 0;
  1264  01D0  108E               	bcf	14,1	;volatile
  1265  01D1  110E               	bcf	14,2	;volatile
  1266  01D2  140F               	bsf	15,0	;volatile
  1267  01D3  148F               	bsf	15,1	;volatile
  1268  01D4  118F               	bcf	15,3	;volatile
  1269                           
  1270                           ;flex_lcd.h: 75: PORTDbits.RD2 = 0; PORTCbits.RC1 = 0; PORTCbits.RC2 = 0; PORTDbits.RD0 
      +                          = 1; PORTDbits.RD1 = 1;
  1271  01D5  110F               	bcf	15,2	;volatile
  1272  01D6  108E               	bcf	14,1	;volatile
  1273  01D7  110E               	bcf	14,2	;volatile
  1274  01D8  140F               	bsf	15,0	;volatile
  1275  01D9  148F               	bsf	15,1	;volatile
  1276                           
  1277                           ;flex_lcd.h: 76: PORTDbits.RD3 = 1; PORTDbits.RD2 = 0;
  1278  01DA  158F               	bsf	15,3	;volatile
  1279  01DB  110F               	bcf	15,2	;volatile
  1280                           
  1281                           ;flex_lcd.h: 77: _delay((unsigned long)((5)*(32000000/4000000.0)));
  1282  01DC  300D               	movlw	13
  1283  01DD                     u1147:	
  1284  01DD  0B89               	decfsz	9,f
  1285  01DE  29DD               	goto	u1147
  1286  01DF  0000               	nop
  1287                           
  1288                           ;flex_lcd.h: 78: PORTCbits.RC1 = 0; PORTCbits.RC2 = 0; PORTDbits.RD0 = 1; PORTDbits.RD1 
      +                          = 1; PORTDbits.RD3 = 0;
  1289  01E0  0140               	movlb	0	; select bank0
  1290  01E1  108E               	bcf	14,1	;volatile
  1291  01E2  110E               	bcf	14,2	;volatile
  1292  01E3  140F               	bsf	15,0	;volatile
  1293  01E4  148F               	bsf	15,1	;volatile
  1294  01E5  118F               	bcf	15,3	;volatile
  1295                           
  1296                           ;flex_lcd.h: 79: PORTDbits.RD2 = 0;
  1297  01E6  110F               	bcf	15,2	;volatile
  1298                           
  1299                           ;flex_lcd.h: 80: _delay((unsigned long)((5500)*(32000000/4000000.0)));
  1300  01E7  303A               	movlw	58
  1301  01E8  0140               	movlb	0	; select bank0
  1302  01E9  00B8               	movwf	??_Lcd_Init
  1303  01EA  3023               	movlw	35
  1304  01EB                     u1157:	
  1305  01EB  0B89               	decfsz	9,f
  1306  01EC  29EB               	goto	u1157
  1307  01ED  0BB8               	decfsz	??_Lcd_Init,f
  1308  01EE  29EB               	goto	u1157
  1309  01EF  3001               	movlw	1
  1310  01F0  0140               	movlb	0	; select bank0
  1311  01F1  00B8               	movwf	??_Lcd_Init
  1312  01F2  0838               	movf	??_Lcd_Init,w
  1313  01F3  07B9               	addwf	Lcd_Init@data,f
  1314  01F4  3004               	movlw	4
  1315  01F5  0239               	subwf	Lcd_Init@data,w
  1316  01F6  1C03               	skipc
  1317  01F7  29D0               	goto	l49
  1318  01F8                     l50:	
  1319                           
  1320                           ;flex_lcd.h: 81: }
  1321                           ;flex_lcd.h: 82: PORTCbits.RC1 = 0; PORTCbits.RC2 = 0; PORTDbits.RD0 = 1; PORTDbits.RD1 
      +                          = 0; PORTDbits.RD3 = 0; PORTDbits.RD2 = 0;
  1322  01F8  108E               	bcf	14,1	;volatile
  1323  01F9  110E               	bcf	14,2	;volatile
  1324  01FA  140F               	bsf	15,0	;volatile
  1325  01FB  108F               	bcf	15,1	;volatile
  1326  01FC  118F               	bcf	15,3	;volatile
  1327  01FD  110F               	bcf	15,2	;volatile
  1328                           
  1329                           ;flex_lcd.h: 83: PORTCbits.RC1 = 0; PORTCbits.RC2 = 0; PORTDbits.RD0 = 1; PORTDbits.RD1 
      +                          = 0; PORTDbits.RD3 = 1; PORTDbits.RD2 = 0;
  1330  01FE  108E               	bcf	14,1	;volatile
  1331  01FF  110E               	bcf	14,2	;volatile
  1332  0200  140F               	bsf	15,0	;volatile
  1333  0201  108F               	bcf	15,1	;volatile
  1334  0202  158F               	bsf	15,3	;volatile
  1335  0203  110F               	bcf	15,2	;volatile
  1336                           
  1337                           ;flex_lcd.h: 84: _delay((unsigned long)((5)*(32000000/4000000.0)));
  1338  0204  300D               	movlw	13
  1339  0205                     u1167:	
  1340  0205  0B89               	decfsz	9,f
  1341  0206  2A05               	goto	u1167
  1342  0207  0000               	nop
  1343                           
  1344                           ;flex_lcd.h: 85: PORTCbits.RC1 = 0; PORTCbits.RC2 = 0; PORTDbits.RD0 = 1; PORTDbits.RD1 
      +                          = 0; PORTDbits.RD3 = 0; PORTDbits.RD2 = 0;
  1345  0208  0140               	movlb	0	; select bank0
  1346  0209  108E               	bcf	14,1	;volatile
  1347  020A  110E               	bcf	14,2	;volatile
  1348  020B  140F               	bsf	15,0	;volatile
  1349  020C  108F               	bcf	15,1	;volatile
  1350  020D  118F               	bcf	15,3	;volatile
  1351  020E  110F               	bcf	15,2	;volatile
  1352                           
  1353                           ;flex_lcd.h: 86: _delay((unsigned long)((5500)*(32000000/4000000.0)));
  1354  020F  303A               	movlw	58
  1355  0210  0140               	movlb	0	; select bank0
  1356  0211  00B8               	movwf	??_Lcd_Init
  1357  0212  3023               	movlw	35
  1358  0213                     u1177:	
  1359  0213  0B89               	decfsz	9,f
  1360  0214  2A13               	goto	u1177
  1361  0215  0BB8               	decfsz	??_Lcd_Init,f
  1362  0216  2A13               	goto	u1177
  1363                           
  1364                           ;flex_lcd.h: 87: data = 40; Lcd_Cmd(data);
  1365  0217  3028               	movlw	40
  1366  0218  0140               	movlb	0	; select bank0
  1367  0219  00B8               	movwf	??_Lcd_Init
  1368  021A  0838               	movf	??_Lcd_Init,w
  1369  021B  00B9               	movwf	Lcd_Init@data
  1370  021C  0839               	movf	Lcd_Init@data,w
  1371  021D  3182  22D4  3181   	fcall	_Lcd_Cmd
  1372                           
  1373                           ;flex_lcd.h: 88: data = 16; Lcd_Cmd(data);
  1374  0220  3010               	movlw	16
  1375  0221  0140               	movlb	0	; select bank0
  1376  0222  00B8               	movwf	??_Lcd_Init
  1377  0223  0838               	movf	??_Lcd_Init,w
  1378  0224  00B9               	movwf	Lcd_Init@data
  1379  0225  0839               	movf	Lcd_Init@data,w
  1380  0226  3182  22D4  3181   	fcall	_Lcd_Cmd
  1381                           
  1382                           ;flex_lcd.h: 89: data = 1; Lcd_Cmd(data);
  1383  0229  0140               	movlb	0	; select bank0
  1384  022A  01B9               	clrf	Lcd_Init@data
  1385  022B  0AB9               	incf	Lcd_Init@data,f
  1386  022C  0839               	movf	Lcd_Init@data,w
  1387  022D  3182  22D4  3181   	fcall	_Lcd_Cmd
  1388                           
  1389                           ;flex_lcd.h: 90: data = 15; Lcd_Cmd(data);
  1390  0230  300F               	movlw	15
  1391  0231  0140               	movlb	0	; select bank0
  1392  0232  00B8               	movwf	??_Lcd_Init
  1393  0233  0838               	movf	??_Lcd_Init,w
  1394  0234  00B9               	movwf	Lcd_Init@data
  1395  0235  0839               	movf	Lcd_Init@data,w
  1396  0236  3182  22D4         	fcall	_Lcd_Cmd
  1397  0238  0008               	return
  1398  0239                     __end_of_Lcd_Init:	
  1399                           
  1400                           	psect	text2
  1401  02D4                     __ptext2:	
  1402 ;; *************** function _Lcd_Cmd *****************
  1403 ;; Defined at:
  1404 ;;		line 150 in file "flex_lcd.h"
  1405 ;; Parameters:    Size  Location     Type
  1406 ;;  data            1    wreg     unsigned char 
  1407 ;; Auto vars:     Size  Location     Type
  1408 ;;  data            1   23[BANK0 ] unsigned char 
  1409 ;; Return value:  Size  Location     Type
  1410 ;;                  1    wreg      void 
  1411 ;; Registers used:
  1412 ;;		wreg, status,2, status,0
  1413 ;; Tracked objects:
  1414 ;;		On entry : 0/0
  1415 ;;		On exit  : 0/0
  1416 ;;		Unchanged: 0/0
  1417 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
  1418 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  1419 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  1420 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  1421 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  1422 ;;Total ram usage:        3 bytes
  1423 ;; Hardware stack levels used:    1
  1424 ;; Hardware stack levels required when called:    3
  1425 ;; This function calls:
  1426 ;;		Nothing
  1427 ;; This function is called by:
  1428 ;;		_Lcd_Init
  1429 ;;		_main
  1430 ;; This function uses a non-reentrant model
  1431 ;;
  1432                           
  1433                           
  1434                           ;psect for function _Lcd_Cmd
  1435  02D4                     _Lcd_Cmd:	
  1436                           
  1437                           ;incstack = 0
  1438                           ; Regs used in _Lcd_Cmd: [wreg+status,2+status,0]
  1439                           ;Lcd_Cmd@data stored from wreg
  1440  02D4  0140               	movlb	0	; select bank0
  1441  02D5  00B7               	movwf	Lcd_Cmd@data
  1442                           
  1443                           ;flex_lcd.h: 151: PORTDbits.RD3 = 0; PORTDbits.RD2 = 0;
  1444  02D6  118F               	bcf	15,3	;volatile
  1445  02D7  110F               	bcf	15,2	;volatile
  1446                           
  1447                           ;flex_lcd.h: 152: PORTCbits.RC1 = (data & 0b10000000)>>7; PORTCbits.RC2 = (data & 0b0100
      +                          0000)>>6;
  1448  02D8  0837               	movf	Lcd_Cmd@data,w
  1449  02D9  00B5               	movwf	??_Lcd_Cmd
  1450  02DA  3007               	movlw	7
  1451  02DB                     u545:	
  1452  02DB  36B5               	lsrf	??_Lcd_Cmd,f
  1453  02DC  0B89               	decfsz	9,f
  1454  02DD  2ADB               	goto	u545
  1455  02DE  0835               	movf	??_Lcd_Cmd,w
  1456  02DF  3901               	andlw	1
  1457  02E0  00B6               	movwf	??_Lcd_Cmd+1
  1458  02E1  0DB6               	rlf	??_Lcd_Cmd+1,f
  1459  02E2  080E               	movf	14,w	;volatile
  1460  02E3  0636               	xorwf	??_Lcd_Cmd+1,w
  1461  02E4  39FD               	andlw	-3
  1462  02E5  0636               	xorwf	??_Lcd_Cmd+1,w
  1463  02E6  008E               	movwf	14	;volatile
  1464  02E7  0837               	movf	Lcd_Cmd@data,w
  1465  02E8  00B5               	movwf	??_Lcd_Cmd
  1466  02E9  3006               	movlw	6
  1467  02EA                     u555:	
  1468  02EA  36B5               	lsrf	??_Lcd_Cmd,f
  1469  02EB  0B89               	decfsz	9,f
  1470  02EC  2AEA               	goto	u555
  1471  02ED  0835               	movf	??_Lcd_Cmd,w
  1472  02EE  3901               	andlw	1
  1473  02EF  00B6               	movwf	??_Lcd_Cmd+1
  1474  02F0  0DB6               	rlf	??_Lcd_Cmd+1,f
  1475  02F1  0DB6               	rlf	??_Lcd_Cmd+1,f
  1476  02F2  080E               	movf	14,w	;volatile
  1477  02F3  0636               	xorwf	??_Lcd_Cmd+1,w
  1478  02F4  39FB               	andlw	-5
  1479  02F5  0636               	xorwf	??_Lcd_Cmd+1,w
  1480  02F6  008E               	movwf	14	;volatile
  1481                           
  1482                           ;flex_lcd.h: 153: PORTDbits.RD0 = (data & 0b00100000)>>5; PORTDbits.RD1 = (data & 0b0001
      +                          0000)>>4;
  1483  02F7  0837               	movf	Lcd_Cmd@data,w
  1484  02F8  00B5               	movwf	??_Lcd_Cmd
  1485  02F9  3005               	movlw	5
  1486  02FA                     u565:	
  1487  02FA  36B5               	lsrf	??_Lcd_Cmd,f
  1488  02FB  0B89               	decfsz	9,f
  1489  02FC  2AFA               	goto	u565
  1490  02FD  3001               	movlw	1
  1491  02FE  0535               	andwf	??_Lcd_Cmd,w
  1492  02FF  00B6               	movwf	??_Lcd_Cmd+1
  1493  0300  080F               	movf	15,w	;volatile
  1494  0301  0636               	xorwf	??_Lcd_Cmd+1,w
  1495  0302  39FE               	andlw	-2
  1496  0303  0636               	xorwf	??_Lcd_Cmd+1,w
  1497  0304  008F               	movwf	15	;volatile
  1498  0305  0837               	movf	Lcd_Cmd@data,w
  1499  0306  00B5               	movwf	??_Lcd_Cmd
  1500  0307  3004               	movlw	4
  1501  0308                     u575:	
  1502  0308  36B5               	lsrf	??_Lcd_Cmd,f
  1503  0309  0B89               	decfsz	9,f
  1504  030A  2B08               	goto	u575
  1505  030B  0835               	movf	??_Lcd_Cmd,w
  1506  030C  3901               	andlw	1
  1507  030D  00B6               	movwf	??_Lcd_Cmd+1
  1508  030E  0DB6               	rlf	??_Lcd_Cmd+1,f
  1509  030F  080F               	movf	15,w	;volatile
  1510  0310  0636               	xorwf	??_Lcd_Cmd+1,w
  1511  0311  39FD               	andlw	-3
  1512  0312  0636               	xorwf	??_Lcd_Cmd+1,w
  1513  0313  008F               	movwf	15	;volatile
  1514                           
  1515                           ;flex_lcd.h: 154: _delay(10);
  1516  0314  3003               	movlw	3
  1517  0315                     u1187:	
  1518  0315  0B89               	decfsz	9,f
  1519  0316  2B15               	goto	u1187
  1520  0317  0000               	nop
  1521                           
  1522                           ;flex_lcd.h: 155: PORTDbits.RD3 = 1; _delay((unsigned long)((5)*(32000000/4000000.0))); 
      +                          PORTDbits.RD3 = 0;
  1523  0318  0140               	movlb	0	; select bank0
  1524  0319  158F               	bsf	15,3	;volatile
  1525  031A  300D               	movlw	13
  1526  031B                     u1197:	
  1527  031B  0B89               	decfsz	9,f
  1528  031C  2B1B               	goto	u1197
  1529  031D  0000               	nop
  1530  031E  0140               	movlb	0	; select bank0
  1531  031F  118F               	bcf	15,3	;volatile
  1532                           
  1533                           ;flex_lcd.h: 156: PORTCbits.RC1 = (data & 0b00001000)>>3; PORTCbits.RC2 = (data & 0b0000
      +                          0100)>>2;
  1534  0320  0837               	movf	Lcd_Cmd@data,w
  1535  0321  00B5               	movwf	??_Lcd_Cmd
  1536  0322  3003               	movlw	3
  1537  0323                     u585:	
  1538  0323  36B5               	lsrf	??_Lcd_Cmd,f
  1539  0324  0B89               	decfsz	9,f
  1540  0325  2B23               	goto	u585
  1541  0326  0835               	movf	??_Lcd_Cmd,w
  1542  0327  3901               	andlw	1
  1543  0328  00B6               	movwf	??_Lcd_Cmd+1
  1544  0329  0DB6               	rlf	??_Lcd_Cmd+1,f
  1545  032A  080E               	movf	14,w	;volatile
  1546  032B  0636               	xorwf	??_Lcd_Cmd+1,w
  1547  032C  39FD               	andlw	-3
  1548  032D  0636               	xorwf	??_Lcd_Cmd+1,w
  1549  032E  008E               	movwf	14	;volatile
  1550  032F  0837               	movf	Lcd_Cmd@data,w
  1551  0330  00B5               	movwf	??_Lcd_Cmd
  1552  0331  3002               	movlw	2
  1553  0332                     u595:	
  1554  0332  36B5               	lsrf	??_Lcd_Cmd,f
  1555  0333  0B89               	decfsz	9,f
  1556  0334  2B32               	goto	u595
  1557  0335  0835               	movf	??_Lcd_Cmd,w
  1558  0336  3901               	andlw	1
  1559  0337  00B6               	movwf	??_Lcd_Cmd+1
  1560  0338  0DB6               	rlf	??_Lcd_Cmd+1,f
  1561  0339  0DB6               	rlf	??_Lcd_Cmd+1,f
  1562  033A  080E               	movf	14,w	;volatile
  1563  033B  0636               	xorwf	??_Lcd_Cmd+1,w
  1564  033C  39FB               	andlw	-5
  1565  033D  0636               	xorwf	??_Lcd_Cmd+1,w
  1566  033E  008E               	movwf	14	;volatile
  1567                           
  1568                           ;flex_lcd.h: 157: PORTDbits.RD0 = (data & 0b00000010)>>1; PORTDbits.RD1 = (data & 0b0000
      +                          0001);
  1569  033F  0837               	movf	Lcd_Cmd@data,w
  1570  0340  00B5               	movwf	??_Lcd_Cmd
  1571  0341  3001               	movlw	1
  1572  0342                     u605:	
  1573  0342  36B5               	lsrf	??_Lcd_Cmd,f
  1574  0343  0B89               	decfsz	9,f
  1575  0344  2B42               	goto	u605
  1576  0345  3001               	movlw	1
  1577  0346  0535               	andwf	??_Lcd_Cmd,w
  1578  0347  00B6               	movwf	??_Lcd_Cmd+1
  1579  0348  080F               	movf	15,w	;volatile
  1580  0349  0636               	xorwf	??_Lcd_Cmd+1,w
  1581  034A  39FE               	andlw	-2
  1582  034B  0636               	xorwf	??_Lcd_Cmd+1,w
  1583  034C  008F               	movwf	15	;volatile
  1584  034D  0837               	movf	Lcd_Cmd@data,w
  1585  034E  3901               	andlw	1
  1586  034F  00B5               	movwf	??_Lcd_Cmd
  1587  0350  0DB5               	rlf	??_Lcd_Cmd,f
  1588  0351  080F               	movf	15,w	;volatile
  1589  0352  0635               	xorwf	??_Lcd_Cmd,w
  1590  0353  39FD               	andlw	-3
  1591  0354  0635               	xorwf	??_Lcd_Cmd,w
  1592  0355  008F               	movwf	15	;volatile
  1593                           
  1594                           ;flex_lcd.h: 158: _delay(10);
  1595  0356  3003               	movlw	3
  1596  0357                     u1207:	
  1597  0357  0B89               	decfsz	9,f
  1598  0358  2B57               	goto	u1207
  1599  0359  0000               	nop
  1600                           
  1601                           ;flex_lcd.h: 159: PORTDbits.RD3 = 1; _delay((unsigned long)((5)*(32000000/4000000.0))); 
      +                          PORTDbits.RD3 = 0;
  1602  035A  0140               	movlb	0	; select bank0
  1603  035B  158F               	bsf	15,3	;volatile
  1604  035C  300D               	movlw	13
  1605  035D                     u1217:	
  1606  035D  0B89               	decfsz	9,f
  1607  035E  2B5D               	goto	u1217
  1608  035F  0000               	nop
  1609  0360  0140               	movlb	0	; select bank0
  1610  0361  118F               	bcf	15,3	;volatile
  1611                           
  1612                           ;flex_lcd.h: 160: _delay((unsigned long)((5500)*(32000000/4000000.0)));
  1613  0362  303A               	movlw	58
  1614  0363  0140               	movlb	0	; select bank0
  1615  0364  00B5               	movwf	??_Lcd_Cmd
  1616  0365  3023               	movlw	35
  1617  0366                     u1227:	
  1618  0366  0B89               	decfsz	9,f
  1619  0367  2B66               	goto	u1227
  1620  0368  0BB5               	decfsz	??_Lcd_Cmd,f
  1621  0369  2B66               	goto	u1227
  1622  036A  0008               	return
  1623  036B                     __end_of_Lcd_Cmd:	
  1624                           
  1625                           	psect	intentry
  1626  0004                     __pintentry:	
  1627 ;; *************** function _interrupcion *****************
  1628 ;; Defined at:
  1629 ;;		line 26 in file "main.c"
  1630 ;; Parameters:    Size  Location     Type
  1631 ;;		None
  1632 ;; Auto vars:     Size  Location     Type
  1633 ;;		None
  1634 ;; Return value:  Size  Location     Type
  1635 ;;                  1    wreg      void 
  1636 ;; Registers used:
  1637 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  1638 ;; Tracked objects:
  1639 ;;		On entry : 0/0
  1640 ;;		On exit  : 0/0
  1641 ;;		Unchanged: 0/0
  1642 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
  1643 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  1644 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  1645 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  1646 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  1647 ;;Total ram usage:        2 bytes
  1648 ;; Hardware stack levels used:    1
  1649 ;; Hardware stack levels required when called:    2
  1650 ;; This function calls:
  1651 ;;		_Lcd_Out
  1652 ;;		_Lcd_Out2
  1653 ;;		_bum
  1654 ;;		_sprintf
  1655 ;;		i1_Lcd_Cmd
  1656 ;; This function is called by:
  1657 ;;		Interrupt level 1
  1658 ;; This function uses a non-reentrant model
  1659 ;;
  1660                           
  1661  0004                     _interrupcion:	
  1662                           
  1663                           ;incstack = 0
  1664  0004  147E               	bsf	126,0	;set compiler interrupt flag (level 1)
  1665                           
  1666                           ; Regs used in _interrupcion: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  1667  0005  3180               	pagesel	$
  1668  0006  0140               	movlb	0	; select bank0
  1669  0007  087F               	movf	127,w
  1670  0008  00B4               	movwf	??_interrupcion+1
  1671                           
  1672                           ;main.c: 27: if(contint<13){
  1673  0009  0843               	movf	_contint+1,w
  1674  000A  3A80               	xorlw	128
  1675  000B  00B3               	movwf	??_interrupcion
  1676  000C  3080               	movlw	128
  1677  000D  0233               	subwf	??_interrupcion,w
  1678  000E  1D03               	skipz
  1679  000F  2812               	goto	u103_25
  1680  0010  300D               	movlw	13
  1681  0011  0242               	subwf	_contint,w
  1682  0012                     u103_25:	
  1683  0012  1803               	skipnc
  1684  0013  281C               	goto	i1l1242
  1685                           
  1686                           ;main.c: 28: contint=contint+1;
  1687  0014  0140               	movlb	0	; select bank0
  1688  0015  0842               	movf	_contint,w
  1689  0016  3E01               	addlw	1
  1690  0017  00C2               	movwf	_contint
  1691  0018  3000               	movlw	0
  1692  0019  3D43               	addwfc	_contint+1,w
  1693  001A  00C3               	movwf	_contint+1
  1694                           
  1695                           ;main.c: 29: }else{
  1696  001B  289B               	goto	i1l1268
  1697  001C                     i1l1242:	
  1698                           
  1699                           ;main.c: 30: if(conts<59){
  1700  001C  0140               	movlb	0	; select bank0
  1701  001D  0841               	movf	_conts+1,w
  1702  001E  3A80               	xorlw	128
  1703  001F  00B3               	movwf	??_interrupcion
  1704  0020  3080               	movlw	128
  1705  0021  0233               	subwf	??_interrupcion,w
  1706  0022  1D03               	skipz
  1707  0023  2826               	goto	u104_25
  1708  0024  303B               	movlw	59
  1709  0025  0240               	subwf	_conts,w
  1710  0026                     u104_25:	
  1711  0026  1803               	skipnc
  1712  0027  2830               	goto	i1l1246
  1713                           
  1714                           ;main.c: 31: conts=conts+1;
  1715  0028  0140               	movlb	0	; select bank0
  1716  0029  0840               	movf	_conts,w
  1717  002A  3E01               	addlw	1
  1718  002B  00C0               	movwf	_conts
  1719  002C  3000               	movlw	0
  1720  002D  3D41               	addwfc	_conts+1,w
  1721  002E  00C1               	movwf	_conts+1
  1722                           
  1723                           ;main.c: 32: }else{
  1724  002F  2863               	goto	i1l1258
  1725  0030                     i1l1246:	
  1726                           
  1727                           ;main.c: 33: if(contmin<59){
  1728  0030  0140               	movlb	0	; select bank0
  1729  0031  0859               	movf	_contmin+1,w
  1730  0032  3A80               	xorlw	128
  1731  0033  00B3               	movwf	??_interrupcion
  1732  0034  3080               	movlw	128
  1733  0035  0233               	subwf	??_interrupcion,w
  1734  0036  1D03               	skipz
  1735  0037  283A               	goto	u105_25
  1736  0038  303B               	movlw	59
  1737  0039  0258               	subwf	_contmin,w
  1738  003A                     u105_25:	
  1739  003A  1803               	skipnc
  1740  003B  2844               	goto	i1l1250
  1741                           
  1742                           ;main.c: 34: contmin=contmin+1;
  1743  003C  0140               	movlb	0	; select bank0
  1744  003D  0858               	movf	_contmin,w
  1745  003E  3E01               	addlw	1
  1746  003F  00D8               	movwf	_contmin
  1747  0040  3000               	movlw	0
  1748  0041  3D59               	addwfc	_contmin+1,w
  1749  0042  00D9               	movwf	_contmin+1
  1750                           
  1751                           ;main.c: 35: }else{
  1752  0043  285D               	goto	i1l109
  1753  0044                     i1l1250:	
  1754                           
  1755                           ;main.c: 36: if(conthr<23){
  1756  0044  0140               	movlb	0	; select bank0
  1757  0045  0857               	movf	_conthr+1,w
  1758  0046  3A80               	xorlw	128
  1759  0047  00B3               	movwf	??_interrupcion
  1760  0048  3080               	movlw	128
  1761  0049  0233               	subwf	??_interrupcion,w
  1762  004A  1D03               	skipz
  1763  004B  284E               	goto	u106_25
  1764  004C  3017               	movlw	23
  1765  004D  0256               	subwf	_conthr,w
  1766  004E                     u106_25:	
  1767  004E  1803               	skipnc
  1768  004F  2858               	goto	i1l1254
  1769                           
  1770                           ;main.c: 37: conthr=conthr+1;
  1771  0050  0140               	movlb	0	; select bank0
  1772  0051  0856               	movf	_conthr,w
  1773  0052  3E01               	addlw	1
  1774  0053  00D6               	movwf	_conthr
  1775  0054  3000               	movlw	0
  1776  0055  3D57               	addwfc	_conthr+1,w
  1777  0056  00D7               	movwf	_conthr+1
  1778                           
  1779                           ;main.c: 38: }else{
  1780  0057  285B               	goto	i1l111
  1781  0058                     i1l1254:	
  1782                           
  1783                           ;main.c: 39: conthr=0;
  1784  0058  0140               	movlb	0	; select bank0
  1785  0059  01D6               	clrf	_conthr
  1786  005A  01D7               	clrf	_conthr+1
  1787  005B                     i1l111:	
  1788                           
  1789                           ;main.c: 41: }
  1790                           ;main.c: 42: contmin=0;
  1791  005B  01D8               	clrf	_contmin
  1792  005C  01D9               	clrf	_contmin+1
  1793  005D                     i1l109:	
  1794                           
  1795                           ;main.c: 44: }
  1796                           ;main.c: 45: conts=0;
  1797  005D  01C0               	clrf	_conts
  1798  005E  01C1               	clrf	_conts+1
  1799                           
  1800                           ;main.c: 46: Lcd_Cmd(1);
  1801  005F  3001               	movlw	1
  1802  0060  3183  236B  3180   	fcall	i1_Lcd_Cmd
  1803  0063                     i1l1258:	
  1804                           
  1805                           ;main.c: 47: }
  1806                           ;main.c: 48: contint=0;
  1807  0063  0140               	movlb	0	; select bank0
  1808  0064  01C2               	clrf	_contint
  1809  0065  01C3               	clrf	_contint+1
  1810                           
  1811                           ;main.c: 50: sprintf(buffer1,"    %d:%d:%d",conthr,contmin,conts);
  1812  0066  3032               	movlw	low (STR_1| (0+32768))
  1813  0067  00A0               	movwf	sprintf@f
  1814  0068  3085               	movlw	high (STR_1| (0+32768))
  1815  0069  00A1               	movwf	sprintf@f+1
  1816  006A  0857               	movf	_conthr+1,w
  1817  006B  00A3               	movwf	?_sprintf+3
  1818  006C  0856               	movf	_conthr,w
  1819  006D  00A2               	movwf	?_sprintf+2
  1820  006E  0859               	movf	_contmin+1,w
  1821  006F  00A5               	movwf	?_sprintf+5
  1822  0070  0858               	movf	_contmin,w
  1823  0071  00A4               	movwf	?_sprintf+4
  1824  0072  0841               	movf	_conts+1,w
  1825  0073  00A7               	movwf	?_sprintf+7
  1826  0074  0840               	movf	_conts,w
  1827  0075  00A6               	movwf	?_sprintf+6
  1828  0076  3044               	movlw	(low (_buffer1| 0))& (0+255)
  1829  0077  3180  20BF  3180   	fcall	_sprintf
  1830                           
  1831                           ;main.c: 51: Lcd_Out(2, 0, "Mecatronica");
  1832  007A  01F3               	clrf	Lcd_Out@x
  1833  007B  303F               	movlw	low (STR_2| (0+32768))
  1834  007C  00F4               	movwf	Lcd_Out@buffer
  1835  007D  3085               	movlw	high (STR_2| (0+32768))
  1836  007E  00F5               	movwf	Lcd_Out@buffer+1
  1837  007F  3002               	movlw	2
  1838  0080  3184  2441  3180   	fcall	_Lcd_Out
  1839                           
  1840                           ;main.c: 52: Lcd_Out2(1, 1, buffer1);
  1841  0083  01F3               	clrf	Lcd_Out2@x
  1842  0084  0AF3               	incf	Lcd_Out2@x,f
  1843  0085  3044               	movlw	(low (_buffer1| 0))& (0+255)
  1844  0086  0140               	movlb	0	; select bank0
  1845  0087  00B3               	movwf	??_interrupcion
  1846  0088  0833               	movf	??_interrupcion,w
  1847  0089  00F4               	movwf	Lcd_Out2@buffer
  1848  008A  3001               	movlw	1
  1849  008B  3184  2478  3180   	fcall	_Lcd_Out2
  1850                           
  1851                           ;main.c: 53: bum(11,51,0);
  1852  008E  300B               	movlw	11
  1853  008F  00F0               	movwf	bum@hr
  1854  0090  3000               	movlw	0
  1855  0091  00F1               	movwf	bum@hr+1
  1856  0092  3033               	movlw	51
  1857  0093  00F2               	movwf	bum@min
  1858  0094  3000               	movlw	0
  1859  0095  00F3               	movwf	bum@min+1
  1860  0096  3000               	movlw	0
  1861  0097  00F4               	movwf	bum@seg
  1862  0098  00F5               	movwf	bum@seg+1
  1863  0099  3185  250D         	fcall	_bum
  1864  009B                     i1l1268:	
  1865                           
  1866                           ;main.c: 54: }
  1867                           ;main.c: 56: PIR4bits.TMR1IF=0;
  1868  009B  014E               	movlb	14	; select bank14
  1869  009C  1010               	bcf	16,0	;volatile
  1870  009D  0140               	movlb	0	; select bank0
  1871  009E  0834               	movf	??_interrupcion+1,w
  1872  009F  00FF               	movwf	127
  1873  00A0  107E               	bcf	126,0	;clear compiler interrupt flag (level 1)
  1874  00A1  0009               	retfie
  1875  00A2                     __end_of_interrupcion:	
  1876                           
  1877                           	psect	text4
  1878  00BF                     __ptext4:	
  1879 ;; *************** function _sprintf *****************
  1880 ;; Defined at:
  1881 ;;		line 492 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\doprnt.c"
  1882 ;; Parameters:    Size  Location     Type
  1883 ;;  sp              1    wreg     PTR unsigned char 
  1884 ;;		 -> buffer1(16), 
  1885 ;;  f               2    0[BANK0 ] PTR const unsigned char 
  1886 ;;		 -> STR_1(13), 
  1887 ;; Auto vars:     Size  Location     Type
  1888 ;;  sp              1   17[BANK0 ] PTR unsigned char 
  1889 ;;		 -> buffer1(16), 
  1890 ;;  tmpval          4    0        struct .
  1891 ;;  val             2   15[BANK0 ] unsigned int 
  1892 ;;  cp              2    0        PTR const unsigned char 
  1893 ;;  len             2    0        unsigned int 
  1894 ;;  c               1   18[BANK0 ] char 
  1895 ;;  prec            1   14[BANK0 ] char 
  1896 ;;  flag            1   13[BANK0 ] unsigned char 
  1897 ;;  ap              1   12[BANK0 ] PTR void [1]
  1898 ;;		 -> ?_sprintf(2), 
  1899 ;; Return value:  Size  Location     Type
  1900 ;;                  2    0[BANK0 ] int 
  1901 ;; Registers used:
  1902 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  1903 ;; Tracked objects:
  1904 ;;		On entry : 0/0
  1905 ;;		On exit  : 0/0
  1906 ;;		Unchanged: 0/0
  1907 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
  1908 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  1909 ;;      Locals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  1910 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  1911 ;;      Totals:         0      19       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  1912 ;;Total ram usage:       19 bytes
  1913 ;; Hardware stack levels used:    1
  1914 ;; Hardware stack levels required when called:    1
  1915 ;; This function calls:
  1916 ;;		___lwdiv
  1917 ;;		___lwmod
  1918 ;; This function is called by:
  1919 ;;		_interrupcion
  1920 ;; This function uses a non-reentrant model
  1921 ;;
  1922                           
  1923                           
  1924                           ;psect for function _sprintf
  1925  00BF                     _sprintf:	
  1926                           
  1927                           ;incstack = 0
  1928                           ; Regs used in _sprintf: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  1929                           ;sprintf@sp stored from wreg
  1930  00BF  0140               	movlb	0	; select bank0
  1931  00C0  00B1               	movwf	sprintf@sp
  1932                           
  1933                           ;doprnt.c: 494: va_list ap;
  1934                           ;doprnt.c: 499: signed char c;
  1935                           ;doprnt.c: 506: signed char prec;
  1936                           ;doprnt.c: 508: unsigned char flag;
  1937                           ;doprnt.c: 523: union {
  1938                           ;doprnt.c: 524: unsigned long vd;
  1939                           ;doprnt.c: 525: double integ;
  1940                           ;doprnt.c: 526: } tmpval;
  1941                           ;doprnt.c: 528: unsigned int val;
  1942                           ;doprnt.c: 529: unsigned len;
  1943                           ;doprnt.c: 530: const char * cp;
  1944                           ;doprnt.c: 533: *ap = __va_start();
  1945  00C1  3022               	movlw	(low ((?_sprintf| 0+2)))& (0+255)
  1946  00C2  00A8               	movwf	??_sprintf
  1947  00C3  0828               	movf	??_sprintf,w
  1948  00C4  00AC               	movwf	sprintf@ap
  1949  00C5                     i1l1232:	
  1950                           ;doprnt.c: 536: while(c = *f++) {
  1951                           
  1952  00C5  0821               	movf	sprintf@f+1,w
  1953  00C6  00A9               	movwf	??_sprintf+1
  1954  00C7  0820               	movf	sprintf@f,w
  1955  00C8  00A8               	movwf	??_sprintf
  1956  00C9  0AA0               	incf	sprintf@f,f
  1957  00CA  1903               	skipnz
  1958  00CB  0AA1               	incf	sprintf@f+1,f
  1959  00CC  0828               	movf	??_sprintf,w
  1960  00CD  0084               	movwf	4
  1961  00CE  0829               	movf	??_sprintf+1,w
  1962  00CF  0085               	movwf	5
  1963  00D0  0800               	movf	0,w	;code access
  1964  00D1  00AA               	movwf	??_sprintf+2
  1965  00D2  082A               	movf	??_sprintf+2,w
  1966  00D3  00B2               	movwf	sprintf@c
  1967  00D4  0832               	movf	sprintf@c,w
  1968  00D5  1903               	btfsc	3,2
  1969  00D6  2987               	goto	i1l1234
  1970                           
  1971                           ;doprnt.c: 538: if(c != '%')
  1972  00D7  3025               	movlw	37
  1973  00D8  0632               	xorwf	sprintf@c,w
  1974  00D9  1903               	btfsc	3,2
  1975  00DA  28E7               	goto	i1l1188
  1976                           
  1977                           ;doprnt.c: 540: {
  1978                           ;doprnt.c: 541: ((*sp++ = (c)));
  1979  00DB  0832               	movf	sprintf@c,w
  1980  00DC  00A8               	movwf	??_sprintf
  1981  00DD  0831               	movf	sprintf@sp,w
  1982  00DE  0086               	movwf	6
  1983  00DF  0187               	clrf	7
  1984  00E0  0828               	movf	??_sprintf,w
  1985  00E1  0081               	movwf	1
  1986  00E2  3001               	movlw	1
  1987  00E3  00A8               	movwf	??_sprintf
  1988  00E4  0828               	movf	??_sprintf,w
  1989  00E5  07B1               	addwf	sprintf@sp,f
  1990                           
  1991                           ;doprnt.c: 542: continue;
  1992  00E6  28C5               	goto	i1l1232
  1993  00E7                     i1l1188:	
  1994                           
  1995                           ;doprnt.c: 543: }
  1996                           ;doprnt.c: 548: flag = 0;
  1997  00E7  01AD               	clrf	sprintf@flag
  1998                           
  1999                           ;doprnt.c: 822: }
  2000                           
  2001                           ;doprnt.c: 813: continue;
  2002                           
  2003                           ;doprnt.c: 802: default:
  2004                           
  2005                           ;doprnt.c: 698: case 'i':
  2006                           ;doprnt.c: 699: break;
  2007                           
  2008                           ;doprnt.c: 697: case 'd':
  2009                           
  2010                           ;doprnt.c: 638: goto alldone;
  2011                           
  2012                           ;doprnt.c: 637: case 0:
  2013                           
  2014                           ;doprnt.c: 635: switch(c = *f++) {
  2015  00E8  0821               	movf	sprintf@f+1,w
  2016  00E9  00A9               	movwf	??_sprintf+1
  2017  00EA  0820               	movf	sprintf@f,w
  2018  00EB  00A8               	movwf	??_sprintf
  2019  00EC  0AA0               	incf	sprintf@f,f
  2020  00ED  1903               	skipnz
  2021  00EE  0AA1               	incf	sprintf@f+1,f
  2022  00EF  0828               	movf	??_sprintf,w
  2023  00F0  0084               	movwf	4
  2024  00F1  0829               	movf	??_sprintf+1,w
  2025  00F2  0085               	movwf	5
  2026  00F3  0800               	movf	0,w	;code access
  2027  00F4  00B2               	movwf	sprintf@c
  2028                           
  2029                           ; Switch size 1, requested type "space"
  2030                           ; Number of cases is 3, Range of values is 0 to 105
  2031                           ; switch strategies available:
  2032                           ; Name         Instructions Cycles
  2033                           ; simple_byte           10     6 (average)
  2034                           ; direct_byte          218     6 (fixed)
  2035                           ; jumptable            260     6 (fixed)
  2036                           ;	Chosen strategy is simple_byte
  2037  00F5  3A00               	xorlw	0	; case 0
  2038  00F6  1903               	skipnz
  2039  00F7  2987               	goto	i1l1234
  2040  00F8  3A64               	xorlw	100	; case 100
  2041  00F9  1903               	skipnz
  2042  00FA  28FF               	goto	i1l1194
  2043  00FB  3A0D               	xorlw	13	; case 105
  2044  00FC  1903               	skipnz
  2045  00FD  28FF               	goto	i1l1194
  2046  00FE  28C5               	goto	i1l1232
  2047  00FF                     i1l1194:	
  2048                           
  2049                           ;doprnt.c: 1253: {
  2050                           ;doprnt.c: 1259: val = (int)(*(int *)__va_arg((*(int **)ap), (int)0));
  2051  00FF  082C               	movf	sprintf@ap,w
  2052  0100  0086               	movwf	6
  2053  0101  0187               	clrf	7
  2054  0102  3F40               	moviw [0]fsr1
  2055  0103  00AF               	movwf	sprintf@val
  2056  0104  3F41               	moviw [1]fsr1
  2057  0105  00B0               	movwf	sprintf@val+1
  2058  0106  3002               	movlw	2
  2059  0107  00A8               	movwf	??_sprintf
  2060  0108  0828               	movf	??_sprintf,w
  2061  0109  07AC               	addwf	sprintf@ap,f
  2062                           
  2063                           ;doprnt.c: 1261: if((int)val < 0) {
  2064  010A  1FB0               	btfss	sprintf@val+1,7
  2065  010B  2915               	goto	i1l1204
  2066                           
  2067                           ;doprnt.c: 1262: flag |= 0x03;
  2068  010C  3003               	movlw	3
  2069  010D  00A8               	movwf	??_sprintf
  2070  010E  0828               	movf	??_sprintf,w
  2071  010F  04AD               	iorwf	sprintf@flag,f
  2072                           
  2073                           ;doprnt.c: 1263: val = -val;
  2074  0110  09AF               	comf	sprintf@val,f
  2075  0111  09B0               	comf	sprintf@val+1,f
  2076  0112  0AAF               	incf	sprintf@val,f
  2077  0113  1903               	skipnz
  2078  0114  0AB0               	incf	sprintf@val+1,f
  2079  0115                     i1l1204:	
  2080                           
  2081                           ;doprnt.c: 1264: }
  2082                           ;doprnt.c: 1266: }
  2083                           ;doprnt.c: 1305: for(c = 1 ; c != sizeof dpowers/sizeof dpowers[0] ; c++)
  2084  0115  01B2               	clrf	sprintf@c
  2085  0116  0AB2               	incf	sprintf@c,f
  2086  0117  3005               	movlw	5
  2087  0118  0632               	xorwf	sprintf@c,w
  2088  0119  1903               	btfsc	3,2
  2089  011A  293A               	goto	i1l1216
  2090  011B                     i1l1210:	
  2091                           
  2092                           ;doprnt.c: 1306: if(val < dpowers[c])
  2093  011B  0832               	movf	sprintf@c,w
  2094  011C  00A8               	movwf	??_sprintf
  2095  011D  01A9               	clrf	??_sprintf+1
  2096  011E  35A8               	lslf	??_sprintf,f
  2097  011F  0DA9               	rlf	??_sprintf+1,f
  2098  0120  3028               	movlw	low (_dpowers| (0+32768))
  2099  0121  0728               	addwf	??_sprintf,w
  2100  0122  0084               	movwf	4
  2101  0123  3085               	movlw	high (_dpowers| (0+32768))
  2102  0124  3D29               	addwfc	??_sprintf+1,w
  2103  0125  0085               	movwf	5
  2104  0126  3F00               	moviw [0]fsr0
  2105  0127  00AA               	movwf	??_sprintf+2
  2106  0128  3F01               	moviw [1]fsr0
  2107  0129  00AB               	movwf	??_sprintf+3
  2108  012A  082B               	movf	??_sprintf+3,w
  2109  012B  0230               	subwf	sprintf@val+1,w
  2110  012C  1D03               	skipz
  2111  012D  2930               	goto	u98_25
  2112  012E  082A               	movf	??_sprintf+2,w
  2113  012F  022F               	subwf	sprintf@val,w
  2114  0130                     u98_25:	
  2115  0130  1C03               	btfss	3,0
  2116  0131  293A               	goto	i1l1216
  2117                           
  2118                           ;doprnt.c: 1307: break;
  2119  0132  3001               	movlw	1
  2120  0133  00A8               	movwf	??_sprintf
  2121  0134  0828               	movf	??_sprintf,w
  2122  0135  07B2               	addwf	sprintf@c,f
  2123  0136  3005               	movlw	5
  2124  0137  0632               	xorwf	sprintf@c,w
  2125  0138  1D03               	btfss	3,2
  2126  0139  291B               	goto	i1l1210
  2127  013A                     i1l1216:	
  2128                           
  2129                           ;doprnt.c: 1422: {
  2130                           ;doprnt.c: 1438: if(flag & 0x03)
  2131  013A  082D               	movf	sprintf@flag,w
  2132  013B  3903               	andlw	3
  2133  013C  1903               	btfsc	3,2
  2134  013D  2949               	goto	i1l1222
  2135                           
  2136                           ;doprnt.c: 1439: ((*sp++ = ('-')));
  2137  013E  302D               	movlw	45
  2138  013F  00A8               	movwf	??_sprintf
  2139  0140  0831               	movf	sprintf@sp,w
  2140  0141  0086               	movwf	6
  2141  0142  0187               	clrf	7
  2142  0143  0828               	movf	??_sprintf,w
  2143  0144  0081               	movwf	1
  2144  0145  3001               	movlw	1
  2145  0146  00A8               	movwf	??_sprintf
  2146  0147  0828               	movf	??_sprintf,w
  2147  0148  07B1               	addwf	sprintf@sp,f
  2148  0149                     i1l1222:	
  2149                           
  2150                           ;doprnt.c: 1469: }
  2151                           ;doprnt.c: 1472: prec = c;
  2152  0149  0832               	movf	sprintf@c,w
  2153  014A  00A8               	movwf	??_sprintf
  2154  014B  0828               	movf	??_sprintf,w
  2155  014C  00AE               	movwf	sprintf@prec
  2156  014D                     i1l1230:	
  2157                           ;doprnt.c: 1474: while(prec--) {
  2158                           
  2159  014D  30FF               	movlw	255
  2160  014E  00A8               	movwf	??_sprintf
  2161  014F  0828               	movf	??_sprintf,w
  2162  0150  07AE               	addwf	sprintf@prec,f
  2163  0151  0A2E               	incf	sprintf@prec,w
  2164  0152  1903               	btfsc	3,2
  2165  0153  28C5               	goto	i1l1232
  2166                           
  2167                           ;doprnt.c: 1478: {
  2168                           ;doprnt.c: 1489: c = (val / dpowers[prec]) % 10 + '0';
  2169  0154  300A               	movlw	10
  2170  0155  00F8               	movwf	___lwmod@divisor
  2171  0156  3000               	movlw	0
  2172  0157  00F9               	movwf	___lwmod@divisor+1
  2173  0158  082E               	movf	sprintf@prec,w
  2174  0159  00A8               	movwf	??_sprintf
  2175  015A  01A9               	clrf	??_sprintf+1
  2176  015B  35A8               	lslf	??_sprintf,f
  2177  015C  0DA9               	rlf	??_sprintf+1,f
  2178  015D  3028               	movlw	low (_dpowers| (0+32768))
  2179  015E  0728               	addwf	??_sprintf,w
  2180  015F  0084               	movwf	4
  2181  0160  3085               	movlw	high (_dpowers| (0+32768))
  2182  0161  3D29               	addwfc	??_sprintf+1,w
  2183  0162  0085               	movwf	5
  2184  0163  3F00               	moviw [0]fsr0
  2185  0164  00F0               	movwf	___lwdiv@divisor
  2186  0165  3F01               	moviw [1]fsr0
  2187  0166  00F1               	movwf	___lwdiv@divisor+1
  2188  0167  0830               	movf	sprintf@val+1,w
  2189  0168  00F3               	movwf	___lwdiv@dividend+1
  2190  0169  082F               	movf	sprintf@val,w
  2191  016A  00F2               	movwf	___lwdiv@dividend
  2192  016B  3184  24AD  3180   	fcall	___lwdiv
  2193  016E  0871               	movf	?___lwdiv+1,w
  2194  016F  00FB               	movwf	___lwmod@dividend+1
  2195  0170  0870               	movf	?___lwdiv,w
  2196  0171  00FA               	movwf	___lwmod@dividend
  2197  0172  3184  24E1  3180   	fcall	___lwmod
  2198  0175  0878               	movf	?___lwmod,w
  2199  0176  3E30               	addlw	48
  2200  0177  0140               	movlb	0	; select bank0
  2201  0178  00AA               	movwf	??_sprintf+2
  2202  0179  082A               	movf	??_sprintf+2,w
  2203  017A  00B2               	movwf	sprintf@c
  2204                           
  2205                           ;doprnt.c: 1523: }
  2206                           ;doprnt.c: 1524: ((*sp++ = (c)));
  2207  017B  0832               	movf	sprintf@c,w
  2208  017C  00A8               	movwf	??_sprintf
  2209  017D  0831               	movf	sprintf@sp,w
  2210  017E  0086               	movwf	6
  2211  017F  0187               	clrf	7
  2212  0180  0828               	movf	??_sprintf,w
  2213  0181  0081               	movwf	1
  2214  0182  3001               	movlw	1
  2215  0183  00A8               	movwf	??_sprintf
  2216  0184  0828               	movf	??_sprintf,w
  2217  0185  07B1               	addwf	sprintf@sp,f
  2218  0186  294D               	goto	i1l1230
  2219  0187                     i1l1234:	
  2220                           ;doprnt.c: 1525: }
  2221                           ;doprnt.c: 1533: }
  2222                           ;doprnt.c: 1535: alldone:
  2223                           
  2224                           
  2225                           ;doprnt.c: 1538: *sp = 0;
  2226  0187  0831               	movf	sprintf@sp,w
  2227  0188  0086               	movwf	6
  2228  0189  0187               	clrf	7
  2229  018A  0181               	clrf	1
  2230  018B  0008               	return
  2231  018C                     __end_of_sprintf:	
  2232                           ;doprnt.c: 1540: return 0;
  2233                           ;	Return value of _sprintf is never used
  2234                           
  2235                           
  2236                           	psect	text5
  2237  04E1                     __ptext5:	
  2238 ;; *************** function ___lwmod *****************
  2239 ;; Defined at:
  2240 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\lwmod.c"
  2241 ;; Parameters:    Size  Location     Type
  2242 ;;  divisor         2    8[COMMON] unsigned int 
  2243 ;;  dividend        2   10[COMMON] unsigned int 
  2244 ;; Auto vars:     Size  Location     Type
  2245 ;;  counter         1   13[COMMON] unsigned char 
  2246 ;; Return value:  Size  Location     Type
  2247 ;;                  2    8[COMMON] unsigned int 
  2248 ;; Registers used:
  2249 ;;		wreg, status,2, status,0
  2250 ;; Tracked objects:
  2251 ;;		On entry : 0/0
  2252 ;;		On exit  : 0/0
  2253 ;;		Unchanged: 0/0
  2254 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
  2255 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  2256 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  2257 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  2258 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  2259 ;;Total ram usage:        6 bytes
  2260 ;; Hardware stack levels used:    1
  2261 ;; This function calls:
  2262 ;;		Nothing
  2263 ;; This function is called by:
  2264 ;;		_sprintf
  2265 ;; This function uses a non-reentrant model
  2266 ;;
  2267                           
  2268                           
  2269                           ;psect for function ___lwmod
  2270  04E1                     ___lwmod:	
  2271                           
  2272                           ;incstack = 0
  2273                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  2274  04E1  0878               	movf	___lwmod@divisor,w
  2275  04E2  0479               	iorwf	___lwmod@divisor+1,w
  2276  04E3  1903               	btfsc	3,2
  2277  04E4  2D08               	goto	i1l1052
  2278  04E5  01FD               	clrf	___lwmod@counter
  2279  04E6  0AFD               	incf	___lwmod@counter,f
  2280  04E7                     i1l1042:	
  2281  04E7  1BF9               	btfsc	___lwmod@divisor+1,7
  2282  04E8  2CF3               	goto	i1l1044
  2283  04E9  3001               	movlw	1
  2284  04EA                     u76_25:	
  2285  04EA  35F8               	lslf	___lwmod@divisor,f
  2286  04EB  0DF9               	rlf	___lwmod@divisor+1,f
  2287  04EC  0B89               	decfsz	9,f
  2288  04ED  2CEA               	goto	u76_25
  2289  04EE  3001               	movlw	1
  2290  04EF  00FC               	movwf	??___lwmod
  2291  04F0  087C               	movf	??___lwmod,w
  2292  04F1  07FD               	addwf	___lwmod@counter,f
  2293  04F2  2CE7               	goto	i1l1042
  2294  04F3                     i1l1044:	
  2295  04F3  0879               	movf	___lwmod@divisor+1,w
  2296  04F4  027B               	subwf	___lwmod@dividend+1,w
  2297  04F5  1D03               	skipz
  2298  04F6  2CF9               	goto	u78_25
  2299  04F7  0878               	movf	___lwmod@divisor,w
  2300  04F8  027A               	subwf	___lwmod@dividend,w
  2301  04F9                     u78_25:	
  2302  04F9  1C03               	skipc
  2303  04FA  2CFF               	goto	i1l1048
  2304  04FB  0878               	movf	___lwmod@divisor,w
  2305  04FC  02FA               	subwf	___lwmod@dividend,f
  2306  04FD  0879               	movf	___lwmod@divisor+1,w
  2307  04FE  3BFB               	subwfb	___lwmod@dividend+1,f
  2308  04FF                     i1l1048:	
  2309  04FF  3001               	movlw	1
  2310  0500                     u79_25:	
  2311  0500  36F9               	lsrf	___lwmod@divisor+1,f
  2312  0501  0CF8               	rrf	___lwmod@divisor,f
  2313  0502  0B89               	decfsz	9,f
  2314  0503  2D00               	goto	u79_25
  2315  0504  3001               	movlw	1
  2316  0505  02FD               	subwf	___lwmod@counter,f
  2317  0506  1D03               	btfss	3,2
  2318  0507  2CF3               	goto	i1l1044
  2319  0508                     i1l1052:	
  2320  0508  087B               	movf	___lwmod@dividend+1,w
  2321  0509  00F9               	movwf	?___lwmod+1
  2322  050A  087A               	movf	___lwmod@dividend,w
  2323  050B  00F8               	movwf	?___lwmod
  2324  050C  0008               	return
  2325  050D                     __end_of___lwmod:	
  2326                           
  2327                           	psect	text6
  2328  04AD                     __ptext6:	
  2329 ;; *************** function ___lwdiv *****************
  2330 ;; Defined at:
  2331 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\lwdiv.c"
  2332 ;; Parameters:    Size  Location     Type
  2333 ;;  divisor         2    0[COMMON] unsigned int 
  2334 ;;  dividend        2    2[COMMON] unsigned int 
  2335 ;; Auto vars:     Size  Location     Type
  2336 ;;  quotient        2    5[COMMON] unsigned int 
  2337 ;;  counter         1    7[COMMON] unsigned char 
  2338 ;; Return value:  Size  Location     Type
  2339 ;;                  2    0[COMMON] unsigned int 
  2340 ;; Registers used:
  2341 ;;		wreg, status,2, status,0
  2342 ;; Tracked objects:
  2343 ;;		On entry : 0/0
  2344 ;;		On exit  : 0/0
  2345 ;;		Unchanged: 0/0
  2346 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
  2347 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  2348 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  2349 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  2350 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  2351 ;;Total ram usage:        8 bytes
  2352 ;; Hardware stack levels used:    1
  2353 ;; This function calls:
  2354 ;;		Nothing
  2355 ;; This function is called by:
  2356 ;;		_sprintf
  2357 ;; This function uses a non-reentrant model
  2358 ;;
  2359                           
  2360                           
  2361                           ;psect for function ___lwdiv
  2362  04AD                     ___lwdiv:	
  2363                           
  2364                           ;incstack = 0
  2365                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  2366  04AD  01F5               	clrf	___lwdiv@quotient
  2367  04AE  01F6               	clrf	___lwdiv@quotient+1
  2368  04AF  0870               	movf	___lwdiv@divisor,w
  2369  04B0  0471               	iorwf	___lwdiv@divisor+1,w
  2370  04B1  1903               	btfsc	3,2
  2371  04B2  2CDC               	goto	i1l1030
  2372  04B3  01F7               	clrf	___lwdiv@counter
  2373  04B4  0AF7               	incf	___lwdiv@counter,f
  2374  04B5                     i1l1018:	
  2375  04B5  1BF1               	btfsc	___lwdiv@divisor+1,7
  2376  04B6  2CC1               	goto	i1l1020
  2377  04B7  3001               	movlw	1
  2378  04B8                     u69_25:	
  2379  04B8  35F0               	lslf	___lwdiv@divisor,f
  2380  04B9  0DF1               	rlf	___lwdiv@divisor+1,f
  2381  04BA  0B89               	decfsz	9,f
  2382  04BB  2CB8               	goto	u69_25
  2383  04BC  3001               	movlw	1
  2384  04BD  00F4               	movwf	??___lwdiv
  2385  04BE  0874               	movf	??___lwdiv,w
  2386  04BF  07F7               	addwf	___lwdiv@counter,f
  2387  04C0  2CB5               	goto	i1l1018
  2388  04C1                     i1l1020:	
  2389  04C1  3001               	movlw	1
  2390  04C2                     u71_25:	
  2391  04C2  35F5               	lslf	___lwdiv@quotient,f
  2392  04C3  0DF6               	rlf	___lwdiv@quotient+1,f
  2393  04C4  0B89               	decfsz	9,f
  2394  04C5  2CC2               	goto	u71_25
  2395  04C6  0871               	movf	___lwdiv@divisor+1,w
  2396  04C7  0273               	subwf	___lwdiv@dividend+1,w
  2397  04C8  1D03               	skipz
  2398  04C9  2CCC               	goto	u72_25
  2399  04CA  0870               	movf	___lwdiv@divisor,w
  2400  04CB  0272               	subwf	___lwdiv@dividend,w
  2401  04CC                     u72_25:	
  2402  04CC  1C03               	skipc
  2403  04CD  2CD3               	goto	i1l1026
  2404  04CE  0870               	movf	___lwdiv@divisor,w
  2405  04CF  02F2               	subwf	___lwdiv@dividend,f
  2406  04D0  0871               	movf	___lwdiv@divisor+1,w
  2407  04D1  3BF3               	subwfb	___lwdiv@dividend+1,f
  2408  04D2  1475               	bsf	___lwdiv@quotient,0
  2409  04D3                     i1l1026:	
  2410  04D3  3001               	movlw	1
  2411  04D4                     u73_25:	
  2412  04D4  36F1               	lsrf	___lwdiv@divisor+1,f
  2413  04D5  0CF0               	rrf	___lwdiv@divisor,f
  2414  04D6  0B89               	decfsz	9,f
  2415  04D7  2CD4               	goto	u73_25
  2416  04D8  3001               	movlw	1
  2417  04D9  02F7               	subwf	___lwdiv@counter,f
  2418  04DA  1D03               	btfss	3,2
  2419  04DB  2CC1               	goto	i1l1020
  2420  04DC                     i1l1030:	
  2421  04DC  0876               	movf	___lwdiv@quotient+1,w
  2422  04DD  00F1               	movwf	?___lwdiv+1
  2423  04DE  0875               	movf	___lwdiv@quotient,w
  2424  04DF  00F0               	movwf	?___lwdiv
  2425  04E0  0008               	return
  2426  04E1                     __end_of___lwdiv:	
  2427                           
  2428                           	psect	text7
  2429  050D                     __ptext7:	
  2430 ;; *************** function _bum *****************
  2431 ;; Defined at:
  2432 ;;		line 21 in file "main.c"
  2433 ;; Parameters:    Size  Location     Type
  2434 ;;  hr              2    0[COMMON] int 
  2435 ;;  min             2    2[COMMON] int 
  2436 ;;  seg             2    4[COMMON] int 
  2437 ;; Auto vars:     Size  Location     Type
  2438 ;;		None
  2439 ;; Return value:  Size  Location     Type
  2440 ;;                  1    wreg      void 
  2441 ;; Registers used:
  2442 ;;		wreg
  2443 ;; Tracked objects:
  2444 ;;		On entry : 0/0
  2445 ;;		On exit  : 0/0
  2446 ;;		Unchanged: 0/0
  2447 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
  2448 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  2449 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  2450 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  2451 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  2452 ;;Total ram usage:        6 bytes
  2453 ;; Hardware stack levels used:    1
  2454 ;; This function calls:
  2455 ;;		Nothing
  2456 ;; This function is called by:
  2457 ;;		_interrupcion
  2458 ;; This function uses a non-reentrant model
  2459 ;;
  2460                           
  2461                           
  2462                           ;psect for function _bum
  2463  050D                     _bum:	
  2464                           
  2465                           ;main.c: 22: if(conthr==hr && contmin==min && conts==seg){
  2466                           
  2467                           ;incstack = 0
  2468                           ; Regs used in _bum: [wreg]
  2469  050D  0871               	movf	bum@hr+1,w
  2470  050E  0140               	movlb	0	; select bank0
  2471  050F  0657               	xorwf	_conthr+1,w
  2472  0510  1D03               	skipz
  2473  0511  2D14               	goto	u92_25
  2474  0512  0870               	movf	bum@hr,w
  2475  0513  0656               	xorwf	_conthr,w
  2476  0514                     u92_25:	
  2477  0514  1D03               	skipz
  2478  0515  0008               	return
  2479  0516  0873               	movf	bum@min+1,w
  2480  0517  0659               	xorwf	_contmin+1,w
  2481  0518  1D03               	skipz
  2482  0519  2D1C               	goto	u93_25
  2483  051A  0872               	movf	bum@min,w
  2484  051B  0658               	xorwf	_contmin,w
  2485  051C                     u93_25:	
  2486  051C  1D03               	skipz
  2487  051D  0008               	return
  2488  051E  0875               	movf	bum@seg+1,w
  2489  051F  0641               	xorwf	_conts+1,w
  2490  0520  1D03               	skipz
  2491  0521  2D24               	goto	u94_25
  2492  0522  0874               	movf	bum@seg,w
  2493  0523  0640               	xorwf	_conts,w
  2494  0524                     u94_25:	
  2495  0524  1D03               	skipz
  2496  0525  0008               	return
  2497                           
  2498                           ;main.c: 23: LATAbits.LATA0=1;
  2499  0526  1416               	bsf	22,0	;volatile
  2500  0527  0008               	return
  2501  0528                     __end_of_bum:	
  2502                           
  2503                           	psect	text8
  2504  0478                     __ptext8:	
  2505 ;; *************** function _Lcd_Out2 *****************
  2506 ;; Defined at:
  2507 ;;		line 115 in file "flex_lcd.h"
  2508 ;; Parameters:    Size  Location     Type
  2509 ;;  y               1    wreg     unsigned char 
  2510 ;;  x               1    3[COMMON] unsigned char 
  2511 ;;  buffer          1    4[COMMON] PTR unsigned char 
  2512 ;;		 -> buffer1(16), 
  2513 ;; Auto vars:     Size  Location     Type
  2514 ;;  y               1    6[COMMON] unsigned char 
  2515 ;;  data            1    7[COMMON] unsigned char 
  2516 ;; Return value:  Size  Location     Type
  2517 ;;                  1    wreg      void 
  2518 ;; Registers used:
  2519 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2520 ;; Tracked objects:
  2521 ;;		On entry : 0/0
  2522 ;;		On exit  : 0/0
  2523 ;;		Unchanged: 0/0
  2524 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
  2525 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  2526 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  2527 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  2528 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  2529 ;;Total ram usage:        5 bytes
  2530 ;; Hardware stack levels used:    1
  2531 ;; Hardware stack levels required when called:    1
  2532 ;; This function calls:
  2533 ;;		_Lcd_Chr_CP
  2534 ;;		i1_Lcd_Cmd
  2535 ;; This function is called by:
  2536 ;;		_interrupcion
  2537 ;; This function uses a non-reentrant model
  2538 ;;
  2539                           
  2540                           
  2541                           ;psect for function _Lcd_Out2
  2542  0478                     _Lcd_Out2:	
  2543                           
  2544                           ;incstack = 0
  2545                           ; Regs used in _Lcd_Out2: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  2546                           ;Lcd_Out2@y stored from wreg
  2547  0478  00F6               	movwf	Lcd_Out2@y
  2548                           
  2549                           ;flex_lcd.h: 117: unsigned char data;
  2550                           ;flex_lcd.h: 118: switch (y)
  2551  0479  2C89               	goto	i1l1162
  2552  047A                     i1l1152:	
  2553                           ;flex_lcd.h: 119: {
  2554                           ;flex_lcd.h: 120: case 1: data = 128 + x; break;
  2555                           
  2556  047A  0873               	movf	Lcd_Out2@x,w
  2557  047B  3E80               	addlw	128
  2558  047C  2C85               	goto	L3
  2559  047D                     i1l1154:	
  2560                           ;flex_lcd.h: 121: case 2: data = 192 + x; break;
  2561                           
  2562  047D  0873               	movf	Lcd_Out2@x,w
  2563  047E  3EC0               	addlw	192
  2564  047F  2C85               	goto	L3
  2565  0480                     i1l1156:	
  2566                           ;flex_lcd.h: 122: case 3: data = 148 + x; break;
  2567                           
  2568  0480  0873               	movf	Lcd_Out2@x,w
  2569  0481  3E94               	addlw	148
  2570  0482  2C85               	goto	L3
  2571  0483                     i1l1158:	
  2572                           ;flex_lcd.h: 123: case 4: data = 212 + x; break;
  2573                           
  2574  0483  0873               	movf	Lcd_Out2@x,w
  2575  0484  3ED4               	addlw	212
  2576  0485                     L3:	
  2577  0485  00F5               	movwf	??_Lcd_Out2
  2578  0486  0875               	movf	??_Lcd_Out2,w
  2579  0487  00F7               	movwf	Lcd_Out2@data
  2580                           
  2581                           ;flex_lcd.h: 125: }
  2582                           
  2583                           ;flex_lcd.h: 124: default: break;
  2584  0488  2C97               	goto	i1l1164
  2585  0489                     i1l1162:	
  2586  0489  0876               	movf	Lcd_Out2@y,w
  2587                           
  2588                           ; Switch size 1, requested type "space"
  2589                           ; Number of cases is 4, Range of values is 1 to 4
  2590                           ; switch strategies available:
  2591                           ; Name         Instructions Cycles
  2592                           ; simple_byte           13     7 (average)
  2593                           ; direct_byte           17     9 (fixed)
  2594                           ; jumptable            263     9 (fixed)
  2595                           ;	Chosen strategy is simple_byte
  2596  048A  3A01               	xorlw	1	; case 1
  2597  048B  1903               	skipnz
  2598  048C  2C7A               	goto	i1l1152
  2599  048D  3A03               	xorlw	3	; case 2
  2600  048E  1903               	skipnz
  2601  048F  2C7D               	goto	i1l1154
  2602  0490  3A01               	xorlw	1	; case 3
  2603  0491  1903               	skipnz
  2604  0492  2C80               	goto	i1l1156
  2605  0493  3A07               	xorlw	7	; case 4
  2606  0494  1903               	skipnz
  2607  0495  2C83               	goto	i1l1158
  2608  0496  2C97               	goto	i1l1164
  2609  0497                     i1l1164:	
  2610                           
  2611                           ;flex_lcd.h: 126: Lcd_Cmd(data);
  2612  0497  0877               	movf	Lcd_Out2@data,w
  2613  0498  3183  236B  3184   	fcall	i1_Lcd_Cmd
  2614  049B                     i1l1170:	
  2615                           ;flex_lcd.h: 127: while(*buffer)
  2616                           
  2617  049B  0874               	movf	Lcd_Out2@buffer,w
  2618  049C  0086               	movwf	6
  2619  049D  0187               	clrf	7
  2620  049E  0801               	movf	1,w
  2621  049F  1903               	btfsc	3,2
  2622  04A0  0008               	return
  2623                           
  2624                           ;flex_lcd.h: 128: {
  2625                           ;flex_lcd.h: 129: Lcd_Chr_CP(*buffer);
  2626  04A1  0874               	movf	Lcd_Out2@buffer,w
  2627  04A2  0086               	movwf	6
  2628  04A3  0187               	clrf	7
  2629  04A4  0801               	movf	1,w
  2630  04A5  3182  2239  3184   	fcall	_Lcd_Chr_CP
  2631                           
  2632                           ;flex_lcd.h: 130: buffer++;
  2633  04A8  3001               	movlw	1
  2634  04A9  00F5               	movwf	??_Lcd_Out2
  2635  04AA  0875               	movf	??_Lcd_Out2,w
  2636  04AB  07F4               	addwf	Lcd_Out2@buffer,f
  2637  04AC  2C9B               	goto	i1l1170
  2638  04AD                     __end_of_Lcd_Out2:	
  2639                           ;flex_lcd.h: 131: }
  2640                           ;flex_lcd.h: 132: return;
  2641                           
  2642                           
  2643                           	psect	text9
  2644  0441                     __ptext9:	
  2645 ;; *************** function _Lcd_Out *****************
  2646 ;; Defined at:
  2647 ;;		line 94 in file "flex_lcd.h"
  2648 ;; Parameters:    Size  Location     Type
  2649 ;;  y               1    wreg     unsigned char 
  2650 ;;  x               1    3[COMMON] unsigned char 
  2651 ;;  buffer          2    4[COMMON] PTR const unsigned char 
  2652 ;;		 -> STR_2(12), 
  2653 ;; Auto vars:     Size  Location     Type
  2654 ;;  y               1    7[COMMON] unsigned char 
  2655 ;;  data            1    8[COMMON] unsigned char 
  2656 ;; Return value:  Size  Location     Type
  2657 ;;                  1    wreg      void 
  2658 ;; Registers used:
  2659 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2660 ;; Tracked objects:
  2661 ;;		On entry : 0/0
  2662 ;;		On exit  : 0/0
  2663 ;;		Unchanged: 0/0
  2664 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
  2665 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  2666 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  2667 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  2668 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  2669 ;;Total ram usage:        6 bytes
  2670 ;; Hardware stack levels used:    1
  2671 ;; Hardware stack levels required when called:    1
  2672 ;; This function calls:
  2673 ;;		_Lcd_Chr_CP
  2674 ;;		i1_Lcd_Cmd
  2675 ;; This function is called by:
  2676 ;;		_interrupcion
  2677 ;; This function uses a non-reentrant model
  2678 ;;
  2679                           
  2680                           
  2681                           ;psect for function _Lcd_Out
  2682  0441                     _Lcd_Out:	
  2683                           
  2684                           ;incstack = 0
  2685                           ; Regs used in _Lcd_Out: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2686                           ;Lcd_Out@y stored from wreg
  2687  0441  00F7               	movwf	Lcd_Out@y
  2688                           
  2689                           ;flex_lcd.h: 96: unsigned char data;
  2690                           ;flex_lcd.h: 97: switch (y)
  2691  0442  2C52               	goto	i1l1140
  2692  0443                     i1l1130:	
  2693                           ;flex_lcd.h: 98: {
  2694                           ;flex_lcd.h: 99: case 1: data = 128 + x; break;
  2695                           
  2696  0443  0873               	movf	Lcd_Out@x,w
  2697  0444  3E80               	addlw	128
  2698  0445  2C4E               	goto	L6
  2699  0446                     i1l1132:	
  2700                           ;flex_lcd.h: 100: case 2: data = 192 + x; break;
  2701                           
  2702  0446  0873               	movf	Lcd_Out@x,w
  2703  0447  3EC0               	addlw	192
  2704  0448  2C4E               	goto	L6
  2705  0449                     i1l1134:	
  2706                           ;flex_lcd.h: 101: case 3: data = 148 + x; break;
  2707                           
  2708  0449  0873               	movf	Lcd_Out@x,w
  2709  044A  3E94               	addlw	148
  2710  044B  2C4E               	goto	L6
  2711  044C                     i1l1136:	
  2712                           ;flex_lcd.h: 102: case 4: data = 212 + x; break;
  2713                           
  2714  044C  0873               	movf	Lcd_Out@x,w
  2715  044D  3ED4               	addlw	212
  2716  044E                     L6:	
  2717  044E  00F6               	movwf	??_Lcd_Out
  2718  044F  0876               	movf	??_Lcd_Out,w
  2719  0450  00F8               	movwf	Lcd_Out@data
  2720                           
  2721                           ;flex_lcd.h: 104: }
  2722                           
  2723                           ;flex_lcd.h: 103: default: break;
  2724  0451  2C60               	goto	i1l1142
  2725  0452                     i1l1140:	
  2726  0452  0877               	movf	Lcd_Out@y,w
  2727                           
  2728                           ; Switch size 1, requested type "space"
  2729                           ; Number of cases is 4, Range of values is 1 to 4
  2730                           ; switch strategies available:
  2731                           ; Name         Instructions Cycles
  2732                           ; simple_byte           13     7 (average)
  2733                           ; direct_byte           17     9 (fixed)
  2734                           ; jumptable            263     9 (fixed)
  2735                           ;	Chosen strategy is simple_byte
  2736  0453  3A01               	xorlw	1	; case 1
  2737  0454  1903               	skipnz
  2738  0455  2C43               	goto	i1l1130
  2739  0456  3A03               	xorlw	3	; case 2
  2740  0457  1903               	skipnz
  2741  0458  2C46               	goto	i1l1132
  2742  0459  3A01               	xorlw	1	; case 3
  2743  045A  1903               	skipnz
  2744  045B  2C49               	goto	i1l1134
  2745  045C  3A07               	xorlw	7	; case 4
  2746  045D  1903               	skipnz
  2747  045E  2C4C               	goto	i1l1136
  2748  045F  2C60               	goto	i1l1142
  2749  0460                     i1l1142:	
  2750                           
  2751                           ;flex_lcd.h: 105: Lcd_Cmd(data);
  2752  0460  0878               	movf	Lcd_Out@data,w
  2753  0461  3183  236B  3184   	fcall	i1_Lcd_Cmd
  2754  0464                     i1l1148:	
  2755                           ;flex_lcd.h: 106: while(*buffer)
  2756                           
  2757  0464  0874               	movf	Lcd_Out@buffer,w
  2758  0465  0084               	movwf	4
  2759  0466  0875               	movf	Lcd_Out@buffer+1,w
  2760  0467  0085               	movwf	5
  2761  0468  0012               	moviw fsr0++
  2762  0469  1903               	btfsc	3,2
  2763  046A  0008               	return
  2764                           
  2765                           ;flex_lcd.h: 107: {
  2766                           ;flex_lcd.h: 108: Lcd_Chr_CP(*buffer);
  2767  046B  0874               	movf	Lcd_Out@buffer,w
  2768  046C  0084               	movwf	4
  2769  046D  0875               	movf	Lcd_Out@buffer+1,w
  2770  046E  0085               	movwf	5
  2771  046F  0800               	movf	0,w	;code access
  2772  0470  3182  2239  3184   	fcall	_Lcd_Chr_CP
  2773                           
  2774                           ;flex_lcd.h: 109: buffer++;
  2775  0473  3001               	movlw	1
  2776  0474  07F4               	addwf	Lcd_Out@buffer,f
  2777  0475  3000               	movlw	0
  2778  0476  3DF5               	addwfc	Lcd_Out@buffer+1,f
  2779  0477  2C64               	goto	i1l1148
  2780  0478                     __end_of_Lcd_Out:	
  2781                           ;flex_lcd.h: 110: }
  2782                           ;flex_lcd.h: 111: return;
  2783                           
  2784                           
  2785                           	psect	text10
  2786  036B                     __ptext10:	
  2787 ;; *************** function i1_Lcd_Cmd *****************
  2788 ;; Defined at:
  2789 ;;		line 150 in file "flex_lcd.h"
  2790 ;; Parameters:    Size  Location     Type
  2791 ;;  data            1    wreg     unsigned char 
  2792 ;; Auto vars:     Size  Location     Type
  2793 ;;  data            1    2[COMMON] unsigned char 
  2794 ;; Return value:  Size  Location     Type
  2795 ;;                  1    wreg      void 
  2796 ;; Registers used:
  2797 ;;		wreg, status,2, status,0
  2798 ;; Tracked objects:
  2799 ;;		On entry : 0/0
  2800 ;;		On exit  : 0/0
  2801 ;;		Unchanged: 0/0
  2802 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
  2803 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  2804 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  2805 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  2806 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  2807 ;;Total ram usage:        3 bytes
  2808 ;; Hardware stack levels used:    1
  2809 ;; This function calls:
  2810 ;;		Nothing
  2811 ;; This function is called by:
  2812 ;;		_Lcd_Out
  2813 ;;		_Lcd_Out2
  2814 ;;		_interrupcion
  2815 ;; This function uses a non-reentrant model
  2816 ;;
  2817                           
  2818                           
  2819                           ;psect for function i1_Lcd_Cmd
  2820  036B                     i1_Lcd_Cmd:	
  2821                           
  2822                           ;incstack = 0
  2823                           ; Regs used in i1_Lcd_Cmd: [wreg+status,2+status,0]
  2824                           ;i1Lcd_Cmd@data stored from wreg
  2825  036B  00F2               	movwf	i1Lcd_Cmd@data
  2826                           
  2827                           ;flex_lcd.h: 151: PORTDbits.RD3 = 0; PORTDbits.RD2 = 0;
  2828  036C  0140               	movlb	0	; select bank0
  2829  036D  118F               	bcf	15,3	;volatile
  2830  036E  110F               	bcf	15,2	;volatile
  2831                           
  2832                           ;flex_lcd.h: 152: PORTCbits.RC1 = (data & 0b10000000)>>7; PORTCbits.RC2 = (data & 0b0100
      +                          0000)>>6;
  2833  036F  0872               	movf	i1Lcd_Cmd@data,w
  2834  0370  00F0               	movwf	??i1_Lcd_Cmd
  2835  0371  3007               	movlw	7
  2836  0372                     u81_25:	
  2837  0372  36F0               	lsrf	??i1_Lcd_Cmd,f
  2838  0373  0B89               	decfsz	9,f
  2839  0374  2B72               	goto	u81_25
  2840  0375  0870               	movf	??i1_Lcd_Cmd,w
  2841  0376  3901               	andlw	1
  2842  0377  00F1               	movwf	??i1_Lcd_Cmd+1
  2843  0378  0DF1               	rlf	??i1_Lcd_Cmd+1,f
  2844  0379  080E               	movf	14,w	;volatile
  2845  037A  0671               	xorwf	??i1_Lcd_Cmd+1,w
  2846  037B  39FD               	andlw	-3
  2847  037C  0671               	xorwf	??i1_Lcd_Cmd+1,w
  2848  037D  008E               	movwf	14	;volatile
  2849  037E  0872               	movf	i1Lcd_Cmd@data,w
  2850  037F  00F0               	movwf	??i1_Lcd_Cmd
  2851  0380  3006               	movlw	6
  2852  0381                     u82_25:	
  2853  0381  36F0               	lsrf	??i1_Lcd_Cmd,f
  2854  0382  0B89               	decfsz	9,f
  2855  0383  2B81               	goto	u82_25
  2856  0384  0870               	movf	??i1_Lcd_Cmd,w
  2857  0385  3901               	andlw	1
  2858  0386  00F1               	movwf	??i1_Lcd_Cmd+1
  2859  0387  0DF1               	rlf	??i1_Lcd_Cmd+1,f
  2860  0388  0DF1               	rlf	??i1_Lcd_Cmd+1,f
  2861  0389  080E               	movf	14,w	;volatile
  2862  038A  0671               	xorwf	??i1_Lcd_Cmd+1,w
  2863  038B  39FB               	andlw	-5
  2864  038C  0671               	xorwf	??i1_Lcd_Cmd+1,w
  2865  038D  008E               	movwf	14	;volatile
  2866                           
  2867                           ;flex_lcd.h: 153: PORTDbits.RD0 = (data & 0b00100000)>>5; PORTDbits.RD1 = (data & 0b0001
      +                          0000)>>4;
  2868  038E  0872               	movf	i1Lcd_Cmd@data,w
  2869  038F  00F0               	movwf	??i1_Lcd_Cmd
  2870  0390  3005               	movlw	5
  2871  0391                     u83_25:	
  2872  0391  36F0               	lsrf	??i1_Lcd_Cmd,f
  2873  0392  0B89               	decfsz	9,f
  2874  0393  2B91               	goto	u83_25
  2875  0394  3001               	movlw	1
  2876  0395  0570               	andwf	??i1_Lcd_Cmd,w
  2877  0396  00F1               	movwf	??i1_Lcd_Cmd+1
  2878  0397  080F               	movf	15,w	;volatile
  2879  0398  0671               	xorwf	??i1_Lcd_Cmd+1,w
  2880  0399  39FE               	andlw	-2
  2881  039A  0671               	xorwf	??i1_Lcd_Cmd+1,w
  2882  039B  008F               	movwf	15	;volatile
  2883  039C  0872               	movf	i1Lcd_Cmd@data,w
  2884  039D  00F0               	movwf	??i1_Lcd_Cmd
  2885  039E  3004               	movlw	4
  2886  039F                     u84_25:	
  2887  039F  36F0               	lsrf	??i1_Lcd_Cmd,f
  2888  03A0  0B89               	decfsz	9,f
  2889  03A1  2B9F               	goto	u84_25
  2890  03A2  0870               	movf	??i1_Lcd_Cmd,w
  2891  03A3  3901               	andlw	1
  2892  03A4  00F1               	movwf	??i1_Lcd_Cmd+1
  2893  03A5  0DF1               	rlf	??i1_Lcd_Cmd+1,f
  2894  03A6  080F               	movf	15,w	;volatile
  2895  03A7  0671               	xorwf	??i1_Lcd_Cmd+1,w
  2896  03A8  39FD               	andlw	-3
  2897  03A9  0671               	xorwf	??i1_Lcd_Cmd+1,w
  2898  03AA  008F               	movwf	15	;volatile
  2899                           
  2900                           ;flex_lcd.h: 154: _delay(10);
  2901  03AB  3003               	movlw	3
  2902  03AC                     u123_27:	
  2903  03AC  0B89               	decfsz	9,f
  2904  03AD  2BAC               	goto	u123_27
  2905  03AE  0000               	nop
  2906                           
  2907                           ;flex_lcd.h: 155: PORTDbits.RD3 = 1; _delay((unsigned long)((5)*(32000000/4000000.0))); 
      +                          PORTDbits.RD3 = 0;
  2908  03AF  0140               	movlb	0	; select bank0
  2909  03B0  158F               	bsf	15,3	;volatile
  2910  03B1  300D               	movlw	13
  2911  03B2                     u124_27:	
  2912  03B2  0B89               	decfsz	9,f
  2913  03B3  2BB2               	goto	u124_27
  2914  03B4  0000               	nop
  2915  03B5  0140               	movlb	0	; select bank0
  2916  03B6  118F               	bcf	15,3	;volatile
  2917                           
  2918                           ;flex_lcd.h: 156: PORTCbits.RC1 = (data & 0b00001000)>>3; PORTCbits.RC2 = (data & 0b0000
      +                          0100)>>2;
  2919  03B7  0872               	movf	i1Lcd_Cmd@data,w
  2920  03B8  00F0               	movwf	??i1_Lcd_Cmd
  2921  03B9  3003               	movlw	3
  2922  03BA                     u85_25:	
  2923  03BA  36F0               	lsrf	??i1_Lcd_Cmd,f
  2924  03BB  0B89               	decfsz	9,f
  2925  03BC  2BBA               	goto	u85_25
  2926  03BD  0870               	movf	??i1_Lcd_Cmd,w
  2927  03BE  3901               	andlw	1
  2928  03BF  00F1               	movwf	??i1_Lcd_Cmd+1
  2929  03C0  0DF1               	rlf	??i1_Lcd_Cmd+1,f
  2930  03C1  080E               	movf	14,w	;volatile
  2931  03C2  0671               	xorwf	??i1_Lcd_Cmd+1,w
  2932  03C3  39FD               	andlw	-3
  2933  03C4  0671               	xorwf	??i1_Lcd_Cmd+1,w
  2934  03C5  008E               	movwf	14	;volatile
  2935  03C6  0872               	movf	i1Lcd_Cmd@data,w
  2936  03C7  00F0               	movwf	??i1_Lcd_Cmd
  2937  03C8  3002               	movlw	2
  2938  03C9                     u86_25:	
  2939  03C9  36F0               	lsrf	??i1_Lcd_Cmd,f
  2940  03CA  0B89               	decfsz	9,f
  2941  03CB  2BC9               	goto	u86_25
  2942  03CC  0870               	movf	??i1_Lcd_Cmd,w
  2943  03CD  3901               	andlw	1
  2944  03CE  00F1               	movwf	??i1_Lcd_Cmd+1
  2945  03CF  0DF1               	rlf	??i1_Lcd_Cmd+1,f
  2946  03D0  0DF1               	rlf	??i1_Lcd_Cmd+1,f
  2947  03D1  080E               	movf	14,w	;volatile
  2948  03D2  0671               	xorwf	??i1_Lcd_Cmd+1,w
  2949  03D3  39FB               	andlw	-5
  2950  03D4  0671               	xorwf	??i1_Lcd_Cmd+1,w
  2951  03D5  008E               	movwf	14	;volatile
  2952                           
  2953                           ;flex_lcd.h: 157: PORTDbits.RD0 = (data & 0b00000010)>>1; PORTDbits.RD1 = (data & 0b0000
      +                          0001);
  2954  03D6  0872               	movf	i1Lcd_Cmd@data,w
  2955  03D7  00F0               	movwf	??i1_Lcd_Cmd
  2956  03D8  3001               	movlw	1
  2957  03D9                     u87_25:	
  2958  03D9  36F0               	lsrf	??i1_Lcd_Cmd,f
  2959  03DA  0B89               	decfsz	9,f
  2960  03DB  2BD9               	goto	u87_25
  2961  03DC  3001               	movlw	1
  2962  03DD  0570               	andwf	??i1_Lcd_Cmd,w
  2963  03DE  00F1               	movwf	??i1_Lcd_Cmd+1
  2964  03DF  080F               	movf	15,w	;volatile
  2965  03E0  0671               	xorwf	??i1_Lcd_Cmd+1,w
  2966  03E1  39FE               	andlw	-2
  2967  03E2  0671               	xorwf	??i1_Lcd_Cmd+1,w
  2968  03E3  008F               	movwf	15	;volatile
  2969  03E4  0872               	movf	i1Lcd_Cmd@data,w
  2970  03E5  3901               	andlw	1
  2971  03E6  00F0               	movwf	??i1_Lcd_Cmd
  2972  03E7  0DF0               	rlf	??i1_Lcd_Cmd,f
  2973  03E8  080F               	movf	15,w	;volatile
  2974  03E9  0670               	xorwf	??i1_Lcd_Cmd,w
  2975  03EA  39FD               	andlw	-3
  2976  03EB  0670               	xorwf	??i1_Lcd_Cmd,w
  2977  03EC  008F               	movwf	15	;volatile
  2978                           
  2979                           ;flex_lcd.h: 158: _delay(10);
  2980  03ED  3003               	movlw	3
  2981  03EE                     u125_27:	
  2982  03EE  0B89               	decfsz	9,f
  2983  03EF  2BEE               	goto	u125_27
  2984  03F0  0000               	nop
  2985                           
  2986                           ;flex_lcd.h: 159: PORTDbits.RD3 = 1; _delay((unsigned long)((5)*(32000000/4000000.0))); 
      +                          PORTDbits.RD3 = 0;
  2987  03F1  0140               	movlb	0	; select bank0
  2988  03F2  158F               	bsf	15,3	;volatile
  2989  03F3  300D               	movlw	13
  2990  03F4                     u126_27:	
  2991  03F4  0B89               	decfsz	9,f
  2992  03F5  2BF4               	goto	u126_27
  2993  03F6  0000               	nop
  2994  03F7  0140               	movlb	0	; select bank0
  2995  03F8  118F               	bcf	15,3	;volatile
  2996                           
  2997                           ;flex_lcd.h: 160: _delay((unsigned long)((5500)*(32000000/4000000.0)));
  2998  03F9  303A               	movlw	58
  2999  03FA  00F0               	movwf	??i1_Lcd_Cmd
  3000  03FB  3023               	movlw	35
  3001  03FC                     u127_27:	
  3002  03FC  0B89               	decfsz	9,f
  3003  03FD  2BFC               	goto	u127_27
  3004  03FE  0BF0               	decfsz	??i1_Lcd_Cmd,f
  3005  03FF  2BFC               	goto	u127_27
  3006  0400  0000               	nop
  3007  0401  0008               	return
  3008  0402                     __end_ofi1_Lcd_Cmd:	
  3009                           
  3010                           	psect	text11
  3011  0239                     __ptext11:	
  3012 ;; *************** function _Lcd_Chr_CP *****************
  3013 ;; Defined at:
  3014 ;;		line 136 in file "flex_lcd.h"
  3015 ;; Parameters:    Size  Location     Type
  3016 ;;  data            1    wreg     unsigned char 
  3017 ;; Auto vars:     Size  Location     Type
  3018 ;;  data            1    2[COMMON] unsigned char 
  3019 ;; Return value:  Size  Location     Type
  3020 ;;                  1    wreg      void 
  3021 ;; Registers used:
  3022 ;;		wreg, status,2, status,0
  3023 ;; Tracked objects:
  3024 ;;		On entry : 0/0
  3025 ;;		On exit  : 0/0
  3026 ;;		Unchanged: 0/0
  3027 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
  3028 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  3029 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  3030 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  3031 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  3032 ;;Total ram usage:        3 bytes
  3033 ;; Hardware stack levels used:    1
  3034 ;; This function calls:
  3035 ;;		Nothing
  3036 ;; This function is called by:
  3037 ;;		_Lcd_Out
  3038 ;;		_Lcd_Out2
  3039 ;; This function uses a non-reentrant model
  3040 ;;
  3041                           
  3042                           
  3043                           ;psect for function _Lcd_Chr_CP
  3044  0239                     _Lcd_Chr_CP:	
  3045                           
  3046                           ;incstack = 0
  3047                           ; Regs used in _Lcd_Chr_CP: [wreg+status,2+status,0]
  3048                           ;Lcd_Chr_CP@data stored from wreg
  3049  0239  00F2               	movwf	Lcd_Chr_CP@data
  3050                           
  3051                           ;flex_lcd.h: 137: PORTDbits.RD3 = 0; PORTDbits.RD2 = 1;
  3052  023A  0140               	movlb	0	; select bank0
  3053  023B  118F               	bcf	15,3	;volatile
  3054  023C  150F               	bsf	15,2	;volatile
  3055                           
  3056                           ;flex_lcd.h: 138: PORTCbits.RC1 = (data & 0b10000000)>>7; PORTCbits.RC2 = (data & 0b0100
      +                          0000)>>6;
  3057  023D  0872               	movf	Lcd_Chr_CP@data,w
  3058  023E  00F0               	movwf	??_Lcd_Chr_CP
  3059  023F  3007               	movlw	7
  3060  0240                     u61_25:	
  3061  0240  36F0               	lsrf	??_Lcd_Chr_CP,f
  3062  0241  0B89               	decfsz	9,f
  3063  0242  2A40               	goto	u61_25
  3064  0243  0870               	movf	??_Lcd_Chr_CP,w
  3065  0244  3901               	andlw	1
  3066  0245  00F1               	movwf	??_Lcd_Chr_CP+1
  3067  0246  0DF1               	rlf	??_Lcd_Chr_CP+1,f
  3068  0247  080E               	movf	14,w	;volatile
  3069  0248  0671               	xorwf	??_Lcd_Chr_CP+1,w
  3070  0249  39FD               	andlw	-3
  3071  024A  0671               	xorwf	??_Lcd_Chr_CP+1,w
  3072  024B  008E               	movwf	14	;volatile
  3073  024C  0872               	movf	Lcd_Chr_CP@data,w
  3074  024D  00F0               	movwf	??_Lcd_Chr_CP
  3075  024E  3006               	movlw	6
  3076  024F                     u62_25:	
  3077  024F  36F0               	lsrf	??_Lcd_Chr_CP,f
  3078  0250  0B89               	decfsz	9,f
  3079  0251  2A4F               	goto	u62_25
  3080  0252  0870               	movf	??_Lcd_Chr_CP,w
  3081  0253  3901               	andlw	1
  3082  0254  00F1               	movwf	??_Lcd_Chr_CP+1
  3083  0255  0DF1               	rlf	??_Lcd_Chr_CP+1,f
  3084  0256  0DF1               	rlf	??_Lcd_Chr_CP+1,f
  3085  0257  080E               	movf	14,w	;volatile
  3086  0258  0671               	xorwf	??_Lcd_Chr_CP+1,w
  3087  0259  39FB               	andlw	-5
  3088  025A  0671               	xorwf	??_Lcd_Chr_CP+1,w
  3089  025B  008E               	movwf	14	;volatile
  3090                           
  3091                           ;flex_lcd.h: 139: PORTDbits.RD0 = (data & 0b00100000)>>5; PORTDbits.RD1 = (data & 0b0001
      +                          0000)>>4;
  3092  025C  0872               	movf	Lcd_Chr_CP@data,w
  3093  025D  00F0               	movwf	??_Lcd_Chr_CP
  3094  025E  3005               	movlw	5
  3095  025F                     u63_25:	
  3096  025F  36F0               	lsrf	??_Lcd_Chr_CP,f
  3097  0260  0B89               	decfsz	9,f
  3098  0261  2A5F               	goto	u63_25
  3099  0262  3001               	movlw	1
  3100  0263  0570               	andwf	??_Lcd_Chr_CP,w
  3101  0264  00F1               	movwf	??_Lcd_Chr_CP+1
  3102  0265  080F               	movf	15,w	;volatile
  3103  0266  0671               	xorwf	??_Lcd_Chr_CP+1,w
  3104  0267  39FE               	andlw	-2
  3105  0268  0671               	xorwf	??_Lcd_Chr_CP+1,w
  3106  0269  008F               	movwf	15	;volatile
  3107  026A  0872               	movf	Lcd_Chr_CP@data,w
  3108  026B  00F0               	movwf	??_Lcd_Chr_CP
  3109  026C  3004               	movlw	4
  3110  026D                     u64_25:	
  3111  026D  36F0               	lsrf	??_Lcd_Chr_CP,f
  3112  026E  0B89               	decfsz	9,f
  3113  026F  2A6D               	goto	u64_25
  3114  0270  0870               	movf	??_Lcd_Chr_CP,w
  3115  0271  3901               	andlw	1
  3116  0272  00F1               	movwf	??_Lcd_Chr_CP+1
  3117  0273  0DF1               	rlf	??_Lcd_Chr_CP+1,f
  3118  0274  080F               	movf	15,w	;volatile
  3119  0275  0671               	xorwf	??_Lcd_Chr_CP+1,w
  3120  0276  39FD               	andlw	-3
  3121  0277  0671               	xorwf	??_Lcd_Chr_CP+1,w
  3122  0278  008F               	movwf	15	;volatile
  3123                           
  3124                           ;flex_lcd.h: 140: _delay(10);
  3125  0279  3003               	movlw	3
  3126  027A                     u128_27:	
  3127  027A  0B89               	decfsz	9,f
  3128  027B  2A7A               	goto	u128_27
  3129  027C  0000               	nop
  3130                           
  3131                           ;flex_lcd.h: 141: PORTDbits.RD3 = 1; _delay((unsigned long)((5)*(32000000/4000000.0))); 
      +                          PORTDbits.RD3 = 0;
  3132  027D  0140               	movlb	0	; select bank0
  3133  027E  158F               	bsf	15,3	;volatile
  3134  027F  300D               	movlw	13
  3135  0280                     u129_27:	
  3136  0280  0B89               	decfsz	9,f
  3137  0281  2A80               	goto	u129_27
  3138  0282  0000               	nop
  3139  0283  0140               	movlb	0	; select bank0
  3140  0284  118F               	bcf	15,3	;volatile
  3141                           
  3142                           ;flex_lcd.h: 142: PORTCbits.RC1 = (data & 0b00001000)>>3; PORTCbits.RC2 = (data & 0b0000
      +                          0100)>>2;
  3143  0285  0872               	movf	Lcd_Chr_CP@data,w
  3144  0286  00F0               	movwf	??_Lcd_Chr_CP
  3145  0287  3003               	movlw	3
  3146  0288                     u65_25:	
  3147  0288  36F0               	lsrf	??_Lcd_Chr_CP,f
  3148  0289  0B89               	decfsz	9,f
  3149  028A  2A88               	goto	u65_25
  3150  028B  0870               	movf	??_Lcd_Chr_CP,w
  3151  028C  3901               	andlw	1
  3152  028D  00F1               	movwf	??_Lcd_Chr_CP+1
  3153  028E  0DF1               	rlf	??_Lcd_Chr_CP+1,f
  3154  028F  080E               	movf	14,w	;volatile
  3155  0290  0671               	xorwf	??_Lcd_Chr_CP+1,w
  3156  0291  39FD               	andlw	-3
  3157  0292  0671               	xorwf	??_Lcd_Chr_CP+1,w
  3158  0293  008E               	movwf	14	;volatile
  3159  0294  0872               	movf	Lcd_Chr_CP@data,w
  3160  0295  00F0               	movwf	??_Lcd_Chr_CP
  3161  0296  3002               	movlw	2
  3162  0297                     u66_25:	
  3163  0297  36F0               	lsrf	??_Lcd_Chr_CP,f
  3164  0298  0B89               	decfsz	9,f
  3165  0299  2A97               	goto	u66_25
  3166  029A  0870               	movf	??_Lcd_Chr_CP,w
  3167  029B  3901               	andlw	1
  3168  029C  00F1               	movwf	??_Lcd_Chr_CP+1
  3169  029D  0DF1               	rlf	??_Lcd_Chr_CP+1,f
  3170  029E  0DF1               	rlf	??_Lcd_Chr_CP+1,f
  3171  029F  080E               	movf	14,w	;volatile
  3172  02A0  0671               	xorwf	??_Lcd_Chr_CP+1,w
  3173  02A1  39FB               	andlw	-5
  3174  02A2  0671               	xorwf	??_Lcd_Chr_CP+1,w
  3175  02A3  008E               	movwf	14	;volatile
  3176                           
  3177                           ;flex_lcd.h: 143: PORTDbits.RD0 = (data & 0b00000010)>>1; PORTDbits.RD1 = (data & 0b0000
      +                          0001);
  3178  02A4  0872               	movf	Lcd_Chr_CP@data,w
  3179  02A5  00F0               	movwf	??_Lcd_Chr_CP
  3180  02A6  3001               	movlw	1
  3181  02A7                     u67_25:	
  3182  02A7  36F0               	lsrf	??_Lcd_Chr_CP,f
  3183  02A8  0B89               	decfsz	9,f
  3184  02A9  2AA7               	goto	u67_25
  3185  02AA  3001               	movlw	1
  3186  02AB  0570               	andwf	??_Lcd_Chr_CP,w
  3187  02AC  00F1               	movwf	??_Lcd_Chr_CP+1
  3188  02AD  080F               	movf	15,w	;volatile
  3189  02AE  0671               	xorwf	??_Lcd_Chr_CP+1,w
  3190  02AF  39FE               	andlw	-2
  3191  02B0  0671               	xorwf	??_Lcd_Chr_CP+1,w
  3192  02B1  008F               	movwf	15	;volatile
  3193  02B2  0872               	movf	Lcd_Chr_CP@data,w
  3194  02B3  3901               	andlw	1
  3195  02B4  00F0               	movwf	??_Lcd_Chr_CP
  3196  02B5  0DF0               	rlf	??_Lcd_Chr_CP,f
  3197  02B6  080F               	movf	15,w	;volatile
  3198  02B7  0670               	xorwf	??_Lcd_Chr_CP,w
  3199  02B8  39FD               	andlw	-3
  3200  02B9  0670               	xorwf	??_Lcd_Chr_CP,w
  3201  02BA  008F               	movwf	15	;volatile
  3202                           
  3203                           ;flex_lcd.h: 144: _delay(10);
  3204  02BB  3003               	movlw	3
  3205  02BC                     u130_27:	
  3206  02BC  0B89               	decfsz	9,f
  3207  02BD  2ABC               	goto	u130_27
  3208  02BE  0000               	nop
  3209                           
  3210                           ;flex_lcd.h: 145: PORTDbits.RD3 = 1; _delay((unsigned long)((5)*(32000000/4000000.0))); 
      +                          PORTDbits.RD3 = 0;
  3211  02BF  0140               	movlb	0	; select bank0
  3212  02C0  158F               	bsf	15,3	;volatile
  3213  02C1  300D               	movlw	13
  3214  02C2                     u131_27:	
  3215  02C2  0B89               	decfsz	9,f
  3216  02C3  2AC2               	goto	u131_27
  3217  02C4  0000               	nop
  3218  02C5  0140               	movlb	0	; select bank0
  3219  02C6  118F               	bcf	15,3	;volatile
  3220                           
  3221                           ;flex_lcd.h: 146: _delay((unsigned long)((5)*(32000000/4000000.0))); _delay((unsigned lo
      +                          ng)((5500)*(32000000/4000000.0)));
  3222  02C7  300D               	movlw	13
  3223  02C8                     u132_27:	
  3224  02C8  0B89               	decfsz	9,f
  3225  02C9  2AC8               	goto	u132_27
  3226  02CA  0000               	nop
  3227  02CB  303A               	movlw	58
  3228  02CC  00F0               	movwf	??_Lcd_Chr_CP
  3229  02CD  3023               	movlw	35
  3230  02CE                     u133_27:	
  3231  02CE  0B89               	decfsz	9,f
  3232  02CF  2ACE               	goto	u133_27
  3233  02D0  0BF0               	decfsz	??_Lcd_Chr_CP,f
  3234  02D1  2ACE               	goto	u133_27
  3235  02D2  0000               	nop
  3236  02D3  0008               	return
  3237  02D4                     __end_of_Lcd_Chr_CP:	
  3238  007E                     btemp	set	126	;btemp
  3239  007E                     int$flags	set	126
  3240  007E                     wtemp0	set	126


Data Sizes:
    Strings     25
    Constant    10
    Data        6
    BSS         20
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     32      58
    BANK1            80      0       0
    BANK2            80      0       0
    BANK3            80      0       0
    BANK4            80      0       0
    BANK5            80      0       0
    BANK6            80      0       0
    BANK7            80      0       0
    BANK8            80      0       0
    BANK9            80      0       0
    BANK10           80      0       0
    BANK11           80      0       0
    BANK12           80      0       0
    BANK13           80      0       0
    BANK14           80      0       0
    BANK15           80      0       0
    BANK16           80      0       0
    BANK17           80      0       0
    BANK18           80      0       0
    BANK19           80      0       0
    BANK20           80      0       0
    BANK21           80      0       0
    BANK22           80      0       0
    BANK23           80      0       0
    BANK24           80      0       0
    BANK25           80      0       0
    BANK26           80      0       0
    BANK27           80      0       0
    BANK28           80      0       0
    BANK29           80      0       0
    BANK30           80      0       0
    BANK31           80      0       0
    BANK32           80      0       0
    BANK33           80      0       0
    BANK34           80      0       0
    BANK35           80      0       0
    BANK36           80      0       0
    BANK37           80      0       0
    BANK38           80      0       0
    BANK39           80      0       0
    BANK40           80      0       0
    BANK41           80      0       0
    BANK42           80      0       0
    BANK43           80      0       0
    BANK44           80      0       0
    BANK45           80      0       0
    BANK46           80      0       0
    BANK47           80      0       0
    BANK48           80      0       0
    BANK49           80      0       0
    BANK50           80      0       0

Pointer List with Targets:

    sprintf@f	PTR const unsigned char  size(2) Largest target is 13
		 -> STR_1(CODE[13]), 

    sprintf@sp	PTR unsigned char  size(1) Largest target is 16
		 -> buffer1(BANK0[16]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    Lcd_Out2@buffer	PTR unsigned char  size(1) Largest target is 16
		 -> buffer1(BANK0[16]), 

    Lcd_Out@buffer	PTR const unsigned char  size(2) Largest target is 12
		 -> STR_2(CODE[12]), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _interrupcion in COMMON

    _sprintf->___lwmod
    ___lwmod->___lwdiv
    _Lcd_Out2->_Lcd_Chr_CP
    _Lcd_Out2->i1_Lcd_Cmd
    _Lcd_Out->_Lcd_Chr_CP
    _Lcd_Out->i1_Lcd_Cmd

Critical Paths under _main in BANK0

    _main->_Lcd_Init
    _Lcd_Init->_Lcd_Cmd

Critical Paths under _interrupcion in BANK0

    _interrupcion->_sprintf

Critical Paths under _main in BANK1

    None.

Critical Paths under _interrupcion in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _interrupcion in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _interrupcion in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _interrupcion in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _interrupcion in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _interrupcion in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _interrupcion in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _interrupcion in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _interrupcion in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _interrupcion in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _interrupcion in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _interrupcion in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _interrupcion in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _interrupcion in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _interrupcion in BANK15

    None.

Critical Paths under _main in BANK16

    None.

Critical Paths under _interrupcion in BANK16

    None.

Critical Paths under _main in BANK17

    None.

Critical Paths under _interrupcion in BANK17

    None.

Critical Paths under _main in BANK18

    None.

Critical Paths under _interrupcion in BANK18

    None.

Critical Paths under _main in BANK19

    None.

Critical Paths under _interrupcion in BANK19

    None.

Critical Paths under _main in BANK20

    None.

Critical Paths under _interrupcion in BANK20

    None.

Critical Paths under _main in BANK21

    None.

Critical Paths under _interrupcion in BANK21

    None.

Critical Paths under _main in BANK22

    None.

Critical Paths under _interrupcion in BANK22

    None.

Critical Paths under _main in BANK23

    None.

Critical Paths under _interrupcion in BANK23

    None.

Critical Paths under _main in BANK24

    None.

Critical Paths under _interrupcion in BANK24

    None.

Critical Paths under _main in BANK25

    None.

Critical Paths under _interrupcion in BANK25

    None.

Critical Paths under _main in BANK26

    None.

Critical Paths under _interrupcion in BANK26

    None.

Critical Paths under _main in BANK27

    None.

Critical Paths under _interrupcion in BANK27

    None.

Critical Paths under _main in BANK28

    None.

Critical Paths under _interrupcion in BANK28

    None.

Critical Paths under _main in BANK29

    None.

Critical Paths under _interrupcion in BANK29

    None.

Critical Paths under _main in BANK30

    None.

Critical Paths under _interrupcion in BANK30

    None.

Critical Paths under _main in BANK31

    None.

Critical Paths under _interrupcion in BANK31

    None.

Critical Paths under _main in BANK32

    None.

Critical Paths under _interrupcion in BANK32

    None.

Critical Paths under _main in BANK33

    None.

Critical Paths under _interrupcion in BANK33

    None.

Critical Paths under _main in BANK34

    None.

Critical Paths under _interrupcion in BANK34

    None.

Critical Paths under _main in BANK35

    None.

Critical Paths under _interrupcion in BANK35

    None.

Critical Paths under _main in BANK36

    None.

Critical Paths under _interrupcion in BANK36

    None.

Critical Paths under _main in BANK37

    None.

Critical Paths under _interrupcion in BANK37

    None.

Critical Paths under _main in BANK38

    None.

Critical Paths under _interrupcion in BANK38

    None.

Critical Paths under _main in BANK39

    None.

Critical Paths under _interrupcion in BANK39

    None.

Critical Paths under _main in BANK40

    None.

Critical Paths under _interrupcion in BANK40

    None.

Critical Paths under _main in BANK41

    None.

Critical Paths under _interrupcion in BANK41

    None.

Critical Paths under _main in BANK42

    None.

Critical Paths under _interrupcion in BANK42

    None.

Critical Paths under _main in BANK43

    None.

Critical Paths under _interrupcion in BANK43

    None.

Critical Paths under _main in BANK44

    None.

Critical Paths under _interrupcion in BANK44

    None.

Critical Paths under _main in BANK45

    None.

Critical Paths under _interrupcion in BANK45

    None.

Critical Paths under _main in BANK46

    None.

Critical Paths under _interrupcion in BANK46

    None.

Critical Paths under _main in BANK47

    None.

Critical Paths under _interrupcion in BANK47

    None.

Critical Paths under _main in BANK48

    None.

Critical Paths under _interrupcion in BANK48

    None.

Critical Paths under _main in BANK49

    None.

Critical Paths under _interrupcion in BANK49

    None.

Critical Paths under _main in BANK50

    None.

Critical Paths under _interrupcion in BANK50

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 6     2      4     490
                                             26 BANK0      6     2      4
                            _Lcd_Cmd
                           _Lcd_Init
 ---------------------------------------------------------------------------------
 (1) _Lcd_Init                                             2     2      0     314
                                             24 BANK0      2     2      0
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (2) _Lcd_Cmd                                              3     3      0     176
                                             21 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _interrupcion                                         2     2      0    2904
                                             19 BANK0      2     2      0
                            _Lcd_Out
                           _Lcd_Out2
                                _bum
                            _sprintf
                          i1_Lcd_Cmd
 ---------------------------------------------------------------------------------
 (4) _sprintf                                             27    19      8    1148
                                              0 BANK0     19    11      8
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (5) ___lwmod                                              6     2      4     287
                                              8 COMMON     6     2      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (5) ___lwdiv                                              8     4      4     290
                                              0 COMMON     8     4      4
 ---------------------------------------------------------------------------------
 (4) _bum                                                  6     0      6     258
                                              0 COMMON     6     0      6
 ---------------------------------------------------------------------------------
 (4) _Lcd_Out2                                             5     3      2     661
                                              3 COMMON     5     3      2
                         _Lcd_Chr_CP
                          i1_Lcd_Cmd
 ---------------------------------------------------------------------------------
 (4) _Lcd_Out                                              6     3      3     661
                                              3 COMMON     6     3      3
                         _Lcd_Chr_CP
                          i1_Lcd_Cmd
 ---------------------------------------------------------------------------------
 (4) i1_Lcd_Cmd                                            3     3      0     176
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (5) _Lcd_Chr_CP                                           3     3      0     176
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Lcd_Cmd
   _Lcd_Init
     _Lcd_Cmd

 _interrupcion (ROOT)
   _Lcd_Out
     _Lcd_Chr_CP
     i1_Lcd_Cmd
   _Lcd_Out2
     _Lcd_Chr_CP
     i1_Lcd_Cmd
   _bum
   _sprintf
     ___lwdiv
     ___lwmod
       ___lwdiv (ARG)
   i1_Lcd_Cmd

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             FF0      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      E       E       2      100.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     20      3A       5       72.5%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BITBANK2            50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BANK2               50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BITBANK3            50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BANK3               50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITBANK4            50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BANK4               50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITBANK5            50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BANK5               50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITBANK6            50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BANK6               50      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITBANK7            50      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BANK7               50      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITBANK8            50      0       0      20        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BANK8               50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BITBANK9            50      0       0      22        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BANK9               50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BITBANK10           50      0       0      24        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BANK10              50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BITBANK11           50      0       0      26        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BANK11              50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
ABS                  0      0      48      28        0.0%
BITBANK12           50      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BANK12              50      0       0      30        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITBANK13           50      0       0      31        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BANK13              50      0       0      32        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%
BITBANK14           50      0       0      33        0.0%
BITSFR32             0      0       0      33        0.0%
SFR32                0      0       0      33        0.0%
BANK14              50      0       0      34        0.0%
BITSFR33             0      0       0      34        0.0%
SFR33                0      0       0      34        0.0%
BITBANK15           50      0       0      35        0.0%
BITSFR34             0      0       0      35        0.0%
SFR34                0      0       0      35        0.0%
BANK15              50      0       0      36        0.0%
BITSFR35             0      0       0      36        0.0%
SFR35                0      0       0      36        0.0%
BITBANK16           50      0       0      37        0.0%
BITSFR36             0      0       0      37        0.0%
SFR36                0      0       0      37        0.0%
BANK16              50      0       0      38        0.0%
BITSFR37             0      0       0      38        0.0%
SFR37                0      0       0      38        0.0%
BITBANK17           50      0       0      39        0.0%
BITSFR38             0      0       0      39        0.0%
SFR38                0      0       0      39        0.0%
BANK17              50      0       0      40        0.0%
BITSFR39             0      0       0      40        0.0%
SFR39                0      0       0      40        0.0%
BITBANK18           50      0       0      41        0.0%
BITSFR40             0      0       0      41        0.0%
SFR40                0      0       0      41        0.0%
BANK18              50      0       0      42        0.0%
BITSFR41             0      0       0      42        0.0%
SFR41                0      0       0      42        0.0%
BITBANK19           50      0       0      43        0.0%
BITSFR42             0      0       0      43        0.0%
SFR42                0      0       0      43        0.0%
BANK19              50      0       0      44        0.0%
BITSFR43             0      0       0      44        0.0%
SFR43                0      0       0      44        0.0%
BITBANK20           50      0       0      45        0.0%
BITSFR44             0      0       0      45        0.0%
SFR44                0      0       0      45        0.0%
BANK20              50      0       0      46        0.0%
BITSFR45             0      0       0      46        0.0%
SFR45                0      0       0      46        0.0%
BITBANK21           50      0       0      47        0.0%
BITSFR46             0      0       0      47        0.0%
SFR46                0      0       0      47        0.0%
BANK21              50      0       0      48        0.0%
BITSFR47             0      0       0      48        0.0%
SFR47                0      0       0      48        0.0%
BITBANK22           50      0       0      49        0.0%
BITSFR48             0      0       0      49        0.0%
SFR48                0      0       0      49        0.0%
BANK22              50      0       0      50        0.0%
BITSFR49             0      0       0      50        0.0%
SFR49                0      0       0      50        0.0%
BITBANK23           50      0       0      51        0.0%
BITSFR50             0      0       0      51        0.0%
SFR50                0      0       0      51        0.0%
BANK23              50      0       0      52        0.0%
BITSFR51             0      0       0      52        0.0%
SFR51                0      0       0      52        0.0%
BITBANK24           50      0       0      53        0.0%
BITSFR52             0      0       0      53        0.0%
SFR52                0      0       0      53        0.0%
BANK24              50      0       0      54        0.0%
BITSFR53             0      0       0      54        0.0%
SFR53                0      0       0      54        0.0%
BITBANK25           50      0       0      55        0.0%
BITSFR54             0      0       0      55        0.0%
SFR54                0      0       0      55        0.0%
BANK25              50      0       0      56        0.0%
BITSFR55             0      0       0      56        0.0%
SFR55                0      0       0      56        0.0%
BITBANK26           50      0       0      57        0.0%
BITSFR56             0      0       0      57        0.0%
SFR56                0      0       0      57        0.0%
BANK26              50      0       0      58        0.0%
BITSFR57             0      0       0      58        0.0%
SFR57                0      0       0      58        0.0%
BITSFR58             0      0       0      59        0.0%
SFR58                0      0       0      59        0.0%
DATA                 0      0      48      59        0.0%
BITBANK27           50      0       0      60        0.0%
BITSFR59             0      0       0      60        0.0%
SFR59                0      0       0      60        0.0%
BANK27              50      0       0      61        0.0%
BITSFR60             0      0       0      61        0.0%
SFR60                0      0       0      61        0.0%
BITBANK28           50      0       0      62        0.0%
BITSFR61             0      0       0      62        0.0%
SFR61                0      0       0      62        0.0%
BANK28              50      0       0      63        0.0%
BITSFR62             0      0       0      63        0.0%
SFR62                0      0       0      63        0.0%
BITBANK29           50      0       0      64        0.0%
BITSFR63             0      0       0      64        0.0%
SFR63                0      0       0      64        0.0%
BANK29              50      0       0      65        0.0%
BITBANK30           50      0       0      66        0.0%
BANK30              50      0       0      67        0.0%
BITBANK31           50      0       0      68        0.0%
BANK31              50      0       0      69        0.0%
BITBANK32           50      0       0      70        0.0%
BANK32              50      0       0      71        0.0%
BITBANK33           50      0       0      72        0.0%
BANK33              50      0       0      73        0.0%
BITBANK34           50      0       0      74        0.0%
BANK34              50      0       0      75        0.0%
BITBANK35           50      0       0      76        0.0%
BANK35              50      0       0      77        0.0%
BITBANK36           50      0       0      78        0.0%
BANK36              50      0       0      79        0.0%
BITBANK37           50      0       0      80        0.0%
BANK37              50      0       0      81        0.0%
BITBANK38           50      0       0      82        0.0%
BANK38              50      0       0      83        0.0%
BITBANK39           50      0       0      84        0.0%
BANK39              50      0       0      85        0.0%
BITBANK40           50      0       0      86        0.0%
BANK40              50      0       0      87        0.0%
BITBANK41           50      0       0      88        0.0%
BANK41              50      0       0      89        0.0%
BITBANK42           50      0       0      90        0.0%
BANK42              50      0       0      91        0.0%
BITBANK43           50      0       0      92        0.0%
BANK43              50      0       0      93        0.0%
BITBANK44           50      0       0      94        0.0%
BANK44              50      0       0      95        0.0%
BITBANK45           50      0       0      96        0.0%
BANK45              50      0       0      97        0.0%
BITBANK46           50      0       0      98        0.0%
BANK46              50      0       0      99        0.0%
BITBANK47           50      0       0     100        0.0%
BANK47              50      0       0     101        0.0%
BITBANK48           50      0       0     102        0.0%
BANK48              50      0       0     103        0.0%
BITBANK49           50      0       0     104        0.0%
BANK49              50      0       0     105        0.0%
BITBANK50           50      0       0     106        0.0%
BANK50              50      0       0     107        0.0%


Microchip Technology PIC Macro Assembler V1.45 build -152302408 
Symbol Table                                                                                   Thu Nov 15 11:49:44 2018

            __CFG_CP$OFF 0000                       l50 01F8                       l49 01D0  
            __CFG_LVP$ON 0000                      l117 0440             __CFG_CPD$OFF 0000  
                    u605 0342                      u545 02DB                      u555 02EA  
                    u565 02FA                      u575 0308                      u585 0323  
                    u595 0332                      _bum 050D             __CFG_BORV$LO 0000  
                    wreg 0009             __CFG_ZCD$OFF 0000                     ?_bum 0070  
                   STR_1 0532                     STR_2 053F                     u1107 01AD  
                   u1117 01B5                     u1207 0357                     u1127 01BD  
                   u1217 035D                     u1137 01C5                     u1227 0366  
                   u1147 01DD                     u1157 01EB                     u1077 043A  
                   u1167 0205                     u1087 019D                     u1177 0213  
                   u1097 01A5                     u1187 0315                     u1197 031B  
                   _TMR1 020C             __CFG_WRT$OFF 0000            __CFG_FCMEN$ON 0000  
                   _main 0402                     fsr0h 0005                     fsr1h 0007  
                   indf0 0000                     fsr0l 0004                     indf1 0001  
                   fsr1l 0006                     btemp 007E            __CFG_BOREN$ON 0000  
                   start 00A2          __end_of_Lcd_Cmd 036B          __end_of_Lcd_Out 0478  
          __CFG_CSWEN$ON 0000            __CFG_MCLRE$ON 0000               _Lcd_Chr_CP 0239  
                  ??_bum 0076           Lcd_Out2@buffer 0074                    ?_main 003A  
          __CFG_WDTE$OFF 0000          __end_of___lwdiv 04E1                    i1l111 005B  
                  i1l109 005D          __end_of___lwmod 050D                    _PORTA 000C  
                  _PORTC 000E                    _PORTD 000F                    u61_25 0240  
                  u62_25 024F                    u63_25 025F                    u71_25 04C2  
                  u64_25 026D                    u72_25 04CC                    _TRISA 0011  
                  u65_25 0288                    u81_25 0372                    u73_25 04D4  
                  u66_25 0297                    u82_25 0381                    u67_25 02A7  
                  u83_25 0391                    u84_25 039F                    u92_25 0514  
                  u76_25 04EA                    u85_25 03BA                    u93_25 051C  
                  u69_25 04B8                    u86_25 03C9                    u94_25 0524  
                  u78_25 04F9                    u87_25 03D9                    u79_25 0500  
                  u98_25 0130            __CFG_PWRTE$ON 0000       __size_ofi1_Lcd_Cmd 0097  
        __end_of_dpowers 0532                    _conts 0040                    bum@hr 0070  
                  status 0003                    wtemp0 007E          __end_of_sprintf 018C  
       __end_of_Lcd_Init 0239         __end_of_Lcd_Out2 04AD          __initialization 00A4  
           __end_of_main 0441                   ??_main 003E                   _ANSELA 1F38  
                 _ANSELC 1F4E                   _ANSELD 1F59                   i1l1020 04C1  
                 i1l1030 04DC                   i1l1130 0443                   i1l1026 04D3  
                 i1l1018 04B5                   i1l1042 04E7                   i1l1210 011B  
                 i1l1132 0446                   i1l1140 0452                   i1l1044 04F3  
                 i1l1052 0508                   i1l1204 0115                   i1l1134 0449  
                 i1l1142 0460                   i1l1230 014D                   i1l1222 0149  
                 i1l1136 044C                   i1l1152 047A                   i1l1048 04FF  
                 i1l1216 013A                   i1l1232 00C5                   i1l1170 049B  
                 i1l1154 047D                   i1l1162 0489                   i1l1234 0187  
                 i1l1250 0044                   i1l1242 001C                   i1l1148 0464  
                 i1l1156 0480                   i1l1164 0497                   u103_25 0012  
                 i1l1158 0483                   i1l1254 0058                   i1l1246 0030  
                 i1l1194 00FF                   i1l1258 0063                   i1l1188 00E7  
                 i1l1268 009B                   u104_25 0026                   u105_25 003A  
                 u106_25 004E                   u130_27 02BC                   u131_27 02C2  
                 u123_27 03AC           __CFG_WDTCCS$SC 0000                   u132_27 02C8  
                 u124_27 03B2                   u133_27 02CE                   u125_27 03EE  
                 u126_27 03F4                   u127_27 03FC                   u128_27 027A  
                 u129_27 0280                ??_Lcd_Cmd 0035                ??_Lcd_Out 0076  
      __end_ofi1_Lcd_Cmd 0402              ?_Lcd_Chr_CP 0070           __CFG_STVREN$ON 0000  
              ??___lwdiv 0074                ??___lwmod 007C                   _conthr 0056  
                 bum@min 0072                   bum@seg 0074                ??_sprintf 0028  
__end_of__initialization 00BB           __pcstackCOMMON 0070            ?_interrupcion 0070  
           __pidataBANK0 054B                ?_Lcd_Init 0070                ?_Lcd_Out2 0073  
    __size_of_Lcd_Chr_CP 009B               __pbssBANK0 0040           ??_interrupcion 0033  
             __pmaintext 0402          __CFG_PPS1WAY$ON 0000               __pintentry 0004  
    __CFG_RSTOSC$HFINT32 0000               ??_Lcd_Init 0038               ??_Lcd_Out2 0075  
                _Lcd_Cmd 02D4                  _Lcd_Out 0441            i1Lcd_Cmd@data 0072  
   __CFG_SCANE$available 0000                  ___lwdiv 04AD                  ___lwmod 04E1  
                __ptext1 018C                  __ptext2 02D4                  __ptext4 00BF  
                __ptext5 04E1                  __ptext6 04AD                  __ptext7 050D  
                __ptext8 0478                  __ptext9 0441                  _buffer1 0044  
              _T1CLKbits 0211                  _contint 0042                  _contmin 0058  
              _T1CONbits 020E                  _dpowers 0528             __size_of_bum 001B  
                _sprintf 00BF                  clrloop0 0552     end_of_initialization 00BB  
           ??_Lcd_Chr_CP 0070                Lcd_Out2@x 0073                Lcd_Out2@y 0076  
              i1_Lcd_Cmd 036B    __CFG_WDTCPS$WDTCPS_31 0000                _PORTCbits 000E  
              _PORTDbits 000F                _TRISCbits 0013                _TRISDbits 0014  
   __end_of_interrupcion 00A2         __CFG_FEXTOSC$OFF 0000       __end_of_Lcd_Chr_CP 02D4  
             ?i1_Lcd_Cmd 0070      start_initialization 00A4              __end_of_bum 0528  
          Lcd_Out@buffer 0074        __size_of_Lcd_Init 00AD        __size_of_Lcd_Out2 0035  
       __CFG_LPBOREN$OFF 0000              __pdataBANK0 0054                ___latbits 0004  
          __pcstackBANK0 0020                 ?_Lcd_Cmd 0070              sprintf@flag 002D  
               ?_Lcd_Out 0073              sprintf@prec 002E         ___lwdiv@dividend 0072  
               ?___lwdiv 0070                 ?___lwmod 0078              ??i1_Lcd_Cmd 0070  
  __size_of_interrupcion 009E         ___lwdiv@quotient 0075                 ?_sprintf 0020  
               _LATAbits 0016                clear_ram0 0551                 _PIE4bits 071A  
               _PIR4bits 0710                 Lcd_Out@x 0073                 Lcd_Out@y 0077  
           _interrupcion 0004             Lcd_Init@data 0039             Lcd_Out2@data 0077  
               _Lcd_Init 018C                 _Lcd_Out2 0478         __size_of_Lcd_Cmd 0097  
       __size_of_Lcd_Out 0037         __size_of___lwdiv 0034         __size_of___lwmod 002C  
             sprintf@val 002F           Lcd_Chr_CP@data 0072          ___lwdiv@divisor 0070  
        ___lwdiv@counter 0077                 __ptext10 036B                 __ptext11 0239  
       __size_of_sprintf 00CD              Lcd_Cmd@data 0037            __size_of_main 003F  
   __CFG_WDTCWS$WDTCWS_7 0000                 _precarga 0054                 int$flags 007E  
               main@argc 003A                 main@argv 003C              Lcd_Out@data 0078  
             _INTCONbits 000B                 intlevel1 0000                sprintf@ap 002C  
              sprintf@sp 0031         ___lwmod@dividend 007A        __CFG_CLKOUTEN$OFF 0000  
             _OSCFRQbits 0893            __pstringtext1 0528            __pstringtext2 053F  
          __pstringtext3 0000                 sprintf@c 0032                 sprintf@f 0020  
        ___lwmod@divisor 0078          ___lwmod@counter 007D  
