

Microchip Technology PIC LITE Macro Assembler V1.45 build -152302408 
                                                                                               Tue Sep 11 11:56:27 2018

Microchip Technology Omniscient Code Generator v1.45 (Free mode) build 201711160504
     1                           	processor	16F18877
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	stringtext1,global,class=STRCODE,delta=2
     5                           	psect	stringtext2,global,class=STRCODE,delta=2
     6                           	psect	stringtext3,global,class=STRCODE,delta=2
     7                           	psect	stringtext4,global,class=STRCODE,delta=2
     8                           	psect	stringtext5,global,class=STRCODE,delta=2
     9                           	psect	cinit,global,class=CODE,merge=1,delta=2
    10                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    11                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    12                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    13                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    14                           	psect	text1,local,class=CODE,merge=1,delta=2
    15                           	psect	text2,local,class=CODE,merge=1,delta=2
    16                           	psect	text3,local,class=CODE,merge=1,delta=2,group=2
    17                           	psect	text4,local,class=CODE,merge=1,delta=2
    18                           	psect	text5,local,class=CODE,merge=1,delta=2,group=2
    19                           	psect	text6,local,class=CODE,merge=1,delta=2,group=2
    20                           	psect	text7,local,class=CODE,merge=1,delta=2,group=2
    21                           	psect	text8,local,class=CODE,merge=1,delta=2,group=2
    22                           	psect	text9,local,class=CODE,merge=1,delta=2,group=2
    23                           	psect	text10,local,class=CODE,merge=1,delta=2,group=2
    24                           	psect	text11,local,class=CODE,merge=1,delta=2,group=2
    25                           	psect	text12,local,class=CODE,merge=1,delta=2,group=2
    26                           	psect	text13,local,class=CODE,merge=1,delta=2,group=2
    27                           	psect	text14,local,class=CODE,merge=1,delta=2,group=2
    28                           	psect	text15,local,class=CODE,merge=1,delta=2,group=2
    29                           	psect	text16,local,class=CODE,merge=1,delta=2,group=2
    30                           	psect	text17,local,class=CODE,merge=1,delta=2,group=2
    31                           	psect	text18,local,class=CODE,merge=1,delta=2,group=2
    32                           	psect	text19,local,class=CODE,merge=1,delta=2,group=2
    33                           	psect	text20,local,class=CODE,merge=1,delta=2,group=2
    34                           	psect	text21,local,class=CODE,merge=1,delta=2,group=2
    35                           	psect	text22,local,class=CODE,merge=1,delta=2
    36                           	psect	text23,local,class=CODE,merge=1,delta=2
    37                           	psect	text24,local,class=CODE,merge=1,delta=2
    38                           	psect	text25,local,class=CODE,merge=1,delta=2
    39                           	dabs	1,0x7E,2
    40  0000                     
    41                           ; Version 1.45
    42                           ; Generated 16/11/2017 GMT
    43                           ; 
    44                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    45                           ; All rights reserved.
    46                           ; 
    47                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    48                           ; 
    49                           ; Redistribution and use in source and binary forms, with or without modification, are
    50                           ; permitted provided that the following conditions are met:
    51                           ; 
    52                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    53                           ;        conditions and the following disclaimer.
    54                           ; 
    55                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    56                           ;        of conditions and the following disclaimer in the documentation and/or other
    57                           ;        materials provided with the distribution.
    58                           ; 
    59                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    60                           ;        software without specific prior written permission.
    61                           ; 
    62                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    63                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    64                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    65                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    66                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    67                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    68                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    69                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    70                           ; 
    71                           ; 
    72                           ; Code-generator required, PIC16F18877 Definitions
    73                           ; 
    74                           ; SFR Addresses
    75  0000                     	;# 
    76  0001                     	;# 
    77  0002                     	;# 
    78  0003                     	;# 
    79  0004                     	;# 
    80  0005                     	;# 
    81  0006                     	;# 
    82  0007                     	;# 
    83  0008                     	;# 
    84  0009                     	;# 
    85  000A                     	;# 
    86  000B                     	;# 
    87  000C                     	;# 
    88  000D                     	;# 
    89  000E                     	;# 
    90  000F                     	;# 
    91  0010                     	;# 
    92  0011                     	;# 
    93  0012                     	;# 
    94  0013                     	;# 
    95  0014                     	;# 
    96  0015                     	;# 
    97  0016                     	;# 
    98  0017                     	;# 
    99  0018                     	;# 
   100  0019                     	;# 
   101  001A                     	;# 
   102  001C                     	;# 
   103  001C                     	;# 
   104  001D                     	;# 
   105  001D                     	;# 
   106  001E                     	;# 
   107  001F                     	;# 
   108  008C                     	;# 
   109  008C                     	;# 
   110  008D                     	;# 
   111  008E                     	;# 
   112  008E                     	;# 
   113  008F                     	;# 
   114  0090                     	;# 
   115  0090                     	;# 
   116  0091                     	;# 
   117  0093                     	;# 
   118  0094                     	;# 
   119  0095                     	;# 
   120  0096                     	;# 
   121  0097                     	;# 
   122  0098                     	;# 
   123  0099                     	;# 
   124  009A                     	;# 
   125  009B                     	;# 
   126  009C                     	;# 
   127  009D                     	;# 
   128  009E                     	;# 
   129  010C                     	;# 
   130  010D                     	;# 
   131  010E                     	;# 
   132  010E                     	;# 
   133  010F                     	;# 
   134  0110                     	;# 
   135  0110                     	;# 
   136  0111                     	;# 
   137  0112                     	;# 
   138  0112                     	;# 
   139  0113                     	;# 
   140  0114                     	;# 
   141  0114                     	;# 
   142  0115                     	;# 
   143  0116                     	;# 
   144  0116                     	;# 
   145  0117                     	;# 
   146  0119                     	;# 
   147  0119                     	;# 
   148  0119                     	;# 
   149  011A                     	;# 
   150  011A                     	;# 
   151  011A                     	;# 
   152  011B                     	;# 
   153  011B                     	;# 
   154  011B                     	;# 
   155  011B                     	;# 
   156  011B                     	;# 
   157  011C                     	;# 
   158  011C                     	;# 
   159  011C                     	;# 
   160  011D                     	;# 
   161  011D                     	;# 
   162  011D                     	;# 
   163  011E                     	;# 
   164  011E                     	;# 
   165  011E                     	;# 
   166  011F                     	;# 
   167  011F                     	;# 
   168  011F                     	;# 
   169  011F                     	;# 
   170  011F                     	;# 
   171  018C                     	;# 
   172  018D                     	;# 
   173  018E                     	;# 
   174  018F                     	;# 
   175  0190                     	;# 
   176  0191                     	;# 
   177  0192                     	;# 
   178  0196                     	;# 
   179  0197                     	;# 
   180  0198                     	;# 
   181  0199                     	;# 
   182  019A                     	;# 
   183  019B                     	;# 
   184  019C                     	;# 
   185  020C                     	;# 
   186  020C                     	;# 
   187  020D                     	;# 
   188  020E                     	;# 
   189  020F                     	;# 
   190  020F                     	;# 
   191  0210                     	;# 
   192  0210                     	;# 
   193  0211                     	;# 
   194  0211                     	;# 
   195  0212                     	;# 
   196  0212                     	;# 
   197  0213                     	;# 
   198  0214                     	;# 
   199  0215                     	;# 
   200  0215                     	;# 
   201  0216                     	;# 
   202  0216                     	;# 
   203  0217                     	;# 
   204  0217                     	;# 
   205  0218                     	;# 
   206  0218                     	;# 
   207  0219                     	;# 
   208  021A                     	;# 
   209  021B                     	;# 
   210  021B                     	;# 
   211  021C                     	;# 
   212  021C                     	;# 
   213  021D                     	;# 
   214  021D                     	;# 
   215  021E                     	;# 
   216  021F                     	;# 
   217  028C                     	;# 
   218  028C                     	;# 
   219  028D                     	;# 
   220  028D                     	;# 
   221  028E                     	;# 
   222  028F                     	;# 
   223  0290                     	;# 
   224  0290                     	;# 
   225  0291                     	;# 
   226  0292                     	;# 
   227  0292                     	;# 
   228  0293                     	;# 
   229  0293                     	;# 
   230  0294                     	;# 
   231  0295                     	;# 
   232  0296                     	;# 
   233  0296                     	;# 
   234  0297                     	;# 
   235  0298                     	;# 
   236  0298                     	;# 
   237  0299                     	;# 
   238  0299                     	;# 
   239  029A                     	;# 
   240  029B                     	;# 
   241  029C                     	;# 
   242  029C                     	;# 
   243  029D                     	;# 
   244  030C                     	;# 
   245  030C                     	;# 
   246  030D                     	;# 
   247  030E                     	;# 
   248  030F                     	;# 
   249  0310                     	;# 
   250  0310                     	;# 
   251  0311                     	;# 
   252  0312                     	;# 
   253  0313                     	;# 
   254  0314                     	;# 
   255  0314                     	;# 
   256  0315                     	;# 
   257  0316                     	;# 
   258  0317                     	;# 
   259  0318                     	;# 
   260  0318                     	;# 
   261  0319                     	;# 
   262  031A                     	;# 
   263  031B                     	;# 
   264  031C                     	;# 
   265  031C                     	;# 
   266  031D                     	;# 
   267  031E                     	;# 
   268  031F                     	;# 
   269  038C                     	;# 
   270  038D                     	;# 
   271  038E                     	;# 
   272  0390                     	;# 
   273  0391                     	;# 
   274  0392                     	;# 
   275  040C                     	;# 
   276  040D                     	;# 
   277  040E                     	;# 
   278  040F                     	;# 
   279  0410                     	;# 
   280  0411                     	;# 
   281  0416                     	;# 
   282  0416                     	;# 
   283  0417                     	;# 
   284  0418                     	;# 
   285  0418                     	;# 
   286  0419                     	;# 
   287  041A                     	;# 
   288  041A                     	;# 
   289  041B                     	;# 
   290  041C                     	;# 
   291  041C                     	;# 
   292  041D                     	;# 
   293  041E                     	;# 
   294  041F                     	;# 
   295  048C                     	;# 
   296  048C                     	;# 
   297  048D                     	;# 
   298  048E                     	;# 
   299  048F                     	;# 
   300  048F                     	;# 
   301  0490                     	;# 
   302  0491                     	;# 
   303  0492                     	;# 
   304  0492                     	;# 
   305  0493                     	;# 
   306  0494                     	;# 
   307  0495                     	;# 
   308  0495                     	;# 
   309  0496                     	;# 
   310  0497                     	;# 
   311  0498                     	;# 
   312  0499                     	;# 
   313  049A                     	;# 
   314  049B                     	;# 
   315  049C                     	;# 
   316  049D                     	;# 
   317  050C                     	;# 
   318  050C                     	;# 
   319  050D                     	;# 
   320  050E                     	;# 
   321  050F                     	;# 
   322  050F                     	;# 
   323  0510                     	;# 
   324  0511                     	;# 
   325  0512                     	;# 
   326  0512                     	;# 
   327  0513                     	;# 
   328  0514                     	;# 
   329  0515                     	;# 
   330  0515                     	;# 
   331  0516                     	;# 
   332  0517                     	;# 
   333  0518                     	;# 
   334  0519                     	;# 
   335  051A                     	;# 
   336  051B                     	;# 
   337  051C                     	;# 
   338  051D                     	;# 
   339  058C                     	;# 
   340  058C                     	;# 
   341  058D                     	;# 
   342  058E                     	;# 
   343  058F                     	;# 
   344  058F                     	;# 
   345  0590                     	;# 
   346  0591                     	;# 
   347  0592                     	;# 
   348  0593                     	;# 
   349  060C                     	;# 
   350  060D                     	;# 
   351  060E                     	;# 
   352  060F                     	;# 
   353  0610                     	;# 
   354  0611                     	;# 
   355  0612                     	;# 
   356  0613                     	;# 
   357  0614                     	;# 
   358  0616                     	;# 
   359  0617                     	;# 
   360  0618                     	;# 
   361  0619                     	;# 
   362  061A                     	;# 
   363  061B                     	;# 
   364  061C                     	;# 
   365  061D                     	;# 
   366  061E                     	;# 
   367  068C                     	;# 
   368  068D                     	;# 
   369  068E                     	;# 
   370  068F                     	;# 
   371  0690                     	;# 
   372  0691                     	;# 
   373  0692                     	;# 
   374  0693                     	;# 
   375  0694                     	;# 
   376  070C                     	;# 
   377  070D                     	;# 
   378  070E                     	;# 
   379  070F                     	;# 
   380  0710                     	;# 
   381  0711                     	;# 
   382  0712                     	;# 
   383  0713                     	;# 
   384  0714                     	;# 
   385  0716                     	;# 
   386  0717                     	;# 
   387  0718                     	;# 
   388  0719                     	;# 
   389  071A                     	;# 
   390  071B                     	;# 
   391  071C                     	;# 
   392  071D                     	;# 
   393  071E                     	;# 
   394  0796                     	;# 
   395  0797                     	;# 
   396  0798                     	;# 
   397  0799                     	;# 
   398  079A                     	;# 
   399  079B                     	;# 
   400  080C                     	;# 
   401  080D                     	;# 
   402  080E                     	;# 
   403  080F                     	;# 
   404  0810                     	;# 
   405  0811                     	;# 
   406  0812                     	;# 
   407  0813                     	;# 
   408  0814                     	;# 
   409  081A                     	;# 
   410  081B                     	;# 
   411  081C                     	;# 
   412  081D                     	;# 
   413  081E                     	;# 
   414  081F                     	;# 
   415  088C                     	;# 
   416  088D                     	;# 
   417  088E                     	;# 
   418  088F                     	;# 
   419  0890                     	;# 
   420  0891                     	;# 
   421  0892                     	;# 
   422  0893                     	;# 
   423  0895                     	;# 
   424  0896                     	;# 
   425  0897                     	;# 
   426  0898                     	;# 
   427  0899                     	;# 
   428  089A                     	;# 
   429  089B                     	;# 
   430  090C                     	;# 
   431  090E                     	;# 
   432  090F                     	;# 
   433  091F                     	;# 
   434  098F                     	;# 
   435  098F                     	;# 
   436  0990                     	;# 
   437  0991                     	;# 
   438  0992                     	;# 
   439  0993                     	;# 
   440  0994                     	;# 
   441  0995                     	;# 
   442  0996                     	;# 
   443  0997                     	;# 
   444  1E0F                     	;# 
   445  1E10                     	;# 
   446  1E11                     	;# 
   447  1E12                     	;# 
   448  1E13                     	;# 
   449  1E14                     	;# 
   450  1E15                     	;# 
   451  1E16                     	;# 
   452  1E17                     	;# 
   453  1E18                     	;# 
   454  1E19                     	;# 
   455  1E1A                     	;# 
   456  1E1B                     	;# 
   457  1E1C                     	;# 
   458  1E1D                     	;# 
   459  1E1E                     	;# 
   460  1E1F                     	;# 
   461  1E20                     	;# 
   462  1E21                     	;# 
   463  1E22                     	;# 
   464  1E23                     	;# 
   465  1E24                     	;# 
   466  1E25                     	;# 
   467  1E26                     	;# 
   468  1E27                     	;# 
   469  1E28                     	;# 
   470  1E29                     	;# 
   471  1E2A                     	;# 
   472  1E2B                     	;# 
   473  1E2C                     	;# 
   474  1E2D                     	;# 
   475  1E2E                     	;# 
   476  1E2F                     	;# 
   477  1E30                     	;# 
   478  1E31                     	;# 
   479  1E32                     	;# 
   480  1E33                     	;# 
   481  1E34                     	;# 
   482  1E35                     	;# 
   483  1E36                     	;# 
   484  1E37                     	;# 
   485  1E8F                     	;# 
   486  1E90                     	;# 
   487  1E91                     	;# 
   488  1E92                     	;# 
   489  1E93                     	;# 
   490  1E94                     	;# 
   491  1E95                     	;# 
   492  1E96                     	;# 
   493  1E97                     	;# 
   494  1E9C                     	;# 
   495  1E9D                     	;# 
   496  1E9E                     	;# 
   497  1EA1                     	;# 
   498  1EA2                     	;# 
   499  1EA3                     	;# 
   500  1EA4                     	;# 
   501  1EA5                     	;# 
   502  1EA9                     	;# 
   503  1EAA                     	;# 
   504  1EAB                     	;# 
   505  1EAC                     	;# 
   506  1EB1                     	;# 
   507  1EB2                     	;# 
   508  1EB3                     	;# 
   509  1EB8                     	;# 
   510  1EB9                     	;# 
   511  1EBA                     	;# 
   512  1EBB                     	;# 
   513  1EBC                     	;# 
   514  1EBD                     	;# 
   515  1EBE                     	;# 
   516  1EC3                     	;# 
   517  1EC5                     	;# 
   518  1EC6                     	;# 
   519  1EC7                     	;# 
   520  1EC8                     	;# 
   521  1EC9                     	;# 
   522  1ECA                     	;# 
   523  1ECB                     	;# 
   524  1ECC                     	;# 
   525  1F10                     	;# 
   526  1F11                     	;# 
   527  1F12                     	;# 
   528  1F13                     	;# 
   529  1F14                     	;# 
   530  1F15                     	;# 
   531  1F16                     	;# 
   532  1F17                     	;# 
   533  1F18                     	;# 
   534  1F19                     	;# 
   535  1F1A                     	;# 
   536  1F1B                     	;# 
   537  1F1C                     	;# 
   538  1F1D                     	;# 
   539  1F1E                     	;# 
   540  1F1F                     	;# 
   541  1F20                     	;# 
   542  1F21                     	;# 
   543  1F22                     	;# 
   544  1F23                     	;# 
   545  1F24                     	;# 
   546  1F25                     	;# 
   547  1F26                     	;# 
   548  1F27                     	;# 
   549  1F28                     	;# 
   550  1F29                     	;# 
   551  1F2A                     	;# 
   552  1F2B                     	;# 
   553  1F2C                     	;# 
   554  1F2D                     	;# 
   555  1F2E                     	;# 
   556  1F2F                     	;# 
   557  1F30                     	;# 
   558  1F31                     	;# 
   559  1F32                     	;# 
   560  1F38                     	;# 
   561  1F39                     	;# 
   562  1F3A                     	;# 
   563  1F3B                     	;# 
   564  1F3C                     	;# 
   565  1F3D                     	;# 
   566  1F3E                     	;# 
   567  1F3F                     	;# 
   568  1F40                     	;# 
   569  1F41                     	;# 
   570  1F43                     	;# 
   571  1F44                     	;# 
   572  1F45                     	;# 
   573  1F46                     	;# 
   574  1F47                     	;# 
   575  1F48                     	;# 
   576  1F49                     	;# 
   577  1F4A                     	;# 
   578  1F4B                     	;# 
   579  1F4C                     	;# 
   580  1F4E                     	;# 
   581  1F4F                     	;# 
   582  1F50                     	;# 
   583  1F51                     	;# 
   584  1F52                     	;# 
   585  1F53                     	;# 
   586  1F54                     	;# 
   587  1F55                     	;# 
   588  1F56                     	;# 
   589  1F57                     	;# 
   590  1F59                     	;# 
   591  1F5A                     	;# 
   592  1F5B                     	;# 
   593  1F5C                     	;# 
   594  1F5D                     	;# 
   595  1F61                     	;# 
   596  1F62                     	;# 
   597  1F64                     	;# 
   598  1F65                     	;# 
   599  1F66                     	;# 
   600  1F67                     	;# 
   601  1F68                     	;# 
   602  1F69                     	;# 
   603  1F6A                     	;# 
   604  1F6B                     	;# 
   605  1F6C                     	;# 
   606  1F6D                     	;# 
   607  1FE4                     	;# 
   608  1FE5                     	;# 
   609  1FE6                     	;# 
   610  1FE7                     	;# 
   611  1FE8                     	;# 
   612  1FE9                     	;# 
   613  1FEA                     	;# 
   614  1FEB                     	;# 
   615  1FED                     	;# 
   616  1FEE                     	;# 
   617  1FEF                     	;# 
   618                           
   619                           	psect	stringtext1
   620  182F                     __pstringtext1:	
   621  182F                     _dpowers:	
   622  182F  3401               	retlw	1
   623  1830  3400               	retlw	0
   624  1831  3400               	retlw	0
   625  1832  3400               	retlw	0
   626  1833  340A               	retlw	10
   627  1834  3400               	retlw	0
   628  1835  3400               	retlw	0
   629  1836  3400               	retlw	0
   630  1837  3464               	retlw	100
   631  1838  3400               	retlw	0
   632  1839  3400               	retlw	0
   633  183A  3400               	retlw	0
   634  183B  34E8               	retlw	232
   635  183C  3403               	retlw	3
   636  183D  3400               	retlw	0
   637  183E  3400               	retlw	0
   638  183F  3410               	retlw	16
   639  1840  3427               	retlw	39
   640  1841  3400               	retlw	0
   641  1842  3400               	retlw	0
   642  1843  34A0               	retlw	160
   643  1844  3486               	retlw	134
   644  1845  3401               	retlw	1
   645  1846  3400               	retlw	0
   646  1847  3440               	retlw	64
   647  1848  3442               	retlw	66
   648  1849  340F               	retlw	15
   649  184A  3400               	retlw	0
   650  184B  3480               	retlw	128
   651  184C  3496               	retlw	150
   652  184D  3498               	retlw	152
   653  184E  3400               	retlw	0
   654  184F  3400               	retlw	0
   655  1850  34E1               	retlw	225
   656  1851  34F5               	retlw	245
   657  1852  3405               	retlw	5
   658  1853  3400               	retlw	0
   659  1854  34CA               	retlw	202
   660  1855  349A               	retlw	154
   661  1856  343B               	retlw	59
   662  1857                     __end_of_dpowers:	
   663                           
   664                           	psect	stringtext2
   665  1857                     __pstringtext2:	
   666  1857                     __powers_:	
   667  1857  3400               	retlw	0
   668  1858  3480               	retlw	128
   669  1859  343F               	retlw	63
   670  185A  3400               	retlw	0
   671  185B  3420               	retlw	32
   672  185C  3441               	retlw	65
   673  185D  3400               	retlw	0
   674  185E  34C8               	retlw	200
   675  185F  3442               	retlw	66
   676  1860  3400               	retlw	0
   677  1861  347A               	retlw	122
   678  1862  3444               	retlw	68
   679  1863  3440               	retlw	64
   680  1864  341C               	retlw	28
   681  1865  3446               	retlw	70
   682  1866  3450               	retlw	80
   683  1867  34C3               	retlw	195
   684  1868  3447               	retlw	71
   685  1869  3424               	retlw	36
   686  186A  3474               	retlw	116
   687  186B  3449               	retlw	73
   688  186C  3497               	retlw	151
   689  186D  3418               	retlw	24
   690  186E  344B               	retlw	75
   691  186F  34BC               	retlw	188
   692  1870  34BE               	retlw	190
   693  1871  344C               	retlw	76
   694  1872  346B               	retlw	107
   695  1873  346E               	retlw	110
   696  1874  344E               	retlw	78
   697  1875  3403               	retlw	3
   698  1876  3415               	retlw	21
   699  1877  3450               	retlw	80
   700  1878  3479               	retlw	121
   701  1879  34AD               	retlw	173
   702  187A  3460               	retlw	96
   703  187B  34F3               	retlw	243
   704  187C  3449               	retlw	73
   705  187D  3471               	retlw	113
   706  187E                     __end_of__powers_:	
   707                           
   708                           	psect	stringtext3
   709  1800                     __pstringtext3:	
   710  1800                     __npowers_:	
   711  1800  3400               	retlw	0
   712  1801  3480               	retlw	128
   713  1802  343F               	retlw	63
   714  1803  34CD               	retlw	205
   715  1804  34CC               	retlw	204
   716  1805  343D               	retlw	61
   717  1806  34D7               	retlw	215
   718  1807  3423               	retlw	35
   719  1808  343C               	retlw	60
   720  1809  3412               	retlw	18
   721  180A  3483               	retlw	131
   722  180B  343A               	retlw	58
   723  180C  34B7               	retlw	183
   724  180D  34D1               	retlw	209
   725  180E  3438               	retlw	56
   726  180F  34C6               	retlw	198
   727  1810  3427               	retlw	39
   728  1811  3437               	retlw	55
   729  1812  3438               	retlw	56
   730  1813  3486               	retlw	134
   731  1814  3435               	retlw	53
   732  1815  34C0               	retlw	192
   733  1816  34D6               	retlw	214
   734  1817  3433               	retlw	51
   735  1818  34CC               	retlw	204
   736  1819  342B               	retlw	43
   737  181A  3432               	retlw	50
   738  181B  3470               	retlw	112
   739  181C  3489               	retlw	137
   740  181D  3430               	retlw	48
   741  181E  34E7               	retlw	231
   742  181F  34DB               	retlw	219
   743  1820  342E               	retlw	46
   744  1821  34E5               	retlw	229
   745  1822  343C               	retlw	60
   746  1823  341E               	retlw	30
   747  1824  3442               	retlw	66
   748  1825  34A2               	retlw	162
   749  1826  340D               	retlw	13
   750  1827                     __end_of__npowers_:	
   751  0015                     _TRISEbits	set	21
   752  0011                     _TRISAbits	set	17
   753  000D                     _PORTB	set	13
   754  000C                     _PORTA	set	12
   755  000F                     _PORTDbits	set	15
   756  000E                     _PORTCbits	set	14
   757  0014                     _TRISDbits	set	20
   758  0013                     _TRISCbits	set	19
   759  008C                     _ADRESL	set	140
   760  008D                     _ADRESH	set	141
   761  009E                     _ADPCH	set	158
   762  009A                     _ADREFbits	set	154
   763  0093                     _ADCON0bits	set	147
   764  0893                     _OSCFRQbits	set	2195
   765  090C                     _FVRCONbits	set	2316
   766  1F64                     _ANSELEbits	set	8036
   767  1F38                     _ANSELAbits	set	7992
   768  1F59                     _ANSELD	set	8025
   769  1F4E                     _ANSELC	set	8014
   770  1827                     STR_2:	
   771  1827  3454               	retlw	84	;'T'
   772  1828  3465               	retlw	101	;'e'
   773  1829  343D               	retlw	61	;'='
   774  182A  3425               	retlw	37	;'%'
   775  182B  342E               	retlw	46	;'.'
   776  182C  3432               	retlw	50	;'2'
   777  182D  3466               	retlw	102	;'f'
   778  182E  3400               	retlw	0
   779                           
   780                           	psect	stringtext4
   781  187E                     __pstringtext4:	
   782  187E                     STR_1:	
   783  187E  3456               	retlw	86	;'V'
   784  187F  3470               	retlw	112	;'p'
   785  1880  343D               	retlw	61	;'='
   786  1881  3425               	retlw	37	;'%'
   787  1882  342E               	retlw	46	;'.'
   788  1883  3432               	retlw	50	;'2'
   789  1884  3466               	retlw	102	;'f'
   790  1885  3400               	retlw	0
   791                           
   792                           	psect	stringtext5
   793  0000                     __pstringtext5:	
   794                           
   795                           ; #config settings
   796  0000                     
   797                           	psect	cinit
   798  07FD                     start_initialization:	
   799  07FD                     __initialization:	
   800  07FD                     end_of_initialization:	
   801                           ;End of C runtime variable initialization code
   802                           
   803  07FD                     __end_of__initialization:	
   804  07FD  0140               	movlb	0
   805  07FE  318E  2E82         	ljmp	_main	;jump to C main() function
   806                           
   807                           	psect	cstackBANK1
   808  00A0                     __pcstackBANK1:	
   809  00A0                     _sprintf$950:	
   810                           
   811                           ; 3 bytes @ 0x0
   812  00A0                     	ds	3
   813  00A3                     sprintf@ap:	
   814                           
   815                           ; 1 bytes @ 0x3
   816  00A3                     	ds	1
   817  00A4                     sprintf@flag:	
   818                           
   819                           ; 2 bytes @ 0x4
   820  00A4                     	ds	2
   821  00A6                     sprintf@val:	
   822                           
   823                           ; 4 bytes @ 0x6
   824  00A6                     	ds	4
   825  00AA                     sprintf@exp:	
   826                           
   827                           ; 2 bytes @ 0xA
   828  00AA                     	ds	2
   829  00AC                     sprintf@tmpval:	
   830                           
   831                           ; 4 bytes @ 0xC
   832  00AC                     	ds	4
   833  00B0                     sprintf@prec:	
   834                           
   835                           ; 2 bytes @ 0x10
   836  00B0                     	ds	2
   837  00B2                     sprintf@sp:	
   838                           
   839                           ; 1 bytes @ 0x12
   840  00B2                     	ds	1
   841  00B3                     sprintf@fval:	
   842                           
   843                           ; 3 bytes @ 0x13
   844  00B3                     	ds	3
   845  00B6                     sprintf@c:	
   846                           
   847                           ; 1 bytes @ 0x16
   848  00B6                     	ds	1
   849  00B7                     main@buffer1:	
   850                           
   851                           ; 16 bytes @ 0x17
   852  00B7                     	ds	16
   853  00C7                     main@voltaje:	
   854                           
   855                           ; 3 bytes @ 0x27
   856  00C7                     	ds	3
   857  00CA                     main@temp:	
   858                           
   859                           ; 3 bytes @ 0x2A
   860  00CA                     	ds	3
   861  00CD                     _main$946:	
   862                           
   863                           ; 3 bytes @ 0x2D
   864  00CD                     	ds	3
   865  00D0                     main@adc1:	
   866                           
   867                           ; 2 bytes @ 0x30
   868  00D0                     	ds	2
   869  00D2                     main@adc2:	
   870                           
   871                           ; 2 bytes @ 0x32
   872  00D2                     	ds	2
   873                           
   874                           	psect	cstackCOMMON
   875  0070                     __pcstackCOMMON:	
   876  0070                     ?_isdigit:	
   877  0070                     ?___ftge:	
   878                           ; 1 bit 
   879                           
   880  0070                     ?_Lcd_Cmd:	
   881                           ; 1 bit 
   882                           
   883  0070                     ??_Lcd_Cmd:	
   884                           ; 1 bytes @ 0x0
   885                           
   886  0070                     ?_Lcd_Chr_CP:	
   887                           ; 1 bytes @ 0x0
   888                           
   889  0070                     ??_Lcd_Chr_CP:	
   890                           ; 1 bytes @ 0x0
   891                           
   892  0070                     ??_isdigit:	
   893                           ; 1 bytes @ 0x0
   894                           
   895  0070                     ?_Lcd_Init:	
   896                           ; 1 bytes @ 0x0
   897                           
   898  0070                     ?___awmod:	
   899                           ; 1 bytes @ 0x0
   900                           
   901  0070                     ?___ftpack:	
   902                           ; 2 bytes @ 0x0
   903                           
   904  0070                     ?___ftneg:	
   905                           ; 3 bytes @ 0x0
   906                           
   907  0070                     ?__tdiv_to_l_:	
   908                           ; 3 bytes @ 0x0
   909                           
   910  0070                     ?__div_to_l_:	
   911                           ; 4 bytes @ 0x0
   912                           
   913  0070                     ?___lldiv:	
   914                           ; 4 bytes @ 0x0
   915                           
   916  0070                     ?___llmod:	
   917                           ; 4 bytes @ 0x0
   918                           
   919  0070                     _isdigit$735:	
   920                           ; 4 bytes @ 0x0
   921                           
   922  0070                     ___awmod@divisor:	
   923                           ; 1 bytes @ 0x0
   924                           
   925  0070                     __div_to_l_@f1:	
   926                           ; 2 bytes @ 0x0
   927                           
   928  0070                     ___ftpack@arg:	
   929                           ; 3 bytes @ 0x0
   930                           
   931  0070                     __tdiv_to_l_@f1:	
   932                           ; 3 bytes @ 0x0
   933                           
   934  0070                     ___ftge@ff1:	
   935                           ; 3 bytes @ 0x0
   936                           
   937  0070                     ___ftneg@f1:	
   938                           ; 3 bytes @ 0x0
   939                           
   940  0070                     ___lldiv@divisor:	
   941                           ; 3 bytes @ 0x0
   942                           
   943  0070                     ___llmod@divisor:	
   944                           ; 4 bytes @ 0x0
   945                           
   946                           
   947                           ; 4 bytes @ 0x0
   948  0070                     	ds	1
   949  0071                     isdigit@c:	
   950                           
   951                           ; 1 bytes @ 0x1
   952  0071                     	ds	1
   953  0072                     Lcd_Chr_CP@data:	
   954  0072                     Lcd_Cmd@data:	
   955                           ; 1 bytes @ 0x2
   956                           
   957  0072                     ___awmod@dividend:	
   958                           ; 1 bytes @ 0x2
   959                           
   960                           
   961                           ; 2 bytes @ 0x2
   962  0072                     	ds	1
   963  0073                     ??_Lcd_Init:	
   964  0073                     ?_Lcd_Out2:	
   965                           ; 1 bytes @ 0x3
   966                           
   967  0073                     ??___ftneg:	
   968                           ; 1 bytes @ 0x3
   969                           
   970  0073                     Lcd_Out2@x:	
   971                           ; 1 bytes @ 0x3
   972                           
   973  0073                     ___ftpack@exp:	
   974                           ; 1 bytes @ 0x3
   975                           
   976  0073                     __div_to_l_@f2:	
   977                           ; 1 bytes @ 0x3
   978                           
   979  0073                     __tdiv_to_l_@f2:	
   980                           ; 3 bytes @ 0x3
   981                           
   982  0073                     ___ftge@ff2:	
   983                           ; 3 bytes @ 0x3
   984                           
   985                           
   986                           ; 3 bytes @ 0x3
   987  0073                     	ds	1
   988  0074                     ??___awmod:	
   989  0074                     Lcd_Init@data:	
   990                           ; 1 bytes @ 0x4
   991                           
   992  0074                     Lcd_Out2@buffer:	
   993                           ; 1 bytes @ 0x4
   994                           
   995  0074                     ___ftpack@sign:	
   996                           ; 1 bytes @ 0x4
   997                           
   998  0074                     ___lldiv@dividend:	
   999                           ; 1 bytes @ 0x4
  1000                           
  1001  0074                     ___llmod@dividend:	
  1002                           ; 4 bytes @ 0x4
  1003                           
  1004                           
  1005                           ; 4 bytes @ 0x4
  1006  0074                     	ds	1
  1007  0075                     ??___ftpack:	
  1008  0075                     ??_Lcd_Out2:	
  1009                           ; 1 bytes @ 0x5
  1010                           
  1011  0075                     ___awmod@counter:	
  1012                           ; 1 bytes @ 0x5
  1013                           
  1014                           
  1015                           ; 1 bytes @ 0x5
  1016  0075                     	ds	1
  1017  0076                     ??__tdiv_to_l_:	
  1018  0076                     ??__div_to_l_:	
  1019                           ; 1 bytes @ 0x6
  1020                           
  1021  0076                     ??___ftge:	
  1022                           ; 1 bytes @ 0x6
  1023                           
  1024  0076                     Lcd_Out2@y:	
  1025                           ; 1 bytes @ 0x6
  1026                           
  1027  0076                     ___awmod@sign:	
  1028                           ; 1 bytes @ 0x6
  1029                           
  1030                           
  1031                           ; 1 bytes @ 0x6
  1032  0076                     	ds	1
  1033  0077                     ?___awdiv:	
  1034  0077                     Lcd_Out2@data:	
  1035                           ; 2 bytes @ 0x7
  1036                           
  1037  0077                     ___awdiv@divisor:	
  1038                           ; 1 bytes @ 0x7
  1039                           
  1040                           
  1041                           ; 2 bytes @ 0x7
  1042  0077                     	ds	1
  1043  0078                     ??___lldiv:	
  1044  0078                     ??___llmod:	
  1045                           ; 1 bytes @ 0x8
  1046                           
  1047  0078                     ?___awtoft:	
  1048                           ; 1 bytes @ 0x8
  1049                           
  1050  0078                     ?___lltoft:	
  1051                           ; 3 bytes @ 0x8
  1052                           
  1053  0078                     ___awtoft@c:	
  1054                           ; 3 bytes @ 0x8
  1055                           
  1056  0078                     ___lltoft@c:	
  1057                           ; 2 bytes @ 0x8
  1058                           
  1059                           
  1060                           ; 4 bytes @ 0x8
  1061  0078                     	ds	1
  1062  0079                     ___llmod@counter:	
  1063  0079                     ___awdiv@dividend:	
  1064                           ; 1 bytes @ 0x9
  1065                           
  1066  0079                     ___lldiv@quotient:	
  1067                           ; 2 bytes @ 0x9
  1068                           
  1069                           
  1070                           ; 4 bytes @ 0x9
  1071  0079                     	ds	2
  1072  007B                     ??___awdiv:	
  1073  007B                     ??___awtoft:	
  1074                           ; 1 bytes @ 0xB
  1075                           
  1076                           
  1077                           ; 1 bytes @ 0xB
  1078  007B                     	ds	1
  1079  007C                     ??___wmul:	
  1080  007C                     ??___lltoft:	
  1081                           ; 1 bytes @ 0xC
  1082                           
  1083  007C                     ___wmul@product:	
  1084                           ; 1 bytes @ 0xC
  1085                           
  1086                           
  1087                           ; 2 bytes @ 0xC
  1088  007C                     	ds	1
  1089  007D                     ___awtoft@sign:	
  1090  007D                     ___lldiv@counter:	
  1091                           ; 1 bytes @ 0xD
  1092                           
  1093  007D                     ___lltoft@exp:	
  1094                           ; 1 bytes @ 0xD
  1095                           
  1096                           
  1097                           ; 1 bytes @ 0xD
  1098  007D                     	ds	1
  1099  007E                     ??___ftsub:	
  1100                           
  1101                           	psect	cstackBANK0
  1102  0020                     __pcstackBANK0:	
  1103                           ; 1 bytes @ 0xE
  1104                           
  1105  0020                     ___awdiv@counter:	
  1106  0020                     __div_to_l_@quot:	
  1107                           ; 1 bytes @ 0x0
  1108                           
  1109  0020                     __tdiv_to_l_@quot:	
  1110                           ; 4 bytes @ 0x0
  1111                           
  1112                           
  1113                           ; 4 bytes @ 0x0
  1114  0020                     	ds	1
  1115  0021                     ___awdiv@sign:	
  1116                           
  1117                           ; 1 bytes @ 0x1
  1118  0021                     	ds	1
  1119  0022                     ___awdiv@quotient:	
  1120                           
  1121                           ; 2 bytes @ 0x2
  1122  0022                     	ds	2
  1123  0024                     ?___wmul:	
  1124  0024                     __div_to_l_@cntr:	
  1125                           ; 2 bytes @ 0x4
  1126                           
  1127  0024                     __tdiv_to_l_@cntr:	
  1128                           ; 1 bytes @ 0x4
  1129                           
  1130  0024                     ___wmul@multiplier:	
  1131                           ; 1 bytes @ 0x4
  1132                           
  1133                           
  1134                           ; 2 bytes @ 0x4
  1135  0024                     	ds	1
  1136  0025                     __div_to_l_@exp1:	
  1137  0025                     __tdiv_to_l_@exp1:	
  1138                           ; 1 bytes @ 0x5
  1139                           
  1140                           
  1141                           ; 1 bytes @ 0x5
  1142  0025                     	ds	1
  1143  0026                     ___wmul@multiplicand:	
  1144                           
  1145                           ; 2 bytes @ 0x6
  1146  0026                     	ds	2
  1147  0028                     ?___ftmul:	
  1148  0028                     ___ftmul@f1:	
  1149                           ; 3 bytes @ 0x8
  1150                           
  1151                           
  1152                           ; 3 bytes @ 0x8
  1153  0028                     	ds	3
  1154  002B                     ___ftmul@f2:	
  1155                           
  1156                           ; 3 bytes @ 0xB
  1157  002B                     	ds	3
  1158  002E                     ??___ftmul:	
  1159                           
  1160                           ; 1 bytes @ 0xE
  1161  002E                     	ds	4
  1162  0032                     ___ftmul@exp:	
  1163                           
  1164                           ; 1 bytes @ 0x12
  1165  0032                     	ds	1
  1166  0033                     ___ftmul@f3_as_product:	
  1167                           
  1168                           ; 3 bytes @ 0x13
  1169  0033                     	ds	3
  1170  0036                     ___ftmul@cntr:	
  1171                           
  1172                           ; 1 bytes @ 0x16
  1173  0036                     	ds	1
  1174  0037                     ___ftmul@sign:	
  1175                           
  1176                           ; 1 bytes @ 0x17
  1177  0037                     	ds	1
  1178  0038                     ?_fround:	
  1179  0038                     ?_scale:	
  1180                           ; 3 bytes @ 0x18
  1181                           
  1182  0038                     ?___ftdiv:	
  1183                           ; 3 bytes @ 0x18
  1184                           
  1185  0038                     ___ftdiv@f2:	
  1186                           ; 3 bytes @ 0x18
  1187                           
  1188                           
  1189                           ; 3 bytes @ 0x18
  1190  0038                     	ds	3
  1191  003B                     ??_fround:	
  1192  003B                     ??_scale:	
  1193                           ; 1 bytes @ 0x1B
  1194                           
  1195  003B                     ___ftdiv@f1:	
  1196                           ; 1 bytes @ 0x1B
  1197                           
  1198                           
  1199                           ; 3 bytes @ 0x1B
  1200  003B                     	ds	2
  1201  003D                     _scale$949:	
  1202                           
  1203                           ; 3 bytes @ 0x1D
  1204  003D                     	ds	1
  1205  003E                     ??___ftdiv:	
  1206                           
  1207                           ; 1 bytes @ 0x1E
  1208  003E                     	ds	1
  1209  003F                     _fround$948:	
  1210                           
  1211                           ; 3 bytes @ 0x1F
  1212  003F                     	ds	1
  1213  0040                     scale@scl:	
  1214                           
  1215                           ; 1 bytes @ 0x20
  1216  0040                     	ds	1
  1217  0041                     ?___fttol:	
  1218  0041                     ___fttol@f1:	
  1219                           ; 4 bytes @ 0x21
  1220                           
  1221                           
  1222                           ; 3 bytes @ 0x21
  1223  0041                     	ds	1
  1224  0042                     ___ftdiv@cntr:	
  1225  0042                     _fround$947:	
  1226                           ; 1 bytes @ 0x22
  1227                           
  1228                           
  1229                           ; 3 bytes @ 0x22
  1230  0042                     	ds	1
  1231  0043                     ___ftdiv@f3:	
  1232                           
  1233                           ; 3 bytes @ 0x23
  1234  0043                     	ds	2
  1235  0045                     ??___fttol:	
  1236  0045                     fround@prec:	
  1237                           ; 1 bytes @ 0x25
  1238                           
  1239                           
  1240                           ; 1 bytes @ 0x25
  1241  0045                     	ds	1
  1242  0046                     ?___ftadd:	
  1243  0046                     ___ftdiv@exp:	
  1244                           ; 3 bytes @ 0x26
  1245                           
  1246  0046                     ___ftadd@f1:	
  1247                           ; 1 bytes @ 0x26
  1248                           
  1249                           
  1250                           ; 3 bytes @ 0x26
  1251  0046                     	ds	1
  1252  0047                     ___ftdiv@sign:	
  1253                           
  1254                           ; 1 bytes @ 0x27
  1255  0047                     	ds	2
  1256  0049                     ___fttol@sign1:	
  1257  0049                     ___ftadd@f2:	
  1258                           ; 1 bytes @ 0x29
  1259                           
  1260                           
  1261                           ; 3 bytes @ 0x29
  1262  0049                     	ds	1
  1263  004A                     ___fttol@lval:	
  1264                           
  1265                           ; 4 bytes @ 0x2A
  1266  004A                     	ds	2
  1267  004C                     ??___ftadd:	
  1268                           
  1269                           ; 1 bytes @ 0x2C
  1270  004C                     	ds	2
  1271  004E                     ___fttol@exp1:	
  1272                           
  1273                           ; 1 bytes @ 0x2E
  1274  004E                     	ds	2
  1275  0050                     ___ftadd@sign:	
  1276                           
  1277                           ; 1 bytes @ 0x30
  1278  0050                     	ds	1
  1279  0051                     ___ftadd@exp2:	
  1280                           
  1281                           ; 1 bytes @ 0x31
  1282  0051                     	ds	1
  1283  0052                     ___ftadd@exp1:	
  1284                           
  1285                           ; 1 bytes @ 0x32
  1286  0052                     	ds	1
  1287  0053                     ?___ftsub:	
  1288  0053                     ___ftsub@f2:	
  1289                           ; 3 bytes @ 0x33
  1290                           
  1291                           
  1292                           ; 3 bytes @ 0x33
  1293  0053                     	ds	3
  1294  0056                     ___ftsub@f1:	
  1295                           
  1296                           ; 3 bytes @ 0x36
  1297  0056                     	ds	3
  1298  0059                     ?_sprintf:	
  1299  0059                     sprintf@f:	
  1300                           ; 2 bytes @ 0x39
  1301                           
  1302                           
  1303                           ; 2 bytes @ 0x39
  1304  0059                     	ds	5
  1305  005E                     ??_sprintf:	
  1306                           
  1307                           ; 1 bytes @ 0x3E
  1308  005E                     	ds	6
  1309  0064                     ?_main:	
  1310  0064                     main@argc:	
  1311                           ; 2 bytes @ 0x44
  1312                           
  1313                           
  1314                           ; 2 bytes @ 0x44
  1315  0064                     	ds	2
  1316  0066                     main@argv:	
  1317                           
  1318                           ; 2 bytes @ 0x46
  1319  0066                     	ds	2
  1320  0068                     ??_main:	
  1321                           
  1322                           ; 1 bytes @ 0x48
  1323  0068                     	ds	3
  1324                           
  1325                           	psect	maintext
  1326  0E82                     __pmaintext:	
  1327 ;;
  1328 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
  1329 ;;
  1330 ;; *************** function _main *****************
  1331 ;; Defined at:
  1332 ;;		line 18 in file "main.c"
  1333 ;; Parameters:    Size  Location     Type
  1334 ;;  argc            2   68[BANK0 ] int 
  1335 ;;  argv            2   70[BANK0 ] PTR PTR unsigned char 
  1336 ;; Auto vars:     Size  Location     Type
  1337 ;;  buffer1        16   23[BANK1 ] unsigned char [16]
  1338 ;;  temp            3   42[BANK1 ] float 
  1339 ;;  voltaje         3   39[BANK1 ] float 
  1340 ;;  tempin          3    0        float 
  1341 ;;  adc2            2   50[BANK1 ] int 
  1342 ;;  adc1            2   48[BANK1 ] int 
  1343 ;;  adc             2    0        int 
  1344 ;; Return value:  Size  Location     Type
  1345 ;;                  2   68[BANK0 ] int 
  1346 ;; Registers used:
  1347 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  1348 ;; Tracked objects:
  1349 ;;		On entry : B3F/0
  1350 ;;		On exit  : 0/0
  1351 ;;		Unchanged: 0/0
  1352 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
  1353 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  1354 ;;      Locals:         0       0      29       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  1355 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  1356 ;;      Totals:         0       7      29       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  1357 ;;Total ram usage:       36 bytes
  1358 ;; Hardware stack levels required when called:    4
  1359 ;; This function calls:
  1360 ;;		_Lcd_Cmd
  1361 ;;		_Lcd_Init
  1362 ;;		_Lcd_Out2
  1363 ;;		___awtoft
  1364 ;;		___ftdiv
  1365 ;;		___ftmul
  1366 ;;		_sprintf
  1367 ;; This function is called by:
  1368 ;;		Startup code after reset
  1369 ;; This function uses a non-reentrant model
  1370 ;;
  1371                           
  1372                           
  1373                           ;psect for function _main
  1374  0E82                     _main:	
  1375                           
  1376                           ;main.c: 20: int adc, adc1, adc2;
  1377                           ;main.c: 21: float voltaje,temp,tempin;
  1378                           ;main.c: 23: unsigned char buffer1[16];
  1379                           ;main.c: 25: OSCFRQbits.HFFRQ=0b110;
  1380                           
  1381                           ;incstack = 0
  1382                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  1383  0E82  0151               	movlb	17	; select bank17
  1384  0E83  0813               	movf	19,w	;volatile
  1385  0E84  39F8               	andlw	-8
  1386  0E85  3806               	iorlw	6
  1387  0E86  0093               	movwf	19	;volatile
  1388                           
  1389                           ;main.c: 26: ANSELC=0b00000000;
  1390  0E87  017E               	movlb	62	; select bank62
  1391  0E88  01CE               	clrf	78	;volatile
  1392                           
  1393                           ;main.c: 27: ANSELD=0b00000000;
  1394  0E89  01D9               	clrf	89	;volatile
  1395                           
  1396                           ;main.c: 28: PORTA=0;
  1397  0E8A  0140               	movlb	0	; select bank0
  1398  0E8B  018C               	clrf	12	;volatile
  1399                           
  1400                           ;main.c: 29: PORTB=0;
  1401  0E8C  018D               	clrf	13	;volatile
  1402                           
  1403                           ;main.c: 31: ANSELAbits.ANSA0=1;
  1404  0E8D  017E               	movlb	62	; select bank62
  1405  0E8E  1438               	bsf	56,0	;volatile
  1406                           
  1407                           ;main.c: 32: TRISAbits.TRISA0=1;
  1408  0E8F  0140               	movlb	0	; select bank0
  1409  0E90  1411               	bsf	17,0	;volatile
  1410                           
  1411                           ;main.c: 33: ANSELEbits.ANSE2=1;
  1412  0E91  017E               	movlb	62	; select bank62
  1413  0E92  1564               	bsf	100,2	;volatile
  1414                           
  1415                           ;main.c: 34: TRISEbits.TRISE2=1;
  1416  0E93  0140               	movlb	0	; select bank0
  1417  0E94  1515               	bsf	21,2	;volatile
  1418                           
  1419                           ;main.c: 38: ADCON0bits.ADON=1;
  1420  0E95  0141               	movlb	1	; select bank1
  1421  0E96  1793               	bsf	19,7	;volatile
  1422                           
  1423                           ;main.c: 39: ADCON0bits.ADCONT=0;
  1424  0E97  1313               	bcf	19,6	;volatile
  1425                           
  1426                           ;main.c: 40: ADCON0bits.ADCS=1;
  1427  0E98  1613               	bsf	19,4	;volatile
  1428                           
  1429                           ;main.c: 41: ADCON0bits.ADFRM=1;
  1430  0E99  0813               	movf	19,w	;volatile
  1431  0E9A  39F3               	andlw	-13
  1432  0E9B  3804               	iorlw	4
  1433  0E9C  0093               	movwf	19	;volatile
  1434                           
  1435                           ;main.c: 42: ADREFbits.ADNREF=0;
  1436  0E9D  121A               	bcf	26,4	;volatile
  1437                           
  1438                           ;main.c: 43: ADREFbits.ADPREF=0b00;
  1439  0E9E  30FC               	movlw	-4
  1440  0E9F  059A               	andwf	26,f	;volatile
  1441                           
  1442                           ;main.c: 44: FVRCONbits.TSEN=1;
  1443  0EA0  0152               	movlb	18	; select bank18
  1444  0EA1  168C               	bsf	12,5	;volatile
  1445                           
  1446                           ;main.c: 46: Lcd_Init();
  1447  0EA2  3189  2104  318E   	fcall	_Lcd_Init
  1448                           
  1449                           ;main.c: 47: Lcd_Cmd(1);
  1450  0EA5  3001               	movlw	1
  1451  0EA6  3197  276D  318E   	fcall	_Lcd_Cmd
  1452                           
  1453                           ;main.c: 48: Lcd_Cmd(12);
  1454  0EA9  300C               	movlw	12
  1455  0EAA  3197  276D  318E   	fcall	_Lcd_Cmd
  1456                           
  1457                           ;main.c: 49: _delay((unsigned long)((200)*(32000000/4000.0)));
  1458  0EAD  3009               	movlw	9
  1459  0EAE  0140               	movlb	0	; select bank0
  1460  0EAF  00E9               	movwf	??_main+1
  1461  0EB0  301E               	movlw	30
  1462  0EB1  00E8               	movwf	??_main
  1463  0EB2  30E4               	movlw	228
  1464  0EB3                     u3897:	
  1465  0EB3  0B89               	decfsz	9,f
  1466  0EB4  2EB3               	goto	u3897
  1467  0EB5  0BE8               	decfsz	??_main,f
  1468  0EB6  2EB3               	goto	u3897
  1469  0EB7  0BE9               	decfsz	??_main+1,f
  1470  0EB8  2EB3               	goto	u3897
  1471  0EB9  0000               	nop
  1472  0EBA                     l2719:	
  1473                           ;main.c: 50: while(1){
  1474                           
  1475                           
  1476                           ;main.c: 74: ADPCH=0b100010;
  1477  0EBA  3022               	movlw	34
  1478  0EBB  0141               	movlb	1	; select bank1
  1479  0EBC  009E               	movwf	30	;volatile
  1480                           
  1481                           ;main.c: 75: _delay((unsigned long)((20)*(32000000/4000000.0)));
  1482  0EBD  3035               	movlw	53
  1483  0EBE                     u3907:	
  1484  0EBE  0B89               	decfsz	9,f
  1485  0EBF  2EBE               	goto	u3907
  1486  0EC0  0000               	nop
  1487                           
  1488                           ;main.c: 76: ADCON0bits.ADGO=1;
  1489  0EC1  0141               	movlb	1	; select bank1
  1490  0EC2  1413               	bsf	19,0	;volatile
  1491  0EC3                     l89:	
  1492                           ;main.c: 77: while(ADCON0bits.ADGO==1);
  1493                           
  1494  0EC3  1813               	btfsc	19,0	;volatile
  1495  0EC4  2EC3               	goto	l89
  1496                           
  1497                           ;main.c: 79: adc1=ADRESH;
  1498  0EC5  080D               	movf	13,w	;volatile
  1499  0EC6  0140               	movlb	0	; select bank0
  1500  0EC7  00E8               	movwf	??_main
  1501  0EC8  01E9               	clrf	??_main+1
  1502  0EC9  0868               	movf	??_main,w
  1503  0ECA  0141               	movlb	1	; select bank1
  1504  0ECB  00D0               	movwf	main@adc1^(0+128)
  1505  0ECC  0140               	movlb	0	; select bank0
  1506  0ECD  0869               	movf	??_main+1,w
  1507  0ECE  0141               	movlb	1	; select bank1
  1508  0ECF  00D1               	movwf	(main@adc1+1)^(0+128)
  1509                           
  1510                           ;main.c: 81: adc1=adc1<<8;
  1511  0ED0  0851               	movf	(main@adc1+1)^(0+128),w
  1512  0ED1  0140               	movlb	0	; select bank0
  1513  0ED2  00E9               	movwf	??_main+1
  1514  0ED3  0141               	movlb	1	; select bank1
  1515  0ED4  0850               	movf	main@adc1^(0+128),w
  1516  0ED5  0140               	movlb	0	; select bank0
  1517  0ED6  00E8               	movwf	??_main
  1518  0ED7  0868               	movf	??_main,w
  1519  0ED8  00E9               	movwf	??_main+1
  1520  0ED9  01E8               	clrf	??_main
  1521  0EDA  0868               	movf	??_main,w
  1522  0EDB  0141               	movlb	1	; select bank1
  1523  0EDC  00D0               	movwf	main@adc1^(0+128)
  1524  0EDD  0140               	movlb	0	; select bank0
  1525  0EDE  0869               	movf	??_main+1,w
  1526  0EDF  0141               	movlb	1	; select bank1
  1527  0EE0  00D1               	movwf	(main@adc1+1)^(0+128)
  1528                           
  1529                           ;main.c: 83: adc1=adc1+ADRESL;
  1530  0EE1  080C               	movf	12,w	;volatile
  1531  0EE2  0750               	addwf	main@adc1^(0+128),w
  1532  0EE3  0140               	movlb	0	; select bank0
  1533  0EE4  00E8               	movwf	??_main
  1534  0EE5  0141               	movlb	1	; select bank1
  1535  0EE6  0851               	movf	(main@adc1+1)^(0+128),w
  1536  0EE7  1803               	skipnc
  1537  0EE8  0A51               	incf	(main@adc1+1)^(0+128),w
  1538  0EE9  0140               	movlb	0	; select bank0
  1539  0EEA  00E9               	movwf	??_main+1
  1540  0EEB  0868               	movf	??_main,w
  1541  0EEC  0141               	movlb	1	; select bank1
  1542  0EED  00D0               	movwf	main@adc1^(0+128)
  1543  0EEE  0140               	movlb	0	; select bank0
  1544  0EEF  0869               	movf	??_main+1,w
  1545  0EF0  0141               	movlb	1	; select bank1
  1546  0EF1  00D1               	movwf	(main@adc1+1)^(0+128)
  1547                           
  1548                           ;main.c: 86: temp=(adc1*5.0/1023.0)*100.0;
  1549  0EF2  30C0               	movlw	192
  1550  0EF3  0140               	movlb	0	; select bank0
  1551  0EF4  00B8               	movwf	___ftdiv@f2
  1552  0EF5  307F               	movlw	127
  1553  0EF6  00B9               	movwf	___ftdiv@f2+1
  1554  0EF7  3044               	movlw	68
  1555  0EF8  00BA               	movwf	___ftdiv@f2+2
  1556  0EF9  3000               	movlw	0
  1557  0EFA  00A8               	movwf	___ftmul@f1
  1558  0EFB  30A0               	movlw	160
  1559  0EFC  00A9               	movwf	___ftmul@f1+1
  1560  0EFD  3040               	movlw	64
  1561  0EFE  00AA               	movwf	___ftmul@f1+2
  1562  0EFF  0141               	movlb	1	; select bank1
  1563  0F00  0851               	movf	(main@adc1+1)^(0+128),w
  1564  0F01  00F9               	movwf	___awtoft@c+1
  1565  0F02  0850               	movf	main@adc1^(0+128),w
  1566  0F03  00F8               	movwf	___awtoft@c
  1567  0F04  3195  2503  318E   	fcall	___awtoft
  1568  0F07  0878               	movf	?___awtoft,w
  1569  0F08  0140               	movlb	0	; select bank0
  1570  0F09  00AB               	movwf	___ftmul@f2
  1571  0F0A  0879               	movf	?___awtoft+1,w
  1572  0F0B  00AC               	movwf	___ftmul@f2+1
  1573  0F0C  087A               	movf	?___awtoft+2,w
  1574  0F0D  00AD               	movwf	___ftmul@f2+2
  1575  0F0E  318A  2256  318E   	fcall	___ftmul
  1576  0F11  0140               	movlb	0	; select bank0
  1577  0F12  0828               	movf	?___ftmul,w
  1578  0F13  00BB               	movwf	___ftdiv@f1
  1579  0F14  0829               	movf	?___ftmul+1,w
  1580  0F15  00BC               	movwf	___ftdiv@f1+1
  1581  0F16  082A               	movf	?___ftmul+2,w
  1582  0F17  00BD               	movwf	___ftdiv@f1+2
  1583  0F18  3189  21AD  318E   	fcall	___ftdiv
  1584  0F1B  0140               	movlb	0	; select bank0
  1585  0F1C  0838               	movf	?___ftdiv,w
  1586  0F1D  0141               	movlb	1	; select bank1
  1587  0F1E  00CD               	movwf	_main$946^(0+128)
  1588  0F1F  0140               	movlb	0	; select bank0
  1589  0F20  0839               	movf	?___ftdiv+1,w
  1590  0F21  0141               	movlb	1	; select bank1
  1591  0F22  00CE               	movwf	(_main$946+1)^(0+128)
  1592  0F23  0140               	movlb	0	; select bank0
  1593  0F24  083A               	movf	?___ftdiv+2,w
  1594  0F25  0141               	movlb	1	; select bank1
  1595  0F26  00CF               	movwf	(_main$946+2)^(0+128)
  1596                           
  1597                           ;main.c: 86: temp=(adc1*5.0/1023.0)*100.0;
  1598  0F27  3000               	movlw	0
  1599  0F28  0140               	movlb	0	; select bank0
  1600  0F29  00A8               	movwf	___ftmul@f1
  1601  0F2A  30C8               	movlw	200
  1602  0F2B  00A9               	movwf	___ftmul@f1+1
  1603  0F2C  3042               	movlw	66
  1604  0F2D  00AA               	movwf	___ftmul@f1+2
  1605  0F2E  0141               	movlb	1	; select bank1
  1606  0F2F  084D               	movf	_main$946^(0+128),w
  1607  0F30  0140               	movlb	0	; select bank0
  1608  0F31  00AB               	movwf	___ftmul@f2
  1609  0F32  0141               	movlb	1	; select bank1
  1610  0F33  084E               	movf	(_main$946+1)^(0+128),w
  1611  0F34  0140               	movlb	0	; select bank0
  1612  0F35  00AC               	movwf	___ftmul@f2+1
  1613  0F36  0141               	movlb	1	; select bank1
  1614  0F37  084F               	movf	(_main$946+2)^(0+128),w
  1615  0F38  0140               	movlb	0	; select bank0
  1616  0F39  00AD               	movwf	___ftmul@f2+2
  1617  0F3A  318A  2256  318E   	fcall	___ftmul
  1618  0F3D  0140               	movlb	0	; select bank0
  1619  0F3E  0828               	movf	?___ftmul,w
  1620  0F3F  0141               	movlb	1	; select bank1
  1621  0F40  00CA               	movwf	main@temp^(0+128)
  1622  0F41  0140               	movlb	0	; select bank0
  1623  0F42  0829               	movf	?___ftmul+1,w
  1624  0F43  0141               	movlb	1	; select bank1
  1625  0F44  00CB               	movwf	(main@temp+1)^(0+128)
  1626  0F45  0140               	movlb	0	; select bank0
  1627  0F46  082A               	movf	?___ftmul+2,w
  1628  0F47  0141               	movlb	1	; select bank1
  1629  0F48  00CC               	movwf	(main@temp+2)^(0+128)
  1630                           
  1631                           ;main.c: 90: ADPCH=0b000000;
  1632  0F49  019E               	clrf	30	;volatile
  1633                           
  1634                           ;main.c: 91: _delay((unsigned long)((20)*(32000000/4000000.0)));
  1635  0F4A  3035               	movlw	53
  1636  0F4B                     u3917:	
  1637  0F4B  0B89               	decfsz	9,f
  1638  0F4C  2F4B               	goto	u3917
  1639  0F4D  0000               	nop
  1640                           
  1641                           ;main.c: 92: ADCON0bits.ADGO=1;
  1642  0F4E  0141               	movlb	1	; select bank1
  1643  0F4F  1413               	bsf	19,0	;volatile
  1644  0F50                     l92:	
  1645                           ;main.c: 93: while(ADCON0bits.ADGO==1);
  1646                           
  1647  0F50  1813               	btfsc	19,0	;volatile
  1648  0F51  2F50               	goto	l92
  1649                           
  1650                           ;main.c: 97: adc2=ADRESH;
  1651  0F52  080D               	movf	13,w	;volatile
  1652  0F53  0140               	movlb	0	; select bank0
  1653  0F54  00E8               	movwf	??_main
  1654  0F55  01E9               	clrf	??_main+1
  1655  0F56  0868               	movf	??_main,w
  1656  0F57  0141               	movlb	1	; select bank1
  1657  0F58  00D2               	movwf	main@adc2^(0+128)
  1658  0F59  0140               	movlb	0	; select bank0
  1659  0F5A  0869               	movf	??_main+1,w
  1660  0F5B  0141               	movlb	1	; select bank1
  1661  0F5C  00D3               	movwf	(main@adc2+1)^(0+128)
  1662                           
  1663                           ;main.c: 99: adc2=adc2<<8;
  1664  0F5D  0853               	movf	(main@adc2+1)^(0+128),w
  1665  0F5E  0140               	movlb	0	; select bank0
  1666  0F5F  00E9               	movwf	??_main+1
  1667  0F60  0141               	movlb	1	; select bank1
  1668  0F61  0852               	movf	main@adc2^(0+128),w
  1669  0F62  0140               	movlb	0	; select bank0
  1670  0F63  00E8               	movwf	??_main
  1671  0F64  0868               	movf	??_main,w
  1672  0F65  00E9               	movwf	??_main+1
  1673  0F66  01E8               	clrf	??_main
  1674  0F67  0868               	movf	??_main,w
  1675  0F68  0141               	movlb	1	; select bank1
  1676  0F69  00D2               	movwf	main@adc2^(0+128)
  1677  0F6A  0140               	movlb	0	; select bank0
  1678  0F6B  0869               	movf	??_main+1,w
  1679  0F6C  0141               	movlb	1	; select bank1
  1680  0F6D  00D3               	movwf	(main@adc2+1)^(0+128)
  1681                           
  1682                           ;main.c: 101: adc2=adc2+ADRESL;
  1683  0F6E  080C               	movf	12,w	;volatile
  1684  0F6F  0752               	addwf	main@adc2^(0+128),w
  1685  0F70  0140               	movlb	0	; select bank0
  1686  0F71  00E8               	movwf	??_main
  1687  0F72  0141               	movlb	1	; select bank1
  1688  0F73  0853               	movf	(main@adc2+1)^(0+128),w
  1689  0F74  1803               	skipnc
  1690  0F75  0A53               	incf	(main@adc2+1)^(0+128),w
  1691  0F76  0140               	movlb	0	; select bank0
  1692  0F77  00E9               	movwf	??_main+1
  1693  0F78  0868               	movf	??_main,w
  1694  0F79  0141               	movlb	1	; select bank1
  1695  0F7A  00D2               	movwf	main@adc2^(0+128)
  1696  0F7B  0140               	movlb	0	; select bank0
  1697  0F7C  0869               	movf	??_main+1,w
  1698  0F7D  0141               	movlb	1	; select bank1
  1699  0F7E  00D3               	movwf	(main@adc2+1)^(0+128)
  1700                           
  1701                           ;main.c: 103: voltaje=adc2*5.0/1023.0;
  1702  0F7F  30C0               	movlw	192
  1703  0F80  0140               	movlb	0	; select bank0
  1704  0F81  00B8               	movwf	___ftdiv@f2
  1705  0F82  307F               	movlw	127
  1706  0F83  00B9               	movwf	___ftdiv@f2+1
  1707  0F84  3044               	movlw	68
  1708  0F85  00BA               	movwf	___ftdiv@f2+2
  1709  0F86  3000               	movlw	0
  1710  0F87  00A8               	movwf	___ftmul@f1
  1711  0F88  30A0               	movlw	160
  1712  0F89  00A9               	movwf	___ftmul@f1+1
  1713  0F8A  3040               	movlw	64
  1714  0F8B  00AA               	movwf	___ftmul@f1+2
  1715  0F8C  0141               	movlb	1	; select bank1
  1716  0F8D  0853               	movf	(main@adc2+1)^(0+128),w
  1717  0F8E  00F9               	movwf	___awtoft@c+1
  1718  0F8F  0852               	movf	main@adc2^(0+128),w
  1719  0F90  00F8               	movwf	___awtoft@c
  1720  0F91  3195  2503  318E   	fcall	___awtoft
  1721  0F94  0878               	movf	?___awtoft,w
  1722  0F95  0140               	movlb	0	; select bank0
  1723  0F96  00AB               	movwf	___ftmul@f2
  1724  0F97  0879               	movf	?___awtoft+1,w
  1725  0F98  00AC               	movwf	___ftmul@f2+1
  1726  0F99  087A               	movf	?___awtoft+2,w
  1727  0F9A  00AD               	movwf	___ftmul@f2+2
  1728  0F9B  318A  2256  318E   	fcall	___ftmul
  1729  0F9E  0140               	movlb	0	; select bank0
  1730  0F9F  0828               	movf	?___ftmul,w
  1731  0FA0  00BB               	movwf	___ftdiv@f1
  1732  0FA1  0829               	movf	?___ftmul+1,w
  1733  0FA2  00BC               	movwf	___ftdiv@f1+1
  1734  0FA3  082A               	movf	?___ftmul+2,w
  1735  0FA4  00BD               	movwf	___ftdiv@f1+2
  1736  0FA5  3189  21AD  318E   	fcall	___ftdiv
  1737  0FA8  0140               	movlb	0	; select bank0
  1738  0FA9  0838               	movf	?___ftdiv,w
  1739  0FAA  0141               	movlb	1	; select bank1
  1740  0FAB  00C7               	movwf	main@voltaje^(0+128)
  1741  0FAC  0140               	movlb	0	; select bank0
  1742  0FAD  0839               	movf	?___ftdiv+1,w
  1743  0FAE  0141               	movlb	1	; select bank1
  1744  0FAF  00C8               	movwf	(main@voltaje+1)^(0+128)
  1745  0FB0  0140               	movlb	0	; select bank0
  1746  0FB1  083A               	movf	?___ftdiv+2,w
  1747  0FB2  0141               	movlb	1	; select bank1
  1748  0FB3  00C9               	movwf	(main@voltaje+2)^(0+128)
  1749                           
  1750                           ;main.c: 105: sprintf(buffer1,"Vp=%.2f",voltaje);
  1751  0FB4  307E               	movlw	low (STR_1| (0+32768))
  1752  0FB5  0140               	movlb	0	; select bank0
  1753  0FB6  00D9               	movwf	sprintf@f
  1754  0FB7  3098               	movlw	high (STR_1| (0+32768))
  1755  0FB8  00DA               	movwf	sprintf@f+1
  1756  0FB9  0141               	movlb	1	; select bank1
  1757  0FBA  0847               	movf	main@voltaje^(0+128),w
  1758  0FBB  0140               	movlb	0	; select bank0
  1759  0FBC  00DB               	movwf	?_sprintf+2
  1760  0FBD  0141               	movlb	1	; select bank1
  1761  0FBE  0848               	movf	(main@voltaje+1)^(0+128),w
  1762  0FBF  0140               	movlb	0	; select bank0
  1763  0FC0  00DC               	movwf	?_sprintf+3
  1764  0FC1  0141               	movlb	1	; select bank1
  1765  0FC2  0849               	movf	(main@voltaje+2)^(0+128),w
  1766  0FC3  0140               	movlb	0	; select bank0
  1767  0FC4  00DD               	movwf	?_sprintf+4
  1768  0FC5  30B7               	movlw	(low (main@buffer1| 0))& (0+255)
  1769  0FC6  3183  2311  318E   	fcall	_sprintf
  1770                           
  1771                           ;main.c: 106: Lcd_Out2(1,0,buffer1);
  1772  0FC9  01F3               	clrf	Lcd_Out2@x
  1773  0FCA  30B7               	movlw	(low (main@buffer1| 0))& (0+255)
  1774  0FCB  0140               	movlb	0	; select bank0
  1775  0FCC  00E8               	movwf	??_main
  1776  0FCD  0868               	movf	??_main,w
  1777  0FCE  00F4               	movwf	Lcd_Out2@buffer
  1778  0FCF  3001               	movlw	1
  1779  0FD0  3195  254B  318E   	fcall	_Lcd_Out2
  1780                           
  1781                           ;main.c: 107: sprintf(buffer1,"Te=%.2f",temp);
  1782  0FD3  3027               	movlw	low (STR_2| (0+32768))
  1783  0FD4  0140               	movlb	0	; select bank0
  1784  0FD5  00D9               	movwf	sprintf@f
  1785  0FD6  3098               	movlw	high (STR_2| (0+32768))
  1786  0FD7  00DA               	movwf	sprintf@f+1
  1787  0FD8  0141               	movlb	1	; select bank1
  1788  0FD9  084A               	movf	main@temp^(0+128),w
  1789  0FDA  0140               	movlb	0	; select bank0
  1790  0FDB  00DB               	movwf	?_sprintf+2
  1791  0FDC  0141               	movlb	1	; select bank1
  1792  0FDD  084B               	movf	(main@temp+1)^(0+128),w
  1793  0FDE  0140               	movlb	0	; select bank0
  1794  0FDF  00DC               	movwf	?_sprintf+3
  1795  0FE0  0141               	movlb	1	; select bank1
  1796  0FE1  084C               	movf	(main@temp+2)^(0+128),w
  1797  0FE2  0140               	movlb	0	; select bank0
  1798  0FE3  00DD               	movwf	?_sprintf+4
  1799  0FE4  30B7               	movlw	(low (main@buffer1| 0))& (0+255)
  1800  0FE5  3183  2311  318E   	fcall	_sprintf
  1801                           
  1802                           ;main.c: 108: Lcd_Out2(2,0,buffer1);
  1803  0FE8  01F3               	clrf	Lcd_Out2@x
  1804  0FE9  30B7               	movlw	(low (main@buffer1| 0))& (0+255)
  1805  0FEA  0140               	movlb	0	; select bank0
  1806  0FEB  00E8               	movwf	??_main
  1807  0FEC  0868               	movf	??_main,w
  1808  0FED  00F4               	movwf	Lcd_Out2@buffer
  1809  0FEE  3002               	movlw	2
  1810  0FEF  3195  254B  318E   	fcall	_Lcd_Out2
  1811                           
  1812                           ;main.c: 112: _delay((unsigned long)((200)*(32000000/4000.0)));
  1813  0FF2  3009               	movlw	9
  1814  0FF3  0140               	movlb	0	; select bank0
  1815  0FF4  00E9               	movwf	??_main+1
  1816  0FF5  301E               	movlw	30
  1817  0FF6  00E8               	movwf	??_main
  1818  0FF7  30E4               	movlw	228
  1819  0FF8                     u3927:	
  1820  0FF8  0B89               	decfsz	9,f
  1821  0FF9  2FF8               	goto	u3927
  1822  0FFA  0BE8               	decfsz	??_main,f
  1823  0FFB  2FF8               	goto	u3927
  1824  0FFC  0BE9               	decfsz	??_main+1,f
  1825  0FFD  2FF8               	goto	u3927
  1826  0FFE  0000               	nop
  1827  0FFF  2EBA               	goto	l2719
  1828  1000                     __end_of_main:	
  1829                           ;main.c: 116: }
  1830                           ;main.c: 119: return (0);
  1831                           ;	Return value of _main is never used
  1832                           
  1833                           
  1834                           	psect	text1
  1835  0311                     __ptext1:	
  1836 ;; *************** function _sprintf *****************
  1837 ;; Defined at:
  1838 ;;		line 492 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\doprnt.c"
  1839 ;; Parameters:    Size  Location     Type
  1840 ;;  sp              1    wreg     PTR unsigned char 
  1841 ;;		 -> main@buffer1(16), 
  1842 ;;  f               2   57[BANK0 ] PTR const unsigned char 
  1843 ;;		 -> STR_2(8), STR_1(8), 
  1844 ;; Auto vars:     Size  Location     Type
  1845 ;;  sp              1   18[BANK1 ] PTR unsigned char 
  1846 ;;		 -> main@buffer1(16), 
  1847 ;;  tmpval          4   12[BANK1 ] struct .
  1848 ;;  val             4    6[BANK1 ] unsigned long 
  1849 ;;  fval            3   19[BANK1 ] unsigned long 
  1850 ;;  prec            2   16[BANK1 ] int 
  1851 ;;  exp             2   10[BANK1 ] int 
  1852 ;;  flag            2    4[BANK1 ] unsigned short 
  1853 ;;  cp              2    0        PTR const unsigned char 
  1854 ;;  len             2    0        unsigned int 
  1855 ;;  width           2    0        int 
  1856 ;;  c               1   22[BANK1 ] char 
  1857 ;;  ap              1    3[BANK1 ] PTR void [1]
  1858 ;;		 -> ?_sprintf(2), 
  1859 ;;  d               1    0        unsigned char 
  1860 ;; Return value:  Size  Location     Type
  1861 ;;                  2   57[BANK0 ] int 
  1862 ;; Registers used:
  1863 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  1864 ;; Tracked objects:
  1865 ;;		On entry : 0/0
  1866 ;;		On exit  : 0/0
  1867 ;;		Unchanged: 0/0
  1868 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
  1869 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  1870 ;;      Locals:         0       0      23       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  1871 ;;      Temps:          0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  1872 ;;      Totals:         0      11      23       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  1873 ;;Total ram usage:       34 bytes
  1874 ;; Hardware stack levels used:    1
  1875 ;; Hardware stack levels required when called:    3
  1876 ;; This function calls:
  1877 ;;		___awdiv
  1878 ;;		___ftadd
  1879 ;;		___ftge
  1880 ;;		___ftmul
  1881 ;;		___ftneg
  1882 ;;		___ftsub
  1883 ;;		___fttol
  1884 ;;		___lldiv
  1885 ;;		___llmod
  1886 ;;		___lltoft
  1887 ;;		___wmul
  1888 ;;		__div_to_l_
  1889 ;;		__tdiv_to_l_
  1890 ;;		_fround
  1891 ;;		_isdigit
  1892 ;;		_scale
  1893 ;; This function is called by:
  1894 ;;		_main
  1895 ;; This function uses a non-reentrant model
  1896 ;;
  1897                           
  1898                           
  1899                           ;psect for function _sprintf
  1900  0311                     _sprintf:	
  1901                           
  1902                           ;incstack = 0
  1903                           ; Regs used in _sprintf: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  1904                           ;sprintf@sp stored from wreg
  1905  0311  0141               	movlb	1	; select bank1
  1906  0312  00B2               	movwf	sprintf@sp^(0+128)
  1907                           
  1908                           ;doprnt.c: 494: va_list ap;
  1909                           ;doprnt.c: 499: signed char c;
  1910                           ;doprnt.c: 501: int width;
  1911                           ;doprnt.c: 504: int prec;
  1912                           ;doprnt.c: 508: unsigned short flag;
  1913                           ;doprnt.c: 515: char d;
  1914                           ;doprnt.c: 516: double fval;
  1915                           ;doprnt.c: 517: int exp;
  1916                           ;doprnt.c: 523: union {
  1917                           ;doprnt.c: 524: unsigned long vd;
  1918                           ;doprnt.c: 525: double integ;
  1919                           ;doprnt.c: 526: } tmpval;
  1920                           ;doprnt.c: 528: unsigned long val;
  1921                           ;doprnt.c: 529: unsigned len;
  1922                           ;doprnt.c: 530: const char * cp;
  1923                           ;doprnt.c: 533: *ap = __va_start();
  1924  0313  305B               	movlw	(low ((?_sprintf| 0+2)))& (0+255)
  1925  0314  0140               	movlb	0	; select bank0
  1926  0315  00DE               	movwf	??_sprintf
  1927  0316  085E               	movf	??_sprintf,w
  1928  0317  0141               	movlb	1	; select bank1
  1929  0318  00A3               	movwf	sprintf@ap^(0+128)
  1930  0319                     l2601:	
  1931                           ;doprnt.c: 536: while(c = *f++) {
  1932                           
  1933  0319  0140               	movlb	0	; select bank0
  1934  031A  085A               	movf	sprintf@f+1,w
  1935  031B  00DF               	movwf	??_sprintf+1
  1936  031C  0859               	movf	sprintf@f,w
  1937  031D  00DE               	movwf	??_sprintf
  1938  031E  0AD9               	incf	sprintf@f,f
  1939  031F  1903               	skipnz
  1940  0320  0ADA               	incf	sprintf@f+1,f
  1941  0321  085E               	movf	??_sprintf,w
  1942  0322  0084               	movwf	4
  1943  0323  085F               	movf	??_sprintf+1,w
  1944  0324  0085               	movwf	5
  1945  0325  0800               	movf	0,w	;code access
  1946  0326  00E0               	movwf	??_sprintf+2
  1947  0327  0860               	movf	??_sprintf+2,w
  1948  0328  0141               	movlb	1	; select bank1
  1949  0329  00B6               	movwf	sprintf@c^(0+128)
  1950  032A  0836               	movf	sprintf@c^(0+128),w
  1951  032B  1903               	btfsc	3,2
  1952  032C  2FF8               	goto	l2603
  1953                           
  1954                           ;doprnt.c: 538: if(c != '%')
  1955  032D  3025               	movlw	37
  1956  032E  0636               	xorwf	sprintf@c^(0+128),w
  1957  032F  1903               	btfsc	3,2
  1958  0330  2B34               	goto	l2417
  1959                           
  1960                           ;doprnt.c: 540: {
  1961                           ;doprnt.c: 541: ((*sp++ = (c)));
  1962  0331  0836               	movf	sprintf@c^(0+128),w
  1963  0332  0140               	movlb	0	; select bank0
  1964  0333  2FEA               	goto	L5
  1965  0334                     l2417:	
  1966                           ;doprnt.c: 542: continue;
  1967                           
  1968                           
  1969                           ;doprnt.c: 543: }
  1970                           ;doprnt.c: 548: flag = 0;
  1971  0334  01A4               	clrf	sprintf@flag^(0+128)
  1972  0335  01A5               	clrf	(sprintf@flag+1)^(0+128)
  1973                           
  1974                           ;doprnt.c: 611: if(*f == '.') {
  1975  0336  0140               	movlb	0	; select bank0
  1976  0337  0859               	movf	sprintf@f,w
  1977  0338  0084               	movwf	4
  1978  0339  085A               	movf	sprintf@f+1,w
  1979  033A  0085               	movwf	5
  1980  033B  0012               	moviw fsr0++
  1981  033C  3A2E               	xorlw	46
  1982  033D  1D03               	btfss	3,2
  1983  033E  2B81               	goto	l2433
  1984                           
  1985                           ;doprnt.c: 612: flag |= 0x4000;
  1986  033F  0141               	movlb	1	; select bank1
  1987  0340  1725               	bsf	(sprintf@flag^(0+128)+1),6
  1988                           
  1989                           ;doprnt.c: 613: f++;
  1990  0341  3001               	movlw	1
  1991  0342  0140               	movlb	0	; select bank0
  1992  0343  07D9               	addwf	sprintf@f,f
  1993  0344  3000               	movlw	0
  1994  0345  3DDA               	addwfc	sprintf@f+1,f
  1995                           
  1996                           ;doprnt.c: 620: {
  1997                           ;doprnt.c: 621: prec = 0;
  1998  0346  0141               	movlb	1	; select bank1
  1999  0347  01B0               	clrf	sprintf@prec^(0+128)
  2000  0348  01B1               	clrf	(sprintf@prec+1)^(0+128)
  2001  0349                     l2431:	
  2002                           ;doprnt.c: 622: while(isdigit((unsigned)*f))
  2003                           
  2004  0349  0140               	movlb	0	; select bank0
  2005  034A  0859               	movf	sprintf@f,w
  2006  034B  0084               	movwf	4
  2007  034C  085A               	movf	sprintf@f+1,w
  2008  034D  0085               	movwf	5
  2009  034E  0800               	movf	0,w	;code access
  2010  034F  3180  2009  3183   	fcall	_isdigit
  2011  0352  1C03               	btfss	3,0
  2012  0353  2B88               	goto	l2439
  2013                           
  2014                           ;doprnt.c: 623: prec = prec*10 + *f++ - '0';
  2015  0354  0140               	movlb	0	; select bank0
  2016  0355  0859               	movf	sprintf@f,w
  2017  0356  0084               	movwf	4
  2018  0357  085A               	movf	sprintf@f+1,w
  2019  0358  0085               	movwf	5
  2020  0359  0800               	movf	0,w	;code access
  2021  035A  00DE               	movwf	??_sprintf
  2022  035B  01DF               	clrf	??_sprintf+1
  2023  035C  0141               	movlb	1	; select bank1
  2024  035D  0831               	movf	(sprintf@prec+1)^(0+128),w
  2025  035E  0140               	movlb	0	; select bank0
  2026  035F  00A5               	movwf	___wmul@multiplier+1
  2027  0360  0141               	movlb	1	; select bank1
  2028  0361  0830               	movf	sprintf@prec^(0+128),w
  2029  0362  0140               	movlb	0	; select bank0
  2030  0363  00A4               	movwf	___wmul@multiplier
  2031  0364  300A               	movlw	10
  2032  0365  00A6               	movwf	___wmul@multiplicand
  2033  0366  3000               	movlw	0
  2034  0367  00A7               	movwf	___wmul@multiplicand+1
  2035  0368  3194  24C9  3183   	fcall	___wmul
  2036  036B  0140               	movlb	0	; select bank0
  2037  036C  085E               	movf	??_sprintf,w
  2038  036D  0724               	addwf	?___wmul,w
  2039  036E  00E0               	movwf	??_sprintf+2
  2040  036F  085F               	movf	??_sprintf+1,w
  2041  0370  3D25               	addwfc	?___wmul+1,w
  2042  0371  00E1               	movwf	??_sprintf+3
  2043  0372  0860               	movf	??_sprintf+2,w
  2044  0373  3ED0               	addlw	208
  2045  0374  0141               	movlb	1	; select bank1
  2046  0375  00B0               	movwf	sprintf@prec^(0+128)
  2047  0376  30FF               	movlw	255
  2048  0377  0140               	movlb	0	; select bank0
  2049  0378  3D61               	addwfc	??_sprintf+3,w
  2050  0379  0141               	movlb	1	; select bank1
  2051  037A  00B1               	movwf	(sprintf@prec+1)^(0+128)
  2052  037B  3001               	movlw	1
  2053  037C  0140               	movlb	0	; select bank0
  2054  037D  07D9               	addwf	sprintf@f,f
  2055  037E  3000               	movlw	0
  2056  037F  3DDA               	addwfc	sprintf@f+1,f
  2057  0380  2B49               	goto	l2431
  2058  0381                     l2433:	
  2059                           ;doprnt.c: 624: }
  2060                           ;doprnt.c: 625: } else {
  2061                           
  2062                           
  2063                           ;doprnt.c: 626: prec = 0;
  2064  0381  0141               	movlb	1	; select bank1
  2065  0382  01B0               	clrf	sprintf@prec^(0+128)
  2066  0383  01B1               	clrf	(sprintf@prec+1)^(0+128)
  2067                           
  2068                           ;doprnt.c: 628: flag |= 0x1000;
  2069  0384  1625               	bsf	(sprintf@flag^(0+128)+1),4
  2070                           
  2071                           ;doprnt.c: 630: }
  2072                           ;doprnt.c: 635: switch(c = *f++) {
  2073  0385  2B88               	goto	l2439
  2074  0386                     l143:	
  2075                           ;doprnt.c: 662: case 'f':
  2076                           
  2077                           ;doprnt.c: 638: goto alldone;
  2078                           
  2079                           ;doprnt.c: 637: case 0:
  2080                           
  2081                           
  2082                           ;doprnt.c: 663: flag |= 0x400;
  2083  0386  1525               	bsf	(sprintf@flag^(0+128)+1),2
  2084                           
  2085                           ;doprnt.c: 664: break;
  2086  0387  2B9E               	goto	l2441
  2087  0388                     l2439:	
  2088                           ;doprnt.c: 822: }
  2089                           
  2090                           ;doprnt.c: 813: continue;
  2091                           
  2092                           ;doprnt.c: 802: default:
  2093                           
  2094  0388  0140               	movlb	0	; select bank0
  2095  0389  085A               	movf	sprintf@f+1,w
  2096  038A  00DF               	movwf	??_sprintf+1
  2097  038B  0859               	movf	sprintf@f,w
  2098  038C  00DE               	movwf	??_sprintf
  2099  038D  0AD9               	incf	sprintf@f,f
  2100  038E  1903               	skipnz
  2101  038F  0ADA               	incf	sprintf@f+1,f
  2102  0390  085E               	movf	??_sprintf,w
  2103  0391  0084               	movwf	4
  2104  0392  085F               	movf	??_sprintf+1,w
  2105  0393  0085               	movwf	5
  2106  0394  0800               	movf	0,w	;code access
  2107  0395  0141               	movlb	1	; select bank1
  2108  0396  00B6               	movwf	sprintf@c^(0+128)
  2109                           
  2110                           ; Switch size 1, requested type "space"
  2111                           ; Number of cases is 2, Range of values is 0 to 102
  2112                           ; switch strategies available:
  2113                           ; Name         Instructions Cycles
  2114                           ; simple_byte            7     4 (average)
  2115                           ; direct_byte          212     6 (fixed)
  2116                           ; jumptable            260     6 (fixed)
  2117                           ;	Chosen strategy is simple_byte
  2118  0397  3A00               	xorlw	0	; case 0
  2119  0398  1903               	skipnz
  2120  0399  2FF8               	goto	l2603
  2121  039A  3A66               	xorlw	102	; case 102
  2122  039B  1903               	skipnz
  2123  039C  2B86               	goto	l143
  2124  039D  2B19               	goto	l2601
  2125  039E                     l2441:	
  2126                           
  2127                           ;doprnt.c: 825: if(flag & (0x700)) {
  2128  039E  3000               	movlw	0
  2129  039F  0524               	andwf	sprintf@flag^(0+128),w
  2130  03A0  0140               	movlb	0	; select bank0
  2131  03A1  00DE               	movwf	??_sprintf
  2132  03A2  3007               	movlw	7
  2133  03A3  0141               	movlb	1	; select bank1
  2134  03A4  0525               	andwf	(sprintf@flag+1)^(0+128),w
  2135  03A5  0140               	movlb	0	; select bank0
  2136  03A6  00DF               	movwf	??_sprintf+1
  2137  03A7  085E               	movf	??_sprintf,w
  2138  03A8  045F               	iorwf	??_sprintf+1,w
  2139  03A9  1903               	btfsc	3,2
  2140  03AA  2F92               	goto	l2585
  2141                           
  2142                           ;doprnt.c: 827: if(flag & 0x1000)
  2143  03AB  0141               	movlb	1	; select bank1
  2144  03AC  1E25               	btfss	(sprintf@flag+1)^(0+128),4
  2145  03AD  2BB2               	goto	l2447
  2146                           
  2147                           ;doprnt.c: 829: prec = 6;
  2148  03AE  3006               	movlw	6
  2149  03AF  00B0               	movwf	sprintf@prec^(0+128)
  2150  03B0  3000               	movlw	0
  2151  03B1  00B1               	movwf	(sprintf@prec^(0+128)+1)
  2152  03B2                     l2447:	
  2153                           
  2154                           ;doprnt.c: 830: fval = (*(double *)__va_arg((*(double **)ap), (double)0));
  2155  03B2  0823               	movf	sprintf@ap^(0+128),w
  2156  03B3  0086               	movwf	6
  2157  03B4  0187               	clrf	7
  2158  03B5  3F40               	moviw [0]fsr1
  2159  03B6  00B3               	movwf	sprintf@fval^(0+128)
  2160  03B7  3F41               	moviw [1]fsr1
  2161  03B8  00B4               	movwf	(sprintf@fval+1)^(0+128)
  2162  03B9  3F42               	moviw [2]fsr1
  2163  03BA  00B5               	movwf	(sprintf@fval+2)^(0+128)
  2164  03BB  3003               	movlw	3
  2165  03BC  0140               	movlb	0	; select bank0
  2166  03BD  00DE               	movwf	??_sprintf
  2167  03BE  085E               	movf	??_sprintf,w
  2168  03BF  0141               	movlb	1	; select bank1
  2169  03C0  07A3               	addwf	sprintf@ap^(0+128),f
  2170                           
  2171                           ;doprnt.c: 831: if(fval < 0.0) {
  2172  03C1  0833               	movf	sprintf@fval^(0+128),w
  2173  03C2  00F0               	movwf	___ftge@ff1
  2174  03C3  0834               	movf	(sprintf@fval+1)^(0+128),w
  2175  03C4  00F1               	movwf	___ftge@ff1+1
  2176  03C5  0835               	movf	(sprintf@fval+2)^(0+128),w
  2177  03C6  00F2               	movwf	___ftge@ff1+2
  2178  03C7  3000               	movlw	0
  2179  03C8  00F3               	movwf	___ftge@ff2
  2180  03C9  3000               	movlw	0
  2181  03CA  00F4               	movwf	___ftge@ff2+1
  2182  03CB  3000               	movlw	0
  2183  03CC  00F5               	movwf	___ftge@ff2+2
  2184  03CD  3195  2580  3183   	fcall	___ftge
  2185  03D0  1803               	btfsc	3,0
  2186  03D1  2BE7               	goto	l2457
  2187                           
  2188                           ;doprnt.c: 832: fval = -fval;
  2189  03D2  0141               	movlb	1	; select bank1
  2190  03D3  0833               	movf	sprintf@fval^(0+128),w
  2191  03D4  00F0               	movwf	___ftneg@f1
  2192  03D5  0834               	movf	(sprintf@fval+1)^(0+128),w
  2193  03D6  00F1               	movwf	___ftneg@f1+1
  2194  03D7  0835               	movf	(sprintf@fval+2)^(0+128),w
  2195  03D8  00F2               	movwf	___ftneg@f1+2
  2196  03D9  3188  2001  3183   	fcall	___ftneg
  2197  03DC  0870               	movf	?___ftneg,w
  2198  03DD  0141               	movlb	1	; select bank1
  2199  03DE  00B3               	movwf	sprintf@fval^(0+128)
  2200  03DF  0871               	movf	?___ftneg+1,w
  2201  03E0  00B4               	movwf	(sprintf@fval+1)^(0+128)
  2202  03E1  0872               	movf	?___ftneg+2,w
  2203  03E2  00B5               	movwf	(sprintf@fval+2)^(0+128)
  2204                           
  2205                           ;doprnt.c: 833: flag |= 0x03;
  2206  03E3  3003               	movlw	3
  2207  03E4  04A4               	iorwf	sprintf@flag^(0+128),f
  2208  03E5  3000               	movlw	0
  2209  03E6  04A5               	iorwf	(sprintf@flag+1)^(0+128),f
  2210  03E7                     l2457:	
  2211                           
  2212                           ;doprnt.c: 834: }
  2213                           ;doprnt.c: 835: exp = 0;
  2214  03E7  0141               	movlb	1	; select bank1
  2215  03E8  01AA               	clrf	sprintf@exp^(0+128)
  2216  03E9  01AB               	clrf	(sprintf@exp+1)^(0+128)
  2217                           
  2218                           ;doprnt.c: 836: if( fval!=0) {
  2219  03EA  0835               	movf	(sprintf@fval+2)^(0+128),w
  2220  03EB  0434               	iorwf	(sprintf@fval+1)^(0+128),w
  2221  03EC  0433               	iorwf	sprintf@fval^(0+128),w
  2222  03ED  1903               	skipnz
  2223  03EE  2CA7               	goto	l149
  2224                           
  2225                           ;doprnt.c: 837: (void)(*(&exp) = ((*(unsigned long *)&fval >> 15) & 255) - 126);
  2226  03EF  30B3               	movlw	low (sprintf@fval| 0)
  2227  03F0  0086               	movwf	6
  2228  03F1  0187               	clrf	7
  2229  03F2  3F40               	moviw [0]fsr1
  2230  03F3  0140               	movlb	0	; select bank0
  2231  03F4  00DE               	movwf	??_sprintf
  2232  03F5  3F41               	moviw [1]fsr1
  2233  03F6  00DF               	movwf	??_sprintf+1
  2234  03F7  3F42               	moviw [2]fsr1
  2235  03F8  00E0               	movwf	??_sprintf+2
  2236  03F9  3F43               	moviw [3]fsr1
  2237  03FA  00E1               	movwf	??_sprintf+3
  2238  03FB  300F               	movlw	15
  2239  03FC                     u3515:	
  2240  03FC  36E1               	lsrf	??_sprintf+3,f
  2241  03FD  0CE0               	rrf	??_sprintf+2,f
  2242  03FE  0CDF               	rrf	??_sprintf+1,f
  2243  03FF  0CDE               	rrf	??_sprintf,f
  2244  0400  0B89               	decfsz	9,f
  2245  0401  2BFC               	goto	u3515
  2246  0402  30FF               	movlw	255
  2247  0403  055E               	andwf	??_sprintf,w
  2248  0404  00E2               	movwf	??_sprintf+4
  2249  0405  3000               	movlw	0
  2250  0406  055F               	andwf	??_sprintf+1,w
  2251  0407  00E3               	movwf	??_sprintf+5
  2252  0408  0862               	movf	??_sprintf+4,w
  2253  0409  3E82               	addlw	130
  2254  040A  0141               	movlb	1	; select bank1
  2255  040B  00AA               	movwf	sprintf@exp^(0+128)
  2256  040C  30FF               	movlw	255
  2257  040D  0140               	movlb	0	; select bank0
  2258  040E  3D63               	addwfc	??_sprintf+5,w
  2259  040F  0141               	movlb	1	; select bank1
  2260  0410  00AB               	movwf	(sprintf@exp+1)^(0+128)
  2261                           
  2262                           ;doprnt.c: 838: exp--;
  2263  0411  30FF               	movlw	255
  2264  0412  07AA               	addwf	sprintf@exp^(0+128),f
  2265  0413  30FF               	movlw	255
  2266  0414  3DAB               	addwfc	(sprintf@exp+1)^(0+128),f
  2267                           
  2268                           ;doprnt.c: 839: exp *= 3;
  2269  0415  3003               	movlw	3
  2270  0416  0140               	movlb	0	; select bank0
  2271  0417  00A4               	movwf	___wmul@multiplier
  2272  0418  3000               	movlw	0
  2273  0419  00A5               	movwf	___wmul@multiplier+1
  2274  041A  0141               	movlb	1	; select bank1
  2275  041B  082B               	movf	(sprintf@exp+1)^(0+128),w
  2276  041C  0140               	movlb	0	; select bank0
  2277  041D  00A7               	movwf	___wmul@multiplicand+1
  2278  041E  0141               	movlb	1	; select bank1
  2279  041F  082A               	movf	sprintf@exp^(0+128),w
  2280  0420  0140               	movlb	0	; select bank0
  2281  0421  00A6               	movwf	___wmul@multiplicand
  2282  0422  3194  24C9  3183   	fcall	___wmul
  2283  0425  0140               	movlb	0	; select bank0
  2284  0426  0825               	movf	?___wmul+1,w
  2285  0427  0141               	movlb	1	; select bank1
  2286  0428  00AB               	movwf	(sprintf@exp+1)^(0+128)
  2287  0429  0140               	movlb	0	; select bank0
  2288  042A  0824               	movf	?___wmul,w
  2289  042B  0141               	movlb	1	; select bank1
  2290  042C  00AA               	movwf	sprintf@exp^(0+128)
  2291                           
  2292                           ;doprnt.c: 840: exp /= 10;
  2293  042D  300A               	movlw	10
  2294  042E  00F7               	movwf	___awdiv@divisor
  2295  042F  3000               	movlw	0
  2296  0430  00F8               	movwf	___awdiv@divisor+1
  2297  0431  082B               	movf	(sprintf@exp+1)^(0+128),w
  2298  0432  00FA               	movwf	___awdiv@dividend+1
  2299  0433  082A               	movf	sprintf@exp^(0+128),w
  2300  0434  00F9               	movwf	___awdiv@dividend
  2301  0435  3196  2694  3183   	fcall	___awdiv
  2302  0438  0878               	movf	?___awdiv+1,w
  2303  0439  0141               	movlb	1	; select bank1
  2304  043A  00AB               	movwf	(sprintf@exp+1)^(0+128)
  2305  043B  0877               	movf	?___awdiv,w
  2306  043C  00AA               	movwf	sprintf@exp^(0+128)
  2307                           
  2308                           ;doprnt.c: 841: if(exp < 0)
  2309  043D  1FAB               	btfss	(sprintf@exp+1)^(0+128),7
  2310  043E  2C43               	goto	l2473
  2311                           
  2312                           ;doprnt.c: 842: exp--;
  2313  043F  30FF               	movlw	255
  2314  0440  07AA               	addwf	sprintf@exp^(0+128),f
  2315  0441  30FF               	movlw	255
  2316  0442  3DAB               	addwfc	(sprintf@exp+1)^(0+128),f
  2317  0443                     l2473:	
  2318                           
  2319                           ;doprnt.c: 846: tmpval.integ = scale(-exp);
  2320  0443  032A               	decf	sprintf@exp^(0+128),w
  2321  0444  3AFF               	xorlw	255
  2322  0445  3180  20CD  3183   	fcall	_scale
  2323  0448  0140               	movlb	0	; select bank0
  2324  0449  0838               	movf	?_scale,w
  2325  044A  0141               	movlb	1	; select bank1
  2326  044B  00AC               	movwf	sprintf@tmpval^(0+128)
  2327  044C  0140               	movlb	0	; select bank0
  2328  044D  0839               	movf	?_scale+1,w
  2329  044E  0141               	movlb	1	; select bank1
  2330  044F  00AD               	movwf	(sprintf@tmpval+1)^(0+128)
  2331  0450  0140               	movlb	0	; select bank0
  2332  0451  083A               	movf	?_scale+2,w
  2333  0452  0141               	movlb	1	; select bank1
  2334  0453  00AE               	movwf	(sprintf@tmpval+2)^(0+128)
  2335                           
  2336                           ;doprnt.c: 847: tmpval.integ *= fval;
  2337  0454  0833               	movf	sprintf@fval^(0+128),w
  2338  0455  0140               	movlb	0	; select bank0
  2339  0456  00A8               	movwf	___ftmul@f1
  2340  0457  0141               	movlb	1	; select bank1
  2341  0458  0834               	movf	(sprintf@fval+1)^(0+128),w
  2342  0459  0140               	movlb	0	; select bank0
  2343  045A  00A9               	movwf	___ftmul@f1+1
  2344  045B  0141               	movlb	1	; select bank1
  2345  045C  0835               	movf	(sprintf@fval+2)^(0+128),w
  2346  045D  0140               	movlb	0	; select bank0
  2347  045E  00AA               	movwf	___ftmul@f1+2
  2348  045F  0141               	movlb	1	; select bank1
  2349  0460  082C               	movf	sprintf@tmpval^(0+128),w
  2350  0461  0140               	movlb	0	; select bank0
  2351  0462  00AB               	movwf	___ftmul@f2
  2352  0463  0141               	movlb	1	; select bank1
  2353  0464  082D               	movf	(sprintf@tmpval+1)^(0+128),w
  2354  0465  0140               	movlb	0	; select bank0
  2355  0466  00AC               	movwf	___ftmul@f2+1
  2356  0467  0141               	movlb	1	; select bank1
  2357  0468  082E               	movf	(sprintf@tmpval+2)^(0+128),w
  2358  0469  0140               	movlb	0	; select bank0
  2359  046A  00AD               	movwf	___ftmul@f2+2
  2360  046B  318A  2256  3183   	fcall	___ftmul
  2361  046E  0140               	movlb	0	; select bank0
  2362  046F  0828               	movf	?___ftmul,w
  2363  0470  0141               	movlb	1	; select bank1
  2364  0471  00AC               	movwf	sprintf@tmpval^(0+128)
  2365  0472  0140               	movlb	0	; select bank0
  2366  0473  0829               	movf	?___ftmul+1,w
  2367  0474  0141               	movlb	1	; select bank1
  2368  0475  00AD               	movwf	(sprintf@tmpval+1)^(0+128)
  2369  0476  0140               	movlb	0	; select bank0
  2370  0477  082A               	movf	?___ftmul+2,w
  2371  0478  0141               	movlb	1	; select bank1
  2372  0479  00AE               	movwf	(sprintf@tmpval+2)^(0+128)
  2373                           
  2374                           ;doprnt.c: 848: if(tmpval.integ < 1.0)
  2375  047A  082C               	movf	sprintf@tmpval^(0+128),w
  2376  047B  00F0               	movwf	___ftge@ff1
  2377  047C  082D               	movf	(sprintf@tmpval+1)^(0+128),w
  2378  047D  00F1               	movwf	___ftge@ff1+1
  2379  047E  082E               	movf	(sprintf@tmpval+2)^(0+128),w
  2380  047F  00F2               	movwf	___ftge@ff1+2
  2381  0480  3000               	movlw	0
  2382  0481  00F3               	movwf	___ftge@ff2
  2383  0482  3080               	movlw	128
  2384  0483  00F4               	movwf	___ftge@ff2+1
  2385  0484  303F               	movlw	63
  2386  0485  00F5               	movwf	___ftge@ff2+2
  2387  0486  3195  2580  3183   	fcall	___ftge
  2388  0489  1803               	btfsc	3,0
  2389  048A  2C90               	goto	l2481
  2390                           
  2391                           ;doprnt.c: 849: exp--;
  2392  048B  30FF               	movlw	255
  2393  048C  0141               	movlb	1	; select bank1
  2394  048D  07AA               	addwf	sprintf@exp^(0+128),f
  2395  048E  30FF               	movlw	255
  2396  048F  2CA6               	goto	L1
  2397  0490                     l2481:	
  2398                           
  2399                           ;doprnt.c: 850: else if(tmpval.integ >= 10.0)
  2400  0490  0141               	movlb	1	; select bank1
  2401  0491  082C               	movf	sprintf@tmpval^(0+128),w
  2402  0492  00F0               	movwf	___ftge@ff1
  2403  0493  082D               	movf	(sprintf@tmpval+1)^(0+128),w
  2404  0494  00F1               	movwf	___ftge@ff1+1
  2405  0495  082E               	movf	(sprintf@tmpval+2)^(0+128),w
  2406  0496  00F2               	movwf	___ftge@ff1+2
  2407  0497  3000               	movlw	0
  2408  0498  00F3               	movwf	___ftge@ff2
  2409  0499  3020               	movlw	32
  2410  049A  00F4               	movwf	___ftge@ff2+1
  2411  049B  3041               	movlw	65
  2412  049C  00F5               	movwf	___ftge@ff2+2
  2413  049D  3195  2580  3183   	fcall	___ftge
  2414  04A0  1C03               	btfss	3,0
  2415  04A1  2CA7               	goto	l149
  2416                           
  2417                           ;doprnt.c: 851: exp++;
  2418  04A2  3001               	movlw	1
  2419  04A3  0141               	movlb	1	; select bank1
  2420  04A4  07AA               	addwf	sprintf@exp^(0+128),f
  2421  04A5  3000               	movlw	0
  2422  04A6                     L1:	
  2423  04A6  3DAB               	addwfc	(sprintf@exp+1)^(0+128),f
  2424  04A7                     l149:	
  2425                           
  2426                           ;doprnt.c: 852: }
  2427                           ;doprnt.c: 1112: if(prec <= 12)
  2428  04A7  0141               	movlb	1	; select bank1
  2429  04A8  0831               	movf	(sprintf@prec+1)^(0+128),w
  2430  04A9  3A80               	xorlw	128
  2431  04AA  0140               	movlb	0	; select bank0
  2432  04AB  00DE               	movwf	??_sprintf
  2433  04AC  3080               	movlw	128
  2434  04AD  025E               	subwf	??_sprintf,w
  2435  04AE  1D03               	skipz
  2436  04AF  2CB3               	goto	u3555
  2437  04B0  300D               	movlw	13
  2438  04B1  0141               	movlb	1	; select bank1
  2439  04B2  0230               	subwf	sprintf@prec^(0+128),w
  2440  04B3                     u3555:	
  2441  04B3  1803               	skipnc
  2442  04B4  2CDC               	goto	l2487
  2443                           
  2444                           ;doprnt.c: 1113: fval += fround(prec);
  2445  04B5  0141               	movlb	1	; select bank1
  2446  04B6  0830               	movf	sprintf@prec^(0+128),w
  2447  04B7  318D  251D  3183   	fcall	_fround
  2448  04BA  0140               	movlb	0	; select bank0
  2449  04BB  0838               	movf	?_fround,w
  2450  04BC  00C6               	movwf	___ftadd@f1
  2451  04BD  0839               	movf	?_fround+1,w
  2452  04BE  00C7               	movwf	___ftadd@f1+1
  2453  04BF  083A               	movf	?_fround+2,w
  2454  04C0  00C8               	movwf	___ftadd@f1+2
  2455  04C1  0141               	movlb	1	; select bank1
  2456  04C2  0833               	movf	sprintf@fval^(0+128),w
  2457  04C3  0140               	movlb	0	; select bank0
  2458  04C4  00C9               	movwf	___ftadd@f2
  2459  04C5  0141               	movlb	1	; select bank1
  2460  04C6  0834               	movf	(sprintf@fval+1)^(0+128),w
  2461  04C7  0140               	movlb	0	; select bank0
  2462  04C8  00CA               	movwf	___ftadd@f2+1
  2463  04C9  0141               	movlb	1	; select bank1
  2464  04CA  0835               	movf	(sprintf@fval+2)^(0+128),w
  2465  04CB  0140               	movlb	0	; select bank0
  2466  04CC  00CB               	movwf	___ftadd@f2+2
  2467  04CD  318B  230A  3183   	fcall	___ftadd
  2468  04D0  0140               	movlb	0	; select bank0
  2469  04D1  0846               	movf	?___ftadd,w
  2470  04D2  0141               	movlb	1	; select bank1
  2471  04D3  00B3               	movwf	sprintf@fval^(0+128)
  2472  04D4  0140               	movlb	0	; select bank0
  2473  04D5  0847               	movf	?___ftadd+1,w
  2474  04D6  0141               	movlb	1	; select bank1
  2475  04D7  00B4               	movwf	(sprintf@fval+1)^(0+128)
  2476  04D8  0140               	movlb	0	; select bank0
  2477  04D9  0848               	movf	?___ftadd+2,w
  2478  04DA  0141               	movlb	1	; select bank1
  2479  04DB  00B5               	movwf	(sprintf@fval+2)^(0+128)
  2480  04DC                     l2487:	
  2481                           
  2482                           ;doprnt.c: 1116: if((exp > 9)||(fval != 0 && (unsigned long)fval == 0 && exp > 1)) {
  2483  04DC  0141               	movlb	1	; select bank1
  2484  04DD  082B               	movf	(sprintf@exp+1)^(0+128),w
  2485  04DE  3A80               	xorlw	128
  2486  04DF  0140               	movlb	0	; select bank0
  2487  04E0  00DE               	movwf	??_sprintf
  2488  04E1  3080               	movlw	128
  2489  04E2  025E               	subwf	??_sprintf,w
  2490  04E3  1D03               	skipz
  2491  04E4  2CE8               	goto	u3565
  2492  04E5  300A               	movlw	10
  2493  04E6  0141               	movlb	1	; select bank1
  2494  04E7  022A               	subwf	sprintf@exp^(0+128),w
  2495  04E8                     u3565:	
  2496  04E8  1803               	skipnc
  2497  04E9  2D13               	goto	l2495
  2498  04EA  0141               	movlb	1	; select bank1
  2499  04EB  0835               	movf	(sprintf@fval+2)^(0+128),w
  2500  04EC  0434               	iorwf	(sprintf@fval+1)^(0+128),w
  2501  04ED  0433               	iorwf	sprintf@fval^(0+128),w
  2502  04EE  1903               	skipnz
  2503  04EF  2D5B               	goto	l2509
  2504  04F0  0833               	movf	sprintf@fval^(0+128),w
  2505  04F1  0140               	movlb	0	; select bank0
  2506  04F2  00C1               	movwf	___fttol@f1
  2507  04F3  0141               	movlb	1	; select bank1
  2508  04F4  0834               	movf	(sprintf@fval+1)^(0+128),w
  2509  04F5  0140               	movlb	0	; select bank0
  2510  04F6  00C2               	movwf	___fttol@f1+1
  2511  04F7  0141               	movlb	1	; select bank1
  2512  04F8  0835               	movf	(sprintf@fval+2)^(0+128),w
  2513  04F9  0140               	movlb	0	; select bank0
  2514  04FA  00C3               	movwf	___fttol@f1+2
  2515  04FB  3196  26E6  3183   	fcall	___fttol
  2516  04FE  0140               	movlb	0	; select bank0
  2517  04FF  0844               	movf	?___fttol+3,w
  2518  0500  0443               	iorwf	?___fttol+2,w
  2519  0501  0442               	iorwf	?___fttol+1,w
  2520  0502  0441               	iorwf	?___fttol,w
  2521  0503  1D03               	skipz
  2522  0504  2D5B               	goto	l2509
  2523  0505  0141               	movlb	1	; select bank1
  2524  0506  082B               	movf	(sprintf@exp+1)^(0+128),w
  2525  0507  3A80               	xorlw	128
  2526  0508  0140               	movlb	0	; select bank0
  2527  0509  00DE               	movwf	??_sprintf
  2528  050A  3080               	movlw	128
  2529  050B  025E               	subwf	??_sprintf,w
  2530  050C  1D03               	skipz
  2531  050D  2D11               	goto	u3595
  2532  050E  3002               	movlw	2
  2533  050F  0141               	movlb	1	; select bank1
  2534  0510  022A               	subwf	sprintf@exp^(0+128),w
  2535  0511                     u3595:	
  2536  0511  1C03               	skipc
  2537  0512  2D5B               	goto	l2509
  2538  0513                     l2495:	
  2539                           
  2540                           ;doprnt.c: 1120: if(tmpval.integ < 4.294967296){
  2541  0513  0141               	movlb	1	; select bank1
  2542  0514  082C               	movf	sprintf@tmpval^(0+128),w
  2543  0515  00F0               	movwf	___ftge@ff1
  2544  0516  082D               	movf	(sprintf@tmpval+1)^(0+128),w
  2545  0517  00F1               	movwf	___ftge@ff1+1
  2546  0518  082E               	movf	(sprintf@tmpval+2)^(0+128),w
  2547  0519  00F2               	movwf	___ftge@ff1+2
  2548  051A  3070               	movlw	112
  2549  051B  00F3               	movwf	___ftge@ff2
  2550  051C  3089               	movlw	137
  2551  051D  00F4               	movwf	___ftge@ff2+1
  2552  051E  3040               	movlw	64
  2553  051F  00F5               	movwf	___ftge@ff2+2
  2554  0520  3195  2580  3183   	fcall	___ftge
  2555  0523  1803               	btfsc	3,0
  2556  0524  2D27               	goto	l2499
  2557                           
  2558                           ;doprnt.c: 1121: exp -= (sizeof dpowers/sizeof dpowers[0])-1;
  2559  0525  30F7               	movlw	247
  2560  0526  2D28               	goto	L2
  2561  0527                     l2499:	
  2562                           ;doprnt.c: 1122: }else{
  2563                           
  2564                           
  2565                           ;doprnt.c: 1123: exp -= (sizeof dpowers/sizeof dpowers[0])-2;
  2566  0527  30F8               	movlw	248
  2567  0528                     L2:	
  2568  0528  0141               	movlb	1	; select bank1
  2569  0529  07AA               	addwf	sprintf@exp^(0+128),f
  2570  052A  30FF               	movlw	255
  2571  052B  3DAB               	addwfc	(sprintf@exp+1)^(0+128),f
  2572                           
  2573                           ;doprnt.c: 1124: }
  2574                           ;doprnt.c: 1125: tmpval.integ = scale(exp);
  2575  052C  082A               	movf	sprintf@exp^(0+128),w
  2576  052D  3180  20CD  3183   	fcall	_scale
  2577  0530  0140               	movlb	0	; select bank0
  2578  0531  0838               	movf	?_scale,w
  2579  0532  0141               	movlb	1	; select bank1
  2580  0533  00AC               	movwf	sprintf@tmpval^(0+128)
  2581  0534  0140               	movlb	0	; select bank0
  2582  0535  0839               	movf	?_scale+1,w
  2583  0536  0141               	movlb	1	; select bank1
  2584  0537  00AD               	movwf	(sprintf@tmpval+1)^(0+128)
  2585  0538  0140               	movlb	0	; select bank0
  2586  0539  083A               	movf	?_scale+2,w
  2587  053A  0141               	movlb	1	; select bank1
  2588  053B  00AE               	movwf	(sprintf@tmpval+2)^(0+128)
  2589                           
  2590                           ;doprnt.c: 1126: val = ((sizeof(double)== 3) ? _tdiv_to_l_(fval,tmpval.integ) : _div_to_
      +                          l_(fval,tmpval.integ));
  2591  053C  0833               	movf	sprintf@fval^(0+128),w
  2592  053D  00F0               	movwf	__tdiv_to_l_@f1
  2593  053E  0834               	movf	(sprintf@fval+1)^(0+128),w
  2594  053F  00F1               	movwf	__tdiv_to_l_@f1+1
  2595  0540  0835               	movf	(sprintf@fval+2)^(0+128),w
  2596  0541  00F2               	movwf	__tdiv_to_l_@f1+2
  2597  0542  082C               	movf	sprintf@tmpval^(0+128),w
  2598  0543  00F3               	movwf	__tdiv_to_l_@f2
  2599  0544  082D               	movf	(sprintf@tmpval+1)^(0+128),w
  2600  0545  00F4               	movwf	__tdiv_to_l_@f2+1
  2601  0546  082E               	movf	(sprintf@tmpval+2)^(0+128),w
  2602  0547  00F5               	movwf	__tdiv_to_l_@f2+2
  2603  0548  3180  2017  3183   	fcall	__tdiv_to_l_
  2604  054B  0873               	movf	?__tdiv_to_l_+3,w
  2605  054C  0141               	movlb	1	; select bank1
  2606  054D  00A9               	movwf	(sprintf@val+3)^(0+128)
  2607  054E  0872               	movf	?__tdiv_to_l_+2,w
  2608  054F  00A8               	movwf	(sprintf@val+2)^(0+128)
  2609  0550  0871               	movf	?__tdiv_to_l_+1,w
  2610  0551  00A7               	movwf	(sprintf@val+1)^(0+128)
  2611  0552  0870               	movf	?__tdiv_to_l_,w
  2612  0553  00A6               	movwf	sprintf@val^(0+128)
  2613                           
  2614                           ;doprnt.c: 1129: fval = 0.0;
  2615  0554  3000               	movlw	0
  2616  0555  00B3               	movwf	sprintf@fval^(0+128)
  2617  0556  3000               	movlw	0
  2618  0557  00B4               	movwf	(sprintf@fval+1)^(0+128)
  2619  0558  3000               	movlw	0
  2620  0559  00B5               	movwf	(sprintf@fval+2)^(0+128)
  2621                           
  2622                           ;doprnt.c: 1130: } else {
  2623  055A  2DA9               	goto	l2513
  2624  055B                     l2509:	
  2625                           
  2626                           ;doprnt.c: 1131: val = (unsigned long)fval;
  2627  055B  0141               	movlb	1	; select bank1
  2628  055C  0833               	movf	sprintf@fval^(0+128),w
  2629  055D  0140               	movlb	0	; select bank0
  2630  055E  00C1               	movwf	___fttol@f1
  2631  055F  0141               	movlb	1	; select bank1
  2632  0560  0834               	movf	(sprintf@fval+1)^(0+128),w
  2633  0561  0140               	movlb	0	; select bank0
  2634  0562  00C2               	movwf	___fttol@f1+1
  2635  0563  0141               	movlb	1	; select bank1
  2636  0564  0835               	movf	(sprintf@fval+2)^(0+128),w
  2637  0565  0140               	movlb	0	; select bank0
  2638  0566  00C3               	movwf	___fttol@f1+2
  2639  0567  3196  26E6  3183   	fcall	___fttol
  2640  056A  0140               	movlb	0	; select bank0
  2641  056B  0844               	movf	?___fttol+3,w
  2642  056C  0141               	movlb	1	; select bank1
  2643  056D  00A9               	movwf	(sprintf@val+3)^(0+128)
  2644  056E  0140               	movlb	0	; select bank0
  2645  056F  0843               	movf	?___fttol+2,w
  2646  0570  0141               	movlb	1	; select bank1
  2647  0571  00A8               	movwf	(sprintf@val+2)^(0+128)
  2648  0572  0140               	movlb	0	; select bank0
  2649  0573  0842               	movf	?___fttol+1,w
  2650  0574  0141               	movlb	1	; select bank1
  2651  0575  00A7               	movwf	(sprintf@val+1)^(0+128)
  2652  0576  0140               	movlb	0	; select bank0
  2653  0577  0841               	movf	?___fttol,w
  2654  0578  0141               	movlb	1	; select bank1
  2655  0579  00A6               	movwf	sprintf@val^(0+128)
  2656                           
  2657                           ;doprnt.c: 1132: fval -= (double)val;
  2658  057A  0829               	movf	(sprintf@val+3)^(0+128),w
  2659  057B  00FB               	movwf	___lltoft@c+3
  2660  057C  0828               	movf	(sprintf@val+2)^(0+128),w
  2661  057D  00FA               	movwf	___lltoft@c+2
  2662  057E  0827               	movf	(sprintf@val+1)^(0+128),w
  2663  057F  00F9               	movwf	___lltoft@c+1
  2664  0580  0826               	movf	sprintf@val^(0+128),w
  2665  0581  00F8               	movwf	___lltoft@c
  2666  0582  3195  2523  3183   	fcall	___lltoft
  2667  0585  0878               	movf	?___lltoft,w
  2668  0586  0140               	movlb	0	; select bank0
  2669  0587  00D3               	movwf	___ftsub@f2
  2670  0588  0879               	movf	?___lltoft+1,w
  2671  0589  00D4               	movwf	___ftsub@f2+1
  2672  058A  087A               	movf	?___lltoft+2,w
  2673  058B  00D5               	movwf	___ftsub@f2+2
  2674  058C  0141               	movlb	1	; select bank1
  2675  058D  0833               	movf	sprintf@fval^(0+128),w
  2676  058E  0140               	movlb	0	; select bank0
  2677  058F  00D6               	movwf	___ftsub@f1
  2678  0590  0141               	movlb	1	; select bank1
  2679  0591  0834               	movf	(sprintf@fval+1)^(0+128),w
  2680  0592  0140               	movlb	0	; select bank0
  2681  0593  00D7               	movwf	___ftsub@f1+1
  2682  0594  0141               	movlb	1	; select bank1
  2683  0595  0835               	movf	(sprintf@fval+2)^(0+128),w
  2684  0596  0140               	movlb	0	; select bank0
  2685  0597  00D8               	movwf	___ftsub@f1+2
  2686  0598  3194  24E5  3183   	fcall	___ftsub
  2687  059B  0140               	movlb	0	; select bank0
  2688  059C  0853               	movf	?___ftsub,w
  2689  059D  0141               	movlb	1	; select bank1
  2690  059E  00B3               	movwf	sprintf@fval^(0+128)
  2691  059F  0140               	movlb	0	; select bank0
  2692  05A0  0854               	movf	?___ftsub+1,w
  2693  05A1  0141               	movlb	1	; select bank1
  2694  05A2  00B4               	movwf	(sprintf@fval+1)^(0+128)
  2695  05A3  0140               	movlb	0	; select bank0
  2696  05A4  0855               	movf	?___ftsub+2,w
  2697  05A5  0141               	movlb	1	; select bank1
  2698  05A6  00B5               	movwf	(sprintf@fval+2)^(0+128)
  2699                           
  2700                           ;doprnt.c: 1133: exp = 0;
  2701  05A7  01AA               	clrf	sprintf@exp^(0+128)
  2702  05A8  01AB               	clrf	(sprintf@exp+1)^(0+128)
  2703  05A9                     l2513:	
  2704                           
  2705                           ;doprnt.c: 1134: }
  2706                           ;doprnt.c: 1136: for(c = 1 ; c != (sizeof dpowers/sizeof dpowers[0]) ; c++)
  2707  05A9  01B6               	clrf	sprintf@c^(0+128)
  2708  05AA  0AB6               	incf	sprintf@c^(0+128),f
  2709  05AB  300A               	movlw	10
  2710  05AC  0636               	xorwf	sprintf@c^(0+128),w
  2711  05AD  1903               	btfsc	3,2
  2712  05AE  2DE6               	goto	l2525
  2713  05AF                     l2519:	
  2714                           
  2715                           ;doprnt.c: 1137: if(val < dpowers[c])
  2716  05AF  0836               	movf	sprintf@c^(0+128),w
  2717  05B0  0140               	movlb	0	; select bank0
  2718  05B1  00DE               	movwf	??_sprintf
  2719  05B2  01DF               	clrf	??_sprintf+1
  2720  05B3  35DE               	lslf	??_sprintf,f
  2721  05B4  0DDF               	rlf	??_sprintf+1,f
  2722  05B5  35DE               	lslf	??_sprintf,f
  2723  05B6  0DDF               	rlf	??_sprintf+1,f
  2724  05B7  302F               	movlw	low (_dpowers| (0+32768))
  2725  05B8  075E               	addwf	??_sprintf,w
  2726  05B9  0084               	movwf	4
  2727  05BA  3098               	movlw	high (_dpowers| (0+32768))
  2728  05BB  3D5F               	addwfc	??_sprintf+1,w
  2729  05BC  0085               	movwf	5
  2730  05BD  3F00               	moviw [0]fsr0
  2731  05BE  00E0               	movwf	??_sprintf+2
  2732  05BF  3F01               	moviw [1]fsr0
  2733  05C0  00E1               	movwf	??_sprintf+3
  2734  05C1  3F02               	moviw [2]fsr0
  2735  05C2  00E2               	movwf	??_sprintf+4
  2736  05C3  3F03               	moviw [3]fsr0
  2737  05C4  00E3               	movwf	??_sprintf+5
  2738  05C5  0863               	movf	??_sprintf+5,w
  2739  05C6  0141               	movlb	1	; select bank1
  2740  05C7  0229               	subwf	(sprintf@val+3)^(0+128),w
  2741  05C8  1D03               	skipz
  2742  05C9  2DDA               	goto	u3625
  2743  05CA  0140               	movlb	0	; select bank0
  2744  05CB  0862               	movf	??_sprintf+4,w
  2745  05CC  0141               	movlb	1	; select bank1
  2746  05CD  0228               	subwf	(sprintf@val+2)^(0+128),w
  2747  05CE  1D03               	skipz
  2748  05CF  2DDA               	goto	u3625
  2749  05D0  0140               	movlb	0	; select bank0
  2750  05D1  0861               	movf	??_sprintf+3,w
  2751  05D2  0141               	movlb	1	; select bank1
  2752  05D3  0227               	subwf	(sprintf@val+1)^(0+128),w
  2753  05D4  1D03               	skipz
  2754  05D5  2DDA               	goto	u3625
  2755  05D6  0140               	movlb	0	; select bank0
  2756  05D7  0860               	movf	??_sprintf+2,w
  2757  05D8  0141               	movlb	1	; select bank1
  2758  05D9  0226               	subwf	sprintf@val^(0+128),w
  2759  05DA                     u3625:	
  2760  05DA  1C03               	btfss	3,0
  2761  05DB  2DE6               	goto	l2525
  2762                           
  2763                           ;doprnt.c: 1138: break;
  2764  05DC  3001               	movlw	1
  2765  05DD  0140               	movlb	0	; select bank0
  2766  05DE  00DE               	movwf	??_sprintf
  2767  05DF  085E               	movf	??_sprintf,w
  2768  05E0  0141               	movlb	1	; select bank1
  2769  05E1  07B6               	addwf	sprintf@c^(0+128),f
  2770  05E2  300A               	movlw	10
  2771  05E3  0636               	xorwf	sprintf@c^(0+128),w
  2772  05E4  1D03               	btfss	3,2
  2773  05E5  2DAF               	goto	l2519
  2774  05E6                     l2525:	
  2775                           
  2776                           ;doprnt.c: 1175: {
  2777                           ;doprnt.c: 1188: if(flag & 0x03)
  2778  05E6  3003               	movlw	3
  2779  05E7  0524               	andwf	sprintf@flag^(0+128),w
  2780  05E8  0140               	movlb	0	; select bank0
  2781  05E9  00DE               	movwf	??_sprintf
  2782  05EA  3000               	movlw	0
  2783  05EB  0141               	movlb	1	; select bank1
  2784  05EC  0525               	andwf	(sprintf@flag+1)^(0+128),w
  2785  05ED  0140               	movlb	0	; select bank0
  2786  05EE  00DF               	movwf	??_sprintf+1
  2787  05EF  085E               	movf	??_sprintf,w
  2788  05F0  045F               	iorwf	??_sprintf+1,w
  2789  05F1  1903               	btfsc	3,2
  2790  05F2  2E01               	goto	l2539
  2791                           
  2792                           ;doprnt.c: 1190: ((*sp++ = ('-')));
  2793  05F3  302D               	movlw	45
  2794  05F4                     L6:	
  2795  05F4  00DE               	movwf	??_sprintf
  2796  05F5  0141               	movlb	1	; select bank1
  2797  05F6  0832               	movf	sprintf@sp^(0+128),w
  2798  05F7  0086               	movwf	6
  2799  05F8  0187               	clrf	7
  2800  05F9  0140               	movlb	0	; select bank0
  2801  05FA  085E               	movf	??_sprintf,w
  2802  05FB  0081               	movwf	1
  2803  05FC  3001               	movlw	1
  2804  05FD  00DE               	movwf	??_sprintf
  2805  05FE  085E               	movf	??_sprintf,w
  2806  05FF  0141               	movlb	1	; select bank1
  2807  0600  07B2               	addwf	sprintf@sp^(0+128),f
  2808  0601                     l2539:	
  2809  0601  30FF               	movlw	255
  2810  0602  0140               	movlb	0	; select bank0
  2811  0603  00DE               	movwf	??_sprintf
  2812  0604  085E               	movf	??_sprintf,w
  2813  0605  0141               	movlb	1	; select bank1
  2814  0606  07B6               	addwf	sprintf@c^(0+128),f
  2815  0607  0A36               	incf	sprintf@c^(0+128),w
  2816  0608  1903               	btfsc	3,2
  2817  0609  2E68               	goto	l2547
  2818                           
  2819                           ;doprnt.c: 1200: {
  2820                           ;doprnt.c: 1201: tmpval.vd = val/dpowers[c];
  2821                           
  2822                           ;doprnt.c: 1195: }
  2823                           ;doprnt.c: 1196: while(c--) {
  2824  060A  0836               	movf	sprintf@c^(0+128),w
  2825  060B  0140               	movlb	0	; select bank0
  2826  060C  00DE               	movwf	??_sprintf
  2827  060D  01DF               	clrf	??_sprintf+1
  2828  060E  35DE               	lslf	??_sprintf,f
  2829  060F  0DDF               	rlf	??_sprintf+1,f
  2830  0610  35DE               	lslf	??_sprintf,f
  2831  0611  0DDF               	rlf	??_sprintf+1,f
  2832  0612  302F               	movlw	low (_dpowers| (0+32768))
  2833  0613  075E               	addwf	??_sprintf,w
  2834  0614  0084               	movwf	4
  2835  0615  3098               	movlw	high (_dpowers| (0+32768))
  2836  0616  3D5F               	addwfc	??_sprintf+1,w
  2837  0617  0085               	movwf	5
  2838  0618  3F00               	moviw [0]fsr0
  2839  0619  00F0               	movwf	___lldiv@divisor
  2840  061A  3F01               	moviw [1]fsr0
  2841  061B  00F1               	movwf	___lldiv@divisor+1
  2842  061C  3F02               	moviw [2]fsr0
  2843  061D  00F2               	movwf	___lldiv@divisor+2
  2844  061E  3F03               	moviw [3]fsr0
  2845  061F  00F3               	movwf	___lldiv@divisor+3
  2846  0620  0141               	movlb	1	; select bank1
  2847  0621  0829               	movf	(sprintf@val+3)^(0+128),w
  2848  0622  00F7               	movwf	___lldiv@dividend+3
  2849  0623  0828               	movf	(sprintf@val+2)^(0+128),w
  2850  0624  00F6               	movwf	___lldiv@dividend+2
  2851  0625  0827               	movf	(sprintf@val+1)^(0+128),w
  2852  0626  00F5               	movwf	___lldiv@dividend+1
  2853  0627  0826               	movf	sprintf@val^(0+128),w
  2854  0628  00F4               	movwf	___lldiv@dividend
  2855  0629  3196  2642  3183   	fcall	___lldiv
  2856  062C  0873               	movf	?___lldiv+3,w
  2857  062D  0141               	movlb	1	; select bank1
  2858  062E  00AF               	movwf	(sprintf@tmpval+3)^(0+128)
  2859  062F  0872               	movf	?___lldiv+2,w
  2860  0630  00AE               	movwf	(sprintf@tmpval+2)^(0+128)
  2861  0631  0871               	movf	?___lldiv+1,w
  2862  0632  00AD               	movwf	(sprintf@tmpval+1)^(0+128)
  2863  0633  0870               	movf	?___lldiv,w
  2864  0634  00AC               	movwf	sprintf@tmpval^(0+128)
  2865                           
  2866                           ;doprnt.c: 1202: tmpval.vd %= 10;
  2867  0635  3000               	movlw	0
  2868  0636  00F3               	movwf	___llmod@divisor+3
  2869  0637  3000               	movlw	0
  2870  0638  00F2               	movwf	___llmod@divisor+2
  2871  0639  3000               	movlw	0
  2872  063A  00F1               	movwf	___llmod@divisor+1
  2873  063B  300A               	movlw	10
  2874  063C  00F0               	movwf	___llmod@divisor
  2875  063D  082F               	movf	(sprintf@tmpval+3)^(0+128),w
  2876  063E  00F7               	movwf	___llmod@dividend+3
  2877  063F  082E               	movf	(sprintf@tmpval+2)^(0+128),w
  2878  0640  00F6               	movwf	___llmod@dividend+2
  2879  0641  082D               	movf	(sprintf@tmpval+1)^(0+128),w
  2880  0642  00F5               	movwf	___llmod@dividend+1
  2881  0643  082C               	movf	sprintf@tmpval^(0+128),w
  2882  0644  00F4               	movwf	___llmod@dividend
  2883  0645  3195  25BB  3183   	fcall	___llmod
  2884  0648  0873               	movf	?___llmod+3,w
  2885  0649  0141               	movlb	1	; select bank1
  2886  064A  00AF               	movwf	(sprintf@tmpval+3)^(0+128)
  2887  064B  0872               	movf	?___llmod+2,w
  2888  064C  00AE               	movwf	(sprintf@tmpval+2)^(0+128)
  2889  064D  0871               	movf	?___llmod+1,w
  2890  064E  00AD               	movwf	(sprintf@tmpval+1)^(0+128)
  2891  064F  0870               	movf	?___llmod,w
  2892  0650  00AC               	movwf	sprintf@tmpval^(0+128)
  2893                           
  2894                           ;doprnt.c: 1203: ((*sp++ = ('0' + tmpval.vd)));
  2895  0651  082C               	movf	sprintf@tmpval^(0+128),w
  2896  0652  3E30               	addlw	48
  2897  0653  0140               	movlb	0	; select bank0
  2898  0654  2DF4               	goto	L6
  2899  0655                     l2541:	
  2900                           ;doprnt.c: 1204: }
  2901                           ;doprnt.c: 1206: }
  2902                           ;doprnt.c: 1207: while(exp > 0) {
  2903                           
  2904                           
  2905                           ;doprnt.c: 1208: ((*sp++ = ('0')));
  2906  0655  3030               	movlw	48
  2907  0656  0140               	movlb	0	; select bank0
  2908  0657  00DE               	movwf	??_sprintf
  2909  0658  0141               	movlb	1	; select bank1
  2910  0659  0832               	movf	sprintf@sp^(0+128),w
  2911  065A  0086               	movwf	6
  2912  065B  0187               	clrf	7
  2913  065C  0140               	movlb	0	; select bank0
  2914  065D  085E               	movf	??_sprintf,w
  2915  065E  0081               	movwf	1
  2916  065F  3001               	movlw	1
  2917  0660  00DE               	movwf	??_sprintf
  2918  0661  085E               	movf	??_sprintf,w
  2919  0662  0141               	movlb	1	; select bank1
  2920  0663  07B2               	addwf	sprintf@sp^(0+128),f
  2921                           
  2922                           ;doprnt.c: 1209: exp--;
  2923  0664  30FF               	movlw	255
  2924  0665  07AA               	addwf	sprintf@exp^(0+128),f
  2925  0666  30FF               	movlw	255
  2926  0667  3DAB               	addwfc	(sprintf@exp+1)^(0+128),f
  2927  0668                     l2547:	
  2928  0668  082B               	movf	(sprintf@exp+1)^(0+128),w
  2929  0669  3A80               	xorlw	128
  2930  066A  0140               	movlb	0	; select bank0
  2931  066B  00DE               	movwf	??_sprintf
  2932  066C  3080               	movlw	128
  2933  066D  025E               	subwf	??_sprintf,w
  2934  066E  1D03               	skipz
  2935  066F  2E73               	goto	u3665
  2936  0670  3001               	movlw	1
  2937  0671  0141               	movlb	1	; select bank1
  2938  0672  022A               	subwf	sprintf@exp^(0+128),w
  2939  0673                     u3665:	
  2940  0673  1803               	skipnc
  2941  0674  2E55               	goto	l2541
  2942                           
  2943                           ;doprnt.c: 1210: }
  2944                           ;doprnt.c: 1211: if(prec > (int)((sizeof dpowers/sizeof dpowers[0])-2))
  2945  0675  0141               	movlb	1	; select bank1
  2946  0676  0831               	movf	(sprintf@prec+1)^(0+128),w
  2947  0677  3A80               	xorlw	128
  2948  0678  0140               	movlb	0	; select bank0
  2949  0679  00DE               	movwf	??_sprintf
  2950  067A  3080               	movlw	128
  2951  067B  025E               	subwf	??_sprintf,w
  2952  067C  1D03               	skipz
  2953  067D  2E81               	goto	u3675
  2954  067E  3009               	movlw	9
  2955  067F  0141               	movlb	1	; select bank1
  2956  0680  0230               	subwf	sprintf@prec^(0+128),w
  2957  0681                     u3675:	
  2958  0681  1C03               	skipc
  2959  0682  2E85               	goto	l2553
  2960                           
  2961                           ;doprnt.c: 1212: c = (sizeof dpowers/sizeof dpowers[0])-2;
  2962  0683  3008               	movlw	8
  2963  0684  2E87               	goto	L3
  2964  0685                     l2553:	
  2965                           
  2966                           ;doprnt.c: 1213: else
  2967                           ;doprnt.c: 1214: c = prec;
  2968  0685  0141               	movlb	1	; select bank1
  2969  0686  0830               	movf	sprintf@prec^(0+128),w
  2970  0687                     L3:	
  2971  0687  0140               	movlb	0	; select bank0
  2972  0688  00DE               	movwf	??_sprintf
  2973  0689  085E               	movf	??_sprintf,w
  2974  068A  0141               	movlb	1	; select bank1
  2975  068B  00B6               	movwf	sprintf@c^(0+128)
  2976                           
  2977                           ;doprnt.c: 1215: prec -= c;
  2978  068C  0836               	movf	sprintf@c^(0+128),w
  2979  068D  0140               	movlb	0	; select bank0
  2980  068E  00DE               	movwf	??_sprintf
  2981  068F  01DF               	clrf	??_sprintf+1
  2982  0690  1BDE               	btfsc	??_sprintf,7
  2983  0691  03DF               	decf	??_sprintf+1,f
  2984  0692  085E               	movf	??_sprintf,w
  2985  0693  0141               	movlb	1	; select bank1
  2986  0694  02B0               	subwf	sprintf@prec^(0+128),f
  2987  0695  0140               	movlb	0	; select bank0
  2988  0696  085F               	movf	??_sprintf+1,w
  2989  0697  0141               	movlb	1	; select bank1
  2990  0698  3BB1               	subwfb	(sprintf@prec+1)^(0+128),f
  2991                           
  2992                           ;doprnt.c: 1219: if(c)
  2993  0699  0836               	movf	sprintf@c^(0+128),w
  2994  069A  1903               	btfsc	3,2
  2995  069B  2EAB               	goto	l2561
  2996                           
  2997                           ;doprnt.c: 1221: ((*sp++ = ('.')));
  2998  069C  302E               	movlw	46
  2999  069D  0140               	movlb	0	; select bank0
  3000  069E  00DE               	movwf	??_sprintf
  3001  069F  0141               	movlb	1	; select bank1
  3002  06A0  0832               	movf	sprintf@sp^(0+128),w
  3003  06A1  0086               	movwf	6
  3004  06A2  0187               	clrf	7
  3005  06A3  0140               	movlb	0	; select bank0
  3006  06A4  085E               	movf	??_sprintf,w
  3007  06A5  0081               	movwf	1
  3008  06A6  3001               	movlw	1
  3009  06A7  00DE               	movwf	??_sprintf
  3010  06A8  085E               	movf	??_sprintf,w
  3011  06A9  0141               	movlb	1	; select bank1
  3012  06AA  07B2               	addwf	sprintf@sp^(0+128),f
  3013  06AB                     l2561:	
  3014                           
  3015                           ;doprnt.c: 1227: val = (long)(fval * scale(c));
  3016  06AB  0836               	movf	sprintf@c^(0+128),w
  3017  06AC  3180  20CD  3183   	fcall	_scale
  3018  06AF  0140               	movlb	0	; select bank0
  3019  06B0  0838               	movf	?_scale,w
  3020  06B1  0141               	movlb	1	; select bank1
  3021  06B2  00A0               	movwf	_sprintf$950^(0+128)
  3022  06B3  0140               	movlb	0	; select bank0
  3023  06B4  0839               	movf	?_scale+1,w
  3024  06B5  0141               	movlb	1	; select bank1
  3025  06B6  00A1               	movwf	(_sprintf$950+1)^(0+128)
  3026  06B7  0140               	movlb	0	; select bank0
  3027  06B8  083A               	movf	?_scale+2,w
  3028  06B9  0141               	movlb	1	; select bank1
  3029  06BA  00A2               	movwf	(_sprintf$950+2)^(0+128)
  3030                           
  3031                           ;doprnt.c: 1227: val = (long)(fval * scale(c));
  3032  06BB  0820               	movf	_sprintf$950^(0+128),w
  3033  06BC  0140               	movlb	0	; select bank0
  3034  06BD  00AB               	movwf	___ftmul@f2
  3035  06BE  0141               	movlb	1	; select bank1
  3036  06BF  0821               	movf	(_sprintf$950+1)^(0+128),w
  3037  06C0  0140               	movlb	0	; select bank0
  3038  06C1  00AC               	movwf	___ftmul@f2+1
  3039  06C2  0141               	movlb	1	; select bank1
  3040  06C3  0822               	movf	(_sprintf$950+2)^(0+128),w
  3041  06C4  0140               	movlb	0	; select bank0
  3042  06C5  00AD               	movwf	___ftmul@f2+2
  3043  06C6  0141               	movlb	1	; select bank1
  3044  06C7  0833               	movf	sprintf@fval^(0+128),w
  3045  06C8  0140               	movlb	0	; select bank0
  3046  06C9  00A8               	movwf	___ftmul@f1
  3047  06CA  0141               	movlb	1	; select bank1
  3048  06CB  0834               	movf	(sprintf@fval+1)^(0+128),w
  3049  06CC  0140               	movlb	0	; select bank0
  3050  06CD  00A9               	movwf	___ftmul@f1+1
  3051  06CE  0141               	movlb	1	; select bank1
  3052  06CF  0835               	movf	(sprintf@fval+2)^(0+128),w
  3053  06D0  0140               	movlb	0	; select bank0
  3054  06D1  00AA               	movwf	___ftmul@f1+2
  3055  06D2  318A  2256  3183   	fcall	___ftmul
  3056  06D5  0140               	movlb	0	; select bank0
  3057  06D6  0828               	movf	?___ftmul,w
  3058  06D7  00C1               	movwf	___fttol@f1
  3059  06D8  0829               	movf	?___ftmul+1,w
  3060  06D9  00C2               	movwf	___fttol@f1+1
  3061  06DA  082A               	movf	?___ftmul+2,w
  3062  06DB  00C3               	movwf	___fttol@f1+2
  3063  06DC  3196  26E6  3183   	fcall	___fttol
  3064  06DF  0140               	movlb	0	; select bank0
  3065  06E0  0844               	movf	?___fttol+3,w
  3066  06E1  0141               	movlb	1	; select bank1
  3067  06E2  00A9               	movwf	(sprintf@val+3)^(0+128)
  3068  06E3  0140               	movlb	0	; select bank0
  3069  06E4  0843               	movf	?___fttol+2,w
  3070  06E5  0141               	movlb	1	; select bank1
  3071  06E6  00A8               	movwf	(sprintf@val+2)^(0+128)
  3072  06E7  0140               	movlb	0	; select bank0
  3073  06E8  0842               	movf	?___fttol+1,w
  3074  06E9  0141               	movlb	1	; select bank1
  3075  06EA  00A7               	movwf	(sprintf@val+1)^(0+128)
  3076  06EB  0140               	movlb	0	; select bank0
  3077  06EC  0841               	movf	?___fttol,w
  3078  06ED  0141               	movlb	1	; select bank1
  3079  06EE                     L4:	
  3080  06EE  00A6               	movwf	sprintf@val^(0+128)
  3081  06EF  30FF               	movlw	255
  3082  06F0  0140               	movlb	0	; select bank0
  3083  06F1  00DE               	movwf	??_sprintf
  3084  06F2  085E               	movf	??_sprintf,w
  3085  06F3  0141               	movlb	1	; select bank1
  3086  06F4  07B6               	addwf	sprintf@c^(0+128),f
  3087  06F5  0A36               	incf	sprintf@c^(0+128),w
  3088  06F6  1903               	btfsc	3,2
  3089  06F7  2F8D               	goto	l2583
  3090                           
  3091                           ;doprnt.c: 1229: tmpval.vd = val/dpowers[c];
  3092                           
  3093                           ;doprnt.c: 1228: while(c--) {
  3094  06F8  0836               	movf	sprintf@c^(0+128),w
  3095  06F9  0140               	movlb	0	; select bank0
  3096  06FA  00DE               	movwf	??_sprintf
  3097  06FB  01DF               	clrf	??_sprintf+1
  3098  06FC  35DE               	lslf	??_sprintf,f
  3099  06FD  0DDF               	rlf	??_sprintf+1,f
  3100  06FE  35DE               	lslf	??_sprintf,f
  3101  06FF  0DDF               	rlf	??_sprintf+1,f
  3102  0700  302F               	movlw	low (_dpowers| (0+32768))
  3103  0701  075E               	addwf	??_sprintf,w
  3104  0702  0084               	movwf	4
  3105  0703  3098               	movlw	high (_dpowers| (0+32768))
  3106  0704  3D5F               	addwfc	??_sprintf+1,w
  3107  0705  0085               	movwf	5
  3108  0706  3F00               	moviw [0]fsr0
  3109  0707  00F0               	movwf	___lldiv@divisor
  3110  0708  3F01               	moviw [1]fsr0
  3111  0709  00F1               	movwf	___lldiv@divisor+1
  3112  070A  3F02               	moviw [2]fsr0
  3113  070B  00F2               	movwf	___lldiv@divisor+2
  3114  070C  3F03               	moviw [3]fsr0
  3115  070D  00F3               	movwf	___lldiv@divisor+3
  3116  070E  0141               	movlb	1	; select bank1
  3117  070F  0829               	movf	(sprintf@val+3)^(0+128),w
  3118  0710  00F7               	movwf	___lldiv@dividend+3
  3119  0711  0828               	movf	(sprintf@val+2)^(0+128),w
  3120  0712  00F6               	movwf	___lldiv@dividend+2
  3121  0713  0827               	movf	(sprintf@val+1)^(0+128),w
  3122  0714  00F5               	movwf	___lldiv@dividend+1
  3123  0715  0826               	movf	sprintf@val^(0+128),w
  3124  0716  00F4               	movwf	___lldiv@dividend
  3125  0717  3196  2642  3183   	fcall	___lldiv
  3126  071A  0873               	movf	?___lldiv+3,w
  3127  071B  0141               	movlb	1	; select bank1
  3128  071C  00AF               	movwf	(sprintf@tmpval+3)^(0+128)
  3129  071D  0872               	movf	?___lldiv+2,w
  3130  071E  00AE               	movwf	(sprintf@tmpval+2)^(0+128)
  3131  071F  0871               	movf	?___lldiv+1,w
  3132  0720  00AD               	movwf	(sprintf@tmpval+1)^(0+128)
  3133  0721  0870               	movf	?___lldiv,w
  3134  0722  00AC               	movwf	sprintf@tmpval^(0+128)
  3135                           
  3136                           ;doprnt.c: 1230: tmpval.vd %= 10;
  3137  0723  3000               	movlw	0
  3138  0724  00F3               	movwf	___llmod@divisor+3
  3139  0725  3000               	movlw	0
  3140  0726  00F2               	movwf	___llmod@divisor+2
  3141  0727  3000               	movlw	0
  3142  0728  00F1               	movwf	___llmod@divisor+1
  3143  0729  300A               	movlw	10
  3144  072A  00F0               	movwf	___llmod@divisor
  3145  072B  082F               	movf	(sprintf@tmpval+3)^(0+128),w
  3146  072C  00F7               	movwf	___llmod@dividend+3
  3147  072D  082E               	movf	(sprintf@tmpval+2)^(0+128),w
  3148  072E  00F6               	movwf	___llmod@dividend+2
  3149  072F  082D               	movf	(sprintf@tmpval+1)^(0+128),w
  3150  0730  00F5               	movwf	___llmod@dividend+1
  3151  0731  082C               	movf	sprintf@tmpval^(0+128),w
  3152  0732  00F4               	movwf	___llmod@dividend
  3153  0733  3195  25BB  3183   	fcall	___llmod
  3154  0736  0873               	movf	?___llmod+3,w
  3155  0737  0141               	movlb	1	; select bank1
  3156  0738  00AF               	movwf	(sprintf@tmpval+3)^(0+128)
  3157  0739  0872               	movf	?___llmod+2,w
  3158  073A  00AE               	movwf	(sprintf@tmpval+2)^(0+128)
  3159  073B  0871               	movf	?___llmod+1,w
  3160  073C  00AD               	movwf	(sprintf@tmpval+1)^(0+128)
  3161  073D  0870               	movf	?___llmod,w
  3162  073E  00AC               	movwf	sprintf@tmpval^(0+128)
  3163                           
  3164                           ;doprnt.c: 1231: ((*sp++ = ('0' + tmpval.vd)));
  3165  073F  082C               	movf	sprintf@tmpval^(0+128),w
  3166  0740  3E30               	addlw	48
  3167  0741  0140               	movlb	0	; select bank0
  3168  0742  00DE               	movwf	??_sprintf
  3169  0743  0141               	movlb	1	; select bank1
  3170  0744  0832               	movf	sprintf@sp^(0+128),w
  3171  0745  0086               	movwf	6
  3172  0746  0187               	clrf	7
  3173  0747  0140               	movlb	0	; select bank0
  3174  0748  085E               	movf	??_sprintf,w
  3175  0749  0081               	movwf	1
  3176  074A  3001               	movlw	1
  3177  074B  00DE               	movwf	??_sprintf
  3178  074C  085E               	movf	??_sprintf,w
  3179  074D  0141               	movlb	1	; select bank1
  3180  074E  07B2               	addwf	sprintf@sp^(0+128),f
  3181                           
  3182                           ;doprnt.c: 1232: val %= dpowers[c];
  3183  074F  0836               	movf	sprintf@c^(0+128),w
  3184  0750  0140               	movlb	0	; select bank0
  3185  0751  00DE               	movwf	??_sprintf
  3186  0752  01DF               	clrf	??_sprintf+1
  3187  0753  35DE               	lslf	??_sprintf,f
  3188  0754  0DDF               	rlf	??_sprintf+1,f
  3189  0755  35DE               	lslf	??_sprintf,f
  3190  0756  0DDF               	rlf	??_sprintf+1,f
  3191  0757  302F               	movlw	low (_dpowers| (0+32768))
  3192  0758  075E               	addwf	??_sprintf,w
  3193  0759  0084               	movwf	4
  3194  075A  3098               	movlw	high (_dpowers| (0+32768))
  3195  075B  3D5F               	addwfc	??_sprintf+1,w
  3196  075C  0085               	movwf	5
  3197  075D  3F00               	moviw [0]fsr0
  3198  075E  00F0               	movwf	___llmod@divisor
  3199  075F  3F01               	moviw [1]fsr0
  3200  0760  00F1               	movwf	___llmod@divisor+1
  3201  0761  3F02               	moviw [2]fsr0
  3202  0762  00F2               	movwf	___llmod@divisor+2
  3203  0763  3F03               	moviw [3]fsr0
  3204  0764  00F3               	movwf	___llmod@divisor+3
  3205  0765  0141               	movlb	1	; select bank1
  3206  0766  0829               	movf	(sprintf@val+3)^(0+128),w
  3207  0767  00F7               	movwf	___llmod@dividend+3
  3208  0768  0828               	movf	(sprintf@val+2)^(0+128),w
  3209  0769  00F6               	movwf	___llmod@dividend+2
  3210  076A  0827               	movf	(sprintf@val+1)^(0+128),w
  3211  076B  00F5               	movwf	___llmod@dividend+1
  3212  076C  0826               	movf	sprintf@val^(0+128),w
  3213  076D  00F4               	movwf	___llmod@dividend
  3214  076E  3195  25BB  3183   	fcall	___llmod
  3215  0771  0873               	movf	?___llmod+3,w
  3216  0772  0141               	movlb	1	; select bank1
  3217  0773  00A9               	movwf	(sprintf@val+3)^(0+128)
  3218  0774  0872               	movf	?___llmod+2,w
  3219  0775  00A8               	movwf	(sprintf@val+2)^(0+128)
  3220  0776  0871               	movf	?___llmod+1,w
  3221  0777  00A7               	movwf	(sprintf@val+1)^(0+128)
  3222  0778  0870               	movf	?___llmod,w
  3223  0779  2EEE               	goto	L4
  3224  077A                     l2577:	
  3225                           ;doprnt.c: 1233: }
  3226                           ;doprnt.c: 1235: while(prec) {
  3227                           
  3228                           
  3229                           ;doprnt.c: 1236: ((*sp++ = ('0')));
  3230  077A  3030               	movlw	48
  3231  077B  0140               	movlb	0	; select bank0
  3232  077C  00DE               	movwf	??_sprintf
  3233  077D  0141               	movlb	1	; select bank1
  3234  077E  0832               	movf	sprintf@sp^(0+128),w
  3235  077F  0086               	movwf	6
  3236  0780  0187               	clrf	7
  3237  0781  0140               	movlb	0	; select bank0
  3238  0782  085E               	movf	??_sprintf,w
  3239  0783  0081               	movwf	1
  3240  0784  3001               	movlw	1
  3241  0785  00DE               	movwf	??_sprintf
  3242  0786  085E               	movf	??_sprintf,w
  3243  0787  0141               	movlb	1	; select bank1
  3244  0788  07B2               	addwf	sprintf@sp^(0+128),f
  3245                           
  3246                           ;doprnt.c: 1237: prec--;
  3247  0789  30FF               	movlw	255
  3248  078A  07B0               	addwf	sprintf@prec^(0+128),f
  3249  078B  30FF               	movlw	255
  3250  078C  3DB1               	addwfc	(sprintf@prec+1)^(0+128),f
  3251  078D                     l2583:	
  3252  078D  0830               	movf	sprintf@prec^(0+128),w
  3253  078E  0431               	iorwf	(sprintf@prec+1)^(0+128),w
  3254  078F  1903               	btfsc	3,2
  3255  0790  2B19               	goto	l2601
  3256  0791  2F7A               	goto	l2577
  3257  0792                     l2585:	
  3258                           ;doprnt.c: 1238: }
  3259                           ;doprnt.c: 1245: continue;
  3260                           
  3261                           
  3262                           ;doprnt.c: 1246: }
  3263                           ;doprnt.c: 1290: if(prec == 0 && val == 0)
  3264  0792  0141               	movlb	1	; select bank1
  3265  0793  0830               	movf	sprintf@prec^(0+128),w
  3266  0794  0431               	iorwf	(sprintf@prec+1)^(0+128),w
  3267  0795  1D03               	btfss	3,2
  3268  0796  2FA1               	goto	l184
  3269  0797  0829               	movf	(sprintf@val+3)^(0+128),w
  3270  0798  0428               	iorwf	(sprintf@val+2)^(0+128),w
  3271  0799  0427               	iorwf	(sprintf@val+1)^(0+128),w
  3272  079A  0426               	iorwf	sprintf@val^(0+128),w
  3273  079B  1D03               	skipz
  3274  079C  2FA1               	goto	l184
  3275                           
  3276                           ;doprnt.c: 1291: prec++;
  3277  079D  3001               	movlw	1
  3278  079E  07B0               	addwf	sprintf@prec^(0+128),f
  3279  079F  3000               	movlw	0
  3280  07A0  3DB1               	addwfc	(sprintf@prec+1)^(0+128),f
  3281  07A1                     l184:	
  3282                           
  3283                           ;doprnt.c: 1339: if(c < prec)
  3284  07A1  0836               	movf	sprintf@c^(0+128),w
  3285  07A2  0140               	movlb	0	; select bank0
  3286  07A3  00DE               	movwf	??_sprintf
  3287  07A4  01DF               	clrf	??_sprintf+1
  3288  07A5  1BDE               	btfsc	??_sprintf,7
  3289  07A6  03DF               	decf	??_sprintf+1,f
  3290  07A7  085F               	movf	??_sprintf+1,w
  3291  07A8  3A80               	xorlw	128
  3292  07A9  00E0               	movwf	??_sprintf+2
  3293  07AA  0141               	movlb	1	; select bank1
  3294  07AB  0831               	movf	(sprintf@prec+1)^(0+128),w
  3295  07AC  3A80               	xorlw	128
  3296  07AD  0140               	movlb	0	; select bank0
  3297  07AE  0260               	subwf	??_sprintf+2,w
  3298  07AF  1D03               	skipz
  3299  07B0  2FB5               	goto	u3735
  3300  07B1  0141               	movlb	1	; select bank1
  3301  07B2  0830               	movf	sprintf@prec^(0+128),w
  3302  07B3  0140               	movlb	0	; select bank0
  3303  07B4  025E               	subwf	??_sprintf,w
  3304  07B5                     u3735:	
  3305  07B5  1803               	skipnc
  3306  07B6  2FBF               	goto	l2593
  3307                           
  3308                           ;doprnt.c: 1340: c = prec;
  3309  07B7  0141               	movlb	1	; select bank1
  3310  07B8  0830               	movf	sprintf@prec^(0+128),w
  3311  07B9  0140               	movlb	0	; select bank0
  3312  07BA  00DE               	movwf	??_sprintf
  3313  07BB  085E               	movf	??_sprintf,w
  3314  07BC  0141               	movlb	1	; select bank1
  3315  07BD  00B6               	movwf	sprintf@c^(0+128)
  3316  07BE  2FDB               	goto	l186
  3317  07BF                     l2593:	
  3318                           
  3319                           ;doprnt.c: 1341: else if(prec < c)
  3320  07BF  0141               	movlb	1	; select bank1
  3321  07C0  0836               	movf	sprintf@c^(0+128),w
  3322  07C1  0140               	movlb	0	; select bank0
  3323  07C2  00DE               	movwf	??_sprintf
  3324  07C3  01DF               	clrf	??_sprintf+1
  3325  07C4  1BDE               	btfsc	??_sprintf,7
  3326  07C5  03DF               	decf	??_sprintf+1,f
  3327  07C6  0141               	movlb	1	; select bank1
  3328  07C7  0831               	movf	(sprintf@prec+1)^(0+128),w
  3329  07C8  3A80               	xorlw	128
  3330  07C9  0140               	movlb	0	; select bank0
  3331  07CA  00E0               	movwf	??_sprintf+2
  3332  07CB  085F               	movf	??_sprintf+1,w
  3333  07CC  3A80               	xorlw	128
  3334  07CD  0260               	subwf	??_sprintf+2,w
  3335  07CE  1D03               	skipz
  3336  07CF  2FD3               	goto	u3745
  3337  07D0  085E               	movf	??_sprintf,w
  3338  07D1  0141               	movlb	1	; select bank1
  3339  07D2  0230               	subwf	sprintf@prec^(0+128),w
  3340  07D3                     u3745:	
  3341  07D3  1803               	skipnc
  3342  07D4  2FDB               	goto	l186
  3343                           
  3344                           ;doprnt.c: 1342: prec = c;
  3345  07D5  0141               	movlb	1	; select bank1
  3346  07D6  0836               	movf	sprintf@c^(0+128),w
  3347  07D7  00B0               	movwf	sprintf@prec^(0+128)
  3348  07D8  01B1               	clrf	(sprintf@prec+1)^(0+128)
  3349  07D9  1BB0               	btfsc	sprintf@prec^(0+128),7
  3350  07DA  03B1               	decf	(sprintf@prec+1)^(0+128),f
  3351  07DB                     l186:	
  3352                           
  3353                           ;doprnt.c: 1422: {
  3354                           ;doprnt.c: 1438: if(flag & 0x03)
  3355  07DB  3003               	movlw	3
  3356  07DC  0141               	movlb	1	; select bank1
  3357  07DD  0524               	andwf	sprintf@flag^(0+128),w
  3358  07DE  0140               	movlb	0	; select bank0
  3359  07DF  00DE               	movwf	??_sprintf
  3360  07E0  3000               	movlw	0
  3361  07E1  0141               	movlb	1	; select bank1
  3362  07E2  0525               	andwf	(sprintf@flag+1)^(0+128),w
  3363  07E3  0140               	movlb	0	; select bank0
  3364  07E4  00DF               	movwf	??_sprintf+1
  3365  07E5  085E               	movf	??_sprintf,w
  3366  07E6  045F               	iorwf	??_sprintf+1,w
  3367  07E7  1903               	btfsc	3,2
  3368  07E8  2B19               	goto	l2601
  3369                           
  3370                           ;doprnt.c: 1439: ((*sp++ = ('-')));
  3371  07E9  302D               	movlw	45
  3372  07EA                     L5:	
  3373  07EA  00DE               	movwf	??_sprintf
  3374  07EB  0141               	movlb	1	; select bank1
  3375  07EC  0832               	movf	sprintf@sp^(0+128),w
  3376  07ED  0086               	movwf	6
  3377  07EE  0187               	clrf	7
  3378  07EF  0140               	movlb	0	; select bank0
  3379  07F0  085E               	movf	??_sprintf,w
  3380  07F1  0081               	movwf	1
  3381  07F2  3001               	movlw	1
  3382  07F3  00DE               	movwf	??_sprintf
  3383  07F4  085E               	movf	??_sprintf,w
  3384  07F5  0141               	movlb	1	; select bank1
  3385  07F6  07B2               	addwf	sprintf@sp^(0+128),f
  3386  07F7  2B19               	goto	l2601
  3387  07F8                     l2603:	
  3388                           ;doprnt.c: 1469: }
  3389                           ;doprnt.c: 1533: }
  3390                           ;doprnt.c: 1535: alldone:
  3391                           
  3392                           
  3393                           ;doprnt.c: 1538: *sp = 0;
  3394  07F8  0832               	movf	sprintf@sp^(0+128),w
  3395  07F9  0086               	movwf	6
  3396  07FA  0187               	clrf	7
  3397  07FB  0181               	clrf	1
  3398  07FC  0008               	return
  3399  07FD                     __end_of_sprintf:	
  3400                           ;doprnt.c: 1540: return 0;
  3401                           ;	Return value of _sprintf is never used
  3402                           
  3403                           
  3404                           	psect	text2
  3405  00CD                     __ptext2:	
  3406 ;; *************** function _scale *****************
  3407 ;; Defined at:
  3408 ;;		line 425 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\doprnt.c"
  3409 ;; Parameters:    Size  Location     Type
  3410 ;;  scl             1    wreg     char 
  3411 ;; Auto vars:     Size  Location     Type
  3412 ;;  scl             1   32[BANK0 ] char 
  3413 ;; Return value:  Size  Location     Type
  3414 ;;                  3   24[BANK0 ] char 
  3415 ;; Registers used:
  3416 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  3417 ;; Tracked objects:
  3418 ;;		On entry : 0/0
  3419 ;;		On exit  : 0/0
  3420 ;;		Unchanged: 0/0
  3421 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
  3422 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  3423 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  3424 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  3425 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  3426 ;;Total ram usage:        9 bytes
  3427 ;; Hardware stack levels used:    1
  3428 ;; Hardware stack levels required when called:    2
  3429 ;; This function calls:
  3430 ;;		___awdiv
  3431 ;;		___awmod
  3432 ;;		___ftmul
  3433 ;;		___wmul
  3434 ;; This function is called by:
  3435 ;;		_sprintf
  3436 ;; This function uses a non-reentrant model
  3437 ;;
  3438                           
  3439                           
  3440                           ;psect for function _scale
  3441  00CD                     _scale:	
  3442                           
  3443                           ;incstack = 0
  3444                           ; Regs used in _scale: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  3445                           ;scale@scl stored from wreg
  3446  00CD  0140               	movlb	0	; select bank0
  3447  00CE  00C0               	movwf	scale@scl
  3448                           
  3449                           ;doprnt.c: 428: if(scl < 0) {
  3450  00CF  1FC0               	btfss	scale@scl,7
  3451  00D0  29F2               	goto	l2069
  3452                           
  3453                           ;doprnt.c: 429: scl = -scl;
  3454  00D1  09C0               	comf	scale@scl,f
  3455  00D2  0AC0               	incf	scale@scl,f
  3456                           
  3457                           ;doprnt.c: 430: if(scl>=110)
  3458  00D3  0840               	movf	scale@scl,w
  3459  00D4  3A80               	xorlw	128
  3460  00D5  3E12               	addlw	-238
  3461  00D6  1C03               	skipc
  3462  00D7  2976               	goto	l2059
  3463                           
  3464                           ;doprnt.c: 431: return _npowers_[scl/100+18] * _npowers_[(scl%100)/10+9] * _npowers_[scl
      +                          %10];
  3465  00D8  300A               	movlw	10
  3466  00D9  00F7               	movwf	___awdiv@divisor
  3467  00DA  3000               	movlw	0
  3468  00DB  00F8               	movwf	___awdiv@divisor+1
  3469  00DC  0840               	movf	scale@scl,w
  3470  00DD  00F2               	movwf	___awmod@dividend
  3471  00DE  01F3               	clrf	___awmod@dividend+1
  3472  00DF  1BF2               	btfsc	___awmod@dividend,7
  3473  00E0  03F3               	decf	___awmod@dividend+1,f
  3474  00E1  3064               	movlw	100
  3475  00E2  00F0               	movwf	___awmod@divisor
  3476  00E3  3000               	movlw	0
  3477  00E4  00F1               	movwf	___awmod@divisor+1
  3478  00E5  3195  25FD  3180   	fcall	___awmod
  3479  00E8  0871               	movf	?___awmod+1,w
  3480  00E9  00FA               	movwf	___awdiv@dividend+1
  3481  00EA  0870               	movf	?___awmod,w
  3482  00EB  00F9               	movwf	___awdiv@dividend
  3483  00EC  3196  2694  3180   	fcall	___awdiv
  3484  00EF  0877               	movf	?___awdiv,w
  3485  00F0  3E09               	addlw	9
  3486  00F1  0140               	movlb	0	; select bank0
  3487  00F2  00A4               	movwf	___wmul@multiplier
  3488  00F3  3000               	movlw	0
  3489  00F4  3D78               	addwfc	?___awdiv+1,w
  3490  00F5  00A5               	movwf	___wmul@multiplier+1
  3491  00F6  3003               	movlw	3
  3492  00F7  00A6               	movwf	___wmul@multiplicand
  3493  00F8  3000               	movlw	0
  3494  00F9  00A7               	movwf	___wmul@multiplicand+1
  3495  00FA  3194  24C9  3180   	fcall	___wmul
  3496  00FD  0140               	movlb	0	; select bank0
  3497  00FE  0825               	movf	?___wmul+1,w
  3498  00FF  0085               	movwf	5
  3499  0100  0824               	movf	?___wmul,w
  3500  0101  0084               	movwf	4
  3501  0102  3000               	movlw	low (__npowers_| (0+32768))
  3502  0103  0784               	addwf	4,f
  3503  0104  3098               	movlw	high (__npowers_| (0+32768))
  3504  0105  3D85               	addwfc	5,f
  3505  0106  3F00               	moviw [0]fsr0
  3506  0107  00A8               	movwf	___ftmul@f1
  3507  0108  3F01               	moviw [1]fsr0
  3508  0109  00A9               	movwf	___ftmul@f1+1
  3509  010A  3F02               	moviw [2]fsr0
  3510  010B  00AA               	movwf	___ftmul@f1+2
  3511  010C  3064               	movlw	100
  3512  010D  00F7               	movwf	___awdiv@divisor
  3513  010E  3000               	movlw	0
  3514  010F  00F8               	movwf	___awdiv@divisor+1
  3515  0110  0840               	movf	scale@scl,w
  3516  0111  00F9               	movwf	___awdiv@dividend
  3517  0112  01FA               	clrf	___awdiv@dividend+1
  3518  0113  1BF9               	btfsc	___awdiv@dividend,7
  3519  0114  03FA               	decf	___awdiv@dividend+1,f
  3520  0115  3196  2694  3180   	fcall	___awdiv
  3521  0118  0877               	movf	?___awdiv,w
  3522  0119  3E12               	addlw	18
  3523  011A  0140               	movlb	0	; select bank0
  3524  011B  00A4               	movwf	___wmul@multiplier
  3525  011C  3000               	movlw	0
  3526  011D  3D78               	addwfc	?___awdiv+1,w
  3527  011E  00A5               	movwf	___wmul@multiplier+1
  3528  011F  3003               	movlw	3
  3529  0120  00A6               	movwf	___wmul@multiplicand
  3530  0121  3000               	movlw	0
  3531  0122  00A7               	movwf	___wmul@multiplicand+1
  3532  0123  3194  24C9  3180   	fcall	___wmul
  3533  0126  0140               	movlb	0	; select bank0
  3534  0127  0825               	movf	?___wmul+1,w
  3535  0128  0085               	movwf	5
  3536  0129  0824               	movf	?___wmul,w
  3537  012A  0084               	movwf	4
  3538  012B  3000               	movlw	low (__npowers_| (0+32768))
  3539  012C  0784               	addwf	4,f
  3540  012D  3098               	movlw	high (__npowers_| (0+32768))
  3541  012E  3D85               	addwfc	5,f
  3542  012F  3F00               	moviw [0]fsr0
  3543  0130  00AB               	movwf	___ftmul@f2
  3544  0131  3F01               	moviw [1]fsr0
  3545  0132  00AC               	movwf	___ftmul@f2+1
  3546  0133  3F02               	moviw [2]fsr0
  3547  0134  00AD               	movwf	___ftmul@f2+2
  3548  0135  318A  2256  3180   	fcall	___ftmul
  3549  0138  0140               	movlb	0	; select bank0
  3550  0139  0828               	movf	?___ftmul,w
  3551  013A  00BD               	movwf	_scale$949
  3552  013B  0829               	movf	?___ftmul+1,w
  3553  013C  00BE               	movwf	_scale$949+1
  3554  013D  082A               	movf	?___ftmul+2,w
  3555  013E  00BF               	movwf	_scale$949+2
  3556                           
  3557                           ;doprnt.c: 431: return _npowers_[scl/100+18] * _npowers_[(scl%100)/10+9] * _npowers_[scl
      +                          %10];
  3558  013F  0840               	movf	scale@scl,w
  3559  0140  00F2               	movwf	___awmod@dividend
  3560  0141  01F3               	clrf	___awmod@dividend+1
  3561  0142  1BF2               	btfsc	___awmod@dividend,7
  3562  0143  03F3               	decf	___awmod@dividend+1,f
  3563  0144  300A               	movlw	10
  3564  0145  00F0               	movwf	___awmod@divisor
  3565  0146  3000               	movlw	0
  3566  0147  00F1               	movwf	___awmod@divisor+1
  3567  0148  3195  25FD  3180   	fcall	___awmod
  3568  014B  0871               	movf	?___awmod+1,w
  3569  014C  0140               	movlb	0	; select bank0
  3570  014D  00A5               	movwf	___wmul@multiplier+1
  3571  014E  0870               	movf	?___awmod,w
  3572  014F  00A4               	movwf	___wmul@multiplier
  3573  0150  3003               	movlw	3
  3574  0151  00A6               	movwf	___wmul@multiplicand
  3575  0152  3000               	movlw	0
  3576  0153  00A7               	movwf	___wmul@multiplicand+1
  3577  0154  3194  24C9  3180   	fcall	___wmul
  3578  0157  0140               	movlb	0	; select bank0
  3579  0158  0825               	movf	?___wmul+1,w
  3580  0159  0085               	movwf	5
  3581  015A  0824               	movf	?___wmul,w
  3582  015B  0084               	movwf	4
  3583  015C  3000               	movlw	low (__npowers_| (0+32768))
  3584  015D  0784               	addwf	4,f
  3585  015E  3098               	movlw	high (__npowers_| (0+32768))
  3586  015F  3D85               	addwfc	5,f
  3587  0160  3F00               	moviw [0]fsr0
  3588  0161  00A8               	movwf	___ftmul@f1
  3589  0162  3F01               	moviw [1]fsr0
  3590  0163  00A9               	movwf	___ftmul@f1+1
  3591  0164  3F02               	moviw [2]fsr0
  3592  0165  00AA               	movwf	___ftmul@f1+2
  3593  0166  083D               	movf	_scale$949,w
  3594  0167  00AB               	movwf	___ftmul@f2
  3595  0168  083E               	movf	_scale$949+1,w
  3596  0169  00AC               	movwf	___ftmul@f2+1
  3597  016A  083F               	movf	_scale$949+2,w
  3598  016B  00AD               	movwf	___ftmul@f2+2
  3599  016C  318A  2256         	fcall	___ftmul
  3600  016E  0140               	movlb	0	; select bank0
  3601  016F  0828               	movf	?___ftmul,w
  3602  0170  00B8               	movwf	?_scale
  3603  0171  0829               	movf	?___ftmul+1,w
  3604  0172  00B9               	movwf	?_scale+1
  3605  0173  082A               	movf	?___ftmul+2,w
  3606  0174  00BA               	movwf	?_scale+2
  3607  0175  0008               	return
  3608  0176                     l2059:	
  3609                           
  3610                           ;doprnt.c: 432: else if(scl > 10)
  3611  0176  0840               	movf	scale@scl,w
  3612  0177  3A80               	xorlw	128
  3613  0178  3E75               	addlw	-139
  3614  0179  1C03               	skipc
  3615  017A  29D5               	goto	l2065
  3616                           
  3617                           ;doprnt.c: 433: return _npowers_[scl/10+9] * _npowers_[scl%10];
  3618  017B  0840               	movf	scale@scl,w
  3619  017C  00F2               	movwf	___awmod@dividend
  3620  017D  01F3               	clrf	___awmod@dividend+1
  3621  017E  1BF2               	btfsc	___awmod@dividend,7
  3622  017F  03F3               	decf	___awmod@dividend+1,f
  3623  0180  300A               	movlw	10
  3624  0181  00F0               	movwf	___awmod@divisor
  3625  0182  3000               	movlw	0
  3626  0183  00F1               	movwf	___awmod@divisor+1
  3627  0184  3195  25FD  3180   	fcall	___awmod
  3628  0187  0871               	movf	?___awmod+1,w
  3629  0188  0140               	movlb	0	; select bank0
  3630  0189  00A5               	movwf	___wmul@multiplier+1
  3631  018A  0870               	movf	?___awmod,w
  3632  018B  00A4               	movwf	___wmul@multiplier
  3633  018C  3003               	movlw	3
  3634  018D  00A6               	movwf	___wmul@multiplicand
  3635  018E  3000               	movlw	0
  3636  018F  00A7               	movwf	___wmul@multiplicand+1
  3637  0190  3194  24C9  3180   	fcall	___wmul
  3638  0193  0140               	movlb	0	; select bank0
  3639  0194  0825               	movf	?___wmul+1,w
  3640  0195  0085               	movwf	5
  3641  0196  0824               	movf	?___wmul,w
  3642  0197  0084               	movwf	4
  3643  0198  3000               	movlw	low (__npowers_| (0+32768))
  3644  0199  0784               	addwf	4,f
  3645  019A  3098               	movlw	high (__npowers_| (0+32768))
  3646  019B  3D85               	addwfc	5,f
  3647  019C  3F00               	moviw [0]fsr0
  3648  019D  00A8               	movwf	___ftmul@f1
  3649  019E  3F01               	moviw [1]fsr0
  3650  019F  00A9               	movwf	___ftmul@f1+1
  3651  01A0  3F02               	moviw [2]fsr0
  3652  01A1  00AA               	movwf	___ftmul@f1+2
  3653  01A2  300A               	movlw	10
  3654  01A3  00F7               	movwf	___awdiv@divisor
  3655  01A4  3000               	movlw	0
  3656  01A5  00F8               	movwf	___awdiv@divisor+1
  3657  01A6  0840               	movf	scale@scl,w
  3658  01A7  00F9               	movwf	___awdiv@dividend
  3659  01A8  01FA               	clrf	___awdiv@dividend+1
  3660  01A9  1BF9               	btfsc	___awdiv@dividend,7
  3661  01AA  03FA               	decf	___awdiv@dividend+1,f
  3662  01AB  3196  2694  3180   	fcall	___awdiv
  3663  01AE  0877               	movf	?___awdiv,w
  3664  01AF  3E09               	addlw	9
  3665  01B0  0140               	movlb	0	; select bank0
  3666  01B1  00A4               	movwf	___wmul@multiplier
  3667  01B2  3000               	movlw	0
  3668  01B3  3D78               	addwfc	?___awdiv+1,w
  3669  01B4  00A5               	movwf	___wmul@multiplier+1
  3670  01B5  3003               	movlw	3
  3671  01B6  00A6               	movwf	___wmul@multiplicand
  3672  01B7  3000               	movlw	0
  3673  01B8  00A7               	movwf	___wmul@multiplicand+1
  3674  01B9  3194  24C9  3180   	fcall	___wmul
  3675  01BC  0140               	movlb	0	; select bank0
  3676  01BD  0825               	movf	?___wmul+1,w
  3677  01BE  0085               	movwf	5
  3678  01BF  0824               	movf	?___wmul,w
  3679  01C0  0084               	movwf	4
  3680  01C1  3000               	movlw	low (__npowers_| (0+32768))
  3681  01C2  0784               	addwf	4,f
  3682  01C3  3098               	movlw	high (__npowers_| (0+32768))
  3683  01C4  3D85               	addwfc	5,f
  3684  01C5  3F00               	moviw [0]fsr0
  3685  01C6  00AB               	movwf	___ftmul@f2
  3686  01C7  3F01               	moviw [1]fsr0
  3687  01C8  00AC               	movwf	___ftmul@f2+1
  3688  01C9  3F02               	moviw [2]fsr0
  3689  01CA  00AD               	movwf	___ftmul@f2+2
  3690  01CB  318A  2256         	fcall	___ftmul
  3691  01CD  0140               	movlb	0	; select bank0
  3692  01CE  0828               	movf	?___ftmul,w
  3693  01CF  00B8               	movwf	?_scale
  3694  01D0  0829               	movf	?___ftmul+1,w
  3695  01D1  00B9               	movwf	?_scale+1
  3696  01D2  082A               	movf	?___ftmul+2,w
  3697  01D3  00BA               	movwf	?_scale+2
  3698  01D4  0008               	return
  3699  01D5                     l2065:	
  3700                           
  3701                           ;doprnt.c: 434: return _npowers_[scl];
  3702  01D5  0840               	movf	scale@scl,w
  3703  01D6  00BB               	movwf	??_scale
  3704  01D7  01BC               	clrf	??_scale+1
  3705  01D8  083B               	movf	??_scale,w
  3706  01D9  00A4               	movwf	___wmul@multiplier
  3707  01DA  083C               	movf	??_scale+1,w
  3708  01DB  00A5               	movwf	___wmul@multiplier+1
  3709  01DC  3003               	movlw	3
  3710  01DD  00A6               	movwf	___wmul@multiplicand
  3711  01DE  3000               	movlw	0
  3712  01DF  00A7               	movwf	___wmul@multiplicand+1
  3713  01E0  3194  24C9         	fcall	___wmul
  3714  01E2  0140               	movlb	0	; select bank0
  3715  01E3  0825               	movf	?___wmul+1,w
  3716  01E4  0085               	movwf	5
  3717  01E5  0824               	movf	?___wmul,w
  3718  01E6  0084               	movwf	4
  3719  01E7  3000               	movlw	low (__npowers_| (0+32768))
  3720  01E8  0784               	addwf	4,f
  3721  01E9  3098               	movlw	high (__npowers_| (0+32768))
  3722  01EA  3D85               	addwfc	5,f
  3723  01EB  3F00               	moviw [0]fsr0
  3724  01EC  00B8               	movwf	?_scale
  3725  01ED  3F01               	moviw [1]fsr0
  3726  01EE  00B9               	movwf	?_scale+1
  3727  01EF  3F02               	moviw [2]fsr0
  3728  01F0  00BA               	movwf	?_scale+2
  3729  01F1  0008               	return
  3730  01F2                     l2069:	
  3731                           
  3732                           ;doprnt.c: 435: }
  3733                           ;doprnt.c: 436: if(scl>=110)
  3734  01F2  0840               	movf	scale@scl,w
  3735  01F3  3A80               	xorlw	128
  3736  01F4  3E12               	addlw	-238
  3737  01F5  1C03               	skipc
  3738  01F6  2A95               	goto	l2077
  3739                           
  3740                           ;doprnt.c: 437: return _powers_[scl/100+18] * _powers_[(scl%100)/10+9] * _powers_[scl%10
      +                          ];
  3741  01F7  300A               	movlw	10
  3742  01F8  00F7               	movwf	___awdiv@divisor
  3743  01F9  3000               	movlw	0
  3744  01FA  00F8               	movwf	___awdiv@divisor+1
  3745  01FB  0840               	movf	scale@scl,w
  3746  01FC  00F2               	movwf	___awmod@dividend
  3747  01FD  01F3               	clrf	___awmod@dividend+1
  3748  01FE  1BF2               	btfsc	___awmod@dividend,7
  3749  01FF  03F3               	decf	___awmod@dividend+1,f
  3750  0200  3064               	movlw	100
  3751  0201  00F0               	movwf	___awmod@divisor
  3752  0202  3000               	movlw	0
  3753  0203  00F1               	movwf	___awmod@divisor+1
  3754  0204  3195  25FD  3180   	fcall	___awmod
  3755  0207  0871               	movf	?___awmod+1,w
  3756  0208  00FA               	movwf	___awdiv@dividend+1
  3757  0209  0870               	movf	?___awmod,w
  3758  020A  00F9               	movwf	___awdiv@dividend
  3759  020B  3196  2694  3180   	fcall	___awdiv
  3760  020E  0877               	movf	?___awdiv,w
  3761  020F  3E09               	addlw	9
  3762  0210  0140               	movlb	0	; select bank0
  3763  0211  00A4               	movwf	___wmul@multiplier
  3764  0212  3000               	movlw	0
  3765  0213  3D78               	addwfc	?___awdiv+1,w
  3766  0214  00A5               	movwf	___wmul@multiplier+1
  3767  0215  3003               	movlw	3
  3768  0216  00A6               	movwf	___wmul@multiplicand
  3769  0217  3000               	movlw	0
  3770  0218  00A7               	movwf	___wmul@multiplicand+1
  3771  0219  3194  24C9  3180   	fcall	___wmul
  3772  021C  0140               	movlb	0	; select bank0
  3773  021D  0825               	movf	?___wmul+1,w
  3774  021E  0085               	movwf	5
  3775  021F  0824               	movf	?___wmul,w
  3776  0220  0084               	movwf	4
  3777  0221  3057               	movlw	low (__powers_| (0+32768))
  3778  0222  0784               	addwf	4,f
  3779  0223  3098               	movlw	high (__powers_| (0+32768))
  3780  0224  3D85               	addwfc	5,f
  3781  0225  3F00               	moviw [0]fsr0
  3782  0226  00A8               	movwf	___ftmul@f1
  3783  0227  3F01               	moviw [1]fsr0
  3784  0228  00A9               	movwf	___ftmul@f1+1
  3785  0229  3F02               	moviw [2]fsr0
  3786  022A  00AA               	movwf	___ftmul@f1+2
  3787  022B  3064               	movlw	100
  3788  022C  00F7               	movwf	___awdiv@divisor
  3789  022D  3000               	movlw	0
  3790  022E  00F8               	movwf	___awdiv@divisor+1
  3791  022F  0840               	movf	scale@scl,w
  3792  0230  00F9               	movwf	___awdiv@dividend
  3793  0231  01FA               	clrf	___awdiv@dividend+1
  3794  0232  1BF9               	btfsc	___awdiv@dividend,7
  3795  0233  03FA               	decf	___awdiv@dividend+1,f
  3796  0234  3196  2694  3180   	fcall	___awdiv
  3797  0237  0877               	movf	?___awdiv,w
  3798  0238  3E12               	addlw	18
  3799  0239  0140               	movlb	0	; select bank0
  3800  023A  00A4               	movwf	___wmul@multiplier
  3801  023B  3000               	movlw	0
  3802  023C  3D78               	addwfc	?___awdiv+1,w
  3803  023D  00A5               	movwf	___wmul@multiplier+1
  3804  023E  3003               	movlw	3
  3805  023F  00A6               	movwf	___wmul@multiplicand
  3806  0240  3000               	movlw	0
  3807  0241  00A7               	movwf	___wmul@multiplicand+1
  3808  0242  3194  24C9  3180   	fcall	___wmul
  3809  0245  0140               	movlb	0	; select bank0
  3810  0246  0825               	movf	?___wmul+1,w
  3811  0247  0085               	movwf	5
  3812  0248  0824               	movf	?___wmul,w
  3813  0249  0084               	movwf	4
  3814  024A  3057               	movlw	low (__powers_| (0+32768))
  3815  024B  0784               	addwf	4,f
  3816  024C  3098               	movlw	high (__powers_| (0+32768))
  3817  024D  3D85               	addwfc	5,f
  3818  024E  3F00               	moviw [0]fsr0
  3819  024F  00AB               	movwf	___ftmul@f2
  3820  0250  3F01               	moviw [1]fsr0
  3821  0251  00AC               	movwf	___ftmul@f2+1
  3822  0252  3F02               	moviw [2]fsr0
  3823  0253  00AD               	movwf	___ftmul@f2+2
  3824  0254  318A  2256  3180   	fcall	___ftmul
  3825  0257  0140               	movlb	0	; select bank0
  3826  0258  0828               	movf	?___ftmul,w
  3827  0259  00BD               	movwf	_scale$949
  3828  025A  0829               	movf	?___ftmul+1,w
  3829  025B  00BE               	movwf	_scale$949+1
  3830  025C  082A               	movf	?___ftmul+2,w
  3831  025D  00BF               	movwf	_scale$949+2
  3832                           
  3833                           ;doprnt.c: 437: return _powers_[scl/100+18] * _powers_[(scl%100)/10+9] * _powers_[scl%10
      +                          ];
  3834  025E  0840               	movf	scale@scl,w
  3835  025F  00F2               	movwf	___awmod@dividend
  3836  0260  01F3               	clrf	___awmod@dividend+1
  3837  0261  1BF2               	btfsc	___awmod@dividend,7
  3838  0262  03F3               	decf	___awmod@dividend+1,f
  3839  0263  300A               	movlw	10
  3840  0264  00F0               	movwf	___awmod@divisor
  3841  0265  3000               	movlw	0
  3842  0266  00F1               	movwf	___awmod@divisor+1
  3843  0267  3195  25FD  3180   	fcall	___awmod
  3844  026A  0871               	movf	?___awmod+1,w
  3845  026B  0140               	movlb	0	; select bank0
  3846  026C  00A5               	movwf	___wmul@multiplier+1
  3847  026D  0870               	movf	?___awmod,w
  3848  026E  00A4               	movwf	___wmul@multiplier
  3849  026F  3003               	movlw	3
  3850  0270  00A6               	movwf	___wmul@multiplicand
  3851  0271  3000               	movlw	0
  3852  0272  00A7               	movwf	___wmul@multiplicand+1
  3853  0273  3194  24C9  3180   	fcall	___wmul
  3854  0276  0140               	movlb	0	; select bank0
  3855  0277  0825               	movf	?___wmul+1,w
  3856  0278  0085               	movwf	5
  3857  0279  0824               	movf	?___wmul,w
  3858  027A  0084               	movwf	4
  3859  027B  3057               	movlw	low (__powers_| (0+32768))
  3860  027C  0784               	addwf	4,f
  3861  027D  3098               	movlw	high (__powers_| (0+32768))
  3862  027E  3D85               	addwfc	5,f
  3863  027F  3F00               	moviw [0]fsr0
  3864  0280  00A8               	movwf	___ftmul@f1
  3865  0281  3F01               	moviw [1]fsr0
  3866  0282  00A9               	movwf	___ftmul@f1+1
  3867  0283  3F02               	moviw [2]fsr0
  3868  0284  00AA               	movwf	___ftmul@f1+2
  3869  0285  083D               	movf	_scale$949,w
  3870  0286  00AB               	movwf	___ftmul@f2
  3871  0287  083E               	movf	_scale$949+1,w
  3872  0288  00AC               	movwf	___ftmul@f2+1
  3873  0289  083F               	movf	_scale$949+2,w
  3874  028A  00AD               	movwf	___ftmul@f2+2
  3875  028B  318A  2256         	fcall	___ftmul
  3876  028D  0140               	movlb	0	; select bank0
  3877  028E  0828               	movf	?___ftmul,w
  3878  028F  00B8               	movwf	?_scale
  3879  0290  0829               	movf	?___ftmul+1,w
  3880  0291  00B9               	movwf	?_scale+1
  3881  0292  082A               	movf	?___ftmul+2,w
  3882  0293  00BA               	movwf	?_scale+2
  3883  0294  0008               	return
  3884  0295                     l2077:	
  3885                           
  3886                           ;doprnt.c: 438: else if(scl > 10)
  3887  0295  0840               	movf	scale@scl,w
  3888  0296  3A80               	xorlw	128
  3889  0297  3E75               	addlw	-139
  3890  0298  1C03               	skipc
  3891  0299  2AF4               	goto	l2083
  3892                           
  3893                           ;doprnt.c: 439: return _powers_[scl/10+9] * _powers_[scl%10];
  3894  029A  0840               	movf	scale@scl,w
  3895  029B  00F2               	movwf	___awmod@dividend
  3896  029C  01F3               	clrf	___awmod@dividend+1
  3897  029D  1BF2               	btfsc	___awmod@dividend,7
  3898  029E  03F3               	decf	___awmod@dividend+1,f
  3899  029F  300A               	movlw	10
  3900  02A0  00F0               	movwf	___awmod@divisor
  3901  02A1  3000               	movlw	0
  3902  02A2  00F1               	movwf	___awmod@divisor+1
  3903  02A3  3195  25FD  3180   	fcall	___awmod
  3904  02A6  0871               	movf	?___awmod+1,w
  3905  02A7  0140               	movlb	0	; select bank0
  3906  02A8  00A5               	movwf	___wmul@multiplier+1
  3907  02A9  0870               	movf	?___awmod,w
  3908  02AA  00A4               	movwf	___wmul@multiplier
  3909  02AB  3003               	movlw	3
  3910  02AC  00A6               	movwf	___wmul@multiplicand
  3911  02AD  3000               	movlw	0
  3912  02AE  00A7               	movwf	___wmul@multiplicand+1
  3913  02AF  3194  24C9  3180   	fcall	___wmul
  3914  02B2  0140               	movlb	0	; select bank0
  3915  02B3  0825               	movf	?___wmul+1,w
  3916  02B4  0085               	movwf	5
  3917  02B5  0824               	movf	?___wmul,w
  3918  02B6  0084               	movwf	4
  3919  02B7  3057               	movlw	low (__powers_| (0+32768))
  3920  02B8  0784               	addwf	4,f
  3921  02B9  3098               	movlw	high (__powers_| (0+32768))
  3922  02BA  3D85               	addwfc	5,f
  3923  02BB  3F00               	moviw [0]fsr0
  3924  02BC  00A8               	movwf	___ftmul@f1
  3925  02BD  3F01               	moviw [1]fsr0
  3926  02BE  00A9               	movwf	___ftmul@f1+1
  3927  02BF  3F02               	moviw [2]fsr0
  3928  02C0  00AA               	movwf	___ftmul@f1+2
  3929  02C1  300A               	movlw	10
  3930  02C2  00F7               	movwf	___awdiv@divisor
  3931  02C3  3000               	movlw	0
  3932  02C4  00F8               	movwf	___awdiv@divisor+1
  3933  02C5  0840               	movf	scale@scl,w
  3934  02C6  00F9               	movwf	___awdiv@dividend
  3935  02C7  01FA               	clrf	___awdiv@dividend+1
  3936  02C8  1BF9               	btfsc	___awdiv@dividend,7
  3937  02C9  03FA               	decf	___awdiv@dividend+1,f
  3938  02CA  3196  2694  3180   	fcall	___awdiv
  3939  02CD  0877               	movf	?___awdiv,w
  3940  02CE  3E09               	addlw	9
  3941  02CF  0140               	movlb	0	; select bank0
  3942  02D0  00A4               	movwf	___wmul@multiplier
  3943  02D1  3000               	movlw	0
  3944  02D2  3D78               	addwfc	?___awdiv+1,w
  3945  02D3  00A5               	movwf	___wmul@multiplier+1
  3946  02D4  3003               	movlw	3
  3947  02D5  00A6               	movwf	___wmul@multiplicand
  3948  02D6  3000               	movlw	0
  3949  02D7  00A7               	movwf	___wmul@multiplicand+1
  3950  02D8  3194  24C9  3180   	fcall	___wmul
  3951  02DB  0140               	movlb	0	; select bank0
  3952  02DC  0825               	movf	?___wmul+1,w
  3953  02DD  0085               	movwf	5
  3954  02DE  0824               	movf	?___wmul,w
  3955  02DF  0084               	movwf	4
  3956  02E0  3057               	movlw	low (__powers_| (0+32768))
  3957  02E1  0784               	addwf	4,f
  3958  02E2  3098               	movlw	high (__powers_| (0+32768))
  3959  02E3  3D85               	addwfc	5,f
  3960  02E4  3F00               	moviw [0]fsr0
  3961  02E5  00AB               	movwf	___ftmul@f2
  3962  02E6  3F01               	moviw [1]fsr0
  3963  02E7  00AC               	movwf	___ftmul@f2+1
  3964  02E8  3F02               	moviw [2]fsr0
  3965  02E9  00AD               	movwf	___ftmul@f2+2
  3966  02EA  318A  2256         	fcall	___ftmul
  3967  02EC  0140               	movlb	0	; select bank0
  3968  02ED  0828               	movf	?___ftmul,w
  3969  02EE  00B8               	movwf	?_scale
  3970  02EF  0829               	movf	?___ftmul+1,w
  3971  02F0  00B9               	movwf	?_scale+1
  3972  02F1  082A               	movf	?___ftmul+2,w
  3973  02F2  00BA               	movwf	?_scale+2
  3974  02F3  0008               	return
  3975  02F4                     l2083:	
  3976                           
  3977                           ;doprnt.c: 440: return _powers_[scl];
  3978  02F4  0840               	movf	scale@scl,w
  3979  02F5  00BB               	movwf	??_scale
  3980  02F6  01BC               	clrf	??_scale+1
  3981  02F7  083B               	movf	??_scale,w
  3982  02F8  00A4               	movwf	___wmul@multiplier
  3983  02F9  083C               	movf	??_scale+1,w
  3984  02FA  00A5               	movwf	___wmul@multiplier+1
  3985  02FB  3003               	movlw	3
  3986  02FC  00A6               	movwf	___wmul@multiplicand
  3987  02FD  3000               	movlw	0
  3988  02FE  00A7               	movwf	___wmul@multiplicand+1
  3989  02FF  3194  24C9         	fcall	___wmul
  3990  0301  0140               	movlb	0	; select bank0
  3991  0302  0825               	movf	?___wmul+1,w
  3992  0303  0085               	movwf	5
  3993  0304  0824               	movf	?___wmul,w
  3994  0305  0084               	movwf	4
  3995  0306  3057               	movlw	low (__powers_| (0+32768))
  3996  0307  0784               	addwf	4,f
  3997  0308  3098               	movlw	high (__powers_| (0+32768))
  3998  0309  3D85               	addwfc	5,f
  3999  030A  3F00               	moviw [0]fsr0
  4000  030B  00B8               	movwf	?_scale
  4001  030C  3F01               	moviw [1]fsr0
  4002  030D  00B9               	movwf	?_scale+1
  4003  030E  3F02               	moviw [2]fsr0
  4004  030F  00BA               	movwf	?_scale+2
  4005  0310  0008               	return
  4006  0311                     __end_of_scale:	
  4007                           
  4008                           	psect	text3
  4009  0009                     __ptext3:	
  4010 ;; *************** function _isdigit *****************
  4011 ;; Defined at:
  4012 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\isdigit.c"
  4013 ;; Parameters:    Size  Location     Type
  4014 ;;  c               1    wreg     unsigned char 
  4015 ;; Auto vars:     Size  Location     Type
  4016 ;;  c               1    1[COMMON] unsigned char 
  4017 ;; Return value:  Size  Location     Type
  4018 ;;		None               void
  4019 ;; Registers used:
  4020 ;;		wreg, status,2, status,0
  4021 ;; Tracked objects:
  4022 ;;		On entry : 0/0
  4023 ;;		On exit  : 0/0
  4024 ;;		Unchanged: 0/0
  4025 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
  4026 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  4027 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  4028 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  4029 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  4030 ;;Total ram usage:        2 bytes
  4031 ;; Hardware stack levels used:    1
  4032 ;; This function calls:
  4033 ;;		Nothing
  4034 ;; This function is called by:
  4035 ;;		_sprintf
  4036 ;; This function uses a non-reentrant model
  4037 ;;
  4038                           
  4039                           
  4040                           ;psect for function _isdigit
  4041  0009                     _isdigit:	
  4042                           
  4043                           ;incstack = 0
  4044                           ; Regs used in _isdigit: [wreg+status,2+status,0]
  4045                           ;isdigit@c stored from wreg
  4046  0009  00F1               	movwf	isdigit@c
  4047  000A  01F0               	clrf	_isdigit$735
  4048  000B  303A               	movlw	58
  4049  000C  0271               	subwf	isdigit@c,w
  4050  000D  1803               	skipnc
  4051  000E  2815               	goto	l2095
  4052  000F  3030               	movlw	48
  4053  0010  0271               	subwf	isdigit@c,w
  4054  0011  1C03               	skipc
  4055  0012  2815               	goto	l2095
  4056  0013  01F0               	clrf	_isdigit$735
  4057  0014  0AF0               	incf	_isdigit$735,f
  4058  0015                     l2095:	
  4059  0015  0C70               	rrf	_isdigit$735,w
  4060  0016  0008               	return
  4061  0017                     __end_of_isdigit:	
  4062                           
  4063                           	psect	text4
  4064  0D1D                     __ptext4:	
  4065 ;; *************** function _fround *****************
  4066 ;; Defined at:
  4067 ;;		line 409 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\doprnt.c"
  4068 ;; Parameters:    Size  Location     Type
  4069 ;;  prec            1    wreg     unsigned char 
  4070 ;; Auto vars:     Size  Location     Type
  4071 ;;  prec            1   37[BANK0 ] unsigned char 
  4072 ;; Return value:  Size  Location     Type
  4073 ;;                  3   24[BANK0 ] unsigned char 
  4074 ;; Registers used:
  4075 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  4076 ;; Tracked objects:
  4077 ;;		On entry : 0/0
  4078 ;;		On exit  : 0/0
  4079 ;;		Unchanged: 0/0
  4080 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
  4081 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  4082 ;;      Locals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  4083 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  4084 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  4085 ;;Total ram usage:       14 bytes
  4086 ;; Hardware stack levels used:    1
  4087 ;; Hardware stack levels required when called:    2
  4088 ;; This function calls:
  4089 ;;		___awdiv
  4090 ;;		___awmod
  4091 ;;		___ftmul
  4092 ;;		___wmul
  4093 ;; This function is called by:
  4094 ;;		_sprintf
  4095 ;; This function uses a non-reentrant model
  4096 ;;
  4097                           
  4098                           
  4099                           ;psect for function _fround
  4100  0D1D                     _fround:	
  4101                           
  4102                           ;incstack = 0
  4103                           ; Regs used in _fround: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  4104                           ;fround@prec stored from wreg
  4105  0D1D  0140               	movlb	0	; select bank0
  4106  0D1E  00C5               	movwf	fround@prec
  4107                           
  4108                           ;doprnt.c: 413: if(prec>=110)
  4109  0D1F  306E               	movlw	110
  4110  0D20  0245               	subwf	fround@prec,w
  4111  0D21  1C03               	skipc
  4112  0D22  2DDD               	goto	l2035
  4113                           
  4114                           ;doprnt.c: 414: return 0.5 * _npowers_[prec/100+18] * _npowers_[(prec%100)/10+9] * _npow
      +                          ers_[prec%10];
  4115  0D23  300A               	movlw	10
  4116  0D24  00F7               	movwf	___awdiv@divisor
  4117  0D25  3000               	movlw	0
  4118  0D26  00F8               	movwf	___awdiv@divisor+1
  4119  0D27  0845               	movf	fround@prec,w
  4120  0D28  00BB               	movwf	??_fround
  4121  0D29  01BC               	clrf	??_fround+1
  4122  0D2A  083B               	movf	??_fround,w
  4123  0D2B  00F2               	movwf	___awmod@dividend
  4124  0D2C  083C               	movf	??_fround+1,w
  4125  0D2D  00F3               	movwf	___awmod@dividend+1
  4126  0D2E  3064               	movlw	100
  4127  0D2F  00F0               	movwf	___awmod@divisor
  4128  0D30  3000               	movlw	0
  4129  0D31  00F1               	movwf	___awmod@divisor+1
  4130  0D32  3195  25FD  318D   	fcall	___awmod
  4131  0D35  0871               	movf	?___awmod+1,w
  4132  0D36  00FA               	movwf	___awdiv@dividend+1
  4133  0D37  0870               	movf	?___awmod,w
  4134  0D38  00F9               	movwf	___awdiv@dividend
  4135  0D39  3196  2694  318D   	fcall	___awdiv
  4136  0D3C  0877               	movf	?___awdiv,w
  4137  0D3D  3E09               	addlw	9
  4138  0D3E  0140               	movlb	0	; select bank0
  4139  0D3F  00A4               	movwf	___wmul@multiplier
  4140  0D40  3000               	movlw	0
  4141  0D41  3D78               	addwfc	?___awdiv+1,w
  4142  0D42  00A5               	movwf	___wmul@multiplier+1
  4143  0D43  3003               	movlw	3
  4144  0D44  00A6               	movwf	___wmul@multiplicand
  4145  0D45  3000               	movlw	0
  4146  0D46  00A7               	movwf	___wmul@multiplicand+1
  4147  0D47  3194  24C9  318D   	fcall	___wmul
  4148  0D4A  0140               	movlb	0	; select bank0
  4149  0D4B  0825               	movf	?___wmul+1,w
  4150  0D4C  0085               	movwf	5
  4151  0D4D  0824               	movf	?___wmul,w
  4152  0D4E  0084               	movwf	4
  4153  0D4F  3000               	movlw	low (__npowers_| (0+32768))
  4154  0D50  0784               	addwf	4,f
  4155  0D51  3098               	movlw	high (__npowers_| (0+32768))
  4156  0D52  3D85               	addwfc	5,f
  4157  0D53  3F00               	moviw [0]fsr0
  4158  0D54  00A8               	movwf	___ftmul@f1
  4159  0D55  3F01               	moviw [1]fsr0
  4160  0D56  00A9               	movwf	___ftmul@f1+1
  4161  0D57  3F02               	moviw [2]fsr0
  4162  0D58  00AA               	movwf	___ftmul@f1+2
  4163  0D59  3064               	movlw	100
  4164  0D5A  00F7               	movwf	___awdiv@divisor
  4165  0D5B  3000               	movlw	0
  4166  0D5C  00F8               	movwf	___awdiv@divisor+1
  4167  0D5D  0845               	movf	fround@prec,w
  4168  0D5E  00BD               	movwf	??_fround+2
  4169  0D5F  01BE               	clrf	??_fround+3
  4170  0D60  083D               	movf	??_fround+2,w
  4171  0D61  00F9               	movwf	___awdiv@dividend
  4172  0D62  083E               	movf	??_fround+3,w
  4173  0D63  00FA               	movwf	___awdiv@dividend+1
  4174  0D64  3196  2694  318D   	fcall	___awdiv
  4175  0D67  0877               	movf	?___awdiv,w
  4176  0D68  3E12               	addlw	18
  4177  0D69  0140               	movlb	0	; select bank0
  4178  0D6A  00A4               	movwf	___wmul@multiplier
  4179  0D6B  3000               	movlw	0
  4180  0D6C  3D78               	addwfc	?___awdiv+1,w
  4181  0D6D  00A5               	movwf	___wmul@multiplier+1
  4182  0D6E  3003               	movlw	3
  4183  0D6F  00A6               	movwf	___wmul@multiplicand
  4184  0D70  3000               	movlw	0
  4185  0D71  00A7               	movwf	___wmul@multiplicand+1
  4186  0D72  3194  24C9  318D   	fcall	___wmul
  4187  0D75  0140               	movlb	0	; select bank0
  4188  0D76  0825               	movf	?___wmul+1,w
  4189  0D77  0085               	movwf	5
  4190  0D78  0824               	movf	?___wmul,w
  4191  0D79  0084               	movwf	4
  4192  0D7A  3000               	movlw	low (__npowers_| (0+32768))
  4193  0D7B  0784               	addwf	4,f
  4194  0D7C  3098               	movlw	high (__npowers_| (0+32768))
  4195  0D7D  3D85               	addwfc	5,f
  4196  0D7E  3F00               	moviw [0]fsr0
  4197  0D7F  00AB               	movwf	___ftmul@f2
  4198  0D80  3F01               	moviw [1]fsr0
  4199  0D81  00AC               	movwf	___ftmul@f2+1
  4200  0D82  3F02               	moviw [2]fsr0
  4201  0D83  00AD               	movwf	___ftmul@f2+2
  4202  0D84  318A  2256  318D   	fcall	___ftmul
  4203  0D87  0140               	movlb	0	; select bank0
  4204  0D88  0828               	movf	?___ftmul,w
  4205  0D89  00C2               	movwf	_fround$947
  4206  0D8A  0829               	movf	?___ftmul+1,w
  4207  0D8B  00C3               	movwf	_fround$947+1
  4208  0D8C  082A               	movf	?___ftmul+2,w
  4209  0D8D  00C4               	movwf	_fround$947+2
  4210                           
  4211                           ;doprnt.c: 414: return 0.5 * _npowers_[prec/100+18] * _npowers_[(prec%100)/10+9] * _npow
      +                          ers_[prec%10];
  4212  0D8E  0845               	movf	fround@prec,w
  4213  0D8F  00BB               	movwf	??_fround
  4214  0D90  01BC               	clrf	??_fround+1
  4215  0D91  083B               	movf	??_fround,w
  4216  0D92  00F2               	movwf	___awmod@dividend
  4217  0D93  083C               	movf	??_fround+1,w
  4218  0D94  00F3               	movwf	___awmod@dividend+1
  4219  0D95  300A               	movlw	10
  4220  0D96  00F0               	movwf	___awmod@divisor
  4221  0D97  3000               	movlw	0
  4222  0D98  00F1               	movwf	___awmod@divisor+1
  4223  0D99  3195  25FD  318D   	fcall	___awmod
  4224  0D9C  0871               	movf	?___awmod+1,w
  4225  0D9D  0140               	movlb	0	; select bank0
  4226  0D9E  00A5               	movwf	___wmul@multiplier+1
  4227  0D9F  0870               	movf	?___awmod,w
  4228  0DA0  00A4               	movwf	___wmul@multiplier
  4229  0DA1  3003               	movlw	3
  4230  0DA2  00A6               	movwf	___wmul@multiplicand
  4231  0DA3  3000               	movlw	0
  4232  0DA4  00A7               	movwf	___wmul@multiplicand+1
  4233  0DA5  3194  24C9  318D   	fcall	___wmul
  4234  0DA8  0140               	movlb	0	; select bank0
  4235  0DA9  0825               	movf	?___wmul+1,w
  4236  0DAA  0085               	movwf	5
  4237  0DAB  0824               	movf	?___wmul,w
  4238  0DAC  0084               	movwf	4
  4239  0DAD  3000               	movlw	low (__npowers_| (0+32768))
  4240  0DAE  0784               	addwf	4,f
  4241  0DAF  3098               	movlw	high (__npowers_| (0+32768))
  4242  0DB0  3D85               	addwfc	5,f
  4243  0DB1  3F00               	moviw [0]fsr0
  4244  0DB2  00A8               	movwf	___ftmul@f1
  4245  0DB3  3F01               	moviw [1]fsr0
  4246  0DB4  00A9               	movwf	___ftmul@f1+1
  4247  0DB5  3F02               	moviw [2]fsr0
  4248  0DB6  00AA               	movwf	___ftmul@f1+2
  4249  0DB7  0842               	movf	_fround$947,w
  4250  0DB8  00AB               	movwf	___ftmul@f2
  4251  0DB9  0843               	movf	_fround$947+1,w
  4252  0DBA  00AC               	movwf	___ftmul@f2+1
  4253  0DBB  0844               	movf	_fround$947+2,w
  4254  0DBC  00AD               	movwf	___ftmul@f2+2
  4255  0DBD  318A  2256  318D   	fcall	___ftmul
  4256  0DC0  0140               	movlb	0	; select bank0
  4257  0DC1  0828               	movf	?___ftmul,w
  4258  0DC2  00BF               	movwf	_fround$948
  4259  0DC3  0829               	movf	?___ftmul+1,w
  4260  0DC4  00C0               	movwf	_fround$948+1
  4261  0DC5  082A               	movf	?___ftmul+2,w
  4262  0DC6  00C1               	movwf	_fround$948+2
  4263                           
  4264                           ;doprnt.c: 414: return 0.5 * _npowers_[prec/100+18] * _npowers_[(prec%100)/10+9] * _npow
      +                          ers_[prec%10];
  4265  0DC7  3000               	movlw	0
  4266  0DC8  00A8               	movwf	___ftmul@f1
  4267  0DC9  3000               	movlw	0
  4268  0DCA  00A9               	movwf	___ftmul@f1+1
  4269  0DCB  303F               	movlw	63
  4270  0DCC  00AA               	movwf	___ftmul@f1+2
  4271  0DCD  083F               	movf	_fround$948,w
  4272  0DCE  00AB               	movwf	___ftmul@f2
  4273  0DCF  0840               	movf	_fround$948+1,w
  4274  0DD0  00AC               	movwf	___ftmul@f2+1
  4275  0DD1  0841               	movf	_fround$948+2,w
  4276  0DD2  00AD               	movwf	___ftmul@f2+2
  4277  0DD3  318A  2256         	fcall	___ftmul
  4278  0DD5  0140               	movlb	0	; select bank0
  4279  0DD6  0828               	movf	?___ftmul,w
  4280  0DD7  00B8               	movwf	?_fround
  4281  0DD8  0829               	movf	?___ftmul+1,w
  4282  0DD9  00B9               	movwf	?_fround+1
  4283  0DDA  082A               	movf	?___ftmul+2,w
  4284  0DDB  00BA               	movwf	?_fround+2
  4285  0DDC  0008               	return
  4286  0DDD                     l2035:	
  4287                           
  4288                           ;doprnt.c: 415: else if(prec > 10)
  4289  0DDD  300B               	movlw	11
  4290  0DDE  0245               	subwf	fround@prec,w
  4291  0DDF  1C03               	skipc
  4292  0DE0  2E55               	goto	l2043
  4293                           
  4294                           ;doprnt.c: 416: return 0.5 * _npowers_[prec/10+9] * _npowers_[prec%10];
  4295  0DE1  0845               	movf	fround@prec,w
  4296  0DE2  00BB               	movwf	??_fround
  4297  0DE3  01BC               	clrf	??_fround+1
  4298  0DE4  083B               	movf	??_fround,w
  4299  0DE5  00F2               	movwf	___awmod@dividend
  4300  0DE6  083C               	movf	??_fround+1,w
  4301  0DE7  00F3               	movwf	___awmod@dividend+1
  4302  0DE8  300A               	movlw	10
  4303  0DE9  00F0               	movwf	___awmod@divisor
  4304  0DEA  3000               	movlw	0
  4305  0DEB  00F1               	movwf	___awmod@divisor+1
  4306  0DEC  3195  25FD  318D   	fcall	___awmod
  4307  0DEF  0871               	movf	?___awmod+1,w
  4308  0DF0  0140               	movlb	0	; select bank0
  4309  0DF1  00A5               	movwf	___wmul@multiplier+1
  4310  0DF2  0870               	movf	?___awmod,w
  4311  0DF3  00A4               	movwf	___wmul@multiplier
  4312  0DF4  3003               	movlw	3
  4313  0DF5  00A6               	movwf	___wmul@multiplicand
  4314  0DF6  3000               	movlw	0
  4315  0DF7  00A7               	movwf	___wmul@multiplicand+1
  4316  0DF8  3194  24C9  318D   	fcall	___wmul
  4317  0DFB  0140               	movlb	0	; select bank0
  4318  0DFC  0825               	movf	?___wmul+1,w
  4319  0DFD  0085               	movwf	5
  4320  0DFE  0824               	movf	?___wmul,w
  4321  0DFF  0084               	movwf	4
  4322  0E00  3000               	movlw	low (__npowers_| (0+32768))
  4323  0E01  0784               	addwf	4,f
  4324  0E02  3098               	movlw	high (__npowers_| (0+32768))
  4325  0E03  3D85               	addwfc	5,f
  4326  0E04  3F00               	moviw [0]fsr0
  4327  0E05  00A8               	movwf	___ftmul@f1
  4328  0E06  3F01               	moviw [1]fsr0
  4329  0E07  00A9               	movwf	___ftmul@f1+1
  4330  0E08  3F02               	moviw [2]fsr0
  4331  0E09  00AA               	movwf	___ftmul@f1+2
  4332  0E0A  300A               	movlw	10
  4333  0E0B  00F7               	movwf	___awdiv@divisor
  4334  0E0C  3000               	movlw	0
  4335  0E0D  00F8               	movwf	___awdiv@divisor+1
  4336  0E0E  0845               	movf	fround@prec,w
  4337  0E0F  00BD               	movwf	??_fround+2
  4338  0E10  01BE               	clrf	??_fround+3
  4339  0E11  083D               	movf	??_fround+2,w
  4340  0E12  00F9               	movwf	___awdiv@dividend
  4341  0E13  083E               	movf	??_fround+3,w
  4342  0E14  00FA               	movwf	___awdiv@dividend+1
  4343  0E15  3196  2694  318D   	fcall	___awdiv
  4344  0E18  0877               	movf	?___awdiv,w
  4345  0E19  3E09               	addlw	9
  4346  0E1A  0140               	movlb	0	; select bank0
  4347  0E1B  00A4               	movwf	___wmul@multiplier
  4348  0E1C  3000               	movlw	0
  4349  0E1D  3D78               	addwfc	?___awdiv+1,w
  4350  0E1E  00A5               	movwf	___wmul@multiplier+1
  4351  0E1F  3003               	movlw	3
  4352  0E20  00A6               	movwf	___wmul@multiplicand
  4353  0E21  3000               	movlw	0
  4354  0E22  00A7               	movwf	___wmul@multiplicand+1
  4355  0E23  3194  24C9  318D   	fcall	___wmul
  4356  0E26  0140               	movlb	0	; select bank0
  4357  0E27  0825               	movf	?___wmul+1,w
  4358  0E28  0085               	movwf	5
  4359  0E29  0824               	movf	?___wmul,w
  4360  0E2A  0084               	movwf	4
  4361  0E2B  3000               	movlw	low (__npowers_| (0+32768))
  4362  0E2C  0784               	addwf	4,f
  4363  0E2D  3098               	movlw	high (__npowers_| (0+32768))
  4364  0E2E  3D85               	addwfc	5,f
  4365  0E2F  3F00               	moviw [0]fsr0
  4366  0E30  00AB               	movwf	___ftmul@f2
  4367  0E31  3F01               	moviw [1]fsr0
  4368  0E32  00AC               	movwf	___ftmul@f2+1
  4369  0E33  3F02               	moviw [2]fsr0
  4370  0E34  00AD               	movwf	___ftmul@f2+2
  4371  0E35  318A  2256  318D   	fcall	___ftmul
  4372  0E38  0140               	movlb	0	; select bank0
  4373  0E39  0828               	movf	?___ftmul,w
  4374  0E3A  00C2               	movwf	_fround$947
  4375  0E3B  0829               	movf	?___ftmul+1,w
  4376  0E3C  00C3               	movwf	_fround$947+1
  4377  0E3D  082A               	movf	?___ftmul+2,w
  4378  0E3E  00C4               	movwf	_fround$947+2
  4379                           
  4380                           ;doprnt.c: 416: return 0.5 * _npowers_[prec/10+9] * _npowers_[prec%10];
  4381  0E3F  3000               	movlw	0
  4382  0E40  00A8               	movwf	___ftmul@f1
  4383  0E41  3000               	movlw	0
  4384  0E42  00A9               	movwf	___ftmul@f1+1
  4385  0E43  303F               	movlw	63
  4386  0E44  00AA               	movwf	___ftmul@f1+2
  4387  0E45  0842               	movf	_fround$947,w
  4388  0E46  00AB               	movwf	___ftmul@f2
  4389  0E47  0843               	movf	_fround$947+1,w
  4390  0E48  00AC               	movwf	___ftmul@f2+1
  4391  0E49  0844               	movf	_fround$947+2,w
  4392  0E4A  00AD               	movwf	___ftmul@f2+2
  4393  0E4B  318A  2256         	fcall	___ftmul
  4394  0E4D  0140               	movlb	0	; select bank0
  4395  0E4E  0828               	movf	?___ftmul,w
  4396  0E4F  00B8               	movwf	?_fround
  4397  0E50  0829               	movf	?___ftmul+1,w
  4398  0E51  00B9               	movwf	?_fround+1
  4399  0E52  082A               	movf	?___ftmul+2,w
  4400  0E53  00BA               	movwf	?_fround+2
  4401  0E54  0008               	return
  4402  0E55                     l2043:	
  4403                           
  4404                           ;doprnt.c: 417: return 0.5 * _npowers_[prec];
  4405  0E55  3000               	movlw	0
  4406  0E56  00A8               	movwf	___ftmul@f1
  4407  0E57  3000               	movlw	0
  4408  0E58  00A9               	movwf	___ftmul@f1+1
  4409  0E59  303F               	movlw	63
  4410  0E5A  00AA               	movwf	___ftmul@f1+2
  4411  0E5B  0845               	movf	fround@prec,w
  4412  0E5C  00BB               	movwf	??_fround
  4413  0E5D  01BC               	clrf	??_fround+1
  4414  0E5E  083B               	movf	??_fround,w
  4415  0E5F  00A4               	movwf	___wmul@multiplier
  4416  0E60  083C               	movf	??_fround+1,w
  4417  0E61  00A5               	movwf	___wmul@multiplier+1
  4418  0E62  3003               	movlw	3
  4419  0E63  00A6               	movwf	___wmul@multiplicand
  4420  0E64  3000               	movlw	0
  4421  0E65  00A7               	movwf	___wmul@multiplicand+1
  4422  0E66  3194  24C9  318D   	fcall	___wmul
  4423  0E69  0140               	movlb	0	; select bank0
  4424  0E6A  0825               	movf	?___wmul+1,w
  4425  0E6B  0085               	movwf	5
  4426  0E6C  0824               	movf	?___wmul,w
  4427  0E6D  0084               	movwf	4
  4428  0E6E  3000               	movlw	low (__npowers_| (0+32768))
  4429  0E6F  0784               	addwf	4,f
  4430  0E70  3098               	movlw	high (__npowers_| (0+32768))
  4431  0E71  3D85               	addwfc	5,f
  4432  0E72  3F00               	moviw [0]fsr0
  4433  0E73  00AB               	movwf	___ftmul@f2
  4434  0E74  3F01               	moviw [1]fsr0
  4435  0E75  00AC               	movwf	___ftmul@f2+1
  4436  0E76  3F02               	moviw [2]fsr0
  4437  0E77  00AD               	movwf	___ftmul@f2+2
  4438  0E78  318A  2256         	fcall	___ftmul
  4439  0E7A  0140               	movlb	0	; select bank0
  4440  0E7B  0828               	movf	?___ftmul,w
  4441  0E7C  00B8               	movwf	?_fround
  4442  0E7D  0829               	movf	?___ftmul+1,w
  4443  0E7E  00B9               	movwf	?_fround+1
  4444  0E7F  082A               	movf	?___ftmul+2,w
  4445  0E80  00BA               	movwf	?_fround+2
  4446  0E81  0008               	return
  4447  0E82                     __end_of_fround:	
  4448                           
  4449                           	psect	text5
  4450  14C9                     __ptext5:	
  4451 ;; *************** function ___wmul *****************
  4452 ;; Defined at:
  4453 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\Umul16.c"
  4454 ;; Parameters:    Size  Location     Type
  4455 ;;  multiplier      2    4[BANK0 ] unsigned int 
  4456 ;;  multiplicand    2    6[BANK0 ] unsigned int 
  4457 ;; Auto vars:     Size  Location     Type
  4458 ;;  product         2   12[COMMON] unsigned int 
  4459 ;; Return value:  Size  Location     Type
  4460 ;;                  2    4[BANK0 ] unsigned int 
  4461 ;; Registers used:
  4462 ;;		wreg, status,2, status,0
  4463 ;; Tracked objects:
  4464 ;;		On entry : 0/0
  4465 ;;		On exit  : 0/0
  4466 ;;		Unchanged: 0/0
  4467 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
  4468 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  4469 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  4470 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  4471 ;;      Totals:         2       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  4472 ;;Total ram usage:        6 bytes
  4473 ;; Hardware stack levels used:    1
  4474 ;; This function calls:
  4475 ;;		Nothing
  4476 ;; This function is called by:
  4477 ;;		_fround
  4478 ;;		_scale
  4479 ;;		_sprintf
  4480 ;; This function uses a non-reentrant model
  4481 ;;
  4482                           
  4483                           
  4484                           ;psect for function ___wmul
  4485  14C9                     ___wmul:	
  4486                           
  4487                           ;incstack = 0
  4488                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  4489  14C9  01FC               	clrf	___wmul@product
  4490  14CA  01FD               	clrf	___wmul@product+1
  4491  14CB                     l1765:	
  4492  14CB  0140               	movlb	0	; select bank0
  4493  14CC  1C24               	btfss	___wmul@multiplier,0
  4494  14CD  2CD2               	goto	l272
  4495  14CE  0826               	movf	___wmul@multiplicand,w
  4496  14CF  07FC               	addwf	___wmul@product,f
  4497  14D0  0827               	movf	___wmul@multiplicand+1,w
  4498  14D1  3DFD               	addwfc	___wmul@product+1,f
  4499  14D2                     l272:	
  4500  14D2  3001               	movlw	1
  4501  14D3                     u2085:	
  4502  14D3  35A6               	lslf	___wmul@multiplicand,f
  4503  14D4  0DA7               	rlf	___wmul@multiplicand+1,f
  4504  14D5  0B89               	decfsz	9,f
  4505  14D6  2CD3               	goto	u2085
  4506  14D7  3001               	movlw	1
  4507  14D8                     u2095:	
  4508  14D8  36A5               	lsrf	___wmul@multiplier+1,f
  4509  14D9  0CA4               	rrf	___wmul@multiplier,f
  4510  14DA  0B89               	decfsz	9,f
  4511  14DB  2CD8               	goto	u2095
  4512  14DC  0824               	movf	___wmul@multiplier,w
  4513  14DD  0425               	iorwf	___wmul@multiplier+1,w
  4514  14DE  1D03               	btfss	3,2
  4515  14DF  2CCB               	goto	l1765
  4516  14E0  087D               	movf	___wmul@product+1,w
  4517  14E1  00A5               	movwf	?___wmul+1
  4518  14E2  087C               	movf	___wmul@product,w
  4519  14E3  00A4               	movwf	?___wmul
  4520  14E4  0008               	return
  4521  14E5                     __end_of___wmul:	
  4522                           
  4523                           	psect	text6
  4524  0A56                     __ptext6:	
  4525 ;; *************** function ___ftmul *****************
  4526 ;; Defined at:
  4527 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\ftmul.c"
  4528 ;; Parameters:    Size  Location     Type
  4529 ;;  f1              3    8[BANK0 ] float 
  4530 ;;  f2              3   11[BANK0 ] float 
  4531 ;; Auto vars:     Size  Location     Type
  4532 ;;  f3_as_produc    3   19[BANK0 ] unsigned um
  4533 ;;  sign            1   23[BANK0 ] unsigned char 
  4534 ;;  cntr            1   22[BANK0 ] unsigned char 
  4535 ;;  exp             1   18[BANK0 ] unsigned char 
  4536 ;; Return value:  Size  Location     Type
  4537 ;;                  3    8[BANK0 ] float 
  4538 ;; Registers used:
  4539 ;;		wreg, status,2, status,0, pclath, cstack
  4540 ;; Tracked objects:
  4541 ;;		On entry : 0/0
  4542 ;;		On exit  : 0/0
  4543 ;;		Unchanged: 0/0
  4544 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
  4545 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  4546 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  4547 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  4548 ;;      Totals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  4549 ;;Total ram usage:       16 bytes
  4550 ;; Hardware stack levels used:    1
  4551 ;; Hardware stack levels required when called:    1
  4552 ;; This function calls:
  4553 ;;		___ftpack
  4554 ;; This function is called by:
  4555 ;;		_main
  4556 ;;		_fround
  4557 ;;		_scale
  4558 ;;		_sprintf
  4559 ;; This function uses a non-reentrant model
  4560 ;;
  4561                           
  4562                           
  4563                           ;psect for function ___ftmul
  4564  0A56                     ___ftmul:	
  4565                           
  4566                           ;incstack = 0
  4567                           ; Regs used in ___ftmul: [wreg+status,2+status,0+pclath+cstack]
  4568  0A56  0140               	movlb	0	; select bank0
  4569  0A57  0828               	movf	___ftmul@f1,w
  4570  0A58  00AE               	movwf	??___ftmul
  4571  0A59  0829               	movf	___ftmul@f1+1,w
  4572  0A5A  00AF               	movwf	??___ftmul+1
  4573  0A5B  082A               	movf	___ftmul@f1+2,w
  4574  0A5C  00B0               	movwf	??___ftmul+2
  4575  0A5D  1003               	clrc
  4576  0A5E  0D2F               	rlf	??___ftmul+1,w
  4577  0A5F  0D30               	rlf	??___ftmul+2,w
  4578  0A60  00B1               	movwf	??___ftmul+3
  4579  0A61  0831               	movf	??___ftmul+3,w
  4580  0A62  00B2               	movwf	___ftmul@exp
  4581  0A63  0832               	movf	___ftmul@exp,w
  4582  0A64  1D03               	btfss	3,2
  4583  0A65  2A6D               	goto	l1935
  4584  0A66  3000               	movlw	0
  4585  0A67  00A8               	movwf	?___ftmul
  4586  0A68  3000               	movlw	0
  4587  0A69  00A9               	movwf	?___ftmul+1
  4588  0A6A  3000               	movlw	0
  4589  0A6B  00AA               	movwf	?___ftmul+2
  4590  0A6C  0008               	return
  4591  0A6D                     l1935:	
  4592  0A6D  082B               	movf	___ftmul@f2,w
  4593  0A6E  00AE               	movwf	??___ftmul
  4594  0A6F  082C               	movf	___ftmul@f2+1,w
  4595  0A70  00AF               	movwf	??___ftmul+1
  4596  0A71  082D               	movf	___ftmul@f2+2,w
  4597  0A72  00B0               	movwf	??___ftmul+2
  4598  0A73  1003               	clrc
  4599  0A74  0D2F               	rlf	??___ftmul+1,w
  4600  0A75  0D30               	rlf	??___ftmul+2,w
  4601  0A76  00B1               	movwf	??___ftmul+3
  4602  0A77  0831               	movf	??___ftmul+3,w
  4603  0A78  00B7               	movwf	___ftmul@sign
  4604  0A79  0837               	movf	___ftmul@sign,w
  4605  0A7A  1D03               	btfss	3,2
  4606  0A7B  2A83               	goto	l1941
  4607  0A7C  3000               	movlw	0
  4608  0A7D  00A8               	movwf	?___ftmul
  4609  0A7E  3000               	movlw	0
  4610  0A7F  00A9               	movwf	?___ftmul+1
  4611  0A80  3000               	movlw	0
  4612  0A81  00AA               	movwf	?___ftmul+2
  4613  0A82  0008               	return
  4614  0A83                     l1941:	
  4615  0A83  0837               	movf	___ftmul@sign,w
  4616  0A84  3E7B               	addlw	123
  4617  0A85  00AE               	movwf	??___ftmul
  4618  0A86  082E               	movf	??___ftmul,w
  4619  0A87  07B2               	addwf	___ftmul@exp,f
  4620  0A88  0828               	movf	___ftmul@f1,w
  4621  0A89  00AE               	movwf	??___ftmul
  4622  0A8A  0829               	movf	___ftmul@f1+1,w
  4623  0A8B  00AF               	movwf	??___ftmul+1
  4624  0A8C  082A               	movf	___ftmul@f1+2,w
  4625  0A8D  00B0               	movwf	??___ftmul+2
  4626  0A8E  3010               	movlw	16
  4627  0A8F                     u2555:	
  4628  0A8F  36B0               	lsrf	??___ftmul+2,f
  4629  0A90  0CAF               	rrf	??___ftmul+1,f
  4630  0A91  0CAE               	rrf	??___ftmul,f
  4631  0A92  0B89               	decfsz	9,f
  4632  0A93  2A8F               	goto	u2555
  4633  0A94  082E               	movf	??___ftmul,w
  4634  0A95  00B1               	movwf	??___ftmul+3
  4635  0A96  0831               	movf	??___ftmul+3,w
  4636  0A97  00B7               	movwf	___ftmul@sign
  4637  0A98  082B               	movf	___ftmul@f2,w
  4638  0A99  00AE               	movwf	??___ftmul
  4639  0A9A  082C               	movf	___ftmul@f2+1,w
  4640  0A9B  00AF               	movwf	??___ftmul+1
  4641  0A9C  082D               	movf	___ftmul@f2+2,w
  4642  0A9D  00B0               	movwf	??___ftmul+2
  4643  0A9E  3010               	movlw	16
  4644  0A9F                     u2565:	
  4645  0A9F  36B0               	lsrf	??___ftmul+2,f
  4646  0AA0  0CAF               	rrf	??___ftmul+1,f
  4647  0AA1  0CAE               	rrf	??___ftmul,f
  4648  0AA2  0B89               	decfsz	9,f
  4649  0AA3  2A9F               	goto	u2565
  4650  0AA4  082E               	movf	??___ftmul,w
  4651  0AA5  00B1               	movwf	??___ftmul+3
  4652  0AA6  0831               	movf	??___ftmul+3,w
  4653  0AA7  06B7               	xorwf	___ftmul@sign,f
  4654  0AA8  3080               	movlw	128
  4655  0AA9  00AE               	movwf	??___ftmul
  4656  0AAA  082E               	movf	??___ftmul,w
  4657  0AAB  05B7               	andwf	___ftmul@sign,f
  4658  0AAC  17A9               	bsf	___ftmul@f1+1,7
  4659  0AAD  17AC               	bsf	___ftmul@f2+1,7
  4660  0AAE  30FF               	movlw	255
  4661  0AAF  05AB               	andwf	___ftmul@f2,f
  4662  0AB0  30FF               	movlw	255
  4663  0AB1  05AC               	andwf	___ftmul@f2+1,f
  4664  0AB2  3000               	movlw	0
  4665  0AB3  05AD               	andwf	___ftmul@f2+2,f
  4666  0AB4  3000               	movlw	0
  4667  0AB5  00B3               	movwf	___ftmul@f3_as_product
  4668  0AB6  3000               	movlw	0
  4669  0AB7  00B4               	movwf	___ftmul@f3_as_product+1
  4670  0AB8  3000               	movlw	0
  4671  0AB9  00B5               	movwf	___ftmul@f3_as_product+2
  4672  0ABA  3007               	movlw	7
  4673  0ABB  00AE               	movwf	??___ftmul
  4674  0ABC  082E               	movf	??___ftmul,w
  4675  0ABD  00B6               	movwf	___ftmul@cntr
  4676  0ABE                     l1953:	
  4677  0ABE  1C28               	btfss	___ftmul@f1,0
  4678  0ABF  2AC6               	goto	l1957
  4679  0AC0  082B               	movf	___ftmul@f2,w
  4680  0AC1  07B3               	addwf	___ftmul@f3_as_product,f
  4681  0AC2  082C               	movf	___ftmul@f2+1,w
  4682  0AC3  3DB4               	addwfc	___ftmul@f3_as_product+1,f
  4683  0AC4  082D               	movf	___ftmul@f2+2,w
  4684  0AC5  3DB5               	addwfc	___ftmul@f3_as_product+2,f
  4685  0AC6                     l1957:	
  4686  0AC6  3001               	movlw	1
  4687  0AC7                     u2585:	
  4688  0AC7  36AA               	lsrf	___ftmul@f1+2,f
  4689  0AC8  0CA9               	rrf	___ftmul@f1+1,f
  4690  0AC9  0CA8               	rrf	___ftmul@f1,f
  4691  0ACA  0B89               	decfsz	9,f
  4692  0ACB  2AC7               	goto	u2585
  4693  0ACC  3001               	movlw	1
  4694  0ACD                     u2595:	
  4695  0ACD  35AB               	lslf	___ftmul@f2,f
  4696  0ACE  0DAC               	rlf	___ftmul@f2+1,f
  4697  0ACF  0DAD               	rlf	___ftmul@f2+2,f
  4698  0AD0  0B89               	decfsz	9,f
  4699  0AD1  2ACD               	goto	u2595
  4700  0AD2  3001               	movlw	1
  4701  0AD3  02B6               	subwf	___ftmul@cntr,f
  4702  0AD4  1D03               	btfss	3,2
  4703  0AD5  2ABE               	goto	l1953
  4704  0AD6  3009               	movlw	9
  4705  0AD7  00AE               	movwf	??___ftmul
  4706  0AD8  082E               	movf	??___ftmul,w
  4707  0AD9  00B6               	movwf	___ftmul@cntr
  4708  0ADA                     l1965:	
  4709  0ADA  1C28               	btfss	___ftmul@f1,0
  4710  0ADB  2AE2               	goto	l1969
  4711  0ADC  082B               	movf	___ftmul@f2,w
  4712  0ADD  07B3               	addwf	___ftmul@f3_as_product,f
  4713  0ADE  082C               	movf	___ftmul@f2+1,w
  4714  0ADF  3DB4               	addwfc	___ftmul@f3_as_product+1,f
  4715  0AE0  082D               	movf	___ftmul@f2+2,w
  4716  0AE1  3DB5               	addwfc	___ftmul@f3_as_product+2,f
  4717  0AE2                     l1969:	
  4718  0AE2  3001               	movlw	1
  4719  0AE3                     u2625:	
  4720  0AE3  36AA               	lsrf	___ftmul@f1+2,f
  4721  0AE4  0CA9               	rrf	___ftmul@f1+1,f
  4722  0AE5  0CA8               	rrf	___ftmul@f1,f
  4723  0AE6  0B89               	decfsz	9,f
  4724  0AE7  2AE3               	goto	u2625
  4725  0AE8  3001               	movlw	1
  4726  0AE9                     u2635:	
  4727  0AE9  36B5               	lsrf	___ftmul@f3_as_product+2,f
  4728  0AEA  0CB4               	rrf	___ftmul@f3_as_product+1,f
  4729  0AEB  0CB3               	rrf	___ftmul@f3_as_product,f
  4730  0AEC  0B89               	decfsz	9,f
  4731  0AED  2AE9               	goto	u2635
  4732  0AEE  3001               	movlw	1
  4733  0AEF  02B6               	subwf	___ftmul@cntr,f
  4734  0AF0  1D03               	btfss	3,2
  4735  0AF1  2ADA               	goto	l1965
  4736  0AF2  0833               	movf	___ftmul@f3_as_product,w
  4737  0AF3  00F0               	movwf	___ftpack@arg
  4738  0AF4  0834               	movf	___ftmul@f3_as_product+1,w
  4739  0AF5  00F1               	movwf	___ftpack@arg+1
  4740  0AF6  0835               	movf	___ftmul@f3_as_product+2,w
  4741  0AF7  00F2               	movwf	___ftpack@arg+2
  4742  0AF8  0832               	movf	___ftmul@exp,w
  4743  0AF9  00AE               	movwf	??___ftmul
  4744  0AFA  082E               	movf	??___ftmul,w
  4745  0AFB  00F3               	movwf	___ftpack@exp
  4746  0AFC  0837               	movf	___ftmul@sign,w
  4747  0AFD  00AF               	movwf	??___ftmul+1
  4748  0AFE  082F               	movf	??___ftmul+1,w
  4749  0AFF  00F4               	movwf	___ftpack@sign
  4750  0B00  3188  2009         	fcall	___ftpack
  4751  0B02  0870               	movf	?___ftpack,w
  4752  0B03  0140               	movlb	0	; select bank0
  4753  0B04  00A8               	movwf	?___ftmul
  4754  0B05  0871               	movf	?___ftpack+1,w
  4755  0B06  00A9               	movwf	?___ftmul+1
  4756  0B07  0872               	movf	?___ftpack+2,w
  4757  0B08  00AA               	movwf	?___ftmul+2
  4758  0B09  0008               	return
  4759  0B0A                     __end_of___ftmul:	
  4760                           
  4761                           	psect	text7
  4762  15FD                     __ptext7:	
  4763 ;; *************** function ___awmod *****************
  4764 ;; Defined at:
  4765 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\awmod.c"
  4766 ;; Parameters:    Size  Location     Type
  4767 ;;  divisor         2    0[COMMON] int 
  4768 ;;  dividend        2    2[COMMON] int 
  4769 ;; Auto vars:     Size  Location     Type
  4770 ;;  sign            1    6[COMMON] unsigned char 
  4771 ;;  counter         1    5[COMMON] unsigned char 
  4772 ;; Return value:  Size  Location     Type
  4773 ;;                  2    0[COMMON] int 
  4774 ;; Registers used:
  4775 ;;		wreg, status,2, status,0
  4776 ;; Tracked objects:
  4777 ;;		On entry : 0/0
  4778 ;;		On exit  : 0/0
  4779 ;;		Unchanged: 0/0
  4780 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
  4781 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  4782 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  4783 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  4784 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  4785 ;;Total ram usage:        7 bytes
  4786 ;; Hardware stack levels used:    1
  4787 ;; This function calls:
  4788 ;;		Nothing
  4789 ;; This function is called by:
  4790 ;;		_fround
  4791 ;;		_scale
  4792 ;; This function uses a non-reentrant model
  4793 ;;
  4794                           
  4795                           
  4796                           ;psect for function ___awmod
  4797  15FD                     ___awmod:	
  4798                           
  4799                           ;incstack = 0
  4800                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  4801  15FD  01F6               	clrf	___awmod@sign
  4802  15FE  1FF3               	btfss	___awmod@dividend+1,7
  4803  15FF  2E07               	goto	l1829
  4804  1600  09F2               	comf	___awmod@dividend,f
  4805  1601  09F3               	comf	___awmod@dividend+1,f
  4806  1602  0AF2               	incf	___awmod@dividend,f
  4807  1603  1903               	skipnz
  4808  1604  0AF3               	incf	___awmod@dividend+1,f
  4809  1605  01F6               	clrf	___awmod@sign
  4810  1606  0AF6               	incf	___awmod@sign,f
  4811  1607                     l1829:	
  4812  1607  1FF1               	btfss	___awmod@divisor+1,7
  4813  1608  2E0E               	goto	l1833
  4814  1609  09F0               	comf	___awmod@divisor,f
  4815  160A  09F1               	comf	___awmod@divisor+1,f
  4816  160B  0AF0               	incf	___awmod@divisor,f
  4817  160C  1903               	skipnz
  4818  160D  0AF1               	incf	___awmod@divisor+1,f
  4819  160E                     l1833:	
  4820  160E  0870               	movf	___awmod@divisor,w
  4821  160F  0471               	iorwf	___awmod@divisor+1,w
  4822  1610  1903               	btfsc	3,2
  4823  1611  2E35               	goto	l1851
  4824  1612  01F5               	clrf	___awmod@counter
  4825  1613  0AF5               	incf	___awmod@counter,f
  4826  1614                     l1841:	
  4827  1614  1BF1               	btfsc	___awmod@divisor+1,7
  4828  1615  2E20               	goto	l1843
  4829  1616  3001               	movlw	1
  4830  1617                     u2245:	
  4831  1617  35F0               	lslf	___awmod@divisor,f
  4832  1618  0DF1               	rlf	___awmod@divisor+1,f
  4833  1619  0B89               	decfsz	9,f
  4834  161A  2E17               	goto	u2245
  4835  161B  3001               	movlw	1
  4836  161C  00F4               	movwf	??___awmod
  4837  161D  0874               	movf	??___awmod,w
  4838  161E  07F5               	addwf	___awmod@counter,f
  4839  161F  2E14               	goto	l1841
  4840  1620                     l1843:	
  4841  1620  0871               	movf	___awmod@divisor+1,w
  4842  1621  0273               	subwf	___awmod@dividend+1,w
  4843  1622  1D03               	skipz
  4844  1623  2E26               	goto	u2265
  4845  1624  0870               	movf	___awmod@divisor,w
  4846  1625  0272               	subwf	___awmod@dividend,w
  4847  1626                     u2265:	
  4848  1626  1C03               	skipc
  4849  1627  2E2C               	goto	l1847
  4850  1628  0870               	movf	___awmod@divisor,w
  4851  1629  02F2               	subwf	___awmod@dividend,f
  4852  162A  0871               	movf	___awmod@divisor+1,w
  4853  162B  3BF3               	subwfb	___awmod@dividend+1,f
  4854  162C                     l1847:	
  4855  162C  3001               	movlw	1
  4856  162D                     u2275:	
  4857  162D  36F1               	lsrf	___awmod@divisor+1,f
  4858  162E  0CF0               	rrf	___awmod@divisor,f
  4859  162F  0B89               	decfsz	9,f
  4860  1630  2E2D               	goto	u2275
  4861  1631  3001               	movlw	1
  4862  1632  02F5               	subwf	___awmod@counter,f
  4863  1633  1D03               	btfss	3,2
  4864  1634  2E20               	goto	l1843
  4865  1635                     l1851:	
  4866  1635  0876               	movf	___awmod@sign,w
  4867  1636  1903               	btfsc	3,2
  4868  1637  2E3D               	goto	l1855
  4869  1638  09F2               	comf	___awmod@dividend,f
  4870  1639  09F3               	comf	___awmod@dividend+1,f
  4871  163A  0AF2               	incf	___awmod@dividend,f
  4872  163B  1903               	skipnz
  4873  163C  0AF3               	incf	___awmod@dividend+1,f
  4874  163D                     l1855:	
  4875  163D  0873               	movf	___awmod@dividend+1,w
  4876  163E  00F1               	movwf	?___awmod+1
  4877  163F  0872               	movf	___awmod@dividend,w
  4878  1640  00F0               	movwf	?___awmod
  4879  1641  0008               	return
  4880  1642                     __end_of___awmod:	
  4881                           
  4882                           	psect	text8
  4883  1694                     __ptext8:	
  4884 ;; *************** function ___awdiv *****************
  4885 ;; Defined at:
  4886 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\awdiv.c"
  4887 ;; Parameters:    Size  Location     Type
  4888 ;;  divisor         2    7[COMMON] int 
  4889 ;;  dividend        2    9[COMMON] int 
  4890 ;; Auto vars:     Size  Location     Type
  4891 ;;  quotient        2    2[BANK0 ] int 
  4892 ;;  sign            1    1[BANK0 ] unsigned char 
  4893 ;;  counter         1    0[BANK0 ] unsigned char 
  4894 ;; Return value:  Size  Location     Type
  4895 ;;                  2    7[COMMON] int 
  4896 ;; Registers used:
  4897 ;;		wreg, status,2, status,0
  4898 ;; Tracked objects:
  4899 ;;		On entry : 0/0
  4900 ;;		On exit  : 0/0
  4901 ;;		Unchanged: 0/0
  4902 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
  4903 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  4904 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  4905 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  4906 ;;      Totals:         5       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  4907 ;;Total ram usage:        9 bytes
  4908 ;; Hardware stack levels used:    1
  4909 ;; This function calls:
  4910 ;;		Nothing
  4911 ;; This function is called by:
  4912 ;;		_fround
  4913 ;;		_scale
  4914 ;;		_sprintf
  4915 ;; This function uses a non-reentrant model
  4916 ;;
  4917                           
  4918                           
  4919                           ;psect for function ___awdiv
  4920  1694                     ___awdiv:	
  4921                           
  4922                           ;incstack = 0
  4923                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  4924  1694  0140               	movlb	0	; select bank0
  4925  1695  01A1               	clrf	___awdiv@sign
  4926  1696  1FF8               	btfss	___awdiv@divisor+1,7
  4927  1697  2E9F               	goto	l1785
  4928  1698  09F7               	comf	___awdiv@divisor,f
  4929  1699  09F8               	comf	___awdiv@divisor+1,f
  4930  169A  0AF7               	incf	___awdiv@divisor,f
  4931  169B  1903               	skipnz
  4932  169C  0AF8               	incf	___awdiv@divisor+1,f
  4933  169D  01A1               	clrf	___awdiv@sign
  4934  169E  0AA1               	incf	___awdiv@sign,f
  4935  169F                     l1785:	
  4936  169F  1FFA               	btfss	___awdiv@dividend+1,7
  4937  16A0  2EAA               	goto	l1791
  4938  16A1  09F9               	comf	___awdiv@dividend,f
  4939  16A2  09FA               	comf	___awdiv@dividend+1,f
  4940  16A3  0AF9               	incf	___awdiv@dividend,f
  4941  16A4  1903               	skipnz
  4942  16A5  0AFA               	incf	___awdiv@dividend+1,f
  4943  16A6  3001               	movlw	1
  4944  16A7  00FB               	movwf	??___awdiv
  4945  16A8  087B               	movf	??___awdiv,w
  4946  16A9  06A1               	xorwf	___awdiv@sign,f
  4947  16AA                     l1791:	
  4948  16AA  01A2               	clrf	___awdiv@quotient
  4949  16AB  01A3               	clrf	___awdiv@quotient+1
  4950  16AC  0877               	movf	___awdiv@divisor,w
  4951  16AD  0478               	iorwf	___awdiv@divisor+1,w
  4952  16AE  1903               	btfsc	3,2
  4953  16AF  2ED9               	goto	l1813
  4954  16B0  01A0               	clrf	___awdiv@counter
  4955  16B1  0AA0               	incf	___awdiv@counter,f
  4956  16B2                     l1801:	
  4957  16B2  1BF8               	btfsc	___awdiv@divisor+1,7
  4958  16B3  2EBE               	goto	l1803
  4959  16B4  3001               	movlw	1
  4960  16B5                     u2145:	
  4961  16B5  35F7               	lslf	___awdiv@divisor,f
  4962  16B6  0DF8               	rlf	___awdiv@divisor+1,f
  4963  16B7  0B89               	decfsz	9,f
  4964  16B8  2EB5               	goto	u2145
  4965  16B9  3001               	movlw	1
  4966  16BA  00FB               	movwf	??___awdiv
  4967  16BB  087B               	movf	??___awdiv,w
  4968  16BC  07A0               	addwf	___awdiv@counter,f
  4969  16BD  2EB2               	goto	l1801
  4970  16BE                     l1803:	
  4971  16BE  3001               	movlw	1
  4972  16BF                     u2165:	
  4973  16BF  35A2               	lslf	___awdiv@quotient,f
  4974  16C0  0DA3               	rlf	___awdiv@quotient+1,f
  4975  16C1  0B89               	decfsz	9,f
  4976  16C2  2EBF               	goto	u2165
  4977  16C3  0878               	movf	___awdiv@divisor+1,w
  4978  16C4  027A               	subwf	___awdiv@dividend+1,w
  4979  16C5  1D03               	skipz
  4980  16C6  2EC9               	goto	u2175
  4981  16C7  0877               	movf	___awdiv@divisor,w
  4982  16C8  0279               	subwf	___awdiv@dividend,w
  4983  16C9                     u2175:	
  4984  16C9  1C03               	skipc
  4985  16CA  2ED0               	goto	l1809
  4986  16CB  0877               	movf	___awdiv@divisor,w
  4987  16CC  02F9               	subwf	___awdiv@dividend,f
  4988  16CD  0878               	movf	___awdiv@divisor+1,w
  4989  16CE  3BFA               	subwfb	___awdiv@dividend+1,f
  4990  16CF  1422               	bsf	___awdiv@quotient,0
  4991  16D0                     l1809:	
  4992  16D0  3001               	movlw	1
  4993  16D1                     u2185:	
  4994  16D1  36F8               	lsrf	___awdiv@divisor+1,f
  4995  16D2  0CF7               	rrf	___awdiv@divisor,f
  4996  16D3  0B89               	decfsz	9,f
  4997  16D4  2ED1               	goto	u2185
  4998  16D5  3001               	movlw	1
  4999  16D6  02A0               	subwf	___awdiv@counter,f
  5000  16D7  1D03               	btfss	3,2
  5001  16D8  2EBE               	goto	l1803
  5002  16D9                     l1813:	
  5003  16D9  0821               	movf	___awdiv@sign,w
  5004  16DA  1903               	btfsc	3,2
  5005  16DB  2EE1               	goto	l1817
  5006  16DC  09A2               	comf	___awdiv@quotient,f
  5007  16DD  09A3               	comf	___awdiv@quotient+1,f
  5008  16DE  0AA2               	incf	___awdiv@quotient,f
  5009  16DF  1903               	skipnz
  5010  16E0  0AA3               	incf	___awdiv@quotient+1,f
  5011  16E1                     l1817:	
  5012  16E1  0823               	movf	___awdiv@quotient+1,w
  5013  16E2  00F8               	movwf	?___awdiv+1
  5014  16E3  0822               	movf	___awdiv@quotient,w
  5015  16E4  00F7               	movwf	?___awdiv
  5016  16E5  0008               	return
  5017  16E6                     __end_of___awdiv:	
  5018                           
  5019                           	psect	text9
  5020  0017                     __ptext9:	
  5021 ;; *************** function __tdiv_to_l_ *****************
  5022 ;; Defined at:
  5023 ;;		line 60 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\ftdivl.c"
  5024 ;; Parameters:    Size  Location     Type
  5025 ;;  f1              3    0[COMMON] float 
  5026 ;;  f2              3    3[COMMON] float 
  5027 ;; Auto vars:     Size  Location     Type
  5028 ;;  quot            4    0[BANK0 ] unsigned long 
  5029 ;;  exp1            1    5[BANK0 ] unsigned char 
  5030 ;;  cntr            1    4[BANK0 ] unsigned char 
  5031 ;; Return value:  Size  Location     Type
  5032 ;;                  4    0[COMMON] unsigned long 
  5033 ;; Registers used:
  5034 ;;		wreg, status,2, status,0
  5035 ;; Tracked objects:
  5036 ;;		On entry : 0/0
  5037 ;;		On exit  : 0/0
  5038 ;;		Unchanged: 0/0
  5039 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
  5040 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  5041 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  5042 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  5043 ;;      Totals:        10       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  5044 ;;Total ram usage:       16 bytes
  5045 ;; Hardware stack levels used:    1
  5046 ;; This function calls:
  5047 ;;		Nothing
  5048 ;; This function is called by:
  5049 ;;		_sprintf
  5050 ;; This function uses a non-reentrant model
  5051 ;;
  5052                           
  5053                           
  5054                           ;psect for function __tdiv_to_l_
  5055  0017                     __tdiv_to_l_:	
  5056                           
  5057                           ;incstack = 0
  5058                           ; Regs used in __tdiv_to_l_: [wreg+status,2+status,0]
  5059  0017  0870               	movf	__tdiv_to_l_@f1,w
  5060  0018  00F6               	movwf	??__tdiv_to_l_
  5061  0019  0871               	movf	__tdiv_to_l_@f1+1,w
  5062  001A  00F7               	movwf	??__tdiv_to_l_+1
  5063  001B  0872               	movf	__tdiv_to_l_@f1+2,w
  5064  001C  00F8               	movwf	??__tdiv_to_l_+2
  5065  001D  1003               	clrc
  5066  001E  0D77               	rlf	??__tdiv_to_l_+1,w
  5067  001F  0D78               	rlf	??__tdiv_to_l_+2,w
  5068  0020  00F9               	movwf	??__tdiv_to_l_+3
  5069  0021  0879               	movf	??__tdiv_to_l_+3,w
  5070  0022  0140               	movlb	0	; select bank0
  5071  0023  00A5               	movwf	__tdiv_to_l_@exp1
  5072  0024  0825               	movf	__tdiv_to_l_@exp1,w
  5073  0025  1D03               	btfss	3,2
  5074  0026  2830               	goto	l2105
  5075  0027  3000               	movlw	0
  5076  0028  00F3               	movwf	?__tdiv_to_l_+3
  5077  0029  3000               	movlw	0
  5078  002A  00F2               	movwf	?__tdiv_to_l_+2
  5079  002B  3000               	movlw	0
  5080  002C  00F1               	movwf	?__tdiv_to_l_+1
  5081  002D  3000               	movlw	0
  5082  002E  00F0               	movwf	?__tdiv_to_l_
  5083  002F  0008               	return
  5084  0030                     l2105:	
  5085  0030  0873               	movf	__tdiv_to_l_@f2,w
  5086  0031  00F6               	movwf	??__tdiv_to_l_
  5087  0032  0874               	movf	__tdiv_to_l_@f2+1,w
  5088  0033  00F7               	movwf	??__tdiv_to_l_+1
  5089  0034  0875               	movf	__tdiv_to_l_@f2+2,w
  5090  0035  00F8               	movwf	??__tdiv_to_l_+2
  5091  0036  1003               	clrc
  5092  0037  0D77               	rlf	??__tdiv_to_l_+1,w
  5093  0038  0D78               	rlf	??__tdiv_to_l_+2,w
  5094  0039  00F9               	movwf	??__tdiv_to_l_+3
  5095  003A  0879               	movf	??__tdiv_to_l_+3,w
  5096  003B  00A4               	movwf	__tdiv_to_l_@cntr
  5097  003C  0824               	movf	__tdiv_to_l_@cntr,w
  5098  003D  1D03               	btfss	3,2
  5099  003E  2848               	goto	l507
  5100  003F  3000               	movlw	0
  5101  0040  00F3               	movwf	?__tdiv_to_l_+3
  5102  0041  3000               	movlw	0
  5103  0042  00F2               	movwf	?__tdiv_to_l_+2
  5104  0043  3000               	movlw	0
  5105  0044  00F1               	movwf	?__tdiv_to_l_+1
  5106  0045  3000               	movlw	0
  5107  0046  00F0               	movwf	?__tdiv_to_l_
  5108  0047  0008               	return
  5109  0048                     l507:	
  5110  0048  17F1               	bsf	__tdiv_to_l_@f1+1,7
  5111  0049  30FF               	movlw	255
  5112  004A  05F0               	andwf	__tdiv_to_l_@f1,f
  5113  004B  30FF               	movlw	255
  5114  004C  05F1               	andwf	__tdiv_to_l_@f1+1,f
  5115  004D  3000               	movlw	0
  5116  004E  05F2               	andwf	__tdiv_to_l_@f1+2,f
  5117  004F  17F4               	bsf	__tdiv_to_l_@f2+1,7
  5118  0050  30FF               	movlw	255
  5119  0051  05F3               	andwf	__tdiv_to_l_@f2,f
  5120  0052  30FF               	movlw	255
  5121  0053  05F4               	andwf	__tdiv_to_l_@f2+1,f
  5122  0054  3000               	movlw	0
  5123  0055  05F5               	andwf	__tdiv_to_l_@f2+2,f
  5124  0056  3000               	movlw	0
  5125  0057  00A3               	movwf	__tdiv_to_l_@quot+3
  5126  0058  3000               	movlw	0
  5127  0059  00A2               	movwf	__tdiv_to_l_@quot+2
  5128  005A  3000               	movlw	0
  5129  005B  00A1               	movwf	__tdiv_to_l_@quot+1
  5130  005C  3000               	movlw	0
  5131  005D  00A0               	movwf	__tdiv_to_l_@quot
  5132  005E  307F               	movlw	127
  5133  005F  02A5               	subwf	__tdiv_to_l_@exp1,f
  5134  0060  3098               	movlw	152
  5135  0061  0724               	addwf	__tdiv_to_l_@cntr,w
  5136  0062  00F6               	movwf	??__tdiv_to_l_
  5137  0063  0876               	movf	??__tdiv_to_l_,w
  5138  0064  02A5               	subwf	__tdiv_to_l_@exp1,f
  5139  0065  3018               	movlw	24
  5140  0066  00F6               	movwf	??__tdiv_to_l_
  5141  0067  0876               	movf	??__tdiv_to_l_,w
  5142  0068  00A4               	movwf	__tdiv_to_l_@cntr
  5143  0069                     l2119:	
  5144  0069  3001               	movlw	1
  5145  006A                     u2885:	
  5146  006A  35A0               	lslf	__tdiv_to_l_@quot,f
  5147  006B  0DA1               	rlf	__tdiv_to_l_@quot+1,f
  5148  006C  0DA2               	rlf	__tdiv_to_l_@quot+2,f
  5149  006D  0DA3               	rlf	__tdiv_to_l_@quot+3,f
  5150  006E  0B89               	decfsz	9,f
  5151  006F  286A               	goto	u2885
  5152  0070  0875               	movf	__tdiv_to_l_@f2+2,w
  5153  0071  0272               	subwf	__tdiv_to_l_@f1+2,w
  5154  0072  1D03               	skipz
  5155  0073  287A               	goto	u2895
  5156  0074  0874               	movf	__tdiv_to_l_@f2+1,w
  5157  0075  0271               	subwf	__tdiv_to_l_@f1+1,w
  5158  0076  1D03               	skipz
  5159  0077  287A               	goto	u2895
  5160  0078  0873               	movf	__tdiv_to_l_@f2,w
  5161  0079  0270               	subwf	__tdiv_to_l_@f1,w
  5162  007A                     u2895:	
  5163  007A  1C03               	skipc
  5164  007B  2883               	goto	l2127
  5165  007C  0873               	movf	__tdiv_to_l_@f2,w
  5166  007D  02F0               	subwf	__tdiv_to_l_@f1,f
  5167  007E  0874               	movf	__tdiv_to_l_@f2+1,w
  5168  007F  3BF1               	subwfb	__tdiv_to_l_@f1+1,f
  5169  0080  0875               	movf	__tdiv_to_l_@f2+2,w
  5170  0081  3BF2               	subwfb	__tdiv_to_l_@f1+2,f
  5171  0082  1420               	bsf	__tdiv_to_l_@quot,0
  5172  0083                     l2127:	
  5173  0083  3001               	movlw	1
  5174  0084                     u2905:	
  5175  0084  35F0               	lslf	__tdiv_to_l_@f1,f
  5176  0085  0DF1               	rlf	__tdiv_to_l_@f1+1,f
  5177  0086  0DF2               	rlf	__tdiv_to_l_@f1+2,f
  5178  0087  0B89               	decfsz	9,f
  5179  0088  2884               	goto	u2905
  5180  0089  3001               	movlw	1
  5181  008A  02A4               	subwf	__tdiv_to_l_@cntr,f
  5182  008B  1D03               	btfss	3,2
  5183  008C  2869               	goto	l2119
  5184  008D  1FA5               	btfss	__tdiv_to_l_@exp1,7
  5185  008E  28AB               	goto	l2139
  5186  008F  0825               	movf	__tdiv_to_l_@exp1,w
  5187  0090  3A80               	xorlw	128
  5188  0091  3E97               	addlw	151
  5189  0092  1803               	skipnc
  5190  0093  289D               	goto	l2137
  5191  0094  3000               	movlw	0
  5192  0095  00F3               	movwf	?__tdiv_to_l_+3
  5193  0096  3000               	movlw	0
  5194  0097  00F2               	movwf	?__tdiv_to_l_+2
  5195  0098  3000               	movlw	0
  5196  0099  00F1               	movwf	?__tdiv_to_l_+1
  5197  009A  3000               	movlw	0
  5198  009B  00F0               	movwf	?__tdiv_to_l_
  5199  009C  0008               	return
  5200  009D                     l2137:	
  5201  009D  3001               	movlw	1
  5202  009E                     u2945:	
  5203  009E  36A3               	lsrf	__tdiv_to_l_@quot+3,f
  5204  009F  0CA2               	rrf	__tdiv_to_l_@quot+2,f
  5205  00A0  0CA1               	rrf	__tdiv_to_l_@quot+1,f
  5206  00A1  0CA0               	rrf	__tdiv_to_l_@quot,f
  5207  00A2  0B89               	decfsz	9,f
  5208  00A3  289E               	goto	u2945
  5209  00A4  3001               	movlw	1
  5210  00A5  00F6               	movwf	??__tdiv_to_l_
  5211  00A6  0876               	movf	??__tdiv_to_l_,w
  5212  00A7  07A5               	addwf	__tdiv_to_l_@exp1,f
  5213  00A8  1903               	btfsc	3,2
  5214  00A9  28C4               	goto	l2147
  5215  00AA  289D               	goto	l2137
  5216  00AB                     l2139:	
  5217  00AB  3018               	movlw	24
  5218  00AC  0225               	subwf	__tdiv_to_l_@exp1,w
  5219  00AD  1C03               	skipc
  5220  00AE  28C1               	goto	l517
  5221  00AF  3000               	movlw	0
  5222  00B0  00F3               	movwf	?__tdiv_to_l_+3
  5223  00B1  3000               	movlw	0
  5224  00B2  00F2               	movwf	?__tdiv_to_l_+2
  5225  00B3  3000               	movlw	0
  5226  00B4  00F1               	movwf	?__tdiv_to_l_+1
  5227  00B5  3000               	movlw	0
  5228  00B6  00F0               	movwf	?__tdiv_to_l_
  5229  00B7  0008               	return
  5230  00B8                     l2145:	
  5231  00B8  3001               	movlw	1
  5232  00B9                     u2975:	
  5233  00B9  35A0               	lslf	__tdiv_to_l_@quot,f
  5234  00BA  0DA1               	rlf	__tdiv_to_l_@quot+1,f
  5235  00BB  0DA2               	rlf	__tdiv_to_l_@quot+2,f
  5236  00BC  0DA3               	rlf	__tdiv_to_l_@quot+3,f
  5237  00BD  0B89               	decfsz	9,f
  5238  00BE  28B9               	goto	u2975
  5239  00BF  3001               	movlw	1
  5240  00C0  02A5               	subwf	__tdiv_to_l_@exp1,f
  5241  00C1                     l517:	
  5242  00C1  0825               	movf	__tdiv_to_l_@exp1,w
  5243  00C2  1D03               	btfss	3,2
  5244  00C3  28B8               	goto	l2145
  5245  00C4                     l2147:	
  5246  00C4  0823               	movf	__tdiv_to_l_@quot+3,w
  5247  00C5  00F3               	movwf	?__tdiv_to_l_+3
  5248  00C6  0822               	movf	__tdiv_to_l_@quot+2,w
  5249  00C7  00F2               	movwf	?__tdiv_to_l_+2
  5250  00C8  0821               	movf	__tdiv_to_l_@quot+1,w
  5251  00C9  00F1               	movwf	?__tdiv_to_l_+1
  5252  00CA  0820               	movf	__tdiv_to_l_@quot,w
  5253  00CB  00F0               	movwf	?__tdiv_to_l_
  5254  00CC  0008               	return
  5255  00CD                     __end_of__tdiv_to_l_:	
  5256                           
  5257                           	psect	text10
  5258  0C00                     __ptext10:	
  5259 ;; *************** function __div_to_l_ *****************
  5260 ;; Defined at:
  5261 ;;		line 60 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\fldivl.c"
  5262 ;; Parameters:    Size  Location     Type
  5263 ;;  f1              3    0[COMMON] unsigned long 
  5264 ;;  f2              3    3[COMMON] unsigned long 
  5265 ;; Auto vars:     Size  Location     Type
  5266 ;;  quot            4    0[BANK0 ] unsigned long 
  5267 ;;  exp1            1    5[BANK0 ] unsigned char 
  5268 ;;  cntr            1    4[BANK0 ] unsigned char 
  5269 ;; Return value:  Size  Location     Type
  5270 ;;                  4    0[COMMON] unsigned long 
  5271 ;; Registers used:
  5272 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  5273 ;; Tracked objects:
  5274 ;;		On entry : 0/0
  5275 ;;		On exit  : 0/0
  5276 ;;		Unchanged: 0/0
  5277 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
  5278 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  5279 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  5280 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  5281 ;;      Totals:        14       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  5282 ;;Total ram usage:       20 bytes
  5283 ;; Hardware stack levels used:    1
  5284 ;; This function calls:
  5285 ;;		Nothing
  5286 ;; This function is called by:
  5287 ;;		_sprintf
  5288 ;; This function uses a non-reentrant model
  5289 ;;
  5290                           
  5291                           
  5292                           ;psect for function __div_to_l_
  5293  0C00                     __div_to_l_:	
  5294                           
  5295                           ;incstack = 0
  5296                           ; Regs used in __div_to_l_: [wreg+fsr1l+fsr1h+status,2+status,0]
  5297  0C00  3070               	movlw	low (__div_to_l_@f1| 0)
  5298  0C01  0086               	movwf	6
  5299  0C02  0187               	clrf	7
  5300  0C03  3F40               	moviw [0]fsr1
  5301  0C04  00F6               	movwf	??__div_to_l_
  5302  0C05  3F41               	moviw [1]fsr1
  5303  0C06  00F7               	movwf	??__div_to_l_+1
  5304  0C07  3F42               	moviw [2]fsr1
  5305  0C08  00F8               	movwf	??__div_to_l_+2
  5306  0C09  3F43               	moviw [3]fsr1
  5307  0C0A  00F9               	movwf	??__div_to_l_+3
  5308  0C0B  1003               	clrc
  5309  0C0C  0D78               	rlf	??__div_to_l_+2,w
  5310  0C0D  0D79               	rlf	??__div_to_l_+3,w
  5311  0C0E  00FA               	movwf	??__div_to_l_+4
  5312  0C0F  087A               	movf	??__div_to_l_+4,w
  5313  0C10  0140               	movlb	0	; select bank0
  5314  0C11  00A5               	movwf	__div_to_l_@exp1
  5315  0C12  0825               	movf	__div_to_l_@exp1,w
  5316  0C13  1D03               	btfss	3,2
  5317  0C14  2C1E               	goto	l2157
  5318  0C15  3000               	movlw	0
  5319  0C16  00F3               	movwf	?__div_to_l_+3
  5320  0C17  3000               	movlw	0
  5321  0C18  00F2               	movwf	?__div_to_l_+2
  5322  0C19  3000               	movlw	0
  5323  0C1A  00F1               	movwf	?__div_to_l_+1
  5324  0C1B  3000               	movlw	0
  5325  0C1C  00F0               	movwf	?__div_to_l_
  5326  0C1D  0008               	return
  5327  0C1E                     l2157:	
  5328  0C1E  3073               	movlw	low (__div_to_l_@f2| 0)
  5329  0C1F  0086               	movwf	6
  5330  0C20  0187               	clrf	7
  5331  0C21  3F40               	moviw [0]fsr1
  5332  0C22  00F6               	movwf	??__div_to_l_
  5333  0C23  3F41               	moviw [1]fsr1
  5334  0C24  00F7               	movwf	??__div_to_l_+1
  5335  0C25  3F42               	moviw [2]fsr1
  5336  0C26  00F8               	movwf	??__div_to_l_+2
  5337  0C27  3F43               	moviw [3]fsr1
  5338  0C28  00F9               	movwf	??__div_to_l_+3
  5339  0C29  1003               	clrc
  5340  0C2A  0D78               	rlf	??__div_to_l_+2,w
  5341  0C2B  0D79               	rlf	??__div_to_l_+3,w
  5342  0C2C  00FA               	movwf	??__div_to_l_+4
  5343  0C2D  087A               	movf	??__div_to_l_+4,w
  5344  0C2E  00A4               	movwf	__div_to_l_@cntr
  5345  0C2F  0824               	movf	__div_to_l_@cntr,w
  5346  0C30  1D03               	btfss	3,2
  5347  0C31  2C3B               	goto	l2163
  5348  0C32  3000               	movlw	0
  5349  0C33  00F3               	movwf	?__div_to_l_+3
  5350  0C34  3000               	movlw	0
  5351  0C35  00F2               	movwf	?__div_to_l_+2
  5352  0C36  3000               	movlw	0
  5353  0C37  00F1               	movwf	?__div_to_l_+1
  5354  0C38  3000               	movlw	0
  5355  0C39  00F0               	movwf	?__div_to_l_
  5356  0C3A  0008               	return
  5357  0C3B                     l2163:	
  5358  0C3B  3070               	movlw	low (__div_to_l_@f1| 0)
  5359  0C3C  0086               	movwf	6
  5360  0C3D  0187               	clrf	7
  5361  0C3E  3000               	movlw	0
  5362  0C3F  0481               	iorwf	1,f
  5363  0C40  3141               	addfsr 1,1
  5364  0C41  3000               	movlw	0
  5365  0C42  0481               	iorwf	1,f
  5366  0C43  3141               	addfsr 1,1
  5367  0C44  3080               	movlw	128
  5368  0C45  0481               	iorwf	1,f
  5369  0C46  3141               	addfsr 1,1
  5370  0C47  3000               	movlw	0
  5371  0C48  0481               	iorwf	1,f
  5372  0C49  3070               	movlw	low (__div_to_l_@f1| 0)
  5373  0C4A  0086               	movwf	6
  5374  0C4B  0187               	clrf	7
  5375  0C4C  30FF               	movlw	255
  5376  0C4D  0581               	andwf	1,f
  5377  0C4E  3141               	addfsr 1,1
  5378  0C4F  30FF               	movlw	255
  5379  0C50  0581               	andwf	1,f
  5380  0C51  3141               	addfsr 1,1
  5381  0C52  30FF               	movlw	255
  5382  0C53  0581               	andwf	1,f
  5383  0C54  3141               	addfsr 1,1
  5384  0C55  3000               	movlw	0
  5385  0C56  0581               	andwf	1,f
  5386  0C57  3073               	movlw	low (__div_to_l_@f2| 0)
  5387  0C58  0086               	movwf	6
  5388  0C59  0187               	clrf	7
  5389  0C5A  3000               	movlw	0
  5390  0C5B  0481               	iorwf	1,f
  5391  0C5C  3141               	addfsr 1,1
  5392  0C5D  3000               	movlw	0
  5393  0C5E  0481               	iorwf	1,f
  5394  0C5F  3141               	addfsr 1,1
  5395  0C60  3080               	movlw	128
  5396  0C61  0481               	iorwf	1,f
  5397  0C62  3141               	addfsr 1,1
  5398  0C63  3000               	movlw	0
  5399  0C64  0481               	iorwf	1,f
  5400  0C65  3073               	movlw	low (__div_to_l_@f2| 0)
  5401  0C66  0086               	movwf	6
  5402  0C67  0187               	clrf	7
  5403  0C68  30FF               	movlw	255
  5404  0C69  0581               	andwf	1,f
  5405  0C6A  3141               	addfsr 1,1
  5406  0C6B  30FF               	movlw	255
  5407  0C6C  0581               	andwf	1,f
  5408  0C6D  3141               	addfsr 1,1
  5409  0C6E  30FF               	movlw	255
  5410  0C6F  0581               	andwf	1,f
  5411  0C70  3141               	addfsr 1,1
  5412  0C71  3000               	movlw	0
  5413  0C72  0581               	andwf	1,f
  5414  0C73  3000               	movlw	0
  5415  0C74  00A3               	movwf	__div_to_l_@quot+3
  5416  0C75  3000               	movlw	0
  5417  0C76  00A2               	movwf	__div_to_l_@quot+2
  5418  0C77  3000               	movlw	0
  5419  0C78  00A1               	movwf	__div_to_l_@quot+1
  5420  0C79  3000               	movlw	0
  5421  0C7A  00A0               	movwf	__div_to_l_@quot
  5422  0C7B  307F               	movlw	127
  5423  0C7C  02A5               	subwf	__div_to_l_@exp1,f
  5424  0C7D  30A0               	movlw	160
  5425  0C7E  0724               	addwf	__div_to_l_@cntr,w
  5426  0C7F  00F6               	movwf	??__div_to_l_
  5427  0C80  0876               	movf	??__div_to_l_,w
  5428  0C81  02A5               	subwf	__div_to_l_@exp1,f
  5429  0C82  3020               	movlw	32
  5430  0C83  00F6               	movwf	??__div_to_l_
  5431  0C84  0876               	movf	??__div_to_l_,w
  5432  0C85  00A4               	movwf	__div_to_l_@cntr
  5433  0C86                     l2173:	
  5434  0C86  3001               	movlw	1
  5435  0C87                     u3015:	
  5436  0C87  35A0               	lslf	__div_to_l_@quot,f
  5437  0C88  0DA1               	rlf	__div_to_l_@quot+1,f
  5438  0C89  0DA2               	rlf	__div_to_l_@quot+2,f
  5439  0C8A  0DA3               	rlf	__div_to_l_@quot+3,f
  5440  0C8B  0B89               	decfsz	9,f
  5441  0C8C  2C87               	goto	u3015
  5442  0C8D  3073               	movlw	low (__div_to_l_@f2| 0)
  5443  0C8E  0086               	movwf	6
  5444  0C8F  0187               	clrf	7
  5445  0C90  3F40               	moviw [0]fsr1
  5446  0C91  00F6               	movwf	??__div_to_l_
  5447  0C92  3F41               	moviw [1]fsr1
  5448  0C93  00F7               	movwf	??__div_to_l_+1
  5449  0C94  3F42               	moviw [2]fsr1
  5450  0C95  00F8               	movwf	??__div_to_l_+2
  5451  0C96  3F43               	moviw [3]fsr1
  5452  0C97  00F9               	movwf	??__div_to_l_+3
  5453  0C98  3070               	movlw	low (__div_to_l_@f1| 0)
  5454  0C99  0086               	movwf	6
  5455  0C9A  0187               	clrf	7
  5456  0C9B  3F40               	moviw [0]fsr1
  5457  0C9C  00FA               	movwf	??__div_to_l_+4
  5458  0C9D  3F41               	moviw [1]fsr1
  5459  0C9E  00FB               	movwf	??__div_to_l_+5
  5460  0C9F  3F42               	moviw [2]fsr1
  5461  0CA0  00FC               	movwf	??__div_to_l_+6
  5462  0CA1  3F43               	moviw [3]fsr1
  5463  0CA2  00FD               	movwf	??__div_to_l_+7
  5464  0CA3  0879               	movf	??__div_to_l_+3,w
  5465  0CA4  027D               	subwf	??__div_to_l_+7,w
  5466  0CA5  1D03               	skipz
  5467  0CA6  2CB1               	goto	u3025
  5468  0CA7  0878               	movf	??__div_to_l_+2,w
  5469  0CA8  027C               	subwf	??__div_to_l_+6,w
  5470  0CA9  1D03               	skipz
  5471  0CAA  2CB1               	goto	u3025
  5472  0CAB  0877               	movf	??__div_to_l_+1,w
  5473  0CAC  027B               	subwf	??__div_to_l_+5,w
  5474  0CAD  1D03               	skipz
  5475  0CAE  2CB1               	goto	u3025
  5476  0CAF  0876               	movf	??__div_to_l_,w
  5477  0CB0  027A               	subwf	??__div_to_l_+4,w
  5478  0CB1                     u3025:	
  5479  0CB1  1C03               	skipc
  5480  0CB2  2CCE               	goto	l2181
  5481  0CB3  3073               	movlw	low (__div_to_l_@f2| 0)
  5482  0CB4  0086               	movwf	6
  5483  0CB5  0187               	clrf	7
  5484  0CB6  3F40               	moviw [0]fsr1
  5485  0CB7  00F6               	movwf	??__div_to_l_
  5486  0CB8  3F41               	moviw [1]fsr1
  5487  0CB9  00F7               	movwf	??__div_to_l_+1
  5488  0CBA  3F42               	moviw [2]fsr1
  5489  0CBB  00F8               	movwf	??__div_to_l_+2
  5490  0CBC  3F43               	moviw [3]fsr1
  5491  0CBD  00F9               	movwf	??__div_to_l_+3
  5492  0CBE  3070               	movlw	low (__div_to_l_@f1| 0)
  5493  0CBF  0086               	movwf	6
  5494  0CC0  0187               	clrf	7
  5495  0CC1  0876               	movf	??__div_to_l_,w
  5496  0CC2  0281               	subwf	1,f
  5497  0CC3  3141               	addfsr 1,1
  5498  0CC4  0877               	movf	??__div_to_l_+1,w
  5499  0CC5  3B81               	subwfb	1,f
  5500  0CC6  3141               	addfsr 1,1
  5501  0CC7  0878               	movf	??__div_to_l_+2,w
  5502  0CC8  3B81               	subwfb	1,f
  5503  0CC9  3141               	addfsr 1,1
  5504  0CCA  0879               	movf	??__div_to_l_+3,w
  5505  0CCB  3B81               	subwfb	1,f
  5506  0CCC  317D               	addfsr 1,-3
  5507  0CCD  1420               	bsf	__div_to_l_@quot,0
  5508  0CCE                     l2181:	
  5509  0CCE  3070               	movlw	low (__div_to_l_@f1| 0)
  5510  0CCF  0086               	movwf	6
  5511  0CD0  0187               	clrf	7
  5512  0CD1  3581               	lslf	1,f
  5513  0CD2  3141               	addfsr 1,1
  5514  0CD3  0D81               	rlf	1,f
  5515  0CD4  3141               	addfsr 1,1
  5516  0CD5  0D81               	rlf	1,f
  5517  0CD6  3141               	addfsr 1,1
  5518  0CD7  0D81               	rlf	1,f
  5519  0CD8  317D               	addfsr 1,-3
  5520  0CD9  3001               	movlw	1
  5521  0CDA  02A4               	subwf	__div_to_l_@cntr,f
  5522  0CDB  1D03               	btfss	3,2
  5523  0CDC  2C86               	goto	l2173
  5524  0CDD  1FA5               	btfss	__div_to_l_@exp1,7
  5525  0CDE  2CFB               	goto	l2193
  5526  0CDF  0825               	movf	__div_to_l_@exp1,w
  5527  0CE0  3A80               	xorlw	128
  5528  0CE1  3E9F               	addlw	159
  5529  0CE2  1803               	skipnc
  5530  0CE3  2CED               	goto	l2191
  5531  0CE4  3000               	movlw	0
  5532  0CE5  00F3               	movwf	?__div_to_l_+3
  5533  0CE6  3000               	movlw	0
  5534  0CE7  00F2               	movwf	?__div_to_l_+2
  5535  0CE8  3000               	movlw	0
  5536  0CE9  00F1               	movwf	?__div_to_l_+1
  5537  0CEA  3000               	movlw	0
  5538  0CEB  00F0               	movwf	?__div_to_l_
  5539  0CEC  0008               	return
  5540  0CED                     l2191:	
  5541  0CED  3001               	movlw	1
  5542  0CEE                     u3065:	
  5543  0CEE  36A3               	lsrf	__div_to_l_@quot+3,f
  5544  0CEF  0CA2               	rrf	__div_to_l_@quot+2,f
  5545  0CF0  0CA1               	rrf	__div_to_l_@quot+1,f
  5546  0CF1  0CA0               	rrf	__div_to_l_@quot,f
  5547  0CF2  0B89               	decfsz	9,f
  5548  0CF3  2CEE               	goto	u3065
  5549  0CF4  3001               	movlw	1
  5550  0CF5  00F6               	movwf	??__div_to_l_
  5551  0CF6  0876               	movf	??__div_to_l_,w
  5552  0CF7  07A5               	addwf	__div_to_l_@exp1,f
  5553  0CF8  1903               	btfsc	3,2
  5554  0CF9  2D14               	goto	l2201
  5555  0CFA  2CED               	goto	l2191
  5556  0CFB                     l2193:	
  5557  0CFB  3020               	movlw	32
  5558  0CFC  0225               	subwf	__div_to_l_@exp1,w
  5559  0CFD  1C03               	skipc
  5560  0CFE  2D11               	goto	l438
  5561  0CFF  3000               	movlw	0
  5562  0D00  00F3               	movwf	?__div_to_l_+3
  5563  0D01  3000               	movlw	0
  5564  0D02  00F2               	movwf	?__div_to_l_+2
  5565  0D03  3000               	movlw	0
  5566  0D04  00F1               	movwf	?__div_to_l_+1
  5567  0D05  3000               	movlw	0
  5568  0D06  00F0               	movwf	?__div_to_l_
  5569  0D07  0008               	return
  5570  0D08                     l2199:	
  5571  0D08  3001               	movlw	1
  5572  0D09                     u3095:	
  5573  0D09  35A0               	lslf	__div_to_l_@quot,f
  5574  0D0A  0DA1               	rlf	__div_to_l_@quot+1,f
  5575  0D0B  0DA2               	rlf	__div_to_l_@quot+2,f
  5576  0D0C  0DA3               	rlf	__div_to_l_@quot+3,f
  5577  0D0D  0B89               	decfsz	9,f
  5578  0D0E  2D09               	goto	u3095
  5579  0D0F  3001               	movlw	1
  5580  0D10  02A5               	subwf	__div_to_l_@exp1,f
  5581  0D11                     l438:	
  5582  0D11  0825               	movf	__div_to_l_@exp1,w
  5583  0D12  1D03               	btfss	3,2
  5584  0D13  2D08               	goto	l2199
  5585  0D14                     l2201:	
  5586  0D14  0823               	movf	__div_to_l_@quot+3,w
  5587  0D15  00F3               	movwf	?__div_to_l_+3
  5588  0D16  0822               	movf	__div_to_l_@quot+2,w
  5589  0D17  00F2               	movwf	?__div_to_l_+2
  5590  0D18  0821               	movf	__div_to_l_@quot+1,w
  5591  0D19  00F1               	movwf	?__div_to_l_+1
  5592  0D1A  0820               	movf	__div_to_l_@quot,w
  5593  0D1B  00F0               	movwf	?__div_to_l_
  5594  0D1C  0008               	return
  5595  0D1D                     __end_of__div_to_l_:	
  5596                           
  5597                           	psect	text11
  5598  1523                     __ptext11:	
  5599 ;; *************** function ___lltoft *****************
  5600 ;; Defined at:
  5601 ;;		line 35 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\lltoft.c"
  5602 ;; Parameters:    Size  Location     Type
  5603 ;;  c               4    8[COMMON] unsigned long 
  5604 ;; Auto vars:     Size  Location     Type
  5605 ;;  exp             1   13[COMMON] unsigned char 
  5606 ;; Return value:  Size  Location     Type
  5607 ;;                  3    8[COMMON] float 
  5608 ;; Registers used:
  5609 ;;		wreg, status,2, status,0, pclath, cstack
  5610 ;; Tracked objects:
  5611 ;;		On entry : 0/0
  5612 ;;		On exit  : 0/0
  5613 ;;		Unchanged: 0/0
  5614 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
  5615 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  5616 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  5617 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  5618 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  5619 ;;Total ram usage:        6 bytes
  5620 ;; Hardware stack levels used:    1
  5621 ;; Hardware stack levels required when called:    1
  5622 ;; This function calls:
  5623 ;;		___ftpack
  5624 ;; This function is called by:
  5625 ;;		_sprintf
  5626 ;; This function uses a non-reentrant model
  5627 ;;
  5628                           
  5629                           
  5630                           ;psect for function ___lltoft
  5631  1523                     ___lltoft:	
  5632                           
  5633                           ;incstack = 0
  5634                           ; Regs used in ___lltoft: [wreg+status,2+status,0+pclath+cstack]
  5635  1523  308E               	movlw	142
  5636  1524  00FC               	movwf	??___lltoft
  5637  1525  087C               	movf	??___lltoft,w
  5638  1526  00FD               	movwf	___lltoft@exp
  5639  1527                     l2331:	
  5640  1527  30FF               	movlw	255
  5641  1528  057B               	andwf	___lltoft@c+3,w
  5642  1529  1903               	btfsc	3,2
  5643  152A  2D37               	goto	l2333
  5644  152B  3001               	movlw	1
  5645  152C                     u3395:	
  5646  152C  36FB               	lsrf	___lltoft@c+3,f
  5647  152D  0CFA               	rrf	___lltoft@c+2,f
  5648  152E  0CF9               	rrf	___lltoft@c+1,f
  5649  152F  0CF8               	rrf	___lltoft@c,f
  5650  1530  0B89               	decfsz	9,f
  5651  1531  2D2C               	goto	u3395
  5652  1532  3001               	movlw	1
  5653  1533  00FC               	movwf	??___lltoft
  5654  1534  087C               	movf	??___lltoft,w
  5655  1535  07FD               	addwf	___lltoft@exp,f
  5656  1536  2D27               	goto	l2331
  5657  1537                     l2333:	
  5658  1537  0878               	movf	___lltoft@c,w
  5659  1538  00F0               	movwf	___ftpack@arg
  5660  1539  0879               	movf	___lltoft@c+1,w
  5661  153A  00F1               	movwf	___ftpack@arg+1
  5662  153B  087A               	movf	___lltoft@c+2,w
  5663  153C  00F2               	movwf	___ftpack@arg+2
  5664  153D  087D               	movf	___lltoft@exp,w
  5665  153E  00FC               	movwf	??___lltoft
  5666  153F  087C               	movf	??___lltoft,w
  5667  1540  00F3               	movwf	___ftpack@exp
  5668  1541  01F4               	clrf	___ftpack@sign
  5669  1542  3188  2009         	fcall	___ftpack
  5670  1544  0870               	movf	?___ftpack,w
  5671  1545  00F8               	movwf	?___lltoft
  5672  1546  0871               	movf	?___ftpack+1,w
  5673  1547  00F9               	movwf	?___lltoft+1
  5674  1548  0872               	movf	?___ftpack+2,w
  5675  1549  00FA               	movwf	?___lltoft+2
  5676  154A  0008               	return
  5677  154B                     __end_of___lltoft:	
  5678                           
  5679                           	psect	text12
  5680  15BB                     __ptext12:	
  5681 ;; *************** function ___llmod *****************
  5682 ;; Defined at:
  5683 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\llmod.c"
  5684 ;; Parameters:    Size  Location     Type
  5685 ;;  divisor         4    0[COMMON] unsigned long 
  5686 ;;  dividend        4    4[COMMON] unsigned long 
  5687 ;; Auto vars:     Size  Location     Type
  5688 ;;  counter         1    9[COMMON] unsigned char 
  5689 ;; Return value:  Size  Location     Type
  5690 ;;                  4    0[COMMON] unsigned long 
  5691 ;; Registers used:
  5692 ;;		wreg, status,2, status,0
  5693 ;; Tracked objects:
  5694 ;;		On entry : 0/0
  5695 ;;		On exit  : 0/0
  5696 ;;		Unchanged: 0/0
  5697 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
  5698 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  5699 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  5700 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  5701 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  5702 ;;Total ram usage:       10 bytes
  5703 ;; Hardware stack levels used:    1
  5704 ;; This function calls:
  5705 ;;		Nothing
  5706 ;; This function is called by:
  5707 ;;		_sprintf
  5708 ;; This function uses a non-reentrant model
  5709 ;;
  5710                           
  5711                           
  5712                           ;psect for function ___llmod
  5713  15BB                     ___llmod:	
  5714                           
  5715                           ;incstack = 0
  5716                           ; Regs used in ___llmod: [wreg+status,2+status,0]
  5717  15BB  0873               	movf	___llmod@divisor+3,w
  5718  15BC  0472               	iorwf	___llmod@divisor+2,w
  5719  15BD  0471               	iorwf	___llmod@divisor+1,w
  5720  15BE  0470               	iorwf	___llmod@divisor,w
  5721  15BF  1903               	skipnz
  5722  15C0  2DF4               	goto	l2323
  5723  15C1  01F9               	clrf	___llmod@counter
  5724  15C2  0AF9               	incf	___llmod@counter,f
  5725  15C3                     l2313:	
  5726  15C3  1BF3               	btfsc	___llmod@divisor+3,7
  5727  15C4  2DD1               	goto	l2315
  5728  15C5  3001               	movlw	1
  5729  15C6                     u3345:	
  5730  15C6  35F0               	lslf	___llmod@divisor,f
  5731  15C7  0DF1               	rlf	___llmod@divisor+1,f
  5732  15C8  0DF2               	rlf	___llmod@divisor+2,f
  5733  15C9  0DF3               	rlf	___llmod@divisor+3,f
  5734  15CA  0B89               	decfsz	9,f
  5735  15CB  2DC6               	goto	u3345
  5736  15CC  3001               	movlw	1
  5737  15CD  00F8               	movwf	??___llmod
  5738  15CE  0878               	movf	??___llmod,w
  5739  15CF  07F9               	addwf	___llmod@counter,f
  5740  15D0  2DC3               	goto	l2313
  5741  15D1                     l2315:	
  5742  15D1  0873               	movf	___llmod@divisor+3,w
  5743  15D2  0277               	subwf	___llmod@dividend+3,w
  5744  15D3  1D03               	skipz
  5745  15D4  2DDF               	goto	u3365
  5746  15D5  0872               	movf	___llmod@divisor+2,w
  5747  15D6  0276               	subwf	___llmod@dividend+2,w
  5748  15D7  1D03               	skipz
  5749  15D8  2DDF               	goto	u3365
  5750  15D9  0871               	movf	___llmod@divisor+1,w
  5751  15DA  0275               	subwf	___llmod@dividend+1,w
  5752  15DB  1D03               	skipz
  5753  15DC  2DDF               	goto	u3365
  5754  15DD  0870               	movf	___llmod@divisor,w
  5755  15DE  0274               	subwf	___llmod@dividend,w
  5756  15DF                     u3365:	
  5757  15DF  1C03               	skipc
  5758  15E0  2DE9               	goto	l2319
  5759  15E1  0870               	movf	___llmod@divisor,w
  5760  15E2  02F4               	subwf	___llmod@dividend,f
  5761  15E3  0871               	movf	___llmod@divisor+1,w
  5762  15E4  3BF5               	subwfb	___llmod@dividend+1,f
  5763  15E5  0872               	movf	___llmod@divisor+2,w
  5764  15E6  3BF6               	subwfb	___llmod@dividend+2,f
  5765  15E7  0873               	movf	___llmod@divisor+3,w
  5766  15E8  3BF7               	subwfb	___llmod@dividend+3,f
  5767  15E9                     l2319:	
  5768  15E9  3001               	movlw	1
  5769  15EA                     u3375:	
  5770  15EA  36F3               	lsrf	___llmod@divisor+3,f
  5771  15EB  0CF2               	rrf	___llmod@divisor+2,f
  5772  15EC  0CF1               	rrf	___llmod@divisor+1,f
  5773  15ED  0CF0               	rrf	___llmod@divisor,f
  5774  15EE  0B89               	decfsz	9,f
  5775  15EF  2DEA               	goto	u3375
  5776  15F0  3001               	movlw	1
  5777  15F1  02F9               	subwf	___llmod@counter,f
  5778  15F2  1D03               	btfss	3,2
  5779  15F3  2DD1               	goto	l2315
  5780  15F4                     l2323:	
  5781  15F4  0877               	movf	___llmod@dividend+3,w
  5782  15F5  00F3               	movwf	?___llmod+3
  5783  15F6  0876               	movf	___llmod@dividend+2,w
  5784  15F7  00F2               	movwf	?___llmod+2
  5785  15F8  0875               	movf	___llmod@dividend+1,w
  5786  15F9  00F1               	movwf	?___llmod+1
  5787  15FA  0874               	movf	___llmod@dividend,w
  5788  15FB  00F0               	movwf	?___llmod
  5789  15FC  0008               	return
  5790  15FD                     __end_of___llmod:	
  5791                           
  5792                           	psect	text13
  5793  1642                     __ptext13:	
  5794 ;; *************** function ___lldiv *****************
  5795 ;; Defined at:
  5796 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\lldiv.c"
  5797 ;; Parameters:    Size  Location     Type
  5798 ;;  divisor         4    0[COMMON] unsigned long 
  5799 ;;  dividend        4    4[COMMON] unsigned long 
  5800 ;; Auto vars:     Size  Location     Type
  5801 ;;  quotient        4    9[COMMON] unsigned long 
  5802 ;;  counter         1   13[COMMON] unsigned char 
  5803 ;; Return value:  Size  Location     Type
  5804 ;;                  4    0[COMMON] unsigned long 
  5805 ;; Registers used:
  5806 ;;		wreg, status,2, status,0
  5807 ;; Tracked objects:
  5808 ;;		On entry : 0/0
  5809 ;;		On exit  : 0/0
  5810 ;;		Unchanged: 0/0
  5811 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
  5812 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  5813 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  5814 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  5815 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  5816 ;;Total ram usage:       14 bytes
  5817 ;; Hardware stack levels used:    1
  5818 ;; This function calls:
  5819 ;;		Nothing
  5820 ;; This function is called by:
  5821 ;;		_sprintf
  5822 ;; This function uses a non-reentrant model
  5823 ;;
  5824                           
  5825                           
  5826                           ;psect for function ___lldiv
  5827  1642                     ___lldiv:	
  5828                           
  5829                           ;incstack = 0
  5830                           ; Regs used in ___lldiv: [wreg+status,2+status,0]
  5831  1642  3000               	movlw	0
  5832  1643  00FC               	movwf	___lldiv@quotient+3
  5833  1644  3000               	movlw	0
  5834  1645  00FB               	movwf	___lldiv@quotient+2
  5835  1646  3000               	movlw	0
  5836  1647  00FA               	movwf	___lldiv@quotient+1
  5837  1648  3000               	movlw	0
  5838  1649  00F9               	movwf	___lldiv@quotient
  5839  164A  0873               	movf	___lldiv@divisor+3,w
  5840  164B  0472               	iorwf	___lldiv@divisor+2,w
  5841  164C  0471               	iorwf	___lldiv@divisor+1,w
  5842  164D  0470               	iorwf	___lldiv@divisor,w
  5843  164E  1903               	skipnz
  5844  164F  2E8B               	goto	l2303
  5845  1650  01FD               	clrf	___lldiv@counter
  5846  1651  0AFD               	incf	___lldiv@counter,f
  5847  1652                     l2289:	
  5848  1652  1BF3               	btfsc	___lldiv@divisor+3,7
  5849  1653  2E60               	goto	l2291
  5850  1654  3001               	movlw	1
  5851  1655                     u3275:	
  5852  1655  35F0               	lslf	___lldiv@divisor,f
  5853  1656  0DF1               	rlf	___lldiv@divisor+1,f
  5854  1657  0DF2               	rlf	___lldiv@divisor+2,f
  5855  1658  0DF3               	rlf	___lldiv@divisor+3,f
  5856  1659  0B89               	decfsz	9,f
  5857  165A  2E55               	goto	u3275
  5858  165B  3001               	movlw	1
  5859  165C  00F8               	movwf	??___lldiv
  5860  165D  0878               	movf	??___lldiv,w
  5861  165E  07FD               	addwf	___lldiv@counter,f
  5862  165F  2E52               	goto	l2289
  5863  1660                     l2291:	
  5864  1660  3001               	movlw	1
  5865  1661                     u3295:	
  5866  1661  35F9               	lslf	___lldiv@quotient,f
  5867  1662  0DFA               	rlf	___lldiv@quotient+1,f
  5868  1663  0DFB               	rlf	___lldiv@quotient+2,f
  5869  1664  0DFC               	rlf	___lldiv@quotient+3,f
  5870  1665  0B89               	decfsz	9,f
  5871  1666  2E61               	goto	u3295
  5872  1667  0873               	movf	___lldiv@divisor+3,w
  5873  1668  0277               	subwf	___lldiv@dividend+3,w
  5874  1669  1D03               	skipz
  5875  166A  2E75               	goto	u3305
  5876  166B  0872               	movf	___lldiv@divisor+2,w
  5877  166C  0276               	subwf	___lldiv@dividend+2,w
  5878  166D  1D03               	skipz
  5879  166E  2E75               	goto	u3305
  5880  166F  0871               	movf	___lldiv@divisor+1,w
  5881  1670  0275               	subwf	___lldiv@dividend+1,w
  5882  1671  1D03               	skipz
  5883  1672  2E75               	goto	u3305
  5884  1673  0870               	movf	___lldiv@divisor,w
  5885  1674  0274               	subwf	___lldiv@dividend,w
  5886  1675                     u3305:	
  5887  1675  1C03               	skipc
  5888  1676  2E80               	goto	l2299
  5889  1677  0870               	movf	___lldiv@divisor,w
  5890  1678  02F4               	subwf	___lldiv@dividend,f
  5891  1679  0871               	movf	___lldiv@divisor+1,w
  5892  167A  3BF5               	subwfb	___lldiv@dividend+1,f
  5893  167B  0872               	movf	___lldiv@divisor+2,w
  5894  167C  3BF6               	subwfb	___lldiv@dividend+2,f
  5895  167D  0873               	movf	___lldiv@divisor+3,w
  5896  167E  3BF7               	subwfb	___lldiv@dividend+3,f
  5897  167F  1479               	bsf	___lldiv@quotient,0
  5898  1680                     l2299:	
  5899  1680  3001               	movlw	1
  5900  1681                     u3315:	
  5901  1681  36F3               	lsrf	___lldiv@divisor+3,f
  5902  1682  0CF2               	rrf	___lldiv@divisor+2,f
  5903  1683  0CF1               	rrf	___lldiv@divisor+1,f
  5904  1684  0CF0               	rrf	___lldiv@divisor,f
  5905  1685  0B89               	decfsz	9,f
  5906  1686  2E81               	goto	u3315
  5907  1687  3001               	movlw	1
  5908  1688  02FD               	subwf	___lldiv@counter,f
  5909  1689  1D03               	btfss	3,2
  5910  168A  2E60               	goto	l2291
  5911  168B                     l2303:	
  5912  168B  087C               	movf	___lldiv@quotient+3,w
  5913  168C  00F3               	movwf	?___lldiv+3
  5914  168D  087B               	movf	___lldiv@quotient+2,w
  5915  168E  00F2               	movwf	?___lldiv+2
  5916  168F  087A               	movf	___lldiv@quotient+1,w
  5917  1690  00F1               	movwf	?___lldiv+1
  5918  1691  0879               	movf	___lldiv@quotient,w
  5919  1692  00F0               	movwf	?___lldiv
  5920  1693  0008               	return
  5921  1694                     __end_of___lldiv:	
  5922                           
  5923                           	psect	text14
  5924  16E6                     __ptext14:	
  5925 ;; *************** function ___fttol *****************
  5926 ;; Defined at:
  5927 ;;		line 44 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\fttol.c"
  5928 ;; Parameters:    Size  Location     Type
  5929 ;;  f1              3   33[BANK0 ] float 
  5930 ;; Auto vars:     Size  Location     Type
  5931 ;;  lval            4   42[BANK0 ] unsigned long 
  5932 ;;  exp1            1   46[BANK0 ] unsigned char 
  5933 ;;  sign1           1   41[BANK0 ] unsigned char 
  5934 ;; Return value:  Size  Location     Type
  5935 ;;                  4   33[BANK0 ] long 
  5936 ;; Registers used:
  5937 ;;		wreg, status,2, status,0
  5938 ;; Tracked objects:
  5939 ;;		On entry : 0/0
  5940 ;;		On exit  : 0/0
  5941 ;;		Unchanged: 0/0
  5942 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
  5943 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  5944 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  5945 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  5946 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  5947 ;;Total ram usage:       14 bytes
  5948 ;; Hardware stack levels used:    1
  5949 ;; This function calls:
  5950 ;;		Nothing
  5951 ;; This function is called by:
  5952 ;;		_sprintf
  5953 ;; This function uses a non-reentrant model
  5954 ;;
  5955                           
  5956                           
  5957                           ;psect for function ___fttol
  5958  16E6                     ___fttol:	
  5959                           
  5960                           ;incstack = 0
  5961                           ; Regs used in ___fttol: [wreg+status,2+status,0]
  5962  16E6  0140               	movlb	0	; select bank0
  5963  16E7  0841               	movf	___fttol@f1,w
  5964  16E8  00C5               	movwf	??___fttol
  5965  16E9  0842               	movf	___fttol@f1+1,w
  5966  16EA  00C6               	movwf	??___fttol+1
  5967  16EB  0843               	movf	___fttol@f1+2,w
  5968  16EC  00C7               	movwf	??___fttol+2
  5969  16ED  1003               	clrc
  5970  16EE  0D46               	rlf	??___fttol+1,w
  5971  16EF  0D47               	rlf	??___fttol+2,w
  5972  16F0  00C8               	movwf	??___fttol+3
  5973  16F1  0848               	movf	??___fttol+3,w
  5974  16F2  00CE               	movwf	___fttol@exp1
  5975  16F3  084E               	movf	___fttol@exp1,w
  5976  16F4  1D03               	btfss	3,2
  5977  16F5  2EFF               	goto	l2247
  5978  16F6  3000               	movlw	0
  5979  16F7  00C4               	movwf	?___fttol+3
  5980  16F8  3000               	movlw	0
  5981  16F9  00C3               	movwf	?___fttol+2
  5982  16FA  3000               	movlw	0
  5983  16FB  00C2               	movwf	?___fttol+1
  5984  16FC  3000               	movlw	0
  5985  16FD  00C1               	movwf	?___fttol
  5986  16FE  0008               	return
  5987  16FF                     l2247:	
  5988  16FF  0841               	movf	___fttol@f1,w
  5989  1700  00C5               	movwf	??___fttol
  5990  1701  0842               	movf	___fttol@f1+1,w
  5991  1702  00C6               	movwf	??___fttol+1
  5992  1703  0843               	movf	___fttol@f1+2,w
  5993  1704  00C7               	movwf	??___fttol+2
  5994  1705  3017               	movlw	23
  5995  1706                     u3175:	
  5996  1706  36C7               	lsrf	??___fttol+2,f
  5997  1707  0CC6               	rrf	??___fttol+1,f
  5998  1708  0CC5               	rrf	??___fttol,f
  5999  1709  0B89               	decfsz	9,f
  6000  170A  2F06               	goto	u3175
  6001  170B  0845               	movf	??___fttol,w
  6002  170C  00C8               	movwf	??___fttol+3
  6003  170D  0848               	movf	??___fttol+3,w
  6004  170E  00C9               	movwf	___fttol@sign1
  6005  170F  17C2               	bsf	___fttol@f1+1,7
  6006  1710  30FF               	movlw	255
  6007  1711  05C1               	andwf	___fttol@f1,f
  6008  1712  30FF               	movlw	255
  6009  1713  05C2               	andwf	___fttol@f1+1,f
  6010  1714  3000               	movlw	0
  6011  1715  05C3               	andwf	___fttol@f1+2,f
  6012  1716  0841               	movf	___fttol@f1,w
  6013  1717  00CA               	movwf	___fttol@lval
  6014  1718  0842               	movf	___fttol@f1+1,w
  6015  1719  00CB               	movwf	___fttol@lval+1
  6016  171A  0843               	movf	___fttol@f1+2,w
  6017  171B  00CC               	movwf	___fttol@lval+2
  6018  171C  01CD               	clrf	___fttol@lval+3
  6019  171D  308E               	movlw	142
  6020  171E  02CE               	subwf	___fttol@exp1,f
  6021  171F  1FCE               	btfss	___fttol@exp1,7
  6022  1720  2F3D               	goto	l2267
  6023  1721  084E               	movf	___fttol@exp1,w
  6024  1722  3A80               	xorlw	128
  6025  1723  3E8F               	addlw	143
  6026  1724  1803               	skipnc
  6027  1725  2F2F               	goto	l2265
  6028  1726  3000               	movlw	0
  6029  1727  00C4               	movwf	?___fttol+3
  6030  1728  3000               	movlw	0
  6031  1729  00C3               	movwf	?___fttol+2
  6032  172A  3000               	movlw	0
  6033  172B  00C2               	movwf	?___fttol+1
  6034  172C  3000               	movlw	0
  6035  172D  00C1               	movwf	?___fttol
  6036  172E  0008               	return
  6037  172F                     l2265:	
  6038  172F  3001               	movlw	1
  6039  1730                     u3205:	
  6040  1730  36CD               	lsrf	___fttol@lval+3,f
  6041  1731  0CCC               	rrf	___fttol@lval+2,f
  6042  1732  0CCB               	rrf	___fttol@lval+1,f
  6043  1733  0CCA               	rrf	___fttol@lval,f
  6044  1734  0B89               	decfsz	9,f
  6045  1735  2F30               	goto	u3205
  6046  1736  3001               	movlw	1
  6047  1737  00C5               	movwf	??___fttol
  6048  1738  0845               	movf	??___fttol,w
  6049  1739  07CE               	addwf	___fttol@exp1,f
  6050  173A  1903               	btfsc	3,2
  6051  173B  2F56               	goto	l2275
  6052  173C  2F2F               	goto	l2265
  6053  173D                     l2267:	
  6054  173D  3018               	movlw	24
  6055  173E  024E               	subwf	___fttol@exp1,w
  6056  173F  1C03               	skipc
  6057  1740  2F53               	goto	l558
  6058  1741  3000               	movlw	0
  6059  1742  00C4               	movwf	?___fttol+3
  6060  1743  3000               	movlw	0
  6061  1744  00C3               	movwf	?___fttol+2
  6062  1745  3000               	movlw	0
  6063  1746  00C2               	movwf	?___fttol+1
  6064  1747  3000               	movlw	0
  6065  1748  00C1               	movwf	?___fttol
  6066  1749  0008               	return
  6067  174A                     l2273:	
  6068  174A  3001               	movlw	1
  6069  174B                     u3235:	
  6070  174B  35CA               	lslf	___fttol@lval,f
  6071  174C  0DCB               	rlf	___fttol@lval+1,f
  6072  174D  0DCC               	rlf	___fttol@lval+2,f
  6073  174E  0DCD               	rlf	___fttol@lval+3,f
  6074  174F  0B89               	decfsz	9,f
  6075  1750  2F4B               	goto	u3235
  6076  1751  3001               	movlw	1
  6077  1752  02CE               	subwf	___fttol@exp1,f
  6078  1753                     l558:	
  6079  1753  084E               	movf	___fttol@exp1,w
  6080  1754  1D03               	btfss	3,2
  6081  1755  2F4A               	goto	l2273
  6082  1756                     l2275:	
  6083  1756  0849               	movf	___fttol@sign1,w
  6084  1757  1903               	btfsc	3,2
  6085  1758  2F64               	goto	l2279
  6086  1759  09CA               	comf	___fttol@lval,f
  6087  175A  09CB               	comf	___fttol@lval+1,f
  6088  175B  09CC               	comf	___fttol@lval+2,f
  6089  175C  09CD               	comf	___fttol@lval+3,f
  6090  175D  0ACA               	incf	___fttol@lval,f
  6091  175E  1903               	skipnz
  6092  175F  0ACB               	incf	___fttol@lval+1,f
  6093  1760  1903               	skipnz
  6094  1761  0ACC               	incf	___fttol@lval+2,f
  6095  1762  1903               	skipnz
  6096  1763  0ACD               	incf	___fttol@lval+3,f
  6097  1764                     l2279:	
  6098  1764  084D               	movf	___fttol@lval+3,w
  6099  1765  00C4               	movwf	?___fttol+3
  6100  1766  084C               	movf	___fttol@lval+2,w
  6101  1767  00C3               	movwf	?___fttol+2
  6102  1768  084B               	movf	___fttol@lval+1,w
  6103  1769  00C2               	movwf	?___fttol+1
  6104  176A  084A               	movf	___fttol@lval,w
  6105  176B  00C1               	movwf	?___fttol
  6106  176C  0008               	return
  6107  176D                     __end_of___fttol:	
  6108                           
  6109                           	psect	text15
  6110  14E5                     __ptext15:	
  6111 ;; *************** function ___ftsub *****************
  6112 ;; Defined at:
  6113 ;;		line 18 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\ftsub.c"
  6114 ;; Parameters:    Size  Location     Type
  6115 ;;  f2              3   51[BANK0 ] float 
  6116 ;;  f1              3   54[BANK0 ] float 
  6117 ;; Auto vars:     Size  Location     Type
  6118 ;;		None
  6119 ;; Return value:  Size  Location     Type
  6120 ;;                  3   51[BANK0 ] float 
  6121 ;; Registers used:
  6122 ;;		wreg, status,2, status,0, pclath, cstack
  6123 ;; Tracked objects:
  6124 ;;		On entry : 0/0
  6125 ;;		On exit  : 0/0
  6126 ;;		Unchanged: 0/0
  6127 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
  6128 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  6129 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  6130 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  6131 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  6132 ;;Total ram usage:        6 bytes
  6133 ;; Hardware stack levels used:    1
  6134 ;; Hardware stack levels required when called:    2
  6135 ;; This function calls:
  6136 ;;		___ftadd
  6137 ;; This function is called by:
  6138 ;;		_sprintf
  6139 ;; This function uses a non-reentrant model
  6140 ;;
  6141                           
  6142                           
  6143                           ;psect for function ___ftsub
  6144  14E5                     ___ftsub:	
  6145                           
  6146                           ;incstack = 0
  6147                           ; Regs used in ___ftsub: [wreg+status,2+status,0+pclath+cstack]
  6148  14E5  0140               	movlb	0	; select bank0
  6149  14E6  0855               	movf	___ftsub@f2+2,w
  6150  14E7  0454               	iorwf	___ftsub@f2+1,w
  6151  14E8  0453               	iorwf	___ftsub@f2,w
  6152  14E9  1903               	skipnz
  6153  14EA  2CED               	goto	l2237
  6154  14EB  3080               	movlw	128
  6155  14EC  06D5               	xorwf	___ftsub@f2+2,f
  6156  14ED                     l2237:	
  6157  14ED  0856               	movf	___ftsub@f1,w
  6158  14EE  00C6               	movwf	___ftadd@f1
  6159  14EF  0857               	movf	___ftsub@f1+1,w
  6160  14F0  00C7               	movwf	___ftadd@f1+1
  6161  14F1  0858               	movf	___ftsub@f1+2,w
  6162  14F2  00C8               	movwf	___ftadd@f1+2
  6163  14F3  0853               	movf	___ftsub@f2,w
  6164  14F4  00C9               	movwf	___ftadd@f2
  6165  14F5  0854               	movf	___ftsub@f2+1,w
  6166  14F6  00CA               	movwf	___ftadd@f2+1
  6167  14F7  0855               	movf	___ftsub@f2+2,w
  6168  14F8  00CB               	movwf	___ftadd@f2+2
  6169  14F9  318B  230A         	fcall	___ftadd
  6170  14FB  0140               	movlb	0	; select bank0
  6171  14FC  0846               	movf	?___ftadd,w
  6172  14FD  00D3               	movwf	?___ftsub
  6173  14FE  0847               	movf	?___ftadd+1,w
  6174  14FF  00D4               	movwf	?___ftsub+1
  6175  1500  0848               	movf	?___ftadd+2,w
  6176  1501  00D5               	movwf	?___ftsub+2
  6177  1502  0008               	return
  6178  1503                     __end_of___ftsub:	
  6179                           
  6180                           	psect	text16
  6181  0B0A                     __ptext16:	
  6182 ;; *************** function ___ftadd *****************
  6183 ;; Defined at:
  6184 ;;		line 86 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\ftadd.c"
  6185 ;; Parameters:    Size  Location     Type
  6186 ;;  f1              3   38[BANK0 ] float 
  6187 ;;  f2              3   41[BANK0 ] float 
  6188 ;; Auto vars:     Size  Location     Type
  6189 ;;  exp1            1   50[BANK0 ] unsigned char 
  6190 ;;  exp2            1   49[BANK0 ] unsigned char 
  6191 ;;  sign            1   48[BANK0 ] unsigned char 
  6192 ;; Return value:  Size  Location     Type
  6193 ;;                  3   38[BANK0 ] float 
  6194 ;; Registers used:
  6195 ;;		wreg, status,2, status,0, pclath, cstack
  6196 ;; Tracked objects:
  6197 ;;		On entry : 0/0
  6198 ;;		On exit  : 0/0
  6199 ;;		Unchanged: 0/0
  6200 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
  6201 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  6202 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  6203 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  6204 ;;      Totals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  6205 ;;Total ram usage:       13 bytes
  6206 ;; Hardware stack levels used:    1
  6207 ;; Hardware stack levels required when called:    1
  6208 ;; This function calls:
  6209 ;;		___ftpack
  6210 ;; This function is called by:
  6211 ;;		_sprintf
  6212 ;;		___ftsub
  6213 ;; This function uses a non-reentrant model
  6214 ;;
  6215                           
  6216                           
  6217                           ;psect for function ___ftadd
  6218  0B0A                     ___ftadd:	
  6219                           
  6220                           ;incstack = 0
  6221                           ; Regs used in ___ftadd: [wreg+status,2+status,0+pclath+cstack]
  6222  0B0A  0140               	movlb	0	; select bank0
  6223  0B0B  0846               	movf	___ftadd@f1,w
  6224  0B0C  00CC               	movwf	??___ftadd
  6225  0B0D  0847               	movf	___ftadd@f1+1,w
  6226  0B0E  00CD               	movwf	??___ftadd+1
  6227  0B0F  0848               	movf	___ftadd@f1+2,w
  6228  0B10  00CE               	movwf	??___ftadd+2
  6229  0B11  1003               	clrc
  6230  0B12  0D4D               	rlf	??___ftadd+1,w
  6231  0B13  0D4E               	rlf	??___ftadd+2,w
  6232  0B14  00CF               	movwf	??___ftadd+3
  6233  0B15  084F               	movf	??___ftadd+3,w
  6234  0B16  00D2               	movwf	___ftadd@exp1
  6235  0B17  0849               	movf	___ftadd@f2,w
  6236  0B18  00CC               	movwf	??___ftadd
  6237  0B19  084A               	movf	___ftadd@f2+1,w
  6238  0B1A  00CD               	movwf	??___ftadd+1
  6239  0B1B  084B               	movf	___ftadd@f2+2,w
  6240  0B1C  00CE               	movwf	??___ftadd+2
  6241  0B1D  1003               	clrc
  6242  0B1E  0D4D               	rlf	??___ftadd+1,w
  6243  0B1F  0D4E               	rlf	??___ftadd+2,w
  6244  0B20  00CF               	movwf	??___ftadd+3
  6245  0B21  084F               	movf	??___ftadd+3,w
  6246  0B22  00D1               	movwf	___ftadd@exp2
  6247  0B23  0852               	movf	___ftadd@exp1,w
  6248  0B24  1903               	btfsc	3,2
  6249  0B25  2B32               	goto	l1865
  6250  0B26  0851               	movf	___ftadd@exp2,w
  6251  0B27  0252               	subwf	___ftadd@exp1,w
  6252  0B28  1803               	skipnc
  6253  0B29  2B39               	goto	l1869
  6254  0B2A  0352               	decf	___ftadd@exp1,w
  6255  0B2B  3AFF               	xorlw	255
  6256  0B2C  0751               	addwf	___ftadd@exp2,w
  6257  0B2D  00CC               	movwf	??___ftadd
  6258  0B2E  3019               	movlw	25
  6259  0B2F  024C               	subwf	??___ftadd,w
  6260  0B30  1C03               	skipc
  6261  0B31  2B39               	goto	l1869
  6262  0B32                     l1865:	
  6263  0B32  0849               	movf	___ftadd@f2,w
  6264  0B33  00C6               	movwf	?___ftadd
  6265  0B34  084A               	movf	___ftadd@f2+1,w
  6266  0B35  00C7               	movwf	?___ftadd+1
  6267  0B36  084B               	movf	___ftadd@f2+2,w
  6268  0B37  00C8               	movwf	?___ftadd+2
  6269  0B38  0008               	return
  6270  0B39                     l1869:	
  6271  0B39  0851               	movf	___ftadd@exp2,w
  6272  0B3A  1903               	btfsc	3,2
  6273  0B3B  0008               	return
  6274  0B3C  0852               	movf	___ftadd@exp1,w
  6275  0B3D  0251               	subwf	___ftadd@exp2,w
  6276  0B3E  1803               	skipnc
  6277  0B3F  2B48               	goto	l1875
  6278  0B40  0351               	decf	___ftadd@exp2,w
  6279  0B41  3AFF               	xorlw	255
  6280  0B42  0752               	addwf	___ftadd@exp1,w
  6281  0B43  00CC               	movwf	??___ftadd
  6282  0B44  3019               	movlw	25
  6283  0B45  024C               	subwf	??___ftadd,w
  6284  0B46  1803               	btfsc	3,0
  6285  0B47  0008               	return
  6286  0B48                     l1875:	
  6287  0B48  3006               	movlw	6
  6288  0B49  00CC               	movwf	??___ftadd
  6289  0B4A  084C               	movf	??___ftadd,w
  6290  0B4B  00D0               	movwf	___ftadd@sign
  6291  0B4C  1BC8               	btfsc	___ftadd@f1+2,7
  6292  0B4D  17D0               	bsf	___ftadd@sign,7
  6293  0B4E  1BCB               	btfsc	___ftadd@f2+2,7
  6294  0B4F  1750               	bsf	___ftadd@sign,6
  6295  0B50  17C7               	bsf	___ftadd@f1+1,7
  6296  0B51  30FF               	movlw	255
  6297  0B52  05C6               	andwf	___ftadd@f1,f
  6298  0B53  30FF               	movlw	255
  6299  0B54  05C7               	andwf	___ftadd@f1+1,f
  6300  0B55  3000               	movlw	0
  6301  0B56  05C8               	andwf	___ftadd@f1+2,f
  6302  0B57  17CA               	bsf	___ftadd@f2+1,7
  6303  0B58  30FF               	movlw	255
  6304  0B59  05C9               	andwf	___ftadd@f2,f
  6305  0B5A  30FF               	movlw	255
  6306  0B5B  05CA               	andwf	___ftadd@f2+1,f
  6307  0B5C  3000               	movlw	0
  6308  0B5D  05CB               	andwf	___ftadd@f2+2,f
  6309  0B5E  0851               	movf	___ftadd@exp2,w
  6310  0B5F  0252               	subwf	___ftadd@exp1,w
  6311  0B60  1803               	skipnc
  6312  0B61  2B84               	goto	l1897
  6313  0B62                     l1887:	
  6314  0B62  3001               	movlw	1
  6315  0B63                     u2395:	
  6316  0B63  35C9               	lslf	___ftadd@f2,f
  6317  0B64  0DCA               	rlf	___ftadd@f2+1,f
  6318  0B65  0DCB               	rlf	___ftadd@f2+2,f
  6319  0B66  0B89               	decfsz	9,f
  6320  0B67  2B63               	goto	u2395
  6321  0B68  3001               	movlw	1
  6322  0B69  02D1               	subwf	___ftadd@exp2,f
  6323  0B6A  0851               	movf	___ftadd@exp2,w
  6324  0B6B  0652               	xorwf	___ftadd@exp1,w
  6325  0B6C  1903               	skipnz
  6326  0B6D  2B7F               	goto	l1895
  6327  0B6E  3001               	movlw	1
  6328  0B6F  02D0               	subwf	___ftadd@sign,f
  6329  0B70  0850               	movf	___ftadd@sign,w
  6330  0B71  3907               	andlw	7
  6331  0B72  1903               	btfsc	3,2
  6332  0B73  2B7F               	goto	l1895
  6333  0B74  2B62               	goto	l1887
  6334  0B75                     l1893:	
  6335  0B75  3001               	movlw	1
  6336  0B76                     u2425:	
  6337  0B76  36C8               	lsrf	___ftadd@f1+2,f
  6338  0B77  0CC7               	rrf	___ftadd@f1+1,f
  6339  0B78  0CC6               	rrf	___ftadd@f1,f
  6340  0B79  0B89               	decfsz	9,f
  6341  0B7A  2B76               	goto	u2425
  6342  0B7B  3001               	movlw	1
  6343  0B7C  00CC               	movwf	??___ftadd
  6344  0B7D  084C               	movf	??___ftadd,w
  6345  0B7E  07D2               	addwf	___ftadd@exp1,f
  6346  0B7F                     l1895:	
  6347  0B7F  0852               	movf	___ftadd@exp1,w
  6348  0B80  0651               	xorwf	___ftadd@exp2,w
  6349  0B81  1903               	btfsc	3,2
  6350  0B82  2BA9               	goto	l481
  6351  0B83  2B75               	goto	l1893
  6352  0B84                     l1897:	
  6353  0B84  0852               	movf	___ftadd@exp1,w
  6354  0B85  0251               	subwf	___ftadd@exp2,w
  6355  0B86  1803               	skipnc
  6356  0B87  2BA9               	goto	l481
  6357  0B88                     l1899:	
  6358  0B88  3001               	movlw	1
  6359  0B89                     u2455:	
  6360  0B89  35C6               	lslf	___ftadd@f1,f
  6361  0B8A  0DC7               	rlf	___ftadd@f1+1,f
  6362  0B8B  0DC8               	rlf	___ftadd@f1+2,f
  6363  0B8C  0B89               	decfsz	9,f
  6364  0B8D  2B89               	goto	u2455
  6365  0B8E  3001               	movlw	1
  6366  0B8F  02D2               	subwf	___ftadd@exp1,f
  6367  0B90  0851               	movf	___ftadd@exp2,w
  6368  0B91  0652               	xorwf	___ftadd@exp1,w
  6369  0B92  1903               	skipnz
  6370  0B93  2BA5               	goto	l1907
  6371  0B94  3001               	movlw	1
  6372  0B95  02D0               	subwf	___ftadd@sign,f
  6373  0B96  0850               	movf	___ftadd@sign,w
  6374  0B97  3907               	andlw	7
  6375  0B98  1903               	btfsc	3,2
  6376  0B99  2BA5               	goto	l1907
  6377  0B9A  2B88               	goto	l1899
  6378  0B9B                     l1905:	
  6379  0B9B  3001               	movlw	1
  6380  0B9C                     u2485:	
  6381  0B9C  36CB               	lsrf	___ftadd@f2+2,f
  6382  0B9D  0CCA               	rrf	___ftadd@f2+1,f
  6383  0B9E  0CC9               	rrf	___ftadd@f2,f
  6384  0B9F  0B89               	decfsz	9,f
  6385  0BA0  2B9C               	goto	u2485
  6386  0BA1  3001               	movlw	1
  6387  0BA2  00CC               	movwf	??___ftadd
  6388  0BA3  084C               	movf	??___ftadd,w
  6389  0BA4  07D1               	addwf	___ftadd@exp2,f
  6390  0BA5                     l1907:	
  6391  0BA5  0852               	movf	___ftadd@exp1,w
  6392  0BA6  0651               	xorwf	___ftadd@exp2,w
  6393  0BA7  1D03               	skipz
  6394  0BA8  2B9B               	goto	l1905
  6395  0BA9                     l481:	
  6396  0BA9  1FD0               	btfss	___ftadd@sign,7
  6397  0BAA  2BBB               	goto	l1911
  6398  0BAB  30FF               	movlw	255
  6399  0BAC  06C6               	xorwf	___ftadd@f1,f
  6400  0BAD  30FF               	movlw	255
  6401  0BAE  06C7               	xorwf	___ftadd@f1+1,f
  6402  0BAF  30FF               	movlw	255
  6403  0BB0  06C8               	xorwf	___ftadd@f1+2,f
  6404  0BB1  3001               	movlw	1
  6405  0BB2  07C6               	addwf	___ftadd@f1,f
  6406  0BB3  3000               	movlw	0
  6407  0BB4  1803               	skipnc
  6408  0BB5  3001               	movlw	1
  6409  0BB6  07C7               	addwf	___ftadd@f1+1,f
  6410  0BB7  3000               	movlw	0
  6411  0BB8  1803               	skipnc
  6412  0BB9  3001               	movlw	1
  6413  0BBA  07C8               	addwf	___ftadd@f1+2,f
  6414  0BBB                     l1911:	
  6415  0BBB  1F50               	btfss	___ftadd@sign,6
  6416  0BBC  2BCD               	goto	l1915
  6417  0BBD  30FF               	movlw	255
  6418  0BBE  06C9               	xorwf	___ftadd@f2,f
  6419  0BBF  30FF               	movlw	255
  6420  0BC0  06CA               	xorwf	___ftadd@f2+1,f
  6421  0BC1  30FF               	movlw	255
  6422  0BC2  06CB               	xorwf	___ftadd@f2+2,f
  6423  0BC3  3001               	movlw	1
  6424  0BC4  07C9               	addwf	___ftadd@f2,f
  6425  0BC5  3000               	movlw	0
  6426  0BC6  1803               	skipnc
  6427  0BC7  3001               	movlw	1
  6428  0BC8  07CA               	addwf	___ftadd@f2+1,f
  6429  0BC9  3000               	movlw	0
  6430  0BCA  1803               	skipnc
  6431  0BCB  3001               	movlw	1
  6432  0BCC  07CB               	addwf	___ftadd@f2+2,f
  6433  0BCD                     l1915:	
  6434  0BCD  01D0               	clrf	___ftadd@sign
  6435  0BCE  0846               	movf	___ftadd@f1,w
  6436  0BCF  07C9               	addwf	___ftadd@f2,f
  6437  0BD0  0847               	movf	___ftadd@f1+1,w
  6438  0BD1  3DCA               	addwfc	___ftadd@f2+1,f
  6439  0BD2  0848               	movf	___ftadd@f1+2,w
  6440  0BD3  3DCB               	addwfc	___ftadd@f2+2,f
  6441  0BD4  1FCB               	btfss	___ftadd@f2+2,7
  6442  0BD5  2BE8               	goto	l1925
  6443  0BD6  30FF               	movlw	255
  6444  0BD7  06C9               	xorwf	___ftadd@f2,f
  6445  0BD8  30FF               	movlw	255
  6446  0BD9  06CA               	xorwf	___ftadd@f2+1,f
  6447  0BDA  30FF               	movlw	255
  6448  0BDB  06CB               	xorwf	___ftadd@f2+2,f
  6449  0BDC  3001               	movlw	1
  6450  0BDD  07C9               	addwf	___ftadd@f2,f
  6451  0BDE  3000               	movlw	0
  6452  0BDF  1803               	skipnc
  6453  0BE0  3001               	movlw	1
  6454  0BE1  07CA               	addwf	___ftadd@f2+1,f
  6455  0BE2  3000               	movlw	0
  6456  0BE3  1803               	skipnc
  6457  0BE4  3001               	movlw	1
  6458  0BE5  07CB               	addwf	___ftadd@f2+2,f
  6459  0BE6  01D0               	clrf	___ftadd@sign
  6460  0BE7  0AD0               	incf	___ftadd@sign,f
  6461  0BE8                     l1925:	
  6462  0BE8  0849               	movf	___ftadd@f2,w
  6463  0BE9  00F0               	movwf	___ftpack@arg
  6464  0BEA  084A               	movf	___ftadd@f2+1,w
  6465  0BEB  00F1               	movwf	___ftpack@arg+1
  6466  0BEC  084B               	movf	___ftadd@f2+2,w
  6467  0BED  00F2               	movwf	___ftpack@arg+2
  6468  0BEE  0852               	movf	___ftadd@exp1,w
  6469  0BEF  00CC               	movwf	??___ftadd
  6470  0BF0  084C               	movf	??___ftadd,w
  6471  0BF1  00F3               	movwf	___ftpack@exp
  6472  0BF2  0850               	movf	___ftadd@sign,w
  6473  0BF3  00CD               	movwf	??___ftadd+1
  6474  0BF4  084D               	movf	??___ftadd+1,w
  6475  0BF5  00F4               	movwf	___ftpack@sign
  6476  0BF6  3188  2009         	fcall	___ftpack
  6477  0BF8  0870               	movf	?___ftpack,w
  6478  0BF9  0140               	movlb	0	; select bank0
  6479  0BFA  00C6               	movwf	?___ftadd
  6480  0BFB  0871               	movf	?___ftpack+1,w
  6481  0BFC  00C7               	movwf	?___ftadd+1
  6482  0BFD  0872               	movf	?___ftpack+2,w
  6483  0BFE  00C8               	movwf	?___ftadd+2
  6484  0BFF  0008               	return
  6485  0C00                     __end_of___ftadd:	
  6486                           
  6487                           	psect	text17
  6488  0801                     __ptext17:	
  6489 ;; *************** function ___ftneg *****************
  6490 ;; Defined at:
  6491 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\ftneg.c"
  6492 ;; Parameters:    Size  Location     Type
  6493 ;;  f1              3    0[COMMON] float 
  6494 ;; Auto vars:     Size  Location     Type
  6495 ;;		None
  6496 ;; Return value:  Size  Location     Type
  6497 ;;                  3    0[COMMON] float 
  6498 ;; Registers used:
  6499 ;;		wreg
  6500 ;; Tracked objects:
  6501 ;;		On entry : 0/0
  6502 ;;		On exit  : 0/0
  6503 ;;		Unchanged: 0/0
  6504 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
  6505 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  6506 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  6507 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  6508 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  6509 ;;Total ram usage:        3 bytes
  6510 ;; Hardware stack levels used:    1
  6511 ;; This function calls:
  6512 ;;		Nothing
  6513 ;; This function is called by:
  6514 ;;		_sprintf
  6515 ;; This function uses a non-reentrant model
  6516 ;;
  6517                           
  6518                           
  6519                           ;psect for function ___ftneg
  6520  0801                     ___ftneg:	
  6521                           
  6522                           ;incstack = 0
  6523                           ; Regs used in ___ftneg: [wreg]
  6524  0801  0872               	movf	___ftneg@f1+2,w
  6525  0802  0471               	iorwf	___ftneg@f1+1,w
  6526  0803  0470               	iorwf	___ftneg@f1,w
  6527  0804  1903               	skipnz
  6528  0805  0008               	return
  6529  0806  3080               	movlw	128
  6530  0807  06F2               	xorwf	___ftneg@f1+2,f
  6531  0808  0008               	return
  6532  0809                     __end_of___ftneg:	
  6533                           
  6534                           	psect	text18
  6535  1580                     __ptext18:	
  6536 ;; *************** function ___ftge *****************
  6537 ;; Defined at:
  6538 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\ftge.c"
  6539 ;; Parameters:    Size  Location     Type
  6540 ;;  ff1             3    0[COMMON] float 
  6541 ;;  ff2             3    3[COMMON] float 
  6542 ;; Auto vars:     Size  Location     Type
  6543 ;;		None
  6544 ;; Return value:  Size  Location     Type
  6545 ;;		None               void
  6546 ;; Registers used:
  6547 ;;		wreg, status,2, status,0
  6548 ;; Tracked objects:
  6549 ;;		On entry : 0/0
  6550 ;;		On exit  : 0/0
  6551 ;;		Unchanged: 0/0
  6552 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
  6553 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  6554 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  6555 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  6556 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  6557 ;;Total ram usage:        9 bytes
  6558 ;; Hardware stack levels used:    1
  6559 ;; This function calls:
  6560 ;;		Nothing
  6561 ;; This function is called by:
  6562 ;;		_sprintf
  6563 ;; This function uses a non-reentrant model
  6564 ;;
  6565                           
  6566                           
  6567                           ;psect for function ___ftge
  6568  1580                     ___ftge:	
  6569                           
  6570                           ;incstack = 0
  6571                           ; Regs used in ___ftge: [wreg+status,2+status,0]
  6572  1580  1FF2               	btfss	___ftge@ff1+2,7
  6573  1581  2D96               	goto	l2209
  6574  1582  0970               	comf	___ftge@ff1,w
  6575  1583  00F6               	movwf	??___ftge
  6576  1584  0971               	comf	___ftge@ff1+1,w
  6577  1585  00F7               	movwf	??___ftge+1
  6578  1586  0972               	comf	___ftge@ff1+2,w
  6579  1587  00F8               	movwf	??___ftge+2
  6580  1588  0AF6               	incf	??___ftge,f
  6581  1589  1903               	skipnz
  6582  158A  0AF7               	incf	??___ftge+1,f
  6583  158B  1903               	skipnz
  6584  158C  0AF8               	incf	??___ftge+2,f
  6585  158D  3000               	movlw	0
  6586  158E  0776               	addwf	??___ftge,w
  6587  158F  00F0               	movwf	___ftge@ff1
  6588  1590  3000               	movlw	0
  6589  1591  3D77               	addwfc	??___ftge+1,w
  6590  1592  00F1               	movwf	___ftge@ff1+1
  6591  1593  3080               	movlw	128
  6592  1594  3D78               	addwfc	??___ftge+2,w
  6593  1595  00F2               	movwf	___ftge@ff1+2
  6594  1596                     l2209:	
  6595  1596  1FF5               	btfss	___ftge@ff2+2,7
  6596  1597  2DAC               	goto	l2213
  6597  1598  0973               	comf	___ftge@ff2,w
  6598  1599  00F6               	movwf	??___ftge
  6599  159A  0974               	comf	___ftge@ff2+1,w
  6600  159B  00F7               	movwf	??___ftge+1
  6601  159C  0975               	comf	___ftge@ff2+2,w
  6602  159D  00F8               	movwf	??___ftge+2
  6603  159E  0AF6               	incf	??___ftge,f
  6604  159F  1903               	skipnz
  6605  15A0  0AF7               	incf	??___ftge+1,f
  6606  15A1  1903               	skipnz
  6607  15A2  0AF8               	incf	??___ftge+2,f
  6608  15A3  3000               	movlw	0
  6609  15A4  0776               	addwf	??___ftge,w
  6610  15A5  00F3               	movwf	___ftge@ff2
  6611  15A6  3000               	movlw	0
  6612  15A7  3D77               	addwfc	??___ftge+1,w
  6613  15A8  00F4               	movwf	___ftge@ff2+1
  6614  15A9  3080               	movlw	128
  6615  15AA  3D78               	addwfc	??___ftge+2,w
  6616  15AB  00F5               	movwf	___ftge@ff2+2
  6617  15AC                     l2213:	
  6618  15AC  3080               	movlw	128
  6619  15AD  06F2               	xorwf	___ftge@ff1+2,f
  6620  15AE  3080               	movlw	128
  6621  15AF  06F5               	xorwf	___ftge@ff2+2,f
  6622  15B0  0875               	movf	___ftge@ff2+2,w
  6623  15B1  0272               	subwf	___ftge@ff1+2,w
  6624  15B2  1D03               	skipz
  6625  15B3  0008               	return
  6626  15B4  0874               	movf	___ftge@ff2+1,w
  6627  15B5  0271               	subwf	___ftge@ff1+1,w
  6628  15B6  1D03               	skipz
  6629  15B7  0008               	return
  6630  15B8  0873               	movf	___ftge@ff2,w
  6631  15B9  0270               	subwf	___ftge@ff1,w
  6632  15BA  0008               	return
  6633  15BB                     __end_of___ftge:	
  6634                           
  6635                           	psect	text19
  6636  09AD                     __ptext19:	
  6637 ;; *************** function ___ftdiv *****************
  6638 ;; Defined at:
  6639 ;;		line 56 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\ftdiv.c"
  6640 ;; Parameters:    Size  Location     Type
  6641 ;;  f2              3   24[BANK0 ] float 
  6642 ;;  f1              3   27[BANK0 ] float 
  6643 ;; Auto vars:     Size  Location     Type
  6644 ;;  f3              3   35[BANK0 ] float 
  6645 ;;  sign            1   39[BANK0 ] unsigned char 
  6646 ;;  exp             1   38[BANK0 ] unsigned char 
  6647 ;;  cntr            1   34[BANK0 ] unsigned char 
  6648 ;; Return value:  Size  Location     Type
  6649 ;;                  3   24[BANK0 ] float 
  6650 ;; Registers used:
  6651 ;;		wreg, status,2, status,0, pclath, cstack
  6652 ;; Tracked objects:
  6653 ;;		On entry : 0/0
  6654 ;;		On exit  : 0/0
  6655 ;;		Unchanged: 0/0
  6656 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
  6657 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  6658 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  6659 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  6660 ;;      Totals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  6661 ;;Total ram usage:       16 bytes
  6662 ;; Hardware stack levels used:    1
  6663 ;; Hardware stack levels required when called:    1
  6664 ;; This function calls:
  6665 ;;		___ftpack
  6666 ;; This function is called by:
  6667 ;;		_main
  6668 ;; This function uses a non-reentrant model
  6669 ;;
  6670                           
  6671                           
  6672                           ;psect for function ___ftdiv
  6673  09AD                     ___ftdiv:	
  6674                           
  6675                           ;incstack = 0
  6676                           ; Regs used in ___ftdiv: [wreg+status,2+status,0+pclath+cstack]
  6677  09AD  0140               	movlb	0	; select bank0
  6678  09AE  083B               	movf	___ftdiv@f1,w
  6679  09AF  00BE               	movwf	??___ftdiv
  6680  09B0  083C               	movf	___ftdiv@f1+1,w
  6681  09B1  00BF               	movwf	??___ftdiv+1
  6682  09B2  083D               	movf	___ftdiv@f1+2,w
  6683  09B3  00C0               	movwf	??___ftdiv+2
  6684  09B4  1003               	clrc
  6685  09B5  0D3F               	rlf	??___ftdiv+1,w
  6686  09B6  0D40               	rlf	??___ftdiv+2,w
  6687  09B7  00C1               	movwf	??___ftdiv+3
  6688  09B8  0841               	movf	??___ftdiv+3,w
  6689  09B9  00C6               	movwf	___ftdiv@exp
  6690  09BA  0846               	movf	___ftdiv@exp,w
  6691  09BB  1D03               	btfss	3,2
  6692  09BC  29C4               	goto	l2625
  6693  09BD  3000               	movlw	0
  6694  09BE  00B8               	movwf	?___ftdiv
  6695  09BF  3000               	movlw	0
  6696  09C0  00B9               	movwf	?___ftdiv+1
  6697  09C1  3000               	movlw	0
  6698  09C2  00BA               	movwf	?___ftdiv+2
  6699  09C3  0008               	return
  6700  09C4                     l2625:	
  6701  09C4  0838               	movf	___ftdiv@f2,w
  6702  09C5  00BE               	movwf	??___ftdiv
  6703  09C6  0839               	movf	___ftdiv@f2+1,w
  6704  09C7  00BF               	movwf	??___ftdiv+1
  6705  09C8  083A               	movf	___ftdiv@f2+2,w
  6706  09C9  00C0               	movwf	??___ftdiv+2
  6707  09CA  1003               	clrc
  6708  09CB  0D3F               	rlf	??___ftdiv+1,w
  6709  09CC  0D40               	rlf	??___ftdiv+2,w
  6710  09CD  00C1               	movwf	??___ftdiv+3
  6711  09CE  0841               	movf	??___ftdiv+3,w
  6712  09CF  00C7               	movwf	___ftdiv@sign
  6713  09D0  0847               	movf	___ftdiv@sign,w
  6714  09D1  1D03               	btfss	3,2
  6715  09D2  29DA               	goto	l2631
  6716  09D3  3000               	movlw	0
  6717  09D4  00B8               	movwf	?___ftdiv
  6718  09D5  3000               	movlw	0
  6719  09D6  00B9               	movwf	?___ftdiv+1
  6720  09D7  3000               	movlw	0
  6721  09D8  00BA               	movwf	?___ftdiv+2
  6722  09D9  0008               	return
  6723  09DA                     l2631:	
  6724  09DA  3000               	movlw	0
  6725  09DB  00C3               	movwf	___ftdiv@f3
  6726  09DC  3000               	movlw	0
  6727  09DD  00C4               	movwf	___ftdiv@f3+1
  6728  09DE  3000               	movlw	0
  6729  09DF  00C5               	movwf	___ftdiv@f3+2
  6730  09E0  3089               	movlw	137
  6731  09E1  0747               	addwf	___ftdiv@sign,w
  6732  09E2  00BE               	movwf	??___ftdiv
  6733  09E3  083E               	movf	??___ftdiv,w
  6734  09E4  02C6               	subwf	___ftdiv@exp,f
  6735  09E5  083B               	movf	___ftdiv@f1,w
  6736  09E6  00BE               	movwf	??___ftdiv
  6737  09E7  083C               	movf	___ftdiv@f1+1,w
  6738  09E8  00BF               	movwf	??___ftdiv+1
  6739  09E9  083D               	movf	___ftdiv@f1+2,w
  6740  09EA  00C0               	movwf	??___ftdiv+2
  6741  09EB  3010               	movlw	16
  6742  09EC                     u3805:	
  6743  09EC  36C0               	lsrf	??___ftdiv+2,f
  6744  09ED  0CBF               	rrf	??___ftdiv+1,f
  6745  09EE  0CBE               	rrf	??___ftdiv,f
  6746  09EF  0B89               	decfsz	9,f
  6747  09F0  29EC               	goto	u3805
  6748  09F1  083E               	movf	??___ftdiv,w
  6749  09F2  00C1               	movwf	??___ftdiv+3
  6750  09F3  0841               	movf	??___ftdiv+3,w
  6751  09F4  00C7               	movwf	___ftdiv@sign
  6752  09F5  0838               	movf	___ftdiv@f2,w
  6753  09F6  00BE               	movwf	??___ftdiv
  6754  09F7  0839               	movf	___ftdiv@f2+1,w
  6755  09F8  00BF               	movwf	??___ftdiv+1
  6756  09F9  083A               	movf	___ftdiv@f2+2,w
  6757  09FA  00C0               	movwf	??___ftdiv+2
  6758  09FB  3010               	movlw	16
  6759  09FC                     u3815:	
  6760  09FC  36C0               	lsrf	??___ftdiv+2,f
  6761  09FD  0CBF               	rrf	??___ftdiv+1,f
  6762  09FE  0CBE               	rrf	??___ftdiv,f
  6763  09FF  0B89               	decfsz	9,f
  6764  0A00  29FC               	goto	u3815
  6765  0A01  083E               	movf	??___ftdiv,w
  6766  0A02  00C1               	movwf	??___ftdiv+3
  6767  0A03  0841               	movf	??___ftdiv+3,w
  6768  0A04  06C7               	xorwf	___ftdiv@sign,f
  6769  0A05  3080               	movlw	128
  6770  0A06  00BE               	movwf	??___ftdiv
  6771  0A07  083E               	movf	??___ftdiv,w
  6772  0A08  05C7               	andwf	___ftdiv@sign,f
  6773  0A09  17BC               	bsf	___ftdiv@f1+1,7
  6774  0A0A  30FF               	movlw	255
  6775  0A0B  05BB               	andwf	___ftdiv@f1,f
  6776  0A0C  30FF               	movlw	255
  6777  0A0D  05BC               	andwf	___ftdiv@f1+1,f
  6778  0A0E  3000               	movlw	0
  6779  0A0F  05BD               	andwf	___ftdiv@f1+2,f
  6780  0A10  17B9               	bsf	___ftdiv@f2+1,7
  6781  0A11  30FF               	movlw	255
  6782  0A12  05B8               	andwf	___ftdiv@f2,f
  6783  0A13  30FF               	movlw	255
  6784  0A14  05B9               	andwf	___ftdiv@f2+1,f
  6785  0A15  3000               	movlw	0
  6786  0A16  05BA               	andwf	___ftdiv@f2+2,f
  6787  0A17  3018               	movlw	24
  6788  0A18  00BE               	movwf	??___ftdiv
  6789  0A19  083E               	movf	??___ftdiv,w
  6790  0A1A  00C2               	movwf	___ftdiv@cntr
  6791  0A1B                     l2645:	
  6792  0A1B  3001               	movlw	1
  6793  0A1C                     u3825:	
  6794  0A1C  35C3               	lslf	___ftdiv@f3,f
  6795  0A1D  0DC4               	rlf	___ftdiv@f3+1,f
  6796  0A1E  0DC5               	rlf	___ftdiv@f3+2,f
  6797  0A1F  0B89               	decfsz	9,f
  6798  0A20  2A1C               	goto	u3825
  6799  0A21  083A               	movf	___ftdiv@f2+2,w
  6800  0A22  023D               	subwf	___ftdiv@f1+2,w
  6801  0A23  1D03               	skipz
  6802  0A24  2A2B               	goto	u3835
  6803  0A25  0839               	movf	___ftdiv@f2+1,w
  6804  0A26  023C               	subwf	___ftdiv@f1+1,w
  6805  0A27  1D03               	skipz
  6806  0A28  2A2B               	goto	u3835
  6807  0A29  0838               	movf	___ftdiv@f2,w
  6808  0A2A  023B               	subwf	___ftdiv@f1,w
  6809  0A2B                     u3835:	
  6810  0A2B  1C03               	skipc
  6811  0A2C  2A34               	goto	l2653
  6812  0A2D  0838               	movf	___ftdiv@f2,w
  6813  0A2E  02BB               	subwf	___ftdiv@f1,f
  6814  0A2F  0839               	movf	___ftdiv@f2+1,w
  6815  0A30  3BBC               	subwfb	___ftdiv@f1+1,f
  6816  0A31  083A               	movf	___ftdiv@f2+2,w
  6817  0A32  3BBD               	subwfb	___ftdiv@f1+2,f
  6818  0A33  1443               	bsf	___ftdiv@f3,0
  6819  0A34                     l2653:	
  6820  0A34  3001               	movlw	1
  6821  0A35                     u3845:	
  6822  0A35  35BB               	lslf	___ftdiv@f1,f
  6823  0A36  0DBC               	rlf	___ftdiv@f1+1,f
  6824  0A37  0DBD               	rlf	___ftdiv@f1+2,f
  6825  0A38  0B89               	decfsz	9,f
  6826  0A39  2A35               	goto	u3845
  6827  0A3A  3001               	movlw	1
  6828  0A3B  02C2               	subwf	___ftdiv@cntr,f
  6829  0A3C  1D03               	btfss	3,2
  6830  0A3D  2A1B               	goto	l2645
  6831  0A3E  0843               	movf	___ftdiv@f3,w
  6832  0A3F  00F0               	movwf	___ftpack@arg
  6833  0A40  0844               	movf	___ftdiv@f3+1,w
  6834  0A41  00F1               	movwf	___ftpack@arg+1
  6835  0A42  0845               	movf	___ftdiv@f3+2,w
  6836  0A43  00F2               	movwf	___ftpack@arg+2
  6837  0A44  0846               	movf	___ftdiv@exp,w
  6838  0A45  00BE               	movwf	??___ftdiv
  6839  0A46  083E               	movf	??___ftdiv,w
  6840  0A47  00F3               	movwf	___ftpack@exp
  6841  0A48  0847               	movf	___ftdiv@sign,w
  6842  0A49  00BF               	movwf	??___ftdiv+1
  6843  0A4A  083F               	movf	??___ftdiv+1,w
  6844  0A4B  00F4               	movwf	___ftpack@sign
  6845  0A4C  3188  2009         	fcall	___ftpack
  6846  0A4E  0870               	movf	?___ftpack,w
  6847  0A4F  0140               	movlb	0	; select bank0
  6848  0A50  00B8               	movwf	?___ftdiv
  6849  0A51  0871               	movf	?___ftpack+1,w
  6850  0A52  00B9               	movwf	?___ftdiv+1
  6851  0A53  0872               	movf	?___ftpack+2,w
  6852  0A54  00BA               	movwf	?___ftdiv+2
  6853  0A55  0008               	return
  6854  0A56                     __end_of___ftdiv:	
  6855                           
  6856                           	psect	text20
  6857  1503                     __ptext20:	
  6858 ;; *************** function ___awtoft *****************
  6859 ;; Defined at:
  6860 ;;		line 32 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\awtoft.c"
  6861 ;; Parameters:    Size  Location     Type
  6862 ;;  c               2    8[COMMON] int 
  6863 ;; Auto vars:     Size  Location     Type
  6864 ;;  sign            1   13[COMMON] unsigned char 
  6865 ;; Return value:  Size  Location     Type
  6866 ;;                  3    8[COMMON] float 
  6867 ;; Registers used:
  6868 ;;		wreg, status,2, status,0, pclath, cstack
  6869 ;; Tracked objects:
  6870 ;;		On entry : 0/0
  6871 ;;		On exit  : 0/0
  6872 ;;		Unchanged: 0/0
  6873 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
  6874 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  6875 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  6876 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  6877 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  6878 ;;Total ram usage:        6 bytes
  6879 ;; Hardware stack levels used:    1
  6880 ;; Hardware stack levels required when called:    1
  6881 ;; This function calls:
  6882 ;;		___ftpack
  6883 ;; This function is called by:
  6884 ;;		_main
  6885 ;; This function uses a non-reentrant model
  6886 ;;
  6887                           
  6888                           
  6889                           ;psect for function ___awtoft
  6890  1503                     ___awtoft:	
  6891                           
  6892                           ;incstack = 0
  6893                           ; Regs used in ___awtoft: [wreg+status,2+status,0+pclath+cstack]
  6894  1503  01FD               	clrf	___awtoft@sign
  6895  1504  1FF9               	btfss	___awtoft@c+1,7
  6896  1505  2D0D               	goto	l2615
  6897  1506  09F8               	comf	___awtoft@c,f
  6898  1507  09F9               	comf	___awtoft@c+1,f
  6899  1508  0AF8               	incf	___awtoft@c,f
  6900  1509  1903               	skipnz
  6901  150A  0AF9               	incf	___awtoft@c+1,f
  6902  150B  01FD               	clrf	___awtoft@sign
  6903  150C  0AFD               	incf	___awtoft@sign,f
  6904  150D                     l2615:	
  6905  150D  0878               	movf	___awtoft@c,w
  6906  150E  00F0               	movwf	___ftpack@arg
  6907  150F  0879               	movf	___awtoft@c+1,w
  6908  1510  00F1               	movwf	___ftpack@arg+1
  6909  1511  01F2               	clrf	___ftpack@arg+2
  6910  1512  308E               	movlw	142
  6911  1513  00FB               	movwf	??___awtoft
  6912  1514  087B               	movf	??___awtoft,w
  6913  1515  00F3               	movwf	___ftpack@exp
  6914  1516  087D               	movf	___awtoft@sign,w
  6915  1517  00FC               	movwf	??___awtoft+1
  6916  1518  087C               	movf	??___awtoft+1,w
  6917  1519  00F4               	movwf	___ftpack@sign
  6918  151A  3188  2009         	fcall	___ftpack
  6919  151C  0870               	movf	?___ftpack,w
  6920  151D  00F8               	movwf	?___awtoft
  6921  151E  0871               	movf	?___ftpack+1,w
  6922  151F  00F9               	movwf	?___awtoft+1
  6923  1520  0872               	movf	?___ftpack+2,w
  6924  1521  00FA               	movwf	?___awtoft+2
  6925  1522  0008               	return
  6926  1523                     __end_of___awtoft:	
  6927                           
  6928                           	psect	text21
  6929  0809                     __ptext21:	
  6930 ;; *************** function ___ftpack *****************
  6931 ;; Defined at:
  6932 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\float.c"
  6933 ;; Parameters:    Size  Location     Type
  6934 ;;  arg             3    0[COMMON] unsigned um
  6935 ;;  exp             1    3[COMMON] unsigned char 
  6936 ;;  sign            1    4[COMMON] unsigned char 
  6937 ;; Auto vars:     Size  Location     Type
  6938 ;;		None
  6939 ;; Return value:  Size  Location     Type
  6940 ;;                  3    0[COMMON] float 
  6941 ;; Registers used:
  6942 ;;		wreg, status,2, status,0
  6943 ;; Tracked objects:
  6944 ;;		On entry : 0/0
  6945 ;;		On exit  : 0/0
  6946 ;;		Unchanged: 0/0
  6947 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
  6948 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  6949 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  6950 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  6951 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  6952 ;;Total ram usage:        8 bytes
  6953 ;; Hardware stack levels used:    1
  6954 ;; This function calls:
  6955 ;;		Nothing
  6956 ;; This function is called by:
  6957 ;;		___awtoft
  6958 ;;		___ftadd
  6959 ;;		___ftdiv
  6960 ;;		___ftmul
  6961 ;;		___lltoft
  6962 ;; This function uses a non-reentrant model
  6963 ;;
  6964                           
  6965                           
  6966                           ;psect for function ___ftpack
  6967  0809                     ___ftpack:	
  6968                           
  6969                           ;incstack = 0
  6970                           ; Regs used in ___ftpack: [wreg+status,2+status,0]
  6971  0809  0873               	movf	___ftpack@exp,w
  6972  080A  1903               	btfsc	3,2
  6973  080B  2811               	goto	l1735
  6974  080C  0872               	movf	___ftpack@arg+2,w
  6975  080D  0471               	iorwf	___ftpack@arg+1,w
  6976  080E  0470               	iorwf	___ftpack@arg,w
  6977  080F  1D03               	skipz
  6978  0810  2822               	goto	l1741
  6979  0811                     l1735:	
  6980  0811  3000               	movlw	0
  6981  0812  00F0               	movwf	?___ftpack
  6982  0813  3000               	movlw	0
  6983  0814  00F1               	movwf	?___ftpack+1
  6984  0815  3000               	movlw	0
  6985  0816  00F2               	movwf	?___ftpack+2
  6986  0817  0008               	return
  6987  0818                     l1739:	
  6988  0818  3001               	movlw	1
  6989  0819  00F5               	movwf	??___ftpack
  6990  081A  0875               	movf	??___ftpack,w
  6991  081B  07F3               	addwf	___ftpack@exp,f
  6992  081C  3001               	movlw	1
  6993  081D                     u1975:	
  6994  081D  36F2               	lsrf	___ftpack@arg+2,f
  6995  081E  0CF1               	rrf	___ftpack@arg+1,f
  6996  081F  0CF0               	rrf	___ftpack@arg,f
  6997  0820  0B89               	decfsz	9,f
  6998  0821  281D               	goto	u1975
  6999  0822                     l1741:	
  7000  0822  30FE               	movlw	254
  7001  0823  0572               	andwf	___ftpack@arg+2,w
  7002  0824  1903               	btfsc	3,2
  7003  0825  283B               	goto	l450
  7004  0826  2818               	goto	l1739
  7005  0827                     l1743:	
  7006  0827  3001               	movlw	1
  7007  0828  00F5               	movwf	??___ftpack
  7008  0829  0875               	movf	??___ftpack,w
  7009  082A  07F3               	addwf	___ftpack@exp,f
  7010  082B  3001               	movlw	1
  7011  082C  07F0               	addwf	___ftpack@arg,f
  7012  082D  3000               	movlw	0
  7013  082E  1803               	skipnc
  7014  082F  3001               	movlw	1
  7015  0830  07F1               	addwf	___ftpack@arg+1,f
  7016  0831  3000               	movlw	0
  7017  0832  1803               	skipnc
  7018  0833  3001               	movlw	1
  7019  0834  07F2               	addwf	___ftpack@arg+2,f
  7020  0835  3001               	movlw	1
  7021  0836                     u1995:	
  7022  0836  36F2               	lsrf	___ftpack@arg+2,f
  7023  0837  0CF1               	rrf	___ftpack@arg+1,f
  7024  0838  0CF0               	rrf	___ftpack@arg,f
  7025  0839  0B89               	decfsz	9,f
  7026  083A  2836               	goto	u1995
  7027  083B                     l450:	
  7028  083B  30FF               	movlw	255
  7029  083C  0572               	andwf	___ftpack@arg+2,w
  7030  083D  1903               	btfsc	3,2
  7031  083E  2848               	goto	l1751
  7032  083F  2827               	goto	l1743
  7033  0840                     l1749:	
  7034  0840  3001               	movlw	1
  7035  0841  02F3               	subwf	___ftpack@exp,f
  7036  0842  3001               	movlw	1
  7037  0843                     u2015:	
  7038  0843  35F0               	lslf	___ftpack@arg,f
  7039  0844  0DF1               	rlf	___ftpack@arg+1,f
  7040  0845  0DF2               	rlf	___ftpack@arg+2,f
  7041  0846  0B89               	decfsz	9,f
  7042  0847  2843               	goto	u2015
  7043  0848                     l1751:	
  7044  0848  1BF1               	btfsc	___ftpack@arg+1,7
  7045  0849  284E               	goto	l457
  7046  084A  3002               	movlw	2
  7047  084B  0273               	subwf	___ftpack@exp,w
  7048  084C  1803               	skipnc
  7049  084D  2840               	goto	l1749
  7050  084E                     l457:	
  7051  084E  1873               	btfsc	___ftpack@exp,0
  7052  084F  2856               	goto	l458
  7053  0850  30FF               	movlw	255
  7054  0851  05F0               	andwf	___ftpack@arg,f
  7055  0852  307F               	movlw	127
  7056  0853  05F1               	andwf	___ftpack@arg+1,f
  7057  0854  30FF               	movlw	255
  7058  0855  05F2               	andwf	___ftpack@arg+2,f
  7059  0856                     l458:	
  7060  0856  1003               	clrc
  7061  0857  0CF3               	rrf	___ftpack@exp,f
  7062  0858  0873               	movf	___ftpack@exp,w
  7063  0859  00F5               	movwf	??___ftpack
  7064  085A  01F6               	clrf	??___ftpack+1
  7065  085B  01F7               	clrf	??___ftpack+2
  7066  085C  3010               	movlw	16
  7067  085D                     u2055:	
  7068  085D  35F5               	lslf	??___ftpack,f
  7069  085E  0DF6               	rlf	??___ftpack+1,f
  7070  085F  0DF7               	rlf	??___ftpack+2,f
  7071  0860  0B89               	decfsz	9,f
  7072  0861  285D               	goto	u2055
  7073  0862  0875               	movf	??___ftpack,w
  7074  0863  04F0               	iorwf	___ftpack@arg,f
  7075  0864  0876               	movf	??___ftpack+1,w
  7076  0865  04F1               	iorwf	___ftpack@arg+1,f
  7077  0866  0877               	movf	??___ftpack+2,w
  7078  0867  04F2               	iorwf	___ftpack@arg+2,f
  7079  0868  0874               	movf	___ftpack@sign,w
  7080  0869  1903               	btfsc	3,2
  7081  086A  0008               	return
  7082  086B  17F2               	bsf	___ftpack@arg+2,7
  7083  086C  0008               	return
  7084  086D                     __end_of___ftpack:	
  7085                           
  7086                           	psect	text22
  7087  154B                     __ptext22:	
  7088 ;; *************** function _Lcd_Out2 *****************
  7089 ;; Defined at:
  7090 ;;		line 115 in file "flex_lcd_1.h"
  7091 ;; Parameters:    Size  Location     Type
  7092 ;;  y               1    wreg     unsigned char 
  7093 ;;  x               1    3[COMMON] unsigned char 
  7094 ;;  buffer          1    4[COMMON] PTR unsigned char 
  7095 ;;		 -> main@buffer1(16), 
  7096 ;; Auto vars:     Size  Location     Type
  7097 ;;  y               1    6[COMMON] unsigned char 
  7098 ;;  data            1    7[COMMON] unsigned char 
  7099 ;; Return value:  Size  Location     Type
  7100 ;;                  1    wreg      void 
  7101 ;; Registers used:
  7102 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7103 ;; Tracked objects:
  7104 ;;		On entry : 0/0
  7105 ;;		On exit  : 0/0
  7106 ;;		Unchanged: 0/0
  7107 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
  7108 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  7109 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  7110 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  7111 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  7112 ;;Total ram usage:        5 bytes
  7113 ;; Hardware stack levels used:    1
  7114 ;; Hardware stack levels required when called:    1
  7115 ;; This function calls:
  7116 ;;		_Lcd_Chr_CP
  7117 ;;		_Lcd_Cmd
  7118 ;; This function is called by:
  7119 ;;		_main
  7120 ;; This function uses a non-reentrant model
  7121 ;;
  7122                           
  7123                           
  7124                           ;psect for function _Lcd_Out2
  7125  154B                     _Lcd_Out2:	
  7126                           
  7127                           ;incstack = 0
  7128                           ; Regs used in _Lcd_Out2: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  7129                           ;Lcd_Out2@y stored from wreg
  7130  154B  00F6               	movwf	Lcd_Out2@y
  7131                           
  7132                           ;flex_lcd_1.h: 117: unsigned char data;
  7133                           ;flex_lcd_1.h: 118: switch (y)
  7134  154C  2D5C               	goto	l2399
  7135  154D                     l2389:	
  7136                           ;flex_lcd_1.h: 119: {
  7137                           ;flex_lcd_1.h: 120: case 1: data = 128 + x; break;
  7138                           
  7139  154D  0873               	movf	Lcd_Out2@x,w
  7140  154E  3E80               	addlw	128
  7141  154F  2D58               	goto	L10
  7142  1550                     l2391:	
  7143                           ;flex_lcd_1.h: 121: case 2: data = 192 + x; break;
  7144                           
  7145  1550  0873               	movf	Lcd_Out2@x,w
  7146  1551  3EC0               	addlw	192
  7147  1552  2D58               	goto	L10
  7148  1553                     l2393:	
  7149                           ;flex_lcd_1.h: 122: case 3: data = 148 + x; break;
  7150                           
  7151  1553  0873               	movf	Lcd_Out2@x,w
  7152  1554  3E94               	addlw	148
  7153  1555  2D58               	goto	L10
  7154  1556                     l2395:	
  7155                           ;flex_lcd_1.h: 123: case 4: data = 212 + x; break;
  7156                           
  7157  1556  0873               	movf	Lcd_Out2@x,w
  7158  1557  3ED4               	addlw	212
  7159  1558                     L10:	
  7160  1558  00F5               	movwf	??_Lcd_Out2
  7161  1559  0875               	movf	??_Lcd_Out2,w
  7162  155A  00F7               	movwf	Lcd_Out2@data
  7163                           
  7164                           ;flex_lcd_1.h: 125: }
  7165                           
  7166                           ;flex_lcd_1.h: 124: default: break;
  7167  155B  2D6A               	goto	l2401
  7168  155C                     l2399:	
  7169  155C  0876               	movf	Lcd_Out2@y,w
  7170                           
  7171                           ; Switch size 1, requested type "space"
  7172                           ; Number of cases is 4, Range of values is 1 to 4
  7173                           ; switch strategies available:
  7174                           ; Name         Instructions Cycles
  7175                           ; simple_byte           13     7 (average)
  7176                           ; direct_byte           17     9 (fixed)
  7177                           ; jumptable            263     9 (fixed)
  7178                           ;	Chosen strategy is simple_byte
  7179  155D  3A01               	xorlw	1	; case 1
  7180  155E  1903               	skipnz
  7181  155F  2D4D               	goto	l2389
  7182  1560  3A03               	xorlw	3	; case 2
  7183  1561  1903               	skipnz
  7184  1562  2D50               	goto	l2391
  7185  1563  3A01               	xorlw	1	; case 3
  7186  1564  1903               	skipnz
  7187  1565  2D53               	goto	l2393
  7188  1566  3A07               	xorlw	7	; case 4
  7189  1567  1903               	skipnz
  7190  1568  2D56               	goto	l2395
  7191  1569  2D6A               	goto	l2401
  7192  156A                     l2401:	
  7193                           
  7194                           ;flex_lcd_1.h: 126: Lcd_Cmd(data);
  7195  156A  0877               	movf	Lcd_Out2@data,w
  7196  156B  3197  276D  3195   	fcall	_Lcd_Cmd
  7197  156E                     l2407:	
  7198                           ;flex_lcd_1.h: 127: while(*buffer)
  7199                           
  7200  156E  0874               	movf	Lcd_Out2@buffer,w
  7201  156F  0086               	movwf	6
  7202  1570  0187               	clrf	7
  7203  1571  0801               	movf	1,w
  7204  1572  1903               	btfsc	3,2
  7205  1573  0008               	return
  7206                           
  7207                           ;flex_lcd_1.h: 128: {
  7208                           ;flex_lcd_1.h: 129: Lcd_Chr_CP(*buffer);
  7209  1574  0874               	movf	Lcd_Out2@buffer,w
  7210  1575  0086               	movwf	6
  7211  1576  0187               	clrf	7
  7212  1577  0801               	movf	1,w
  7213  1578  3188  206D  3195   	fcall	_Lcd_Chr_CP
  7214                           
  7215                           ;flex_lcd_1.h: 130: buffer++;
  7216  157B  3001               	movlw	1
  7217  157C  00F5               	movwf	??_Lcd_Out2
  7218  157D  0875               	movf	??_Lcd_Out2,w
  7219  157E  07F4               	addwf	Lcd_Out2@buffer,f
  7220  157F  2D6E               	goto	l2407
  7221  1580                     __end_of_Lcd_Out2:	
  7222                           ;flex_lcd_1.h: 131: }
  7223                           ;flex_lcd_1.h: 132: return;
  7224                           
  7225                           
  7226                           	psect	text23
  7227  086D                     __ptext23:	
  7228 ;; *************** function _Lcd_Chr_CP *****************
  7229 ;; Defined at:
  7230 ;;		line 136 in file "flex_lcd_1.h"
  7231 ;; Parameters:    Size  Location     Type
  7232 ;;  data            1    wreg     unsigned char 
  7233 ;; Auto vars:     Size  Location     Type
  7234 ;;  data            1    2[COMMON] unsigned char 
  7235 ;; Return value:  Size  Location     Type
  7236 ;;                  1    wreg      void 
  7237 ;; Registers used:
  7238 ;;		wreg, status,2, status,0
  7239 ;; Tracked objects:
  7240 ;;		On entry : 0/0
  7241 ;;		On exit  : 0/0
  7242 ;;		Unchanged: 0/0
  7243 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
  7244 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  7245 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  7246 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  7247 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  7248 ;;Total ram usage:        3 bytes
  7249 ;; Hardware stack levels used:    1
  7250 ;; This function calls:
  7251 ;;		Nothing
  7252 ;; This function is called by:
  7253 ;;		_Lcd_Out2
  7254 ;;		_Lcd_Out
  7255 ;; This function uses a non-reentrant model
  7256 ;;
  7257                           
  7258                           
  7259                           ;psect for function _Lcd_Chr_CP
  7260  086D                     _Lcd_Chr_CP:	
  7261                           
  7262                           ;incstack = 0
  7263                           ; Regs used in _Lcd_Chr_CP: [wreg+status,2+status,0]
  7264                           ;Lcd_Chr_CP@data stored from wreg
  7265  086D  00F2               	movwf	Lcd_Chr_CP@data
  7266                           
  7267                           ;flex_lcd_1.h: 137: PORTDbits.RD3 = 0; PORTDbits.RD2 = 1;
  7268  086E  0140               	movlb	0	; select bank0
  7269  086F  118F               	bcf	15,3	;volatile
  7270  0870  150F               	bsf	15,2	;volatile
  7271                           
  7272                           ;flex_lcd_1.h: 138: PORTCbits.RC3 = (data & 0b10000000)>>7; PORTDbits.RD0 = (data & 0b01
      +                          000000)>>6;
  7273  0871  0872               	movf	Lcd_Chr_CP@data,w
  7274  0872  00F0               	movwf	??_Lcd_Chr_CP
  7275  0873  3007               	movlw	7
  7276  0874                     u2715:	
  7277  0874  36F0               	lsrf	??_Lcd_Chr_CP,f
  7278  0875  0B89               	decfsz	9,f
  7279  0876  2874               	goto	u2715
  7280  0877  0870               	movf	??_Lcd_Chr_CP,w
  7281  0878  3901               	andlw	1
  7282  0879  00F1               	movwf	??_Lcd_Chr_CP+1
  7283  087A  0DF1               	rlf	??_Lcd_Chr_CP+1,f
  7284  087B  0DF1               	rlf	??_Lcd_Chr_CP+1,f
  7285  087C  0DF1               	rlf	??_Lcd_Chr_CP+1,f
  7286  087D  080E               	movf	14,w	;volatile
  7287  087E  0671               	xorwf	??_Lcd_Chr_CP+1,w
  7288  087F  39F7               	andlw	-9
  7289  0880  0671               	xorwf	??_Lcd_Chr_CP+1,w
  7290  0881  008E               	movwf	14	;volatile
  7291  0882  0872               	movf	Lcd_Chr_CP@data,w
  7292  0883  00F0               	movwf	??_Lcd_Chr_CP
  7293  0884  3006               	movlw	6
  7294  0885                     u2725:	
  7295  0885  36F0               	lsrf	??_Lcd_Chr_CP,f
  7296  0886  0B89               	decfsz	9,f
  7297  0887  2885               	goto	u2725
  7298  0888  3001               	movlw	1
  7299  0889  0570               	andwf	??_Lcd_Chr_CP,w
  7300  088A  00F1               	movwf	??_Lcd_Chr_CP+1
  7301  088B  080F               	movf	15,w	;volatile
  7302  088C  0671               	xorwf	??_Lcd_Chr_CP+1,w
  7303  088D  39FE               	andlw	-2
  7304  088E  0671               	xorwf	??_Lcd_Chr_CP+1,w
  7305  088F  008F               	movwf	15	;volatile
  7306                           
  7307                           ;flex_lcd_1.h: 139: PORTDbits.RD1 = (data & 0b00100000)>>5; PORTCbits.RC4 = (data & 0b00
      +                          010000)>>4;
  7308  0890  0872               	movf	Lcd_Chr_CP@data,w
  7309  0891  00F0               	movwf	??_Lcd_Chr_CP
  7310  0892  3005               	movlw	5
  7311  0893                     u2735:	
  7312  0893  36F0               	lsrf	??_Lcd_Chr_CP,f
  7313  0894  0B89               	decfsz	9,f
  7314  0895  2893               	goto	u2735
  7315  0896  0870               	movf	??_Lcd_Chr_CP,w
  7316  0897  3901               	andlw	1
  7317  0898  00F1               	movwf	??_Lcd_Chr_CP+1
  7318  0899  0DF1               	rlf	??_Lcd_Chr_CP+1,f
  7319  089A  080F               	movf	15,w	;volatile
  7320  089B  0671               	xorwf	??_Lcd_Chr_CP+1,w
  7321  089C  39FD               	andlw	-3
  7322  089D  0671               	xorwf	??_Lcd_Chr_CP+1,w
  7323  089E  008F               	movwf	15	;volatile
  7324  089F  0872               	movf	Lcd_Chr_CP@data,w
  7325  08A0  00F0               	movwf	??_Lcd_Chr_CP
  7326  08A1  3004               	movlw	4
  7327  08A2                     u2745:	
  7328  08A2  36F0               	lsrf	??_Lcd_Chr_CP,f
  7329  08A3  0B89               	decfsz	9,f
  7330  08A4  28A2               	goto	u2745
  7331  08A5  0870               	movf	??_Lcd_Chr_CP,w
  7332  08A6  3901               	andlw	1
  7333  08A7  00F1               	movwf	??_Lcd_Chr_CP+1
  7334  08A8  0EF1               	swapf	??_Lcd_Chr_CP+1,f
  7335  08A9  080E               	movf	14,w	;volatile
  7336  08AA  0671               	xorwf	??_Lcd_Chr_CP+1,w
  7337  08AB  39EF               	andlw	-17
  7338  08AC  0671               	xorwf	??_Lcd_Chr_CP+1,w
  7339  08AD  008E               	movwf	14	;volatile
  7340                           
  7341                           ;flex_lcd_1.h: 140: _delay(10);
  7342  08AE  3003               	movlw	3
  7343  08AF                     u3937:	
  7344  08AF  0B89               	decfsz	9,f
  7345  08B0  28AF               	goto	u3937
  7346  08B1  0000               	nop
  7347                           
  7348                           ;flex_lcd_1.h: 141: PORTDbits.RD3 = 1; _delay((unsigned long)((5)*(32000000/4000000.0)))
      +                          ; PORTDbits.RD3 = 0;
  7349  08B2  0140               	movlb	0	; select bank0
  7350  08B3  158F               	bsf	15,3	;volatile
  7351  08B4  300D               	movlw	13
  7352  08B5                     u3947:	
  7353  08B5  0B89               	decfsz	9,f
  7354  08B6  28B5               	goto	u3947
  7355  08B7  0000               	nop
  7356  08B8  0140               	movlb	0	; select bank0
  7357  08B9  118F               	bcf	15,3	;volatile
  7358                           
  7359                           ;flex_lcd_1.h: 142: PORTCbits.RC3 = (data & 0b00001000)>>3; PORTDbits.RD0 = (data & 0b00
      +                          000100)>>2;
  7360  08BA  0872               	movf	Lcd_Chr_CP@data,w
  7361  08BB  00F0               	movwf	??_Lcd_Chr_CP
  7362  08BC  3003               	movlw	3
  7363  08BD                     u2755:	
  7364  08BD  36F0               	lsrf	??_Lcd_Chr_CP,f
  7365  08BE  0B89               	decfsz	9,f
  7366  08BF  28BD               	goto	u2755
  7367  08C0  0870               	movf	??_Lcd_Chr_CP,w
  7368  08C1  3901               	andlw	1
  7369  08C2  00F1               	movwf	??_Lcd_Chr_CP+1
  7370  08C3  0DF1               	rlf	??_Lcd_Chr_CP+1,f
  7371  08C4  0DF1               	rlf	??_Lcd_Chr_CP+1,f
  7372  08C5  0DF1               	rlf	??_Lcd_Chr_CP+1,f
  7373  08C6  080E               	movf	14,w	;volatile
  7374  08C7  0671               	xorwf	??_Lcd_Chr_CP+1,w
  7375  08C8  39F7               	andlw	-9
  7376  08C9  0671               	xorwf	??_Lcd_Chr_CP+1,w
  7377  08CA  008E               	movwf	14	;volatile
  7378  08CB  0872               	movf	Lcd_Chr_CP@data,w
  7379  08CC  00F0               	movwf	??_Lcd_Chr_CP
  7380  08CD  3002               	movlw	2
  7381  08CE                     u2765:	
  7382  08CE  36F0               	lsrf	??_Lcd_Chr_CP,f
  7383  08CF  0B89               	decfsz	9,f
  7384  08D0  28CE               	goto	u2765
  7385  08D1  3001               	movlw	1
  7386  08D2  0570               	andwf	??_Lcd_Chr_CP,w
  7387  08D3  00F1               	movwf	??_Lcd_Chr_CP+1
  7388  08D4  080F               	movf	15,w	;volatile
  7389  08D5  0671               	xorwf	??_Lcd_Chr_CP+1,w
  7390  08D6  39FE               	andlw	-2
  7391  08D7  0671               	xorwf	??_Lcd_Chr_CP+1,w
  7392  08D8  008F               	movwf	15	;volatile
  7393                           
  7394                           ;flex_lcd_1.h: 143: PORTDbits.RD1 = (data & 0b00000010)>>1; PORTCbits.RC4 = (data & 0b00
      +                          000001);
  7395  08D9  3672               	lsrf	Lcd_Chr_CP@data,w
  7396  08DA  3901               	andlw	1
  7397  08DB  00F0               	movwf	??_Lcd_Chr_CP
  7398  08DC  0DF0               	rlf	??_Lcd_Chr_CP,f
  7399  08DD  080F               	movf	15,w	;volatile
  7400  08DE  0670               	xorwf	??_Lcd_Chr_CP,w
  7401  08DF  39FD               	andlw	-3
  7402  08E0  0670               	xorwf	??_Lcd_Chr_CP,w
  7403  08E1  008F               	movwf	15	;volatile
  7404  08E2  0872               	movf	Lcd_Chr_CP@data,w
  7405  08E3  3901               	andlw	1
  7406  08E4  00F0               	movwf	??_Lcd_Chr_CP
  7407  08E5  0EF0               	swapf	??_Lcd_Chr_CP,f
  7408  08E6  080E               	movf	14,w	;volatile
  7409  08E7  0670               	xorwf	??_Lcd_Chr_CP,w
  7410  08E8  39EF               	andlw	-17
  7411  08E9  0670               	xorwf	??_Lcd_Chr_CP,w
  7412  08EA  008E               	movwf	14	;volatile
  7413                           
  7414                           ;flex_lcd_1.h: 144: _delay(10);
  7415  08EB  3003               	movlw	3
  7416  08EC                     u3957:	
  7417  08EC  0B89               	decfsz	9,f
  7418  08ED  28EC               	goto	u3957
  7419  08EE  0000               	nop
  7420                           
  7421                           ;flex_lcd_1.h: 145: PORTDbits.RD3 = 1; _delay((unsigned long)((5)*(32000000/4000000.0)))
      +                          ; PORTDbits.RD3 = 0;
  7422  08EF  0140               	movlb	0	; select bank0
  7423  08F0  158F               	bsf	15,3	;volatile
  7424  08F1  300D               	movlw	13
  7425  08F2                     u3967:	
  7426  08F2  0B89               	decfsz	9,f
  7427  08F3  28F2               	goto	u3967
  7428  08F4  0000               	nop
  7429  08F5  0140               	movlb	0	; select bank0
  7430  08F6  118F               	bcf	15,3	;volatile
  7431                           
  7432                           ;flex_lcd_1.h: 146: _delay((unsigned long)((5)*(32000000/4000000.0))); _delay((unsigned 
      +                          long)((5500)*(32000000/4000000.0)));
  7433  08F7  300D               	movlw	13
  7434  08F8                     u3977:	
  7435  08F8  0B89               	decfsz	9,f
  7436  08F9  28F8               	goto	u3977
  7437  08FA  0000               	nop
  7438  08FB  303A               	movlw	58
  7439  08FC  00F0               	movwf	??_Lcd_Chr_CP
  7440  08FD  3023               	movlw	35
  7441  08FE                     u3987:	
  7442  08FE  0B89               	decfsz	9,f
  7443  08FF  28FE               	goto	u3987
  7444  0900  0BF0               	decfsz	??_Lcd_Chr_CP,f
  7445  0901  28FE               	goto	u3987
  7446  0902  0000               	nop
  7447  0903  0008               	return
  7448  0904                     __end_of_Lcd_Chr_CP:	
  7449                           
  7450                           	psect	text24
  7451  0904                     __ptext24:	
  7452 ;; *************** function _Lcd_Init *****************
  7453 ;; Defined at:
  7454 ;;		line 52 in file "flex_lcd_1.h"
  7455 ;; Parameters:    Size  Location     Type
  7456 ;;		None
  7457 ;; Auto vars:     Size  Location     Type
  7458 ;;  data            1    4[COMMON] unsigned char 
  7459 ;; Return value:  Size  Location     Type
  7460 ;;                  1    wreg      void 
  7461 ;; Registers used:
  7462 ;;		wreg, status,2, status,0, pclath, cstack
  7463 ;; Tracked objects:
  7464 ;;		On entry : 0/0
  7465 ;;		On exit  : 0/0
  7466 ;;		Unchanged: 0/0
  7467 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
  7468 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  7469 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  7470 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  7471 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  7472 ;;Total ram usage:        2 bytes
  7473 ;; Hardware stack levels used:    1
  7474 ;; Hardware stack levels required when called:    1
  7475 ;; This function calls:
  7476 ;;		_Lcd_Cmd
  7477 ;; This function is called by:
  7478 ;;		_main
  7479 ;; This function uses a non-reentrant model
  7480 ;;
  7481                           
  7482                           
  7483                           ;psect for function _Lcd_Init
  7484  0904                     _Lcd_Init:	
  7485                           
  7486                           ;flex_lcd_1.h: 53: unsigned char data;
  7487                           ;flex_lcd_1.h: 54: TRISCbits.TRISC3 = 0;
  7488                           
  7489                           ;incstack = 0
  7490                           ; Regs used in _Lcd_Init: [wreg+status,2+status,0+pclath+cstack]
  7491  0904  0140               	movlb	0	; select bank0
  7492  0905  1193               	bcf	19,3	;volatile
  7493                           
  7494                           ;flex_lcd_1.h: 55: TRISDbits.TRISD0 = 0;
  7495  0906  1014               	bcf	20,0	;volatile
  7496                           
  7497                           ;flex_lcd_1.h: 56: TRISDbits.TRISD1 = 0;
  7498  0907  1094               	bcf	20,1	;volatile
  7499                           
  7500                           ;flex_lcd_1.h: 57: TRISCbits.TRISC4 = 0;
  7501  0908  1213               	bcf	19,4	;volatile
  7502                           
  7503                           ;flex_lcd_1.h: 58: TRISDbits.TRISD3 = 0;
  7504  0909  1194               	bcf	20,3	;volatile
  7505                           
  7506                           ;flex_lcd_1.h: 59: TRISDbits.TRISD2 = 0;
  7507  090A  1114               	bcf	20,2	;volatile
  7508                           
  7509                           ;flex_lcd_1.h: 60: PORTCbits.RC3 = 0;
  7510  090B  118E               	bcf	14,3	;volatile
  7511                           
  7512                           ;flex_lcd_1.h: 61: PORTDbits.RD0 = 0;
  7513  090C  100F               	bcf	15,0	;volatile
  7514                           
  7515                           ;flex_lcd_1.h: 62: PORTDbits.RD1 = 0;
  7516  090D  108F               	bcf	15,1	;volatile
  7517                           
  7518                           ;flex_lcd_1.h: 63: PORTCbits.RC4 = 0;
  7519  090E  120E               	bcf	14,4	;volatile
  7520                           
  7521                           ;flex_lcd_1.h: 64: PORTDbits.RD3 = 0;
  7522  090F  118F               	bcf	15,3	;volatile
  7523                           
  7524                           ;flex_lcd_1.h: 65: PORTDbits.RD2 = 0;
  7525  0910  110F               	bcf	15,2	;volatile
  7526                           
  7527                           ;flex_lcd_1.h: 66: _delay((unsigned long)((5500)*(32000000/4000000.0)));
  7528  0911  303A               	movlw	58
  7529  0912  00F3               	movwf	??_Lcd_Init
  7530  0913  3023               	movlw	35
  7531  0914                     u3997:	
  7532  0914  0B89               	decfsz	9,f
  7533  0915  2914               	goto	u3997
  7534  0916  0BF3               	decfsz	??_Lcd_Init,f
  7535  0917  2914               	goto	u3997
  7536  0918  0000               	nop
  7537                           
  7538                           ;flex_lcd_1.h: 67: _delay((unsigned long)((5500)*(32000000/4000000.0)));
  7539  0919  303A               	movlw	58
  7540  091A  00F3               	movwf	??_Lcd_Init
  7541  091B  3023               	movlw	35
  7542  091C                     u4007:	
  7543  091C  0B89               	decfsz	9,f
  7544  091D  291C               	goto	u4007
  7545  091E  0BF3               	decfsz	??_Lcd_Init,f
  7546  091F  291C               	goto	u4007
  7547  0920  0000               	nop
  7548                           
  7549                           ;flex_lcd_1.h: 68: _delay((unsigned long)((5500)*(32000000/4000000.0)));
  7550  0921  303A               	movlw	58
  7551  0922  00F3               	movwf	??_Lcd_Init
  7552  0923  3023               	movlw	35
  7553  0924                     u4017:	
  7554  0924  0B89               	decfsz	9,f
  7555  0925  2924               	goto	u4017
  7556  0926  0BF3               	decfsz	??_Lcd_Init,f
  7557  0927  2924               	goto	u4017
  7558  0928  0000               	nop
  7559                           
  7560                           ;flex_lcd_1.h: 69: _delay((unsigned long)((5500)*(32000000/4000000.0)));
  7561  0929  303A               	movlw	58
  7562  092A  00F3               	movwf	??_Lcd_Init
  7563  092B  3023               	movlw	35
  7564  092C                     u4027:	
  7565  092C  0B89               	decfsz	9,f
  7566  092D  292C               	goto	u4027
  7567  092E  0BF3               	decfsz	??_Lcd_Init,f
  7568  092F  292C               	goto	u4027
  7569  0930  0000               	nop
  7570                           
  7571                           ;flex_lcd_1.h: 70: _delay((unsigned long)((5500)*(32000000/4000000.0)));
  7572  0931  303A               	movlw	58
  7573  0932  00F3               	movwf	??_Lcd_Init
  7574  0933  3023               	movlw	35
  7575  0934                     u4037:	
  7576  0934  0B89               	decfsz	9,f
  7577  0935  2934               	goto	u4037
  7578  0936  0BF3               	decfsz	??_Lcd_Init,f
  7579  0937  2934               	goto	u4037
  7580  0938  0000               	nop
  7581                           
  7582                           ;flex_lcd_1.h: 71: _delay((unsigned long)((5500)*(32000000/4000000.0)));
  7583  0939  303A               	movlw	58
  7584  093A  00F3               	movwf	??_Lcd_Init
  7585  093B  3023               	movlw	35
  7586  093C                     u4047:	
  7587  093C  0B89               	decfsz	9,f
  7588  093D  293C               	goto	u4047
  7589  093E  0BF3               	decfsz	??_Lcd_Init,f
  7590  093F  293C               	goto	u4047
  7591  0940  0000               	nop
  7592                           
  7593                           ;flex_lcd_1.h: 72: for(data = 1; data < 4; data ++)
  7594  0941  01F4               	clrf	Lcd_Init@data
  7595  0942  0AF4               	incf	Lcd_Init@data,f
  7596  0943  3004               	movlw	4
  7597  0944  0274               	subwf	Lcd_Init@data,w
  7598  0945  1803               	btfsc	3,0
  7599  0946  296F               	goto	l50
  7600  0947                     l49:	
  7601                           
  7602                           ;flex_lcd_1.h: 73: {
  7603                           ;flex_lcd_1.h: 74: PORTCbits.RC3 = 0; PORTDbits.RD0 = 0; PORTDbits.RD1 = 1; PORTCbits.RC
      +                          4 = 1; PORTDbits.RD3 = 0;
  7604  0947  0140               	movlb	0	; select bank0
  7605  0948  118E               	bcf	14,3	;volatile
  7606  0949  100F               	bcf	15,0	;volatile
  7607  094A  148F               	bsf	15,1	;volatile
  7608  094B  160E               	bsf	14,4	;volatile
  7609  094C  118F               	bcf	15,3	;volatile
  7610                           
  7611                           ;flex_lcd_1.h: 75: PORTDbits.RD2 = 0; PORTCbits.RC3 = 0; PORTDbits.RD0 = 0; PORTDbits.RD
      +                          1 = 1; PORTCbits.RC4 = 1;
  7612  094D  110F               	bcf	15,2	;volatile
  7613  094E  118E               	bcf	14,3	;volatile
  7614  094F  100F               	bcf	15,0	;volatile
  7615  0950  148F               	bsf	15,1	;volatile
  7616  0951  160E               	bsf	14,4	;volatile
  7617                           
  7618                           ;flex_lcd_1.h: 76: PORTDbits.RD3 = 1; PORTDbits.RD2 = 0;
  7619  0952  158F               	bsf	15,3	;volatile
  7620  0953  110F               	bcf	15,2	;volatile
  7621                           
  7622                           ;flex_lcd_1.h: 77: _delay((unsigned long)((5)*(32000000/4000000.0)));
  7623  0954  300D               	movlw	13
  7624  0955                     u4057:	
  7625  0955  0B89               	decfsz	9,f
  7626  0956  2955               	goto	u4057
  7627  0957  0000               	nop
  7628                           
  7629                           ;flex_lcd_1.h: 78: PORTCbits.RC3 = 0; PORTDbits.RD0 = 0; PORTDbits.RD1 = 1; PORTCbits.RC
      +                          4 = 1; PORTDbits.RD3 = 0;
  7630  0958  0140               	movlb	0	; select bank0
  7631  0959  118E               	bcf	14,3	;volatile
  7632  095A  100F               	bcf	15,0	;volatile
  7633  095B  148F               	bsf	15,1	;volatile
  7634  095C  160E               	bsf	14,4	;volatile
  7635  095D  118F               	bcf	15,3	;volatile
  7636                           
  7637                           ;flex_lcd_1.h: 79: PORTDbits.RD2 = 0;
  7638  095E  110F               	bcf	15,2	;volatile
  7639                           
  7640                           ;flex_lcd_1.h: 80: _delay((unsigned long)((5500)*(32000000/4000000.0)));
  7641  095F  303A               	movlw	58
  7642  0960  00F3               	movwf	??_Lcd_Init
  7643  0961  3023               	movlw	35
  7644  0962                     u4067:	
  7645  0962  0B89               	decfsz	9,f
  7646  0963  2962               	goto	u4067
  7647  0964  0BF3               	decfsz	??_Lcd_Init,f
  7648  0965  2962               	goto	u4067
  7649  0966  0000               	nop
  7650  0967  3001               	movlw	1
  7651  0968  00F3               	movwf	??_Lcd_Init
  7652  0969  0873               	movf	??_Lcd_Init,w
  7653  096A  07F4               	addwf	Lcd_Init@data,f
  7654  096B  3004               	movlw	4
  7655  096C  0274               	subwf	Lcd_Init@data,w
  7656  096D  1C03               	skipc
  7657  096E  2947               	goto	l49
  7658  096F                     l50:	
  7659                           
  7660                           ;flex_lcd_1.h: 81: }
  7661                           ;flex_lcd_1.h: 82: PORTCbits.RC3 = 0; PORTDbits.RD0 = 0; PORTDbits.RD1 = 1; PORTCbits.RC
      +                          4 = 0; PORTDbits.RD3 = 0; PORTDbits.RD2 = 0;
  7662  096F  0140               	movlb	0	; select bank0
  7663  0970  118E               	bcf	14,3	;volatile
  7664  0971  100F               	bcf	15,0	;volatile
  7665  0972  148F               	bsf	15,1	;volatile
  7666  0973  120E               	bcf	14,4	;volatile
  7667  0974  118F               	bcf	15,3	;volatile
  7668  0975  110F               	bcf	15,2	;volatile
  7669                           
  7670                           ;flex_lcd_1.h: 83: PORTCbits.RC3 = 0; PORTDbits.RD0 = 0; PORTDbits.RD1 = 1; PORTCbits.RC
      +                          4 = 0; PORTDbits.RD3 = 1; PORTDbits.RD2 = 0;
  7671  0976  118E               	bcf	14,3	;volatile
  7672  0977  100F               	bcf	15,0	;volatile
  7673  0978  148F               	bsf	15,1	;volatile
  7674  0979  120E               	bcf	14,4	;volatile
  7675  097A  158F               	bsf	15,3	;volatile
  7676  097B  110F               	bcf	15,2	;volatile
  7677                           
  7678                           ;flex_lcd_1.h: 84: _delay((unsigned long)((5)*(32000000/4000000.0)));
  7679  097C  300D               	movlw	13
  7680  097D                     u4077:	
  7681  097D  0B89               	decfsz	9,f
  7682  097E  297D               	goto	u4077
  7683  097F  0000               	nop
  7684                           
  7685                           ;flex_lcd_1.h: 85: PORTCbits.RC3 = 0; PORTDbits.RD0 = 0; PORTDbits.RD1 = 1; PORTCbits.RC
      +                          4 = 0; PORTDbits.RD3 = 0; PORTDbits.RD2 = 0;
  7686  0980  0140               	movlb	0	; select bank0
  7687  0981  118E               	bcf	14,3	;volatile
  7688  0982  100F               	bcf	15,0	;volatile
  7689  0983  148F               	bsf	15,1	;volatile
  7690  0984  120E               	bcf	14,4	;volatile
  7691  0985  118F               	bcf	15,3	;volatile
  7692  0986  110F               	bcf	15,2	;volatile
  7693                           
  7694                           ;flex_lcd_1.h: 86: _delay((unsigned long)((5500)*(32000000/4000000.0)));
  7695  0987  303A               	movlw	58
  7696  0988  00F3               	movwf	??_Lcd_Init
  7697  0989  3023               	movlw	35
  7698  098A                     u4087:	
  7699  098A  0B89               	decfsz	9,f
  7700  098B  298A               	goto	u4087
  7701  098C  0BF3               	decfsz	??_Lcd_Init,f
  7702  098D  298A               	goto	u4087
  7703  098E  0000               	nop
  7704                           
  7705                           ;flex_lcd_1.h: 87: data = 40; Lcd_Cmd(data);
  7706  098F  3028               	movlw	40
  7707  0990  00F3               	movwf	??_Lcd_Init
  7708  0991  0873               	movf	??_Lcd_Init,w
  7709  0992  00F4               	movwf	Lcd_Init@data
  7710  0993  0874               	movf	Lcd_Init@data,w
  7711  0994  3197  276D  3189   	fcall	_Lcd_Cmd
  7712                           
  7713                           ;flex_lcd_1.h: 88: data = 16; Lcd_Cmd(data);
  7714  0997  3010               	movlw	16
  7715  0998  00F3               	movwf	??_Lcd_Init
  7716  0999  0873               	movf	??_Lcd_Init,w
  7717  099A  00F4               	movwf	Lcd_Init@data
  7718  099B  0874               	movf	Lcd_Init@data,w
  7719  099C  3197  276D  3189   	fcall	_Lcd_Cmd
  7720                           
  7721                           ;flex_lcd_1.h: 89: data = 1; Lcd_Cmd(data);
  7722  099F  01F4               	clrf	Lcd_Init@data
  7723  09A0  0AF4               	incf	Lcd_Init@data,f
  7724  09A1  0874               	movf	Lcd_Init@data,w
  7725  09A2  3197  276D  3189   	fcall	_Lcd_Cmd
  7726                           
  7727                           ;flex_lcd_1.h: 90: data = 15; Lcd_Cmd(data);
  7728  09A5  300F               	movlw	15
  7729  09A6  00F3               	movwf	??_Lcd_Init
  7730  09A7  0873               	movf	??_Lcd_Init,w
  7731  09A8  00F4               	movwf	Lcd_Init@data
  7732  09A9  0874               	movf	Lcd_Init@data,w
  7733  09AA  3197  276D         	fcall	_Lcd_Cmd
  7734  09AC  0008               	return
  7735  09AD                     __end_of_Lcd_Init:	
  7736                           
  7737                           	psect	text25
  7738  176D                     __ptext25:	
  7739 ;; *************** function _Lcd_Cmd *****************
  7740 ;; Defined at:
  7741 ;;		line 150 in file "flex_lcd_1.h"
  7742 ;; Parameters:    Size  Location     Type
  7743 ;;  data            1    wreg     unsigned char 
  7744 ;; Auto vars:     Size  Location     Type
  7745 ;;  data            1    2[COMMON] unsigned char 
  7746 ;; Return value:  Size  Location     Type
  7747 ;;                  1    wreg      void 
  7748 ;; Registers used:
  7749 ;;		wreg, status,2, status,0
  7750 ;; Tracked objects:
  7751 ;;		On entry : 0/0
  7752 ;;		On exit  : 0/0
  7753 ;;		Unchanged: 0/0
  7754 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
  7755 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  7756 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  7757 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  7758 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  7759 ;;Total ram usage:        3 bytes
  7760 ;; Hardware stack levels used:    1
  7761 ;; This function calls:
  7762 ;;		Nothing
  7763 ;; This function is called by:
  7764 ;;		_Lcd_Init
  7765 ;;		_Lcd_Out2
  7766 ;;		_main
  7767 ;;		_Lcd_Out
  7768 ;; This function uses a non-reentrant model
  7769 ;;
  7770                           
  7771                           
  7772                           ;psect for function _Lcd_Cmd
  7773  176D                     _Lcd_Cmd:	
  7774                           
  7775                           ;incstack = 0
  7776                           ; Regs used in _Lcd_Cmd: [wreg+status,2+status,0]
  7777                           ;Lcd_Cmd@data stored from wreg
  7778  176D  00F2               	movwf	Lcd_Cmd@data
  7779                           
  7780                           ;flex_lcd_1.h: 151: PORTDbits.RD3 = 0; PORTDbits.RD2 = 0;
  7781  176E  0140               	movlb	0	; select bank0
  7782  176F  118F               	bcf	15,3	;volatile
  7783  1770  110F               	bcf	15,2	;volatile
  7784                           
  7785                           ;flex_lcd_1.h: 152: PORTCbits.RC3 = (data & 0b10000000)>>7; PORTDbits.RD0 = (data & 0b01
      +                          000000)>>6;
  7786  1771  0872               	movf	Lcd_Cmd@data,w
  7787  1772  00F0               	movwf	??_Lcd_Cmd
  7788  1773  3007               	movlw	7
  7789  1774                     u2655:	
  7790  1774  36F0               	lsrf	??_Lcd_Cmd,f
  7791  1775  0B89               	decfsz	9,f
  7792  1776  2F74               	goto	u2655
  7793  1777  0870               	movf	??_Lcd_Cmd,w
  7794  1778  3901               	andlw	1
  7795  1779  00F1               	movwf	??_Lcd_Cmd+1
  7796  177A  0DF1               	rlf	??_Lcd_Cmd+1,f
  7797  177B  0DF1               	rlf	??_Lcd_Cmd+1,f
  7798  177C  0DF1               	rlf	??_Lcd_Cmd+1,f
  7799  177D  080E               	movf	14,w	;volatile
  7800  177E  0671               	xorwf	??_Lcd_Cmd+1,w
  7801  177F  39F7               	andlw	-9
  7802  1780  0671               	xorwf	??_Lcd_Cmd+1,w
  7803  1781  008E               	movwf	14	;volatile
  7804  1782  0872               	movf	Lcd_Cmd@data,w
  7805  1783  00F0               	movwf	??_Lcd_Cmd
  7806  1784  3006               	movlw	6
  7807  1785                     u2665:	
  7808  1785  36F0               	lsrf	??_Lcd_Cmd,f
  7809  1786  0B89               	decfsz	9,f
  7810  1787  2F85               	goto	u2665
  7811  1788  3001               	movlw	1
  7812  1789  0570               	andwf	??_Lcd_Cmd,w
  7813  178A  00F1               	movwf	??_Lcd_Cmd+1
  7814  178B  080F               	movf	15,w	;volatile
  7815  178C  0671               	xorwf	??_Lcd_Cmd+1,w
  7816  178D  39FE               	andlw	-2
  7817  178E  0671               	xorwf	??_Lcd_Cmd+1,w
  7818  178F  008F               	movwf	15	;volatile
  7819                           
  7820                           ;flex_lcd_1.h: 153: PORTDbits.RD1 = (data & 0b00100000)>>5; PORTCbits.RC4 = (data & 0b00
      +                          010000)>>4;
  7821  1790  0872               	movf	Lcd_Cmd@data,w
  7822  1791  00F0               	movwf	??_Lcd_Cmd
  7823  1792  3005               	movlw	5
  7824  1793                     u2675:	
  7825  1793  36F0               	lsrf	??_Lcd_Cmd,f
  7826  1794  0B89               	decfsz	9,f
  7827  1795  2F93               	goto	u2675
  7828  1796  0870               	movf	??_Lcd_Cmd,w
  7829  1797  3901               	andlw	1
  7830  1798  00F1               	movwf	??_Lcd_Cmd+1
  7831  1799  0DF1               	rlf	??_Lcd_Cmd+1,f
  7832  179A  080F               	movf	15,w	;volatile
  7833  179B  0671               	xorwf	??_Lcd_Cmd+1,w
  7834  179C  39FD               	andlw	-3
  7835  179D  0671               	xorwf	??_Lcd_Cmd+1,w
  7836  179E  008F               	movwf	15	;volatile
  7837  179F  0872               	movf	Lcd_Cmd@data,w
  7838  17A0  00F0               	movwf	??_Lcd_Cmd
  7839  17A1  3004               	movlw	4
  7840  17A2                     u2685:	
  7841  17A2  36F0               	lsrf	??_Lcd_Cmd,f
  7842  17A3  0B89               	decfsz	9,f
  7843  17A4  2FA2               	goto	u2685
  7844  17A5  0870               	movf	??_Lcd_Cmd,w
  7845  17A6  3901               	andlw	1
  7846  17A7  00F1               	movwf	??_Lcd_Cmd+1
  7847  17A8  0EF1               	swapf	??_Lcd_Cmd+1,f
  7848  17A9  080E               	movf	14,w	;volatile
  7849  17AA  0671               	xorwf	??_Lcd_Cmd+1,w
  7850  17AB  39EF               	andlw	-17
  7851  17AC  0671               	xorwf	??_Lcd_Cmd+1,w
  7852  17AD  008E               	movwf	14	;volatile
  7853                           
  7854                           ;flex_lcd_1.h: 154: _delay(10);
  7855  17AE  3003               	movlw	3
  7856  17AF                     u4097:	
  7857  17AF  0B89               	decfsz	9,f
  7858  17B0  2FAF               	goto	u4097
  7859  17B1  0000               	nop
  7860                           
  7861                           ;flex_lcd_1.h: 155: PORTDbits.RD3 = 1; _delay((unsigned long)((5)*(32000000/4000000.0)))
      +                          ; PORTDbits.RD3 = 0;
  7862  17B2  0140               	movlb	0	; select bank0
  7863  17B3  158F               	bsf	15,3	;volatile
  7864  17B4  300D               	movlw	13
  7865  17B5                     u4107:	
  7866  17B5  0B89               	decfsz	9,f
  7867  17B6  2FB5               	goto	u4107
  7868  17B7  0000               	nop
  7869  17B8  0140               	movlb	0	; select bank0
  7870  17B9  118F               	bcf	15,3	;volatile
  7871                           
  7872                           ;flex_lcd_1.h: 156: PORTCbits.RC3 = (data & 0b00001000)>>3; PORTDbits.RD0 = (data & 0b00
      +                          000100)>>2;
  7873  17BA  0872               	movf	Lcd_Cmd@data,w
  7874  17BB  00F0               	movwf	??_Lcd_Cmd
  7875  17BC  3003               	movlw	3
  7876  17BD                     u2695:	
  7877  17BD  36F0               	lsrf	??_Lcd_Cmd,f
  7878  17BE  0B89               	decfsz	9,f
  7879  17BF  2FBD               	goto	u2695
  7880  17C0  0870               	movf	??_Lcd_Cmd,w
  7881  17C1  3901               	andlw	1
  7882  17C2  00F1               	movwf	??_Lcd_Cmd+1
  7883  17C3  0DF1               	rlf	??_Lcd_Cmd+1,f
  7884  17C4  0DF1               	rlf	??_Lcd_Cmd+1,f
  7885  17C5  0DF1               	rlf	??_Lcd_Cmd+1,f
  7886  17C6  080E               	movf	14,w	;volatile
  7887  17C7  0671               	xorwf	??_Lcd_Cmd+1,w
  7888  17C8  39F7               	andlw	-9
  7889  17C9  0671               	xorwf	??_Lcd_Cmd+1,w
  7890  17CA  008E               	movwf	14	;volatile
  7891  17CB  0872               	movf	Lcd_Cmd@data,w
  7892  17CC  00F0               	movwf	??_Lcd_Cmd
  7893  17CD  3002               	movlw	2
  7894  17CE                     u2705:	
  7895  17CE  36F0               	lsrf	??_Lcd_Cmd,f
  7896  17CF  0B89               	decfsz	9,f
  7897  17D0  2FCE               	goto	u2705
  7898  17D1  3001               	movlw	1
  7899  17D2  0570               	andwf	??_Lcd_Cmd,w
  7900  17D3  00F1               	movwf	??_Lcd_Cmd+1
  7901  17D4  080F               	movf	15,w	;volatile
  7902  17D5  0671               	xorwf	??_Lcd_Cmd+1,w
  7903  17D6  39FE               	andlw	-2
  7904  17D7  0671               	xorwf	??_Lcd_Cmd+1,w
  7905  17D8  008F               	movwf	15	;volatile
  7906                           
  7907                           ;flex_lcd_1.h: 157: PORTDbits.RD1 = (data & 0b00000010)>>1; PORTCbits.RC4 = (data & 0b00
      +                          000001);
  7908  17D9  3672               	lsrf	Lcd_Cmd@data,w
  7909  17DA  3901               	andlw	1
  7910  17DB  00F0               	movwf	??_Lcd_Cmd
  7911  17DC  0DF0               	rlf	??_Lcd_Cmd,f
  7912  17DD  080F               	movf	15,w	;volatile
  7913  17DE  0670               	xorwf	??_Lcd_Cmd,w
  7914  17DF  39FD               	andlw	-3
  7915  17E0  0670               	xorwf	??_Lcd_Cmd,w
  7916  17E1  008F               	movwf	15	;volatile
  7917  17E2  0872               	movf	Lcd_Cmd@data,w
  7918  17E3  3901               	andlw	1
  7919  17E4  00F0               	movwf	??_Lcd_Cmd
  7920  17E5  0EF0               	swapf	??_Lcd_Cmd,f
  7921  17E6  080E               	movf	14,w	;volatile
  7922  17E7  0670               	xorwf	??_Lcd_Cmd,w
  7923  17E8  39EF               	andlw	-17
  7924  17E9  0670               	xorwf	??_Lcd_Cmd,w
  7925  17EA  008E               	movwf	14	;volatile
  7926                           
  7927                           ;flex_lcd_1.h: 158: _delay(10);
  7928  17EB  3003               	movlw	3
  7929  17EC                     u4117:	
  7930  17EC  0B89               	decfsz	9,f
  7931  17ED  2FEC               	goto	u4117
  7932  17EE  0000               	nop
  7933                           
  7934                           ;flex_lcd_1.h: 159: PORTDbits.RD3 = 1; _delay((unsigned long)((5)*(32000000/4000000.0)))
      +                          ; PORTDbits.RD3 = 0;
  7935  17EF  0140               	movlb	0	; select bank0
  7936  17F0  158F               	bsf	15,3	;volatile
  7937  17F1  300D               	movlw	13
  7938  17F2                     u4127:	
  7939  17F2  0B89               	decfsz	9,f
  7940  17F3  2FF2               	goto	u4127
  7941  17F4  0000               	nop
  7942  17F5  0140               	movlb	0	; select bank0
  7943  17F6  118F               	bcf	15,3	;volatile
  7944                           
  7945                           ;flex_lcd_1.h: 160: _delay((unsigned long)((5500)*(32000000/4000000.0)));
  7946  17F7  303A               	movlw	58
  7947  17F8  00F0               	movwf	??_Lcd_Cmd
  7948  17F9  3023               	movlw	35
  7949  17FA                     u4137:	
  7950  17FA  0B89               	decfsz	9,f
  7951  17FB  2FFA               	goto	u4137
  7952  17FC  0BF0               	decfsz	??_Lcd_Cmd,f
  7953  17FD  2FFA               	goto	u4137
  7954  17FE  0000               	nop
  7955  17FF  0008               	return
  7956  1800                     __end_of_Lcd_Cmd:	
  7957  007E                     btemp	set	126	;btemp
  7958  007E                     wtemp0	set	126


Data Sizes:
    Strings     16
    Constant    118
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     75      75
    BANK1            80     52      52
    BANK2            80      0       0
    BANK3            80      0       0
    BANK4            80      0       0
    BANK5            80      0       0
    BANK6            80      0       0
    BANK7            80      0       0
    BANK8            80      0       0
    BANK9            80      0       0
    BANK10           80      0       0
    BANK11           80      0       0
    BANK12           80      0       0
    BANK13           80      0       0
    BANK14           80      0       0
    BANK15           80      0       0
    BANK16           80      0       0
    BANK17           80      0       0
    BANK18           80      0       0
    BANK19           80      0       0
    BANK20           80      0       0
    BANK21           80      0       0
    BANK22           80      0       0
    BANK23           80      0       0
    BANK24           80      0       0
    BANK25           80      0       0
    BANK26           80      0       0
    BANK27           80      0       0
    BANK28           80      0       0
    BANK29           80      0       0
    BANK30           80      0       0
    BANK31           80      0       0
    BANK32           80      0       0
    BANK33           80      0       0
    BANK34           80      0       0
    BANK35           80      0       0
    BANK36           80      0       0
    BANK37           80      0       0
    BANK38           80      0       0
    BANK39           80      0       0
    BANK40           80      0       0
    BANK41           80      0       0
    BANK42           80      0       0
    BANK43           80      0       0
    BANK44           80      0       0
    BANK45           80      0       0
    BANK46           80      0       0
    BANK47           80      0       0
    BANK48           80      0       0
    BANK49           80      0       0
    BANK50           80      0       0

Pointer List with Targets:

    sprintf@f	PTR const unsigned char  size(2) Largest target is 8
		 -> STR_2(CODE[8]), STR_1(CODE[8]), 

    sprintf@sp	PTR unsigned char  size(1) Largest target is 16
		 -> main@buffer1(BANK1[16]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    Lcd_Out2@buffer	PTR unsigned char  size(1) Largest target is 16
		 -> main@buffer1(BANK1[16]), 


Critical Paths under _main in COMMON

    _main->___awtoft
    _sprintf->___lldiv
    _sprintf->___lltoft
    _sprintf->___wmul
    _sprintf->__div_to_l_
    _scale->___wmul
    _fround->___wmul
    ___wmul->___awdiv
    ___ftmul->___awtoft
    ___ftmul->___wmul
    ___awdiv->___awmod
    ___lltoft->___ftpack
    ___ftsub->___lltoft
    ___ftdiv->___awtoft
    ___awtoft->___ftpack
    _Lcd_Out2->_Lcd_Chr_CP
    _Lcd_Out2->_Lcd_Cmd
    _Lcd_Init->_Lcd_Cmd

Critical Paths under _main in BANK0

    _main->_sprintf
    _sprintf->___ftsub
    _scale->___ftmul
    _fround->___ftmul
    ___wmul->___awdiv
    ___ftmul->___wmul
    ___fttol->_scale
    ___ftsub->___ftadd
    ___ftadd->_fround
    ___ftdiv->___ftmul

Critical Paths under _main in BANK1

    _main->_sprintf

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _main in BANK16

    None.

Critical Paths under _main in BANK17

    None.

Critical Paths under _main in BANK18

    None.

Critical Paths under _main in BANK19

    None.

Critical Paths under _main in BANK20

    None.

Critical Paths under _main in BANK21

    None.

Critical Paths under _main in BANK22

    None.

Critical Paths under _main in BANK23

    None.

Critical Paths under _main in BANK24

    None.

Critical Paths under _main in BANK25

    None.

Critical Paths under _main in BANK26

    None.

Critical Paths under _main in BANK27

    None.

Critical Paths under _main in BANK28

    None.

Critical Paths under _main in BANK29

    None.

Critical Paths under _main in BANK30

    None.

Critical Paths under _main in BANK31

    None.

Critical Paths under _main in BANK32

    None.

Critical Paths under _main in BANK33

    None.

Critical Paths under _main in BANK34

    None.

Critical Paths under _main in BANK35

    None.

Critical Paths under _main in BANK36

    None.

Critical Paths under _main in BANK37

    None.

Critical Paths under _main in BANK38

    None.

Critical Paths under _main in BANK39

    None.

Critical Paths under _main in BANK40

    None.

Critical Paths under _main in BANK41

    None.

Critical Paths under _main in BANK42

    None.

Critical Paths under _main in BANK43

    None.

Critical Paths under _main in BANK44

    None.

Critical Paths under _main in BANK45

    None.

Critical Paths under _main in BANK46

    None.

Critical Paths under _main in BANK47

    None.

Critical Paths under _main in BANK48

    None.

Critical Paths under _main in BANK49

    None.

Critical Paths under _main in BANK50

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                41    37      4   55450
                                             68 BANK0      7     3      4
                                             23 BANK1     29    29      0
                            _Lcd_Cmd
                           _Lcd_Init
                           _Lcd_Out2
                           ___awtoft
                            ___ftdiv
                            ___ftmul
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             41    36      5   44272
                                             57 BANK0     11     6      5
                                              0 BANK1     23    23      0
                            ___awdiv
                            ___ftadd
                             ___ftge
                            ___ftmul
                            ___ftneg
                            ___ftsub
                            ___fttol
                            ___lldiv
                            ___llmod
                           ___lltoft
                             ___wmul
                         __div_to_l_
                        __tdiv_to_l_
                             _fround
                            _isdigit
                              _scale
 ---------------------------------------------------------------------------------
 (2) _scale                                                9     6      3   10734
                                             24 BANK0      9     6      3
                            ___awdiv
                            ___awmod
                            ___ftmul
                             ___wmul
 ---------------------------------------------------------------------------------
 (2) _isdigit                                              2     2      0      68
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (2) _fround                                              14    11      3   10536
                                             24 BANK0     14    11      3
                            ___awdiv
                            ___awmod
                            ___ftmul
                             ___wmul
 ---------------------------------------------------------------------------------
 (3) ___wmul                                               6     2      4    2652
                                             12 COMMON     2     2      0
                                              4 BANK0      4     0      4
                            ___awdiv (ARG)
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (3) ___ftmul                                             16    10      6    4611
                                              8 BANK0     16    10      6
                            ___awdiv (ARG)
                            ___awmod (ARG)
                           ___awtoft (ARG)
                           ___ftpack
                           ___ftpack (ARG)
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (3) ___awmod                                              7     3      4    1448
                                              0 COMMON     7     3      4
 ---------------------------------------------------------------------------------
 (3) ___awdiv                                              9     5      4    1580
                                              7 COMMON     5     1      4
                                              0 BANK0      4     4      0
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (2) __tdiv_to_l_                                         16    10      6     431
                                              0 COMMON    10     4      6
                                              0 BANK0      6     6      0
 ---------------------------------------------------------------------------------
 (2) __div_to_l_                                          20    14      6     574
                                              0 COMMON    14     8      6
                                              0 BANK0      6     6      0
 ---------------------------------------------------------------------------------
 (2) ___lltoft                                             6     2      4    2242
                                              8 COMMON     6     2      4
                           ___ftpack
 ---------------------------------------------------------------------------------
 (2) ___llmod                                             10     2      8     543
                                              0 COMMON    10     2      8
 ---------------------------------------------------------------------------------
 (2) ___lldiv                                             14     6      8     418
                                              0 COMMON    14     6      8
 ---------------------------------------------------------------------------------
 (2) ___fttol                                             14    10      4     444
                                             33 BANK0     14    10      4
                            ___ftmul (ARG)
                              _scale (ARG)
 ---------------------------------------------------------------------------------
 (2) ___ftsub                                              6     0      6    3400
                                             51 BANK0      6     0      6
                            ___ftadd
                           ___lltoft (ARG)
 ---------------------------------------------------------------------------------
 (3) ___ftadd                                             13     7      6    3205
                                             38 BANK0     13     7      6
                           ___ftpack
                             _fround (ARG)
 ---------------------------------------------------------------------------------
 (2) ___ftneg                                              3     0      3     109
                                              0 COMMON     3     0      3
 ---------------------------------------------------------------------------------
 (2) ___ftge                                               9     3      6     648
                                              0 COMMON     9     3      6
 ---------------------------------------------------------------------------------
 (1) ___ftdiv                                             16    10      6    2645
                                             24 BANK0     16    10      6
                           ___awtoft (ARG)
                            ___ftmul (ARG)
                           ___ftpack
 ---------------------------------------------------------------------------------
 (1) ___awtoft                                             6     3      3    2328
                                              8 COMMON     6     3      3
                           ___ftpack
 ---------------------------------------------------------------------------------
 (4) ___ftpack                                             8     3      5    2109
                                              0 COMMON     8     3      5
 ---------------------------------------------------------------------------------
 (1) _Lcd_Out2                                             5     3      2     789
                                              3 COMMON     5     3      2
                         _Lcd_Chr_CP
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (2) _Lcd_Chr_CP                                           3     3      0     176
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (1) _Lcd_Init                                             2     2      0     314
                                              3 COMMON     2     2      0
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (2) _Lcd_Cmd                                              3     3      0     176
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Lcd_Cmd
   _Lcd_Init
     _Lcd_Cmd
   _Lcd_Out2
     _Lcd_Chr_CP
     _Lcd_Cmd
   ___awtoft
     ___ftpack
   ___ftdiv
     ___awtoft (ARG)
       ___ftpack
     ___ftmul (ARG)
       ___awdiv (ARG)
         ___awmod (ARG)
       ___awmod (ARG)
       ___awtoft (ARG)
         ___ftpack
       ___ftpack (ARG)
       ___ftpack (ARG)
       ___wmul (ARG)
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
     ___ftpack (ARG)
   ___ftmul
     ___awdiv (ARG)
       ___awmod (ARG)
     ___awmod (ARG)
     ___awtoft (ARG)
       ___ftpack
     ___ftpack (ARG)
     ___ftpack (ARG)
     ___wmul (ARG)
       ___awdiv (ARG)
         ___awmod (ARG)
       ___awmod (ARG)
   _sprintf
     ___awdiv
       ___awmod (ARG)
     ___ftadd
       ___ftpack
       _fround (ARG)
         ___awdiv
           ___awmod (ARG)
         ___awmod
         ___ftmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
           ___ftpack (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         ___wmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
     ___ftge
     ___ftmul
       ___awdiv (ARG)
         ___awmod (ARG)
       ___awmod (ARG)
       ___awtoft (ARG)
         ___ftpack
       ___ftpack (ARG)
       ___ftpack (ARG)
       ___wmul (ARG)
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
     ___ftneg
     ___ftsub
       ___ftadd
         ___ftpack
         _fround (ARG)
           ___awdiv
             ___awmod (ARG)
           ___awmod
           ___ftmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___wmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
       ___lltoft (ARG)
         ___ftpack
     ___fttol
       ___ftmul (ARG)
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftpack (ARG)
         ___ftpack (ARG)
         ___wmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
       _scale (ARG)
         ___awdiv
           ___awmod (ARG)
         ___awmod
         ___ftmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
           ___ftpack (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         ___wmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
     ___lldiv
     ___llmod
     ___lltoft
       ___ftpack
     ___wmul
       ___awdiv (ARG)
         ___awmod (ARG)
       ___awmod (ARG)
     __div_to_l_
     __tdiv_to_l_
     _fround
       ___awdiv
         ___awmod (ARG)
       ___awmod
       ___ftmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftpack (ARG)
         ___ftpack (ARG)
         ___wmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
       ___wmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
     _isdigit
     _scale
       ___awdiv
         ___awmod (ARG)
       ___awmod
       ___ftmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftpack (ARG)
         ___ftpack (ARG)
         ___wmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
       ___wmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             FF0      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      E       E       2      100.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     4B      4B       5       93.8%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BANK1               50     34      34       7       65.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BITBANK2            50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BANK2               50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BITBANK3            50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BANK3               50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITBANK4            50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BANK4               50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITBANK5            50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BANK5               50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITBANK6            50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BANK6               50      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITBANK7            50      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BANK7               50      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITBANK8            50      0       0      20        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BANK8               50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BITBANK9            50      0       0      22        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BANK9               50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BITBANK10           50      0       0      24        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BANK10              50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BITBANK11           50      0       0      26        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BANK11              50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
ABS                  0      0       0      28        0.0%
BITBANK12           50      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BANK12              50      0       0      30        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITBANK13           50      0       0      31        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BANK13              50      0       0      32        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%
BITBANK14           50      0       0      33        0.0%
BITSFR32             0      0       0      33        0.0%
SFR32                0      0       0      33        0.0%
BANK14              50      0       0      34        0.0%
BITSFR33             0      0       0      34        0.0%
SFR33                0      0       0      34        0.0%
BITBANK15           50      0       0      35        0.0%
BITSFR34             0      0       0      35        0.0%
SFR34                0      0       0      35        0.0%
BANK15              50      0       0      36        0.0%
BITSFR35             0      0       0      36        0.0%
SFR35                0      0       0      36        0.0%
BITBANK16           50      0       0      37        0.0%
BITSFR36             0      0       0      37        0.0%
SFR36                0      0       0      37        0.0%
BANK16              50      0       0      38        0.0%
BITSFR37             0      0       0      38        0.0%
SFR37                0      0       0      38        0.0%
BITBANK17           50      0       0      39        0.0%
BITSFR38             0      0       0      39        0.0%
SFR38                0      0       0      39        0.0%
BANK17              50      0       0      40        0.0%
BITSFR39             0      0       0      40        0.0%
SFR39                0      0       0      40        0.0%
BITBANK18           50      0       0      41        0.0%
BITSFR40             0      0       0      41        0.0%
SFR40                0      0       0      41        0.0%
BANK18              50      0       0      42        0.0%
BITSFR41             0      0       0      42        0.0%
SFR41                0      0       0      42        0.0%
BITBANK19           50      0       0      43        0.0%
BITSFR42             0      0       0      43        0.0%
SFR42                0      0       0      43        0.0%
BANK19              50      0       0      44        0.0%
BITSFR43             0      0       0      44        0.0%
SFR43                0      0       0      44        0.0%
BITBANK20           50      0       0      45        0.0%
BITSFR44             0      0       0      45        0.0%
SFR44                0      0       0      45        0.0%
BANK20              50      0       0      46        0.0%
BITSFR45             0      0       0      46        0.0%
SFR45                0      0       0      46        0.0%
BITBANK21           50      0       0      47        0.0%
BITSFR46             0      0       0      47        0.0%
SFR46                0      0       0      47        0.0%
BANK21              50      0       0      48        0.0%
BITSFR47             0      0       0      48        0.0%
SFR47                0      0       0      48        0.0%
BITBANK22           50      0       0      49        0.0%
BITSFR48             0      0       0      49        0.0%
SFR48                0      0       0      49        0.0%
BANK22              50      0       0      50        0.0%
BITSFR49             0      0       0      50        0.0%
SFR49                0      0       0      50        0.0%
BITBANK23           50      0       0      51        0.0%
BITSFR50             0      0       0      51        0.0%
SFR50                0      0       0      51        0.0%
BANK23              50      0       0      52        0.0%
BITSFR51             0      0       0      52        0.0%
SFR51                0      0       0      52        0.0%
BITBANK24           50      0       0      53        0.0%
BITSFR52             0      0       0      53        0.0%
SFR52                0      0       0      53        0.0%
BANK24              50      0       0      54        0.0%
BITSFR53             0      0       0      54        0.0%
SFR53                0      0       0      54        0.0%
BITBANK25           50      0       0      55        0.0%
BITSFR54             0      0       0      55        0.0%
SFR54                0      0       0      55        0.0%
BANK25              50      0       0      56        0.0%
BITSFR55             0      0       0      56        0.0%
SFR55                0      0       0      56        0.0%
BITBANK26           50      0       0      57        0.0%
BITSFR56             0      0       0      57        0.0%
SFR56                0      0       0      57        0.0%
BANK26              50      0       0      58        0.0%
BITSFR57             0      0       0      58        0.0%
SFR57                0      0       0      58        0.0%
BITSFR58             0      0       0      59        0.0%
SFR58                0      0       0      59        0.0%
DATA                 0      0       0      59        0.0%
BITBANK27           50      0       0      60        0.0%
BITSFR59             0      0       0      60        0.0%
SFR59                0      0       0      60        0.0%
BANK27              50      0       0      61        0.0%
BITSFR60             0      0       0      61        0.0%
SFR60                0      0       0      61        0.0%
BITBANK28           50      0       0      62        0.0%
BITSFR61             0      0       0      62        0.0%
SFR61                0      0       0      62        0.0%
BANK28              50      0       0      63        0.0%
BITSFR62             0      0       0      63        0.0%
SFR62                0      0       0      63        0.0%
BITBANK29           50      0       0      64        0.0%
BITSFR63             0      0       0      64        0.0%
SFR63                0      0       0      64        0.0%
BANK29              50      0       0      65        0.0%
BITBANK30           50      0       0      66        0.0%
BANK30              50      0       0      67        0.0%
BITBANK31           50      0       0      68        0.0%
BANK31              50      0       0      69        0.0%
BITBANK32           50      0       0      70        0.0%
BANK32              50      0       0      71        0.0%
BITBANK33           50      0       0      72        0.0%
BANK33              50      0       0      73        0.0%
BITBANK34           50      0       0      74        0.0%
BANK34              50      0       0      75        0.0%
BITBANK35           50      0       0      76        0.0%
BANK35              50      0       0      77        0.0%
BITBANK36           50      0       0      78        0.0%
BANK36              50      0       0      79        0.0%
BITBANK37           50      0       0      80        0.0%
BANK37              50      0       0      81        0.0%
BITBANK38           50      0       0      82        0.0%
BANK38              50      0       0      83        0.0%
BITBANK39           50      0       0      84        0.0%
BANK39              50      0       0      85        0.0%
BITBANK40           50      0       0      86        0.0%
BANK40              50      0       0      87        0.0%
BITBANK41           50      0       0      88        0.0%
BANK41              50      0       0      89        0.0%
BITBANK42           50      0       0      90        0.0%
BANK42              50      0       0      91        0.0%
BITBANK43           50      0       0      92        0.0%
BANK43              50      0       0      93        0.0%
BITBANK44           50      0       0      94        0.0%
BANK44              50      0       0      95        0.0%
BITBANK45           50      0       0      96        0.0%
BANK45              50      0       0      97        0.0%
BITBANK46           50      0       0      98        0.0%
BANK46              50      0       0      99        0.0%
BITBANK47           50      0       0     100        0.0%
BANK47              50      0       0     101        0.0%
BITBANK48           50      0       0     102        0.0%
BANK48              50      0       0     103        0.0%
BITBANK49           50      0       0     104        0.0%
BANK49              50      0       0     105        0.0%
BITBANK50           50      0       0     106        0.0%
BANK50              50      0       0     107        0.0%


Microchip Technology PIC Macro Assembler V1.45 build -152302408 
Symbol Table                                                                                   Tue Sep 11 11:56:27 2018

            __CFG_CP$OFF 0000                       l50 096F                       l49 0947  
                     l92 0F50                       l89 0EC3             ___awdiv@sign 0021  
    ___wmul@multiplicand 0026             ___ftadd@exp1 0052             ___ftadd@exp2 0051  
            __CFG_LVP$ON 0000             ___ftadd@sign 0050                      l143 0386  
                    l149 04A7                      l272 14D2                      l184 07A1  
                    l450 083B                      l186 07DB                      l507 0048  
                    l517 00C1                      l438 0D11                      l457 084E  
                    l481 0BA9                      l458 0856                      l558 1753  
           __CFG_CPD$OFF 0000             ___awmod@sign 0076             __CFG_BORV$LO 0000  
                    wreg 0009              _sprintf$950 00A0             __CFG_ZCD$OFF 0000  
            main@buffer1 00B7             ___ftdiv@cntr 0042             ___ftdiv@sign 0047  
                   l2201 0D14                     l2105 0030                     l2043 0E55  
                   l2035 0DDD                     l2213 15AC                     l2303 168B  
                   l2127 0083                     l2119 0069                     l2401 156A  
                   l2209 1596                     l2313 15C3                     l2145 00B8  
                   l2137 009D                     l2065 01D5                     l2315 15D1  
                   l2323 15F4                     l2331 1527                     l2163 0C3B  
                   l2147 00C4                     l2139 00AB                     l2083 02F4  
                   l2059 0176                     l2237 14ED                     l2333 1537  
                   l2181 0CCE                     l2173 0C86                     l2157 0C1E  
                   l2077 0295                     l2069 01F2                     l2407 156E  
                   l2247 16FF                     l2319 15E9                     l2191 0CED  
                   l2095 0015                     l2431 0349                     l2273 174A  
                   l2265 172F                     l2193 0CFB                     l1801 16B2  
                   l2513 05A9                     l2441 039E                     l2433 0381  
                   l2417 0334                     l2601 0319                     l2275 1756  
                   l2267 173D                     l2291 1660                     l1803 16BE  
                   l2603 07F8                     l1741 0822                     l1813 16D9  
                   l2541 0655                     l2525 05E6                     l2509 055B  
                   l2391 1550                     l1751 0848                     l1743 0827  
                   l1735 0811                     l2615 150D                     l2631 09DA  
                   l1911 0BBB                     l2279 1764                     l2199 0D08  
                   l2519 05AF                     l2447 03B2                     l2439 0388  
                   l2393 1553                     l2625 09C4                     l1905 0B9B  
                   l2289 1652                     l1817 16E1                     l1809 16D0  
                   l1841 1614                     l1833 160E                     l2561 06AB  
                   l2553 0685                     l2481 0490                     l2473 0443  
                   l2457 03E7                     l2395 1556                     l1739 0818  
                   l1915 0BCD                     l1907 0BA5                     l2299 1680  
                   l1843 1620                     l1851 1635                     l2547 0668  
                   l2539 0601                     l2389 154D                     l1749 0840  
                   l2653 0A34                     l2645 0A1B                     l1925 0BE8  
                   l1829 1607                     l1941 0A83                     l1765 14CB  
                   l2399 155C                     l1791 16AA                     l1855 163D  
                   l1847 162C                     l1935 0A6D                     l2583 078D  
                   l2495 0513                     l2487 04DC                     l2719 0EBA  
                   l1865 0B32                     l1785 169F                     l1953 0ABE  
                   l2593 07BF                     l2577 077A                     l2585 0792  
                   l1875 0B48                     l2499 0527                     l1893 0B75  
                   l1869 0B39                     l1965 0ADA                     l1957 0AC6  
                   l1895 0B7F                     l1887 0B62                     l1897 0B84  
                   l1969 0AE2                     l1899 0B88                     STR_1 187E  
                   STR_2 1827                     u2015 0843                     u2055 085D  
                   u3015 0C87                     u3025 0CB1                     u2145 16B5  
                   u3205 1730                     u2165 16BF                     u2245 1617  
                   u2085 14D3                     u4007 091C                     u2175 16C9  
                   u2095 14D8                     u4017 0924                     u2425 0B76  
                   u3305 1675                     u3065 0CEE                     u2185 16D1  
                   u2265 1626                     u4107 17B5                     u4027 092C  
                   u3235 174B                     u3315 1681                     u2275 162D  
                   u4117 17EC                     u4037 0934                     u4127 17F2  
                   u4047 093C                     u2455 0B89                     u3175 1706  
                   u3095 0D09                     u4137 17FA                     u2705 17CE  
                   u4057 0955                     u3345 15C6                     u2625 0AE3  
                   u4067 0962                     u2715 0874                     u2395 0B63  
                   u3275 1655                     u2635 0AE9                     u2555 0A8F  
                   u3515 03FC                     u4077 097D                     u2725 0885  
                   u2485 0B9C                     u3365 15DF                     u2565 0A9F  
                   u2655 1774                     u4087 098A                     u2735 0893  
                   u3295 1661                     u3375 15EA                     u4097 17AF  
                   u2665 1785                     u2745 08A2                     u2905 0084  
                   u2585 0AC7                     u3625 05DA                     u2675 1793  
                   u2755 08BD                     u3395 152C                     u2595 0ACD  
                   u3555 04B3                     u2685 17A2                     u2765 08CE  
                   u3805 09EC                     u3565 04E8                     u2695 17BD  
                   u1975 081D                     u3815 09FC                     u3735 07B5  
                   u3825 0A1C                     u2945 009E                     u3745 07D3  
                   u3665 0673                     u1995 0836                     u3835 0A2B  
                   u3675 0681                     u3595 0511                     u3907 0EBE  
                   u3845 0A35                     u2885 006A                     u3917 0F4B  
                   u2975 00B9                     u2895 007A                     u3927 0FF8  
                   u3937 08AF                     u3947 08B5                     u3957 08EC  
                   u3967 08F2                     u3977 08F8                     u3897 0EB3  
                   u3987 08FE                     u3997 0914             __CFG_WRT$OFF 0000  
          __CFG_FCMEN$ON 0000                     _main 0E82             ___ftpack@arg 0070  
           ___ftpack@exp 0073                     fsr0h 0005                     fsr1h 0007  
                   indf0 0000                     fsr0l 0004                     indf1 0001  
                   fsr1l 0006                     btemp 007E            __CFG_BOREN$ON 0000  
                   start 0002              main@voltaje 00C7          __end_of_Lcd_Cmd 1800  
          __CFG_CSWEN$ON 0000            __CFG_MCLRE$ON 0000             ___ftmul@cntr 0036  
           ___ftmul@sign 0037               _Lcd_Chr_CP 086D             ___fttol@exp1 004E  
           ___fttol@lval 004A           Lcd_Out2@buffer 0074                    ?_main 0064  
                  _ADPCH 009E          __end_of___awdiv 16E6          __end_of___ftadd 0C00  
          __CFG_WDTE$OFF 0000          __end_of___awmod 1642          __end_of___ftdiv 0A56  
        __end_of___ftneg 0809          __end_of___lldiv 1694          __end_of___ftmul 0B0A  
        ___awdiv@divisor 0077          __end_of___llmod 15FD          __end_of___ftsub 1503  
        __end_of___fttol 176D          ___awdiv@counter 0020                    _PORTA 000C  
                  _PORTB 000D            __CFG_PWRTE$ON 0000             ___lltoft@exp 007D  
          ___awtoft@sign 007D          __end_of_dpowers 1857                    _scale 00CD  
        __end_of_isdigit 0017            ___ftpack@sign 0074                    status 0003  
                  wtemp0 007E          __end_of_sprintf 07FD         __end_of_Lcd_Init 09AD  
       __end_of_Lcd_Out2 1580          __initialization 07FD             __end_of_main 1000  
                 ??_main 0068            ___fttol@sign1 0049     __size_of__tdiv_to_l_ 00B6  
       ___llmod@dividend 0074                   ?_scale 0038                   _ADRESH 008D  
                 _ADRESL 008C         ___awdiv@dividend 0079         __end_of___awtoft 1523  
                 _ANSELC 1F4E                   _ANSELD 1F59         __end_of___ftpack 086D  
       __end_of___lltoft 154B           __CFG_WDTCCS$SC 0000                ??_Lcd_Cmd 0070  
       __end_of__powers_ 187E                   ___ftge 1580              ?_Lcd_Chr_CP 0070  
                 ___wmul 14C9                ??___awdiv 007B                ??___ftadd 004C  
         __CFG_STVREN$ON 0000                ??___awmod 0074                ??___ftdiv 003E  
              ??___ftneg 0073                ??___lldiv 0078                ??___ftmul 002E  
              ??___llmod 0078                ??___ftsub 007E                ??___fttol 0045  
                 _fround 0D1D         ___awdiv@quotient 0022          ___awmod@divisor 0070  
        ___awmod@counter 0075    ___ftmul@f3_as_product 0033                ??_isdigit 0070  
              ??_sprintf 005E  __end_of__initialization 07FD               ___ftadd@f1 0046  
             ___ftadd@f2 0049               ___ftge@ff1 0070               ___ftge@ff2 0073  
             ___ftdiv@f1 003B               ___ftdiv@f2 0038               ___ftdiv@f3 0043  
             ___ftneg@f1 0070               ___awtoft@c 0078               ___ftmul@f1 0028  
             ___ftmul@f2 002B               ___ftsub@f1 0056               ___ftsub@f2 0053  
             ___fttol@f1 0041           __pcstackCOMMON 0070               ___lltoft@c 0078  
          __end_of_scale 0311               __div_to_l_ 0C00                ?_Lcd_Init 0070  
              ?_Lcd_Out2 0073          __div_to_l_@exp1 0025          __div_to_l_@cntr 0024  
                ??_scale 003B          __div_to_l_@quot 0020      __size_of_Lcd_Chr_CP 0097  
          __div_to_l_@f1 0070            __div_to_l_@f2 0073               __pmaintext 0E82  
                ?___ftge 0070                  ?___wmul 0024          __CFG_PPS1WAY$ON 0000  
                ?_fround 0038                ?___awtoft 0078                ?___ftpack 0070  
              ?___lltoft 0078      __CFG_RSTOSC$HFINT32 0000               ??_Lcd_Init 0073  
             ??_Lcd_Out2 0075                  _Lcd_Cmd 176D                _ADREFbits 009A  
      __end_of__npowers_ 1827     __CFG_SCANE$available 0000          __size_of___ftge 003B  
                ___awdiv 1694                  ___ftadd 0B0A                  ___awmod 15FD  
                ___ftdiv 09AD                  ___ftneg 0801                  ___lldiv 1642  
        __size_of___wmul 001C                  ___ftmul 0A56                  ___llmod 15BB  
                ___ftsub 14E5                  ___fttol 16E6               _fround$947 0042  
             _fround$948 003F               ??___awtoft 007B               ??___ftpack 0075  
        __size_of_fround 0165               ??___lltoft 007C                  __ptext1 0311  
                __ptext2 00CD                  __ptext3 0009                  __ptext4 0D1D  
                __ptext5 14C9                  __ptext6 0A56                  __ptext7 15FD  
                __ptext8 1694                  __ptext9 0017              ?__div_to_l_ 0070  
                _dpowers 182F                  _isdigit 0009         ___awmod@dividend 0072  
                _sprintf 0311     end_of_initialization 07FD          ___lldiv@divisor 0070  
        ___lldiv@counter 007D             ??_Lcd_Chr_CP 0070                Lcd_Out2@x 0073  
              Lcd_Out2@y 0076           __tdiv_to_l_@f1 0070           __tdiv_to_l_@f2 0073  
  __CFG_WDTCPS$WDTCPS_31 0000            ??__tdiv_to_l_ 0076                _PORTCbits 000E  
              _PORTDbits 000F                _TRISAbits 0011                _TRISCbits 0013  
              _TRISDbits 0014                _TRISEbits 0015         __CFG_FEXTOSC$OFF 0000  
     __end_of_Lcd_Chr_CP 0904              ___ftdiv@exp 0046      __size_of__div_to_l_ 011D  
            ___ftmul@exp 0032           __end_of___ftge 15BB           __end_of___wmul 14E5  
         __end_of_fround 0E82      start_initialization 07FD      __end_of__tdiv_to_l_ 00CD  
      __size_of_Lcd_Init 00A9        __size_of_Lcd_Out2 0035          ___llmod@divisor 0070  
        ___llmod@counter 0079         __CFG_LPBOREN$OFF 0000                 ??___ftge 0076  
               ??___wmul 007C                 ??_fround 003B            sprintf@tmpval 00AC  
             fround@prec 0045        __size_of___awtoft 0020        __size_of___ftpack 0064  
      __size_of___lltoft 0028                ___latbits 0004            __pcstackBANK0 0020  
          __pcstackBANK1 00A0                 ?_Lcd_Cmd 0070              sprintf@flag 00A4  
            sprintf@fval 00B3              sprintf@prec 00B0                 ?___awdiv 0077  
               ?___ftadd 0046                 ?___awmod 0070                 ?___ftdiv 0038  
               ?___ftneg 0070                 ?___lldiv 0070                 ?___ftmul 0028  
               ?___llmod 0070                 ?___ftsub 0053                __npowers_ 1800  
               ?___fttol 0041              __tdiv_to_l_ 0017             ??__div_to_l_ 0076  
               ?_isdigit 0070                _scale$949 003D                 ?_sprintf 0059  
         __size_of_scale 0244           ___wmul@product 007C       __end_of__div_to_l_ 0D1D  
           Lcd_Init@data 0074               _ADCON0bits 0093        ___wmul@multiplier 0024  
           Lcd_Out2@data 0077                 _Lcd_Init 0904                 _Lcd_Out2 154B  
       __size_of_Lcd_Cmd 0093         __size_of___awdiv 0052         __size_of___ftadd 00F6  
       __size_of___awmod 0045         __size_of___ftdiv 00A9         __size_of___ftneg 0008  
       __size_of___lldiv 0052         __size_of___ftmul 00B4         __size_of___llmod 0042  
       __size_of___ftsub 001E         __size_of___fttol 0087                 ___awtoft 1503  
               ___ftpack 0809                 ___lltoft 1523              _isdigit$735 0070  
             _ANSELAbits 1F38               _ANSELEbits 1F64               sprintf@exp 00AA  
             sprintf@val 00A6         __size_of_isdigit 000E           Lcd_Chr_CP@data 0072  
               _main$946 00CD                 __ptext10 0C00                 __ptext11 1523  
               __ptext20 1503                 __ptext12 15BB                 __ptext21 0809  
               __ptext13 1642                 __ptext22 154B                 __ptext14 16E6  
               __ptext23 086D                 __ptext15 14E5                 __ptext24 0904  
               __ptext16 0B0A                 __ptext25 176D                 __ptext17 0801  
               __ptext18 1580                 __ptext19 09AD                 __powers_ 1857  
       __size_of_sprintf 04EC              Lcd_Cmd@data 0072            __size_of_main 017E  
   __CFG_WDTCWS$WDTCWS_7 0000                 main@adc1 00D0                 main@adc2 00D2  
               main@argc 0064                 main@argv 0066                 main@temp 00CA  
             _FVRCONbits 090C                 isdigit@c 0071                 scale@scl 0040  
              sprintf@ap 00A3         __tdiv_to_l_@exp1 0025         __tdiv_to_l_@cntr 0024  
              sprintf@sp 00B2         __tdiv_to_l_@quot 0020         ___lldiv@dividend 0074  
      __CFG_CLKOUTEN$OFF 0000               _OSCFRQbits 0893             ?__tdiv_to_l_ 0070  
          __pstringtext1 182F            __pstringtext2 1857            __pstringtext3 1800  
          __pstringtext4 187E            __pstringtext5 0000                 sprintf@c 00B6  
               sprintf@f 0059         ___lldiv@quotient 0079  
