

Microchip Technology PIC LITE Macro Assembler V1.45 build -152302408 
                                                                                               Fri Oct 26 20:59:33 2018

Microchip Technology Omniscient Code Generator v1.45 (Free mode) build 201711160504
     1                           	processor	16F18877
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	idataBANK1,global,class=CODE,delta=2
     5                           	psect	stringtext1,global,class=STRCODE,delta=2
     6                           	psect	stringtext2,global,class=STRCODE,delta=2
     7                           	psect	cinit,global,class=CODE,merge=1,delta=2
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     9                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    10                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1
    11                           	psect	clrtext,global,class=CODE,delta=2
    12                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    13                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    14                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    15                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    16                           	psect	text1,local,class=CODE,merge=1,delta=2
    17                           	psect	text2,local,class=CODE,merge=1,delta=2,group=2
    18                           	psect	text3,local,class=CODE,merge=1,delta=2,group=2
    19                           	psect	text4,local,class=CODE,merge=1,delta=2,group=2
    20                           	psect	text5,local,class=CODE,merge=1,delta=2,group=2
    21                           	psect	text6,local,class=CODE,merge=1,delta=2
    22                           	psect	text7,local,class=CODE,merge=1,delta=2,group=2
    23                           	psect	text8,local,class=CODE,merge=1,delta=2,group=2
    24                           	psect	text9,local,class=CODE,merge=1,delta=2,group=2
    25                           	psect	text10,local,class=CODE,merge=1,delta=2,group=2
    26                           	psect	text11,local,class=CODE,merge=1,delta=2,group=2
    27                           	psect	text12,local,class=CODE,merge=1,delta=2,group=2
    28                           	psect	text13,local,class=CODE,merge=1,delta=2
    29                           	psect	text14,local,class=CODE,merge=1,delta=2
    30                           	psect	text15,local,class=CODE,merge=1,delta=2
    31                           	psect	text16,local,class=CODE,merge=1,delta=2
    32                           	dabs	1,0x7E,2
    33  0000                     
    34                           ; Version 1.45
    35                           ; Generated 16/11/2017 GMT
    36                           ; 
    37                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    38                           ; All rights reserved.
    39                           ; 
    40                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    41                           ; 
    42                           ; Redistribution and use in source and binary forms, with or without modification, are
    43                           ; permitted provided that the following conditions are met:
    44                           ; 
    45                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    46                           ;        conditions and the following disclaimer.
    47                           ; 
    48                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    49                           ;        of conditions and the following disclaimer in the documentation and/or other
    50                           ;        materials provided with the distribution.
    51                           ; 
    52                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    53                           ;        software without specific prior written permission.
    54                           ; 
    55                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    56                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    57                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    58                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    59                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    60                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    61                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    62                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    63                           ; 
    64                           ; 
    65                           ; Code-generator required, PIC16F18877 Definitions
    66                           ; 
    67                           ; SFR Addresses
    68  0000                     	;# 
    69  0001                     	;# 
    70  0002                     	;# 
    71  0003                     	;# 
    72  0004                     	;# 
    73  0005                     	;# 
    74  0006                     	;# 
    75  0007                     	;# 
    76  0008                     	;# 
    77  0009                     	;# 
    78  000A                     	;# 
    79  000B                     	;# 
    80  000C                     	;# 
    81  000D                     	;# 
    82  000E                     	;# 
    83  000F                     	;# 
    84  0010                     	;# 
    85  0011                     	;# 
    86  0012                     	;# 
    87  0013                     	;# 
    88  0014                     	;# 
    89  0015                     	;# 
    90  0016                     	;# 
    91  0017                     	;# 
    92  0018                     	;# 
    93  0019                     	;# 
    94  001A                     	;# 
    95  001C                     	;# 
    96  001C                     	;# 
    97  001D                     	;# 
    98  001D                     	;# 
    99  001E                     	;# 
   100  001F                     	;# 
   101  008C                     	;# 
   102  008C                     	;# 
   103  008D                     	;# 
   104  008E                     	;# 
   105  008E                     	;# 
   106  008F                     	;# 
   107  0090                     	;# 
   108  0090                     	;# 
   109  0091                     	;# 
   110  0093                     	;# 
   111  0094                     	;# 
   112  0095                     	;# 
   113  0096                     	;# 
   114  0097                     	;# 
   115  0098                     	;# 
   116  0099                     	;# 
   117  009A                     	;# 
   118  009B                     	;# 
   119  009C                     	;# 
   120  009D                     	;# 
   121  009E                     	;# 
   122  010C                     	;# 
   123  010D                     	;# 
   124  010E                     	;# 
   125  010E                     	;# 
   126  010F                     	;# 
   127  0110                     	;# 
   128  0110                     	;# 
   129  0111                     	;# 
   130  0112                     	;# 
   131  0112                     	;# 
   132  0113                     	;# 
   133  0114                     	;# 
   134  0114                     	;# 
   135  0115                     	;# 
   136  0116                     	;# 
   137  0116                     	;# 
   138  0117                     	;# 
   139  0119                     	;# 
   140  0119                     	;# 
   141  0119                     	;# 
   142  011A                     	;# 
   143  011A                     	;# 
   144  011A                     	;# 
   145  011B                     	;# 
   146  011B                     	;# 
   147  011B                     	;# 
   148  011B                     	;# 
   149  011B                     	;# 
   150  011C                     	;# 
   151  011C                     	;# 
   152  011C                     	;# 
   153  011D                     	;# 
   154  011D                     	;# 
   155  011D                     	;# 
   156  011E                     	;# 
   157  011E                     	;# 
   158  011E                     	;# 
   159  011F                     	;# 
   160  011F                     	;# 
   161  011F                     	;# 
   162  011F                     	;# 
   163  011F                     	;# 
   164  018C                     	;# 
   165  018D                     	;# 
   166  018E                     	;# 
   167  018F                     	;# 
   168  0190                     	;# 
   169  0191                     	;# 
   170  0192                     	;# 
   171  0196                     	;# 
   172  0197                     	;# 
   173  0198                     	;# 
   174  0199                     	;# 
   175  019A                     	;# 
   176  019B                     	;# 
   177  019C                     	;# 
   178  020C                     	;# 
   179  020C                     	;# 
   180  020D                     	;# 
   181  020E                     	;# 
   182  020F                     	;# 
   183  020F                     	;# 
   184  0210                     	;# 
   185  0210                     	;# 
   186  0211                     	;# 
   187  0211                     	;# 
   188  0212                     	;# 
   189  0212                     	;# 
   190  0213                     	;# 
   191  0214                     	;# 
   192  0215                     	;# 
   193  0215                     	;# 
   194  0216                     	;# 
   195  0216                     	;# 
   196  0217                     	;# 
   197  0217                     	;# 
   198  0218                     	;# 
   199  0218                     	;# 
   200  0219                     	;# 
   201  021A                     	;# 
   202  021B                     	;# 
   203  021B                     	;# 
   204  021C                     	;# 
   205  021C                     	;# 
   206  021D                     	;# 
   207  021D                     	;# 
   208  021E                     	;# 
   209  021F                     	;# 
   210  028C                     	;# 
   211  028C                     	;# 
   212  028D                     	;# 
   213  028D                     	;# 
   214  028E                     	;# 
   215  028F                     	;# 
   216  0290                     	;# 
   217  0290                     	;# 
   218  0291                     	;# 
   219  0292                     	;# 
   220  0292                     	;# 
   221  0293                     	;# 
   222  0293                     	;# 
   223  0294                     	;# 
   224  0295                     	;# 
   225  0296                     	;# 
   226  0296                     	;# 
   227  0297                     	;# 
   228  0298                     	;# 
   229  0298                     	;# 
   230  0299                     	;# 
   231  0299                     	;# 
   232  029A                     	;# 
   233  029B                     	;# 
   234  029C                     	;# 
   235  029C                     	;# 
   236  029D                     	;# 
   237  030C                     	;# 
   238  030C                     	;# 
   239  030D                     	;# 
   240  030E                     	;# 
   241  030F                     	;# 
   242  0310                     	;# 
   243  0310                     	;# 
   244  0311                     	;# 
   245  0312                     	;# 
   246  0313                     	;# 
   247  0314                     	;# 
   248  0314                     	;# 
   249  0315                     	;# 
   250  0316                     	;# 
   251  0317                     	;# 
   252  0318                     	;# 
   253  0318                     	;# 
   254  0319                     	;# 
   255  031A                     	;# 
   256  031B                     	;# 
   257  031C                     	;# 
   258  031C                     	;# 
   259  031D                     	;# 
   260  031E                     	;# 
   261  031F                     	;# 
   262  038C                     	;# 
   263  038D                     	;# 
   264  038E                     	;# 
   265  0390                     	;# 
   266  0391                     	;# 
   267  0392                     	;# 
   268  040C                     	;# 
   269  040D                     	;# 
   270  040E                     	;# 
   271  040F                     	;# 
   272  0410                     	;# 
   273  0411                     	;# 
   274  0416                     	;# 
   275  0416                     	;# 
   276  0417                     	;# 
   277  0418                     	;# 
   278  0418                     	;# 
   279  0419                     	;# 
   280  041A                     	;# 
   281  041A                     	;# 
   282  041B                     	;# 
   283  041C                     	;# 
   284  041C                     	;# 
   285  041D                     	;# 
   286  041E                     	;# 
   287  041F                     	;# 
   288  048C                     	;# 
   289  048C                     	;# 
   290  048D                     	;# 
   291  048E                     	;# 
   292  048F                     	;# 
   293  048F                     	;# 
   294  0490                     	;# 
   295  0491                     	;# 
   296  0492                     	;# 
   297  0492                     	;# 
   298  0493                     	;# 
   299  0494                     	;# 
   300  0495                     	;# 
   301  0495                     	;# 
   302  0496                     	;# 
   303  0497                     	;# 
   304  0498                     	;# 
   305  0499                     	;# 
   306  049A                     	;# 
   307  049B                     	;# 
   308  049C                     	;# 
   309  049D                     	;# 
   310  050C                     	;# 
   311  050C                     	;# 
   312  050D                     	;# 
   313  050E                     	;# 
   314  050F                     	;# 
   315  050F                     	;# 
   316  0510                     	;# 
   317  0511                     	;# 
   318  0512                     	;# 
   319  0512                     	;# 
   320  0513                     	;# 
   321  0514                     	;# 
   322  0515                     	;# 
   323  0515                     	;# 
   324  0516                     	;# 
   325  0517                     	;# 
   326  0518                     	;# 
   327  0519                     	;# 
   328  051A                     	;# 
   329  051B                     	;# 
   330  051C                     	;# 
   331  051D                     	;# 
   332  058C                     	;# 
   333  058C                     	;# 
   334  058D                     	;# 
   335  058E                     	;# 
   336  058F                     	;# 
   337  058F                     	;# 
   338  0590                     	;# 
   339  0591                     	;# 
   340  0592                     	;# 
   341  0593                     	;# 
   342  060C                     	;# 
   343  060D                     	;# 
   344  060E                     	;# 
   345  060F                     	;# 
   346  0610                     	;# 
   347  0611                     	;# 
   348  0612                     	;# 
   349  0613                     	;# 
   350  0614                     	;# 
   351  0616                     	;# 
   352  0617                     	;# 
   353  0618                     	;# 
   354  0619                     	;# 
   355  061A                     	;# 
   356  061B                     	;# 
   357  061C                     	;# 
   358  061D                     	;# 
   359  061E                     	;# 
   360  068C                     	;# 
   361  068D                     	;# 
   362  068E                     	;# 
   363  068F                     	;# 
   364  0690                     	;# 
   365  0691                     	;# 
   366  0692                     	;# 
   367  0693                     	;# 
   368  0694                     	;# 
   369  070C                     	;# 
   370  070D                     	;# 
   371  070E                     	;# 
   372  070F                     	;# 
   373  0710                     	;# 
   374  0711                     	;# 
   375  0712                     	;# 
   376  0713                     	;# 
   377  0714                     	;# 
   378  0716                     	;# 
   379  0717                     	;# 
   380  0718                     	;# 
   381  0719                     	;# 
   382  071A                     	;# 
   383  071B                     	;# 
   384  071C                     	;# 
   385  071D                     	;# 
   386  071E                     	;# 
   387  0796                     	;# 
   388  0797                     	;# 
   389  0798                     	;# 
   390  0799                     	;# 
   391  079A                     	;# 
   392  079B                     	;# 
   393  080C                     	;# 
   394  080D                     	;# 
   395  080E                     	;# 
   396  080F                     	;# 
   397  0810                     	;# 
   398  0811                     	;# 
   399  0812                     	;# 
   400  0813                     	;# 
   401  0814                     	;# 
   402  081A                     	;# 
   403  081B                     	;# 
   404  081C                     	;# 
   405  081D                     	;# 
   406  081E                     	;# 
   407  081F                     	;# 
   408  088C                     	;# 
   409  088D                     	;# 
   410  088E                     	;# 
   411  088F                     	;# 
   412  0890                     	;# 
   413  0891                     	;# 
   414  0892                     	;# 
   415  0893                     	;# 
   416  0895                     	;# 
   417  0896                     	;# 
   418  0897                     	;# 
   419  0898                     	;# 
   420  0899                     	;# 
   421  089A                     	;# 
   422  089B                     	;# 
   423  090C                     	;# 
   424  090E                     	;# 
   425  090F                     	;# 
   426  091F                     	;# 
   427  098F                     	;# 
   428  098F                     	;# 
   429  0990                     	;# 
   430  0991                     	;# 
   431  0992                     	;# 
   432  0993                     	;# 
   433  0994                     	;# 
   434  0995                     	;# 
   435  0996                     	;# 
   436  0997                     	;# 
   437  1E0F                     	;# 
   438  1E10                     	;# 
   439  1E11                     	;# 
   440  1E12                     	;# 
   441  1E13                     	;# 
   442  1E14                     	;# 
   443  1E15                     	;# 
   444  1E16                     	;# 
   445  1E17                     	;# 
   446  1E18                     	;# 
   447  1E19                     	;# 
   448  1E1A                     	;# 
   449  1E1B                     	;# 
   450  1E1C                     	;# 
   451  1E1D                     	;# 
   452  1E1E                     	;# 
   453  1E1F                     	;# 
   454  1E20                     	;# 
   455  1E21                     	;# 
   456  1E22                     	;# 
   457  1E23                     	;# 
   458  1E24                     	;# 
   459  1E25                     	;# 
   460  1E26                     	;# 
   461  1E27                     	;# 
   462  1E28                     	;# 
   463  1E29                     	;# 
   464  1E2A                     	;# 
   465  1E2B                     	;# 
   466  1E2C                     	;# 
   467  1E2D                     	;# 
   468  1E2E                     	;# 
   469  1E2F                     	;# 
   470  1E30                     	;# 
   471  1E31                     	;# 
   472  1E32                     	;# 
   473  1E33                     	;# 
   474  1E34                     	;# 
   475  1E35                     	;# 
   476  1E36                     	;# 
   477  1E37                     	;# 
   478  1E8F                     	;# 
   479  1E90                     	;# 
   480  1E91                     	;# 
   481  1E92                     	;# 
   482  1E93                     	;# 
   483  1E94                     	;# 
   484  1E95                     	;# 
   485  1E96                     	;# 
   486  1E97                     	;# 
   487  1E9C                     	;# 
   488  1E9D                     	;# 
   489  1E9E                     	;# 
   490  1EA1                     	;# 
   491  1EA2                     	;# 
   492  1EA3                     	;# 
   493  1EA4                     	;# 
   494  1EA5                     	;# 
   495  1EA9                     	;# 
   496  1EAA                     	;# 
   497  1EAB                     	;# 
   498  1EAC                     	;# 
   499  1EB1                     	;# 
   500  1EB2                     	;# 
   501  1EB3                     	;# 
   502  1EB8                     	;# 
   503  1EB9                     	;# 
   504  1EBA                     	;# 
   505  1EBB                     	;# 
   506  1EBC                     	;# 
   507  1EBD                     	;# 
   508  1EBE                     	;# 
   509  1EC3                     	;# 
   510  1EC5                     	;# 
   511  1EC6                     	;# 
   512  1EC7                     	;# 
   513  1EC8                     	;# 
   514  1EC9                     	;# 
   515  1ECA                     	;# 
   516  1ECB                     	;# 
   517  1ECC                     	;# 
   518  1F10                     	;# 
   519  1F11                     	;# 
   520  1F12                     	;# 
   521  1F13                     	;# 
   522  1F14                     	;# 
   523  1F15                     	;# 
   524  1F16                     	;# 
   525  1F17                     	;# 
   526  1F18                     	;# 
   527  1F19                     	;# 
   528  1F1A                     	;# 
   529  1F1B                     	;# 
   530  1F1C                     	;# 
   531  1F1D                     	;# 
   532  1F1E                     	;# 
   533  1F1F                     	;# 
   534  1F20                     	;# 
   535  1F21                     	;# 
   536  1F22                     	;# 
   537  1F23                     	;# 
   538  1F24                     	;# 
   539  1F25                     	;# 
   540  1F26                     	;# 
   541  1F27                     	;# 
   542  1F28                     	;# 
   543  1F29                     	;# 
   544  1F2A                     	;# 
   545  1F2B                     	;# 
   546  1F2C                     	;# 
   547  1F2D                     	;# 
   548  1F2E                     	;# 
   549  1F2F                     	;# 
   550  1F30                     	;# 
   551  1F31                     	;# 
   552  1F32                     	;# 
   553  1F38                     	;# 
   554  1F39                     	;# 
   555  1F3A                     	;# 
   556  1F3B                     	;# 
   557  1F3C                     	;# 
   558  1F3D                     	;# 
   559  1F3E                     	;# 
   560  1F3F                     	;# 
   561  1F40                     	;# 
   562  1F41                     	;# 
   563  1F43                     	;# 
   564  1F44                     	;# 
   565  1F45                     	;# 
   566  1F46                     	;# 
   567  1F47                     	;# 
   568  1F48                     	;# 
   569  1F49                     	;# 
   570  1F4A                     	;# 
   571  1F4B                     	;# 
   572  1F4C                     	;# 
   573  1F4E                     	;# 
   574  1F4F                     	;# 
   575  1F50                     	;# 
   576  1F51                     	;# 
   577  1F52                     	;# 
   578  1F53                     	;# 
   579  1F54                     	;# 
   580  1F55                     	;# 
   581  1F56                     	;# 
   582  1F57                     	;# 
   583  1F59                     	;# 
   584  1F5A                     	;# 
   585  1F5B                     	;# 
   586  1F5C                     	;# 
   587  1F5D                     	;# 
   588  1F61                     	;# 
   589  1F62                     	;# 
   590  1F64                     	;# 
   591  1F65                     	;# 
   592  1F66                     	;# 
   593  1F67                     	;# 
   594  1F68                     	;# 
   595  1F69                     	;# 
   596  1F6A                     	;# 
   597  1F6B                     	;# 
   598  1F6C                     	;# 
   599  1F6D                     	;# 
   600  1FE4                     	;# 
   601  1FE5                     	;# 
   602  1FE6                     	;# 
   603  1FE7                     	;# 
   604  1FE8                     	;# 
   605  1FE9                     	;# 
   606  1FEA                     	;# 
   607  1FEB                     	;# 
   608  1FED                     	;# 
   609  1FEE                     	;# 
   610  1FEF                     	;# 
   611                           
   612                           	psect	idataBANK1
   613  0004                     __pidataBANK1:	
   614                           
   615                           ;initializer for _condicion
   616  0004  3400               	retlw	0
   617  0005  34C0               	retlw	192
   618  0006  343F               	retlw	63
   619                           
   620                           	psect	stringtext1
   621  1000                     __pstringtext1:	
   622  1000                     _dpowers:	
   623  1000  3401               	retlw	1
   624  1001  3400               	retlw	0
   625  1002  340A               	retlw	10
   626  1003  3400               	retlw	0
   627  1004  3464               	retlw	100
   628  1005  3400               	retlw	0
   629  1006  34E8               	retlw	232
   630  1007  3403               	retlw	3
   631  1008  3410               	retlw	16
   632  1009  3427               	retlw	39
   633  100A                     __end_of_dpowers:	
   634  0012                     _TRISB	set	18
   635  000D                     _PORTB	set	13
   636  0014                     _TRISD	set	20
   637  0013                     _TRISC	set	19
   638  000F                     _PORTD	set	15
   639  000E                     _PORTC	set	14
   640  000F                     _PORTDbits	set	15
   641  000E                     _PORTCbits	set	14
   642  0014                     _TRISDbits	set	20
   643  0013                     _TRISCbits	set	19
   644  009A                     _ADREFbits	set	154
   645  008C                     _ADRESL	set	140
   646  008D                     _ADRESH	set	141
   647  0093                     _ADCON0bits	set	147
   648  009E                     _ADPCH	set	158
   649  0893                     _OSCFRQbits	set	2195
   650  1F43                     _ANSELB	set	8003
   651  1F59                     _ANSELD	set	8025
   652  1F4E                     _ANSELC	set	8014
   653  100A                     STR_1:	
   654  100A  344C               	retlw	76	;'L'
   655  100B  3465               	retlw	101	;'e'
   656  100C  3463               	retlw	99	;'c'
   657  100D  3474               	retlw	116	;'t'
   658  100E  3475               	retlw	117	;'u'
   659  100F  3472               	retlw	114	;'r'
   660  1010  3461               	retlw	97	;'a'
   661  1011  343D               	retlw	61	;'='
   662  1012  3420               	retlw	32	;' '
   663  1013  3425               	retlw	37	;'%'
   664  1014  3430               	retlw	48	;'0'
   665  1015  3432               	retlw	50	;'2'
   666  1016  3464               	retlw	100	;'d'
   667  1017  3400               	retlw	0
   668                           
   669                           	psect	stringtext2
   670  0000                     __pstringtext2:	
   671                           
   672                           ; #config settings
   673  0000                     
   674                           	psect	cinit
   675  07E1                     start_initialization:	
   676  07E1                     __initialization:	
   677                           
   678                           ; Initialize objects allocated to BANK1
   679  07E1  0141               	movlb	1	; select bank1
   680  07E2  3180  2004  3187   	fcall	__pidataBANK1	;fetch initializer
   681  07E5  00E8               	movwf	__pdataBANK1& (0+127)
   682  07E6  3180  2005  3187   	fcall	__pidataBANK1+1	;fetch initializer
   683  07E9  00E9               	movwf	(__pdataBANK1+1)& (0+127)
   684  07EA  3180  2006  3187   	fcall	__pidataBANK1+2	;fetch initializer
   685  07ED  00EA               	movwf	(__pdataBANK1+2)& (0+127)
   686                           
   687                           ; Clear objects allocated to BANK0
   688  07EE  3066               	movlw	low __pbssBANK0
   689  07EF  0084               	movwf	4
   690  07F0  3000               	movlw	high __pbssBANK0
   691  07F1  0085               	movwf	5
   692  07F2  300A               	movlw	10
   693  07F3  3180  2007  3187   	fcall	clear_ram0
   694                           
   695                           ; Clear objects allocated to BANK1
   696  07F6  30D6               	movlw	low __pbssBANK1
   697  07F7  0084               	movwf	4
   698  07F8  3000               	movlw	high __pbssBANK1
   699  07F9  0085               	movwf	5
   700  07FA  3012               	movlw	18
   701  07FB  3180  2007         	fcall	clear_ram0
   702  07FD                     end_of_initialization:	
   703                           ;End of C runtime variable initialization code
   704                           
   705  07FD                     __end_of__initialization:	
   706  07FD  0140               	movlb	0
   707  07FE  318B  2B7C         	ljmp	_main	;jump to C main() function
   708                           
   709                           	psect	bssBANK0
   710  0066                     __pbssBANK0:	
   711  0066                     _v7:	
   712  0066                     	ds	3
   713  0069                     _lectura:	
   714  0069                     	ds	2
   715  006B                     _adc:	
   716  006B                     	ds	2
   717  006D                     _v0:	
   718  006D                     	ds	3
   719                           
   720                           	psect	bssBANK1
   721  00D6                     __pbssBANK1:	
   722  00D6                     _v6:	
   723  00D6                     	ds	3
   724  00D9                     _v5:	
   725  00D9                     	ds	3
   726  00DC                     _v4:	
   727  00DC                     	ds	3
   728  00DF                     _v3:	
   729  00DF                     	ds	3
   730  00E2                     _v2:	
   731  00E2                     	ds	3
   732  00E5                     _v1:	
   733  00E5                     	ds	3
   734                           
   735                           	psect	dataBANK1
   736  00E8                     __pdataBANK1:	
   737  00E8                     _condicion:	
   738  00E8                     	ds	3
   739                           
   740                           	psect	clrtext
   741  0007                     clear_ram0:	
   742                           ;	Called with FSR0 containing the base address, and
   743                           ;	WREG with the size to clear
   744                           
   745  0007  0064               	clrwdt	;clear the watchdog before getting into this loop
   746  0008                     clrloop0:	
   747  0008  0180               	clrf	0	;clear RAM location pointed to by FSR
   748  0009  3101               	addfsr 0,1
   749  000A  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
   750  000B  2808               	goto	clrloop0	;have we reached the end yet?
   751  000C  3400               	retlw	0	;all done for this memory range, return
   752                           
   753                           	psect	cstackBANK1
   754  00A0                     __pcstackBANK1:	
   755  00A0                     _leersensores$800:	
   756                           
   757                           ; 3 bytes @ 0x0
   758  00A0                     	ds	3
   759  00A3                     _leersensores$801:	
   760                           
   761                           ; 3 bytes @ 0x3
   762  00A3                     	ds	3
   763  00A6                     _leersensores$802:	
   764                           
   765                           ; 3 bytes @ 0x6
   766  00A6                     	ds	3
   767  00A9                     _leersensores$803:	
   768                           
   769                           ; 3 bytes @ 0x9
   770  00A9                     	ds	3
   771  00AC                     _leersensores$804:	
   772                           
   773                           ; 3 bytes @ 0xC
   774  00AC                     	ds	3
   775  00AF                     _leersensores$805:	
   776                           
   777                           ; 3 bytes @ 0xF
   778  00AF                     	ds	3
   779  00B2                     _leersensores$806:	
   780                           
   781                           ; 3 bytes @ 0x12
   782  00B2                     	ds	3
   783  00B5                     _leersensores$807:	
   784                           
   785                           ; 3 bytes @ 0x15
   786  00B5                     	ds	3
   787  00B8                     _leersensores$808:	
   788                           
   789                           ; 3 bytes @ 0x18
   790  00B8                     	ds	3
   791  00BB                     _leersensores$809:	
   792                           
   793                           ; 3 bytes @ 0x1B
   794  00BB                     	ds	3
   795  00BE                     _leersensores$810:	
   796                           
   797                           ; 3 bytes @ 0x1E
   798  00BE                     	ds	3
   799  00C1                     _leersensores$811:	
   800                           
   801                           ; 3 bytes @ 0x21
   802  00C1                     	ds	3
   803  00C4                     main@buffer1:	
   804                           
   805                           ; 16 bytes @ 0x24
   806  00C4                     	ds	16
   807  00D4                     main@cont:	
   808                           
   809                           ; 2 bytes @ 0x34
   810  00D4                     	ds	2
   811                           
   812                           	psect	cstackCOMMON
   813  0070                     __pcstackCOMMON:	
   814  0070                     ?_isdigit:	
   815  0070                     ?_Lcd_Cmd:	
   816                           ; 1 bit 
   817                           
   818  0070                     ??_Lcd_Cmd:	
   819                           ; 1 bytes @ 0x0
   820                           
   821  0070                     ?_Lcd_Chr_CP:	
   822                           ; 1 bytes @ 0x0
   823                           
   824  0070                     ??_Lcd_Chr_CP:	
   825                           ; 1 bytes @ 0x0
   826                           
   827  0070                     ??_isdigit:	
   828                           ; 1 bytes @ 0x0
   829                           
   830  0070                     ?_Lcd_Init:	
   831                           ; 1 bytes @ 0x0
   832                           
   833  0070                     ?___wmul:	
   834                           ; 1 bytes @ 0x0
   835                           
   836  0070                     ?___lwdiv:	
   837                           ; 2 bytes @ 0x0
   838                           
   839  0070                     ?___ftpack:	
   840                           ; 2 bytes @ 0x0
   841                           
   842  0070                     _isdigit$593:	
   843                           ; 3 bytes @ 0x0
   844                           
   845  0070                     ___wmul@multiplier:	
   846                           ; 1 bytes @ 0x0
   847                           
   848  0070                     ___lwdiv@divisor:	
   849                           ; 2 bytes @ 0x0
   850                           
   851  0070                     ___ftpack@arg:	
   852                           ; 2 bytes @ 0x0
   853                           
   854                           
   855                           ; 3 bytes @ 0x0
   856  0070                     	ds	1
   857  0071                     isdigit@c:	
   858                           
   859                           ; 1 bytes @ 0x1
   860  0071                     	ds	1
   861  0072                     Lcd_Chr_CP@data:	
   862  0072                     Lcd_Cmd@data:	
   863                           ; 1 bytes @ 0x2
   864                           
   865  0072                     ___wmul@multiplicand:	
   866                           ; 1 bytes @ 0x2
   867                           
   868  0072                     ___lwdiv@dividend:	
   869                           ; 2 bytes @ 0x2
   870                           
   871                           
   872                           ; 2 bytes @ 0x2
   873  0072                     	ds	1
   874  0073                     ??_Lcd_Init:	
   875  0073                     ?_Lcd_Out2:	
   876                           ; 1 bytes @ 0x3
   877                           
   878  0073                     Lcd_Out2@x:	
   879                           ; 1 bytes @ 0x3
   880                           
   881  0073                     ___ftpack@exp:	
   882                           ; 1 bytes @ 0x3
   883                           
   884                           
   885                           ; 1 bytes @ 0x3
   886  0073                     	ds	1
   887  0074                     ??___wmul:	
   888  0074                     ??___lwdiv:	
   889                           ; 1 bytes @ 0x4
   890                           
   891  0074                     Lcd_Init@data:	
   892                           ; 1 bytes @ 0x4
   893                           
   894  0074                     Lcd_Out2@buffer:	
   895                           ; 1 bytes @ 0x4
   896                           
   897  0074                     ___ftpack@sign:	
   898                           ; 1 bytes @ 0x4
   899                           
   900  0074                     ___wmul@product:	
   901                           ; 1 bytes @ 0x4
   902                           
   903                           
   904                           ; 2 bytes @ 0x4
   905  0074                     	ds	1
   906  0075                     ??___ftpack:	
   907  0075                     ??_Lcd_Out2:	
   908                           ; 1 bytes @ 0x5
   909                           
   910  0075                     ___lwdiv@quotient:	
   911                           ; 1 bytes @ 0x5
   912                           
   913                           
   914                           ; 2 bytes @ 0x5
   915  0075                     	ds	1
   916  0076                     Lcd_Out2@y:	
   917                           
   918                           ; 1 bytes @ 0x6
   919  0076                     	ds	1
   920  0077                     Lcd_Out2@data:	
   921  0077                     ___lwdiv@counter:	
   922                           ; 1 bytes @ 0x7
   923                           
   924                           
   925                           ; 1 bytes @ 0x7
   926  0077                     	ds	1
   927  0078                     ?___lwmod:	
   928  0078                     ?___awtoft:	
   929                           ; 2 bytes @ 0x8
   930                           
   931  0078                     ___awtoft@c:	
   932                           ; 3 bytes @ 0x8
   933                           
   934  0078                     ___lwmod@divisor:	
   935                           ; 2 bytes @ 0x8
   936                           
   937                           
   938                           ; 2 bytes @ 0x8
   939  0078                     	ds	2
   940  007A                     ___lwmod@dividend:	
   941                           
   942                           ; 2 bytes @ 0xA
   943  007A                     	ds	1
   944  007B                     ??___awtoft:	
   945                           
   946                           ; 1 bytes @ 0xB
   947  007B                     	ds	1
   948  007C                     ??___lwmod:	
   949                           
   950                           ; 1 bytes @ 0xC
   951  007C                     	ds	1
   952  007D                     ___awtoft@sign:	
   953  007D                     ___lwmod@counter:	
   954                           ; 1 bytes @ 0xD
   955                           
   956                           
   957                           ; 1 bytes @ 0xD
   958  007D                     	ds	1
   959                           
   960                           	psect	cstackBANK0
   961  0020                     __pcstackBANK0:	
   962  0020                     ?_sprintf:	
   963  0020                     ?___ftmul:	
   964                           ; 2 bytes @ 0x0
   965                           
   966  0020                     sprintf@f:	
   967                           ; 3 bytes @ 0x0
   968                           
   969  0020                     ___ftmul@f1:	
   970                           ; 2 bytes @ 0x0
   971                           
   972                           
   973                           ; 3 bytes @ 0x0
   974  0020                     	ds	3
   975  0023                     ___ftmul@f2:	
   976                           
   977                           ; 3 bytes @ 0x3
   978  0023                     	ds	1
   979  0024                     ??_sprintf:	
   980                           
   981                           ; 1 bytes @ 0x4
   982  0024                     	ds	2
   983  0026                     ??___ftmul:	
   984                           
   985                           ; 1 bytes @ 0x6
   986  0026                     	ds	2
   987  0028                     sprintf@ap:	
   988                           
   989                           ; 1 bytes @ 0x8
   990  0028                     	ds	1
   991  0029                     sprintf@prec:	
   992                           
   993                           ; 1 bytes @ 0x9
   994  0029                     	ds	1
   995  002A                     ___ftmul@exp:	
   996  002A                     sprintf@val:	
   997                           ; 1 bytes @ 0xA
   998                           
   999                           
  1000                           ; 2 bytes @ 0xA
  1001  002A                     	ds	1
  1002  002B                     ___ftmul@f3_as_product:	
  1003                           
  1004                           ; 3 bytes @ 0xB
  1005  002B                     	ds	1
  1006  002C                     sprintf@flag:	
  1007                           
  1008                           ; 1 bytes @ 0xC
  1009  002C                     	ds	1
  1010  002D                     sprintf@width:	
  1011                           
  1012                           ; 2 bytes @ 0xD
  1013  002D                     	ds	1
  1014  002E                     ___ftmul@cntr:	
  1015                           
  1016                           ; 1 bytes @ 0xE
  1017  002E                     	ds	1
  1018  002F                     sprintf@sp:	
  1019  002F                     ___ftmul@sign:	
  1020                           ; 1 bytes @ 0xF
  1021                           
  1022                           
  1023                           ; 1 bytes @ 0xF
  1024  002F                     	ds	1
  1025  0030                     ?___ftadd:	
  1026  0030                     sprintf@c:	
  1027                           ; 3 bytes @ 0x10
  1028                           
  1029  0030                     ___ftadd@f1:	
  1030                           ; 1 bytes @ 0x10
  1031                           
  1032                           
  1033                           ; 3 bytes @ 0x10
  1034  0030                     	ds	3
  1035  0033                     ___ftadd@f2:	
  1036                           
  1037                           ; 3 bytes @ 0x13
  1038  0033                     	ds	3
  1039  0036                     ??___ftadd:	
  1040                           
  1041                           ; 1 bytes @ 0x16
  1042  0036                     	ds	4
  1043  003A                     ___ftadd@sign:	
  1044                           
  1045                           ; 1 bytes @ 0x1A
  1046  003A                     	ds	1
  1047  003B                     ___ftadd@exp2:	
  1048                           
  1049                           ; 1 bytes @ 0x1B
  1050  003B                     	ds	1
  1051  003C                     ___ftadd@exp1:	
  1052                           
  1053                           ; 1 bytes @ 0x1C
  1054  003C                     	ds	1
  1055  003D                     ?___ftdiv:	
  1056  003D                     ___ftdiv@f2:	
  1057                           ; 3 bytes @ 0x1D
  1058                           
  1059                           
  1060                           ; 3 bytes @ 0x1D
  1061  003D                     	ds	3
  1062  0040                     ___ftdiv@f1:	
  1063                           
  1064                           ; 3 bytes @ 0x20
  1065  0040                     	ds	3
  1066  0043                     ??___ftdiv:	
  1067                           
  1068                           ; 1 bytes @ 0x23
  1069  0043                     	ds	4
  1070  0047                     ___ftdiv@cntr:	
  1071                           
  1072                           ; 1 bytes @ 0x27
  1073  0047                     	ds	1
  1074  0048                     ___ftdiv@f3:	
  1075                           
  1076                           ; 3 bytes @ 0x28
  1077  0048                     	ds	3
  1078  004B                     ___ftdiv@exp:	
  1079                           
  1080                           ; 1 bytes @ 0x2B
  1081  004B                     	ds	1
  1082  004C                     ___ftdiv@sign:	
  1083                           
  1084                           ; 1 bytes @ 0x2C
  1085  004C                     	ds	1
  1086  004D                     ?___fttol:	
  1087  004D                     ___fttol@f1:	
  1088                           ; 4 bytes @ 0x2D
  1089                           
  1090                           
  1091                           ; 3 bytes @ 0x2D
  1092  004D                     	ds	4
  1093  0051                     ??___fttol:	
  1094                           
  1095                           ; 1 bytes @ 0x31
  1096  0051                     	ds	4
  1097  0055                     ___fttol@sign1:	
  1098                           
  1099                           ; 1 bytes @ 0x35
  1100  0055                     	ds	1
  1101  0056                     ___fttol@lval:	
  1102                           
  1103                           ; 4 bytes @ 0x36
  1104  0056                     	ds	4
  1105  005A                     ___fttol@exp1:	
  1106                           
  1107                           ; 1 bytes @ 0x3A
  1108  005A                     	ds	1
  1109  005B                     ?_leersensores:	
  1110                           
  1111                           ; 2 bytes @ 0x3B
  1112  005B                     	ds	2
  1113  005D                     ??_leersensores:	
  1114                           
  1115                           ; 1 bytes @ 0x3D
  1116  005D                     	ds	3
  1117  0060                     ?_main:	
  1118  0060                     main@argc:	
  1119                           ; 2 bytes @ 0x40
  1120                           
  1121                           
  1122                           ; 2 bytes @ 0x40
  1123  0060                     	ds	2
  1124  0062                     main@argv:	
  1125                           
  1126                           ; 2 bytes @ 0x42
  1127  0062                     	ds	2
  1128  0064                     ??_main:	
  1129                           
  1130                           ; 1 bytes @ 0x44
  1131  0064                     	ds	2
  1132                           
  1133                           	psect	maintext
  1134  0B7C                     __pmaintext:	
  1135 ;;
  1136 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  1137 ;;
  1138 ;; *************** function _main *****************
  1139 ;; Defined at:
  1140 ;;		line 139 in file "main.c"
  1141 ;; Parameters:    Size  Location     Type
  1142 ;;  argc            2   64[BANK0 ] int 
  1143 ;;  argv            2   66[BANK0 ] PTR PTR unsigned char 
  1144 ;; Auto vars:     Size  Location     Type
  1145 ;;  buffer1        16   36[BANK1 ] unsigned char [16]
  1146 ;;  buffer2        16    0        unsigned char [16]
  1147 ;;  cont            2   52[BANK1 ] int 
  1148 ;; Return value:  Size  Location     Type
  1149 ;;                  2   64[BANK0 ] int 
  1150 ;; Registers used:
  1151 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  1152 ;; Tracked objects:
  1153 ;;		On entry : B3F/0
  1154 ;;		On exit  : 0/0
  1155 ;;		Unchanged: 0/0
  1156 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
  1157 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  1158 ;;      Locals:         0       0      18       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  1159 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  1160 ;;      Totals:         0       6      18       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  1161 ;;Total ram usage:       24 bytes
  1162 ;; Hardware stack levels required when called:    3
  1163 ;; This function calls:
  1164 ;;		_Lcd_Cmd
  1165 ;;		_Lcd_Init
  1166 ;;		_Lcd_Out2
  1167 ;;		_leersensores
  1168 ;;		_sprintf
  1169 ;; This function is called by:
  1170 ;;		Startup code after reset
  1171 ;; This function uses a non-reentrant model
  1172 ;;
  1173                           
  1174                           
  1175                           ;psect for function _main
  1176  0B7C                     _main:	
  1177                           
  1178                           ;main.c: 140: OSCFRQbits.HFFRQ=0b110;
  1179                           
  1180                           ;incstack = 0
  1181                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  1182  0B7C  0151               	movlb	17	; select bank17
  1183  0B7D  0813               	movf	19,w	;volatile
  1184  0B7E  39F8               	andlw	-8
  1185  0B7F  3806               	iorlw	6
  1186  0B80  0093               	movwf	19	;volatile
  1187                           
  1188                           ;main.c: 142: PORTC=0;
  1189  0B81  0140               	movlb	0	; select bank0
  1190  0B82  018E               	clrf	14	;volatile
  1191                           
  1192                           ;main.c: 143: PORTD=0;
  1193  0B83  018F               	clrf	15	;volatile
  1194                           
  1195                           ;main.c: 144: ANSELC=0b00000000;
  1196  0B84  017E               	movlb	62	; select bank62
  1197  0B85  01CE               	clrf	78	;volatile
  1198                           
  1199                           ;main.c: 145: ANSELD=0b00000000;
  1200  0B86  01D9               	clrf	89	;volatile
  1201                           
  1202                           ;main.c: 146: TRISC=0;
  1203  0B87  0140               	movlb	0	; select bank0
  1204  0B88  0193               	clrf	19	;volatile
  1205                           
  1206                           ;main.c: 147: TRISD=0;
  1207  0B89  0194               	clrf	20	;volatile
  1208                           
  1209                           ;main.c: 149: PORTB=0;
  1210  0B8A  018D               	clrf	13	;volatile
  1211                           
  1212                           ;main.c: 150: ANSELB=1;
  1213  0B8B  3001               	movlw	1
  1214  0B8C  017E               	movlb	62	; select bank62
  1215  0B8D  00C3               	movwf	67	;volatile
  1216                           
  1217                           ;main.c: 151: TRISB=1;
  1218  0B8E  3001               	movlw	1
  1219  0B8F  0140               	movlb	0	; select bank0
  1220  0B90  0092               	movwf	18	;volatile
  1221                           
  1222                           ;main.c: 153: ADCON0bits.ADON=1;
  1223  0B91  0141               	movlb	1	; select bank1
  1224  0B92  1793               	bsf	19,7	;volatile
  1225                           
  1226                           ;main.c: 154: ADCON0bits.ADCONT=0;
  1227  0B93  1313               	bcf	19,6	;volatile
  1228                           
  1229                           ;main.c: 155: ADCON0bits.ADCS=1;
  1230  0B94  1613               	bsf	19,4	;volatile
  1231                           
  1232                           ;main.c: 156: ADCON0bits.ADFRM=1;
  1233  0B95  0813               	movf	19,w	;volatile
  1234  0B96  39F3               	andlw	-13
  1235  0B97  3804               	iorlw	4
  1236  0B98  0093               	movwf	19	;volatile
  1237                           
  1238                           ;main.c: 157: ADREFbits.ADNREF=0;
  1239  0B99  121A               	bcf	26,4	;volatile
  1240                           
  1241                           ;main.c: 158: ADREFbits.ADPREF=0b00;
  1242  0B9A  30FC               	movlw	-4
  1243  0B9B  059A               	andwf	26,f	;volatile
  1244                           
  1245                           ;main.c: 161: unsigned char buffer1[16],buffer2[16];
  1246                           ;main.c: 162: int cont=0;
  1247  0B9C  01D4               	clrf	main@cont^(0+128)
  1248  0B9D  01D5               	clrf	(main@cont+1)^(0+128)
  1249                           
  1250                           ;main.c: 164: Lcd_Init();
  1251  0B9E  318D  25AD  318B   	fcall	_Lcd_Init
  1252                           
  1253                           ;main.c: 165: Lcd_Cmd(1);
  1254  0BA1  3001               	movlw	1
  1255  0BA2  318C  2483  318B   	fcall	_Lcd_Cmd
  1256                           
  1257                           ;main.c: 166: Lcd_Cmd(12);
  1258  0BA5  300C               	movlw	12
  1259  0BA6  318C  2483  318B   	fcall	_Lcd_Cmd
  1260                           
  1261                           ;main.c: 167: _delay((unsigned long)((100)*(32000000/4000.0)));
  1262  0BA9  3005               	movlw	5
  1263  0BAA  0140               	movlb	0	; select bank0
  1264  0BAB  00E5               	movwf	??_main+1
  1265  0BAC  300F               	movlw	15
  1266  0BAD  00E4               	movwf	??_main
  1267  0BAE  30F1               	movlw	241
  1268  0BAF                     u2577:	
  1269  0BAF  0B89               	decfsz	9,f
  1270  0BB0  2BAF               	goto	u2577
  1271  0BB1  0BE4               	decfsz	??_main,f
  1272  0BB2  2BAF               	goto	u2577
  1273  0BB3  0BE5               	decfsz	??_main+1,f
  1274  0BB4  2BAF               	goto	u2577
  1275                           
  1276                           ;main.c: 169: Lcd_Cmd(15);
  1277  0BB5  300F               	movlw	15
  1278  0BB6  318C  2483  318B   	fcall	_Lcd_Cmd
  1279                           
  1280                           ;main.c: 170: _delay((unsigned long)((1000)*(32000000/4000.0)));
  1281  0BB9  3029               	movlw	41
  1282  0BBA  0140               	movlb	0	; select bank0
  1283  0BBB  00E5               	movwf	??_main+1
  1284  0BBC  3096               	movlw	150
  1285  0BBD  00E4               	movwf	??_main
  1286  0BBE  307F               	movlw	127
  1287  0BBF                     u2587:	
  1288  0BBF  0B89               	decfsz	9,f
  1289  0BC0  2BBF               	goto	u2587
  1290  0BC1  0BE4               	decfsz	??_main,f
  1291  0BC2  2BBF               	goto	u2587
  1292  0BC3  0BE5               	decfsz	??_main+1,f
  1293  0BC4  2BBF               	goto	u2587
  1294                           
  1295                           ;main.c: 171: Lcd_Cmd(12);
  1296  0BC5  300C               	movlw	12
  1297  0BC6  318C  2483  318B   	fcall	_Lcd_Cmd
  1298  0BC9                     l2150:	
  1299                           ;main.c: 173: while(1){
  1300                           
  1301                           
  1302                           ;main.c: 174: cont=leersensores();
  1303  0BC9  3182  223A  318B   	fcall	_leersensores
  1304  0BCC  0140               	movlb	0	; select bank0
  1305  0BCD  085C               	movf	?_leersensores+1,w
  1306  0BCE  0141               	movlb	1	; select bank1
  1307  0BCF  00D5               	movwf	(main@cont+1)^(0+128)
  1308  0BD0  0140               	movlb	0	; select bank0
  1309  0BD1  085B               	movf	?_leersensores,w
  1310  0BD2  0141               	movlb	1	; select bank1
  1311  0BD3  00D4               	movwf	main@cont^(0+128)
  1312                           
  1313                           ;main.c: 175: sprintf(buffer1,"Lectura= %02d",cont);
  1314  0BD4  300A               	movlw	low (STR_1| (0+32768))
  1315  0BD5  0140               	movlb	0	; select bank0
  1316  0BD6  00A0               	movwf	sprintf@f
  1317  0BD7  3090               	movlw	high (STR_1| (0+32768))
  1318  0BD8  00A1               	movwf	sprintf@f+1
  1319  0BD9  0141               	movlb	1	; select bank1
  1320  0BDA  0855               	movf	(main@cont+1)^(0+128),w
  1321  0BDB  0140               	movlb	0	; select bank0
  1322  0BDC  00A3               	movwf	?_sprintf+3
  1323  0BDD  0141               	movlb	1	; select bank1
  1324  0BDE  0854               	movf	main@cont^(0+128),w
  1325  0BDF  0140               	movlb	0	; select bank0
  1326  0BE0  00A2               	movwf	?_sprintf+2
  1327  0BE1  30C4               	movlw	(low (main@buffer1| 0))& (0+255)
  1328  0BE2  3180  20B6  318B   	fcall	_sprintf
  1329                           
  1330                           ;main.c: 176: Lcd_Out2(1,0,buffer1);
  1331  0BE5  01F3               	clrf	Lcd_Out2@x
  1332  0BE6  30C4               	movlw	(low (main@buffer1| 0))& (0+255)
  1333  0BE7  0140               	movlb	0	; select bank0
  1334  0BE8  00E4               	movwf	??_main
  1335  0BE9  0864               	movf	??_main,w
  1336  0BEA  00F4               	movwf	Lcd_Out2@buffer
  1337  0BEB  3001               	movlw	1
  1338  0BEC  318A  22E3  318B   	fcall	_Lcd_Out2
  1339                           
  1340                           ;main.c: 177: _delay((unsigned long)((100)*(32000000/4000.0)));
  1341  0BEF  3005               	movlw	5
  1342  0BF0  0140               	movlb	0	; select bank0
  1343  0BF1  00E5               	movwf	??_main+1
  1344  0BF2  300F               	movlw	15
  1345  0BF3  00E4               	movwf	??_main
  1346  0BF4  30F1               	movlw	241
  1347  0BF5                     u2597:	
  1348  0BF5  0B89               	decfsz	9,f
  1349  0BF6  2BF5               	goto	u2597
  1350  0BF7  0BE4               	decfsz	??_main,f
  1351  0BF8  2BF5               	goto	u2597
  1352  0BF9  0BE5               	decfsz	??_main+1,f
  1353  0BFA  2BF5               	goto	u2597
  1354  0BFB  2BC9               	goto	l2150
  1355  0BFC                     __end_of_main:	
  1356                           ;main.c: 178: }
  1357                           ;main.c: 179: return (0);
  1358                           ;	Return value of _main is never used
  1359                           
  1360                           
  1361                           	psect	text1
  1362  00B6                     __ptext1:	
  1363 ;; *************** function _sprintf *****************
  1364 ;; Defined at:
  1365 ;;		line 492 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\doprnt.c"
  1366 ;; Parameters:    Size  Location     Type
  1367 ;;  sp              1    wreg     PTR unsigned char 
  1368 ;;		 -> main@buffer1(16), 
  1369 ;;  f               2    0[BANK0 ] PTR const unsigned char 
  1370 ;;		 -> STR_1(14), 
  1371 ;; Auto vars:     Size  Location     Type
  1372 ;;  sp              1   15[BANK0 ] PTR unsigned char 
  1373 ;;		 -> main@buffer1(16), 
  1374 ;;  tmpval          4    0        struct .
  1375 ;;  width           2   13[BANK0 ] int 
  1376 ;;  val             2   10[BANK0 ] unsigned int 
  1377 ;;  cp              2    0        PTR const unsigned char 
  1378 ;;  len             2    0        unsigned int 
  1379 ;;  c               1   16[BANK0 ] char 
  1380 ;;  flag            1   12[BANK0 ] unsigned char 
  1381 ;;  prec            1    9[BANK0 ] char 
  1382 ;;  ap              1    8[BANK0 ] PTR void [1]
  1383 ;;		 -> ?_sprintf(2), 
  1384 ;; Return value:  Size  Location     Type
  1385 ;;                  2    0[BANK0 ] int 
  1386 ;; Registers used:
  1387 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  1388 ;; Tracked objects:
  1389 ;;		On entry : 0/0
  1390 ;;		On exit  : 0/0
  1391 ;;		Unchanged: 0/0
  1392 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
  1393 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  1394 ;;      Locals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  1395 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  1396 ;;      Totals:         0      17       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  1397 ;;Total ram usage:       17 bytes
  1398 ;; Hardware stack levels used:    1
  1399 ;; Hardware stack levels required when called:    1
  1400 ;; This function calls:
  1401 ;;		___lwdiv
  1402 ;;		___lwmod
  1403 ;;		___wmul
  1404 ;;		_isdigit
  1405 ;; This function is called by:
  1406 ;;		_main
  1407 ;; This function uses a non-reentrant model
  1408 ;;
  1409                           
  1410                           
  1411                           ;psect for function _sprintf
  1412  00B6                     _sprintf:	
  1413                           
  1414                           ;incstack = 0
  1415                           ; Regs used in _sprintf: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  1416                           ;sprintf@sp stored from wreg
  1417  00B6  0140               	movlb	0	; select bank0
  1418  00B7  00AF               	movwf	sprintf@sp
  1419                           
  1420                           ;doprnt.c: 494: va_list ap;
  1421                           ;doprnt.c: 499: signed char c;
  1422                           ;doprnt.c: 501: int width;
  1423                           ;doprnt.c: 506: signed char prec;
  1424                           ;doprnt.c: 508: unsigned char flag;
  1425                           ;doprnt.c: 523: union {
  1426                           ;doprnt.c: 524: unsigned long vd;
  1427                           ;doprnt.c: 525: double integ;
  1428                           ;doprnt.c: 526: } tmpval;
  1429                           ;doprnt.c: 528: unsigned int val;
  1430                           ;doprnt.c: 529: unsigned len;
  1431                           ;doprnt.c: 530: const char * cp;
  1432                           ;doprnt.c: 533: *ap = __va_start();
  1433  00B8  3022               	movlw	(low ((?_sprintf| 0+2)))& (0+255)
  1434  00B9  00A4               	movwf	??_sprintf
  1435  00BA  0824               	movf	??_sprintf,w
  1436  00BB  00A8               	movwf	sprintf@ap
  1437  00BC                     l2074:	
  1438                           ;doprnt.c: 536: while(c = *f++) {
  1439                           
  1440  00BC  0140               	movlb	0	; select bank0
  1441  00BD  0821               	movf	sprintf@f+1,w
  1442  00BE  00A5               	movwf	??_sprintf+1
  1443  00BF  0820               	movf	sprintf@f,w
  1444  00C0  00A4               	movwf	??_sprintf
  1445  00C1  0AA0               	incf	sprintf@f,f
  1446  00C2  1903               	skipnz
  1447  00C3  0AA1               	incf	sprintf@f+1,f
  1448  00C4  0824               	movf	??_sprintf,w
  1449  00C5  0084               	movwf	4
  1450  00C6  0825               	movf	??_sprintf+1,w
  1451  00C7  0085               	movwf	5
  1452  00C8  0800               	movf	0,w	;code access
  1453  00C9  00A6               	movwf	??_sprintf+2
  1454  00CA  0826               	movf	??_sprintf+2,w
  1455  00CB  00B0               	movwf	sprintf@c
  1456  00CC  0830               	movf	sprintf@c,w
  1457  00CD  1903               	btfsc	3,2
  1458  00CE  2A34               	goto	l2076
  1459                           
  1460                           ;doprnt.c: 538: if(c != '%')
  1461  00CF  3025               	movlw	37
  1462  00D0  0630               	xorwf	sprintf@c,w
  1463  00D1  1903               	btfsc	3,2
  1464  00D2  28DF               	goto	l1978
  1465                           
  1466                           ;doprnt.c: 540: {
  1467                           ;doprnt.c: 541: ((*sp++ = (c)));
  1468  00D3  0830               	movf	sprintf@c,w
  1469  00D4  00A4               	movwf	??_sprintf
  1470  00D5  082F               	movf	sprintf@sp,w
  1471  00D6  0086               	movwf	6
  1472  00D7  0187               	clrf	7
  1473  00D8  0824               	movf	??_sprintf,w
  1474  00D9  0081               	movwf	1
  1475  00DA  3001               	movlw	1
  1476  00DB  00A4               	movwf	??_sprintf
  1477  00DC  0824               	movf	??_sprintf,w
  1478  00DD  07AF               	addwf	sprintf@sp,f
  1479                           
  1480                           ;doprnt.c: 542: continue;
  1481  00DE  28BC               	goto	l2074
  1482  00DF                     l1978:	
  1483                           
  1484                           ;doprnt.c: 543: }
  1485                           ;doprnt.c: 546: width = 0;
  1486  00DF  01AD               	clrf	sprintf@width
  1487  00E0  01AE               	clrf	sprintf@width+1
  1488                           
  1489                           ;doprnt.c: 548: flag = 0;
  1490  00E1  01AC               	clrf	sprintf@flag
  1491                           
  1492                           ;doprnt.c: 551: switch(*f) {
  1493                           
  1494                           ;doprnt.c: 550: for(;;) {
  1495  00E2  28E8               	goto	l1984
  1496  00E3                     l156:	
  1497                           ;doprnt.c: 579: case '0':
  1498                           
  1499                           
  1500                           ;doprnt.c: 580: flag |= 0x04;
  1501  00E3  152C               	bsf	sprintf@flag,2
  1502                           
  1503                           ;doprnt.c: 581: f++;
  1504  00E4  3001               	movlw	1
  1505  00E5  07A0               	addwf	sprintf@f,f
  1506  00E6  3000               	movlw	0
  1507  00E7  3DA1               	addwfc	sprintf@f+1,f
  1508  00E8                     l1984:	
  1509                           ;doprnt.c: 584: }
  1510                           
  1511                           ;doprnt.c: 582: continue;
  1512                           
  1513  00E8  0820               	movf	sprintf@f,w
  1514  00E9  0084               	movwf	4
  1515  00EA  0821               	movf	sprintf@f+1,w
  1516  00EB  0085               	movwf	5
  1517  00EC  0800               	movf	0,w	;code access
  1518                           
  1519                           ; Switch size 1, requested type "space"
  1520                           ; Number of cases is 1, Range of values is 48 to 48
  1521                           ; switch strategies available:
  1522                           ; Name         Instructions Cycles
  1523                           ; simple_byte            4     3 (average)
  1524                           ; direct_byte           11     9 (fixed)
  1525                           ; jumptable            263     9 (fixed)
  1526                           ;	Chosen strategy is simple_byte
  1527  00ED  3A30               	xorlw	48	; case 48
  1528  00EE  1903               	skipnz
  1529  00EF  28E3               	goto	l156
  1530  00F0  28F1               	goto	l1986
  1531  00F1                     l1986:	
  1532                           ;doprnt.c: 586: }
  1533                           
  1534                           ;doprnt.c: 585: break;
  1535                           
  1536                           
  1537                           ;doprnt.c: 597: if(isdigit((unsigned)*f)) {
  1538  00F1  0820               	movf	sprintf@f,w
  1539  00F2  0084               	movwf	4
  1540  00F3  0821               	movf	sprintf@f+1,w
  1541  00F4  0085               	movwf	5
  1542  00F5  0800               	movf	0,w	;code access
  1543  00F6  318A  223A  3180   	fcall	_isdigit
  1544  00F9  1C03               	btfss	3,0
  1545  00FA  292C               	goto	l2000
  1546                           
  1547                           ;doprnt.c: 598: width = 0;
  1548  00FB  0140               	movlb	0	; select bank0
  1549  00FC  01AD               	clrf	sprintf@width
  1550  00FD  01AE               	clrf	sprintf@width+1
  1551  00FE                     l1990:	
  1552                           ;doprnt.c: 599: do {
  1553                           
  1554                           
  1555                           ;doprnt.c: 600: width *= 10;
  1556  00FE  300A               	movlw	10
  1557  00FF  00F0               	movwf	___wmul@multiplier
  1558  0100  3000               	movlw	0
  1559  0101  00F1               	movwf	___wmul@multiplier+1
  1560  0102  0140               	movlb	0	; select bank0
  1561  0103  082E               	movf	sprintf@width+1,w
  1562  0104  00F3               	movwf	___wmul@multiplicand+1
  1563  0105  082D               	movf	sprintf@width,w
  1564  0106  00F2               	movwf	___wmul@multiplicand
  1565  0107  318A  2248  3180   	fcall	___wmul
  1566  010A  0871               	movf	?___wmul+1,w
  1567  010B  0140               	movlb	0	; select bank0
  1568  010C  00AE               	movwf	sprintf@width+1
  1569  010D  0870               	movf	?___wmul,w
  1570  010E  00AD               	movwf	sprintf@width
  1571                           
  1572                           ;doprnt.c: 601: width += *f++ - '0';
  1573  010F  0820               	movf	sprintf@f,w
  1574  0110  0084               	movwf	4
  1575  0111  0821               	movf	sprintf@f+1,w
  1576  0112  0085               	movwf	5
  1577  0113  0800               	movf	0,w	;code access
  1578  0114  3ED0               	addlw	208
  1579  0115  00A4               	movwf	??_sprintf
  1580  0116  30FF               	movlw	255
  1581  0117  1803               	skipnc
  1582  0118  3000               	movlw	0
  1583  0119  00A5               	movwf	??_sprintf+1
  1584  011A  0824               	movf	??_sprintf,w
  1585  011B  07AD               	addwf	sprintf@width,f
  1586  011C  0825               	movf	??_sprintf+1,w
  1587  011D  3DAE               	addwfc	sprintf@width+1,f
  1588  011E  3001               	movlw	1
  1589  011F  07A0               	addwf	sprintf@f,f
  1590  0120  3000               	movlw	0
  1591  0121  3DA1               	addwfc	sprintf@f+1,f
  1592                           
  1593                           ;doprnt.c: 602: } while(isdigit((unsigned)*f));
  1594  0122  0820               	movf	sprintf@f,w
  1595  0123  0084               	movwf	4
  1596  0124  0821               	movf	sprintf@f+1,w
  1597  0125  0085               	movwf	5
  1598  0126  0800               	movf	0,w	;code access
  1599  0127  318A  223A  3180   	fcall	_isdigit
  1600  012A  1803               	btfsc	3,0
  1601  012B  28FE               	goto	l1990
  1602  012C                     l2000:	
  1603                           ;doprnt.c: 822: }
  1604                           
  1605                           ;doprnt.c: 813: continue;
  1606                           
  1607                           ;doprnt.c: 802: default:
  1608                           
  1609                           ;doprnt.c: 698: case 'i':
  1610                           ;doprnt.c: 699: break;
  1611                           
  1612                           ;doprnt.c: 697: case 'd':
  1613                           
  1614                           ;doprnt.c: 638: goto alldone;
  1615                           
  1616                           ;doprnt.c: 637: case 0:
  1617                           
  1618                           ;doprnt.c: 608: }
  1619                           ;doprnt.c: 635: switch(c = *f++) {
  1620                           
  1621  012C  0140               	movlb	0	; select bank0
  1622  012D  0821               	movf	sprintf@f+1,w
  1623  012E  00A5               	movwf	??_sprintf+1
  1624  012F  0820               	movf	sprintf@f,w
  1625  0130  00A4               	movwf	??_sprintf
  1626  0131  0AA0               	incf	sprintf@f,f
  1627  0132  1903               	skipnz
  1628  0133  0AA1               	incf	sprintf@f+1,f
  1629  0134  0824               	movf	??_sprintf,w
  1630  0135  0084               	movwf	4
  1631  0136  0825               	movf	??_sprintf+1,w
  1632  0137  0085               	movwf	5
  1633  0138  0800               	movf	0,w	;code access
  1634  0139  00B0               	movwf	sprintf@c
  1635                           
  1636                           ; Switch size 1, requested type "space"
  1637                           ; Number of cases is 3, Range of values is 0 to 105
  1638                           ; switch strategies available:
  1639                           ; Name         Instructions Cycles
  1640                           ; simple_byte           10     6 (average)
  1641                           ; direct_byte          218     6 (fixed)
  1642                           ; jumptable            260     6 (fixed)
  1643                           ;	Chosen strategy is simple_byte
  1644  013A  3A00               	xorlw	0	; case 0
  1645  013B  1903               	skipnz
  1646  013C  2A34               	goto	l2076
  1647  013D  3A64               	xorlw	100	; case 100
  1648  013E  1903               	skipnz
  1649  013F  2944               	goto	l2002
  1650  0140  3A0D               	xorlw	13	; case 105
  1651  0141  1903               	skipnz
  1652  0142  2944               	goto	l2002
  1653  0143  28BC               	goto	l2074
  1654  0144                     l2002:	
  1655                           
  1656                           ;doprnt.c: 1253: {
  1657                           ;doprnt.c: 1259: val = (int)(*(int *)__va_arg((*(int **)ap), (int)0));
  1658  0144  0140               	movlb	0	; select bank0
  1659  0145  0828               	movf	sprintf@ap,w
  1660  0146  0086               	movwf	6
  1661  0147  0187               	clrf	7
  1662  0148  3F40               	moviw [0]fsr1
  1663  0149  00AA               	movwf	sprintf@val
  1664  014A  3F41               	moviw [1]fsr1
  1665  014B  00AB               	movwf	sprintf@val+1
  1666  014C  3002               	movlw	2
  1667  014D  00A4               	movwf	??_sprintf
  1668  014E  0824               	movf	??_sprintf,w
  1669  014F  07A8               	addwf	sprintf@ap,f
  1670                           
  1671                           ;doprnt.c: 1261: if((int)val < 0) {
  1672  0150  1FAB               	btfss	sprintf@val+1,7
  1673  0151  295B               	goto	l2012
  1674                           
  1675                           ;doprnt.c: 1262: flag |= 0x03;
  1676  0152  3003               	movlw	3
  1677  0153  00A4               	movwf	??_sprintf
  1678  0154  0824               	movf	??_sprintf,w
  1679  0155  04AC               	iorwf	sprintf@flag,f
  1680                           
  1681                           ;doprnt.c: 1263: val = -val;
  1682  0156  09AA               	comf	sprintf@val,f
  1683  0157  09AB               	comf	sprintf@val+1,f
  1684  0158  0AAA               	incf	sprintf@val,f
  1685  0159  1903               	skipnz
  1686  015A  0AAB               	incf	sprintf@val+1,f
  1687  015B                     l2012:	
  1688                           
  1689                           ;doprnt.c: 1264: }
  1690                           ;doprnt.c: 1266: }
  1691                           ;doprnt.c: 1305: for(c = 1 ; c != sizeof dpowers/sizeof dpowers[0] ; c++)
  1692  015B  01B0               	clrf	sprintf@c
  1693  015C  0AB0               	incf	sprintf@c,f
  1694  015D  3005               	movlw	5
  1695  015E  0630               	xorwf	sprintf@c,w
  1696  015F  1903               	btfsc	3,2
  1697  0160  2980               	goto	l2024
  1698  0161                     l2018:	
  1699                           
  1700                           ;doprnt.c: 1306: if(val < dpowers[c])
  1701  0161  0830               	movf	sprintf@c,w
  1702  0162  00A4               	movwf	??_sprintf
  1703  0163  01A5               	clrf	??_sprintf+1
  1704  0164  35A4               	lslf	??_sprintf,f
  1705  0165  0DA5               	rlf	??_sprintf+1,f
  1706  0166  3000               	movlw	low (_dpowers| (0+32768))
  1707  0167  0724               	addwf	??_sprintf,w
  1708  0168  0084               	movwf	4
  1709  0169  3090               	movlw	high (_dpowers| (0+32768))
  1710  016A  3D25               	addwfc	??_sprintf+1,w
  1711  016B  0085               	movwf	5
  1712  016C  3F00               	moviw [0]fsr0
  1713  016D  00A6               	movwf	??_sprintf+2
  1714  016E  3F01               	moviw [1]fsr0
  1715  016F  00A7               	movwf	??_sprintf+3
  1716  0170  0827               	movf	??_sprintf+3,w
  1717  0171  022B               	subwf	sprintf@val+1,w
  1718  0172  1D03               	skipz
  1719  0173  2976               	goto	u2425
  1720  0174  0826               	movf	??_sprintf+2,w
  1721  0175  022A               	subwf	sprintf@val,w
  1722  0176                     u2425:	
  1723  0176  1C03               	btfss	3,0
  1724  0177  2980               	goto	l2024
  1725                           
  1726                           ;doprnt.c: 1307: break;
  1727  0178  3001               	movlw	1
  1728  0179  00A4               	movwf	??_sprintf
  1729  017A  0824               	movf	??_sprintf,w
  1730  017B  07B0               	addwf	sprintf@c,f
  1731  017C  3005               	movlw	5
  1732  017D  0630               	xorwf	sprintf@c,w
  1733  017E  1D03               	btfss	3,2
  1734  017F  2961               	goto	l2018
  1735  0180                     l2024:	
  1736                           
  1737                           ;doprnt.c: 1345: if(width && flag & 0x03)
  1738  0180  082D               	movf	sprintf@width,w
  1739  0181  042E               	iorwf	sprintf@width+1,w
  1740  0182  1903               	btfsc	3,2
  1741  0183  298C               	goto	l174
  1742  0184  082C               	movf	sprintf@flag,w
  1743  0185  3903               	andlw	3
  1744  0186  1903               	btfsc	3,2
  1745  0187  298C               	goto	l174
  1746                           
  1747                           ;doprnt.c: 1346: width--;
  1748  0188  30FF               	movlw	255
  1749  0189  07AD               	addwf	sprintf@width,f
  1750  018A  30FF               	movlw	255
  1751  018B  3DAE               	addwfc	sprintf@width+1,f
  1752  018C                     l174:	
  1753                           
  1754                           ;doprnt.c: 1381: if(width > c)
  1755  018C  0830               	movf	sprintf@c,w
  1756  018D  00A4               	movwf	??_sprintf
  1757  018E  01A5               	clrf	??_sprintf+1
  1758  018F  1BA4               	btfsc	??_sprintf,7
  1759  0190  03A5               	decf	??_sprintf+1,f
  1760  0191  0825               	movf	??_sprintf+1,w
  1761  0192  3A80               	xorlw	128
  1762  0193  00A6               	movwf	??_sprintf+2
  1763  0194  082E               	movf	sprintf@width+1,w
  1764  0195  3A80               	xorlw	128
  1765  0196  0226               	subwf	??_sprintf+2,w
  1766  0197  1D03               	skipz
  1767  0198  299B               	goto	u2465
  1768  0199  082D               	movf	sprintf@width,w
  1769  019A  0224               	subwf	??_sprintf,w
  1770  019B                     u2465:	
  1771  019B  1803               	skipnc
  1772  019C  29A8               	goto	l2032
  1773                           
  1774                           ;doprnt.c: 1382: width -= c;
  1775  019D  0140               	movlb	0	; select bank0
  1776  019E  0830               	movf	sprintf@c,w
  1777  019F  00A4               	movwf	??_sprintf
  1778  01A0  01A5               	clrf	??_sprintf+1
  1779  01A1  1BA4               	btfsc	??_sprintf,7
  1780  01A2  03A5               	decf	??_sprintf+1,f
  1781  01A3  0824               	movf	??_sprintf,w
  1782  01A4  02AD               	subwf	sprintf@width,f
  1783  01A5  0825               	movf	??_sprintf+1,w
  1784  01A6  3BAE               	subwfb	sprintf@width+1,f
  1785  01A7  29AB               	goto	l2034
  1786  01A8                     l2032:	
  1787                           
  1788                           ;doprnt.c: 1383: else
  1789                           ;doprnt.c: 1384: width = 0;
  1790  01A8  0140               	movlb	0	; select bank0
  1791  01A9  01AD               	clrf	sprintf@width
  1792  01AA  01AE               	clrf	sprintf@width+1
  1793  01AB                     l2034:	
  1794                           
  1795                           ;doprnt.c: 1387: if(flag & 0x04) {
  1796  01AB  1D2C               	btfss	sprintf@flag,2
  1797  01AC  29D0               	goto	l2050
  1798                           
  1799                           ;doprnt.c: 1392: if(flag & 0x03)
  1800  01AD  082C               	movf	sprintf@flag,w
  1801  01AE  3903               	andlw	3
  1802  01AF  1903               	btfsc	3,2
  1803  01B0  29BC               	goto	l2042
  1804                           
  1805                           ;doprnt.c: 1393: ((*sp++ = ('-')));
  1806  01B1  302D               	movlw	45
  1807  01B2  00A4               	movwf	??_sprintf
  1808  01B3  082F               	movf	sprintf@sp,w
  1809  01B4  0086               	movwf	6
  1810  01B5  0187               	clrf	7
  1811  01B6  0824               	movf	??_sprintf,w
  1812  01B7  0081               	movwf	1
  1813  01B8  3001               	movlw	1
  1814  01B9  00A4               	movwf	??_sprintf
  1815  01BA  0824               	movf	??_sprintf,w
  1816  01BB  07AF               	addwf	sprintf@sp,f
  1817  01BC                     l2042:	
  1818                           
  1819                           ;doprnt.c: 1415: if(width)
  1820  01BC  082D               	movf	sprintf@width,w
  1821  01BD  042E               	iorwf	sprintf@width+1,w
  1822  01BE  1903               	btfsc	3,2
  1823  01BF  29F6               	goto	l2064
  1824                           
  1825                           ;doprnt.c: 1417: ((*sp++ = ('0')));
  1826                           
  1827                           ;doprnt.c: 1416: do
  1828  01C0  3030               	movlw	48
  1829  01C1  00A4               	movwf	??_sprintf
  1830  01C2  082F               	movf	sprintf@sp,w
  1831  01C3  0086               	movwf	6
  1832  01C4  0187               	clrf	7
  1833  01C5  0824               	movf	??_sprintf,w
  1834  01C6  0081               	movwf	1
  1835  01C7  3001               	movlw	1
  1836  01C8  00A4               	movwf	??_sprintf
  1837  01C9  0824               	movf	??_sprintf,w
  1838  01CA  07AF               	addwf	sprintf@sp,f
  1839                           
  1840                           ;doprnt.c: 1418: while(--width);
  1841  01CB  30FF               	movlw	255
  1842  01CC  07AD               	addwf	sprintf@width,f
  1843  01CD  30FF               	movlw	255
  1844  01CE  3DAE               	addwfc	sprintf@width+1,f
  1845  01CF  29BC               	goto	l2042
  1846  01D0                     l2050:	
  1847                           ;doprnt.c: 1420: } else
  1848                           
  1849                           
  1850                           ;doprnt.c: 1422: {
  1851                           ;doprnt.c: 1424: if(width
  1852                           ;doprnt.c: 1428: )
  1853  01D0  082D               	movf	sprintf@width,w
  1854  01D1  042E               	iorwf	sprintf@width+1,w
  1855  01D2  1903               	btfsc	3,2
  1856  01D3  29E7               	goto	l2058
  1857  01D4                     l2052:	
  1858                           ;doprnt.c: 1429: do
  1859                           
  1860                           
  1861                           ;doprnt.c: 1430: ((*sp++ = (' ')));
  1862  01D4  3020               	movlw	32
  1863  01D5  00A4               	movwf	??_sprintf
  1864  01D6  082F               	movf	sprintf@sp,w
  1865  01D7  0086               	movwf	6
  1866  01D8  0187               	clrf	7
  1867  01D9  0824               	movf	??_sprintf,w
  1868  01DA  0081               	movwf	1
  1869  01DB  3001               	movlw	1
  1870  01DC  00A4               	movwf	??_sprintf
  1871  01DD  0824               	movf	??_sprintf,w
  1872  01DE  07AF               	addwf	sprintf@sp,f
  1873                           
  1874                           ;doprnt.c: 1431: while(--width);
  1875  01DF  30FF               	movlw	255
  1876  01E0  07AD               	addwf	sprintf@width,f
  1877  01E1  30FF               	movlw	255
  1878  01E2  3DAE               	addwfc	sprintf@width+1,f
  1879  01E3  082D               	movf	sprintf@width,w
  1880  01E4  042E               	iorwf	sprintf@width+1,w
  1881  01E5  1D03               	btfss	3,2
  1882  01E6  29D4               	goto	l2052
  1883  01E7                     l2058:	
  1884                           
  1885                           ;doprnt.c: 1438: if(flag & 0x03)
  1886  01E7  082C               	movf	sprintf@flag,w
  1887  01E8  3903               	andlw	3
  1888  01E9  1903               	btfsc	3,2
  1889  01EA  29F6               	goto	l2064
  1890                           
  1891                           ;doprnt.c: 1439: ((*sp++ = ('-')));
  1892  01EB  302D               	movlw	45
  1893  01EC  00A4               	movwf	??_sprintf
  1894  01ED  082F               	movf	sprintf@sp,w
  1895  01EE  0086               	movwf	6
  1896  01EF  0187               	clrf	7
  1897  01F0  0824               	movf	??_sprintf,w
  1898  01F1  0081               	movwf	1
  1899  01F2  3001               	movlw	1
  1900  01F3  00A4               	movwf	??_sprintf
  1901  01F4  0824               	movf	??_sprintf,w
  1902  01F5  07AF               	addwf	sprintf@sp,f
  1903  01F6                     l2064:	
  1904                           
  1905                           ;doprnt.c: 1469: }
  1906                           ;doprnt.c: 1472: prec = c;
  1907  01F6  0830               	movf	sprintf@c,w
  1908  01F7  00A4               	movwf	??_sprintf
  1909  01F8  0824               	movf	??_sprintf,w
  1910  01F9  00A9               	movwf	sprintf@prec
  1911  01FA                     l2072:	
  1912                           ;doprnt.c: 1474: while(prec--) {
  1913                           
  1914  01FA  30FF               	movlw	255
  1915  01FB  00A4               	movwf	??_sprintf
  1916  01FC  0824               	movf	??_sprintf,w
  1917  01FD  07A9               	addwf	sprintf@prec,f
  1918  01FE  0A29               	incf	sprintf@prec,w
  1919  01FF  1903               	btfsc	3,2
  1920  0200  28BC               	goto	l2074
  1921                           
  1922                           ;doprnt.c: 1478: {
  1923                           ;doprnt.c: 1489: c = (val / dpowers[prec]) % 10 + '0';
  1924  0201  300A               	movlw	10
  1925  0202  00F8               	movwf	___lwmod@divisor
  1926  0203  3000               	movlw	0
  1927  0204  00F9               	movwf	___lwmod@divisor+1
  1928  0205  0829               	movf	sprintf@prec,w
  1929  0206  00A4               	movwf	??_sprintf
  1930  0207  01A5               	clrf	??_sprintf+1
  1931  0208  35A4               	lslf	??_sprintf,f
  1932  0209  0DA5               	rlf	??_sprintf+1,f
  1933  020A  3000               	movlw	low (_dpowers| (0+32768))
  1934  020B  0724               	addwf	??_sprintf,w
  1935  020C  0084               	movwf	4
  1936  020D  3090               	movlw	high (_dpowers| (0+32768))
  1937  020E  3D25               	addwfc	??_sprintf+1,w
  1938  020F  0085               	movwf	5
  1939  0210  3F00               	moviw [0]fsr0
  1940  0211  00F0               	movwf	___lwdiv@divisor
  1941  0212  3F01               	moviw [1]fsr0
  1942  0213  00F1               	movwf	___lwdiv@divisor+1
  1943  0214  082B               	movf	sprintf@val+1,w
  1944  0215  00F3               	movwf	___lwdiv@dividend+1
  1945  0216  082A               	movf	sprintf@val,w
  1946  0217  00F2               	movwf	___lwdiv@dividend
  1947  0218  318A  22AF  3180   	fcall	___lwdiv
  1948  021B  0871               	movf	?___lwdiv+1,w
  1949  021C  00FB               	movwf	___lwmod@dividend+1
  1950  021D  0870               	movf	?___lwdiv,w
  1951  021E  00FA               	movwf	___lwmod@dividend
  1952  021F  318A  2283  3180   	fcall	___lwmod
  1953  0222  0878               	movf	?___lwmod,w
  1954  0223  3E30               	addlw	48
  1955  0224  0140               	movlb	0	; select bank0
  1956  0225  00A6               	movwf	??_sprintf+2
  1957  0226  0826               	movf	??_sprintf+2,w
  1958  0227  00B0               	movwf	sprintf@c
  1959                           
  1960                           ;doprnt.c: 1523: }
  1961                           ;doprnt.c: 1524: ((*sp++ = (c)));
  1962  0228  0830               	movf	sprintf@c,w
  1963  0229  00A4               	movwf	??_sprintf
  1964  022A  082F               	movf	sprintf@sp,w
  1965  022B  0086               	movwf	6
  1966  022C  0187               	clrf	7
  1967  022D  0824               	movf	??_sprintf,w
  1968  022E  0081               	movwf	1
  1969  022F  3001               	movlw	1
  1970  0230  00A4               	movwf	??_sprintf
  1971  0231  0824               	movf	??_sprintf,w
  1972  0232  07AF               	addwf	sprintf@sp,f
  1973  0233  29FA               	goto	l2072
  1974  0234                     l2076:	
  1975                           ;doprnt.c: 1525: }
  1976                           ;doprnt.c: 1533: }
  1977                           ;doprnt.c: 1535: alldone:
  1978                           
  1979                           
  1980                           ;doprnt.c: 1538: *sp = 0;
  1981  0234  0140               	movlb	0	; select bank0
  1982  0235  082F               	movf	sprintf@sp,w
  1983  0236  0086               	movwf	6
  1984  0237  0187               	clrf	7
  1985  0238  0181               	clrf	1
  1986  0239  0008               	return
  1987  023A                     __end_of_sprintf:	
  1988                           ;doprnt.c: 1540: return 0;
  1989                           ;	Return value of _sprintf is never used
  1990                           
  1991                           
  1992                           	psect	text2
  1993  0A3A                     __ptext2:	
  1994 ;; *************** function _isdigit *****************
  1995 ;; Defined at:
  1996 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\isdigit.c"
  1997 ;; Parameters:    Size  Location     Type
  1998 ;;  c               1    wreg     unsigned char 
  1999 ;; Auto vars:     Size  Location     Type
  2000 ;;  c               1    1[COMMON] unsigned char 
  2001 ;; Return value:  Size  Location     Type
  2002 ;;		None               void
  2003 ;; Registers used:
  2004 ;;		wreg, status,2, status,0
  2005 ;; Tracked objects:
  2006 ;;		On entry : 0/0
  2007 ;;		On exit  : 0/0
  2008 ;;		Unchanged: 0/0
  2009 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
  2010 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  2011 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  2012 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  2013 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  2014 ;;Total ram usage:        2 bytes
  2015 ;; Hardware stack levels used:    1
  2016 ;; This function calls:
  2017 ;;		Nothing
  2018 ;; This function is called by:
  2019 ;;		_sprintf
  2020 ;; This function uses a non-reentrant model
  2021 ;;
  2022                           
  2023                           
  2024                           ;psect for function _isdigit
  2025  0A3A                     _isdigit:	
  2026                           
  2027                           ;incstack = 0
  2028                           ; Regs used in _isdigit: [wreg+status,2+status,0]
  2029                           ;isdigit@c stored from wreg
  2030  0A3A  00F1               	movwf	isdigit@c
  2031  0A3B  01F0               	clrf	_isdigit$593
  2032  0A3C  303A               	movlw	58
  2033  0A3D  0271               	subwf	isdigit@c,w
  2034  0A3E  1803               	skipnc
  2035  0A3F  2A46               	goto	l1494
  2036  0A40  3030               	movlw	48
  2037  0A41  0271               	subwf	isdigit@c,w
  2038  0A42  1C03               	skipc
  2039  0A43  2A46               	goto	l1494
  2040  0A44  01F0               	clrf	_isdigit$593
  2041  0A45  0AF0               	incf	_isdigit$593,f
  2042  0A46                     l1494:	
  2043  0A46  0C70               	rrf	_isdigit$593,w
  2044  0A47  0008               	return
  2045  0A48                     __end_of_isdigit:	
  2046                           
  2047                           	psect	text3
  2048  0A48                     __ptext3:	
  2049 ;; *************** function ___wmul *****************
  2050 ;; Defined at:
  2051 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\Umul16.c"
  2052 ;; Parameters:    Size  Location     Type
  2053 ;;  multiplier      2    0[COMMON] unsigned int 
  2054 ;;  multiplicand    2    2[COMMON] unsigned int 
  2055 ;; Auto vars:     Size  Location     Type
  2056 ;;  product         2    4[COMMON] unsigned int 
  2057 ;; Return value:  Size  Location     Type
  2058 ;;                  2    0[COMMON] unsigned int 
  2059 ;; Registers used:
  2060 ;;		wreg, status,2, status,0
  2061 ;; Tracked objects:
  2062 ;;		On entry : 0/0
  2063 ;;		On exit  : 0/0
  2064 ;;		Unchanged: 0/0
  2065 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
  2066 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  2067 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  2068 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  2069 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  2070 ;;Total ram usage:        6 bytes
  2071 ;; Hardware stack levels used:    1
  2072 ;; This function calls:
  2073 ;;		Nothing
  2074 ;; This function is called by:
  2075 ;;		_sprintf
  2076 ;; This function uses a non-reentrant model
  2077 ;;
  2078                           
  2079                           
  2080                           ;psect for function ___wmul
  2081  0A48                     ___wmul:	
  2082                           
  2083                           ;incstack = 0
  2084                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  2085  0A48  01F4               	clrf	___wmul@product
  2086  0A49  01F5               	clrf	___wmul@product+1
  2087  0A4A                     l1500:	
  2088  0A4A  1C70               	btfss	___wmul@multiplier,0
  2089  0A4B  2A50               	goto	l273
  2090  0A4C  0872               	movf	___wmul@multiplicand,w
  2091  0A4D  07F4               	addwf	___wmul@product,f
  2092  0A4E  0873               	movf	___wmul@multiplicand+1,w
  2093  0A4F  3DF5               	addwfc	___wmul@product+1,f
  2094  0A50                     l273:	
  2095  0A50  3001               	movlw	1
  2096  0A51                     u1565:	
  2097  0A51  35F2               	lslf	___wmul@multiplicand,f
  2098  0A52  0DF3               	rlf	___wmul@multiplicand+1,f
  2099  0A53  0B89               	decfsz	9,f
  2100  0A54  2A51               	goto	u1565
  2101  0A55  3001               	movlw	1
  2102  0A56                     u1575:	
  2103  0A56  36F1               	lsrf	___wmul@multiplier+1,f
  2104  0A57  0CF0               	rrf	___wmul@multiplier,f
  2105  0A58  0B89               	decfsz	9,f
  2106  0A59  2A56               	goto	u1575
  2107  0A5A  0870               	movf	___wmul@multiplier,w
  2108  0A5B  0471               	iorwf	___wmul@multiplier+1,w
  2109  0A5C  1D03               	btfss	3,2
  2110  0A5D  2A4A               	goto	l1500
  2111  0A5E  0875               	movf	___wmul@product+1,w
  2112  0A5F  00F1               	movwf	?___wmul+1
  2113  0A60  0874               	movf	___wmul@product,w
  2114  0A61  00F0               	movwf	?___wmul
  2115  0A62  0008               	return
  2116  0A63                     __end_of___wmul:	
  2117                           
  2118                           	psect	text4
  2119  0A83                     __ptext4:	
  2120 ;; *************** function ___lwmod *****************
  2121 ;; Defined at:
  2122 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\lwmod.c"
  2123 ;; Parameters:    Size  Location     Type
  2124 ;;  divisor         2    8[COMMON] unsigned int 
  2125 ;;  dividend        2   10[COMMON] unsigned int 
  2126 ;; Auto vars:     Size  Location     Type
  2127 ;;  counter         1   13[COMMON] unsigned char 
  2128 ;; Return value:  Size  Location     Type
  2129 ;;                  2    8[COMMON] unsigned int 
  2130 ;; Registers used:
  2131 ;;		wreg, status,2, status,0
  2132 ;; Tracked objects:
  2133 ;;		On entry : 0/0
  2134 ;;		On exit  : 0/0
  2135 ;;		Unchanged: 0/0
  2136 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
  2137 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  2138 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  2139 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  2140 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  2141 ;;Total ram usage:        6 bytes
  2142 ;; Hardware stack levels used:    1
  2143 ;; This function calls:
  2144 ;;		Nothing
  2145 ;; This function is called by:
  2146 ;;		_sprintf
  2147 ;; This function uses a non-reentrant model
  2148 ;;
  2149                           
  2150                           
  2151                           ;psect for function ___lwmod
  2152  0A83                     ___lwmod:	
  2153                           
  2154                           ;incstack = 0
  2155                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  2156  0A83  0878               	movf	___lwmod@divisor,w
  2157  0A84  0479               	iorwf	___lwmod@divisor+1,w
  2158  0A85  1903               	btfsc	3,2
  2159  0A86  2AAA               	goto	l1772
  2160  0A87  01FD               	clrf	___lwmod@counter
  2161  0A88  0AFD               	incf	___lwmod@counter,f
  2162  0A89                     l1762:	
  2163  0A89  1BF9               	btfsc	___lwmod@divisor+1,7
  2164  0A8A  2A95               	goto	l1764
  2165  0A8B  3001               	movlw	1
  2166  0A8C                     u2215:	
  2167  0A8C  35F8               	lslf	___lwmod@divisor,f
  2168  0A8D  0DF9               	rlf	___lwmod@divisor+1,f
  2169  0A8E  0B89               	decfsz	9,f
  2170  0A8F  2A8C               	goto	u2215
  2171  0A90  3001               	movlw	1
  2172  0A91  00FC               	movwf	??___lwmod
  2173  0A92  087C               	movf	??___lwmod,w
  2174  0A93  07FD               	addwf	___lwmod@counter,f
  2175  0A94  2A89               	goto	l1762
  2176  0A95                     l1764:	
  2177  0A95  0879               	movf	___lwmod@divisor+1,w
  2178  0A96  027B               	subwf	___lwmod@dividend+1,w
  2179  0A97  1D03               	skipz
  2180  0A98  2A9B               	goto	u2235
  2181  0A99  0878               	movf	___lwmod@divisor,w
  2182  0A9A  027A               	subwf	___lwmod@dividend,w
  2183  0A9B                     u2235:	
  2184  0A9B  1C03               	skipc
  2185  0A9C  2AA1               	goto	l1768
  2186  0A9D  0878               	movf	___lwmod@divisor,w
  2187  0A9E  02FA               	subwf	___lwmod@dividend,f
  2188  0A9F  0879               	movf	___lwmod@divisor+1,w
  2189  0AA0  3BFB               	subwfb	___lwmod@dividend+1,f
  2190  0AA1                     l1768:	
  2191  0AA1  3001               	movlw	1
  2192  0AA2                     u2245:	
  2193  0AA2  36F9               	lsrf	___lwmod@divisor+1,f
  2194  0AA3  0CF8               	rrf	___lwmod@divisor,f
  2195  0AA4  0B89               	decfsz	9,f
  2196  0AA5  2AA2               	goto	u2245
  2197  0AA6  3001               	movlw	1
  2198  0AA7  02FD               	subwf	___lwmod@counter,f
  2199  0AA8  1D03               	btfss	3,2
  2200  0AA9  2A95               	goto	l1764
  2201  0AAA                     l1772:	
  2202  0AAA  087B               	movf	___lwmod@dividend+1,w
  2203  0AAB  00F9               	movwf	?___lwmod+1
  2204  0AAC  087A               	movf	___lwmod@dividend,w
  2205  0AAD  00F8               	movwf	?___lwmod
  2206  0AAE  0008               	return
  2207  0AAF                     __end_of___lwmod:	
  2208                           
  2209                           	psect	text5
  2210  0AAF                     __ptext5:	
  2211 ;; *************** function ___lwdiv *****************
  2212 ;; Defined at:
  2213 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\lwdiv.c"
  2214 ;; Parameters:    Size  Location     Type
  2215 ;;  divisor         2    0[COMMON] unsigned int 
  2216 ;;  dividend        2    2[COMMON] unsigned int 
  2217 ;; Auto vars:     Size  Location     Type
  2218 ;;  quotient        2    5[COMMON] unsigned int 
  2219 ;;  counter         1    7[COMMON] unsigned char 
  2220 ;; Return value:  Size  Location     Type
  2221 ;;                  2    0[COMMON] unsigned int 
  2222 ;; Registers used:
  2223 ;;		wreg, status,2, status,0
  2224 ;; Tracked objects:
  2225 ;;		On entry : 0/0
  2226 ;;		On exit  : 0/0
  2227 ;;		Unchanged: 0/0
  2228 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
  2229 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  2230 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  2231 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  2232 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  2233 ;;Total ram usage:        8 bytes
  2234 ;; Hardware stack levels used:    1
  2235 ;; This function calls:
  2236 ;;		Nothing
  2237 ;; This function is called by:
  2238 ;;		_sprintf
  2239 ;; This function uses a non-reentrant model
  2240 ;;
  2241                           
  2242                           
  2243                           ;psect for function ___lwdiv
  2244  0AAF                     ___lwdiv:	
  2245                           
  2246                           ;incstack = 0
  2247                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  2248  0AAF  01F5               	clrf	___lwdiv@quotient
  2249  0AB0  01F6               	clrf	___lwdiv@quotient+1
  2250  0AB1  0870               	movf	___lwdiv@divisor,w
  2251  0AB2  0471               	iorwf	___lwdiv@divisor+1,w
  2252  0AB3  1903               	btfsc	3,2
  2253  0AB4  2ADE               	goto	l1750
  2254  0AB5  01F7               	clrf	___lwdiv@counter
  2255  0AB6  0AF7               	incf	___lwdiv@counter,f
  2256  0AB7                     l1738:	
  2257  0AB7  1BF1               	btfsc	___lwdiv@divisor+1,7
  2258  0AB8  2AC3               	goto	l1740
  2259  0AB9  3001               	movlw	1
  2260  0ABA                     u2145:	
  2261  0ABA  35F0               	lslf	___lwdiv@divisor,f
  2262  0ABB  0DF1               	rlf	___lwdiv@divisor+1,f
  2263  0ABC  0B89               	decfsz	9,f
  2264  0ABD  2ABA               	goto	u2145
  2265  0ABE  3001               	movlw	1
  2266  0ABF  00F4               	movwf	??___lwdiv
  2267  0AC0  0874               	movf	??___lwdiv,w
  2268  0AC1  07F7               	addwf	___lwdiv@counter,f
  2269  0AC2  2AB7               	goto	l1738
  2270  0AC3                     l1740:	
  2271  0AC3  3001               	movlw	1
  2272  0AC4                     u2165:	
  2273  0AC4  35F5               	lslf	___lwdiv@quotient,f
  2274  0AC5  0DF6               	rlf	___lwdiv@quotient+1,f
  2275  0AC6  0B89               	decfsz	9,f
  2276  0AC7  2AC4               	goto	u2165
  2277  0AC8  0871               	movf	___lwdiv@divisor+1,w
  2278  0AC9  0273               	subwf	___lwdiv@dividend+1,w
  2279  0ACA  1D03               	skipz
  2280  0ACB  2ACE               	goto	u2175
  2281  0ACC  0870               	movf	___lwdiv@divisor,w
  2282  0ACD  0272               	subwf	___lwdiv@dividend,w
  2283  0ACE                     u2175:	
  2284  0ACE  1C03               	skipc
  2285  0ACF  2AD5               	goto	l1746
  2286  0AD0  0870               	movf	___lwdiv@divisor,w
  2287  0AD1  02F2               	subwf	___lwdiv@dividend,f
  2288  0AD2  0871               	movf	___lwdiv@divisor+1,w
  2289  0AD3  3BF3               	subwfb	___lwdiv@dividend+1,f
  2290  0AD4  1475               	bsf	___lwdiv@quotient,0
  2291  0AD5                     l1746:	
  2292  0AD5  3001               	movlw	1
  2293  0AD6                     u2185:	
  2294  0AD6  36F1               	lsrf	___lwdiv@divisor+1,f
  2295  0AD7  0CF0               	rrf	___lwdiv@divisor,f
  2296  0AD8  0B89               	decfsz	9,f
  2297  0AD9  2AD6               	goto	u2185
  2298  0ADA  3001               	movlw	1
  2299  0ADB  02F7               	subwf	___lwdiv@counter,f
  2300  0ADC  1D03               	btfss	3,2
  2301  0ADD  2AC3               	goto	l1740
  2302  0ADE                     l1750:	
  2303  0ADE  0876               	movf	___lwdiv@quotient+1,w
  2304  0ADF  00F1               	movwf	?___lwdiv+1
  2305  0AE0  0875               	movf	___lwdiv@quotient,w
  2306  0AE1  00F0               	movwf	?___lwdiv
  2307  0AE2  0008               	return
  2308  0AE3                     __end_of___lwdiv:	
  2309                           
  2310                           	psect	text6
  2311  023A                     __ptext6:	
  2312 ;; *************** function _leersensores *****************
  2313 ;; Defined at:
  2314 ;;		line 27 in file "main.c"
  2315 ;; Parameters:    Size  Location     Type
  2316 ;;		None
  2317 ;; Auto vars:     Size  Location     Type
  2318 ;;		None
  2319 ;; Return value:  Size  Location     Type
  2320 ;;                  2   59[BANK0 ] int 
  2321 ;; Registers used:
  2322 ;;		wreg, status,2, status,0, pclath, cstack
  2323 ;; Tracked objects:
  2324 ;;		On entry : 0/0
  2325 ;;		On exit  : 0/0
  2326 ;;		Unchanged: 0/0
  2327 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
  2328 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  2329 ;;      Locals:         0       0      36       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  2330 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  2331 ;;      Totals:         0       5      36       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  2332 ;;Total ram usage:       41 bytes
  2333 ;; Hardware stack levels used:    1
  2334 ;; Hardware stack levels required when called:    2
  2335 ;; This function calls:
  2336 ;;		___awtoft
  2337 ;;		___ftadd
  2338 ;;		___ftdiv
  2339 ;;		___ftmul
  2340 ;;		___fttol
  2341 ;; This function is called by:
  2342 ;;		_main
  2343 ;; This function uses a non-reentrant model
  2344 ;;
  2345                           
  2346                           
  2347                           ;psect for function _leersensores
  2348  023A                     _leersensores:	
  2349                           
  2350                           ;main.c: 55: ADPCH=0b001111;
  2351                           
  2352                           ;incstack = 0
  2353                           ; Regs used in _leersensores: [wreg+status,2+status,0+pclath+cstack]
  2354  023A  300F               	movlw	15
  2355  023B  0141               	movlb	1	; select bank1
  2356  023C  009E               	movwf	30	;volatile
  2357                           
  2358                           ;main.c: 56: _delay((unsigned long)((20)*(32000000/4000000.0)));
  2359  023D  3035               	movlw	53
  2360  023E                     u2607:	
  2361  023E  0B89               	decfsz	9,f
  2362  023F  2A3E               	goto	u2607
  2363  0240  0000               	nop
  2364                           
  2365                           ;main.c: 57: ADCON0bits.ADGO=1;
  2366  0241  0141               	movlb	1	; select bank1
  2367  0242  1413               	bsf	19,0	;volatile
  2368  0243                     l108:	
  2369                           ;main.c: 58: while(ADCON0bits.ADGO);
  2370                           
  2371  0243  1813               	btfsc	19,0	;volatile
  2372  0244  2A43               	goto	l108
  2373                           
  2374                           ;main.c: 59: adc=ADRESH;
  2375  0245  080D               	movf	13,w	;volatile
  2376  0246  0140               	movlb	0	; select bank0
  2377  0247  00DD               	movwf	??_leersensores
  2378  0248  01DE               	clrf	??_leersensores+1
  2379  0249  085D               	movf	??_leersensores,w
  2380  024A  00EB               	movwf	_adc
  2381  024B  085E               	movf	??_leersensores+1,w
  2382  024C  00EC               	movwf	_adc+1
  2383                           
  2384                           ;main.c: 60: adc=adc<<8;
  2385  024D  086C               	movf	_adc+1,w
  2386  024E  00DE               	movwf	??_leersensores+1
  2387  024F  086B               	movf	_adc,w
  2388  0250  00DD               	movwf	??_leersensores
  2389  0251  085D               	movf	??_leersensores,w
  2390  0252  00DE               	movwf	??_leersensores+1
  2391  0253  01DD               	clrf	??_leersensores
  2392  0254  085D               	movf	??_leersensores,w
  2393  0255  00EB               	movwf	_adc
  2394  0256  085E               	movf	??_leersensores+1,w
  2395  0257  00EC               	movwf	_adc+1
  2396                           
  2397                           ;main.c: 61: adc=adc+ADRESL;
  2398  0258  0141               	movlb	1	; select bank1
  2399  0259  080C               	movf	12,w	;volatile
  2400  025A  0140               	movlb	0	; select bank0
  2401  025B  076B               	addwf	_adc,w
  2402  025C  00DD               	movwf	??_leersensores
  2403  025D  086C               	movf	_adc+1,w
  2404  025E  1803               	skipnc
  2405  025F  0A6C               	incf	_adc+1,w
  2406  0260  00DE               	movwf	??_leersensores+1
  2407  0261  085D               	movf	??_leersensores,w
  2408  0262  00EB               	movwf	_adc
  2409  0263  085E               	movf	??_leersensores+1,w
  2410  0264  00EC               	movwf	_adc+1
  2411                           
  2412                           ;main.c: 62: v0=adc*5.0/1023.0;
  2413  0265  30C0               	movlw	192
  2414  0266  00BD               	movwf	___ftdiv@f2
  2415  0267  307F               	movlw	127
  2416  0268  00BE               	movwf	___ftdiv@f2+1
  2417  0269  3044               	movlw	68
  2418  026A  00BF               	movwf	___ftdiv@f2+2
  2419  026B  3000               	movlw	0
  2420  026C  00A0               	movwf	___ftmul@f1
  2421  026D  30A0               	movlw	160
  2422  026E  00A1               	movwf	___ftmul@f1+1
  2423  026F  3040               	movlw	64
  2424  0270  00A2               	movwf	___ftmul@f1+2
  2425  0271  086C               	movf	_adc+1,w
  2426  0272  00F9               	movwf	___awtoft@c+1
  2427  0273  086B               	movf	_adc,w
  2428  0274  00F8               	movwf	___awtoft@c
  2429  0275  318A  2263  3182   	fcall	___awtoft
  2430  0278  0878               	movf	?___awtoft,w
  2431  0279  0140               	movlb	0	; select bank0
  2432  027A  00A3               	movwf	___ftmul@f2
  2433  027B  0879               	movf	?___awtoft+1,w
  2434  027C  00A4               	movwf	___ftmul@f2+1
  2435  027D  087A               	movf	?___awtoft+2,w
  2436  027E  00A5               	movwf	___ftmul@f2+2
  2437  027F  318E  2656  3182   	fcall	___ftmul
  2438  0282  0140               	movlb	0	; select bank0
  2439  0283  0820               	movf	?___ftmul,w
  2440  0284  00C0               	movwf	___ftdiv@f1
  2441  0285  0821               	movf	?___ftmul+1,w
  2442  0286  00C1               	movwf	___ftdiv@f1+1
  2443  0287  0822               	movf	?___ftmul+2,w
  2444  0288  00C2               	movwf	___ftdiv@f1+2
  2445  0289  3180  200D  3182   	fcall	___ftdiv
  2446  028C  0140               	movlb	0	; select bank0
  2447  028D  083D               	movf	?___ftdiv,w
  2448  028E  00ED               	movwf	_v0
  2449  028F  083E               	movf	?___ftdiv+1,w
  2450  0290  00EE               	movwf	_v0+1
  2451  0291  083F               	movf	?___ftdiv+2,w
  2452  0292  00EF               	movwf	_v0+2
  2453                           
  2454                           ;main.c: 63: _delay((unsigned long)((10)*(32000000/4000.0)));
  2455  0293  3068               	movlw	104
  2456  0294  0140               	movlb	0	; select bank0
  2457  0295  00DD               	movwf	??_leersensores
  2458  0296  30E4               	movlw	228
  2459  0297                     u2617:	
  2460  0297  0B89               	decfsz	9,f
  2461  0298  2A97               	goto	u2617
  2462  0299  0BDD               	decfsz	??_leersensores,f
  2463  029A  2A97               	goto	u2617
  2464  029B  0000               	nop
  2465                           
  2466                           ;main.c: 65: ADPCH=0b001110;
  2467  029C  300E               	movlw	14
  2468  029D  0141               	movlb	1	; select bank1
  2469  029E  009E               	movwf	30	;volatile
  2470                           
  2471                           ;main.c: 66: _delay((unsigned long)((20)*(32000000/4000000.0)));
  2472  029F  3035               	movlw	53
  2473  02A0                     u2627:	
  2474  02A0  0B89               	decfsz	9,f
  2475  02A1  2AA0               	goto	u2627
  2476  02A2  0000               	nop
  2477                           
  2478                           ;main.c: 67: ADCON0bits.ADGO=1;
  2479  02A3  0141               	movlb	1	; select bank1
  2480  02A4  1413               	bsf	19,0	;volatile
  2481  02A5                     l111:	
  2482                           ;main.c: 68: while(ADCON0bits.ADGO);
  2483                           
  2484  02A5  1813               	btfsc	19,0	;volatile
  2485  02A6  2AA5               	goto	l111
  2486                           
  2487                           ;main.c: 69: adc=ADRESH;
  2488  02A7  080D               	movf	13,w	;volatile
  2489  02A8  0140               	movlb	0	; select bank0
  2490  02A9  00DD               	movwf	??_leersensores
  2491  02AA  01DE               	clrf	??_leersensores+1
  2492  02AB  085D               	movf	??_leersensores,w
  2493  02AC  00EB               	movwf	_adc
  2494  02AD  085E               	movf	??_leersensores+1,w
  2495  02AE  00EC               	movwf	_adc+1
  2496                           
  2497                           ;main.c: 70: adc=adc<<8;
  2498  02AF  086C               	movf	_adc+1,w
  2499  02B0  00DE               	movwf	??_leersensores+1
  2500  02B1  086B               	movf	_adc,w
  2501  02B2  00DD               	movwf	??_leersensores
  2502  02B3  085D               	movf	??_leersensores,w
  2503  02B4  00DE               	movwf	??_leersensores+1
  2504  02B5  01DD               	clrf	??_leersensores
  2505  02B6  085D               	movf	??_leersensores,w
  2506  02B7  00EB               	movwf	_adc
  2507  02B8  085E               	movf	??_leersensores+1,w
  2508  02B9  00EC               	movwf	_adc+1
  2509                           
  2510                           ;main.c: 71: adc=adc+ADRESL;
  2511  02BA  0141               	movlb	1	; select bank1
  2512  02BB  080C               	movf	12,w	;volatile
  2513  02BC  0140               	movlb	0	; select bank0
  2514  02BD  076B               	addwf	_adc,w
  2515  02BE  00DD               	movwf	??_leersensores
  2516  02BF  086C               	movf	_adc+1,w
  2517  02C0  1803               	skipnc
  2518  02C1  0A6C               	incf	_adc+1,w
  2519  02C2  00DE               	movwf	??_leersensores+1
  2520  02C3  085D               	movf	??_leersensores,w
  2521  02C4  00EB               	movwf	_adc
  2522  02C5  085E               	movf	??_leersensores+1,w
  2523  02C6  00EC               	movwf	_adc+1
  2524                           
  2525                           ;main.c: 72: v1=adc*5.0/1023.0;
  2526  02C7  30C0               	movlw	192
  2527  02C8  00BD               	movwf	___ftdiv@f2
  2528  02C9  307F               	movlw	127
  2529  02CA  00BE               	movwf	___ftdiv@f2+1
  2530  02CB  3044               	movlw	68
  2531  02CC  00BF               	movwf	___ftdiv@f2+2
  2532  02CD  3000               	movlw	0
  2533  02CE  00A0               	movwf	___ftmul@f1
  2534  02CF  30A0               	movlw	160
  2535  02D0  00A1               	movwf	___ftmul@f1+1
  2536  02D1  3040               	movlw	64
  2537  02D2  00A2               	movwf	___ftmul@f1+2
  2538  02D3  086C               	movf	_adc+1,w
  2539  02D4  00F9               	movwf	___awtoft@c+1
  2540  02D5  086B               	movf	_adc,w
  2541  02D6  00F8               	movwf	___awtoft@c
  2542  02D7  318A  2263  3182   	fcall	___awtoft
  2543  02DA  0878               	movf	?___awtoft,w
  2544  02DB  0140               	movlb	0	; select bank0
  2545  02DC  00A3               	movwf	___ftmul@f2
  2546  02DD  0879               	movf	?___awtoft+1,w
  2547  02DE  00A4               	movwf	___ftmul@f2+1
  2548  02DF  087A               	movf	?___awtoft+2,w
  2549  02E0  00A5               	movwf	___ftmul@f2+2
  2550  02E1  318E  2656  3182   	fcall	___ftmul
  2551  02E4  0140               	movlb	0	; select bank0
  2552  02E5  0820               	movf	?___ftmul,w
  2553  02E6  00C0               	movwf	___ftdiv@f1
  2554  02E7  0821               	movf	?___ftmul+1,w
  2555  02E8  00C1               	movwf	___ftdiv@f1+1
  2556  02E9  0822               	movf	?___ftmul+2,w
  2557  02EA  00C2               	movwf	___ftdiv@f1+2
  2558  02EB  3180  200D  3182   	fcall	___ftdiv
  2559  02EE  0140               	movlb	0	; select bank0
  2560  02EF  083D               	movf	?___ftdiv,w
  2561  02F0  0141               	movlb	1	; select bank1
  2562  02F1  00E5               	movwf	_v1^(0+128)
  2563  02F2  0140               	movlb	0	; select bank0
  2564  02F3  083E               	movf	?___ftdiv+1,w
  2565  02F4  0141               	movlb	1	; select bank1
  2566  02F5  00E6               	movwf	(_v1+1)^(0+128)
  2567  02F6  0140               	movlb	0	; select bank0
  2568  02F7  083F               	movf	?___ftdiv+2,w
  2569  02F8  0141               	movlb	1	; select bank1
  2570  02F9  00E7               	movwf	(_v1+2)^(0+128)
  2571                           
  2572                           ;main.c: 73: _delay((unsigned long)((10)*(32000000/4000.0)));
  2573  02FA  3068               	movlw	104
  2574  02FB  0140               	movlb	0	; select bank0
  2575  02FC  00DD               	movwf	??_leersensores
  2576  02FD  30E4               	movlw	228
  2577  02FE                     u2637:	
  2578  02FE  0B89               	decfsz	9,f
  2579  02FF  2AFE               	goto	u2637
  2580  0300  0BDD               	decfsz	??_leersensores,f
  2581  0301  2AFE               	goto	u2637
  2582  0302  0000               	nop
  2583                           
  2584                           ;main.c: 75: ADPCH=0b001101;
  2585  0303  300D               	movlw	13
  2586  0304  0141               	movlb	1	; select bank1
  2587  0305  009E               	movwf	30	;volatile
  2588                           
  2589                           ;main.c: 76: _delay((unsigned long)((20)*(32000000/4000000.0)));
  2590  0306  3035               	movlw	53
  2591  0307                     u2647:	
  2592  0307  0B89               	decfsz	9,f
  2593  0308  2B07               	goto	u2647
  2594  0309  0000               	nop
  2595                           
  2596                           ;main.c: 77: ADCON0bits.ADGO=1;
  2597  030A  0141               	movlb	1	; select bank1
  2598  030B  1413               	bsf	19,0	;volatile
  2599  030C                     l114:	
  2600                           ;main.c: 78: while(ADCON0bits.ADGO);
  2601                           
  2602  030C  1813               	btfsc	19,0	;volatile
  2603  030D  2B0C               	goto	l114
  2604                           
  2605                           ;main.c: 79: adc=ADRESH;
  2606  030E  080D               	movf	13,w	;volatile
  2607  030F  0140               	movlb	0	; select bank0
  2608  0310  00DD               	movwf	??_leersensores
  2609  0311  01DE               	clrf	??_leersensores+1
  2610  0312  085D               	movf	??_leersensores,w
  2611  0313  00EB               	movwf	_adc
  2612  0314  085E               	movf	??_leersensores+1,w
  2613  0315  00EC               	movwf	_adc+1
  2614                           
  2615                           ;main.c: 80: adc=adc<<8;
  2616  0316  086C               	movf	_adc+1,w
  2617  0317  00DE               	movwf	??_leersensores+1
  2618  0318  086B               	movf	_adc,w
  2619  0319  00DD               	movwf	??_leersensores
  2620  031A  085D               	movf	??_leersensores,w
  2621  031B  00DE               	movwf	??_leersensores+1
  2622  031C  01DD               	clrf	??_leersensores
  2623  031D  085D               	movf	??_leersensores,w
  2624  031E  00EB               	movwf	_adc
  2625  031F  085E               	movf	??_leersensores+1,w
  2626  0320  00EC               	movwf	_adc+1
  2627                           
  2628                           ;main.c: 81: adc=adc+ADRESL;
  2629  0321  0141               	movlb	1	; select bank1
  2630  0322  080C               	movf	12,w	;volatile
  2631  0323  0140               	movlb	0	; select bank0
  2632  0324  076B               	addwf	_adc,w
  2633  0325  00DD               	movwf	??_leersensores
  2634  0326  086C               	movf	_adc+1,w
  2635  0327  1803               	skipnc
  2636  0328  0A6C               	incf	_adc+1,w
  2637  0329  00DE               	movwf	??_leersensores+1
  2638  032A  085D               	movf	??_leersensores,w
  2639  032B  00EB               	movwf	_adc
  2640  032C  085E               	movf	??_leersensores+1,w
  2641  032D  00EC               	movwf	_adc+1
  2642                           
  2643                           ;main.c: 82: v2=adc*5.0/1023.0;
  2644  032E  30C0               	movlw	192
  2645  032F  00BD               	movwf	___ftdiv@f2
  2646  0330  307F               	movlw	127
  2647  0331  00BE               	movwf	___ftdiv@f2+1
  2648  0332  3044               	movlw	68
  2649  0333  00BF               	movwf	___ftdiv@f2+2
  2650  0334  3000               	movlw	0
  2651  0335  00A0               	movwf	___ftmul@f1
  2652  0336  30A0               	movlw	160
  2653  0337  00A1               	movwf	___ftmul@f1+1
  2654  0338  3040               	movlw	64
  2655  0339  00A2               	movwf	___ftmul@f1+2
  2656  033A  086C               	movf	_adc+1,w
  2657  033B  00F9               	movwf	___awtoft@c+1
  2658  033C  086B               	movf	_adc,w
  2659  033D  00F8               	movwf	___awtoft@c
  2660  033E  318A  2263  3182   	fcall	___awtoft
  2661  0341  0878               	movf	?___awtoft,w
  2662  0342  0140               	movlb	0	; select bank0
  2663  0343  00A3               	movwf	___ftmul@f2
  2664  0344  0879               	movf	?___awtoft+1,w
  2665  0345  00A4               	movwf	___ftmul@f2+1
  2666  0346  087A               	movf	?___awtoft+2,w
  2667  0347  00A5               	movwf	___ftmul@f2+2
  2668  0348  318E  2656  3182   	fcall	___ftmul
  2669  034B  0140               	movlb	0	; select bank0
  2670  034C  0820               	movf	?___ftmul,w
  2671  034D  00C0               	movwf	___ftdiv@f1
  2672  034E  0821               	movf	?___ftmul+1,w
  2673  034F  00C1               	movwf	___ftdiv@f1+1
  2674  0350  0822               	movf	?___ftmul+2,w
  2675  0351  00C2               	movwf	___ftdiv@f1+2
  2676  0352  3180  200D  3182   	fcall	___ftdiv
  2677  0355  0140               	movlb	0	; select bank0
  2678  0356  083D               	movf	?___ftdiv,w
  2679  0357  0141               	movlb	1	; select bank1
  2680  0358  00E2               	movwf	_v2^(0+128)
  2681  0359  0140               	movlb	0	; select bank0
  2682  035A  083E               	movf	?___ftdiv+1,w
  2683  035B  0141               	movlb	1	; select bank1
  2684  035C  00E3               	movwf	(_v2+1)^(0+128)
  2685  035D  0140               	movlb	0	; select bank0
  2686  035E  083F               	movf	?___ftdiv+2,w
  2687  035F  0141               	movlb	1	; select bank1
  2688  0360  00E4               	movwf	(_v2+2)^(0+128)
  2689                           
  2690                           ;main.c: 83: _delay((unsigned long)((10)*(32000000/4000.0)));
  2691  0361  3068               	movlw	104
  2692  0362  0140               	movlb	0	; select bank0
  2693  0363  00DD               	movwf	??_leersensores
  2694  0364  30E4               	movlw	228
  2695  0365                     u2657:	
  2696  0365  0B89               	decfsz	9,f
  2697  0366  2B65               	goto	u2657
  2698  0367  0BDD               	decfsz	??_leersensores,f
  2699  0368  2B65               	goto	u2657
  2700  0369  0000               	nop
  2701                           
  2702                           ;main.c: 85: ADPCH=0b001100;
  2703  036A  300C               	movlw	12
  2704  036B  0141               	movlb	1	; select bank1
  2705  036C  009E               	movwf	30	;volatile
  2706                           
  2707                           ;main.c: 86: _delay((unsigned long)((20)*(32000000/4000000.0)));
  2708  036D  3035               	movlw	53
  2709  036E                     u2667:	
  2710  036E  0B89               	decfsz	9,f
  2711  036F  2B6E               	goto	u2667
  2712  0370  0000               	nop
  2713                           
  2714                           ;main.c: 87: ADCON0bits.ADGO=1;
  2715  0371  0141               	movlb	1	; select bank1
  2716  0372  1413               	bsf	19,0	;volatile
  2717  0373                     l117:	
  2718                           ;main.c: 88: while(ADCON0bits.ADGO);
  2719                           
  2720  0373  1813               	btfsc	19,0	;volatile
  2721  0374  2B73               	goto	l117
  2722                           
  2723                           ;main.c: 89: adc=ADRESH;
  2724  0375  080D               	movf	13,w	;volatile
  2725  0376  0140               	movlb	0	; select bank0
  2726  0377  00DD               	movwf	??_leersensores
  2727  0378  01DE               	clrf	??_leersensores+1
  2728  0379  085D               	movf	??_leersensores,w
  2729  037A  00EB               	movwf	_adc
  2730  037B  085E               	movf	??_leersensores+1,w
  2731  037C  00EC               	movwf	_adc+1
  2732                           
  2733                           ;main.c: 90: adc=adc<<8;
  2734  037D  086C               	movf	_adc+1,w
  2735  037E  00DE               	movwf	??_leersensores+1
  2736  037F  086B               	movf	_adc,w
  2737  0380  00DD               	movwf	??_leersensores
  2738  0381  085D               	movf	??_leersensores,w
  2739  0382  00DE               	movwf	??_leersensores+1
  2740  0383  01DD               	clrf	??_leersensores
  2741  0384  085D               	movf	??_leersensores,w
  2742  0385  00EB               	movwf	_adc
  2743  0386  085E               	movf	??_leersensores+1,w
  2744  0387  00EC               	movwf	_adc+1
  2745                           
  2746                           ;main.c: 91: adc=adc+ADRESL;
  2747  0388  0141               	movlb	1	; select bank1
  2748  0389  080C               	movf	12,w	;volatile
  2749  038A  0140               	movlb	0	; select bank0
  2750  038B  076B               	addwf	_adc,w
  2751  038C  00DD               	movwf	??_leersensores
  2752  038D  086C               	movf	_adc+1,w
  2753  038E  1803               	skipnc
  2754  038F  0A6C               	incf	_adc+1,w
  2755  0390  00DE               	movwf	??_leersensores+1
  2756  0391  085D               	movf	??_leersensores,w
  2757  0392  00EB               	movwf	_adc
  2758  0393  085E               	movf	??_leersensores+1,w
  2759  0394  00EC               	movwf	_adc+1
  2760                           
  2761                           ;main.c: 92: v3=adc*5.0/1023.0;
  2762  0395  30C0               	movlw	192
  2763  0396  00BD               	movwf	___ftdiv@f2
  2764  0397  307F               	movlw	127
  2765  0398  00BE               	movwf	___ftdiv@f2+1
  2766  0399  3044               	movlw	68
  2767  039A  00BF               	movwf	___ftdiv@f2+2
  2768  039B  3000               	movlw	0
  2769  039C  00A0               	movwf	___ftmul@f1
  2770  039D  30A0               	movlw	160
  2771  039E  00A1               	movwf	___ftmul@f1+1
  2772  039F  3040               	movlw	64
  2773  03A0  00A2               	movwf	___ftmul@f1+2
  2774  03A1  086C               	movf	_adc+1,w
  2775  03A2  00F9               	movwf	___awtoft@c+1
  2776  03A3  086B               	movf	_adc,w
  2777  03A4  00F8               	movwf	___awtoft@c
  2778  03A5  318A  2263  3182   	fcall	___awtoft
  2779  03A8  0878               	movf	?___awtoft,w
  2780  03A9  0140               	movlb	0	; select bank0
  2781  03AA  00A3               	movwf	___ftmul@f2
  2782  03AB  0879               	movf	?___awtoft+1,w
  2783  03AC  00A4               	movwf	___ftmul@f2+1
  2784  03AD  087A               	movf	?___awtoft+2,w
  2785  03AE  00A5               	movwf	___ftmul@f2+2
  2786  03AF  318E  2656  3182   	fcall	___ftmul
  2787  03B2  0140               	movlb	0	; select bank0
  2788  03B3  0820               	movf	?___ftmul,w
  2789  03B4  00C0               	movwf	___ftdiv@f1
  2790  03B5  0821               	movf	?___ftmul+1,w
  2791  03B6  00C1               	movwf	___ftdiv@f1+1
  2792  03B7  0822               	movf	?___ftmul+2,w
  2793  03B8  00C2               	movwf	___ftdiv@f1+2
  2794  03B9  3180  200D  3182   	fcall	___ftdiv
  2795  03BC  0140               	movlb	0	; select bank0
  2796  03BD  083D               	movf	?___ftdiv,w
  2797  03BE  0141               	movlb	1	; select bank1
  2798  03BF  00DF               	movwf	_v3^(0+128)
  2799  03C0  0140               	movlb	0	; select bank0
  2800  03C1  083E               	movf	?___ftdiv+1,w
  2801  03C2  0141               	movlb	1	; select bank1
  2802  03C3  00E0               	movwf	(_v3+1)^(0+128)
  2803  03C4  0140               	movlb	0	; select bank0
  2804  03C5  083F               	movf	?___ftdiv+2,w
  2805  03C6  0141               	movlb	1	; select bank1
  2806  03C7  00E1               	movwf	(_v3+2)^(0+128)
  2807                           
  2808                           ;main.c: 93: _delay((unsigned long)((10)*(32000000/4000.0)));
  2809  03C8  3068               	movlw	104
  2810  03C9  0140               	movlb	0	; select bank0
  2811  03CA  00DD               	movwf	??_leersensores
  2812  03CB  30E4               	movlw	228
  2813  03CC                     u2677:	
  2814  03CC  0B89               	decfsz	9,f
  2815  03CD  2BCC               	goto	u2677
  2816  03CE  0BDD               	decfsz	??_leersensores,f
  2817  03CF  2BCC               	goto	u2677
  2818  03D0  0000               	nop
  2819                           
  2820                           ;main.c: 95: ADPCH=0b001011;
  2821  03D1  300B               	movlw	11
  2822  03D2  0141               	movlb	1	; select bank1
  2823  03D3  009E               	movwf	30	;volatile
  2824                           
  2825                           ;main.c: 96: _delay((unsigned long)((20)*(32000000/4000000.0)));
  2826  03D4  3035               	movlw	53
  2827  03D5                     u2687:	
  2828  03D5  0B89               	decfsz	9,f
  2829  03D6  2BD5               	goto	u2687
  2830  03D7  0000               	nop
  2831                           
  2832                           ;main.c: 97: ADCON0bits.ADGO=1;
  2833  03D8  0141               	movlb	1	; select bank1
  2834  03D9  1413               	bsf	19,0	;volatile
  2835  03DA                     l120:	
  2836                           ;main.c: 98: while(ADCON0bits.ADGO);
  2837                           
  2838  03DA  1813               	btfsc	19,0	;volatile
  2839  03DB  2BDA               	goto	l120
  2840                           
  2841                           ;main.c: 99: adc=ADRESH;
  2842  03DC  080D               	movf	13,w	;volatile
  2843  03DD  0140               	movlb	0	; select bank0
  2844  03DE  00DD               	movwf	??_leersensores
  2845  03DF  01DE               	clrf	??_leersensores+1
  2846  03E0  085D               	movf	??_leersensores,w
  2847  03E1  00EB               	movwf	_adc
  2848  03E2  085E               	movf	??_leersensores+1,w
  2849  03E3  00EC               	movwf	_adc+1
  2850                           
  2851                           ;main.c: 100: adc=adc<<8;
  2852  03E4  086C               	movf	_adc+1,w
  2853  03E5  00DE               	movwf	??_leersensores+1
  2854  03E6  086B               	movf	_adc,w
  2855  03E7  00DD               	movwf	??_leersensores
  2856  03E8  085D               	movf	??_leersensores,w
  2857  03E9  00DE               	movwf	??_leersensores+1
  2858  03EA  01DD               	clrf	??_leersensores
  2859  03EB  085D               	movf	??_leersensores,w
  2860  03EC  00EB               	movwf	_adc
  2861  03ED  085E               	movf	??_leersensores+1,w
  2862  03EE  00EC               	movwf	_adc+1
  2863                           
  2864                           ;main.c: 101: adc=adc+ADRESL;
  2865  03EF  0141               	movlb	1	; select bank1
  2866  03F0  080C               	movf	12,w	;volatile
  2867  03F1  0140               	movlb	0	; select bank0
  2868  03F2  076B               	addwf	_adc,w
  2869  03F3  00DD               	movwf	??_leersensores
  2870  03F4  086C               	movf	_adc+1,w
  2871  03F5  1803               	skipnc
  2872  03F6  0A6C               	incf	_adc+1,w
  2873  03F7  00DE               	movwf	??_leersensores+1
  2874  03F8  085D               	movf	??_leersensores,w
  2875  03F9  00EB               	movwf	_adc
  2876  03FA  085E               	movf	??_leersensores+1,w
  2877  03FB  00EC               	movwf	_adc+1
  2878                           
  2879                           ;main.c: 102: v4=adc*5.0/1023.0;
  2880  03FC  30C0               	movlw	192
  2881  03FD  00BD               	movwf	___ftdiv@f2
  2882  03FE  307F               	movlw	127
  2883  03FF  00BE               	movwf	___ftdiv@f2+1
  2884  0400  3044               	movlw	68
  2885  0401  00BF               	movwf	___ftdiv@f2+2
  2886  0402  3000               	movlw	0
  2887  0403  00A0               	movwf	___ftmul@f1
  2888  0404  30A0               	movlw	160
  2889  0405  00A1               	movwf	___ftmul@f1+1
  2890  0406  3040               	movlw	64
  2891  0407  00A2               	movwf	___ftmul@f1+2
  2892  0408  086C               	movf	_adc+1,w
  2893  0409  00F9               	movwf	___awtoft@c+1
  2894  040A  086B               	movf	_adc,w
  2895  040B  00F8               	movwf	___awtoft@c
  2896  040C  318A  2263  3182   	fcall	___awtoft
  2897  040F  0878               	movf	?___awtoft,w
  2898  0410  0140               	movlb	0	; select bank0
  2899  0411  00A3               	movwf	___ftmul@f2
  2900  0412  0879               	movf	?___awtoft+1,w
  2901  0413  00A4               	movwf	___ftmul@f2+1
  2902  0414  087A               	movf	?___awtoft+2,w
  2903  0415  00A5               	movwf	___ftmul@f2+2
  2904  0416  318E  2656  3182   	fcall	___ftmul
  2905  0419  0140               	movlb	0	; select bank0
  2906  041A  0820               	movf	?___ftmul,w
  2907  041B  00C0               	movwf	___ftdiv@f1
  2908  041C  0821               	movf	?___ftmul+1,w
  2909  041D  00C1               	movwf	___ftdiv@f1+1
  2910  041E  0822               	movf	?___ftmul+2,w
  2911  041F  00C2               	movwf	___ftdiv@f1+2
  2912  0420  3180  200D  3182   	fcall	___ftdiv
  2913  0423  0140               	movlb	0	; select bank0
  2914  0424  083D               	movf	?___ftdiv,w
  2915  0425  0141               	movlb	1	; select bank1
  2916  0426  00DC               	movwf	_v4^(0+128)
  2917  0427  0140               	movlb	0	; select bank0
  2918  0428  083E               	movf	?___ftdiv+1,w
  2919  0429  0141               	movlb	1	; select bank1
  2920  042A  00DD               	movwf	(_v4+1)^(0+128)
  2921  042B  0140               	movlb	0	; select bank0
  2922  042C  083F               	movf	?___ftdiv+2,w
  2923  042D  0141               	movlb	1	; select bank1
  2924  042E  00DE               	movwf	(_v4+2)^(0+128)
  2925                           
  2926                           ;main.c: 103: _delay((unsigned long)((10)*(32000000/4000.0)));
  2927  042F  3068               	movlw	104
  2928  0430  0140               	movlb	0	; select bank0
  2929  0431  00DD               	movwf	??_leersensores
  2930  0432  30E4               	movlw	228
  2931  0433                     u2697:	
  2932  0433  0B89               	decfsz	9,f
  2933  0434  2C33               	goto	u2697
  2934  0435  0BDD               	decfsz	??_leersensores,f
  2935  0436  2C33               	goto	u2697
  2936  0437  0000               	nop
  2937                           
  2938                           ;main.c: 105: ADPCH=0b001010;
  2939  0438  300A               	movlw	10
  2940  0439  0141               	movlb	1	; select bank1
  2941  043A  009E               	movwf	30	;volatile
  2942                           
  2943                           ;main.c: 106: _delay((unsigned long)((20)*(32000000/4000000.0)));
  2944  043B  3035               	movlw	53
  2945  043C                     u2707:	
  2946  043C  0B89               	decfsz	9,f
  2947  043D  2C3C               	goto	u2707
  2948  043E  0000               	nop
  2949                           
  2950                           ;main.c: 107: ADCON0bits.ADGO=1;
  2951  043F  0141               	movlb	1	; select bank1
  2952  0440  1413               	bsf	19,0	;volatile
  2953  0441                     l123:	
  2954                           ;main.c: 108: while(ADCON0bits.ADGO);
  2955                           
  2956  0441  1813               	btfsc	19,0	;volatile
  2957  0442  2C41               	goto	l123
  2958                           
  2959                           ;main.c: 109: adc=ADRESH;
  2960  0443  080D               	movf	13,w	;volatile
  2961  0444  0140               	movlb	0	; select bank0
  2962  0445  00DD               	movwf	??_leersensores
  2963  0446  01DE               	clrf	??_leersensores+1
  2964  0447  085D               	movf	??_leersensores,w
  2965  0448  00EB               	movwf	_adc
  2966  0449  085E               	movf	??_leersensores+1,w
  2967  044A  00EC               	movwf	_adc+1
  2968                           
  2969                           ;main.c: 110: adc=adc<<8;
  2970  044B  086C               	movf	_adc+1,w
  2971  044C  00DE               	movwf	??_leersensores+1
  2972  044D  086B               	movf	_adc,w
  2973  044E  00DD               	movwf	??_leersensores
  2974  044F  085D               	movf	??_leersensores,w
  2975  0450  00DE               	movwf	??_leersensores+1
  2976  0451  01DD               	clrf	??_leersensores
  2977  0452  085D               	movf	??_leersensores,w
  2978  0453  00EB               	movwf	_adc
  2979  0454  085E               	movf	??_leersensores+1,w
  2980  0455  00EC               	movwf	_adc+1
  2981                           
  2982                           ;main.c: 111: adc=adc+ADRESL;
  2983  0456  0141               	movlb	1	; select bank1
  2984  0457  080C               	movf	12,w	;volatile
  2985  0458  0140               	movlb	0	; select bank0
  2986  0459  076B               	addwf	_adc,w
  2987  045A  00DD               	movwf	??_leersensores
  2988  045B  086C               	movf	_adc+1,w
  2989  045C  1803               	skipnc
  2990  045D  0A6C               	incf	_adc+1,w
  2991  045E  00DE               	movwf	??_leersensores+1
  2992  045F  085D               	movf	??_leersensores,w
  2993  0460  00EB               	movwf	_adc
  2994  0461  085E               	movf	??_leersensores+1,w
  2995  0462  00EC               	movwf	_adc+1
  2996                           
  2997                           ;main.c: 112: v5=adc*5.0/1023.0;
  2998  0463  30C0               	movlw	192
  2999  0464  00BD               	movwf	___ftdiv@f2
  3000  0465  307F               	movlw	127
  3001  0466  00BE               	movwf	___ftdiv@f2+1
  3002  0467  3044               	movlw	68
  3003  0468  00BF               	movwf	___ftdiv@f2+2
  3004  0469  3000               	movlw	0
  3005  046A  00A0               	movwf	___ftmul@f1
  3006  046B  30A0               	movlw	160
  3007  046C  00A1               	movwf	___ftmul@f1+1
  3008  046D  3040               	movlw	64
  3009  046E  00A2               	movwf	___ftmul@f1+2
  3010  046F  086C               	movf	_adc+1,w
  3011  0470  00F9               	movwf	___awtoft@c+1
  3012  0471  086B               	movf	_adc,w
  3013  0472  00F8               	movwf	___awtoft@c
  3014  0473  318A  2263  3182   	fcall	___awtoft
  3015  0476  0878               	movf	?___awtoft,w
  3016  0477  0140               	movlb	0	; select bank0
  3017  0478  00A3               	movwf	___ftmul@f2
  3018  0479  0879               	movf	?___awtoft+1,w
  3019  047A  00A4               	movwf	___ftmul@f2+1
  3020  047B  087A               	movf	?___awtoft+2,w
  3021  047C  00A5               	movwf	___ftmul@f2+2
  3022  047D  318E  2656  3182   	fcall	___ftmul
  3023  0480  0140               	movlb	0	; select bank0
  3024  0481  0820               	movf	?___ftmul,w
  3025  0482  00C0               	movwf	___ftdiv@f1
  3026  0483  0821               	movf	?___ftmul+1,w
  3027  0484  00C1               	movwf	___ftdiv@f1+1
  3028  0485  0822               	movf	?___ftmul+2,w
  3029  0486  00C2               	movwf	___ftdiv@f1+2
  3030  0487  3180  200D  3182   	fcall	___ftdiv
  3031  048A  0140               	movlb	0	; select bank0
  3032  048B  083D               	movf	?___ftdiv,w
  3033  048C  0141               	movlb	1	; select bank1
  3034  048D  00D9               	movwf	_v5^(0+128)
  3035  048E  0140               	movlb	0	; select bank0
  3036  048F  083E               	movf	?___ftdiv+1,w
  3037  0490  0141               	movlb	1	; select bank1
  3038  0491  00DA               	movwf	(_v5+1)^(0+128)
  3039  0492  0140               	movlb	0	; select bank0
  3040  0493  083F               	movf	?___ftdiv+2,w
  3041  0494  0141               	movlb	1	; select bank1
  3042  0495  00DB               	movwf	(_v5+2)^(0+128)
  3043                           
  3044                           ;main.c: 113: _delay((unsigned long)((10)*(32000000/4000.0)));
  3045  0496  3068               	movlw	104
  3046  0497  0140               	movlb	0	; select bank0
  3047  0498  00DD               	movwf	??_leersensores
  3048  0499  30E4               	movlw	228
  3049  049A                     u2717:	
  3050  049A  0B89               	decfsz	9,f
  3051  049B  2C9A               	goto	u2717
  3052  049C  0BDD               	decfsz	??_leersensores,f
  3053  049D  2C9A               	goto	u2717
  3054  049E  0000               	nop
  3055                           
  3056                           ;main.c: 115: ADPCH=0b001001;
  3057  049F  3009               	movlw	9
  3058  04A0  0141               	movlb	1	; select bank1
  3059  04A1  009E               	movwf	30	;volatile
  3060                           
  3061                           ;main.c: 116: _delay((unsigned long)((20)*(32000000/4000000.0)));
  3062  04A2  3035               	movlw	53
  3063  04A3                     u2727:	
  3064  04A3  0B89               	decfsz	9,f
  3065  04A4  2CA3               	goto	u2727
  3066  04A5  0000               	nop
  3067                           
  3068                           ;main.c: 117: ADCON0bits.ADGO=1;
  3069  04A6  0141               	movlb	1	; select bank1
  3070  04A7  1413               	bsf	19,0	;volatile
  3071  04A8                     l126:	
  3072                           ;main.c: 118: while(ADCON0bits.ADGO==1);
  3073                           
  3074  04A8  1813               	btfsc	19,0	;volatile
  3075  04A9  2CA8               	goto	l126
  3076                           
  3077                           ;main.c: 119: adc=ADRESH;
  3078  04AA  080D               	movf	13,w	;volatile
  3079  04AB  0140               	movlb	0	; select bank0
  3080  04AC  00DD               	movwf	??_leersensores
  3081  04AD  01DE               	clrf	??_leersensores+1
  3082  04AE  085D               	movf	??_leersensores,w
  3083  04AF  00EB               	movwf	_adc
  3084  04B0  085E               	movf	??_leersensores+1,w
  3085  04B1  00EC               	movwf	_adc+1
  3086                           
  3087                           ;main.c: 120: adc=adc<<8;
  3088  04B2  086C               	movf	_adc+1,w
  3089  04B3  00DE               	movwf	??_leersensores+1
  3090  04B4  086B               	movf	_adc,w
  3091  04B5  00DD               	movwf	??_leersensores
  3092  04B6  085D               	movf	??_leersensores,w
  3093  04B7  00DE               	movwf	??_leersensores+1
  3094  04B8  01DD               	clrf	??_leersensores
  3095  04B9  085D               	movf	??_leersensores,w
  3096  04BA  00EB               	movwf	_adc
  3097  04BB  085E               	movf	??_leersensores+1,w
  3098  04BC  00EC               	movwf	_adc+1
  3099                           
  3100                           ;main.c: 121: adc=adc+ADRESL;
  3101  04BD  0141               	movlb	1	; select bank1
  3102  04BE  080C               	movf	12,w	;volatile
  3103  04BF  0140               	movlb	0	; select bank0
  3104  04C0  076B               	addwf	_adc,w
  3105  04C1  00DD               	movwf	??_leersensores
  3106  04C2  086C               	movf	_adc+1,w
  3107  04C3  1803               	skipnc
  3108  04C4  0A6C               	incf	_adc+1,w
  3109  04C5  00DE               	movwf	??_leersensores+1
  3110  04C6  085D               	movf	??_leersensores,w
  3111  04C7  00EB               	movwf	_adc
  3112  04C8  085E               	movf	??_leersensores+1,w
  3113  04C9  00EC               	movwf	_adc+1
  3114                           
  3115                           ;main.c: 122: v6=adc*5.0/1023.0;
  3116  04CA  30C0               	movlw	192
  3117  04CB  00BD               	movwf	___ftdiv@f2
  3118  04CC  307F               	movlw	127
  3119  04CD  00BE               	movwf	___ftdiv@f2+1
  3120  04CE  3044               	movlw	68
  3121  04CF  00BF               	movwf	___ftdiv@f2+2
  3122  04D0  3000               	movlw	0
  3123  04D1  00A0               	movwf	___ftmul@f1
  3124  04D2  30A0               	movlw	160
  3125  04D3  00A1               	movwf	___ftmul@f1+1
  3126  04D4  3040               	movlw	64
  3127  04D5  00A2               	movwf	___ftmul@f1+2
  3128  04D6  086C               	movf	_adc+1,w
  3129  04D7  00F9               	movwf	___awtoft@c+1
  3130  04D8  086B               	movf	_adc,w
  3131  04D9  00F8               	movwf	___awtoft@c
  3132  04DA  318A  2263  3182   	fcall	___awtoft
  3133  04DD  0878               	movf	?___awtoft,w
  3134  04DE  0140               	movlb	0	; select bank0
  3135  04DF  00A3               	movwf	___ftmul@f2
  3136  04E0  0879               	movf	?___awtoft+1,w
  3137  04E1  00A4               	movwf	___ftmul@f2+1
  3138  04E2  087A               	movf	?___awtoft+2,w
  3139  04E3  00A5               	movwf	___ftmul@f2+2
  3140  04E4  318E  2656  3182   	fcall	___ftmul
  3141  04E7  0140               	movlb	0	; select bank0
  3142  04E8  0820               	movf	?___ftmul,w
  3143  04E9  00C0               	movwf	___ftdiv@f1
  3144  04EA  0821               	movf	?___ftmul+1,w
  3145  04EB  00C1               	movwf	___ftdiv@f1+1
  3146  04EC  0822               	movf	?___ftmul+2,w
  3147  04ED  00C2               	movwf	___ftdiv@f1+2
  3148  04EE  3180  200D  3182   	fcall	___ftdiv
  3149  04F1  0140               	movlb	0	; select bank0
  3150  04F2  083D               	movf	?___ftdiv,w
  3151  04F3  0141               	movlb	1	; select bank1
  3152  04F4  00D6               	movwf	_v6^(0+128)
  3153  04F5  0140               	movlb	0	; select bank0
  3154  04F6  083E               	movf	?___ftdiv+1,w
  3155  04F7  0141               	movlb	1	; select bank1
  3156  04F8  00D7               	movwf	(_v6+1)^(0+128)
  3157  04F9  0140               	movlb	0	; select bank0
  3158  04FA  083F               	movf	?___ftdiv+2,w
  3159  04FB  0141               	movlb	1	; select bank1
  3160  04FC  00D8               	movwf	(_v6+2)^(0+128)
  3161                           
  3162                           ;main.c: 124: ADPCH=0b001000;
  3163  04FD  3008               	movlw	8
  3164  04FE  009E               	movwf	30	;volatile
  3165                           
  3166                           ;main.c: 125: _delay((unsigned long)((20)*(32000000/4000000.0)));
  3167  04FF  3035               	movlw	53
  3168  0500                     u2737:	
  3169  0500  0B89               	decfsz	9,f
  3170  0501  2D00               	goto	u2737
  3171  0502  0000               	nop
  3172                           
  3173                           ;main.c: 126: ADCON0bits.ADGO=1;
  3174  0503  0141               	movlb	1	; select bank1
  3175  0504  1413               	bsf	19,0	;volatile
  3176  0505                     l129:	
  3177                           ;main.c: 127: while(ADCON0bits.ADGO==1);
  3178                           
  3179  0505  1813               	btfsc	19,0	;volatile
  3180  0506  2D05               	goto	l129
  3181                           
  3182                           ;main.c: 128: adc=ADRESH;
  3183  0507  080D               	movf	13,w	;volatile
  3184  0508  0140               	movlb	0	; select bank0
  3185  0509  00DD               	movwf	??_leersensores
  3186  050A  01DE               	clrf	??_leersensores+1
  3187  050B  085D               	movf	??_leersensores,w
  3188  050C  00EB               	movwf	_adc
  3189  050D  085E               	movf	??_leersensores+1,w
  3190  050E  00EC               	movwf	_adc+1
  3191                           
  3192                           ;main.c: 129: adc=adc<<8;
  3193  050F  086C               	movf	_adc+1,w
  3194  0510  00DE               	movwf	??_leersensores+1
  3195  0511  086B               	movf	_adc,w
  3196  0512  00DD               	movwf	??_leersensores
  3197  0513  085D               	movf	??_leersensores,w
  3198  0514  00DE               	movwf	??_leersensores+1
  3199  0515  01DD               	clrf	??_leersensores
  3200  0516  085D               	movf	??_leersensores,w
  3201  0517  00EB               	movwf	_adc
  3202  0518  085E               	movf	??_leersensores+1,w
  3203  0519  00EC               	movwf	_adc+1
  3204                           
  3205                           ;main.c: 130: adc=adc+ADRESL;
  3206  051A  0141               	movlb	1	; select bank1
  3207  051B  080C               	movf	12,w	;volatile
  3208  051C  0140               	movlb	0	; select bank0
  3209  051D  076B               	addwf	_adc,w
  3210  051E  00DD               	movwf	??_leersensores
  3211  051F  086C               	movf	_adc+1,w
  3212  0520  1803               	skipnc
  3213  0521  0A6C               	incf	_adc+1,w
  3214  0522  00DE               	movwf	??_leersensores+1
  3215  0523  085D               	movf	??_leersensores,w
  3216  0524  00EB               	movwf	_adc
  3217  0525  085E               	movf	??_leersensores+1,w
  3218  0526  00EC               	movwf	_adc+1
  3219                           
  3220                           ;main.c: 131: v7=adc*5.0/1023.0;
  3221  0527  30C0               	movlw	192
  3222  0528  00BD               	movwf	___ftdiv@f2
  3223  0529  307F               	movlw	127
  3224  052A  00BE               	movwf	___ftdiv@f2+1
  3225  052B  3044               	movlw	68
  3226  052C  00BF               	movwf	___ftdiv@f2+2
  3227  052D  3000               	movlw	0
  3228  052E  00A0               	movwf	___ftmul@f1
  3229  052F  30A0               	movlw	160
  3230  0530  00A1               	movwf	___ftmul@f1+1
  3231  0531  3040               	movlw	64
  3232  0532  00A2               	movwf	___ftmul@f1+2
  3233  0533  086C               	movf	_adc+1,w
  3234  0534  00F9               	movwf	___awtoft@c+1
  3235  0535  086B               	movf	_adc,w
  3236  0536  00F8               	movwf	___awtoft@c
  3237  0537  318A  2263  3182   	fcall	___awtoft
  3238  053A  0878               	movf	?___awtoft,w
  3239  053B  0140               	movlb	0	; select bank0
  3240  053C  00A3               	movwf	___ftmul@f2
  3241  053D  0879               	movf	?___awtoft+1,w
  3242  053E  00A4               	movwf	___ftmul@f2+1
  3243  053F  087A               	movf	?___awtoft+2,w
  3244  0540  00A5               	movwf	___ftmul@f2+2
  3245  0541  318E  2656  3182   	fcall	___ftmul
  3246  0544  0140               	movlb	0	; select bank0
  3247  0545  0820               	movf	?___ftmul,w
  3248  0546  00C0               	movwf	___ftdiv@f1
  3249  0547  0821               	movf	?___ftmul+1,w
  3250  0548  00C1               	movwf	___ftdiv@f1+1
  3251  0549  0822               	movf	?___ftmul+2,w
  3252  054A  00C2               	movwf	___ftdiv@f1+2
  3253  054B  3180  200D  3182   	fcall	___ftdiv
  3254  054E  0140               	movlb	0	; select bank0
  3255  054F  083D               	movf	?___ftdiv,w
  3256  0550  00E6               	movwf	_v7
  3257  0551  083E               	movf	?___ftdiv+1,w
  3258  0552  00E7               	movwf	_v7+1
  3259  0553  083F               	movf	?___ftdiv+2,w
  3260  0554  00E8               	movwf	_v7+2
  3261                           
  3262                           ;main.c: 133: lectura=(0*v0+1000*v1+2000*v2+3000*v3+4000*v4+5000*v5+6000*v7+7000*v7)/
  3263                           ;main.c: 134: (v0+v1+v2+v3+v4+v5+v6+v7);
  3264  0555  086D               	movf	_v0,w
  3265  0556  00A3               	movwf	___ftmul@f2
  3266  0557  086E               	movf	_v0+1,w
  3267  0558  00A4               	movwf	___ftmul@f2+1
  3268  0559  086F               	movf	_v0+2,w
  3269  055A  00A5               	movwf	___ftmul@f2+2
  3270  055B  3000               	movlw	0
  3271  055C  00A0               	movwf	___ftmul@f1
  3272  055D  3000               	movlw	0
  3273  055E  00A1               	movwf	___ftmul@f1+1
  3274  055F  3000               	movlw	0
  3275  0560  00A2               	movwf	___ftmul@f1+2
  3276  0561  318E  2656  3182   	fcall	___ftmul
  3277  0564  0140               	movlb	0	; select bank0
  3278  0565  0820               	movf	?___ftmul,w
  3279  0566  00B3               	movwf	___ftadd@f2
  3280  0567  0821               	movf	?___ftmul+1,w
  3281  0568  00B4               	movwf	___ftadd@f2+1
  3282  0569  0822               	movf	?___ftmul+2,w
  3283  056A  00B5               	movwf	___ftadd@f2+2
  3284  056B  0141               	movlb	1	; select bank1
  3285  056C  0865               	movf	_v1^(0+128),w
  3286  056D  0140               	movlb	0	; select bank0
  3287  056E  00A3               	movwf	___ftmul@f2
  3288  056F  0141               	movlb	1	; select bank1
  3289  0570  0866               	movf	(_v1+1)^(0+128),w
  3290  0571  0140               	movlb	0	; select bank0
  3291  0572  00A4               	movwf	___ftmul@f2+1
  3292  0573  0141               	movlb	1	; select bank1
  3293  0574  0867               	movf	(_v1+2)^(0+128),w
  3294  0575  0140               	movlb	0	; select bank0
  3295  0576  00A5               	movwf	___ftmul@f2+2
  3296  0577  3000               	movlw	0
  3297  0578  00A0               	movwf	___ftmul@f1
  3298  0579  307A               	movlw	122
  3299  057A  00A1               	movwf	___ftmul@f1+1
  3300  057B  3044               	movlw	68
  3301  057C  00A2               	movwf	___ftmul@f1+2
  3302  057D  318E  2656  3182   	fcall	___ftmul
  3303  0580  0140               	movlb	0	; select bank0
  3304  0581  0820               	movf	?___ftmul,w
  3305  0582  00B0               	movwf	___ftadd@f1
  3306  0583  0821               	movf	?___ftmul+1,w
  3307  0584  00B1               	movwf	___ftadd@f1+1
  3308  0585  0822               	movf	?___ftmul+2,w
  3309  0586  00B2               	movwf	___ftadd@f1+2
  3310  0587  318F  270A  3182   	fcall	___ftadd
  3311  058A  0140               	movlb	0	; select bank0
  3312  058B  0830               	movf	?___ftadd,w
  3313  058C  0141               	movlb	1	; select bank1
  3314  058D  00A0               	movwf	_leersensores$800^(0+128)
  3315  058E  0140               	movlb	0	; select bank0
  3316  058F  0831               	movf	?___ftadd+1,w
  3317  0590  0141               	movlb	1	; select bank1
  3318  0591  00A1               	movwf	(_leersensores$800+1)^(0+128)
  3319  0592  0140               	movlb	0	; select bank0
  3320  0593  0832               	movf	?___ftadd+2,w
  3321  0594  0141               	movlb	1	; select bank1
  3322  0595  00A2               	movwf	(_leersensores$800+2)^(0+128)
  3323                           
  3324                           ;main.c: 133: lectura=(0*v0+1000*v1+2000*v2+3000*v3+4000*v4+5000*v5+6000*v7+7000*v7)/
  3325                           ;main.c: 134: (v0+v1+v2+v3+v4+v5+v6+v7);
  3326  0596  0820               	movf	_leersensores$800^(0+128),w
  3327  0597  0140               	movlb	0	; select bank0
  3328  0598  00B3               	movwf	___ftadd@f2
  3329  0599  0141               	movlb	1	; select bank1
  3330  059A  0821               	movf	(_leersensores$800+1)^(0+128),w
  3331  059B  0140               	movlb	0	; select bank0
  3332  059C  00B4               	movwf	___ftadd@f2+1
  3333  059D  0141               	movlb	1	; select bank1
  3334  059E  0822               	movf	(_leersensores$800+2)^(0+128),w
  3335  059F  0140               	movlb	0	; select bank0
  3336  05A0  00B5               	movwf	___ftadd@f2+2
  3337  05A1  0141               	movlb	1	; select bank1
  3338  05A2  0862               	movf	_v2^(0+128),w
  3339  05A3  0140               	movlb	0	; select bank0
  3340  05A4  00A3               	movwf	___ftmul@f2
  3341  05A5  0141               	movlb	1	; select bank1
  3342  05A6  0863               	movf	(_v2+1)^(0+128),w
  3343  05A7  0140               	movlb	0	; select bank0
  3344  05A8  00A4               	movwf	___ftmul@f2+1
  3345  05A9  0141               	movlb	1	; select bank1
  3346  05AA  0864               	movf	(_v2+2)^(0+128),w
  3347  05AB  0140               	movlb	0	; select bank0
  3348  05AC  00A5               	movwf	___ftmul@f2+2
  3349  05AD  3000               	movlw	0
  3350  05AE  00A0               	movwf	___ftmul@f1
  3351  05AF  30FA               	movlw	250
  3352  05B0  00A1               	movwf	___ftmul@f1+1
  3353  05B1  3044               	movlw	68
  3354  05B2  00A2               	movwf	___ftmul@f1+2
  3355  05B3  318E  2656  3182   	fcall	___ftmul
  3356  05B6  0140               	movlb	0	; select bank0
  3357  05B7  0820               	movf	?___ftmul,w
  3358  05B8  00B0               	movwf	___ftadd@f1
  3359  05B9  0821               	movf	?___ftmul+1,w
  3360  05BA  00B1               	movwf	___ftadd@f1+1
  3361  05BB  0822               	movf	?___ftmul+2,w
  3362  05BC  00B2               	movwf	___ftadd@f1+2
  3363  05BD  318F  270A  3182   	fcall	___ftadd
  3364  05C0  0140               	movlb	0	; select bank0
  3365  05C1  0830               	movf	?___ftadd,w
  3366  05C2  0141               	movlb	1	; select bank1
  3367  05C3  00A3               	movwf	_leersensores$801^(0+128)
  3368  05C4  0140               	movlb	0	; select bank0
  3369  05C5  0831               	movf	?___ftadd+1,w
  3370  05C6  0141               	movlb	1	; select bank1
  3371  05C7  00A4               	movwf	(_leersensores$801+1)^(0+128)
  3372  05C8  0140               	movlb	0	; select bank0
  3373  05C9  0832               	movf	?___ftadd+2,w
  3374  05CA  0141               	movlb	1	; select bank1
  3375  05CB  00A5               	movwf	(_leersensores$801+2)^(0+128)
  3376                           
  3377                           ;main.c: 133: lectura=(0*v0+1000*v1+2000*v2+3000*v3+4000*v4+5000*v5+6000*v7+7000*v7)/
  3378                           ;main.c: 134: (v0+v1+v2+v3+v4+v5+v6+v7);
  3379  05CC  0823               	movf	_leersensores$801^(0+128),w
  3380  05CD  0140               	movlb	0	; select bank0
  3381  05CE  00B3               	movwf	___ftadd@f2
  3382  05CF  0141               	movlb	1	; select bank1
  3383  05D0  0824               	movf	(_leersensores$801+1)^(0+128),w
  3384  05D1  0140               	movlb	0	; select bank0
  3385  05D2  00B4               	movwf	___ftadd@f2+1
  3386  05D3  0141               	movlb	1	; select bank1
  3387  05D4  0825               	movf	(_leersensores$801+2)^(0+128),w
  3388  05D5  0140               	movlb	0	; select bank0
  3389  05D6  00B5               	movwf	___ftadd@f2+2
  3390  05D7  0141               	movlb	1	; select bank1
  3391  05D8  085F               	movf	_v3^(0+128),w
  3392  05D9  0140               	movlb	0	; select bank0
  3393  05DA  00A3               	movwf	___ftmul@f2
  3394  05DB  0141               	movlb	1	; select bank1
  3395  05DC  0860               	movf	(_v3+1)^(0+128),w
  3396  05DD  0140               	movlb	0	; select bank0
  3397  05DE  00A4               	movwf	___ftmul@f2+1
  3398  05DF  0141               	movlb	1	; select bank1
  3399  05E0  0861               	movf	(_v3+2)^(0+128),w
  3400  05E1  0140               	movlb	0	; select bank0
  3401  05E2  00A5               	movwf	___ftmul@f2+2
  3402  05E3  3080               	movlw	128
  3403  05E4  00A0               	movwf	___ftmul@f1
  3404  05E5  303B               	movlw	59
  3405  05E6  00A1               	movwf	___ftmul@f1+1
  3406  05E7  3045               	movlw	69
  3407  05E8  00A2               	movwf	___ftmul@f1+2
  3408  05E9  318E  2656  3182   	fcall	___ftmul
  3409  05EC  0140               	movlb	0	; select bank0
  3410  05ED  0820               	movf	?___ftmul,w
  3411  05EE  00B0               	movwf	___ftadd@f1
  3412  05EF  0821               	movf	?___ftmul+1,w
  3413  05F0  00B1               	movwf	___ftadd@f1+1
  3414  05F1  0822               	movf	?___ftmul+2,w
  3415  05F2  00B2               	movwf	___ftadd@f1+2
  3416  05F3  318F  270A  3182   	fcall	___ftadd
  3417  05F6  0140               	movlb	0	; select bank0
  3418  05F7  0830               	movf	?___ftadd,w
  3419  05F8  0141               	movlb	1	; select bank1
  3420  05F9  00A6               	movwf	_leersensores$802^(0+128)
  3421  05FA  0140               	movlb	0	; select bank0
  3422  05FB  0831               	movf	?___ftadd+1,w
  3423  05FC  0141               	movlb	1	; select bank1
  3424  05FD  00A7               	movwf	(_leersensores$802+1)^(0+128)
  3425  05FE  0140               	movlb	0	; select bank0
  3426  05FF  0832               	movf	?___ftadd+2,w
  3427  0600  0141               	movlb	1	; select bank1
  3428  0601  00A8               	movwf	(_leersensores$802+2)^(0+128)
  3429                           
  3430                           ;main.c: 133: lectura=(0*v0+1000*v1+2000*v2+3000*v3+4000*v4+5000*v5+6000*v7+7000*v7)/
  3431                           ;main.c: 134: (v0+v1+v2+v3+v4+v5+v6+v7);
  3432  0602  0826               	movf	_leersensores$802^(0+128),w
  3433  0603  0140               	movlb	0	; select bank0
  3434  0604  00B3               	movwf	___ftadd@f2
  3435  0605  0141               	movlb	1	; select bank1
  3436  0606  0827               	movf	(_leersensores$802+1)^(0+128),w
  3437  0607  0140               	movlb	0	; select bank0
  3438  0608  00B4               	movwf	___ftadd@f2+1
  3439  0609  0141               	movlb	1	; select bank1
  3440  060A  0828               	movf	(_leersensores$802+2)^(0+128),w
  3441  060B  0140               	movlb	0	; select bank0
  3442  060C  00B5               	movwf	___ftadd@f2+2
  3443  060D  0141               	movlb	1	; select bank1
  3444  060E  085C               	movf	_v4^(0+128),w
  3445  060F  0140               	movlb	0	; select bank0
  3446  0610  00A3               	movwf	___ftmul@f2
  3447  0611  0141               	movlb	1	; select bank1
  3448  0612  085D               	movf	(_v4+1)^(0+128),w
  3449  0613  0140               	movlb	0	; select bank0
  3450  0614  00A4               	movwf	___ftmul@f2+1
  3451  0615  0141               	movlb	1	; select bank1
  3452  0616  085E               	movf	(_v4+2)^(0+128),w
  3453  0617  0140               	movlb	0	; select bank0
  3454  0618  00A5               	movwf	___ftmul@f2+2
  3455  0619  3000               	movlw	0
  3456  061A  00A0               	movwf	___ftmul@f1
  3457  061B  307A               	movlw	122
  3458  061C  00A1               	movwf	___ftmul@f1+1
  3459  061D  3045               	movlw	69
  3460  061E  00A2               	movwf	___ftmul@f1+2
  3461  061F  318E  2656  3182   	fcall	___ftmul
  3462  0622  0140               	movlb	0	; select bank0
  3463  0623  0820               	movf	?___ftmul,w
  3464  0624  00B0               	movwf	___ftadd@f1
  3465  0625  0821               	movf	?___ftmul+1,w
  3466  0626  00B1               	movwf	___ftadd@f1+1
  3467  0627  0822               	movf	?___ftmul+2,w
  3468  0628  00B2               	movwf	___ftadd@f1+2
  3469  0629  318F  270A  3182   	fcall	___ftadd
  3470  062C  0140               	movlb	0	; select bank0
  3471  062D  0830               	movf	?___ftadd,w
  3472  062E  0141               	movlb	1	; select bank1
  3473  062F  00A9               	movwf	_leersensores$803^(0+128)
  3474  0630  0140               	movlb	0	; select bank0
  3475  0631  0831               	movf	?___ftadd+1,w
  3476  0632  0141               	movlb	1	; select bank1
  3477  0633  00AA               	movwf	(_leersensores$803+1)^(0+128)
  3478  0634  0140               	movlb	0	; select bank0
  3479  0635  0832               	movf	?___ftadd+2,w
  3480  0636  0141               	movlb	1	; select bank1
  3481  0637  00AB               	movwf	(_leersensores$803+2)^(0+128)
  3482                           
  3483                           ;main.c: 133: lectura=(0*v0+1000*v1+2000*v2+3000*v3+4000*v4+5000*v5+6000*v7+7000*v7)/
  3484                           ;main.c: 134: (v0+v1+v2+v3+v4+v5+v6+v7);
  3485  0638  0829               	movf	_leersensores$803^(0+128),w
  3486  0639  0140               	movlb	0	; select bank0
  3487  063A  00B3               	movwf	___ftadd@f2
  3488  063B  0141               	movlb	1	; select bank1
  3489  063C  082A               	movf	(_leersensores$803+1)^(0+128),w
  3490  063D  0140               	movlb	0	; select bank0
  3491  063E  00B4               	movwf	___ftadd@f2+1
  3492  063F  0141               	movlb	1	; select bank1
  3493  0640  082B               	movf	(_leersensores$803+2)^(0+128),w
  3494  0641  0140               	movlb	0	; select bank0
  3495  0642  00B5               	movwf	___ftadd@f2+2
  3496  0643  0141               	movlb	1	; select bank1
  3497  0644  0859               	movf	_v5^(0+128),w
  3498  0645  0140               	movlb	0	; select bank0
  3499  0646  00A3               	movwf	___ftmul@f2
  3500  0647  0141               	movlb	1	; select bank1
  3501  0648  085A               	movf	(_v5+1)^(0+128),w
  3502  0649  0140               	movlb	0	; select bank0
  3503  064A  00A4               	movwf	___ftmul@f2+1
  3504  064B  0141               	movlb	1	; select bank1
  3505  064C  085B               	movf	(_v5+2)^(0+128),w
  3506  064D  0140               	movlb	0	; select bank0
  3507  064E  00A5               	movwf	___ftmul@f2+2
  3508  064F  3040               	movlw	64
  3509  0650  00A0               	movwf	___ftmul@f1
  3510  0651  309C               	movlw	156
  3511  0652  00A1               	movwf	___ftmul@f1+1
  3512  0653  3045               	movlw	69
  3513  0654  00A2               	movwf	___ftmul@f1+2
  3514  0655  318E  2656  3182   	fcall	___ftmul
  3515  0658  0140               	movlb	0	; select bank0
  3516  0659  0820               	movf	?___ftmul,w
  3517  065A  00B0               	movwf	___ftadd@f1
  3518  065B  0821               	movf	?___ftmul+1,w
  3519  065C  00B1               	movwf	___ftadd@f1+1
  3520  065D  0822               	movf	?___ftmul+2,w
  3521  065E  00B2               	movwf	___ftadd@f1+2
  3522  065F  318F  270A  3182   	fcall	___ftadd
  3523  0662  0140               	movlb	0	; select bank0
  3524  0663  0830               	movf	?___ftadd,w
  3525  0664  0141               	movlb	1	; select bank1
  3526  0665  00AC               	movwf	_leersensores$804^(0+128)
  3527  0666  0140               	movlb	0	; select bank0
  3528  0667  0831               	movf	?___ftadd+1,w
  3529  0668  0141               	movlb	1	; select bank1
  3530  0669  00AD               	movwf	(_leersensores$804+1)^(0+128)
  3531  066A  0140               	movlb	0	; select bank0
  3532  066B  0832               	movf	?___ftadd+2,w
  3533  066C  0141               	movlb	1	; select bank1
  3534  066D  00AE               	movwf	(_leersensores$804+2)^(0+128)
  3535                           
  3536                           ;main.c: 133: lectura=(0*v0+1000*v1+2000*v2+3000*v3+4000*v4+5000*v5+6000*v7+7000*v7)/
  3537                           ;main.c: 134: (v0+v1+v2+v3+v4+v5+v6+v7);
  3538  066E  082C               	movf	_leersensores$804^(0+128),w
  3539  066F  0140               	movlb	0	; select bank0
  3540  0670  00B3               	movwf	___ftadd@f2
  3541  0671  0141               	movlb	1	; select bank1
  3542  0672  082D               	movf	(_leersensores$804+1)^(0+128),w
  3543  0673  0140               	movlb	0	; select bank0
  3544  0674  00B4               	movwf	___ftadd@f2+1
  3545  0675  0141               	movlb	1	; select bank1
  3546  0676  082E               	movf	(_leersensores$804+2)^(0+128),w
  3547  0677  0140               	movlb	0	; select bank0
  3548  0678  00B5               	movwf	___ftadd@f2+2
  3549  0679  0866               	movf	_v7,w
  3550  067A  00A3               	movwf	___ftmul@f2
  3551  067B  0867               	movf	_v7+1,w
  3552  067C  00A4               	movwf	___ftmul@f2+1
  3553  067D  0868               	movf	_v7+2,w
  3554  067E  00A5               	movwf	___ftmul@f2+2
  3555  067F  3080               	movlw	128
  3556  0680  00A0               	movwf	___ftmul@f1
  3557  0681  30BB               	movlw	187
  3558  0682  00A1               	movwf	___ftmul@f1+1
  3559  0683  3045               	movlw	69
  3560  0684  00A2               	movwf	___ftmul@f1+2
  3561  0685  318E  2656  3182   	fcall	___ftmul
  3562  0688  0140               	movlb	0	; select bank0
  3563  0689  0820               	movf	?___ftmul,w
  3564  068A  00B0               	movwf	___ftadd@f1
  3565  068B  0821               	movf	?___ftmul+1,w
  3566  068C  00B1               	movwf	___ftadd@f1+1
  3567  068D  0822               	movf	?___ftmul+2,w
  3568  068E  00B2               	movwf	___ftadd@f1+2
  3569  068F  318F  270A  3182   	fcall	___ftadd
  3570  0692  0140               	movlb	0	; select bank0
  3571  0693  0830               	movf	?___ftadd,w
  3572  0694  0141               	movlb	1	; select bank1
  3573  0695  00AF               	movwf	_leersensores$805^(0+128)
  3574  0696  0140               	movlb	0	; select bank0
  3575  0697  0831               	movf	?___ftadd+1,w
  3576  0698  0141               	movlb	1	; select bank1
  3577  0699  00B0               	movwf	(_leersensores$805+1)^(0+128)
  3578  069A  0140               	movlb	0	; select bank0
  3579  069B  0832               	movf	?___ftadd+2,w
  3580  069C  0141               	movlb	1	; select bank1
  3581  069D  00B1               	movwf	(_leersensores$805+2)^(0+128)
  3582                           
  3583                           ;main.c: 133: lectura=(0*v0+1000*v1+2000*v2+3000*v3+4000*v4+5000*v5+6000*v7+7000*v7)/
  3584                           ;main.c: 134: (v0+v1+v2+v3+v4+v5+v6+v7);
  3585  069E  0140               	movlb	0	; select bank0
  3586  069F  086D               	movf	_v0,w
  3587  06A0  00B3               	movwf	___ftadd@f2
  3588  06A1  086E               	movf	_v0+1,w
  3589  06A2  00B4               	movwf	___ftadd@f2+1
  3590  06A3  086F               	movf	_v0+2,w
  3591  06A4  00B5               	movwf	___ftadd@f2+2
  3592  06A5  0141               	movlb	1	; select bank1
  3593  06A6  0865               	movf	_v1^(0+128),w
  3594  06A7  0140               	movlb	0	; select bank0
  3595  06A8  00B0               	movwf	___ftadd@f1
  3596  06A9  0141               	movlb	1	; select bank1
  3597  06AA  0866               	movf	(_v1+1)^(0+128),w
  3598  06AB  0140               	movlb	0	; select bank0
  3599  06AC  00B1               	movwf	___ftadd@f1+1
  3600  06AD  0141               	movlb	1	; select bank1
  3601  06AE  0867               	movf	(_v1+2)^(0+128),w
  3602  06AF  0140               	movlb	0	; select bank0
  3603  06B0  00B2               	movwf	___ftadd@f1+2
  3604  06B1  318F  270A  3182   	fcall	___ftadd
  3605  06B4  0140               	movlb	0	; select bank0
  3606  06B5  0830               	movf	?___ftadd,w
  3607  06B6  0141               	movlb	1	; select bank1
  3608  06B7  00B2               	movwf	_leersensores$806^(0+128)
  3609  06B8  0140               	movlb	0	; select bank0
  3610  06B9  0831               	movf	?___ftadd+1,w
  3611  06BA  0141               	movlb	1	; select bank1
  3612  06BB  00B3               	movwf	(_leersensores$806+1)^(0+128)
  3613  06BC  0140               	movlb	0	; select bank0
  3614  06BD  0832               	movf	?___ftadd+2,w
  3615  06BE  0141               	movlb	1	; select bank1
  3616  06BF  00B4               	movwf	(_leersensores$806+2)^(0+128)
  3617                           
  3618                           ;main.c: 133: lectura=(0*v0+1000*v1+2000*v2+3000*v3+4000*v4+5000*v5+6000*v7+7000*v7)/
  3619                           ;main.c: 134: (v0+v1+v2+v3+v4+v5+v6+v7);
  3620  06C0  0832               	movf	_leersensores$806^(0+128),w
  3621  06C1  0140               	movlb	0	; select bank0
  3622  06C2  00B3               	movwf	___ftadd@f2
  3623  06C3  0141               	movlb	1	; select bank1
  3624  06C4  0833               	movf	(_leersensores$806+1)^(0+128),w
  3625  06C5  0140               	movlb	0	; select bank0
  3626  06C6  00B4               	movwf	___ftadd@f2+1
  3627  06C7  0141               	movlb	1	; select bank1
  3628  06C8  0834               	movf	(_leersensores$806+2)^(0+128),w
  3629  06C9  0140               	movlb	0	; select bank0
  3630  06CA  00B5               	movwf	___ftadd@f2+2
  3631  06CB  0141               	movlb	1	; select bank1
  3632  06CC  0862               	movf	_v2^(0+128),w
  3633  06CD  0140               	movlb	0	; select bank0
  3634  06CE  00B0               	movwf	___ftadd@f1
  3635  06CF  0141               	movlb	1	; select bank1
  3636  06D0  0863               	movf	(_v2+1)^(0+128),w
  3637  06D1  0140               	movlb	0	; select bank0
  3638  06D2  00B1               	movwf	___ftadd@f1+1
  3639  06D3  0141               	movlb	1	; select bank1
  3640  06D4  0864               	movf	(_v2+2)^(0+128),w
  3641  06D5  0140               	movlb	0	; select bank0
  3642  06D6  00B2               	movwf	___ftadd@f1+2
  3643  06D7  318F  270A  3182   	fcall	___ftadd
  3644  06DA  0140               	movlb	0	; select bank0
  3645  06DB  0830               	movf	?___ftadd,w
  3646  06DC  0141               	movlb	1	; select bank1
  3647  06DD  00B5               	movwf	_leersensores$807^(0+128)
  3648  06DE  0140               	movlb	0	; select bank0
  3649  06DF  0831               	movf	?___ftadd+1,w
  3650  06E0  0141               	movlb	1	; select bank1
  3651  06E1  00B6               	movwf	(_leersensores$807+1)^(0+128)
  3652  06E2  0140               	movlb	0	; select bank0
  3653  06E3  0832               	movf	?___ftadd+2,w
  3654  06E4  0141               	movlb	1	; select bank1
  3655  06E5  00B7               	movwf	(_leersensores$807+2)^(0+128)
  3656                           
  3657                           ;main.c: 133: lectura=(0*v0+1000*v1+2000*v2+3000*v3+4000*v4+5000*v5+6000*v7+7000*v7)/
  3658                           ;main.c: 134: (v0+v1+v2+v3+v4+v5+v6+v7);
  3659  06E6  0835               	movf	_leersensores$807^(0+128),w
  3660  06E7  0140               	movlb	0	; select bank0
  3661  06E8  00B3               	movwf	___ftadd@f2
  3662  06E9  0141               	movlb	1	; select bank1
  3663  06EA  0836               	movf	(_leersensores$807+1)^(0+128),w
  3664  06EB  0140               	movlb	0	; select bank0
  3665  06EC  00B4               	movwf	___ftadd@f2+1
  3666  06ED  0141               	movlb	1	; select bank1
  3667  06EE  0837               	movf	(_leersensores$807+2)^(0+128),w
  3668  06EF  0140               	movlb	0	; select bank0
  3669  06F0  00B5               	movwf	___ftadd@f2+2
  3670  06F1  0141               	movlb	1	; select bank1
  3671  06F2  085F               	movf	_v3^(0+128),w
  3672  06F3  0140               	movlb	0	; select bank0
  3673  06F4  00B0               	movwf	___ftadd@f1
  3674  06F5  0141               	movlb	1	; select bank1
  3675  06F6  0860               	movf	(_v3+1)^(0+128),w
  3676  06F7  0140               	movlb	0	; select bank0
  3677  06F8  00B1               	movwf	___ftadd@f1+1
  3678  06F9  0141               	movlb	1	; select bank1
  3679  06FA  0861               	movf	(_v3+2)^(0+128),w
  3680  06FB  0140               	movlb	0	; select bank0
  3681  06FC  00B2               	movwf	___ftadd@f1+2
  3682  06FD  318F  270A  3182   	fcall	___ftadd
  3683  0700  0140               	movlb	0	; select bank0
  3684  0701  0830               	movf	?___ftadd,w
  3685  0702  0141               	movlb	1	; select bank1
  3686  0703  00B8               	movwf	_leersensores$808^(0+128)
  3687  0704  0140               	movlb	0	; select bank0
  3688  0705  0831               	movf	?___ftadd+1,w
  3689  0706  0141               	movlb	1	; select bank1
  3690  0707  00B9               	movwf	(_leersensores$808+1)^(0+128)
  3691  0708  0140               	movlb	0	; select bank0
  3692  0709  0832               	movf	?___ftadd+2,w
  3693  070A  0141               	movlb	1	; select bank1
  3694  070B  00BA               	movwf	(_leersensores$808+2)^(0+128)
  3695                           
  3696                           ;main.c: 133: lectura=(0*v0+1000*v1+2000*v2+3000*v3+4000*v4+5000*v5+6000*v7+7000*v7)/
  3697                           ;main.c: 134: (v0+v1+v2+v3+v4+v5+v6+v7);
  3698  070C  0838               	movf	_leersensores$808^(0+128),w
  3699  070D  0140               	movlb	0	; select bank0
  3700  070E  00B3               	movwf	___ftadd@f2
  3701  070F  0141               	movlb	1	; select bank1
  3702  0710  0839               	movf	(_leersensores$808+1)^(0+128),w
  3703  0711  0140               	movlb	0	; select bank0
  3704  0712  00B4               	movwf	___ftadd@f2+1
  3705  0713  0141               	movlb	1	; select bank1
  3706  0714  083A               	movf	(_leersensores$808+2)^(0+128),w
  3707  0715  0140               	movlb	0	; select bank0
  3708  0716  00B5               	movwf	___ftadd@f2+2
  3709  0717  0141               	movlb	1	; select bank1
  3710  0718  085C               	movf	_v4^(0+128),w
  3711  0719  0140               	movlb	0	; select bank0
  3712  071A  00B0               	movwf	___ftadd@f1
  3713  071B  0141               	movlb	1	; select bank1
  3714  071C  085D               	movf	(_v4+1)^(0+128),w
  3715  071D  0140               	movlb	0	; select bank0
  3716  071E  00B1               	movwf	___ftadd@f1+1
  3717  071F  0141               	movlb	1	; select bank1
  3718  0720  085E               	movf	(_v4+2)^(0+128),w
  3719  0721  0140               	movlb	0	; select bank0
  3720  0722  00B2               	movwf	___ftadd@f1+2
  3721  0723  318F  270A  3182   	fcall	___ftadd
  3722  0726  0140               	movlb	0	; select bank0
  3723  0727  0830               	movf	?___ftadd,w
  3724  0728  0141               	movlb	1	; select bank1
  3725  0729  00BB               	movwf	_leersensores$809^(0+128)
  3726  072A  0140               	movlb	0	; select bank0
  3727  072B  0831               	movf	?___ftadd+1,w
  3728  072C  0141               	movlb	1	; select bank1
  3729  072D  00BC               	movwf	(_leersensores$809+1)^(0+128)
  3730  072E  0140               	movlb	0	; select bank0
  3731  072F  0832               	movf	?___ftadd+2,w
  3732  0730  0141               	movlb	1	; select bank1
  3733  0731  00BD               	movwf	(_leersensores$809+2)^(0+128)
  3734                           
  3735                           ;main.c: 133: lectura=(0*v0+1000*v1+2000*v2+3000*v3+4000*v4+5000*v5+6000*v7+7000*v7)/
  3736                           ;main.c: 134: (v0+v1+v2+v3+v4+v5+v6+v7);
  3737  0732  083B               	movf	_leersensores$809^(0+128),w
  3738  0733  0140               	movlb	0	; select bank0
  3739  0734  00B3               	movwf	___ftadd@f2
  3740  0735  0141               	movlb	1	; select bank1
  3741  0736  083C               	movf	(_leersensores$809+1)^(0+128),w
  3742  0737  0140               	movlb	0	; select bank0
  3743  0738  00B4               	movwf	___ftadd@f2+1
  3744  0739  0141               	movlb	1	; select bank1
  3745  073A  083D               	movf	(_leersensores$809+2)^(0+128),w
  3746  073B  0140               	movlb	0	; select bank0
  3747  073C  00B5               	movwf	___ftadd@f2+2
  3748  073D  0141               	movlb	1	; select bank1
  3749  073E  0859               	movf	_v5^(0+128),w
  3750  073F  0140               	movlb	0	; select bank0
  3751  0740  00B0               	movwf	___ftadd@f1
  3752  0741  0141               	movlb	1	; select bank1
  3753  0742  085A               	movf	(_v5+1)^(0+128),w
  3754  0743  0140               	movlb	0	; select bank0
  3755  0744  00B1               	movwf	___ftadd@f1+1
  3756  0745  0141               	movlb	1	; select bank1
  3757  0746  085B               	movf	(_v5+2)^(0+128),w
  3758  0747  0140               	movlb	0	; select bank0
  3759  0748  00B2               	movwf	___ftadd@f1+2
  3760  0749  318F  270A  3182   	fcall	___ftadd
  3761  074C  0140               	movlb	0	; select bank0
  3762  074D  0830               	movf	?___ftadd,w
  3763  074E  0141               	movlb	1	; select bank1
  3764  074F  00BE               	movwf	_leersensores$810^(0+128)
  3765  0750  0140               	movlb	0	; select bank0
  3766  0751  0831               	movf	?___ftadd+1,w
  3767  0752  0141               	movlb	1	; select bank1
  3768  0753  00BF               	movwf	(_leersensores$810+1)^(0+128)
  3769  0754  0140               	movlb	0	; select bank0
  3770  0755  0832               	movf	?___ftadd+2,w
  3771  0756  0141               	movlb	1	; select bank1
  3772  0757  00C0               	movwf	(_leersensores$810+2)^(0+128)
  3773                           
  3774                           ;main.c: 133: lectura=(0*v0+1000*v1+2000*v2+3000*v3+4000*v4+5000*v5+6000*v7+7000*v7)/
  3775                           ;main.c: 134: (v0+v1+v2+v3+v4+v5+v6+v7);
  3776  0758  083E               	movf	_leersensores$810^(0+128),w
  3777  0759  0140               	movlb	0	; select bank0
  3778  075A  00B3               	movwf	___ftadd@f2
  3779  075B  0141               	movlb	1	; select bank1
  3780  075C  083F               	movf	(_leersensores$810+1)^(0+128),w
  3781  075D  0140               	movlb	0	; select bank0
  3782  075E  00B4               	movwf	___ftadd@f2+1
  3783  075F  0141               	movlb	1	; select bank1
  3784  0760  0840               	movf	(_leersensores$810+2)^(0+128),w
  3785  0761  0140               	movlb	0	; select bank0
  3786  0762  00B5               	movwf	___ftadd@f2+2
  3787  0763  0141               	movlb	1	; select bank1
  3788  0764  0856               	movf	_v6^(0+128),w
  3789  0765  0140               	movlb	0	; select bank0
  3790  0766  00B0               	movwf	___ftadd@f1
  3791  0767  0141               	movlb	1	; select bank1
  3792  0768  0857               	movf	(_v6+1)^(0+128),w
  3793  0769  0140               	movlb	0	; select bank0
  3794  076A  00B1               	movwf	___ftadd@f1+1
  3795  076B  0141               	movlb	1	; select bank1
  3796  076C  0858               	movf	(_v6+2)^(0+128),w
  3797  076D  0140               	movlb	0	; select bank0
  3798  076E  00B2               	movwf	___ftadd@f1+2
  3799  076F  318F  270A  3182   	fcall	___ftadd
  3800  0772  0140               	movlb	0	; select bank0
  3801  0773  0830               	movf	?___ftadd,w
  3802  0774  0141               	movlb	1	; select bank1
  3803  0775  00C1               	movwf	_leersensores$811^(0+128)
  3804  0776  0140               	movlb	0	; select bank0
  3805  0777  0831               	movf	?___ftadd+1,w
  3806  0778  0141               	movlb	1	; select bank1
  3807  0779  00C2               	movwf	(_leersensores$811+1)^(0+128)
  3808  077A  0140               	movlb	0	; select bank0
  3809  077B  0832               	movf	?___ftadd+2,w
  3810  077C  0141               	movlb	1	; select bank1
  3811  077D  00C3               	movwf	(_leersensores$811+2)^(0+128)
  3812                           
  3813                           ;main.c: 133: lectura=(0*v0+1000*v1+2000*v2+3000*v3+4000*v4+5000*v5+6000*v7+7000*v7)/
  3814                           ;main.c: 134: (v0+v1+v2+v3+v4+v5+v6+v7);
  3815  077E  082F               	movf	_leersensores$805^(0+128),w
  3816  077F  0140               	movlb	0	; select bank0
  3817  0780  00B3               	movwf	___ftadd@f2
  3818  0781  0141               	movlb	1	; select bank1
  3819  0782  0830               	movf	(_leersensores$805+1)^(0+128),w
  3820  0783  0140               	movlb	0	; select bank0
  3821  0784  00B4               	movwf	___ftadd@f2+1
  3822  0785  0141               	movlb	1	; select bank1
  3823  0786  0831               	movf	(_leersensores$805+2)^(0+128),w
  3824  0787  0140               	movlb	0	; select bank0
  3825  0788  00B5               	movwf	___ftadd@f2+2
  3826  0789  0866               	movf	_v7,w
  3827  078A  00A3               	movwf	___ftmul@f2
  3828  078B  0867               	movf	_v7+1,w
  3829  078C  00A4               	movwf	___ftmul@f2+1
  3830  078D  0868               	movf	_v7+2,w
  3831  078E  00A5               	movwf	___ftmul@f2+2
  3832  078F  30C0               	movlw	192
  3833  0790  00A0               	movwf	___ftmul@f1
  3834  0791  30DA               	movlw	218
  3835  0792  00A1               	movwf	___ftmul@f1+1
  3836  0793  3045               	movlw	69
  3837  0794  00A2               	movwf	___ftmul@f1+2
  3838  0795  318E  2656  3182   	fcall	___ftmul
  3839  0798  0140               	movlb	0	; select bank0
  3840  0799  0820               	movf	?___ftmul,w
  3841  079A  00B0               	movwf	___ftadd@f1
  3842  079B  0821               	movf	?___ftmul+1,w
  3843  079C  00B1               	movwf	___ftadd@f1+1
  3844  079D  0822               	movf	?___ftmul+2,w
  3845  079E  00B2               	movwf	___ftadd@f1+2
  3846  079F  318F  270A  3182   	fcall	___ftadd
  3847  07A2  0140               	movlb	0	; select bank0
  3848  07A3  0830               	movf	?___ftadd,w
  3849  07A4  00C0               	movwf	___ftdiv@f1
  3850  07A5  0831               	movf	?___ftadd+1,w
  3851  07A6  00C1               	movwf	___ftdiv@f1+1
  3852  07A7  0832               	movf	?___ftadd+2,w
  3853  07A8  00C2               	movwf	___ftdiv@f1+2
  3854  07A9  0141               	movlb	1	; select bank1
  3855  07AA  0841               	movf	_leersensores$811^(0+128),w
  3856  07AB  0140               	movlb	0	; select bank0
  3857  07AC  00B3               	movwf	___ftadd@f2
  3858  07AD  0141               	movlb	1	; select bank1
  3859  07AE  0842               	movf	(_leersensores$811+1)^(0+128),w
  3860  07AF  0140               	movlb	0	; select bank0
  3861  07B0  00B4               	movwf	___ftadd@f2+1
  3862  07B1  0141               	movlb	1	; select bank1
  3863  07B2  0843               	movf	(_leersensores$811+2)^(0+128),w
  3864  07B3  0140               	movlb	0	; select bank0
  3865  07B4  00B5               	movwf	___ftadd@f2+2
  3866  07B5  0866               	movf	_v7,w
  3867  07B6  00B0               	movwf	___ftadd@f1
  3868  07B7  0867               	movf	_v7+1,w
  3869  07B8  00B1               	movwf	___ftadd@f1+1
  3870  07B9  0868               	movf	_v7+2,w
  3871  07BA  00B2               	movwf	___ftadd@f1+2
  3872  07BB  318F  270A  3182   	fcall	___ftadd
  3873  07BE  0140               	movlb	0	; select bank0
  3874  07BF  0830               	movf	?___ftadd,w
  3875  07C0  00BD               	movwf	___ftdiv@f2
  3876  07C1  0831               	movf	?___ftadd+1,w
  3877  07C2  00BE               	movwf	___ftdiv@f2+1
  3878  07C3  0832               	movf	?___ftadd+2,w
  3879  07C4  00BF               	movwf	___ftdiv@f2+2
  3880  07C5  3180  200D  3182   	fcall	___ftdiv
  3881  07C8  0140               	movlb	0	; select bank0
  3882  07C9  083D               	movf	?___ftdiv,w
  3883  07CA  00CD               	movwf	___fttol@f1
  3884  07CB  083E               	movf	?___ftdiv+1,w
  3885  07CC  00CE               	movwf	___fttol@f1+1
  3886  07CD  083F               	movf	?___ftdiv+2,w
  3887  07CE  00CF               	movwf	___fttol@f1+2
  3888  07CF  318B  23FC         	fcall	___fttol
  3889  07D1  0140               	movlb	0	; select bank0
  3890  07D2  084E               	movf	?___fttol+1,w
  3891  07D3  00EA               	movwf	_lectura+1
  3892  07D4  084D               	movf	?___fttol,w
  3893  07D5  00E9               	movwf	_lectura
  3894                           
  3895                           ;main.c: 135: lectura=lectura-3500;
  3896  07D6  0869               	movf	_lectura,w
  3897  07D7  3E54               	addlw	84
  3898  07D8  00E9               	movwf	_lectura
  3899  07D9  30F2               	movlw	242
  3900  07DA  3D6A               	addwfc	_lectura+1,w
  3901  07DB  00EA               	movwf	_lectura+1
  3902                           
  3903                           ;main.c: 137: return lectura;
  3904  07DC  086A               	movf	_lectura+1,w
  3905  07DD  00DC               	movwf	?_leersensores+1
  3906  07DE  0869               	movf	_lectura,w
  3907  07DF  00DB               	movwf	?_leersensores
  3908  07E0  0008               	return
  3909  07E1                     __end_of_leersensores:	
  3910                           
  3911                           	psect	text7
  3912  0BFC                     __ptext7:	
  3913 ;; *************** function ___fttol *****************
  3914 ;; Defined at:
  3915 ;;		line 44 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\fttol.c"
  3916 ;; Parameters:    Size  Location     Type
  3917 ;;  f1              3   45[BANK0 ] float 
  3918 ;; Auto vars:     Size  Location     Type
  3919 ;;  lval            4   54[BANK0 ] unsigned long 
  3920 ;;  exp1            1   58[BANK0 ] unsigned char 
  3921 ;;  sign1           1   53[BANK0 ] unsigned char 
  3922 ;; Return value:  Size  Location     Type
  3923 ;;                  4   45[BANK0 ] long 
  3924 ;; Registers used:
  3925 ;;		wreg, status,2, status,0
  3926 ;; Tracked objects:
  3927 ;;		On entry : 0/0
  3928 ;;		On exit  : 0/0
  3929 ;;		Unchanged: 0/0
  3930 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
  3931 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  3932 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  3933 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  3934 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  3935 ;;Total ram usage:       14 bytes
  3936 ;; Hardware stack levels used:    1
  3937 ;; This function calls:
  3938 ;;		Nothing
  3939 ;; This function is called by:
  3940 ;;		_leersensores
  3941 ;; This function uses a non-reentrant model
  3942 ;;
  3943                           
  3944                           
  3945                           ;psect for function ___fttol
  3946  0BFC                     ___fttol:	
  3947                           
  3948                           ;incstack = 0
  3949                           ; Regs used in ___fttol: [wreg+status,2+status,0]
  3950  0BFC  0140               	movlb	0	; select bank0
  3951  0BFD  084D               	movf	___fttol@f1,w
  3952  0BFE  00D1               	movwf	??___fttol
  3953  0BFF  084E               	movf	___fttol@f1+1,w
  3954  0C00  00D2               	movwf	??___fttol+1
  3955  0C01  084F               	movf	___fttol@f1+2,w
  3956  0C02  00D3               	movwf	??___fttol+2
  3957  0C03  1003               	clrc
  3958  0C04  0D52               	rlf	??___fttol+1,w
  3959  0C05  0D53               	rlf	??___fttol+2,w
  3960  0C06  00D4               	movwf	??___fttol+3
  3961  0C07  0854               	movf	??___fttol+3,w
  3962  0C08  00DA               	movwf	___fttol@exp1
  3963  0C09  085A               	movf	___fttol@exp1,w
  3964  0C0A  1D03               	btfss	3,2
  3965  0C0B  2C15               	goto	l1692
  3966  0C0C  3000               	movlw	0
  3967  0C0D  00D0               	movwf	?___fttol+3
  3968  0C0E  3000               	movlw	0
  3969  0C0F  00CF               	movwf	?___fttol+2
  3970  0C10  3000               	movlw	0
  3971  0C11  00CE               	movwf	?___fttol+1
  3972  0C12  3000               	movlw	0
  3973  0C13  00CD               	movwf	?___fttol
  3974  0C14  0008               	return
  3975  0C15                     l1692:	
  3976  0C15  084D               	movf	___fttol@f1,w
  3977  0C16  00D1               	movwf	??___fttol
  3978  0C17  084E               	movf	___fttol@f1+1,w
  3979  0C18  00D2               	movwf	??___fttol+1
  3980  0C19  084F               	movf	___fttol@f1+2,w
  3981  0C1A  00D3               	movwf	??___fttol+2
  3982  0C1B  3017               	movlw	23
  3983  0C1C                     u2045:	
  3984  0C1C  36D3               	lsrf	??___fttol+2,f
  3985  0C1D  0CD2               	rrf	??___fttol+1,f
  3986  0C1E  0CD1               	rrf	??___fttol,f
  3987  0C1F  0B89               	decfsz	9,f
  3988  0C20  2C1C               	goto	u2045
  3989  0C21  0851               	movf	??___fttol,w
  3990  0C22  00D4               	movwf	??___fttol+3
  3991  0C23  0854               	movf	??___fttol+3,w
  3992  0C24  00D5               	movwf	___fttol@sign1
  3993  0C25  17CE               	bsf	___fttol@f1+1,7
  3994  0C26  30FF               	movlw	255
  3995  0C27  05CD               	andwf	___fttol@f1,f
  3996  0C28  30FF               	movlw	255
  3997  0C29  05CE               	andwf	___fttol@f1+1,f
  3998  0C2A  3000               	movlw	0
  3999  0C2B  05CF               	andwf	___fttol@f1+2,f
  4000  0C2C  084D               	movf	___fttol@f1,w
  4001  0C2D  00D6               	movwf	___fttol@lval
  4002  0C2E  084E               	movf	___fttol@f1+1,w
  4003  0C2F  00D7               	movwf	___fttol@lval+1
  4004  0C30  084F               	movf	___fttol@f1+2,w
  4005  0C31  00D8               	movwf	___fttol@lval+2
  4006  0C32  01D9               	clrf	___fttol@lval+3
  4007  0C33  308E               	movlw	142
  4008  0C34  02DA               	subwf	___fttol@exp1,f
  4009  0C35  1FDA               	btfss	___fttol@exp1,7
  4010  0C36  2C53               	goto	l1712
  4011  0C37  085A               	movf	___fttol@exp1,w
  4012  0C38  3A80               	xorlw	128
  4013  0C39  3E8F               	addlw	143
  4014  0C3A  1803               	skipnc
  4015  0C3B  2C45               	goto	l1710
  4016  0C3C  3000               	movlw	0
  4017  0C3D  00D0               	movwf	?___fttol+3
  4018  0C3E  3000               	movlw	0
  4019  0C3F  00CF               	movwf	?___fttol+2
  4020  0C40  3000               	movlw	0
  4021  0C41  00CE               	movwf	?___fttol+1
  4022  0C42  3000               	movlw	0
  4023  0C43  00CD               	movwf	?___fttol
  4024  0C44  0008               	return
  4025  0C45                     l1710:	
  4026  0C45  3001               	movlw	1
  4027  0C46                     u2075:	
  4028  0C46  36D9               	lsrf	___fttol@lval+3,f
  4029  0C47  0CD8               	rrf	___fttol@lval+2,f
  4030  0C48  0CD7               	rrf	___fttol@lval+1,f
  4031  0C49  0CD6               	rrf	___fttol@lval,f
  4032  0C4A  0B89               	decfsz	9,f
  4033  0C4B  2C46               	goto	u2075
  4034  0C4C  3001               	movlw	1
  4035  0C4D  00D1               	movwf	??___fttol
  4036  0C4E  0851               	movf	??___fttol,w
  4037  0C4F  07DA               	addwf	___fttol@exp1,f
  4038  0C50  1903               	btfsc	3,2
  4039  0C51  2C6C               	goto	l1720
  4040  0C52  2C45               	goto	l1710
  4041  0C53                     l1712:	
  4042  0C53  3018               	movlw	24
  4043  0C54  025A               	subwf	___fttol@exp1,w
  4044  0C55  1C03               	skipc
  4045  0C56  2C69               	goto	l525
  4046  0C57  3000               	movlw	0
  4047  0C58  00D0               	movwf	?___fttol+3
  4048  0C59  3000               	movlw	0
  4049  0C5A  00CF               	movwf	?___fttol+2
  4050  0C5B  3000               	movlw	0
  4051  0C5C  00CE               	movwf	?___fttol+1
  4052  0C5D  3000               	movlw	0
  4053  0C5E  00CD               	movwf	?___fttol
  4054  0C5F  0008               	return
  4055  0C60                     l1718:	
  4056  0C60  3001               	movlw	1
  4057  0C61                     u2105:	
  4058  0C61  35D6               	lslf	___fttol@lval,f
  4059  0C62  0DD7               	rlf	___fttol@lval+1,f
  4060  0C63  0DD8               	rlf	___fttol@lval+2,f
  4061  0C64  0DD9               	rlf	___fttol@lval+3,f
  4062  0C65  0B89               	decfsz	9,f
  4063  0C66  2C61               	goto	u2105
  4064  0C67  3001               	movlw	1
  4065  0C68  02DA               	subwf	___fttol@exp1,f
  4066  0C69                     l525:	
  4067  0C69  085A               	movf	___fttol@exp1,w
  4068  0C6A  1D03               	btfss	3,2
  4069  0C6B  2C60               	goto	l1718
  4070  0C6C                     l1720:	
  4071  0C6C  0855               	movf	___fttol@sign1,w
  4072  0C6D  1903               	btfsc	3,2
  4073  0C6E  2C7A               	goto	l1724
  4074  0C6F  09D6               	comf	___fttol@lval,f
  4075  0C70  09D7               	comf	___fttol@lval+1,f
  4076  0C71  09D8               	comf	___fttol@lval+2,f
  4077  0C72  09D9               	comf	___fttol@lval+3,f
  4078  0C73  0AD6               	incf	___fttol@lval,f
  4079  0C74  1903               	skipnz
  4080  0C75  0AD7               	incf	___fttol@lval+1,f
  4081  0C76  1903               	skipnz
  4082  0C77  0AD8               	incf	___fttol@lval+2,f
  4083  0C78  1903               	skipnz
  4084  0C79  0AD9               	incf	___fttol@lval+3,f
  4085  0C7A                     l1724:	
  4086  0C7A  0859               	movf	___fttol@lval+3,w
  4087  0C7B  00D0               	movwf	?___fttol+3
  4088  0C7C  0858               	movf	___fttol@lval+2,w
  4089  0C7D  00CF               	movwf	?___fttol+2
  4090  0C7E  0857               	movf	___fttol@lval+1,w
  4091  0C7F  00CE               	movwf	?___fttol+1
  4092  0C80  0856               	movf	___fttol@lval,w
  4093  0C81  00CD               	movwf	?___fttol
  4094  0C82  0008               	return
  4095  0C83                     __end_of___fttol:	
  4096                           
  4097                           	psect	text8
  4098  0E56                     __ptext8:	
  4099 ;; *************** function ___ftmul *****************
  4100 ;; Defined at:
  4101 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\ftmul.c"
  4102 ;; Parameters:    Size  Location     Type
  4103 ;;  f1              3    0[BANK0 ] float 
  4104 ;;  f2              3    3[BANK0 ] float 
  4105 ;; Auto vars:     Size  Location     Type
  4106 ;;  f3_as_produc    3   11[BANK0 ] unsigned um
  4107 ;;  sign            1   15[BANK0 ] unsigned char 
  4108 ;;  cntr            1   14[BANK0 ] unsigned char 
  4109 ;;  exp             1   10[BANK0 ] unsigned char 
  4110 ;; Return value:  Size  Location     Type
  4111 ;;                  3    0[BANK0 ] float 
  4112 ;; Registers used:
  4113 ;;		wreg, status,2, status,0, pclath, cstack
  4114 ;; Tracked objects:
  4115 ;;		On entry : 0/0
  4116 ;;		On exit  : 0/0
  4117 ;;		Unchanged: 0/0
  4118 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
  4119 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  4120 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  4121 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  4122 ;;      Totals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  4123 ;;Total ram usage:       16 bytes
  4124 ;; Hardware stack levels used:    1
  4125 ;; Hardware stack levels required when called:    1
  4126 ;; This function calls:
  4127 ;;		___ftpack
  4128 ;; This function is called by:
  4129 ;;		_leersensores
  4130 ;; This function uses a non-reentrant model
  4131 ;;
  4132                           
  4133                           
  4134                           ;psect for function ___ftmul
  4135  0E56                     ___ftmul:	
  4136                           
  4137                           ;incstack = 0
  4138                           ; Regs used in ___ftmul: [wreg+status,2+status,0+pclath+cstack]
  4139  0E56  0140               	movlb	0	; select bank0
  4140  0E57  0820               	movf	___ftmul@f1,w
  4141  0E58  00A6               	movwf	??___ftmul
  4142  0E59  0821               	movf	___ftmul@f1+1,w
  4143  0E5A  00A7               	movwf	??___ftmul+1
  4144  0E5B  0822               	movf	___ftmul@f1+2,w
  4145  0E5C  00A8               	movwf	??___ftmul+2
  4146  0E5D  1003               	clrc
  4147  0E5E  0D27               	rlf	??___ftmul+1,w
  4148  0E5F  0D28               	rlf	??___ftmul+2,w
  4149  0E60  00A9               	movwf	??___ftmul+3
  4150  0E61  0829               	movf	??___ftmul+3,w
  4151  0E62  00AA               	movwf	___ftmul@exp
  4152  0E63  082A               	movf	___ftmul@exp,w
  4153  0E64  1D03               	btfss	3,2
  4154  0E65  2E6D               	goto	l1642
  4155  0E66  3000               	movlw	0
  4156  0E67  00A0               	movwf	?___ftmul
  4157  0E68  3000               	movlw	0
  4158  0E69  00A1               	movwf	?___ftmul+1
  4159  0E6A  3000               	movlw	0
  4160  0E6B  00A2               	movwf	?___ftmul+2
  4161  0E6C  0008               	return
  4162  0E6D                     l1642:	
  4163  0E6D  0823               	movf	___ftmul@f2,w
  4164  0E6E  00A6               	movwf	??___ftmul
  4165  0E6F  0824               	movf	___ftmul@f2+1,w
  4166  0E70  00A7               	movwf	??___ftmul+1
  4167  0E71  0825               	movf	___ftmul@f2+2,w
  4168  0E72  00A8               	movwf	??___ftmul+2
  4169  0E73  1003               	clrc
  4170  0E74  0D27               	rlf	??___ftmul+1,w
  4171  0E75  0D28               	rlf	??___ftmul+2,w
  4172  0E76  00A9               	movwf	??___ftmul+3
  4173  0E77  0829               	movf	??___ftmul+3,w
  4174  0E78  00AF               	movwf	___ftmul@sign
  4175  0E79  082F               	movf	___ftmul@sign,w
  4176  0E7A  1D03               	btfss	3,2
  4177  0E7B  2E83               	goto	l1648
  4178  0E7C  3000               	movlw	0
  4179  0E7D  00A0               	movwf	?___ftmul
  4180  0E7E  3000               	movlw	0
  4181  0E7F  00A1               	movwf	?___ftmul+1
  4182  0E80  3000               	movlw	0
  4183  0E81  00A2               	movwf	?___ftmul+2
  4184  0E82  0008               	return
  4185  0E83                     l1648:	
  4186  0E83  082F               	movf	___ftmul@sign,w
  4187  0E84  3E7B               	addlw	123
  4188  0E85  00A6               	movwf	??___ftmul
  4189  0E86  0826               	movf	??___ftmul,w
  4190  0E87  07AA               	addwf	___ftmul@exp,f
  4191  0E88  0820               	movf	___ftmul@f1,w
  4192  0E89  00A6               	movwf	??___ftmul
  4193  0E8A  0821               	movf	___ftmul@f1+1,w
  4194  0E8B  00A7               	movwf	??___ftmul+1
  4195  0E8C  0822               	movf	___ftmul@f1+2,w
  4196  0E8D  00A8               	movwf	??___ftmul+2
  4197  0E8E  3010               	movlw	16
  4198  0E8F                     u1935:	
  4199  0E8F  36A8               	lsrf	??___ftmul+2,f
  4200  0E90  0CA7               	rrf	??___ftmul+1,f
  4201  0E91  0CA6               	rrf	??___ftmul,f
  4202  0E92  0B89               	decfsz	9,f
  4203  0E93  2E8F               	goto	u1935
  4204  0E94  0826               	movf	??___ftmul,w
  4205  0E95  00A9               	movwf	??___ftmul+3
  4206  0E96  0829               	movf	??___ftmul+3,w
  4207  0E97  00AF               	movwf	___ftmul@sign
  4208  0E98  0823               	movf	___ftmul@f2,w
  4209  0E99  00A6               	movwf	??___ftmul
  4210  0E9A  0824               	movf	___ftmul@f2+1,w
  4211  0E9B  00A7               	movwf	??___ftmul+1
  4212  0E9C  0825               	movf	___ftmul@f2+2,w
  4213  0E9D  00A8               	movwf	??___ftmul+2
  4214  0E9E  3010               	movlw	16
  4215  0E9F                     u1945:	
  4216  0E9F  36A8               	lsrf	??___ftmul+2,f
  4217  0EA0  0CA7               	rrf	??___ftmul+1,f
  4218  0EA1  0CA6               	rrf	??___ftmul,f
  4219  0EA2  0B89               	decfsz	9,f
  4220  0EA3  2E9F               	goto	u1945
  4221  0EA4  0826               	movf	??___ftmul,w
  4222  0EA5  00A9               	movwf	??___ftmul+3
  4223  0EA6  0829               	movf	??___ftmul+3,w
  4224  0EA7  06AF               	xorwf	___ftmul@sign,f
  4225  0EA8  3080               	movlw	128
  4226  0EA9  00A6               	movwf	??___ftmul
  4227  0EAA  0826               	movf	??___ftmul,w
  4228  0EAB  05AF               	andwf	___ftmul@sign,f
  4229  0EAC  17A1               	bsf	___ftmul@f1+1,7
  4230  0EAD  17A4               	bsf	___ftmul@f2+1,7
  4231  0EAE  30FF               	movlw	255
  4232  0EAF  05A3               	andwf	___ftmul@f2,f
  4233  0EB0  30FF               	movlw	255
  4234  0EB1  05A4               	andwf	___ftmul@f2+1,f
  4235  0EB2  3000               	movlw	0
  4236  0EB3  05A5               	andwf	___ftmul@f2+2,f
  4237  0EB4  3000               	movlw	0
  4238  0EB5  00AB               	movwf	___ftmul@f3_as_product
  4239  0EB6  3000               	movlw	0
  4240  0EB7  00AC               	movwf	___ftmul@f3_as_product+1
  4241  0EB8  3000               	movlw	0
  4242  0EB9  00AD               	movwf	___ftmul@f3_as_product+2
  4243  0EBA  3007               	movlw	7
  4244  0EBB  00A6               	movwf	??___ftmul
  4245  0EBC  0826               	movf	??___ftmul,w
  4246  0EBD  00AE               	movwf	___ftmul@cntr
  4247  0EBE                     l1660:	
  4248  0EBE  1C20               	btfss	___ftmul@f1,0
  4249  0EBF  2EC6               	goto	l1664
  4250  0EC0  0823               	movf	___ftmul@f2,w
  4251  0EC1  07AB               	addwf	___ftmul@f3_as_product,f
  4252  0EC2  0824               	movf	___ftmul@f2+1,w
  4253  0EC3  3DAC               	addwfc	___ftmul@f3_as_product+1,f
  4254  0EC4  0825               	movf	___ftmul@f2+2,w
  4255  0EC5  3DAD               	addwfc	___ftmul@f3_as_product+2,f
  4256  0EC6                     l1664:	
  4257  0EC6  3001               	movlw	1
  4258  0EC7                     u1965:	
  4259  0EC7  36A2               	lsrf	___ftmul@f1+2,f
  4260  0EC8  0CA1               	rrf	___ftmul@f1+1,f
  4261  0EC9  0CA0               	rrf	___ftmul@f1,f
  4262  0ECA  0B89               	decfsz	9,f
  4263  0ECB  2EC7               	goto	u1965
  4264  0ECC  3001               	movlw	1
  4265  0ECD                     u1975:	
  4266  0ECD  35A3               	lslf	___ftmul@f2,f
  4267  0ECE  0DA4               	rlf	___ftmul@f2+1,f
  4268  0ECF  0DA5               	rlf	___ftmul@f2+2,f
  4269  0ED0  0B89               	decfsz	9,f
  4270  0ED1  2ECD               	goto	u1975
  4271  0ED2  3001               	movlw	1
  4272  0ED3  02AE               	subwf	___ftmul@cntr,f
  4273  0ED4  1D03               	btfss	3,2
  4274  0ED5  2EBE               	goto	l1660
  4275  0ED6  3009               	movlw	9
  4276  0ED7  00A6               	movwf	??___ftmul
  4277  0ED8  0826               	movf	??___ftmul,w
  4278  0ED9  00AE               	movwf	___ftmul@cntr
  4279  0EDA                     l1672:	
  4280  0EDA  1C20               	btfss	___ftmul@f1,0
  4281  0EDB  2EE2               	goto	l1676
  4282  0EDC  0823               	movf	___ftmul@f2,w
  4283  0EDD  07AB               	addwf	___ftmul@f3_as_product,f
  4284  0EDE  0824               	movf	___ftmul@f2+1,w
  4285  0EDF  3DAC               	addwfc	___ftmul@f3_as_product+1,f
  4286  0EE0  0825               	movf	___ftmul@f2+2,w
  4287  0EE1  3DAD               	addwfc	___ftmul@f3_as_product+2,f
  4288  0EE2                     l1676:	
  4289  0EE2  3001               	movlw	1
  4290  0EE3                     u2005:	
  4291  0EE3  36A2               	lsrf	___ftmul@f1+2,f
  4292  0EE4  0CA1               	rrf	___ftmul@f1+1,f
  4293  0EE5  0CA0               	rrf	___ftmul@f1,f
  4294  0EE6  0B89               	decfsz	9,f
  4295  0EE7  2EE3               	goto	u2005
  4296  0EE8  3001               	movlw	1
  4297  0EE9                     u2015:	
  4298  0EE9  36AD               	lsrf	___ftmul@f3_as_product+2,f
  4299  0EEA  0CAC               	rrf	___ftmul@f3_as_product+1,f
  4300  0EEB  0CAB               	rrf	___ftmul@f3_as_product,f
  4301  0EEC  0B89               	decfsz	9,f
  4302  0EED  2EE9               	goto	u2015
  4303  0EEE  3001               	movlw	1
  4304  0EEF  02AE               	subwf	___ftmul@cntr,f
  4305  0EF0  1D03               	btfss	3,2
  4306  0EF1  2EDA               	goto	l1672
  4307  0EF2  082B               	movf	___ftmul@f3_as_product,w
  4308  0EF3  00F0               	movwf	___ftpack@arg
  4309  0EF4  082C               	movf	___ftmul@f3_as_product+1,w
  4310  0EF5  00F1               	movwf	___ftpack@arg+1
  4311  0EF6  082D               	movf	___ftmul@f3_as_product+2,w
  4312  0EF7  00F2               	movwf	___ftpack@arg+2
  4313  0EF8  082A               	movf	___ftmul@exp,w
  4314  0EF9  00A6               	movwf	??___ftmul
  4315  0EFA  0826               	movf	??___ftmul,w
  4316  0EFB  00F3               	movwf	___ftpack@exp
  4317  0EFC  082F               	movf	___ftmul@sign,w
  4318  0EFD  00A7               	movwf	??___ftmul+1
  4319  0EFE  0827               	movf	??___ftmul+1,w
  4320  0EFF  00F4               	movwf	___ftpack@sign
  4321  0F00  318B  2318         	fcall	___ftpack
  4322  0F02  0870               	movf	?___ftpack,w
  4323  0F03  0140               	movlb	0	; select bank0
  4324  0F04  00A0               	movwf	?___ftmul
  4325  0F05  0871               	movf	?___ftpack+1,w
  4326  0F06  00A1               	movwf	?___ftmul+1
  4327  0F07  0872               	movf	?___ftpack+2,w
  4328  0F08  00A2               	movwf	?___ftmul+2
  4329  0F09  0008               	return
  4330  0F0A                     __end_of___ftmul:	
  4331                           
  4332                           	psect	text9
  4333  000D                     __ptext9:	
  4334 ;; *************** function ___ftdiv *****************
  4335 ;; Defined at:
  4336 ;;		line 56 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\ftdiv.c"
  4337 ;; Parameters:    Size  Location     Type
  4338 ;;  f2              3   29[BANK0 ] float 
  4339 ;;  f1              3   32[BANK0 ] float 
  4340 ;; Auto vars:     Size  Location     Type
  4341 ;;  f3              3   40[BANK0 ] float 
  4342 ;;  sign            1   44[BANK0 ] unsigned char 
  4343 ;;  exp             1   43[BANK0 ] unsigned char 
  4344 ;;  cntr            1   39[BANK0 ] unsigned char 
  4345 ;; Return value:  Size  Location     Type
  4346 ;;                  3   29[BANK0 ] float 
  4347 ;; Registers used:
  4348 ;;		wreg, status,2, status,0, pclath, cstack
  4349 ;; Tracked objects:
  4350 ;;		On entry : 0/0
  4351 ;;		On exit  : 0/0
  4352 ;;		Unchanged: 0/0
  4353 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
  4354 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  4355 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  4356 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  4357 ;;      Totals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  4358 ;;Total ram usage:       16 bytes
  4359 ;; Hardware stack levels used:    1
  4360 ;; Hardware stack levels required when called:    1
  4361 ;; This function calls:
  4362 ;;		___ftpack
  4363 ;; This function is called by:
  4364 ;;		_leersensores
  4365 ;; This function uses a non-reentrant model
  4366 ;;
  4367                           
  4368                           
  4369                           ;psect for function ___ftdiv
  4370  000D                     ___ftdiv:	
  4371                           
  4372                           ;incstack = 0
  4373                           ; Regs used in ___ftdiv: [wreg+status,2+status,0+pclath+cstack]
  4374  000D  0140               	movlb	0	; select bank0
  4375  000E  0840               	movf	___ftdiv@f1,w
  4376  000F  00C3               	movwf	??___ftdiv
  4377  0010  0841               	movf	___ftdiv@f1+1,w
  4378  0011  00C4               	movwf	??___ftdiv+1
  4379  0012  0842               	movf	___ftdiv@f1+2,w
  4380  0013  00C5               	movwf	??___ftdiv+2
  4381  0014  1003               	clrc
  4382  0015  0D44               	rlf	??___ftdiv+1,w
  4383  0016  0D45               	rlf	??___ftdiv+2,w
  4384  0017  00C6               	movwf	??___ftdiv+3
  4385  0018  0846               	movf	??___ftdiv+3,w
  4386  0019  00CB               	movwf	___ftdiv@exp
  4387  001A  084B               	movf	___ftdiv@exp,w
  4388  001B  1D03               	btfss	3,2
  4389  001C  2824               	goto	l1600
  4390  001D  3000               	movlw	0
  4391  001E  00BD               	movwf	?___ftdiv
  4392  001F  3000               	movlw	0
  4393  0020  00BE               	movwf	?___ftdiv+1
  4394  0021  3000               	movlw	0
  4395  0022  00BF               	movwf	?___ftdiv+2
  4396  0023  0008               	return
  4397  0024                     l1600:	
  4398  0024  083D               	movf	___ftdiv@f2,w
  4399  0025  00C3               	movwf	??___ftdiv
  4400  0026  083E               	movf	___ftdiv@f2+1,w
  4401  0027  00C4               	movwf	??___ftdiv+1
  4402  0028  083F               	movf	___ftdiv@f2+2,w
  4403  0029  00C5               	movwf	??___ftdiv+2
  4404  002A  1003               	clrc
  4405  002B  0D44               	rlf	??___ftdiv+1,w
  4406  002C  0D45               	rlf	??___ftdiv+2,w
  4407  002D  00C6               	movwf	??___ftdiv+3
  4408  002E  0846               	movf	??___ftdiv+3,w
  4409  002F  00CC               	movwf	___ftdiv@sign
  4410  0030  084C               	movf	___ftdiv@sign,w
  4411  0031  1D03               	btfss	3,2
  4412  0032  283A               	goto	l1606
  4413  0033  3000               	movlw	0
  4414  0034  00BD               	movwf	?___ftdiv
  4415  0035  3000               	movlw	0
  4416  0036  00BE               	movwf	?___ftdiv+1
  4417  0037  3000               	movlw	0
  4418  0038  00BF               	movwf	?___ftdiv+2
  4419  0039  0008               	return
  4420  003A                     l1606:	
  4421  003A  3000               	movlw	0
  4422  003B  00C8               	movwf	___ftdiv@f3
  4423  003C  3000               	movlw	0
  4424  003D  00C9               	movwf	___ftdiv@f3+1
  4425  003E  3000               	movlw	0
  4426  003F  00CA               	movwf	___ftdiv@f3+2
  4427  0040  3089               	movlw	137
  4428  0041  074C               	addwf	___ftdiv@sign,w
  4429  0042  00C3               	movwf	??___ftdiv
  4430  0043  0843               	movf	??___ftdiv,w
  4431  0044  02CB               	subwf	___ftdiv@exp,f
  4432  0045  0840               	movf	___ftdiv@f1,w
  4433  0046  00C3               	movwf	??___ftdiv
  4434  0047  0841               	movf	___ftdiv@f1+1,w
  4435  0048  00C4               	movwf	??___ftdiv+1
  4436  0049  0842               	movf	___ftdiv@f1+2,w
  4437  004A  00C5               	movwf	??___ftdiv+2
  4438  004B  3010               	movlw	16
  4439  004C                     u1855:	
  4440  004C  36C5               	lsrf	??___ftdiv+2,f
  4441  004D  0CC4               	rrf	??___ftdiv+1,f
  4442  004E  0CC3               	rrf	??___ftdiv,f
  4443  004F  0B89               	decfsz	9,f
  4444  0050  284C               	goto	u1855
  4445  0051  0843               	movf	??___ftdiv,w
  4446  0052  00C6               	movwf	??___ftdiv+3
  4447  0053  0846               	movf	??___ftdiv+3,w
  4448  0054  00CC               	movwf	___ftdiv@sign
  4449  0055  083D               	movf	___ftdiv@f2,w
  4450  0056  00C3               	movwf	??___ftdiv
  4451  0057  083E               	movf	___ftdiv@f2+1,w
  4452  0058  00C4               	movwf	??___ftdiv+1
  4453  0059  083F               	movf	___ftdiv@f2+2,w
  4454  005A  00C5               	movwf	??___ftdiv+2
  4455  005B  3010               	movlw	16
  4456  005C                     u1865:	
  4457  005C  36C5               	lsrf	??___ftdiv+2,f
  4458  005D  0CC4               	rrf	??___ftdiv+1,f
  4459  005E  0CC3               	rrf	??___ftdiv,f
  4460  005F  0B89               	decfsz	9,f
  4461  0060  285C               	goto	u1865
  4462  0061  0843               	movf	??___ftdiv,w
  4463  0062  00C6               	movwf	??___ftdiv+3
  4464  0063  0846               	movf	??___ftdiv+3,w
  4465  0064  06CC               	xorwf	___ftdiv@sign,f
  4466  0065  3080               	movlw	128
  4467  0066  00C3               	movwf	??___ftdiv
  4468  0067  0843               	movf	??___ftdiv,w
  4469  0068  05CC               	andwf	___ftdiv@sign,f
  4470  0069  17C1               	bsf	___ftdiv@f1+1,7
  4471  006A  30FF               	movlw	255
  4472  006B  05C0               	andwf	___ftdiv@f1,f
  4473  006C  30FF               	movlw	255
  4474  006D  05C1               	andwf	___ftdiv@f1+1,f
  4475  006E  3000               	movlw	0
  4476  006F  05C2               	andwf	___ftdiv@f1+2,f
  4477  0070  17BE               	bsf	___ftdiv@f2+1,7
  4478  0071  30FF               	movlw	255
  4479  0072  05BD               	andwf	___ftdiv@f2,f
  4480  0073  30FF               	movlw	255
  4481  0074  05BE               	andwf	___ftdiv@f2+1,f
  4482  0075  3000               	movlw	0
  4483  0076  05BF               	andwf	___ftdiv@f2+2,f
  4484  0077  3018               	movlw	24
  4485  0078  00C3               	movwf	??___ftdiv
  4486  0079  0843               	movf	??___ftdiv,w
  4487  007A  00C7               	movwf	___ftdiv@cntr
  4488  007B                     l1620:	
  4489  007B  3001               	movlw	1
  4490  007C                     u1875:	
  4491  007C  35C8               	lslf	___ftdiv@f3,f
  4492  007D  0DC9               	rlf	___ftdiv@f3+1,f
  4493  007E  0DCA               	rlf	___ftdiv@f3+2,f
  4494  007F  0B89               	decfsz	9,f
  4495  0080  287C               	goto	u1875
  4496  0081  083F               	movf	___ftdiv@f2+2,w
  4497  0082  0242               	subwf	___ftdiv@f1+2,w
  4498  0083  1D03               	skipz
  4499  0084  288B               	goto	u1885
  4500  0085  083E               	movf	___ftdiv@f2+1,w
  4501  0086  0241               	subwf	___ftdiv@f1+1,w
  4502  0087  1D03               	skipz
  4503  0088  288B               	goto	u1885
  4504  0089  083D               	movf	___ftdiv@f2,w
  4505  008A  0240               	subwf	___ftdiv@f1,w
  4506  008B                     u1885:	
  4507  008B  1C03               	skipc
  4508  008C  2894               	goto	l1628
  4509  008D  083D               	movf	___ftdiv@f2,w
  4510  008E  02C0               	subwf	___ftdiv@f1,f
  4511  008F  083E               	movf	___ftdiv@f2+1,w
  4512  0090  3BC1               	subwfb	___ftdiv@f1+1,f
  4513  0091  083F               	movf	___ftdiv@f2+2,w
  4514  0092  3BC2               	subwfb	___ftdiv@f1+2,f
  4515  0093  1448               	bsf	___ftdiv@f3,0
  4516  0094                     l1628:	
  4517  0094  3001               	movlw	1
  4518  0095                     u1895:	
  4519  0095  35C0               	lslf	___ftdiv@f1,f
  4520  0096  0DC1               	rlf	___ftdiv@f1+1,f
  4521  0097  0DC2               	rlf	___ftdiv@f1+2,f
  4522  0098  0B89               	decfsz	9,f
  4523  0099  2895               	goto	u1895
  4524  009A  3001               	movlw	1
  4525  009B  02C7               	subwf	___ftdiv@cntr,f
  4526  009C  1D03               	btfss	3,2
  4527  009D  287B               	goto	l1620
  4528  009E  0848               	movf	___ftdiv@f3,w
  4529  009F  00F0               	movwf	___ftpack@arg
  4530  00A0  0849               	movf	___ftdiv@f3+1,w
  4531  00A1  00F1               	movwf	___ftpack@arg+1
  4532  00A2  084A               	movf	___ftdiv@f3+2,w
  4533  00A3  00F2               	movwf	___ftpack@arg+2
  4534  00A4  084B               	movf	___ftdiv@exp,w
  4535  00A5  00C3               	movwf	??___ftdiv
  4536  00A6  0843               	movf	??___ftdiv,w
  4537  00A7  00F3               	movwf	___ftpack@exp
  4538  00A8  084C               	movf	___ftdiv@sign,w
  4539  00A9  00C4               	movwf	??___ftdiv+1
  4540  00AA  0844               	movf	??___ftdiv+1,w
  4541  00AB  00F4               	movwf	___ftpack@sign
  4542  00AC  318B  2318         	fcall	___ftpack
  4543  00AE  0870               	movf	?___ftpack,w
  4544  00AF  0140               	movlb	0	; select bank0
  4545  00B0  00BD               	movwf	?___ftdiv
  4546  00B1  0871               	movf	?___ftpack+1,w
  4547  00B2  00BE               	movwf	?___ftdiv+1
  4548  00B3  0872               	movf	?___ftpack+2,w
  4549  00B4  00BF               	movwf	?___ftdiv+2
  4550  00B5  0008               	return
  4551  00B6                     __end_of___ftdiv:	
  4552                           
  4553                           	psect	text10
  4554  0F0A                     __ptext10:	
  4555 ;; *************** function ___ftadd *****************
  4556 ;; Defined at:
  4557 ;;		line 86 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\ftadd.c"
  4558 ;; Parameters:    Size  Location     Type
  4559 ;;  f1              3   16[BANK0 ] float 
  4560 ;;  f2              3   19[BANK0 ] float 
  4561 ;; Auto vars:     Size  Location     Type
  4562 ;;  exp1            1   28[BANK0 ] unsigned char 
  4563 ;;  exp2            1   27[BANK0 ] unsigned char 
  4564 ;;  sign            1   26[BANK0 ] unsigned char 
  4565 ;; Return value:  Size  Location     Type
  4566 ;;                  3   16[BANK0 ] float 
  4567 ;; Registers used:
  4568 ;;		wreg, status,2, status,0, pclath, cstack
  4569 ;; Tracked objects:
  4570 ;;		On entry : 0/0
  4571 ;;		On exit  : 0/0
  4572 ;;		Unchanged: 0/0
  4573 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
  4574 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  4575 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  4576 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  4577 ;;      Totals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  4578 ;;Total ram usage:       13 bytes
  4579 ;; Hardware stack levels used:    1
  4580 ;; Hardware stack levels required when called:    1
  4581 ;; This function calls:
  4582 ;;		___ftpack
  4583 ;; This function is called by:
  4584 ;;		_leersensores
  4585 ;; This function uses a non-reentrant model
  4586 ;;
  4587                           
  4588                           
  4589                           ;psect for function ___ftadd
  4590  0F0A                     ___ftadd:	
  4591                           
  4592                           ;incstack = 0
  4593                           ; Regs used in ___ftadd: [wreg+status,2+status,0+pclath+cstack]
  4594  0F0A  0140               	movlb	0	; select bank0
  4595  0F0B  0830               	movf	___ftadd@f1,w
  4596  0F0C  00B6               	movwf	??___ftadd
  4597  0F0D  0831               	movf	___ftadd@f1+1,w
  4598  0F0E  00B7               	movwf	??___ftadd+1
  4599  0F0F  0832               	movf	___ftadd@f1+2,w
  4600  0F10  00B8               	movwf	??___ftadd+2
  4601  0F11  1003               	clrc
  4602  0F12  0D37               	rlf	??___ftadd+1,w
  4603  0F13  0D38               	rlf	??___ftadd+2,w
  4604  0F14  00B9               	movwf	??___ftadd+3
  4605  0F15  0839               	movf	??___ftadd+3,w
  4606  0F16  00BC               	movwf	___ftadd@exp1
  4607  0F17  0833               	movf	___ftadd@f2,w
  4608  0F18  00B6               	movwf	??___ftadd
  4609  0F19  0834               	movf	___ftadd@f2+1,w
  4610  0F1A  00B7               	movwf	??___ftadd+1
  4611  0F1B  0835               	movf	___ftadd@f2+2,w
  4612  0F1C  00B8               	movwf	??___ftadd+2
  4613  0F1D  1003               	clrc
  4614  0F1E  0D37               	rlf	??___ftadd+1,w
  4615  0F1F  0D38               	rlf	??___ftadd+2,w
  4616  0F20  00B9               	movwf	??___ftadd+3
  4617  0F21  0839               	movf	??___ftadd+3,w
  4618  0F22  00BB               	movwf	___ftadd@exp2
  4619  0F23  083C               	movf	___ftadd@exp1,w
  4620  0F24  1903               	btfsc	3,2
  4621  0F25  2F32               	goto	l1530
  4622  0F26  083B               	movf	___ftadd@exp2,w
  4623  0F27  023C               	subwf	___ftadd@exp1,w
  4624  0F28  1803               	skipnc
  4625  0F29  2F39               	goto	l1534
  4626  0F2A  033C               	decf	___ftadd@exp1,w
  4627  0F2B  3AFF               	xorlw	255
  4628  0F2C  073B               	addwf	___ftadd@exp2,w
  4629  0F2D  00B6               	movwf	??___ftadd
  4630  0F2E  3019               	movlw	25
  4631  0F2F  0236               	subwf	??___ftadd,w
  4632  0F30  1C03               	skipc
  4633  0F31  2F39               	goto	l1534
  4634  0F32                     l1530:	
  4635  0F32  0833               	movf	___ftadd@f2,w
  4636  0F33  00B0               	movwf	?___ftadd
  4637  0F34  0834               	movf	___ftadd@f2+1,w
  4638  0F35  00B1               	movwf	?___ftadd+1
  4639  0F36  0835               	movf	___ftadd@f2+2,w
  4640  0F37  00B2               	movwf	?___ftadd+2
  4641  0F38  0008               	return
  4642  0F39                     l1534:	
  4643  0F39  083B               	movf	___ftadd@exp2,w
  4644  0F3A  1903               	btfsc	3,2
  4645  0F3B  0008               	return
  4646  0F3C  083C               	movf	___ftadd@exp1,w
  4647  0F3D  023B               	subwf	___ftadd@exp2,w
  4648  0F3E  1803               	skipnc
  4649  0F3F  2F48               	goto	l1540
  4650  0F40  033B               	decf	___ftadd@exp2,w
  4651  0F41  3AFF               	xorlw	255
  4652  0F42  073C               	addwf	___ftadd@exp1,w
  4653  0F43  00B6               	movwf	??___ftadd
  4654  0F44  3019               	movlw	25
  4655  0F45  0236               	subwf	??___ftadd,w
  4656  0F46  1803               	btfsc	3,0
  4657  0F47  0008               	return
  4658  0F48                     l1540:	
  4659  0F48  3006               	movlw	6
  4660  0F49  00B6               	movwf	??___ftadd
  4661  0F4A  0836               	movf	??___ftadd,w
  4662  0F4B  00BA               	movwf	___ftadd@sign
  4663  0F4C  1BB2               	btfsc	___ftadd@f1+2,7
  4664  0F4D  17BA               	bsf	___ftadd@sign,7
  4665  0F4E  1BB5               	btfsc	___ftadd@f2+2,7
  4666  0F4F  173A               	bsf	___ftadd@sign,6
  4667  0F50  17B1               	bsf	___ftadd@f1+1,7
  4668  0F51  30FF               	movlw	255
  4669  0F52  05B0               	andwf	___ftadd@f1,f
  4670  0F53  30FF               	movlw	255
  4671  0F54  05B1               	andwf	___ftadd@f1+1,f
  4672  0F55  3000               	movlw	0
  4673  0F56  05B2               	andwf	___ftadd@f1+2,f
  4674  0F57  17B4               	bsf	___ftadd@f2+1,7
  4675  0F58  30FF               	movlw	255
  4676  0F59  05B3               	andwf	___ftadd@f2,f
  4677  0F5A  30FF               	movlw	255
  4678  0F5B  05B4               	andwf	___ftadd@f2+1,f
  4679  0F5C  3000               	movlw	0
  4680  0F5D  05B5               	andwf	___ftadd@f2+2,f
  4681  0F5E  083B               	movf	___ftadd@exp2,w
  4682  0F5F  023C               	subwf	___ftadd@exp1,w
  4683  0F60  1803               	skipnc
  4684  0F61  2F84               	goto	l1562
  4685  0F62                     l1552:	
  4686  0F62  3001               	movlw	1
  4687  0F63                     u1695:	
  4688  0F63  35B3               	lslf	___ftadd@f2,f
  4689  0F64  0DB4               	rlf	___ftadd@f2+1,f
  4690  0F65  0DB5               	rlf	___ftadd@f2+2,f
  4691  0F66  0B89               	decfsz	9,f
  4692  0F67  2F63               	goto	u1695
  4693  0F68  3001               	movlw	1
  4694  0F69  02BB               	subwf	___ftadd@exp2,f
  4695  0F6A  083B               	movf	___ftadd@exp2,w
  4696  0F6B  063C               	xorwf	___ftadd@exp1,w
  4697  0F6C  1903               	skipnz
  4698  0F6D  2F7F               	goto	l1560
  4699  0F6E  3001               	movlw	1
  4700  0F6F  02BA               	subwf	___ftadd@sign,f
  4701  0F70  083A               	movf	___ftadd@sign,w
  4702  0F71  3907               	andlw	7
  4703  0F72  1903               	btfsc	3,2
  4704  0F73  2F7F               	goto	l1560
  4705  0F74  2F62               	goto	l1552
  4706  0F75                     l1558:	
  4707  0F75  3001               	movlw	1
  4708  0F76                     u1725:	
  4709  0F76  36B2               	lsrf	___ftadd@f1+2,f
  4710  0F77  0CB1               	rrf	___ftadd@f1+1,f
  4711  0F78  0CB0               	rrf	___ftadd@f1,f
  4712  0F79  0B89               	decfsz	9,f
  4713  0F7A  2F76               	goto	u1725
  4714  0F7B  3001               	movlw	1
  4715  0F7C  00B6               	movwf	??___ftadd
  4716  0F7D  0836               	movf	??___ftadd,w
  4717  0F7E  07BC               	addwf	___ftadd@exp1,f
  4718  0F7F                     l1560:	
  4719  0F7F  083C               	movf	___ftadd@exp1,w
  4720  0F80  063B               	xorwf	___ftadd@exp2,w
  4721  0F81  1903               	btfsc	3,2
  4722  0F82  2FA9               	goto	l465
  4723  0F83  2F75               	goto	l1558
  4724  0F84                     l1562:	
  4725  0F84  083C               	movf	___ftadd@exp1,w
  4726  0F85  023B               	subwf	___ftadd@exp2,w
  4727  0F86  1803               	skipnc
  4728  0F87  2FA9               	goto	l465
  4729  0F88                     l1564:	
  4730  0F88  3001               	movlw	1
  4731  0F89                     u1755:	
  4732  0F89  35B0               	lslf	___ftadd@f1,f
  4733  0F8A  0DB1               	rlf	___ftadd@f1+1,f
  4734  0F8B  0DB2               	rlf	___ftadd@f1+2,f
  4735  0F8C  0B89               	decfsz	9,f
  4736  0F8D  2F89               	goto	u1755
  4737  0F8E  3001               	movlw	1
  4738  0F8F  02BC               	subwf	___ftadd@exp1,f
  4739  0F90  083B               	movf	___ftadd@exp2,w
  4740  0F91  063C               	xorwf	___ftadd@exp1,w
  4741  0F92  1903               	skipnz
  4742  0F93  2FA5               	goto	l1572
  4743  0F94  3001               	movlw	1
  4744  0F95  02BA               	subwf	___ftadd@sign,f
  4745  0F96  083A               	movf	___ftadd@sign,w
  4746  0F97  3907               	andlw	7
  4747  0F98  1903               	btfsc	3,2
  4748  0F99  2FA5               	goto	l1572
  4749  0F9A  2F88               	goto	l1564
  4750  0F9B                     l1570:	
  4751  0F9B  3001               	movlw	1
  4752  0F9C                     u1785:	
  4753  0F9C  36B5               	lsrf	___ftadd@f2+2,f
  4754  0F9D  0CB4               	rrf	___ftadd@f2+1,f
  4755  0F9E  0CB3               	rrf	___ftadd@f2,f
  4756  0F9F  0B89               	decfsz	9,f
  4757  0FA0  2F9C               	goto	u1785
  4758  0FA1  3001               	movlw	1
  4759  0FA2  00B6               	movwf	??___ftadd
  4760  0FA3  0836               	movf	??___ftadd,w
  4761  0FA4  07BB               	addwf	___ftadd@exp2,f
  4762  0FA5                     l1572:	
  4763  0FA5  083C               	movf	___ftadd@exp1,w
  4764  0FA6  063B               	xorwf	___ftadd@exp2,w
  4765  0FA7  1D03               	skipz
  4766  0FA8  2F9B               	goto	l1570
  4767  0FA9                     l465:	
  4768  0FA9  1FBA               	btfss	___ftadd@sign,7
  4769  0FAA  2FBB               	goto	l1576
  4770  0FAB  30FF               	movlw	255
  4771  0FAC  06B0               	xorwf	___ftadd@f1,f
  4772  0FAD  30FF               	movlw	255
  4773  0FAE  06B1               	xorwf	___ftadd@f1+1,f
  4774  0FAF  30FF               	movlw	255
  4775  0FB0  06B2               	xorwf	___ftadd@f1+2,f
  4776  0FB1  3001               	movlw	1
  4777  0FB2  07B0               	addwf	___ftadd@f1,f
  4778  0FB3  3000               	movlw	0
  4779  0FB4  1803               	skipnc
  4780  0FB5  3001               	movlw	1
  4781  0FB6  07B1               	addwf	___ftadd@f1+1,f
  4782  0FB7  3000               	movlw	0
  4783  0FB8  1803               	skipnc
  4784  0FB9  3001               	movlw	1
  4785  0FBA  07B2               	addwf	___ftadd@f1+2,f
  4786  0FBB                     l1576:	
  4787  0FBB  1F3A               	btfss	___ftadd@sign,6
  4788  0FBC  2FCD               	goto	l1580
  4789  0FBD  30FF               	movlw	255
  4790  0FBE  06B3               	xorwf	___ftadd@f2,f
  4791  0FBF  30FF               	movlw	255
  4792  0FC0  06B4               	xorwf	___ftadd@f2+1,f
  4793  0FC1  30FF               	movlw	255
  4794  0FC2  06B5               	xorwf	___ftadd@f2+2,f
  4795  0FC3  3001               	movlw	1
  4796  0FC4  07B3               	addwf	___ftadd@f2,f
  4797  0FC5  3000               	movlw	0
  4798  0FC6  1803               	skipnc
  4799  0FC7  3001               	movlw	1
  4800  0FC8  07B4               	addwf	___ftadd@f2+1,f
  4801  0FC9  3000               	movlw	0
  4802  0FCA  1803               	skipnc
  4803  0FCB  3001               	movlw	1
  4804  0FCC  07B5               	addwf	___ftadd@f2+2,f
  4805  0FCD                     l1580:	
  4806  0FCD  01BA               	clrf	___ftadd@sign
  4807  0FCE  0830               	movf	___ftadd@f1,w
  4808  0FCF  07B3               	addwf	___ftadd@f2,f
  4809  0FD0  0831               	movf	___ftadd@f1+1,w
  4810  0FD1  3DB4               	addwfc	___ftadd@f2+1,f
  4811  0FD2  0832               	movf	___ftadd@f1+2,w
  4812  0FD3  3DB5               	addwfc	___ftadd@f2+2,f
  4813  0FD4  1FB5               	btfss	___ftadd@f2+2,7
  4814  0FD5  2FE8               	goto	l1590
  4815  0FD6  30FF               	movlw	255
  4816  0FD7  06B3               	xorwf	___ftadd@f2,f
  4817  0FD8  30FF               	movlw	255
  4818  0FD9  06B4               	xorwf	___ftadd@f2+1,f
  4819  0FDA  30FF               	movlw	255
  4820  0FDB  06B5               	xorwf	___ftadd@f2+2,f
  4821  0FDC  3001               	movlw	1
  4822  0FDD  07B3               	addwf	___ftadd@f2,f
  4823  0FDE  3000               	movlw	0
  4824  0FDF  1803               	skipnc
  4825  0FE0  3001               	movlw	1
  4826  0FE1  07B4               	addwf	___ftadd@f2+1,f
  4827  0FE2  3000               	movlw	0
  4828  0FE3  1803               	skipnc
  4829  0FE4  3001               	movlw	1
  4830  0FE5  07B5               	addwf	___ftadd@f2+2,f
  4831  0FE6  01BA               	clrf	___ftadd@sign
  4832  0FE7  0ABA               	incf	___ftadd@sign,f
  4833  0FE8                     l1590:	
  4834  0FE8  0833               	movf	___ftadd@f2,w
  4835  0FE9  00F0               	movwf	___ftpack@arg
  4836  0FEA  0834               	movf	___ftadd@f2+1,w
  4837  0FEB  00F1               	movwf	___ftpack@arg+1
  4838  0FEC  0835               	movf	___ftadd@f2+2,w
  4839  0FED  00F2               	movwf	___ftpack@arg+2
  4840  0FEE  083C               	movf	___ftadd@exp1,w
  4841  0FEF  00B6               	movwf	??___ftadd
  4842  0FF0  0836               	movf	??___ftadd,w
  4843  0FF1  00F3               	movwf	___ftpack@exp
  4844  0FF2  083A               	movf	___ftadd@sign,w
  4845  0FF3  00B7               	movwf	??___ftadd+1
  4846  0FF4  0837               	movf	??___ftadd+1,w
  4847  0FF5  00F4               	movwf	___ftpack@sign
  4848  0FF6  318B  2318         	fcall	___ftpack
  4849  0FF8  0870               	movf	?___ftpack,w
  4850  0FF9  0140               	movlb	0	; select bank0
  4851  0FFA  00B0               	movwf	?___ftadd
  4852  0FFB  0871               	movf	?___ftpack+1,w
  4853  0FFC  00B1               	movwf	?___ftadd+1
  4854  0FFD  0872               	movf	?___ftpack+2,w
  4855  0FFE  00B2               	movwf	?___ftadd+2
  4856  0FFF  0008               	return
  4857  1000                     __end_of___ftadd:	
  4858                           
  4859                           	psect	text11
  4860  0A63                     __ptext11:	
  4861 ;; *************** function ___awtoft *****************
  4862 ;; Defined at:
  4863 ;;		line 32 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\awtoft.c"
  4864 ;; Parameters:    Size  Location     Type
  4865 ;;  c               2    8[COMMON] int 
  4866 ;; Auto vars:     Size  Location     Type
  4867 ;;  sign            1   13[COMMON] unsigned char 
  4868 ;; Return value:  Size  Location     Type
  4869 ;;                  3    8[COMMON] float 
  4870 ;; Registers used:
  4871 ;;		wreg, status,2, status,0, pclath, cstack
  4872 ;; Tracked objects:
  4873 ;;		On entry : 0/0
  4874 ;;		On exit  : 0/0
  4875 ;;		Unchanged: 0/0
  4876 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
  4877 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  4878 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  4879 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  4880 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  4881 ;;Total ram usage:        6 bytes
  4882 ;; Hardware stack levels used:    1
  4883 ;; Hardware stack levels required when called:    1
  4884 ;; This function calls:
  4885 ;;		___ftpack
  4886 ;; This function is called by:
  4887 ;;		_leersensores
  4888 ;; This function uses a non-reentrant model
  4889 ;;
  4890                           
  4891                           
  4892                           ;psect for function ___awtoft
  4893  0A63                     ___awtoft:	
  4894                           
  4895                           ;incstack = 0
  4896                           ; Regs used in ___awtoft: [wreg+status,2+status,0+pclath+cstack]
  4897  0A63  01FD               	clrf	___awtoft@sign
  4898  0A64  1FF9               	btfss	___awtoft@c+1,7
  4899  0A65  2A6D               	goto	l1520
  4900  0A66  09F8               	comf	___awtoft@c,f
  4901  0A67  09F9               	comf	___awtoft@c+1,f
  4902  0A68  0AF8               	incf	___awtoft@c,f
  4903  0A69  1903               	skipnz
  4904  0A6A  0AF9               	incf	___awtoft@c+1,f
  4905  0A6B  01FD               	clrf	___awtoft@sign
  4906  0A6C  0AFD               	incf	___awtoft@sign,f
  4907  0A6D                     l1520:	
  4908  0A6D  0878               	movf	___awtoft@c,w
  4909  0A6E  00F0               	movwf	___ftpack@arg
  4910  0A6F  0879               	movf	___awtoft@c+1,w
  4911  0A70  00F1               	movwf	___ftpack@arg+1
  4912  0A71  01F2               	clrf	___ftpack@arg+2
  4913  0A72  308E               	movlw	142
  4914  0A73  00FB               	movwf	??___awtoft
  4915  0A74  087B               	movf	??___awtoft,w
  4916  0A75  00F3               	movwf	___ftpack@exp
  4917  0A76  087D               	movf	___awtoft@sign,w
  4918  0A77  00FC               	movwf	??___awtoft+1
  4919  0A78  087C               	movf	??___awtoft+1,w
  4920  0A79  00F4               	movwf	___ftpack@sign
  4921  0A7A  318B  2318         	fcall	___ftpack
  4922  0A7C  0870               	movf	?___ftpack,w
  4923  0A7D  00F8               	movwf	?___awtoft
  4924  0A7E  0871               	movf	?___ftpack+1,w
  4925  0A7F  00F9               	movwf	?___awtoft+1
  4926  0A80  0872               	movf	?___ftpack+2,w
  4927  0A81  00FA               	movwf	?___awtoft+2
  4928  0A82  0008               	return
  4929  0A83                     __end_of___awtoft:	
  4930                           
  4931                           	psect	text12
  4932  0B18                     __ptext12:	
  4933 ;; *************** function ___ftpack *****************
  4934 ;; Defined at:
  4935 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\float.c"
  4936 ;; Parameters:    Size  Location     Type
  4937 ;;  arg             3    0[COMMON] unsigned um
  4938 ;;  exp             1    3[COMMON] unsigned char 
  4939 ;;  sign            1    4[COMMON] unsigned char 
  4940 ;; Auto vars:     Size  Location     Type
  4941 ;;		None
  4942 ;; Return value:  Size  Location     Type
  4943 ;;                  3    0[COMMON] float 
  4944 ;; Registers used:
  4945 ;;		wreg, status,2, status,0
  4946 ;; Tracked objects:
  4947 ;;		On entry : 0/0
  4948 ;;		On exit  : 0/0
  4949 ;;		Unchanged: 0/0
  4950 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
  4951 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  4952 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  4953 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  4954 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  4955 ;;Total ram usage:        8 bytes
  4956 ;; Hardware stack levels used:    1
  4957 ;; This function calls:
  4958 ;;		Nothing
  4959 ;; This function is called by:
  4960 ;;		___awtoft
  4961 ;;		___ftadd
  4962 ;;		___ftdiv
  4963 ;;		___ftmul
  4964 ;; This function uses a non-reentrant model
  4965 ;;
  4966                           
  4967                           
  4968                           ;psect for function ___ftpack
  4969  0B18                     ___ftpack:	
  4970                           
  4971                           ;incstack = 0
  4972                           ; Regs used in ___ftpack: [wreg+status,2+status,0]
  4973  0B18  0873               	movf	___ftpack@exp,w
  4974  0B19  1903               	btfsc	3,2
  4975  0B1A  2B20               	goto	l1412
  4976  0B1B  0872               	movf	___ftpack@arg+2,w
  4977  0B1C  0471               	iorwf	___ftpack@arg+1,w
  4978  0B1D  0470               	iorwf	___ftpack@arg,w
  4979  0B1E  1D03               	skipz
  4980  0B1F  2B31               	goto	l1418
  4981  0B20                     l1412:	
  4982  0B20  3000               	movlw	0
  4983  0B21  00F0               	movwf	?___ftpack
  4984  0B22  3000               	movlw	0
  4985  0B23  00F1               	movwf	?___ftpack+1
  4986  0B24  3000               	movlw	0
  4987  0B25  00F2               	movwf	?___ftpack+2
  4988  0B26  0008               	return
  4989  0B27                     l1416:	
  4990  0B27  3001               	movlw	1
  4991  0B28  00F5               	movwf	??___ftpack
  4992  0B29  0875               	movf	??___ftpack,w
  4993  0B2A  07F3               	addwf	___ftpack@exp,f
  4994  0B2B  3001               	movlw	1
  4995  0B2C                     u1315:	
  4996  0B2C  36F2               	lsrf	___ftpack@arg+2,f
  4997  0B2D  0CF1               	rrf	___ftpack@arg+1,f
  4998  0B2E  0CF0               	rrf	___ftpack@arg,f
  4999  0B2F  0B89               	decfsz	9,f
  5000  0B30  2B2C               	goto	u1315
  5001  0B31                     l1418:	
  5002  0B31  30FE               	movlw	254
  5003  0B32  0572               	andwf	___ftpack@arg+2,w
  5004  0B33  1903               	btfsc	3,2
  5005  0B34  2B4A               	goto	l434
  5006  0B35  2B27               	goto	l1416
  5007  0B36                     l1420:	
  5008  0B36  3001               	movlw	1
  5009  0B37  00F5               	movwf	??___ftpack
  5010  0B38  0875               	movf	??___ftpack,w
  5011  0B39  07F3               	addwf	___ftpack@exp,f
  5012  0B3A  3001               	movlw	1
  5013  0B3B  07F0               	addwf	___ftpack@arg,f
  5014  0B3C  3000               	movlw	0
  5015  0B3D  1803               	skipnc
  5016  0B3E  3001               	movlw	1
  5017  0B3F  07F1               	addwf	___ftpack@arg+1,f
  5018  0B40  3000               	movlw	0
  5019  0B41  1803               	skipnc
  5020  0B42  3001               	movlw	1
  5021  0B43  07F2               	addwf	___ftpack@arg+2,f
  5022  0B44  3001               	movlw	1
  5023  0B45                     u1335:	
  5024  0B45  36F2               	lsrf	___ftpack@arg+2,f
  5025  0B46  0CF1               	rrf	___ftpack@arg+1,f
  5026  0B47  0CF0               	rrf	___ftpack@arg,f
  5027  0B48  0B89               	decfsz	9,f
  5028  0B49  2B45               	goto	u1335
  5029  0B4A                     l434:	
  5030  0B4A  30FF               	movlw	255
  5031  0B4B  0572               	andwf	___ftpack@arg+2,w
  5032  0B4C  1903               	btfsc	3,2
  5033  0B4D  2B57               	goto	l1428
  5034  0B4E  2B36               	goto	l1420
  5035  0B4F                     l1426:	
  5036  0B4F  3001               	movlw	1
  5037  0B50  02F3               	subwf	___ftpack@exp,f
  5038  0B51  3001               	movlw	1
  5039  0B52                     u1355:	
  5040  0B52  35F0               	lslf	___ftpack@arg,f
  5041  0B53  0DF1               	rlf	___ftpack@arg+1,f
  5042  0B54  0DF2               	rlf	___ftpack@arg+2,f
  5043  0B55  0B89               	decfsz	9,f
  5044  0B56  2B52               	goto	u1355
  5045  0B57                     l1428:	
  5046  0B57  1BF1               	btfsc	___ftpack@arg+1,7
  5047  0B58  2B5D               	goto	l441
  5048  0B59  3002               	movlw	2
  5049  0B5A  0273               	subwf	___ftpack@exp,w
  5050  0B5B  1803               	skipnc
  5051  0B5C  2B4F               	goto	l1426
  5052  0B5D                     l441:	
  5053  0B5D  1873               	btfsc	___ftpack@exp,0
  5054  0B5E  2B65               	goto	l442
  5055  0B5F  30FF               	movlw	255
  5056  0B60  05F0               	andwf	___ftpack@arg,f
  5057  0B61  307F               	movlw	127
  5058  0B62  05F1               	andwf	___ftpack@arg+1,f
  5059  0B63  30FF               	movlw	255
  5060  0B64  05F2               	andwf	___ftpack@arg+2,f
  5061  0B65                     l442:	
  5062  0B65  1003               	clrc
  5063  0B66  0CF3               	rrf	___ftpack@exp,f
  5064  0B67  0873               	movf	___ftpack@exp,w
  5065  0B68  00F5               	movwf	??___ftpack
  5066  0B69  01F6               	clrf	??___ftpack+1
  5067  0B6A  01F7               	clrf	??___ftpack+2
  5068  0B6B  3010               	movlw	16
  5069  0B6C                     u1395:	
  5070  0B6C  35F5               	lslf	??___ftpack,f
  5071  0B6D  0DF6               	rlf	??___ftpack+1,f
  5072  0B6E  0DF7               	rlf	??___ftpack+2,f
  5073  0B6F  0B89               	decfsz	9,f
  5074  0B70  2B6C               	goto	u1395
  5075  0B71  0875               	movf	??___ftpack,w
  5076  0B72  04F0               	iorwf	___ftpack@arg,f
  5077  0B73  0876               	movf	??___ftpack+1,w
  5078  0B74  04F1               	iorwf	___ftpack@arg+1,f
  5079  0B75  0877               	movf	??___ftpack+2,w
  5080  0B76  04F2               	iorwf	___ftpack@arg+2,f
  5081  0B77  0874               	movf	___ftpack@sign,w
  5082  0B78  1903               	btfsc	3,2
  5083  0B79  0008               	return
  5084  0B7A  17F2               	bsf	___ftpack@arg+2,7
  5085  0B7B  0008               	return
  5086  0B7C                     __end_of___ftpack:	
  5087                           
  5088                           	psect	text13
  5089  0AE3                     __ptext13:	
  5090 ;; *************** function _Lcd_Out2 *****************
  5091 ;; Defined at:
  5092 ;;		line 115 in file "flex_lcd.h"
  5093 ;; Parameters:    Size  Location     Type
  5094 ;;  y               1    wreg     unsigned char 
  5095 ;;  x               1    3[COMMON] unsigned char 
  5096 ;;  buffer          1    4[COMMON] PTR unsigned char 
  5097 ;;		 -> main@buffer1(16), 
  5098 ;; Auto vars:     Size  Location     Type
  5099 ;;  y               1    6[COMMON] unsigned char 
  5100 ;;  data            1    7[COMMON] unsigned char 
  5101 ;; Return value:  Size  Location     Type
  5102 ;;                  1    wreg      void 
  5103 ;; Registers used:
  5104 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5105 ;; Tracked objects:
  5106 ;;		On entry : 0/0
  5107 ;;		On exit  : 0/0
  5108 ;;		Unchanged: 0/0
  5109 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
  5110 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  5111 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  5112 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  5113 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  5114 ;;Total ram usage:        5 bytes
  5115 ;; Hardware stack levels used:    1
  5116 ;; Hardware stack levels required when called:    1
  5117 ;; This function calls:
  5118 ;;		_Lcd_Chr_CP
  5119 ;;		_Lcd_Cmd
  5120 ;; This function is called by:
  5121 ;;		_main
  5122 ;; This function uses a non-reentrant model
  5123 ;;
  5124                           
  5125                           
  5126                           ;psect for function _Lcd_Out2
  5127  0AE3                     _Lcd_Out2:	
  5128                           
  5129                           ;incstack = 0
  5130                           ; Regs used in _Lcd_Out2: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  5131                           ;Lcd_Out2@y stored from wreg
  5132  0AE3  00F6               	movwf	Lcd_Out2@y
  5133                           
  5134                           ;flex_lcd.h: 117: unsigned char data;
  5135                           ;flex_lcd.h: 118: switch (y)
  5136  0AE4  2AF4               	goto	l1838
  5137  0AE5                     l1828:	
  5138                           ;flex_lcd.h: 119: {
  5139                           ;flex_lcd.h: 120: case 1: data = 128 + x; break;
  5140                           
  5141  0AE5  0873               	movf	Lcd_Out2@x,w
  5142  0AE6  3E80               	addlw	128
  5143  0AE7  2AF0               	goto	L4
  5144  0AE8                     l1830:	
  5145                           ;flex_lcd.h: 121: case 2: data = 192 + x; break;
  5146                           
  5147  0AE8  0873               	movf	Lcd_Out2@x,w
  5148  0AE9  3EC0               	addlw	192
  5149  0AEA  2AF0               	goto	L4
  5150  0AEB                     l1832:	
  5151                           ;flex_lcd.h: 122: case 3: data = 148 + x; break;
  5152                           
  5153  0AEB  0873               	movf	Lcd_Out2@x,w
  5154  0AEC  3E94               	addlw	148
  5155  0AED  2AF0               	goto	L4
  5156  0AEE                     l1834:	
  5157                           ;flex_lcd.h: 123: case 4: data = 212 + x; break;
  5158                           
  5159  0AEE  0873               	movf	Lcd_Out2@x,w
  5160  0AEF  3ED4               	addlw	212
  5161  0AF0                     L4:	
  5162  0AF0  00F5               	movwf	??_Lcd_Out2
  5163  0AF1  0875               	movf	??_Lcd_Out2,w
  5164  0AF2  00F7               	movwf	Lcd_Out2@data
  5165                           
  5166                           ;flex_lcd.h: 125: }
  5167                           
  5168                           ;flex_lcd.h: 124: default: break;
  5169  0AF3  2B02               	goto	l1840
  5170  0AF4                     l1838:	
  5171  0AF4  0876               	movf	Lcd_Out2@y,w
  5172                           
  5173                           ; Switch size 1, requested type "space"
  5174                           ; Number of cases is 4, Range of values is 1 to 4
  5175                           ; switch strategies available:
  5176                           ; Name         Instructions Cycles
  5177                           ; simple_byte           13     7 (average)
  5178                           ; direct_byte           17     9 (fixed)
  5179                           ; jumptable            263     9 (fixed)
  5180                           ;	Chosen strategy is simple_byte
  5181  0AF5  3A01               	xorlw	1	; case 1
  5182  0AF6  1903               	skipnz
  5183  0AF7  2AE5               	goto	l1828
  5184  0AF8  3A03               	xorlw	3	; case 2
  5185  0AF9  1903               	skipnz
  5186  0AFA  2AE8               	goto	l1830
  5187  0AFB  3A01               	xorlw	1	; case 3
  5188  0AFC  1903               	skipnz
  5189  0AFD  2AEB               	goto	l1832
  5190  0AFE  3A07               	xorlw	7	; case 4
  5191  0AFF  1903               	skipnz
  5192  0B00  2AEE               	goto	l1834
  5193  0B01  2B02               	goto	l1840
  5194  0B02                     l1840:	
  5195                           
  5196                           ;flex_lcd.h: 126: Lcd_Cmd(data);
  5197  0B02  0877               	movf	Lcd_Out2@data,w
  5198  0B03  318C  2483  318A   	fcall	_Lcd_Cmd
  5199  0B06                     l1846:	
  5200                           ;flex_lcd.h: 127: while(*buffer)
  5201                           
  5202  0B06  0874               	movf	Lcd_Out2@buffer,w
  5203  0B07  0086               	movwf	6
  5204  0B08  0187               	clrf	7
  5205  0B09  0801               	movf	1,w
  5206  0B0A  1903               	btfsc	3,2
  5207  0B0B  0008               	return
  5208                           
  5209                           ;flex_lcd.h: 128: {
  5210                           ;flex_lcd.h: 129: Lcd_Chr_CP(*buffer);
  5211  0B0C  0874               	movf	Lcd_Out2@buffer,w
  5212  0B0D  0086               	movwf	6
  5213  0B0E  0187               	clrf	7
  5214  0B0F  0801               	movf	1,w
  5215  0B10  318D  2516  318A   	fcall	_Lcd_Chr_CP
  5216                           
  5217                           ;flex_lcd.h: 130: buffer++;
  5218  0B13  3001               	movlw	1
  5219  0B14  00F5               	movwf	??_Lcd_Out2
  5220  0B15  0875               	movf	??_Lcd_Out2,w
  5221  0B16  07F4               	addwf	Lcd_Out2@buffer,f
  5222  0B17  2B06               	goto	l1846
  5223  0B18                     __end_of_Lcd_Out2:	
  5224                           ;flex_lcd.h: 131: }
  5225                           ;flex_lcd.h: 132: return;
  5226                           
  5227                           
  5228                           	psect	text14
  5229  0D16                     __ptext14:	
  5230 ;; *************** function _Lcd_Chr_CP *****************
  5231 ;; Defined at:
  5232 ;;		line 136 in file "flex_lcd.h"
  5233 ;; Parameters:    Size  Location     Type
  5234 ;;  data            1    wreg     unsigned char 
  5235 ;; Auto vars:     Size  Location     Type
  5236 ;;  data            1    2[COMMON] unsigned char 
  5237 ;; Return value:  Size  Location     Type
  5238 ;;                  1    wreg      void 
  5239 ;; Registers used:
  5240 ;;		wreg, status,2, status,0
  5241 ;; Tracked objects:
  5242 ;;		On entry : 0/0
  5243 ;;		On exit  : 0/0
  5244 ;;		Unchanged: 0/0
  5245 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
  5246 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  5247 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  5248 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  5249 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  5250 ;;Total ram usage:        3 bytes
  5251 ;; Hardware stack levels used:    1
  5252 ;; This function calls:
  5253 ;;		Nothing
  5254 ;; This function is called by:
  5255 ;;		_Lcd_Out2
  5256 ;;		_Lcd_Out
  5257 ;; This function uses a non-reentrant model
  5258 ;;
  5259                           
  5260                           
  5261                           ;psect for function _Lcd_Chr_CP
  5262  0D16                     _Lcd_Chr_CP:	
  5263                           
  5264                           ;incstack = 0
  5265                           ; Regs used in _Lcd_Chr_CP: [wreg+status,2+status,0]
  5266                           ;Lcd_Chr_CP@data stored from wreg
  5267  0D16  00F2               	movwf	Lcd_Chr_CP@data
  5268                           
  5269                           ;flex_lcd.h: 137: PORTDbits.RD3 = 0; PORTDbits.RD2 = 1;
  5270  0D17  0140               	movlb	0	; select bank0
  5271  0D18  118F               	bcf	15,3	;volatile
  5272  0D19  150F               	bsf	15,2	;volatile
  5273                           
  5274                           ;flex_lcd.h: 138: PORTCbits.RC3 = (data & 0b10000000)>>7; PORTDbits.RD0 = (data & 0b0100
      +                          0000)>>6;
  5275  0D1A  0872               	movf	Lcd_Chr_CP@data,w
  5276  0D1B  00F0               	movwf	??_Lcd_Chr_CP
  5277  0D1C  3007               	movlw	7
  5278  0D1D                     u1475:	
  5279  0D1D  36F0               	lsrf	??_Lcd_Chr_CP,f
  5280  0D1E  0B89               	decfsz	9,f
  5281  0D1F  2D1D               	goto	u1475
  5282  0D20  0870               	movf	??_Lcd_Chr_CP,w
  5283  0D21  3901               	andlw	1
  5284  0D22  00F1               	movwf	??_Lcd_Chr_CP+1
  5285  0D23  0DF1               	rlf	??_Lcd_Chr_CP+1,f
  5286  0D24  0DF1               	rlf	??_Lcd_Chr_CP+1,f
  5287  0D25  0DF1               	rlf	??_Lcd_Chr_CP+1,f
  5288  0D26  080E               	movf	14,w	;volatile
  5289  0D27  0671               	xorwf	??_Lcd_Chr_CP+1,w
  5290  0D28  39F7               	andlw	-9
  5291  0D29  0671               	xorwf	??_Lcd_Chr_CP+1,w
  5292  0D2A  008E               	movwf	14	;volatile
  5293  0D2B  0872               	movf	Lcd_Chr_CP@data,w
  5294  0D2C  00F0               	movwf	??_Lcd_Chr_CP
  5295  0D2D  3006               	movlw	6
  5296  0D2E                     u1485:	
  5297  0D2E  36F0               	lsrf	??_Lcd_Chr_CP,f
  5298  0D2F  0B89               	decfsz	9,f
  5299  0D30  2D2E               	goto	u1485
  5300  0D31  3001               	movlw	1
  5301  0D32  0570               	andwf	??_Lcd_Chr_CP,w
  5302  0D33  00F1               	movwf	??_Lcd_Chr_CP+1
  5303  0D34  080F               	movf	15,w	;volatile
  5304  0D35  0671               	xorwf	??_Lcd_Chr_CP+1,w
  5305  0D36  39FE               	andlw	-2
  5306  0D37  0671               	xorwf	??_Lcd_Chr_CP+1,w
  5307  0D38  008F               	movwf	15	;volatile
  5308                           
  5309                           ;flex_lcd.h: 139: PORTDbits.RD1 = (data & 0b00100000)>>5; PORTCbits.RC4 = (data & 0b0001
      +                          0000)>>4;
  5310  0D39  0872               	movf	Lcd_Chr_CP@data,w
  5311  0D3A  00F0               	movwf	??_Lcd_Chr_CP
  5312  0D3B  3005               	movlw	5
  5313  0D3C                     u1495:	
  5314  0D3C  36F0               	lsrf	??_Lcd_Chr_CP,f
  5315  0D3D  0B89               	decfsz	9,f
  5316  0D3E  2D3C               	goto	u1495
  5317  0D3F  0870               	movf	??_Lcd_Chr_CP,w
  5318  0D40  3901               	andlw	1
  5319  0D41  00F1               	movwf	??_Lcd_Chr_CP+1
  5320  0D42  0DF1               	rlf	??_Lcd_Chr_CP+1,f
  5321  0D43  080F               	movf	15,w	;volatile
  5322  0D44  0671               	xorwf	??_Lcd_Chr_CP+1,w
  5323  0D45  39FD               	andlw	-3
  5324  0D46  0671               	xorwf	??_Lcd_Chr_CP+1,w
  5325  0D47  008F               	movwf	15	;volatile
  5326  0D48  0872               	movf	Lcd_Chr_CP@data,w
  5327  0D49  00F0               	movwf	??_Lcd_Chr_CP
  5328  0D4A  3004               	movlw	4
  5329  0D4B                     u1505:	
  5330  0D4B  36F0               	lsrf	??_Lcd_Chr_CP,f
  5331  0D4C  0B89               	decfsz	9,f
  5332  0D4D  2D4B               	goto	u1505
  5333  0D4E  0870               	movf	??_Lcd_Chr_CP,w
  5334  0D4F  3901               	andlw	1
  5335  0D50  00F1               	movwf	??_Lcd_Chr_CP+1
  5336  0D51  0EF1               	swapf	??_Lcd_Chr_CP+1,f
  5337  0D52  080E               	movf	14,w	;volatile
  5338  0D53  0671               	xorwf	??_Lcd_Chr_CP+1,w
  5339  0D54  39EF               	andlw	-17
  5340  0D55  0671               	xorwf	??_Lcd_Chr_CP+1,w
  5341  0D56  008E               	movwf	14	;volatile
  5342                           
  5343                           ;flex_lcd.h: 140: _delay(10);
  5344  0D57  3003               	movlw	3
  5345  0D58                     u2747:	
  5346  0D58  0B89               	decfsz	9,f
  5347  0D59  2D58               	goto	u2747
  5348  0D5A  0000               	nop
  5349                           
  5350                           ;flex_lcd.h: 141: PORTDbits.RD3 = 1; _delay((unsigned long)((5)*(32000000/4000000.0))); 
      +                          PORTDbits.RD3 = 0;
  5351  0D5B  0140               	movlb	0	; select bank0
  5352  0D5C  158F               	bsf	15,3	;volatile
  5353  0D5D  300D               	movlw	13
  5354  0D5E                     u2757:	
  5355  0D5E  0B89               	decfsz	9,f
  5356  0D5F  2D5E               	goto	u2757
  5357  0D60  0000               	nop
  5358  0D61  0140               	movlb	0	; select bank0
  5359  0D62  118F               	bcf	15,3	;volatile
  5360                           
  5361                           ;flex_lcd.h: 142: PORTCbits.RC3 = (data & 0b00001000)>>3; PORTDbits.RD0 = (data & 0b0000
      +                          0100)>>2;
  5362  0D63  0872               	movf	Lcd_Chr_CP@data,w
  5363  0D64  00F0               	movwf	??_Lcd_Chr_CP
  5364  0D65  3003               	movlw	3
  5365  0D66                     u1515:	
  5366  0D66  36F0               	lsrf	??_Lcd_Chr_CP,f
  5367  0D67  0B89               	decfsz	9,f
  5368  0D68  2D66               	goto	u1515
  5369  0D69  0870               	movf	??_Lcd_Chr_CP,w
  5370  0D6A  3901               	andlw	1
  5371  0D6B  00F1               	movwf	??_Lcd_Chr_CP+1
  5372  0D6C  0DF1               	rlf	??_Lcd_Chr_CP+1,f
  5373  0D6D  0DF1               	rlf	??_Lcd_Chr_CP+1,f
  5374  0D6E  0DF1               	rlf	??_Lcd_Chr_CP+1,f
  5375  0D6F  080E               	movf	14,w	;volatile
  5376  0D70  0671               	xorwf	??_Lcd_Chr_CP+1,w
  5377  0D71  39F7               	andlw	-9
  5378  0D72  0671               	xorwf	??_Lcd_Chr_CP+1,w
  5379  0D73  008E               	movwf	14	;volatile
  5380  0D74  0872               	movf	Lcd_Chr_CP@data,w
  5381  0D75  00F0               	movwf	??_Lcd_Chr_CP
  5382  0D76  3002               	movlw	2
  5383  0D77                     u1525:	
  5384  0D77  36F0               	lsrf	??_Lcd_Chr_CP,f
  5385  0D78  0B89               	decfsz	9,f
  5386  0D79  2D77               	goto	u1525
  5387  0D7A  3001               	movlw	1
  5388  0D7B  0570               	andwf	??_Lcd_Chr_CP,w
  5389  0D7C  00F1               	movwf	??_Lcd_Chr_CP+1
  5390  0D7D  080F               	movf	15,w	;volatile
  5391  0D7E  0671               	xorwf	??_Lcd_Chr_CP+1,w
  5392  0D7F  39FE               	andlw	-2
  5393  0D80  0671               	xorwf	??_Lcd_Chr_CP+1,w
  5394  0D81  008F               	movwf	15	;volatile
  5395                           
  5396                           ;flex_lcd.h: 143: PORTDbits.RD1 = (data & 0b00000010)>>1; PORTCbits.RC4 = (data & 0b0000
      +                          0001);
  5397  0D82  3672               	lsrf	Lcd_Chr_CP@data,w
  5398  0D83  3901               	andlw	1
  5399  0D84  00F0               	movwf	??_Lcd_Chr_CP
  5400  0D85  0DF0               	rlf	??_Lcd_Chr_CP,f
  5401  0D86  080F               	movf	15,w	;volatile
  5402  0D87  0670               	xorwf	??_Lcd_Chr_CP,w
  5403  0D88  39FD               	andlw	-3
  5404  0D89  0670               	xorwf	??_Lcd_Chr_CP,w
  5405  0D8A  008F               	movwf	15	;volatile
  5406  0D8B  0872               	movf	Lcd_Chr_CP@data,w
  5407  0D8C  3901               	andlw	1
  5408  0D8D  00F0               	movwf	??_Lcd_Chr_CP
  5409  0D8E  0EF0               	swapf	??_Lcd_Chr_CP,f
  5410  0D8F  080E               	movf	14,w	;volatile
  5411  0D90  0670               	xorwf	??_Lcd_Chr_CP,w
  5412  0D91  39EF               	andlw	-17
  5413  0D92  0670               	xorwf	??_Lcd_Chr_CP,w
  5414  0D93  008E               	movwf	14	;volatile
  5415                           
  5416                           ;flex_lcd.h: 144: _delay(10);
  5417  0D94  3003               	movlw	3
  5418  0D95                     u2767:	
  5419  0D95  0B89               	decfsz	9,f
  5420  0D96  2D95               	goto	u2767
  5421  0D97  0000               	nop
  5422                           
  5423                           ;flex_lcd.h: 145: PORTDbits.RD3 = 1; _delay((unsigned long)((5)*(32000000/4000000.0))); 
      +                          PORTDbits.RD3 = 0;
  5424  0D98  0140               	movlb	0	; select bank0
  5425  0D99  158F               	bsf	15,3	;volatile
  5426  0D9A  300D               	movlw	13
  5427  0D9B                     u2777:	
  5428  0D9B  0B89               	decfsz	9,f
  5429  0D9C  2D9B               	goto	u2777
  5430  0D9D  0000               	nop
  5431  0D9E  0140               	movlb	0	; select bank0
  5432  0D9F  118F               	bcf	15,3	;volatile
  5433                           
  5434                           ;flex_lcd.h: 146: _delay((unsigned long)((5)*(32000000/4000000.0))); _delay((unsigned lo
      +                          ng)((5500)*(32000000/4000000.0)));
  5435  0DA0  300D               	movlw	13
  5436  0DA1                     u2787:	
  5437  0DA1  0B89               	decfsz	9,f
  5438  0DA2  2DA1               	goto	u2787
  5439  0DA3  0000               	nop
  5440  0DA4  303A               	movlw	58
  5441  0DA5  00F0               	movwf	??_Lcd_Chr_CP
  5442  0DA6  3023               	movlw	35
  5443  0DA7                     u2797:	
  5444  0DA7  0B89               	decfsz	9,f
  5445  0DA8  2DA7               	goto	u2797
  5446  0DA9  0BF0               	decfsz	??_Lcd_Chr_CP,f
  5447  0DAA  2DA7               	goto	u2797
  5448  0DAB  0000               	nop
  5449  0DAC  0008               	return
  5450  0DAD                     __end_of_Lcd_Chr_CP:	
  5451                           
  5452                           	psect	text15
  5453  0DAD                     __ptext15:	
  5454 ;; *************** function _Lcd_Init *****************
  5455 ;; Defined at:
  5456 ;;		line 52 in file "flex_lcd.h"
  5457 ;; Parameters:    Size  Location     Type
  5458 ;;		None
  5459 ;; Auto vars:     Size  Location     Type
  5460 ;;  data            1    4[COMMON] unsigned char 
  5461 ;; Return value:  Size  Location     Type
  5462 ;;                  1    wreg      void 
  5463 ;; Registers used:
  5464 ;;		wreg, status,2, status,0, pclath, cstack
  5465 ;; Tracked objects:
  5466 ;;		On entry : 0/0
  5467 ;;		On exit  : 0/0
  5468 ;;		Unchanged: 0/0
  5469 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
  5470 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  5471 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  5472 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  5473 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  5474 ;;Total ram usage:        2 bytes
  5475 ;; Hardware stack levels used:    1
  5476 ;; Hardware stack levels required when called:    1
  5477 ;; This function calls:
  5478 ;;		_Lcd_Cmd
  5479 ;; This function is called by:
  5480 ;;		_main
  5481 ;; This function uses a non-reentrant model
  5482 ;;
  5483                           
  5484                           
  5485                           ;psect for function _Lcd_Init
  5486  0DAD                     _Lcd_Init:	
  5487                           
  5488                           ;flex_lcd.h: 53: unsigned char data;
  5489                           ;flex_lcd.h: 54: TRISCbits.TRISC3 = 0;
  5490                           
  5491                           ;incstack = 0
  5492                           ; Regs used in _Lcd_Init: [wreg+status,2+status,0+pclath+cstack]
  5493  0DAD  0140               	movlb	0	; select bank0
  5494  0DAE  1193               	bcf	19,3	;volatile
  5495                           
  5496                           ;flex_lcd.h: 55: TRISDbits.TRISD0 = 0;
  5497  0DAF  1014               	bcf	20,0	;volatile
  5498                           
  5499                           ;flex_lcd.h: 56: TRISDbits.TRISD1 = 0;
  5500  0DB0  1094               	bcf	20,1	;volatile
  5501                           
  5502                           ;flex_lcd.h: 57: TRISCbits.TRISC4 = 0;
  5503  0DB1  1213               	bcf	19,4	;volatile
  5504                           
  5505                           ;flex_lcd.h: 58: TRISDbits.TRISD3 = 0;
  5506  0DB2  1194               	bcf	20,3	;volatile
  5507                           
  5508                           ;flex_lcd.h: 59: TRISDbits.TRISD2 = 0;
  5509  0DB3  1114               	bcf	20,2	;volatile
  5510                           
  5511                           ;flex_lcd.h: 60: PORTCbits.RC3 = 0;
  5512  0DB4  118E               	bcf	14,3	;volatile
  5513                           
  5514                           ;flex_lcd.h: 61: PORTDbits.RD0 = 0;
  5515  0DB5  100F               	bcf	15,0	;volatile
  5516                           
  5517                           ;flex_lcd.h: 62: PORTDbits.RD1 = 0;
  5518  0DB6  108F               	bcf	15,1	;volatile
  5519                           
  5520                           ;flex_lcd.h: 63: PORTCbits.RC4 = 0;
  5521  0DB7  120E               	bcf	14,4	;volatile
  5522                           
  5523                           ;flex_lcd.h: 64: PORTDbits.RD3 = 0;
  5524  0DB8  118F               	bcf	15,3	;volatile
  5525                           
  5526                           ;flex_lcd.h: 65: PORTDbits.RD2 = 0;
  5527  0DB9  110F               	bcf	15,2	;volatile
  5528                           
  5529                           ;flex_lcd.h: 66: _delay((unsigned long)((5500)*(32000000/4000000.0)));
  5530  0DBA  303A               	movlw	58
  5531  0DBB  00F3               	movwf	??_Lcd_Init
  5532  0DBC  3023               	movlw	35
  5533  0DBD                     u2807:	
  5534  0DBD  0B89               	decfsz	9,f
  5535  0DBE  2DBD               	goto	u2807
  5536  0DBF  0BF3               	decfsz	??_Lcd_Init,f
  5537  0DC0  2DBD               	goto	u2807
  5538  0DC1  0000               	nop
  5539                           
  5540                           ;flex_lcd.h: 67: _delay((unsigned long)((5500)*(32000000/4000000.0)));
  5541  0DC2  303A               	movlw	58
  5542  0DC3  00F3               	movwf	??_Lcd_Init
  5543  0DC4  3023               	movlw	35
  5544  0DC5                     u2817:	
  5545  0DC5  0B89               	decfsz	9,f
  5546  0DC6  2DC5               	goto	u2817
  5547  0DC7  0BF3               	decfsz	??_Lcd_Init,f
  5548  0DC8  2DC5               	goto	u2817
  5549  0DC9  0000               	nop
  5550                           
  5551                           ;flex_lcd.h: 68: _delay((unsigned long)((5500)*(32000000/4000000.0)));
  5552  0DCA  303A               	movlw	58
  5553  0DCB  00F3               	movwf	??_Lcd_Init
  5554  0DCC  3023               	movlw	35
  5555  0DCD                     u2827:	
  5556  0DCD  0B89               	decfsz	9,f
  5557  0DCE  2DCD               	goto	u2827
  5558  0DCF  0BF3               	decfsz	??_Lcd_Init,f
  5559  0DD0  2DCD               	goto	u2827
  5560  0DD1  0000               	nop
  5561                           
  5562                           ;flex_lcd.h: 69: _delay((unsigned long)((5500)*(32000000/4000000.0)));
  5563  0DD2  303A               	movlw	58
  5564  0DD3  00F3               	movwf	??_Lcd_Init
  5565  0DD4  3023               	movlw	35
  5566  0DD5                     u2837:	
  5567  0DD5  0B89               	decfsz	9,f
  5568  0DD6  2DD5               	goto	u2837
  5569  0DD7  0BF3               	decfsz	??_Lcd_Init,f
  5570  0DD8  2DD5               	goto	u2837
  5571  0DD9  0000               	nop
  5572                           
  5573                           ;flex_lcd.h: 70: _delay((unsigned long)((5500)*(32000000/4000000.0)));
  5574  0DDA  303A               	movlw	58
  5575  0DDB  00F3               	movwf	??_Lcd_Init
  5576  0DDC  3023               	movlw	35
  5577  0DDD                     u2847:	
  5578  0DDD  0B89               	decfsz	9,f
  5579  0DDE  2DDD               	goto	u2847
  5580  0DDF  0BF3               	decfsz	??_Lcd_Init,f
  5581  0DE0  2DDD               	goto	u2847
  5582  0DE1  0000               	nop
  5583                           
  5584                           ;flex_lcd.h: 71: _delay((unsigned long)((5500)*(32000000/4000000.0)));
  5585  0DE2  303A               	movlw	58
  5586  0DE3  00F3               	movwf	??_Lcd_Init
  5587  0DE4  3023               	movlw	35
  5588  0DE5                     u2857:	
  5589  0DE5  0B89               	decfsz	9,f
  5590  0DE6  2DE5               	goto	u2857
  5591  0DE7  0BF3               	decfsz	??_Lcd_Init,f
  5592  0DE8  2DE5               	goto	u2857
  5593  0DE9  0000               	nop
  5594                           
  5595                           ;flex_lcd.h: 72: for(data = 1; data < 4; data ++)
  5596  0DEA  01F4               	clrf	Lcd_Init@data
  5597  0DEB  0AF4               	incf	Lcd_Init@data,f
  5598  0DEC  3004               	movlw	4
  5599  0DED  0274               	subwf	Lcd_Init@data,w
  5600  0DEE  1803               	btfsc	3,0
  5601  0DEF  2E18               	goto	l50
  5602  0DF0                     l49:	
  5603                           
  5604                           ;flex_lcd.h: 73: {
  5605                           ;flex_lcd.h: 74: PORTCbits.RC3 = 0; PORTDbits.RD0 = 0; PORTDbits.RD1 = 1; PORTCbits.RC4 
      +                          = 1; PORTDbits.RD3 = 0;
  5606  0DF0  0140               	movlb	0	; select bank0
  5607  0DF1  118E               	bcf	14,3	;volatile
  5608  0DF2  100F               	bcf	15,0	;volatile
  5609  0DF3  148F               	bsf	15,1	;volatile
  5610  0DF4  160E               	bsf	14,4	;volatile
  5611  0DF5  118F               	bcf	15,3	;volatile
  5612                           
  5613                           ;flex_lcd.h: 75: PORTDbits.RD2 = 0; PORTCbits.RC3 = 0; PORTDbits.RD0 = 0; PORTDbits.RD1 
      +                          = 1; PORTCbits.RC4 = 1;
  5614  0DF6  110F               	bcf	15,2	;volatile
  5615  0DF7  118E               	bcf	14,3	;volatile
  5616  0DF8  100F               	bcf	15,0	;volatile
  5617  0DF9  148F               	bsf	15,1	;volatile
  5618  0DFA  160E               	bsf	14,4	;volatile
  5619                           
  5620                           ;flex_lcd.h: 76: PORTDbits.RD3 = 1; PORTDbits.RD2 = 0;
  5621  0DFB  158F               	bsf	15,3	;volatile
  5622  0DFC  110F               	bcf	15,2	;volatile
  5623                           
  5624                           ;flex_lcd.h: 77: _delay((unsigned long)((5)*(32000000/4000000.0)));
  5625  0DFD  300D               	movlw	13
  5626  0DFE                     u2867:	
  5627  0DFE  0B89               	decfsz	9,f
  5628  0DFF  2DFE               	goto	u2867
  5629  0E00  0000               	nop
  5630                           
  5631                           ;flex_lcd.h: 78: PORTCbits.RC3 = 0; PORTDbits.RD0 = 0; PORTDbits.RD1 = 1; PORTCbits.RC4 
      +                          = 1; PORTDbits.RD3 = 0;
  5632  0E01  0140               	movlb	0	; select bank0
  5633  0E02  118E               	bcf	14,3	;volatile
  5634  0E03  100F               	bcf	15,0	;volatile
  5635  0E04  148F               	bsf	15,1	;volatile
  5636  0E05  160E               	bsf	14,4	;volatile
  5637  0E06  118F               	bcf	15,3	;volatile
  5638                           
  5639                           ;flex_lcd.h: 79: PORTDbits.RD2 = 0;
  5640  0E07  110F               	bcf	15,2	;volatile
  5641                           
  5642                           ;flex_lcd.h: 80: _delay((unsigned long)((5500)*(32000000/4000000.0)));
  5643  0E08  303A               	movlw	58
  5644  0E09  00F3               	movwf	??_Lcd_Init
  5645  0E0A  3023               	movlw	35
  5646  0E0B                     u2877:	
  5647  0E0B  0B89               	decfsz	9,f
  5648  0E0C  2E0B               	goto	u2877
  5649  0E0D  0BF3               	decfsz	??_Lcd_Init,f
  5650  0E0E  2E0B               	goto	u2877
  5651  0E0F  0000               	nop
  5652  0E10  3001               	movlw	1
  5653  0E11  00F3               	movwf	??_Lcd_Init
  5654  0E12  0873               	movf	??_Lcd_Init,w
  5655  0E13  07F4               	addwf	Lcd_Init@data,f
  5656  0E14  3004               	movlw	4
  5657  0E15  0274               	subwf	Lcd_Init@data,w
  5658  0E16  1C03               	skipc
  5659  0E17  2DF0               	goto	l49
  5660  0E18                     l50:	
  5661                           
  5662                           ;flex_lcd.h: 81: }
  5663                           ;flex_lcd.h: 82: PORTCbits.RC3 = 0; PORTDbits.RD0 = 0; PORTDbits.RD1 = 1; PORTCbits.RC4 
      +                          = 0; PORTDbits.RD3 = 0; PORTDbits.RD2 = 0;
  5664  0E18  0140               	movlb	0	; select bank0
  5665  0E19  118E               	bcf	14,3	;volatile
  5666  0E1A  100F               	bcf	15,0	;volatile
  5667  0E1B  148F               	bsf	15,1	;volatile
  5668  0E1C  120E               	bcf	14,4	;volatile
  5669  0E1D  118F               	bcf	15,3	;volatile
  5670  0E1E  110F               	bcf	15,2	;volatile
  5671                           
  5672                           ;flex_lcd.h: 83: PORTCbits.RC3 = 0; PORTDbits.RD0 = 0; PORTDbits.RD1 = 1; PORTCbits.RC4 
      +                          = 0; PORTDbits.RD3 = 1; PORTDbits.RD2 = 0;
  5673  0E1F  118E               	bcf	14,3	;volatile
  5674  0E20  100F               	bcf	15,0	;volatile
  5675  0E21  148F               	bsf	15,1	;volatile
  5676  0E22  120E               	bcf	14,4	;volatile
  5677  0E23  158F               	bsf	15,3	;volatile
  5678  0E24  110F               	bcf	15,2	;volatile
  5679                           
  5680                           ;flex_lcd.h: 84: _delay((unsigned long)((5)*(32000000/4000000.0)));
  5681  0E25  300D               	movlw	13
  5682  0E26                     u2887:	
  5683  0E26  0B89               	decfsz	9,f
  5684  0E27  2E26               	goto	u2887
  5685  0E28  0000               	nop
  5686                           
  5687                           ;flex_lcd.h: 85: PORTCbits.RC3 = 0; PORTDbits.RD0 = 0; PORTDbits.RD1 = 1; PORTCbits.RC4 
      +                          = 0; PORTDbits.RD3 = 0; PORTDbits.RD2 = 0;
  5688  0E29  0140               	movlb	0	; select bank0
  5689  0E2A  118E               	bcf	14,3	;volatile
  5690  0E2B  100F               	bcf	15,0	;volatile
  5691  0E2C  148F               	bsf	15,1	;volatile
  5692  0E2D  120E               	bcf	14,4	;volatile
  5693  0E2E  118F               	bcf	15,3	;volatile
  5694  0E2F  110F               	bcf	15,2	;volatile
  5695                           
  5696                           ;flex_lcd.h: 86: _delay((unsigned long)((5500)*(32000000/4000000.0)));
  5697  0E30  303A               	movlw	58
  5698  0E31  00F3               	movwf	??_Lcd_Init
  5699  0E32  3023               	movlw	35
  5700  0E33                     u2897:	
  5701  0E33  0B89               	decfsz	9,f
  5702  0E34  2E33               	goto	u2897
  5703  0E35  0BF3               	decfsz	??_Lcd_Init,f
  5704  0E36  2E33               	goto	u2897
  5705  0E37  0000               	nop
  5706                           
  5707                           ;flex_lcd.h: 87: data = 40; Lcd_Cmd(data);
  5708  0E38  3028               	movlw	40
  5709  0E39  00F3               	movwf	??_Lcd_Init
  5710  0E3A  0873               	movf	??_Lcd_Init,w
  5711  0E3B  00F4               	movwf	Lcd_Init@data
  5712  0E3C  0874               	movf	Lcd_Init@data,w
  5713  0E3D  318C  2483  318D   	fcall	_Lcd_Cmd
  5714                           
  5715                           ;flex_lcd.h: 88: data = 16; Lcd_Cmd(data);
  5716  0E40  3010               	movlw	16
  5717  0E41  00F3               	movwf	??_Lcd_Init
  5718  0E42  0873               	movf	??_Lcd_Init,w
  5719  0E43  00F4               	movwf	Lcd_Init@data
  5720  0E44  0874               	movf	Lcd_Init@data,w
  5721  0E45  318C  2483  318D   	fcall	_Lcd_Cmd
  5722                           
  5723                           ;flex_lcd.h: 89: data = 1; Lcd_Cmd(data);
  5724  0E48  01F4               	clrf	Lcd_Init@data
  5725  0E49  0AF4               	incf	Lcd_Init@data,f
  5726  0E4A  0874               	movf	Lcd_Init@data,w
  5727  0E4B  318C  2483  318D   	fcall	_Lcd_Cmd
  5728                           
  5729                           ;flex_lcd.h: 90: data = 15; Lcd_Cmd(data);
  5730  0E4E  300F               	movlw	15
  5731  0E4F  00F3               	movwf	??_Lcd_Init
  5732  0E50  0873               	movf	??_Lcd_Init,w
  5733  0E51  00F4               	movwf	Lcd_Init@data
  5734  0E52  0874               	movf	Lcd_Init@data,w
  5735  0E53  318C  2483         	fcall	_Lcd_Cmd
  5736  0E55  0008               	return
  5737  0E56                     __end_of_Lcd_Init:	
  5738                           
  5739                           	psect	text16
  5740  0C83                     __ptext16:	
  5741 ;; *************** function _Lcd_Cmd *****************
  5742 ;; Defined at:
  5743 ;;		line 150 in file "flex_lcd.h"
  5744 ;; Parameters:    Size  Location     Type
  5745 ;;  data            1    wreg     unsigned char 
  5746 ;; Auto vars:     Size  Location     Type
  5747 ;;  data            1    2[COMMON] unsigned char 
  5748 ;; Return value:  Size  Location     Type
  5749 ;;                  1    wreg      void 
  5750 ;; Registers used:
  5751 ;;		wreg, status,2, status,0
  5752 ;; Tracked objects:
  5753 ;;		On entry : 0/0
  5754 ;;		On exit  : 0/0
  5755 ;;		Unchanged: 0/0
  5756 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
  5757 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  5758 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  5759 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  5760 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  5761 ;;Total ram usage:        3 bytes
  5762 ;; Hardware stack levels used:    1
  5763 ;; This function calls:
  5764 ;;		Nothing
  5765 ;; This function is called by:
  5766 ;;		_Lcd_Init
  5767 ;;		_Lcd_Out2
  5768 ;;		_main
  5769 ;;		_Lcd_Out
  5770 ;; This function uses a non-reentrant model
  5771 ;;
  5772                           
  5773                           
  5774                           ;psect for function _Lcd_Cmd
  5775  0C83                     _Lcd_Cmd:	
  5776                           
  5777                           ;incstack = 0
  5778                           ; Regs used in _Lcd_Cmd: [wreg+status,2+status,0]
  5779                           ;Lcd_Cmd@data stored from wreg
  5780  0C83  00F2               	movwf	Lcd_Cmd@data
  5781                           
  5782                           ;flex_lcd.h: 151: PORTDbits.RD3 = 0; PORTDbits.RD2 = 0;
  5783  0C84  0140               	movlb	0	; select bank0
  5784  0C85  118F               	bcf	15,3	;volatile
  5785  0C86  110F               	bcf	15,2	;volatile
  5786                           
  5787                           ;flex_lcd.h: 152: PORTCbits.RC3 = (data & 0b10000000)>>7; PORTDbits.RD0 = (data & 0b0100
      +                          0000)>>6;
  5788  0C87  0872               	movf	Lcd_Cmd@data,w
  5789  0C88  00F0               	movwf	??_Lcd_Cmd
  5790  0C89  3007               	movlw	7
  5791  0C8A                     u1415:	
  5792  0C8A  36F0               	lsrf	??_Lcd_Cmd,f
  5793  0C8B  0B89               	decfsz	9,f
  5794  0C8C  2C8A               	goto	u1415
  5795  0C8D  0870               	movf	??_Lcd_Cmd,w
  5796  0C8E  3901               	andlw	1
  5797  0C8F  00F1               	movwf	??_Lcd_Cmd+1
  5798  0C90  0DF1               	rlf	??_Lcd_Cmd+1,f
  5799  0C91  0DF1               	rlf	??_Lcd_Cmd+1,f
  5800  0C92  0DF1               	rlf	??_Lcd_Cmd+1,f
  5801  0C93  080E               	movf	14,w	;volatile
  5802  0C94  0671               	xorwf	??_Lcd_Cmd+1,w
  5803  0C95  39F7               	andlw	-9
  5804  0C96  0671               	xorwf	??_Lcd_Cmd+1,w
  5805  0C97  008E               	movwf	14	;volatile
  5806  0C98  0872               	movf	Lcd_Cmd@data,w
  5807  0C99  00F0               	movwf	??_Lcd_Cmd
  5808  0C9A  3006               	movlw	6
  5809  0C9B                     u1425:	
  5810  0C9B  36F0               	lsrf	??_Lcd_Cmd,f
  5811  0C9C  0B89               	decfsz	9,f
  5812  0C9D  2C9B               	goto	u1425
  5813  0C9E  3001               	movlw	1
  5814  0C9F  0570               	andwf	??_Lcd_Cmd,w
  5815  0CA0  00F1               	movwf	??_Lcd_Cmd+1
  5816  0CA1  080F               	movf	15,w	;volatile
  5817  0CA2  0671               	xorwf	??_Lcd_Cmd+1,w
  5818  0CA3  39FE               	andlw	-2
  5819  0CA4  0671               	xorwf	??_Lcd_Cmd+1,w
  5820  0CA5  008F               	movwf	15	;volatile
  5821                           
  5822                           ;flex_lcd.h: 153: PORTDbits.RD1 = (data & 0b00100000)>>5; PORTCbits.RC4 = (data & 0b0001
      +                          0000)>>4;
  5823  0CA6  0872               	movf	Lcd_Cmd@data,w
  5824  0CA7  00F0               	movwf	??_Lcd_Cmd
  5825  0CA8  3005               	movlw	5
  5826  0CA9                     u1435:	
  5827  0CA9  36F0               	lsrf	??_Lcd_Cmd,f
  5828  0CAA  0B89               	decfsz	9,f
  5829  0CAB  2CA9               	goto	u1435
  5830  0CAC  0870               	movf	??_Lcd_Cmd,w
  5831  0CAD  3901               	andlw	1
  5832  0CAE  00F1               	movwf	??_Lcd_Cmd+1
  5833  0CAF  0DF1               	rlf	??_Lcd_Cmd+1,f
  5834  0CB0  080F               	movf	15,w	;volatile
  5835  0CB1  0671               	xorwf	??_Lcd_Cmd+1,w
  5836  0CB2  39FD               	andlw	-3
  5837  0CB3  0671               	xorwf	??_Lcd_Cmd+1,w
  5838  0CB4  008F               	movwf	15	;volatile
  5839  0CB5  0872               	movf	Lcd_Cmd@data,w
  5840  0CB6  00F0               	movwf	??_Lcd_Cmd
  5841  0CB7  3004               	movlw	4
  5842  0CB8                     u1445:	
  5843  0CB8  36F0               	lsrf	??_Lcd_Cmd,f
  5844  0CB9  0B89               	decfsz	9,f
  5845  0CBA  2CB8               	goto	u1445
  5846  0CBB  0870               	movf	??_Lcd_Cmd,w
  5847  0CBC  3901               	andlw	1
  5848  0CBD  00F1               	movwf	??_Lcd_Cmd+1
  5849  0CBE  0EF1               	swapf	??_Lcd_Cmd+1,f
  5850  0CBF  080E               	movf	14,w	;volatile
  5851  0CC0  0671               	xorwf	??_Lcd_Cmd+1,w
  5852  0CC1  39EF               	andlw	-17
  5853  0CC2  0671               	xorwf	??_Lcd_Cmd+1,w
  5854  0CC3  008E               	movwf	14	;volatile
  5855                           
  5856                           ;flex_lcd.h: 154: _delay(10);
  5857  0CC4  3003               	movlw	3
  5858  0CC5                     u2907:	
  5859  0CC5  0B89               	decfsz	9,f
  5860  0CC6  2CC5               	goto	u2907
  5861  0CC7  0000               	nop
  5862                           
  5863                           ;flex_lcd.h: 155: PORTDbits.RD3 = 1; _delay((unsigned long)((5)*(32000000/4000000.0))); 
      +                          PORTDbits.RD3 = 0;
  5864  0CC8  0140               	movlb	0	; select bank0
  5865  0CC9  158F               	bsf	15,3	;volatile
  5866  0CCA  300D               	movlw	13
  5867  0CCB                     u2917:	
  5868  0CCB  0B89               	decfsz	9,f
  5869  0CCC  2CCB               	goto	u2917
  5870  0CCD  0000               	nop
  5871  0CCE  0140               	movlb	0	; select bank0
  5872  0CCF  118F               	bcf	15,3	;volatile
  5873                           
  5874                           ;flex_lcd.h: 156: PORTCbits.RC3 = (data & 0b00001000)>>3; PORTDbits.RD0 = (data & 0b0000
      +                          0100)>>2;
  5875  0CD0  0872               	movf	Lcd_Cmd@data,w
  5876  0CD1  00F0               	movwf	??_Lcd_Cmd
  5877  0CD2  3003               	movlw	3
  5878  0CD3                     u1455:	
  5879  0CD3  36F0               	lsrf	??_Lcd_Cmd,f
  5880  0CD4  0B89               	decfsz	9,f
  5881  0CD5  2CD3               	goto	u1455
  5882  0CD6  0870               	movf	??_Lcd_Cmd,w
  5883  0CD7  3901               	andlw	1
  5884  0CD8  00F1               	movwf	??_Lcd_Cmd+1
  5885  0CD9  0DF1               	rlf	??_Lcd_Cmd+1,f
  5886  0CDA  0DF1               	rlf	??_Lcd_Cmd+1,f
  5887  0CDB  0DF1               	rlf	??_Lcd_Cmd+1,f
  5888  0CDC  080E               	movf	14,w	;volatile
  5889  0CDD  0671               	xorwf	??_Lcd_Cmd+1,w
  5890  0CDE  39F7               	andlw	-9
  5891  0CDF  0671               	xorwf	??_Lcd_Cmd+1,w
  5892  0CE0  008E               	movwf	14	;volatile
  5893  0CE1  0872               	movf	Lcd_Cmd@data,w
  5894  0CE2  00F0               	movwf	??_Lcd_Cmd
  5895  0CE3  3002               	movlw	2
  5896  0CE4                     u1465:	
  5897  0CE4  36F0               	lsrf	??_Lcd_Cmd,f
  5898  0CE5  0B89               	decfsz	9,f
  5899  0CE6  2CE4               	goto	u1465
  5900  0CE7  3001               	movlw	1
  5901  0CE8  0570               	andwf	??_Lcd_Cmd,w
  5902  0CE9  00F1               	movwf	??_Lcd_Cmd+1
  5903  0CEA  080F               	movf	15,w	;volatile
  5904  0CEB  0671               	xorwf	??_Lcd_Cmd+1,w
  5905  0CEC  39FE               	andlw	-2
  5906  0CED  0671               	xorwf	??_Lcd_Cmd+1,w
  5907  0CEE  008F               	movwf	15	;volatile
  5908                           
  5909                           ;flex_lcd.h: 157: PORTDbits.RD1 = (data & 0b00000010)>>1; PORTCbits.RC4 = (data & 0b0000
      +                          0001);
  5910  0CEF  3672               	lsrf	Lcd_Cmd@data,w
  5911  0CF0  3901               	andlw	1
  5912  0CF1  00F0               	movwf	??_Lcd_Cmd
  5913  0CF2  0DF0               	rlf	??_Lcd_Cmd,f
  5914  0CF3  080F               	movf	15,w	;volatile
  5915  0CF4  0670               	xorwf	??_Lcd_Cmd,w
  5916  0CF5  39FD               	andlw	-3
  5917  0CF6  0670               	xorwf	??_Lcd_Cmd,w
  5918  0CF7  008F               	movwf	15	;volatile
  5919  0CF8  0872               	movf	Lcd_Cmd@data,w
  5920  0CF9  3901               	andlw	1
  5921  0CFA  00F0               	movwf	??_Lcd_Cmd
  5922  0CFB  0EF0               	swapf	??_Lcd_Cmd,f
  5923  0CFC  080E               	movf	14,w	;volatile
  5924  0CFD  0670               	xorwf	??_Lcd_Cmd,w
  5925  0CFE  39EF               	andlw	-17
  5926  0CFF  0670               	xorwf	??_Lcd_Cmd,w
  5927  0D00  008E               	movwf	14	;volatile
  5928                           
  5929                           ;flex_lcd.h: 158: _delay(10);
  5930  0D01  3003               	movlw	3
  5931  0D02                     u2927:	
  5932  0D02  0B89               	decfsz	9,f
  5933  0D03  2D02               	goto	u2927
  5934  0D04  0000               	nop
  5935                           
  5936                           ;flex_lcd.h: 159: PORTDbits.RD3 = 1; _delay((unsigned long)((5)*(32000000/4000000.0))); 
      +                          PORTDbits.RD3 = 0;
  5937  0D05  0140               	movlb	0	; select bank0
  5938  0D06  158F               	bsf	15,3	;volatile
  5939  0D07  300D               	movlw	13
  5940  0D08                     u2937:	
  5941  0D08  0B89               	decfsz	9,f
  5942  0D09  2D08               	goto	u2937
  5943  0D0A  0000               	nop
  5944  0D0B  0140               	movlb	0	; select bank0
  5945  0D0C  118F               	bcf	15,3	;volatile
  5946                           
  5947                           ;flex_lcd.h: 160: _delay((unsigned long)((5500)*(32000000/4000000.0)));
  5948  0D0D  303A               	movlw	58
  5949  0D0E  00F0               	movwf	??_Lcd_Cmd
  5950  0D0F  3023               	movlw	35
  5951  0D10                     u2947:	
  5952  0D10  0B89               	decfsz	9,f
  5953  0D11  2D10               	goto	u2947
  5954  0D12  0BF0               	decfsz	??_Lcd_Cmd,f
  5955  0D13  2D10               	goto	u2947
  5956  0D14  0000               	nop
  5957  0D15  0008               	return
  5958  0D16                     __end_of_Lcd_Cmd:	
  5959  007E                     btemp	set	126	;btemp
  5960  007E                     wtemp0	set	126


Data Sizes:
    Strings     14
    Constant    10
    Data        3
    BSS         28
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     70      80
    BANK1            80     54      75
    BANK2            80      0       0
    BANK3            80      0       0
    BANK4            80      0       0
    BANK5            80      0       0
    BANK6            80      0       0
    BANK7            80      0       0
    BANK8            80      0       0
    BANK9            80      0       0
    BANK10           80      0       0
    BANK11           80      0       0
    BANK12           80      0       0
    BANK13           80      0       0
    BANK14           80      0       0
    BANK15           80      0       0
    BANK16           80      0       0
    BANK17           80      0       0
    BANK18           80      0       0
    BANK19           80      0       0
    BANK20           80      0       0
    BANK21           80      0       0
    BANK22           80      0       0
    BANK23           80      0       0
    BANK24           80      0       0
    BANK25           80      0       0
    BANK26           80      0       0
    BANK27           80      0       0
    BANK28           80      0       0
    BANK29           80      0       0
    BANK30           80      0       0
    BANK31           80      0       0
    BANK32           80      0       0
    BANK33           80      0       0
    BANK34           80      0       0
    BANK35           80      0       0
    BANK36           80      0       0
    BANK37           80      0       0
    BANK38           80      0       0
    BANK39           80      0       0
    BANK40           80      0       0
    BANK41           80      0       0
    BANK42           80      0       0
    BANK43           80      0       0
    BANK44           80      0       0
    BANK45           80      0       0
    BANK46           80      0       0
    BANK47           80      0       0
    BANK48           80      0       0
    BANK49           80      0       0
    BANK50           80      0       0

Pointer List with Targets:

    sprintf@f	PTR const unsigned char  size(2) Largest target is 14
		 -> STR_1(CODE[14]), 

    sprintf@sp	PTR unsigned char  size(1) Largest target is 16
		 -> main@buffer1(BANK1[16]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    Lcd_Out2@buffer	PTR unsigned char  size(1) Largest target is 16
		 -> main@buffer1(BANK1[16]), 


Critical Paths under _main in COMMON

    _sprintf->___lwmod
    ___lwmod->___lwdiv
    _leersensores->___awtoft
    ___ftmul->___awtoft
    ___ftdiv->___awtoft
    ___awtoft->___ftpack
    _Lcd_Out2->_Lcd_Chr_CP
    _Lcd_Out2->_Lcd_Cmd
    _Lcd_Init->_Lcd_Cmd

Critical Paths under _main in BANK0

    _main->_leersensores
    _leersensores->___fttol
    ___fttol->___ftdiv
    ___ftdiv->___ftadd
    ___ftadd->___ftmul

Critical Paths under _main in BANK1

    _main->_leersensores

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _main in BANK16

    None.

Critical Paths under _main in BANK17

    None.

Critical Paths under _main in BANK18

    None.

Critical Paths under _main in BANK19

    None.

Critical Paths under _main in BANK20

    None.

Critical Paths under _main in BANK21

    None.

Critical Paths under _main in BANK22

    None.

Critical Paths under _main in BANK23

    None.

Critical Paths under _main in BANK24

    None.

Critical Paths under _main in BANK25

    None.

Critical Paths under _main in BANK26

    None.

Critical Paths under _main in BANK27

    None.

Critical Paths under _main in BANK28

    None.

Critical Paths under _main in BANK29

    None.

Critical Paths under _main in BANK30

    None.

Critical Paths under _main in BANK31

    None.

Critical Paths under _main in BANK32

    None.

Critical Paths under _main in BANK33

    None.

Critical Paths under _main in BANK34

    None.

Critical Paths under _main in BANK35

    None.

Critical Paths under _main in BANK36

    None.

Critical Paths under _main in BANK37

    None.

Critical Paths under _main in BANK38

    None.

Critical Paths under _main in BANK39

    None.

Critical Paths under _main in BANK40

    None.

Critical Paths under _main in BANK41

    None.

Critical Paths under _main in BANK42

    None.

Critical Paths under _main in BANK43

    None.

Critical Paths under _main in BANK44

    None.

Critical Paths under _main in BANK45

    None.

Critical Paths under _main in BANK46

    None.

Critical Paths under _main in BANK47

    None.

Critical Paths under _main in BANK48

    None.

Critical Paths under _main in BANK49

    None.

Critical Paths under _main in BANK50

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                40    36      4   19117
                                             64 BANK0      6     2      4
                                             36 BANK1     18    18      0
                            _Lcd_Cmd
                           _Lcd_Init
                           _Lcd_Out2
                       _leersensores
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             25    21      4    1867
                                              0 BANK0     17    13      4
                            ___lwdiv
                            ___lwmod
                             ___wmul
                            _isdigit
 ---------------------------------------------------------------------------------
 (2) _isdigit                                              2     2      0      68
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4     220
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (2) ___lwmod                                              6     2      4     287
                                              8 COMMON     6     2      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              8     4      4     290
                                              0 COMMON     8     4      4
 ---------------------------------------------------------------------------------
 (1) _leersensores                                        41    39      2   16015
                                             59 BANK0      5     3      2
                                              0 BANK1     36    36      0
                           ___awtoft
                            ___ftadd
                            ___ftdiv
                            ___ftmul
                            ___fttol
 ---------------------------------------------------------------------------------
 (2) ___fttol                                             14    10      4     316
                                             45 BANK0     14    10      4
                            ___ftadd (ARG)
                            ___ftdiv (ARG)
                            ___ftmul (ARG)
 ---------------------------------------------------------------------------------
 (2) ___ftmul                                             16    10      6    4444
                                              0 BANK0     16    10      6
                           ___awtoft (ARG)
                           ___ftpack
 ---------------------------------------------------------------------------------
 (2) ___ftdiv                                             16    10      6    3502
                                             29 BANK0     16    10      6
                           ___awtoft (ARG)
                            ___ftadd (ARG)
                            ___ftmul (ARG)
                           ___ftpack
 ---------------------------------------------------------------------------------
 (2) ___ftadd                                             13     7      6    4804
                                             16 BANK0     13     7      6
                            ___ftmul (ARG)
                           ___ftpack
 ---------------------------------------------------------------------------------
 (2) ___awtoft                                             6     3      3    2673
                                              8 COMMON     6     3      3
                           ___ftpack
 ---------------------------------------------------------------------------------
 (3) ___ftpack                                             8     3      5    2070
                                              0 COMMON     8     3      5
 ---------------------------------------------------------------------------------
 (1) _Lcd_Out2                                             5     3      2     661
                                              3 COMMON     5     3      2
                         _Lcd_Chr_CP
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (2) _Lcd_Chr_CP                                           3     3      0     176
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (1) _Lcd_Init                                             2     2      0     314
                                              3 COMMON     2     2      0
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (2) _Lcd_Cmd                                              3     3      0     176
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Lcd_Cmd
   _Lcd_Init
     _Lcd_Cmd
   _Lcd_Out2
     _Lcd_Chr_CP
     _Lcd_Cmd
   _leersensores
     ___awtoft
       ___ftpack
     ___ftadd
       ___ftmul (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftpack (ARG)
       ___ftpack (ARG)
     ___ftdiv
       ___awtoft (ARG)
         ___ftpack
       ___ftadd (ARG)
         ___ftmul (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
         ___ftpack (ARG)
       ___ftmul (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftpack (ARG)
       ___ftpack (ARG)
     ___ftmul
       ___awtoft (ARG)
         ___ftpack
       ___ftpack (ARG)
     ___fttol
       ___ftadd (ARG)
         ___ftmul (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
         ___ftpack (ARG)
       ___ftdiv (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftadd (ARG)
           ___ftmul (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
           ___ftpack (ARG)
         ___ftmul (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
         ___ftpack (ARG)
       ___ftmul (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftpack (ARG)
   _sprintf
     ___lwdiv
     ___lwmod
       ___lwdiv (ARG)
     ___wmul
     _isdigit

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             FF0      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      E       E       2      100.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     46      50       5      100.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BANK1               50     36      4B       7       93.8%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BITBANK2            50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BANK2               50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BITBANK3            50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BANK3               50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITBANK4            50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BANK4               50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITBANK5            50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BANK5               50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITBANK6            50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BANK6               50      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITBANK7            50      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BANK7               50      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITBANK8            50      0       0      20        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BANK8               50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BITBANK9            50      0       0      22        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BANK9               50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BITBANK10           50      0       0      24        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BANK10              50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BITBANK11           50      0       0      26        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BANK11              50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
ABS                  0      0      A9      28        0.0%
BITBANK12           50      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BANK12              50      0       0      30        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITBANK13           50      0       0      31        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BANK13              50      0       0      32        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%
BITBANK14           50      0       0      33        0.0%
BITSFR32             0      0       0      33        0.0%
SFR32                0      0       0      33        0.0%
BANK14              50      0       0      34        0.0%
BITSFR33             0      0       0      34        0.0%
SFR33                0      0       0      34        0.0%
BITBANK15           50      0       0      35        0.0%
BITSFR34             0      0       0      35        0.0%
SFR34                0      0       0      35        0.0%
BANK15              50      0       0      36        0.0%
BITSFR35             0      0       0      36        0.0%
SFR35                0      0       0      36        0.0%
BITBANK16           50      0       0      37        0.0%
BITSFR36             0      0       0      37        0.0%
SFR36                0      0       0      37        0.0%
BANK16              50      0       0      38        0.0%
BITSFR37             0      0       0      38        0.0%
SFR37                0      0       0      38        0.0%
BITBANK17           50      0       0      39        0.0%
BITSFR38             0      0       0      39        0.0%
SFR38                0      0       0      39        0.0%
BANK17              50      0       0      40        0.0%
BITSFR39             0      0       0      40        0.0%
SFR39                0      0       0      40        0.0%
BITBANK18           50      0       0      41        0.0%
BITSFR40             0      0       0      41        0.0%
SFR40                0      0       0      41        0.0%
BANK18              50      0       0      42        0.0%
BITSFR41             0      0       0      42        0.0%
SFR41                0      0       0      42        0.0%
BITBANK19           50      0       0      43        0.0%
BITSFR42             0      0       0      43        0.0%
SFR42                0      0       0      43        0.0%
BANK19              50      0       0      44        0.0%
BITSFR43             0      0       0      44        0.0%
SFR43                0      0       0      44        0.0%
BITBANK20           50      0       0      45        0.0%
BITSFR44             0      0       0      45        0.0%
SFR44                0      0       0      45        0.0%
BANK20              50      0       0      46        0.0%
BITSFR45             0      0       0      46        0.0%
SFR45                0      0       0      46        0.0%
BITBANK21           50      0       0      47        0.0%
BITSFR46             0      0       0      47        0.0%
SFR46                0      0       0      47        0.0%
BANK21              50      0       0      48        0.0%
BITSFR47             0      0       0      48        0.0%
SFR47                0      0       0      48        0.0%
BITBANK22           50      0       0      49        0.0%
BITSFR48             0      0       0      49        0.0%
SFR48                0      0       0      49        0.0%
BANK22              50      0       0      50        0.0%
BITSFR49             0      0       0      50        0.0%
SFR49                0      0       0      50        0.0%
BITBANK23           50      0       0      51        0.0%
BITSFR50             0      0       0      51        0.0%
SFR50                0      0       0      51        0.0%
BANK23              50      0       0      52        0.0%
BITSFR51             0      0       0      52        0.0%
SFR51                0      0       0      52        0.0%
BITBANK24           50      0       0      53        0.0%
BITSFR52             0      0       0      53        0.0%
SFR52                0      0       0      53        0.0%
BANK24              50      0       0      54        0.0%
BITSFR53             0      0       0      54        0.0%
SFR53                0      0       0      54        0.0%
BITBANK25           50      0       0      55        0.0%
BITSFR54             0      0       0      55        0.0%
SFR54                0      0       0      55        0.0%
BANK25              50      0       0      56        0.0%
BITSFR55             0      0       0      56        0.0%
SFR55                0      0       0      56        0.0%
BITBANK26           50      0       0      57        0.0%
BITSFR56             0      0       0      57        0.0%
SFR56                0      0       0      57        0.0%
BANK26              50      0       0      58        0.0%
BITSFR57             0      0       0      58        0.0%
SFR57                0      0       0      58        0.0%
BITSFR58             0      0       0      59        0.0%
SFR58                0      0       0      59        0.0%
DATA                 0      0      A9      59        0.0%
BITBANK27           50      0       0      60        0.0%
BITSFR59             0      0       0      60        0.0%
SFR59                0      0       0      60        0.0%
BANK27              50      0       0      61        0.0%
BITSFR60             0      0       0      61        0.0%
SFR60                0      0       0      61        0.0%
BITBANK28           50      0       0      62        0.0%
BITSFR61             0      0       0      62        0.0%
SFR61                0      0       0      62        0.0%
BANK28              50      0       0      63        0.0%
BITSFR62             0      0       0      63        0.0%
SFR62                0      0       0      63        0.0%
BITBANK29           50      0       0      64        0.0%
BITSFR63             0      0       0      64        0.0%
SFR63                0      0       0      64        0.0%
BANK29              50      0       0      65        0.0%
BITBANK30           50      0       0      66        0.0%
BANK30              50      0       0      67        0.0%
BITBANK31           50      0       0      68        0.0%
BANK31              50      0       0      69        0.0%
BITBANK32           50      0       0      70        0.0%
BANK32              50      0       0      71        0.0%
BITBANK33           50      0       0      72        0.0%
BANK33              50      0       0      73        0.0%
BITBANK34           50      0       0      74        0.0%
BANK34              50      0       0      75        0.0%
BITBANK35           50      0       0      76        0.0%
BANK35              50      0       0      77        0.0%
BITBANK36           50      0       0      78        0.0%
BANK36              50      0       0      79        0.0%
BITBANK37           50      0       0      80        0.0%
BANK37              50      0       0      81        0.0%
BITBANK38           50      0       0      82        0.0%
BANK38              50      0       0      83        0.0%
BITBANK39           50      0       0      84        0.0%
BANK39              50      0       0      85        0.0%
BITBANK40           50      0       0      86        0.0%
BANK40              50      0       0      87        0.0%
BITBANK41           50      0       0      88        0.0%
BANK41              50      0       0      89        0.0%
BITBANK42           50      0       0      90        0.0%
BANK42              50      0       0      91        0.0%
BITBANK43           50      0       0      92        0.0%
BANK43              50      0       0      93        0.0%
BITBANK44           50      0       0      94        0.0%
BANK44              50      0       0      95        0.0%
BITBANK45           50      0       0      96        0.0%
BANK45              50      0       0      97        0.0%
BITBANK46           50      0       0      98        0.0%
BANK46              50      0       0      99        0.0%
BITBANK47           50      0       0     100        0.0%
BANK47              50      0       0     101        0.0%
BITBANK48           50      0       0     102        0.0%
BANK48              50      0       0     103        0.0%
BITBANK49           50      0       0     104        0.0%
BANK49              50      0       0     105        0.0%
BITBANK50           50      0       0     106        0.0%
BANK50              50      0       0     107        0.0%


Microchip Technology PIC Macro Assembler V1.45 build -152302408 
Symbol Table                                                                                   Fri Oct 26 20:59:33 2018

            __CFG_CP$OFF 0000                       l50 0E18                       l49 0DF0  
                     _v0 006D                       _v1 00E5                       _v2 00E2  
                     _v3 00DF                       _v4 00DC                       _v5 00D9  
                     _v6 00D6                       _v7 0066      ___wmul@multiplicand 0072  
           ___ftadd@exp1 003C             ___ftadd@exp2 003B              __CFG_LVP$ON 0000  
           ___ftadd@sign 003A                      l111 02A5                      l120 03DA  
                    l114 030C                      l123 0441                      l108 0243  
                    l117 0373                      l126 04A8                      l129 0505  
                    l156 00E3                      l174 018C                      l441 0B5D  
                    l273 0A50                      l442 0B65                      l434 0B4A  
                    l525 0C69                      l465 0FA9             __CFG_CPD$OFF 0000  
                    _adc 006B             __CFG_BORV$LO 0000                      wreg 0009  
           __CFG_ZCD$OFF 0000              main@buffer1 00C4             ___ftdiv@cntr 0047  
           ___ftdiv@sign 004C                     l2000 012C                     l2002 0144  
                   l2012 015B                     l2032 01A8                     l2024 0180  
                   l2042 01BC                     l2050 01D0                     l2034 01AB  
                   l2018 0161                     l1420 0B36                     l1412 0B20  
                   l1500 0A4A                     l2052 01D4                     l2150 0BC9  
                   l1416 0B27                     l1520 0A6D                     l1600 0024  
                   l2072 01FA                     l2064 01F6                     l1426 0B4F  
                   l1418 0B31                     l1530 0F32                     l2058 01E7  
                   l2074 00BC                     l1428 0B57                     l1540 0F48  
                   l1620 007B                     l2076 0234                     l1534 0F39  
                   l1606 003A                     l1710 0C45                     l1560 0F7F  
                   l1552 0F62                     l1720 0C6C                     l1712 0C53  
                   l1570 0F9B                     l1562 0F84                     l1642 0E6D  
                   l1580 0FCD                     l1572 0FA5                     l1564 0F88  
                   l1628 0094                     l1660 0EBE                     l1724 0C7A  
                   l1740 0AC3                     l1830 0AE8                     l1590 0FE8  
                   l1558 0F75                     l1718 0C60                     l1750 0ADE  
                   l1494 0A46                     l1832 0AEB                     l1840 0B02  
                   l1576 0FBB                     l1672 0EDA                     l1664 0EC6  
                   l1648 0E83                     l1834 0AEE                     l1746 0AD5  
                   l1738 0AB7                     l1762 0A89                     l1828 0AE5  
                   l1676 0EE2                     l1692 0C15                     l1764 0A95  
                   l1772 0AAA                     l1846 0B06                     l1838 0AF4  
                   l1768 0AA1                     l1990 00FE                     l1984 00E8  
                   l1986 00F1                     l1978 00DF                     STR_1 100A  
                   u2005 0EE3                     u2015 0EE9                     u2105 0C61  
                   u1315 0B2C                     u2045 0C1C                     u1415 0C8A  
                   u1335 0B45                     u2215 0A8C                     u1425 0C9B  
                   u1505 0D4B                     u2145 0ABA                     u1435 0CA9  
                   u1515 0D66                     u1355 0B52                     u2075 0C46  
                   u2235 0A9B                     u1445 0CB8                     u1525 0D77  
                   u2165 0AC4                     u2245 0AA2                     u1455 0CD3  
                   u2175 0ACE                     u1465 0CE4                     u2185 0AD6  
                   u2425 0176                     u1475 0D1D                     u1395 0B6C  
                   u1485 0D2E                     u1725 0F76                     u1565 0A51  
                   u1495 0D3C                     u2607 023E                     u1575 0A56  
                   u2617 0297                     u2465 019B                     u1755 0F89  
                   u2707 043C                     u2627 02A0                     u2717 049A  
                   u2637 02FE                     u2807 0DBD                     u1695 0F63  
                   u1855 004C                     u1935 0E8F                     u2727 04A3  
                   u2647 0307                     u2817 0DC5                     u1785 0F9C  
                   u1865 005C                     u1945 0E9F                     u2737 0500  
                   u2657 0365                     u2577 0BAF                     u2907 0CC5  
                   u2827 0DCD                     u2747 0D58                     u1875 007C  
                   u2667 036E                     u2587 0BBF                     u2917 0CCB  
                   u2837 0DD5                     u2757 0D5E                     u1885 008B  
                   u1965 0EC7                     u2677 03CC                     u2597 0BF5  
                   u2927 0D02                     u2847 0DDD                     u2767 0D95  
                   u1895 0095                     u1975 0ECD                     u2687 03D5  
                   u2937 0D08                     u2857 0DE5                     u2777 0D9B  
                   u2697 0433                     u2947 0D10                     u2867 0DFE  
                   u2787 0DA1                     u2877 0E0B                     u2797 0DA7  
                   u2887 0E26                     u2897 0E33             __CFG_WRT$OFF 0000  
          __CFG_FCMEN$ON 0000                     _main 0B7C             ___ftpack@arg 0070  
           ___ftpack@exp 0073                     fsr0h 0005                     fsr1h 0007  
                   indf0 0000                     fsr0l 0004                     indf1 0001  
                   fsr1l 0006                     btemp 007E            __CFG_BOREN$ON 0000  
                   start 0002          __end_of_Lcd_Cmd 0D16            __CFG_CSWEN$ON 0000  
          __CFG_MCLRE$ON 0000             ___ftmul@cntr 002E             ___ftmul@sign 002F  
             _Lcd_Chr_CP 0D16             ___fttol@exp1 005A             ___fttol@lval 0056  
         Lcd_Out2@buffer 0074                    ?_main 0060                    _ADPCH 009E  
        __end_of___ftadd 1000            __CFG_WDTE$OFF 0000          __end_of___ftdiv 00B6  
        __end_of___ftmul 0F0A          __end_of___fttol 0C83          __end_of___lwdiv 0AE3  
        __end_of___lwmod 0AAF                    _PORTB 000D                    _PORTC 000E  
                  _PORTD 000F                    _TRISB 0012                    _TRISC 0013  
                  _TRISD 0014            __CFG_PWRTE$ON 0000            ___awtoft@sign 007D  
        __end_of_dpowers 100A          __end_of_isdigit 0A48            ___ftpack@sign 0074  
                  status 0003                    wtemp0 007E          __end_of_sprintf 023A  
       __end_of_Lcd_Init 0E56         __end_of_Lcd_Out2 0B18          __initialization 07E1  
          ?_leersensores 005B             __end_of_main 0BFC                   ??_main 0064  
          ___fttol@sign1 0055                   _ADRESH 008D                   _ADRESL 008C  
       __end_of___awtoft 0A83                   _ANSELB 1F43                   _ANSELC 1F4E  
                 _ANSELD 1F59         __end_of___ftpack 0B7C           __CFG_WDTCCS$SC 0000  
              ??_Lcd_Cmd 0070           ??_leersensores 005D              ?_Lcd_Chr_CP 0070  
                 ___wmul 0A48                ??___ftadd 0036           __CFG_STVREN$ON 0000  
              ??___ftdiv 0043                ??___ftmul 0026                ??___fttol 0051  
              ??___lwdiv 0074                ??___lwmod 007C    ___ftmul@f3_as_product 002B  
              ??_isdigit 0070                ??_sprintf 0024  __end_of__initialization 07FD  
             ___ftadd@f1 0030               ___ftadd@f2 0033               ___ftdiv@f1 0040  
             ___ftdiv@f2 003D               ___ftdiv@f3 0048               ___awtoft@c 0078  
             ___ftmul@f1 0020               ___ftmul@f2 0023               ___fttol@f1 004D  
         __pcstackCOMMON 0070             __pidataBANK1 0004                ?_Lcd_Init 0070  
              ?_Lcd_Out2 0073             sprintf@width 002D      __size_of_Lcd_Chr_CP 0097  
             __pbssBANK0 0066               __pbssBANK1 00D6               __pmaintext 0B7C  
                ?___wmul 0070          __CFG_PPS1WAY$ON 0000                ?___awtoft 0078  
              ?___ftpack 0070      __CFG_RSTOSC$HFINT32 0000     __end_of_leersensores 07E1  
             ??_Lcd_Init 0073               ??_Lcd_Out2 0075                  _Lcd_Cmd 0C83  
              _ADREFbits 009A     __CFG_SCANE$available 0000                  ___ftadd 0F0A  
                ___ftdiv 000D          __size_of___wmul 001B                  ___ftmul 0E56  
                ___fttol 0BFC                  ___lwdiv 0AAF                  ___lwmod 0A83  
             ??___awtoft 007B               ??___ftpack 0075                  __ptext1 00B6  
                __ptext2 0A3A                  __ptext3 0A48                  __ptext4 0A83  
                __ptext5 0AAF                  __ptext6 023A                  __ptext7 0BFC  
                __ptext8 0E56                  __ptext9 000D                  _lectura 0069  
                _dpowers 1000                  _isdigit 0A3A                  _sprintf 00B6  
                clrloop0 0008     end_of_initialization 07FD             ??_Lcd_Chr_CP 0070  
              Lcd_Out2@x 0073                Lcd_Out2@y 0076    __CFG_WDTCPS$WDTCPS_31 0000  
              _PORTCbits 000E                _PORTDbits 000F                _TRISCbits 0013  
              _TRISDbits 0014         __CFG_FEXTOSC$OFF 0000       __end_of_Lcd_Chr_CP 0DAD  
            ___ftdiv@exp 004B              ___ftmul@exp 002A           __end_of___wmul 0A63  
  __size_of_leersensores 05A7      start_initialization 07E1        __size_of_Lcd_Init 00A9  
      __size_of_Lcd_Out2 0035         __CFG_LPBOREN$OFF 0000             _leersensores 023A  
               ??___wmul 0074              __pdataBANK1 00E8        __size_of___awtoft 0020  
      __size_of___ftpack 0064                ___latbits 0004            __pcstackBANK0 0020  
          __pcstackBANK1 00A0         _leersensores$800 00A0         _leersensores$801 00A3  
       _leersensores$810 00BE         _leersensores$802 00A6         _leersensores$811 00C1  
       _leersensores$803 00A9         _leersensores$804 00AC         _leersensores$805 00AF  
       _leersensores$806 00B2         _leersensores$807 00B5         _leersensores$808 00B8  
       _leersensores$809 00BB                 ?_Lcd_Cmd 0070              sprintf@flag 002C  
            sprintf@prec 0029         ___lwdiv@dividend 0072                 ?___ftadd 0030  
               ?___ftdiv 003D                 ?___ftmul 0020                 ?___fttol 004D  
               ?___lwdiv 0070                 ?___lwmod 0078                _condicion 00E8  
               ?_isdigit 0070         ___lwdiv@quotient 0075                 ?_sprintf 0020  
         ___wmul@product 0074                clear_ram0 0007             Lcd_Init@data 0074  
             _ADCON0bits 0093        ___wmul@multiplier 0070             Lcd_Out2@data 0077  
               _Lcd_Init 0DAD                 _Lcd_Out2 0AE3         __size_of_Lcd_Cmd 0093  
       __size_of___ftadd 00F6         __size_of___ftdiv 00A9         __size_of___ftmul 00B4  
       __size_of___fttol 0087         __size_of___lwdiv 0034         __size_of___lwmod 002C  
               ___awtoft 0A63                 ___ftpack 0B18              _isdigit$593 0070  
             sprintf@val 002A         __size_of_isdigit 000E           Lcd_Chr_CP@data 0072  
        ___lwdiv@divisor 0070          ___lwdiv@counter 0077                 __ptext10 0F0A  
               __ptext11 0A63                 __ptext12 0B18                 __ptext13 0AE3  
               __ptext14 0D16                 __ptext15 0DAD                 __ptext16 0C83  
       __size_of_sprintf 0184              Lcd_Cmd@data 0072            __size_of_main 0080  
   __CFG_WDTCWS$WDTCWS_7 0000                 main@argc 0060                 main@argv 0062  
               main@cont 00D4                 isdigit@c 0071                sprintf@ap 0028  
              sprintf@sp 002F         ___lwmod@dividend 007A        __CFG_CLKOUTEN$OFF 0000  
             _OSCFRQbits 0893            __pstringtext1 1000            __pstringtext2 0000  
               sprintf@c 0030                 sprintf@f 0020          ___lwmod@divisor 0078  
        ___lwmod@counter 007D  
