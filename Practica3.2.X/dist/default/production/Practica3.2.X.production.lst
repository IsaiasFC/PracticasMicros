

Microchip Technology PIC LITE Macro Assembler V1.45 build -152302408 
                                                                                               Wed Sep 26 01:27:20 2018

Microchip Technology Omniscient Code Generator v1.45 (Free mode) build 201711160504
     1                           	processor	16F18877
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	idataBANK0,global,class=CODE,delta=2
     5                           	psect	stringtext1,global,class=STRCODE,delta=2
     6                           	psect	stringtext2,global,class=STRCODE,delta=2
     7                           	psect	stringtext3,global,class=STRCODE,delta=2
     8                           	psect	stringtext4,global,class=STRCODE,delta=2
     9                           	psect	stringtext5,global,class=STRCODE,delta=2
    10                           	psect	stringtext6,global,class=STRCODE,delta=2
    11                           	psect	stringtext7,global,class=STRCODE,delta=2
    12                           	psect	stringtext8,global,class=STRCODE,delta=2
    13                           	psect	stringtext9,global,class=STRCODE,delta=2
    14                           	psect	stringtext10,global,class=STRCODE,delta=2
    15                           	psect	cinit,global,class=CODE,merge=1,delta=2
    16                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    17                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
    18                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    19                           	psect	clrtext,global,class=CODE,delta=2
    20                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    21                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    22                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    23                           	psect	text1,local,class=CODE,merge=1,delta=2,group=2
    24                           	psect	text2,local,class=CODE,merge=1,delta=2
    25                           	psect	text3,local,class=CODE,merge=1,delta=2,group=2
    26                           	psect	text4,local,class=CODE,merge=1,delta=2,group=2
    27                           	psect	text5,local,class=CODE,merge=1,delta=2,group=2
    28                           	psect	text6,local,class=CODE,merge=1,delta=2
    29                           	psect	text7,local,class=CODE,merge=1,delta=2
    30                           	psect	text8,local,class=CODE,merge=1,delta=2
    31                           	psect	text9,local,class=CODE,merge=1,delta=2,group=2
    32                           	psect	text10,local,class=CODE,merge=1,delta=2
    33                           	psect	text11,local,class=CODE,merge=1,delta=2
    34                           	psect	text12,local,class=CODE,merge=1,delta=2
    35                           	psect	text13,local,class=CODE,merge=1,delta=2
    36                           	dabs	1,0x7E,2
    37  0000                     
    38                           ; Version 1.45
    39                           ; Generated 16/11/2017 GMT
    40                           ; 
    41                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    42                           ; All rights reserved.
    43                           ; 
    44                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    45                           ; 
    46                           ; Redistribution and use in source and binary forms, with or without modification, are
    47                           ; permitted provided that the following conditions are met:
    48                           ; 
    49                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    50                           ;        conditions and the following disclaimer.
    51                           ; 
    52                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    53                           ;        of conditions and the following disclaimer in the documentation and/or other
    54                           ;        materials provided with the distribution.
    55                           ; 
    56                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    57                           ;        software without specific prior written permission.
    58                           ; 
    59                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    60                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    61                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    62                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    63                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    64                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    65                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    66                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    67                           ; 
    68                           ; 
    69                           ; Code-generator required, PIC16F18877 Definitions
    70                           ; 
    71                           ; SFR Addresses
    72  0000                     	;# 
    73  0001                     	;# 
    74  0002                     	;# 
    75  0003                     	;# 
    76  0004                     	;# 
    77  0005                     	;# 
    78  0006                     	;# 
    79  0007                     	;# 
    80  0008                     	;# 
    81  0009                     	;# 
    82  000A                     	;# 
    83  000B                     	;# 
    84  000C                     	;# 
    85  000D                     	;# 
    86  000E                     	;# 
    87  000F                     	;# 
    88  0010                     	;# 
    89  0011                     	;# 
    90  0012                     	;# 
    91  0013                     	;# 
    92  0014                     	;# 
    93  0015                     	;# 
    94  0016                     	;# 
    95  0017                     	;# 
    96  0018                     	;# 
    97  0019                     	;# 
    98  001A                     	;# 
    99  001C                     	;# 
   100  001C                     	;# 
   101  001D                     	;# 
   102  001D                     	;# 
   103  001E                     	;# 
   104  001F                     	;# 
   105  008C                     	;# 
   106  008C                     	;# 
   107  008D                     	;# 
   108  008E                     	;# 
   109  008E                     	;# 
   110  008F                     	;# 
   111  0090                     	;# 
   112  0090                     	;# 
   113  0091                     	;# 
   114  0093                     	;# 
   115  0094                     	;# 
   116  0095                     	;# 
   117  0096                     	;# 
   118  0097                     	;# 
   119  0098                     	;# 
   120  0099                     	;# 
   121  009A                     	;# 
   122  009B                     	;# 
   123  009C                     	;# 
   124  009D                     	;# 
   125  009E                     	;# 
   126  010C                     	;# 
   127  010D                     	;# 
   128  010E                     	;# 
   129  010E                     	;# 
   130  010F                     	;# 
   131  0110                     	;# 
   132  0110                     	;# 
   133  0111                     	;# 
   134  0112                     	;# 
   135  0112                     	;# 
   136  0113                     	;# 
   137  0114                     	;# 
   138  0114                     	;# 
   139  0115                     	;# 
   140  0116                     	;# 
   141  0116                     	;# 
   142  0117                     	;# 
   143  0119                     	;# 
   144  0119                     	;# 
   145  0119                     	;# 
   146  011A                     	;# 
   147  011A                     	;# 
   148  011A                     	;# 
   149  011B                     	;# 
   150  011B                     	;# 
   151  011B                     	;# 
   152  011B                     	;# 
   153  011B                     	;# 
   154  011C                     	;# 
   155  011C                     	;# 
   156  011C                     	;# 
   157  011D                     	;# 
   158  011D                     	;# 
   159  011D                     	;# 
   160  011E                     	;# 
   161  011E                     	;# 
   162  011E                     	;# 
   163  011F                     	;# 
   164  011F                     	;# 
   165  011F                     	;# 
   166  011F                     	;# 
   167  011F                     	;# 
   168  018C                     	;# 
   169  018D                     	;# 
   170  018E                     	;# 
   171  018F                     	;# 
   172  0190                     	;# 
   173  0191                     	;# 
   174  0192                     	;# 
   175  0196                     	;# 
   176  0197                     	;# 
   177  0198                     	;# 
   178  0199                     	;# 
   179  019A                     	;# 
   180  019B                     	;# 
   181  019C                     	;# 
   182  020C                     	;# 
   183  020C                     	;# 
   184  020D                     	;# 
   185  020E                     	;# 
   186  020F                     	;# 
   187  020F                     	;# 
   188  0210                     	;# 
   189  0210                     	;# 
   190  0211                     	;# 
   191  0211                     	;# 
   192  0212                     	;# 
   193  0212                     	;# 
   194  0213                     	;# 
   195  0214                     	;# 
   196  0215                     	;# 
   197  0215                     	;# 
   198  0216                     	;# 
   199  0216                     	;# 
   200  0217                     	;# 
   201  0217                     	;# 
   202  0218                     	;# 
   203  0218                     	;# 
   204  0219                     	;# 
   205  021A                     	;# 
   206  021B                     	;# 
   207  021B                     	;# 
   208  021C                     	;# 
   209  021C                     	;# 
   210  021D                     	;# 
   211  021D                     	;# 
   212  021E                     	;# 
   213  021F                     	;# 
   214  028C                     	;# 
   215  028C                     	;# 
   216  028D                     	;# 
   217  028D                     	;# 
   218  028E                     	;# 
   219  028F                     	;# 
   220  0290                     	;# 
   221  0290                     	;# 
   222  0291                     	;# 
   223  0292                     	;# 
   224  0292                     	;# 
   225  0293                     	;# 
   226  0293                     	;# 
   227  0294                     	;# 
   228  0295                     	;# 
   229  0296                     	;# 
   230  0296                     	;# 
   231  0297                     	;# 
   232  0298                     	;# 
   233  0298                     	;# 
   234  0299                     	;# 
   235  0299                     	;# 
   236  029A                     	;# 
   237  029B                     	;# 
   238  029C                     	;# 
   239  029C                     	;# 
   240  029D                     	;# 
   241  030C                     	;# 
   242  030C                     	;# 
   243  030D                     	;# 
   244  030E                     	;# 
   245  030F                     	;# 
   246  0310                     	;# 
   247  0310                     	;# 
   248  0311                     	;# 
   249  0312                     	;# 
   250  0313                     	;# 
   251  0314                     	;# 
   252  0314                     	;# 
   253  0315                     	;# 
   254  0316                     	;# 
   255  0317                     	;# 
   256  0318                     	;# 
   257  0318                     	;# 
   258  0319                     	;# 
   259  031A                     	;# 
   260  031B                     	;# 
   261  031C                     	;# 
   262  031C                     	;# 
   263  031D                     	;# 
   264  031E                     	;# 
   265  031F                     	;# 
   266  038C                     	;# 
   267  038D                     	;# 
   268  038E                     	;# 
   269  0390                     	;# 
   270  0391                     	;# 
   271  0392                     	;# 
   272  040C                     	;# 
   273  040D                     	;# 
   274  040E                     	;# 
   275  040F                     	;# 
   276  0410                     	;# 
   277  0411                     	;# 
   278  0416                     	;# 
   279  0416                     	;# 
   280  0417                     	;# 
   281  0418                     	;# 
   282  0418                     	;# 
   283  0419                     	;# 
   284  041A                     	;# 
   285  041A                     	;# 
   286  041B                     	;# 
   287  041C                     	;# 
   288  041C                     	;# 
   289  041D                     	;# 
   290  041E                     	;# 
   291  041F                     	;# 
   292  048C                     	;# 
   293  048C                     	;# 
   294  048D                     	;# 
   295  048E                     	;# 
   296  048F                     	;# 
   297  048F                     	;# 
   298  0490                     	;# 
   299  0491                     	;# 
   300  0492                     	;# 
   301  0492                     	;# 
   302  0493                     	;# 
   303  0494                     	;# 
   304  0495                     	;# 
   305  0495                     	;# 
   306  0496                     	;# 
   307  0497                     	;# 
   308  0498                     	;# 
   309  0499                     	;# 
   310  049A                     	;# 
   311  049B                     	;# 
   312  049C                     	;# 
   313  049D                     	;# 
   314  050C                     	;# 
   315  050C                     	;# 
   316  050D                     	;# 
   317  050E                     	;# 
   318  050F                     	;# 
   319  050F                     	;# 
   320  0510                     	;# 
   321  0511                     	;# 
   322  0512                     	;# 
   323  0512                     	;# 
   324  0513                     	;# 
   325  0514                     	;# 
   326  0515                     	;# 
   327  0515                     	;# 
   328  0516                     	;# 
   329  0517                     	;# 
   330  0518                     	;# 
   331  0519                     	;# 
   332  051A                     	;# 
   333  051B                     	;# 
   334  051C                     	;# 
   335  051D                     	;# 
   336  058C                     	;# 
   337  058C                     	;# 
   338  058D                     	;# 
   339  058E                     	;# 
   340  058F                     	;# 
   341  058F                     	;# 
   342  0590                     	;# 
   343  0591                     	;# 
   344  0592                     	;# 
   345  0593                     	;# 
   346  060C                     	;# 
   347  060D                     	;# 
   348  060E                     	;# 
   349  060F                     	;# 
   350  0610                     	;# 
   351  0611                     	;# 
   352  0612                     	;# 
   353  0613                     	;# 
   354  0614                     	;# 
   355  0616                     	;# 
   356  0617                     	;# 
   357  0618                     	;# 
   358  0619                     	;# 
   359  061A                     	;# 
   360  061B                     	;# 
   361  061C                     	;# 
   362  061D                     	;# 
   363  061E                     	;# 
   364  068C                     	;# 
   365  068D                     	;# 
   366  068E                     	;# 
   367  068F                     	;# 
   368  0690                     	;# 
   369  0691                     	;# 
   370  0692                     	;# 
   371  0693                     	;# 
   372  0694                     	;# 
   373  070C                     	;# 
   374  070D                     	;# 
   375  070E                     	;# 
   376  070F                     	;# 
   377  0710                     	;# 
   378  0711                     	;# 
   379  0712                     	;# 
   380  0713                     	;# 
   381  0714                     	;# 
   382  0716                     	;# 
   383  0717                     	;# 
   384  0718                     	;# 
   385  0719                     	;# 
   386  071A                     	;# 
   387  071B                     	;# 
   388  071C                     	;# 
   389  071D                     	;# 
   390  071E                     	;# 
   391  0796                     	;# 
   392  0797                     	;# 
   393  0798                     	;# 
   394  0799                     	;# 
   395  079A                     	;# 
   396  079B                     	;# 
   397  080C                     	;# 
   398  080D                     	;# 
   399  080E                     	;# 
   400  080F                     	;# 
   401  0810                     	;# 
   402  0811                     	;# 
   403  0812                     	;# 
   404  0813                     	;# 
   405  0814                     	;# 
   406  081A                     	;# 
   407  081B                     	;# 
   408  081C                     	;# 
   409  081D                     	;# 
   410  081E                     	;# 
   411  081F                     	;# 
   412  088C                     	;# 
   413  088D                     	;# 
   414  088E                     	;# 
   415  088F                     	;# 
   416  0890                     	;# 
   417  0891                     	;# 
   418  0892                     	;# 
   419  0893                     	;# 
   420  0895                     	;# 
   421  0896                     	;# 
   422  0897                     	;# 
   423  0898                     	;# 
   424  0899                     	;# 
   425  089A                     	;# 
   426  089B                     	;# 
   427  090C                     	;# 
   428  090E                     	;# 
   429  090F                     	;# 
   430  091F                     	;# 
   431  098F                     	;# 
   432  098F                     	;# 
   433  0990                     	;# 
   434  0991                     	;# 
   435  0992                     	;# 
   436  0993                     	;# 
   437  0994                     	;# 
   438  0995                     	;# 
   439  0996                     	;# 
   440  0997                     	;# 
   441  1E0F                     	;# 
   442  1E10                     	;# 
   443  1E11                     	;# 
   444  1E12                     	;# 
   445  1E13                     	;# 
   446  1E14                     	;# 
   447  1E15                     	;# 
   448  1E16                     	;# 
   449  1E17                     	;# 
   450  1E18                     	;# 
   451  1E19                     	;# 
   452  1E1A                     	;# 
   453  1E1B                     	;# 
   454  1E1C                     	;# 
   455  1E1D                     	;# 
   456  1E1E                     	;# 
   457  1E1F                     	;# 
   458  1E20                     	;# 
   459  1E21                     	;# 
   460  1E22                     	;# 
   461  1E23                     	;# 
   462  1E24                     	;# 
   463  1E25                     	;# 
   464  1E26                     	;# 
   465  1E27                     	;# 
   466  1E28                     	;# 
   467  1E29                     	;# 
   468  1E2A                     	;# 
   469  1E2B                     	;# 
   470  1E2C                     	;# 
   471  1E2D                     	;# 
   472  1E2E                     	;# 
   473  1E2F                     	;# 
   474  1E30                     	;# 
   475  1E31                     	;# 
   476  1E32                     	;# 
   477  1E33                     	;# 
   478  1E34                     	;# 
   479  1E35                     	;# 
   480  1E36                     	;# 
   481  1E37                     	;# 
   482  1E8F                     	;# 
   483  1E90                     	;# 
   484  1E91                     	;# 
   485  1E92                     	;# 
   486  1E93                     	;# 
   487  1E94                     	;# 
   488  1E95                     	;# 
   489  1E96                     	;# 
   490  1E97                     	;# 
   491  1E9C                     	;# 
   492  1E9D                     	;# 
   493  1E9E                     	;# 
   494  1EA1                     	;# 
   495  1EA2                     	;# 
   496  1EA3                     	;# 
   497  1EA4                     	;# 
   498  1EA5                     	;# 
   499  1EA9                     	;# 
   500  1EAA                     	;# 
   501  1EAB                     	;# 
   502  1EAC                     	;# 
   503  1EB1                     	;# 
   504  1EB2                     	;# 
   505  1EB3                     	;# 
   506  1EB8                     	;# 
   507  1EB9                     	;# 
   508  1EBA                     	;# 
   509  1EBB                     	;# 
   510  1EBC                     	;# 
   511  1EBD                     	;# 
   512  1EBE                     	;# 
   513  1EC3                     	;# 
   514  1EC5                     	;# 
   515  1EC6                     	;# 
   516  1EC7                     	;# 
   517  1EC8                     	;# 
   518  1EC9                     	;# 
   519  1ECA                     	;# 
   520  1ECB                     	;# 
   521  1ECC                     	;# 
   522  1F10                     	;# 
   523  1F11                     	;# 
   524  1F12                     	;# 
   525  1F13                     	;# 
   526  1F14                     	;# 
   527  1F15                     	;# 
   528  1F16                     	;# 
   529  1F17                     	;# 
   530  1F18                     	;# 
   531  1F19                     	;# 
   532  1F1A                     	;# 
   533  1F1B                     	;# 
   534  1F1C                     	;# 
   535  1F1D                     	;# 
   536  1F1E                     	;# 
   537  1F1F                     	;# 
   538  1F20                     	;# 
   539  1F21                     	;# 
   540  1F22                     	;# 
   541  1F23                     	;# 
   542  1F24                     	;# 
   543  1F25                     	;# 
   544  1F26                     	;# 
   545  1F27                     	;# 
   546  1F28                     	;# 
   547  1F29                     	;# 
   548  1F2A                     	;# 
   549  1F2B                     	;# 
   550  1F2C                     	;# 
   551  1F2D                     	;# 
   552  1F2E                     	;# 
   553  1F2F                     	;# 
   554  1F30                     	;# 
   555  1F31                     	;# 
   556  1F32                     	;# 
   557  1F38                     	;# 
   558  1F39                     	;# 
   559  1F3A                     	;# 
   560  1F3B                     	;# 
   561  1F3C                     	;# 
   562  1F3D                     	;# 
   563  1F3E                     	;# 
   564  1F3F                     	;# 
   565  1F40                     	;# 
   566  1F41                     	;# 
   567  1F43                     	;# 
   568  1F44                     	;# 
   569  1F45                     	;# 
   570  1F46                     	;# 
   571  1F47                     	;# 
   572  1F48                     	;# 
   573  1F49                     	;# 
   574  1F4A                     	;# 
   575  1F4B                     	;# 
   576  1F4C                     	;# 
   577  1F4E                     	;# 
   578  1F4F                     	;# 
   579  1F50                     	;# 
   580  1F51                     	;# 
   581  1F52                     	;# 
   582  1F53                     	;# 
   583  1F54                     	;# 
   584  1F55                     	;# 
   585  1F56                     	;# 
   586  1F57                     	;# 
   587  1F59                     	;# 
   588  1F5A                     	;# 
   589  1F5B                     	;# 
   590  1F5C                     	;# 
   591  1F5D                     	;# 
   592  1F61                     	;# 
   593  1F62                     	;# 
   594  1F64                     	;# 
   595  1F65                     	;# 
   596  1F66                     	;# 
   597  1F67                     	;# 
   598  1F68                     	;# 
   599  1F69                     	;# 
   600  1F6A                     	;# 
   601  1F6B                     	;# 
   602  1F6C                     	;# 
   603  1F6D                     	;# 
   604  1FE4                     	;# 
   605  1FE5                     	;# 
   606  1FE6                     	;# 
   607  1FE7                     	;# 
   608  1FE8                     	;# 
   609  1FE9                     	;# 
   610  1FEA                     	;# 
   611  1FEB                     	;# 
   612  1FED                     	;# 
   613  1FEE                     	;# 
   614  1FEF                     	;# 
   615                           
   616                           	psect	idataBANK0
   617  0005                     __pidataBANK0:	
   618                           
   619                           ;initializer for _contin2
   620  0005  3401               	retlw	1
   621  0006  3400               	retlw	0
   622                           
   623                           ;initializer for _contin1
   624  0007  3401               	retlw	1
   625  0008  3400               	retlw	0
   626                           
   627                           	psect	stringtext1
   628  1000                     __pstringtext1:	
   629  1000                     _dpowers:	
   630  1000  3401               	retlw	1
   631  1001  3400               	retlw	0
   632  1002  340A               	retlw	10
   633  1003  3400               	retlw	0
   634  1004  3464               	retlw	100
   635  1005  3400               	retlw	0
   636  1006  34E8               	retlw	232
   637  1007  3403               	retlw	3
   638  1008  3410               	retlw	16
   639  1009  3427               	retlw	39
   640  100A                     __end_of_dpowers:	
   641  000C                     _PORTAbits	set	12
   642  0016                     _LATAbits	set	22
   643  000E                     _PORTC	set	14
   644  000F                     _PORTD	set	15
   645  0011                     _TRISA	set	17
   646  000C                     _PORTA	set	12
   647  000F                     _PORTDbits	set	15
   648  000E                     _PORTCbits	set	14
   649  0014                     _TRISDbits	set	20
   650  0013                     _TRISCbits	set	19
   651  0893                     _OSCFRQbits	set	2195
   652  1F4E                     _ANSELC	set	8014
   653  1F59                     _ANSELD	set	8025
   654  1F39                     _WPUA	set	7993
   655  1F38                     _ANSELA	set	7992
   656  100A                     STR_15:	
   657  100A  3452               	retlw	82	;'R'
   658  100B  3445               	retlw	69	;'E'
   659  100C  3453               	retlw	83	;'S'
   660  100D  3455               	retlw	85	;'U'
   661  100E  344C               	retlw	76	;'L'
   662  100F  3454               	retlw	84	;'T'
   663  1010  3441               	retlw	65	;'A'
   664  1011  3444               	retlw	68	;'D'
   665  1012  344F               	retlw	79	;'O'
   666  1013  343D               	retlw	61	;'='
   667  1014  3420               	retlw	32	;' '
   668  1015  3425               	retlw	37	;'%'
   669  1016  3431               	retlw	49	;'1'
   670  1017  3430               	retlw	48	;'0'
   671  1018  3464               	retlw	100	;'d'
   672  1019  3400               	retlw	0
   673                           
   674                           	psect	stringtext2
   675  101A                     __pstringtext2:	
   676  101A                     STR_13:	
   677  101A  344E               	retlw	78	;'N'
   678  101B  3475               	retlw	117	;'u'
   679  101C  346D               	retlw	109	;'m'
   680  101D  3431               	retlw	49	;'1'
   681  101E  343A               	retlw	58	;':'
   682  101F  3420               	retlw	32	;' '
   683  1020  3425               	retlw	37	;'%'
   684  1021  3431               	retlw	49	;'1'
   685  1022  3430               	retlw	48	;'0'
   686  1023  3464               	retlw	100	;'d'
   687  1024  3400               	retlw	0
   688                           
   689                           	psect	stringtext3
   690  1025                     __pstringtext3:	
   691  1025                     STR_14:	
   692  1025  344E               	retlw	78	;'N'
   693  1026  3475               	retlw	117	;'u'
   694  1027  346D               	retlw	109	;'m'
   695  1028  3432               	retlw	50	;'2'
   696  1029  343A               	retlw	58	;':'
   697  102A  3420               	retlw	32	;' '
   698  102B  3425               	retlw	37	;'%'
   699  102C  3431               	retlw	49	;'1'
   700  102D  3430               	retlw	48	;'0'
   701  102E  3464               	retlw	100	;'d'
   702  102F  3400               	retlw	0
   703                           
   704                           	psect	stringtext4
   705  1030                     __pstringtext4:	
   706  1030                     STR_5:	
   707  1030  3423               	retlw	35	;'#'
   708  1031  3400               	retlw	0
   709                           
   710                           	psect	stringtext5
   711  1032                     __pstringtext5:	
   712  1032                     STR_4:	
   713  1032  342A               	retlw	42	;'*'
   714  1033  3400               	retlw	0
   715                           
   716                           	psect	stringtext6
   717  1034                     __pstringtext6:	
   718  1034                     STR_1:	
   719  1034  3441               	retlw	65	;'A'
   720  1035  3400               	retlw	0
   721                           
   722                           	psect	stringtext7
   723  1036                     __pstringtext7:	
   724  1036                     STR_2:	
   725  1036  3442               	retlw	66	;'B'
   726  1037  3400               	retlw	0
   727                           
   728                           	psect	stringtext8
   729  1038                     __pstringtext8:	
   730  1038                     STR_3:	
   731  1038  3443               	retlw	67	;'C'
   732  1039  3400               	retlw	0
   733                           
   734                           	psect	stringtext9
   735  103A                     __pstringtext9:	
   736  103A                     STR_6:	
   737  103A  3444               	retlw	68	;'D'
   738  103B  3400               	retlw	0
   739                           
   740                           	psect	stringtext10
   741  0000                     __pstringtext10:	
   742  1030                     
   743                           ; #config settings
   744  0000                     
   745                           	psect	cinit
   746  07DE                     start_initialization:	
   747  07DE                     __initialization:	
   748                           
   749                           ; Initialize objects allocated to BANK0
   750  07DE  3180  2005  3187   	fcall	__pidataBANK0	;fetch initializer
   751  07E1  00E0               	movwf	__pdataBANK0& (0+127)
   752  07E2  3180  2006  3187   	fcall	__pidataBANK0+1	;fetch initializer
   753  07E5  00E1               	movwf	(__pdataBANK0+1)& (0+127)
   754  07E6  3180  2007  3187   	fcall	__pidataBANK0+2	;fetch initializer
   755  07E9  00E2               	movwf	(__pdataBANK0+2)& (0+127)
   756  07EA  3180  2008  3187   	fcall	__pidataBANK0+3	;fetch initializer
   757  07ED  00E3               	movwf	(__pdataBANK0+3)& (0+127)
   758                           
   759                           ; Clear objects allocated to BANK0
   760  07EE  3047               	movlw	low __pbssBANK0
   761  07EF  0084               	movwf	4
   762  07F0  3000               	movlw	high __pbssBANK0
   763  07F1  0085               	movwf	5
   764  07F2  3019               	movlw	25
   765  07F3  3180  2009  3187   	fcall	clear_ram0
   766                           
   767                           ; Clear objects allocated to BANK1
   768  07F6  30A0               	movlw	low __pbssBANK1
   769  07F7  0084               	movwf	4
   770  07F8  3000               	movlw	high __pbssBANK1
   771  07F9  0085               	movwf	5
   772  07FA  3020               	movlw	32
   773  07FB  3180  2009         	fcall	clear_ram0
   774  07FD                     end_of_initialization:	
   775                           ;End of C runtime variable initialization code
   776                           
   777  07FD                     __end_of__initialization:	
   778  07FD  0140               	movlb	0
   779  07FE  3184  2CA8         	ljmp	_main	;jump to C main() function
   780                           
   781                           	psect	bssBANK0
   782  0047                     __pbssBANK0:	
   783  0047                     _operacion:	
   784  0047                     	ds	2
   785  0049                     _res_int:	
   786  0049                     	ds	2
   787  004B                     _num2_int:	
   788  004B                     	ds	2
   789  004D                     _num1_int:	
   790  004D                     	ds	2
   791  004F                     _num1_char:	
   792  004F                     	ds	16
   793  005F                     _entrada:	
   794  005F                     	ds	1
   795                           
   796                           	psect	dataBANK0
   797  0060                     __pdataBANK0:	
   798  0060                     _contin2:	
   799  0060                     	ds	2
   800  0062                     _contin1:	
   801  0062                     	ds	2
   802                           
   803                           	psect	bssBANK1
   804  00A0                     __pbssBANK1:	
   805  00A0                     _resultado_char:	
   806  00A0                     	ds	16
   807  00B0                     _num2_char:	
   808  00B0                     	ds	16
   809                           
   810                           	psect	clrtext
   811  0009                     clear_ram0:	
   812                           ;	Called with FSR0 containing the base address, and
   813                           ;	WREG with the size to clear
   814                           
   815  0009  0064               	clrwdt	;clear the watchdog before getting into this loop
   816  000A                     clrloop0:	
   817  000A  0180               	clrf	0	;clear RAM location pointed to by FSR
   818  000B  3101               	addfsr 0,1
   819  000C  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
   820  000D  280A               	goto	clrloop0	;have we reached the end yet?
   821  000E  3400               	retlw	0	;all done for this memory range, return
   822                           
   823                           	psect	cstackCOMMON
   824  0070                     __pcstackCOMMON:	
   825  0070                     ?_isdigit:	
   826  0070                     ?_Lcd_Cmd:	
   827                           ; 1 bit 
   828                           
   829  0070                     ??_Lcd_Cmd:	
   830                           ; 1 bytes @ 0x0
   831                           
   832  0070                     ?_Lcd_Chr_CP:	
   833                           ; 1 bytes @ 0x0
   834                           
   835  0070                     ??_Lcd_Chr_CP:	
   836                           ; 1 bytes @ 0x0
   837                           
   838  0070                     ?_strcat:	
   839                           ; 1 bytes @ 0x0
   840                           
   841  0070                     ??_isdigit:	
   842                           ; 1 bytes @ 0x0
   843                           
   844  0070                     ?_Lcd_Init:	
   845                           ; 1 bytes @ 0x0
   846                           
   847  0070                     ?_convertirnum1:	
   848                           ; 1 bytes @ 0x0
   849                           
   850  0070                     ?_convertirnum2:	
   851                           ; 1 bytes @ 0x0
   852                           
   853  0070                     ?___wmul:	
   854                           ; 1 bytes @ 0x0
   855                           
   856  0070                     ?___lwdiv:	
   857                           ; 2 bytes @ 0x0
   858                           
   859  0070                     _isdigit$595:	
   860                           ; 2 bytes @ 0x0
   861                           
   862  0070                     strcat@from:	
   863                           ; 1 bytes @ 0x0
   864                           
   865  0070                     ___wmul@multiplier:	
   866                           ; 1 bytes @ 0x0
   867                           
   868  0070                     ___lwdiv@divisor:	
   869                           ; 2 bytes @ 0x0
   870                           
   871                           
   872                           ; 2 bytes @ 0x0
   873  0070                     	ds	1
   874  0071                     ??_strcat:	
   875  0071                     isdigit@c:	
   876                           ; 1 bytes @ 0x1
   877                           
   878                           
   879                           ; 1 bytes @ 0x1
   880  0071                     	ds	1
   881  0072                     Lcd_Chr_CP@data:	
   882  0072                     Lcd_Cmd@data:	
   883                           ; 1 bytes @ 0x2
   884                           
   885  0072                     strcat@cp:	
   886                           ; 1 bytes @ 0x2
   887                           
   888  0072                     ___wmul@multiplicand:	
   889                           ; 1 bytes @ 0x2
   890                           
   891  0072                     ___lwdiv@dividend:	
   892                           ; 2 bytes @ 0x2
   893                           
   894                           
   895                           ; 2 bytes @ 0x2
   896  0072                     	ds	1
   897  0073                     ??_Lcd_Init:	
   898  0073                     ?_Lcd_Out2:	
   899                           ; 1 bytes @ 0x3
   900                           
   901  0073                     Lcd_Out2@x:	
   902                           ; 1 bytes @ 0x3
   903                           
   904  0073                     strcat@to:	
   905                           ; 1 bytes @ 0x3
   906                           
   907                           
   908                           ; 1 bytes @ 0x3
   909  0073                     	ds	1
   910  0074                     ??___wmul:	
   911  0074                     ??___lwdiv:	
   912                           ; 1 bytes @ 0x4
   913                           
   914  0074                     Lcd_Init@data:	
   915                           ; 1 bytes @ 0x4
   916                           
   917  0074                     Lcd_Out2@buffer:	
   918                           ; 1 bytes @ 0x4
   919                           
   920  0074                     ___wmul@product:	
   921                           ; 1 bytes @ 0x4
   922                           
   923                           
   924                           ; 2 bytes @ 0x4
   925  0074                     	ds	1
   926  0075                     ??_Lcd_Out2:	
   927  0075                     ___lwdiv@quotient:	
   928                           ; 1 bytes @ 0x5
   929                           
   930                           
   931                           ; 2 bytes @ 0x5
   932  0075                     	ds	1
   933  0076                     ?_resultado:	
   934  0076                     ??_convertirnum1:	
   935                           ; 1 bytes @ 0x6
   936                           
   937  0076                     ??_convertirnum2:	
   938                           ; 1 bytes @ 0x6
   939                           
   940  0076                     Lcd_Out2@y:	
   941                           ; 1 bytes @ 0x6
   942                           
   943  0076                     resultado@valor2:	
   944                           ; 1 bytes @ 0x6
   945                           
   946                           
   947                           ; 1 bytes @ 0x6
   948  0076                     	ds	1
   949  0077                     ??_resultado:	
   950  0077                     Lcd_Out2@data:	
   951                           ; 1 bytes @ 0x7
   952                           
   953  0077                     convertirnum1@num:	
   954                           ; 1 bytes @ 0x7
   955                           
   956  0077                     convertirnum2@num2:	
   957                           ; 1 bytes @ 0x7
   958                           
   959  0077                     ___lwdiv@counter:	
   960                           ; 1 bytes @ 0x7
   961                           
   962                           
   963                           ; 1 bytes @ 0x7
   964  0077                     	ds	1
   965  0078                     ?___lwmod:	
   966  0078                     convertirnum1@i:	
   967                           ; 2 bytes @ 0x8
   968                           
   969  0078                     convertirnum2@i:	
   970                           ; 2 bytes @ 0x8
   971                           
   972  0078                     ___lwmod@divisor:	
   973                           ; 2 bytes @ 0x8
   974                           
   975                           
   976                           ; 2 bytes @ 0x8
   977  0078                     	ds	1
   978  0079                     resultado@valor1:	
   979                           
   980                           ; 1 bytes @ 0x9
   981  0079                     	ds	1
   982  007A                     resultado@i:	
   983  007A                     ___lwmod@dividend:	
   984                           ; 2 bytes @ 0xA
   985                           
   986                           
   987                           ; 2 bytes @ 0xA
   988  007A                     	ds	2
   989  007C                     ??___lwmod:	
   990                           
   991                           ; 1 bytes @ 0xC
   992  007C                     	ds	1
   993  007D                     ___lwmod@counter:	
   994                           
   995                           ; 1 bytes @ 0xD
   996  007D                     	ds	1
   997                           
   998                           	psect	cstackBANK0
   999  0020                     __pcstackBANK0:	
  1000  0020                     ?_sprintf:	
  1001  0020                     sprintf@f:	
  1002                           ; 2 bytes @ 0x0
  1003                           
  1004                           
  1005                           ; 2 bytes @ 0x0
  1006  0020                     	ds	4
  1007  0024                     ??_sprintf:	
  1008                           
  1009                           ; 1 bytes @ 0x4
  1010  0024                     	ds	4
  1011  0028                     sprintf@ap:	
  1012                           
  1013                           ; 1 bytes @ 0x8
  1014  0028                     	ds	1
  1015  0029                     sprintf@prec:	
  1016                           
  1017                           ; 1 bytes @ 0x9
  1018  0029                     	ds	1
  1019  002A                     sprintf@flag:	
  1020                           
  1021                           ; 1 bytes @ 0xA
  1022  002A                     	ds	1
  1023  002B                     sprintf@val:	
  1024                           
  1025                           ; 2 bytes @ 0xB
  1026  002B                     	ds	2
  1027  002D                     sprintf@width:	
  1028                           
  1029                           ; 2 bytes @ 0xD
  1030  002D                     	ds	2
  1031  002F                     sprintf@sp:	
  1032                           
  1033                           ; 1 bytes @ 0xF
  1034  002F                     	ds	1
  1035  0030                     sprintf@c:	
  1036                           
  1037                           ; 1 bytes @ 0x10
  1038  0030                     	ds	1
  1039  0031                     ?_main:	
  1040  0031                     main@argc:	
  1041                           ; 2 bytes @ 0x11
  1042                           
  1043                           
  1044                           ; 2 bytes @ 0x11
  1045  0031                     	ds	2
  1046  0033                     main@argv:	
  1047                           
  1048                           ; 2 bytes @ 0x13
  1049  0033                     	ds	2
  1050  0035                     ??_main:	
  1051                           
  1052                           ; 1 bytes @ 0x15
  1053  0035                     	ds	2
  1054  0037                     main@buffer1:	
  1055                           
  1056                           ; 16 bytes @ 0x17
  1057  0037                     	ds	16
  1058                           
  1059                           	psect	maintext
  1060  04A8                     __pmaintext:	
  1061 ;;
  1062 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  1063 ;;
  1064 ;; *************** function _main *****************
  1065 ;; Defined at:
  1066 ;;		line 65 in file "main.c"
  1067 ;; Parameters:    Size  Location     Type
  1068 ;;  argc            2   17[BANK0 ] int 
  1069 ;;  argv            2   19[BANK0 ] PTR PTR unsigned char 
  1070 ;; Auto vars:     Size  Location     Type
  1071 ;;  buffer1        16   23[BANK0 ] unsigned char [16]
  1072 ;;  buffer2        16    0        unsigned char [16]
  1073 ;; Return value:  Size  Location     Type
  1074 ;;                  2   17[BANK0 ] int 
  1075 ;; Registers used:
  1076 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  1077 ;; Tracked objects:
  1078 ;;		On entry : B3F/0
  1079 ;;		On exit  : 0/0
  1080 ;;		Unchanged: 0/0
  1081 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
  1082 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  1083 ;;      Locals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  1084 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  1085 ;;      Totals:         0      22       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  1086 ;;Total ram usage:       22 bytes
  1087 ;; Hardware stack levels required when called:    2
  1088 ;; This function calls:
  1089 ;;		_Lcd_Cmd
  1090 ;;		_Lcd_Init
  1091 ;;		_Lcd_Out2
  1092 ;;		_convertirnum1
  1093 ;;		_convertirnum2
  1094 ;;		_resultado
  1095 ;;		_sprintf
  1096 ;;		_strcat
  1097 ;; This function is called by:
  1098 ;;		Startup code after reset
  1099 ;; This function uses a non-reentrant model
  1100 ;;
  1101                           
  1102                           
  1103                           ;psect for function _main
  1104  04A8                     _main:	
  1105                           
  1106                           ;main.c: 66: OSCFRQbits.HFFRQ=0b110;
  1107                           
  1108                           ;incstack = 0
  1109                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  1110  04A8  0151               	movlb	17	; select bank17
  1111  04A9  0813               	movf	19,w	;volatile
  1112  04AA  39F8               	andlw	-8
  1113  04AB  3806               	iorlw	6
  1114  04AC  0093               	movwf	19	;volatile
  1115                           
  1116                           ;main.c: 67: PORTA=0;
  1117  04AD  0140               	movlb	0	; select bank0
  1118  04AE  018C               	clrf	12	;volatile
  1119                           
  1120                           ;main.c: 68: ANSELA=0;
  1121  04AF  017E               	movlb	62	; select bank62
  1122  04B0  01B8               	clrf	56	;volatile
  1123                           
  1124                           ;main.c: 69: TRISA=0b00001111;
  1125  04B1  300F               	movlw	15
  1126  04B2  0140               	movlb	0	; select bank0
  1127  04B3  0091               	movwf	17	;volatile
  1128                           
  1129                           ;main.c: 70: WPUA=0b11111111;
  1130  04B4  30FF               	movlw	255
  1131  04B5  017E               	movlb	62	; select bank62
  1132  04B6  00B9               	movwf	57	;volatile
  1133                           
  1134                           ;main.c: 71: ANSELA=0;
  1135  04B7  01B8               	clrf	56	;volatile
  1136                           
  1137                           ;main.c: 72: PORTD=0;
  1138  04B8  0140               	movlb	0	; select bank0
  1139  04B9  018F               	clrf	15	;volatile
  1140                           
  1141                           ;main.c: 73: PORTC=0;
  1142  04BA  018E               	clrf	14	;volatile
  1143                           
  1144                           ;main.c: 74: ANSELD=0;
  1145  04BB  017E               	movlb	62	; select bank62
  1146  04BC  01D9               	clrf	89	;volatile
  1147                           
  1148                           ;main.c: 75: ANSELC=0;
  1149  04BD  01CE               	clrf	78	;volatile
  1150                           
  1151                           ;main.c: 77: unsigned char buffer1[16],buffer2[16];
  1152                           ;main.c: 79: Lcd_Init();
  1153  04BE  3181  21E0  3184   	fcall	_Lcd_Init
  1154                           
  1155                           ;main.c: 80: Lcd_Cmd(1);
  1156  04C1  3001               	movlw	1
  1157  04C2  3180  20B6  3184   	fcall	_Lcd_Cmd
  1158                           
  1159                           ;main.c: 81: Lcd_Cmd(12);
  1160  04C5  300C               	movlw	12
  1161  04C6  3180  20B6  3184   	fcall	_Lcd_Cmd
  1162                           
  1163                           ;main.c: 82: _delay((unsigned long)((100)*(32000000/4000.0)));
  1164  04C9  3005               	movlw	5
  1165  04CA  0140               	movlb	0	; select bank0
  1166  04CB  00B6               	movwf	??_main+1
  1167  04CC  300F               	movlw	15
  1168  04CD  00B5               	movwf	??_main
  1169  04CE  30F1               	movlw	241
  1170  04CF                     u2117:	
  1171  04CF  0B89               	decfsz	9,f
  1172  04D0  2CCF               	goto	u2117
  1173  04D1  0BB5               	decfsz	??_main,f
  1174  04D2  2CCF               	goto	u2117
  1175  04D3  0BB6               	decfsz	??_main+1,f
  1176  04D4  2CCF               	goto	u2117
  1177  04D5                     l1827:	
  1178                           ;main.c: 83: while(1){
  1179                           
  1180                           
  1181                           ;main.c: 84: if(contin1<=3){
  1182  04D5  0140               	movlb	0	; select bank0
  1183  04D6  0863               	movf	_contin1+1,w
  1184  04D7  3A80               	xorlw	128
  1185  04D8  00B5               	movwf	??_main
  1186  04D9  3080               	movlw	128
  1187  04DA  0235               	subwf	??_main,w
  1188  04DB  1D03               	skipz
  1189  04DC  2CDF               	goto	u1755
  1190  04DD  3004               	movlw	4
  1191  04DE  0262               	subwf	_contin1,w
  1192  04DF                     u1755:	
  1193  04DF  1803               	skipnc
  1194  04E0  2E2A               	goto	l1973
  1195                           
  1196                           ;main.c: 85: LATAbits.LATA4=1;LATAbits.LATA5=1;LATAbits.LATA6=1;LATAbits.LATA7=1;
  1197  04E1  0140               	movlb	0	; select bank0
  1198  04E2  1616               	bsf	22,4	;volatile
  1199  04E3  1696               	bsf	22,5	;volatile
  1200  04E4  1716               	bsf	22,6	;volatile
  1201  04E5  1796               	bsf	22,7	;volatile
  1202                           
  1203                           ;main.c: 86: LATAbits.LATA4=0;
  1204  04E6  1216               	bcf	22,4	;volatile
  1205                           
  1206                           ;main.c: 87: if(PORTAbits.RA0==0){entrada[0]=1;strcat(num1_char,entrada); contin1++;conv
      +                          ertirnum1(num1_char);}
  1207  04E7  180C               	btfsc	12,0	;volatile
  1208  04E8  2CFC               	goto	l1839
  1209  04E9  01DF               	clrf	_entrada
  1210  04EA  0ADF               	incf	_entrada,f
  1211  04EB  305F               	movlw	(low (_entrada| 0))& (0+255)
  1212  04EC  00B5               	movwf	??_main
  1213  04ED  0835               	movf	??_main,w
  1214  04EE  00F0               	movwf	strcat@from
  1215  04EF  304F               	movlw	(low (_num1_char| 0))& (0+255)
  1216  04F0  318F  2718  3184   	fcall	_strcat
  1217  04F3  3001               	movlw	1
  1218  04F4  0140               	movlb	0	; select bank0
  1219  04F5  07E2               	addwf	_contin1,f
  1220  04F6  3000               	movlw	0
  1221  04F7  3DE3               	addwfc	_contin1+1,f
  1222  04F8  304F               	movlw	(low (_num1_char| 0))& (0+255)
  1223  04F9  318F  279C  3184   	fcall	_convertirnum1
  1224  04FC                     l1839:	
  1225                           
  1226                           ;main.c: 88: if(PORTAbits.RA1==0){entrada[0]=2;strcat(num1_char,entrada); contin1++;conv
      +                          ertirnum1(num1_char);}
  1227  04FC  0140               	movlb	0	; select bank0
  1228  04FD  188C               	btfsc	12,1	;volatile
  1229  04FE  2D14               	goto	l1849
  1230  04FF  3002               	movlw	2
  1231  0500  00B5               	movwf	??_main
  1232  0501  0835               	movf	??_main,w
  1233  0502  00DF               	movwf	_entrada
  1234  0503  305F               	movlw	(low (_entrada| 0))& (0+255)
  1235  0504  00B5               	movwf	??_main
  1236  0505  0835               	movf	??_main,w
  1237  0506  00F0               	movwf	strcat@from
  1238  0507  304F               	movlw	(low (_num1_char| 0))& (0+255)
  1239  0508  318F  2718  3184   	fcall	_strcat
  1240  050B  3001               	movlw	1
  1241  050C  0140               	movlb	0	; select bank0
  1242  050D  07E2               	addwf	_contin1,f
  1243  050E  3000               	movlw	0
  1244  050F  3DE3               	addwfc	_contin1+1,f
  1245  0510  304F               	movlw	(low (_num1_char| 0))& (0+255)
  1246  0511  318F  279C  3184   	fcall	_convertirnum1
  1247  0514                     l1849:	
  1248                           
  1249                           ;main.c: 89: if(PORTAbits.RA2==0){entrada[0]=3;strcat(num1_char,entrada); contin1++;conv
      +                          ertirnum1(num1_char);}
  1250  0514  0140               	movlb	0	; select bank0
  1251  0515  190C               	btfsc	12,2	;volatile
  1252  0516  2D2C               	goto	l1859
  1253  0517  3003               	movlw	3
  1254  0518  00B5               	movwf	??_main
  1255  0519  0835               	movf	??_main,w
  1256  051A  00DF               	movwf	_entrada
  1257  051B  305F               	movlw	(low (_entrada| 0))& (0+255)
  1258  051C  00B5               	movwf	??_main
  1259  051D  0835               	movf	??_main,w
  1260  051E  00F0               	movwf	strcat@from
  1261  051F  304F               	movlw	(low (_num1_char| 0))& (0+255)
  1262  0520  318F  2718  3184   	fcall	_strcat
  1263  0523  3001               	movlw	1
  1264  0524  0140               	movlb	0	; select bank0
  1265  0525  07E2               	addwf	_contin1,f
  1266  0526  3000               	movlw	0
  1267  0527  3DE3               	addwfc	_contin1+1,f
  1268  0528  304F               	movlw	(low (_num1_char| 0))& (0+255)
  1269  0529  318F  279C  3184   	fcall	_convertirnum1
  1270  052C                     l1859:	
  1271                           
  1272                           ;main.c: 90: if(PORTAbits.RA3==0){entrada[0]="A";if(num1_char!=(0)){contin1=4;operacion=
      +                          1; }}
  1273  052C  0140               	movlb	0	; select bank0
  1274  052D  198C               	btfsc	12,3	;volatile
  1275  052E  2D3B               	goto	l1863
  1276  052F  3034               	movlw	(low (STR_1| (0+32768)))& (0+255)
  1277  0530  00B5               	movwf	??_main
  1278  0531  0835               	movf	??_main,w
  1279  0532  00DF               	movwf	_entrada
  1280  0533  3004               	movlw	4
  1281  0534  00E2               	movwf	_contin1
  1282  0535  3000               	movlw	0
  1283  0536  00E3               	movwf	_contin1+1
  1284  0537  3001               	movlw	1
  1285  0538  00C7               	movwf	_operacion
  1286  0539  3000               	movlw	0
  1287  053A  00C8               	movwf	_operacion+1
  1288  053B                     l1863:	
  1289                           
  1290                           ;main.c: 91: LATAbits.LATA4=1;
  1291  053B  1616               	bsf	22,4	;volatile
  1292                           
  1293                           ;main.c: 92: LATAbits.LATA5=0;
  1294  053C  1296               	bcf	22,5	;volatile
  1295                           
  1296                           ;main.c: 93: if(PORTAbits.RA0==0){entrada[0]=4;strcat(num1_char,entrada); contin1++;conv
      +                          ertirnum1(num1_char);}
  1297  053D  180C               	btfsc	12,0	;volatile
  1298  053E  2D54               	goto	l1877
  1299  053F  3004               	movlw	4
  1300  0540  00B5               	movwf	??_main
  1301  0541  0835               	movf	??_main,w
  1302  0542  00DF               	movwf	_entrada
  1303  0543  305F               	movlw	(low (_entrada| 0))& (0+255)
  1304  0544  00B5               	movwf	??_main
  1305  0545  0835               	movf	??_main,w
  1306  0546  00F0               	movwf	strcat@from
  1307  0547  304F               	movlw	(low (_num1_char| 0))& (0+255)
  1308  0548  318F  2718  3184   	fcall	_strcat
  1309  054B  3001               	movlw	1
  1310  054C  0140               	movlb	0	; select bank0
  1311  054D  07E2               	addwf	_contin1,f
  1312  054E  3000               	movlw	0
  1313  054F  3DE3               	addwfc	_contin1+1,f
  1314  0550  304F               	movlw	(low (_num1_char| 0))& (0+255)
  1315  0551  318F  279C  3184   	fcall	_convertirnum1
  1316  0554                     l1877:	
  1317                           
  1318                           ;main.c: 94: if(PORTAbits.RA1==0){entrada[0]=5;strcat(num1_char,entrada); contin1++;conv
      +                          ertirnum1(num1_char);}
  1319  0554  0140               	movlb	0	; select bank0
  1320  0555  188C               	btfsc	12,1	;volatile
  1321  0556  2D6C               	goto	l1887
  1322  0557  3005               	movlw	5
  1323  0558  00B5               	movwf	??_main
  1324  0559  0835               	movf	??_main,w
  1325  055A  00DF               	movwf	_entrada
  1326  055B  305F               	movlw	(low (_entrada| 0))& (0+255)
  1327  055C  00B5               	movwf	??_main
  1328  055D  0835               	movf	??_main,w
  1329  055E  00F0               	movwf	strcat@from
  1330  055F  304F               	movlw	(low (_num1_char| 0))& (0+255)
  1331  0560  318F  2718  3184   	fcall	_strcat
  1332  0563  3001               	movlw	1
  1333  0564  0140               	movlb	0	; select bank0
  1334  0565  07E2               	addwf	_contin1,f
  1335  0566  3000               	movlw	0
  1336  0567  3DE3               	addwfc	_contin1+1,f
  1337  0568  304F               	movlw	(low (_num1_char| 0))& (0+255)
  1338  0569  318F  279C  3184   	fcall	_convertirnum1
  1339  056C                     l1887:	
  1340                           
  1341                           ;main.c: 95: if(PORTAbits.RA2==0){entrada[0]=6;strcat(num1_char,entrada); contin1++;conv
      +                          ertirnum1(num1_char);}
  1342  056C  0140               	movlb	0	; select bank0
  1343  056D  190C               	btfsc	12,2	;volatile
  1344  056E  2D84               	goto	l1897
  1345  056F  3006               	movlw	6
  1346  0570  00B5               	movwf	??_main
  1347  0571  0835               	movf	??_main,w
  1348  0572  00DF               	movwf	_entrada
  1349  0573  305F               	movlw	(low (_entrada| 0))& (0+255)
  1350  0574  00B5               	movwf	??_main
  1351  0575  0835               	movf	??_main,w
  1352  0576  00F0               	movwf	strcat@from
  1353  0577  304F               	movlw	(low (_num1_char| 0))& (0+255)
  1354  0578  318F  2718  3184   	fcall	_strcat
  1355  057B  3001               	movlw	1
  1356  057C  0140               	movlb	0	; select bank0
  1357  057D  07E2               	addwf	_contin1,f
  1358  057E  3000               	movlw	0
  1359  057F  3DE3               	addwfc	_contin1+1,f
  1360  0580  304F               	movlw	(low (_num1_char| 0))& (0+255)
  1361  0581  318F  279C  3184   	fcall	_convertirnum1
  1362  0584                     l1897:	
  1363                           
  1364                           ;main.c: 96: if(PORTAbits.RA3==0){entrada[0]="B";if(num1_char!=(0)){contin1=4;operacion=
      +                          0; }}
  1365  0584  0140               	movlb	0	; select bank0
  1366  0585  198C               	btfsc	12,3	;volatile
  1367  0586  2D91               	goto	l1903
  1368  0587  3036               	movlw	(low (STR_2| (0+32768)))& (0+255)
  1369  0588  00B5               	movwf	??_main
  1370  0589  0835               	movf	??_main,w
  1371  058A  00DF               	movwf	_entrada
  1372  058B  3004               	movlw	4
  1373  058C  00E2               	movwf	_contin1
  1374  058D  3000               	movlw	0
  1375  058E  00E3               	movwf	_contin1+1
  1376  058F  01C7               	clrf	_operacion
  1377  0590  01C8               	clrf	_operacion+1
  1378  0591                     l1903:	
  1379                           
  1380                           ;main.c: 97: LATAbits.LATA5=1;
  1381  0591  1696               	bsf	22,5	;volatile
  1382                           
  1383                           ;main.c: 98: LATAbits.LATA6=0;
  1384  0592  1316               	bcf	22,6	;volatile
  1385                           
  1386                           ;main.c: 99: if(PORTAbits.RA0==0){entrada[0]=7;strcat(num1_char,entrada); contin1++;conv
      +                          ertirnum1(num1_char);}
  1387  0593  180C               	btfsc	12,0	;volatile
  1388  0594  2DAA               	goto	l1917
  1389  0595  3007               	movlw	7
  1390  0596  00B5               	movwf	??_main
  1391  0597  0835               	movf	??_main,w
  1392  0598  00DF               	movwf	_entrada
  1393  0599  305F               	movlw	(low (_entrada| 0))& (0+255)
  1394  059A  00B5               	movwf	??_main
  1395  059B  0835               	movf	??_main,w
  1396  059C  00F0               	movwf	strcat@from
  1397  059D  304F               	movlw	(low (_num1_char| 0))& (0+255)
  1398  059E  318F  2718  3184   	fcall	_strcat
  1399  05A1  3001               	movlw	1
  1400  05A2  0140               	movlb	0	; select bank0
  1401  05A3  07E2               	addwf	_contin1,f
  1402  05A4  3000               	movlw	0
  1403  05A5  3DE3               	addwfc	_contin1+1,f
  1404  05A6  304F               	movlw	(low (_num1_char| 0))& (0+255)
  1405  05A7  318F  279C  3184   	fcall	_convertirnum1
  1406  05AA                     l1917:	
  1407                           
  1408                           ;main.c: 100: if(PORTAbits.RA1==0){entrada[0]=8;strcat(num1_char,entrada); contin1++;con
      +                          vertirnum1(num1_char);}
  1409  05AA  0140               	movlb	0	; select bank0
  1410  05AB  188C               	btfsc	12,1	;volatile
  1411  05AC  2DC2               	goto	l1927
  1412  05AD  3008               	movlw	8
  1413  05AE  00B5               	movwf	??_main
  1414  05AF  0835               	movf	??_main,w
  1415  05B0  00DF               	movwf	_entrada
  1416  05B1  305F               	movlw	(low (_entrada| 0))& (0+255)
  1417  05B2  00B5               	movwf	??_main
  1418  05B3  0835               	movf	??_main,w
  1419  05B4  00F0               	movwf	strcat@from
  1420  05B5  304F               	movlw	(low (_num1_char| 0))& (0+255)
  1421  05B6  318F  2718  3184   	fcall	_strcat
  1422  05B9  3001               	movlw	1
  1423  05BA  0140               	movlb	0	; select bank0
  1424  05BB  07E2               	addwf	_contin1,f
  1425  05BC  3000               	movlw	0
  1426  05BD  3DE3               	addwfc	_contin1+1,f
  1427  05BE  304F               	movlw	(low (_num1_char| 0))& (0+255)
  1428  05BF  318F  279C  3184   	fcall	_convertirnum1
  1429  05C2                     l1927:	
  1430                           
  1431                           ;main.c: 101: if(PORTAbits.RA2==0){entrada[0]=9;strcat(num1_char,entrada); contin1++;con
      +                          vertirnum1(num1_char);}
  1432  05C2  0140               	movlb	0	; select bank0
  1433  05C3  190C               	btfsc	12,2	;volatile
  1434  05C4  2DDA               	goto	l1937
  1435  05C5  3009               	movlw	9
  1436  05C6  00B5               	movwf	??_main
  1437  05C7  0835               	movf	??_main,w
  1438  05C8  00DF               	movwf	_entrada
  1439  05C9  305F               	movlw	(low (_entrada| 0))& (0+255)
  1440  05CA  00B5               	movwf	??_main
  1441  05CB  0835               	movf	??_main,w
  1442  05CC  00F0               	movwf	strcat@from
  1443  05CD  304F               	movlw	(low (_num1_char| 0))& (0+255)
  1444  05CE  318F  2718  3184   	fcall	_strcat
  1445  05D1  3001               	movlw	1
  1446  05D2  0140               	movlb	0	; select bank0
  1447  05D3  07E2               	addwf	_contin1,f
  1448  05D4  3000               	movlw	0
  1449  05D5  3DE3               	addwfc	_contin1+1,f
  1450  05D6  304F               	movlw	(low (_num1_char| 0))& (0+255)
  1451  05D7  318F  279C  3184   	fcall	_convertirnum1
  1452  05DA                     l1937:	
  1453                           
  1454                           ;main.c: 102: if(PORTAbits.RA3==0){entrada[0]="C";}
  1455  05DA  0140               	movlb	0	; select bank0
  1456  05DB  198C               	btfsc	12,3	;volatile
  1457  05DC  2DE1               	goto	l1941
  1458  05DD  3038               	movlw	(low (STR_3| (0+32768)))& (0+255)
  1459  05DE  00B5               	movwf	??_main
  1460  05DF  0835               	movf	??_main,w
  1461  05E0  00DF               	movwf	_entrada
  1462  05E1                     l1941:	
  1463                           
  1464                           ;main.c: 103: LATAbits.LATA6=1;
  1465  05E1  1716               	bsf	22,6	;volatile
  1466                           
  1467                           ;main.c: 104: LATAbits.LATA7=0;
  1468  05E2  1396               	bcf	22,7	;volatile
  1469                           
  1470                           ;main.c: 105: if(PORTAbits.RA0==0){entrada[0]="*";strcat(num1_char,entrada);}
  1471  05E3  180C               	btfsc	12,0	;volatile
  1472  05E4  2DF1               	goto	l1951
  1473  05E5  3032               	movlw	(low (STR_4| (0+32768)))& (0+255)
  1474  05E6  00B5               	movwf	??_main
  1475  05E7  0835               	movf	??_main,w
  1476  05E8  00DF               	movwf	_entrada
  1477  05E9  305F               	movlw	(low (_entrada| 0))& (0+255)
  1478  05EA  00B5               	movwf	??_main
  1479  05EB  0835               	movf	??_main,w
  1480  05EC  00F0               	movwf	strcat@from
  1481  05ED  304F               	movlw	(low (_num1_char| 0))& (0+255)
  1482  05EE  318F  2718  3184   	fcall	_strcat
  1483  05F1                     l1951:	
  1484                           
  1485                           ;main.c: 106: if(PORTAbits.RA1==0){entrada[0]=0;strcat(num1_char,entrada); contin1++;con
      +                          vertirnum1(num1_char);}
  1486  05F1  0140               	movlb	0	; select bank0
  1487  05F2  188C               	btfsc	12,1	;volatile
  1488  05F3  2E06               	goto	l1961
  1489  05F4  01DF               	clrf	_entrada
  1490  05F5  305F               	movlw	(low (_entrada| 0))& (0+255)
  1491  05F6  00B5               	movwf	??_main
  1492  05F7  0835               	movf	??_main,w
  1493  05F8  00F0               	movwf	strcat@from
  1494  05F9  304F               	movlw	(low (_num1_char| 0))& (0+255)
  1495  05FA  318F  2718  3184   	fcall	_strcat
  1496  05FD  3001               	movlw	1
  1497  05FE  0140               	movlb	0	; select bank0
  1498  05FF  07E2               	addwf	_contin1,f
  1499  0600  3000               	movlw	0
  1500  0601  3DE3               	addwfc	_contin1+1,f
  1501  0602  304F               	movlw	(low (_num1_char| 0))& (0+255)
  1502  0603  318F  279C  3184   	fcall	_convertirnum1
  1503  0606                     l1961:	
  1504                           
  1505                           ;main.c: 107: if(PORTAbits.RA2==0){entrada[0]="#";strcat(num1_char,entrada);}
  1506  0606  0140               	movlb	0	; select bank0
  1507  0607  190C               	btfsc	12,2	;volatile
  1508  0608  2E15               	goto	l1967
  1509  0609  3030               	movlw	(low (STR_5| (0+32768)))& (0+255)
  1510  060A  00B5               	movwf	??_main
  1511  060B  0835               	movf	??_main,w
  1512  060C  00DF               	movwf	_entrada
  1513  060D  305F               	movlw	(low (_entrada| 0))& (0+255)
  1514  060E  00B5               	movwf	??_main
  1515  060F  0835               	movf	??_main,w
  1516  0610  00F0               	movwf	strcat@from
  1517  0611  304F               	movlw	(low (_num1_char| 0))& (0+255)
  1518  0612  318F  2718  3184   	fcall	_strcat
  1519  0615                     l1967:	
  1520                           
  1521                           ;main.c: 108: if(PORTAbits.RA3==0){entrada[0]="D";}
  1522  0615  0140               	movlb	0	; select bank0
  1523  0616  198C               	btfsc	12,3	;volatile
  1524  0617  2E1C               	goto	l1971
  1525  0618  303A               	movlw	(low (STR_6| (0+32768)))& (0+255)
  1526  0619  00B5               	movwf	??_main
  1527  061A  0835               	movf	??_main,w
  1528  061B  00DF               	movwf	_entrada
  1529  061C                     l1971:	
  1530                           
  1531                           ;main.c: 109: LATAbits.LATA7=1;
  1532  061C  1796               	bsf	22,7	;volatile
  1533                           
  1534                           ;main.c: 110: _delay((unsigned long)((100)*(32000000/4000.0)));
  1535  061D  3005               	movlw	5
  1536  061E  0140               	movlb	0	; select bank0
  1537  061F  00B6               	movwf	??_main+1
  1538  0620  300F               	movlw	15
  1539  0621  00B5               	movwf	??_main
  1540  0622  30F1               	movlw	241
  1541  0623                     u2127:	
  1542  0623  0B89               	decfsz	9,f
  1543  0624  2E23               	goto	u2127
  1544  0625  0BB5               	decfsz	??_main,f
  1545  0626  2E23               	goto	u2127
  1546  0627  0BB6               	decfsz	??_main+1,f
  1547  0628  2E23               	goto	u2127
  1548                           
  1549                           ;main.c: 111: }else{
  1550  0629  2F74               	goto	l2117
  1551  062A                     l1973:	
  1552                           
  1553                           ;main.c: 112: if(contin2<=3){
  1554  062A  0140               	movlb	0	; select bank0
  1555  062B  0861               	movf	_contin2+1,w
  1556  062C  3A80               	xorlw	128
  1557  062D  00B5               	movwf	??_main
  1558  062E  3080               	movlw	128
  1559  062F  0235               	subwf	??_main,w
  1560  0630  1D03               	skipz
  1561  0631  2E34               	goto	u1925
  1562  0632  3004               	movlw	4
  1563  0633  0260               	subwf	_contin2,w
  1564  0634                     u1925:	
  1565  0634  1803               	skipnc
  1566  0635  2F74               	goto	l2117
  1567                           
  1568                           ;main.c: 113: LATAbits.LATA4=1;LATAbits.LATA5=1;LATAbits.LATA6=1;LATAbits.LATA7=1;
  1569  0636  0140               	movlb	0	; select bank0
  1570  0637  1616               	bsf	22,4	;volatile
  1571  0638  1696               	bsf	22,5	;volatile
  1572  0639  1716               	bsf	22,6	;volatile
  1573  063A  1796               	bsf	22,7	;volatile
  1574                           
  1575                           ;main.c: 114: LATAbits.LATA4=0;
  1576  063B  1216               	bcf	22,4	;volatile
  1577                           
  1578                           ;main.c: 115: if(PORTAbits.RA0==0){entrada[0]=1;strcat(num2_char,entrada); contin2++;con
      +                          vertirnum2(num2_char);}
  1579  063C  180C               	btfsc	12,0	;volatile
  1580  063D  2E51               	goto	l1985
  1581  063E  01DF               	clrf	_entrada
  1582  063F  0ADF               	incf	_entrada,f
  1583  0640  305F               	movlw	(low (_entrada| 0))& (0+255)
  1584  0641  00B5               	movwf	??_main
  1585  0642  0835               	movf	??_main,w
  1586  0643  00F0               	movwf	strcat@from
  1587  0644  30B0               	movlw	(low (_num2_char| 0))& (0+255)
  1588  0645  318F  2718  3184   	fcall	_strcat
  1589  0648  3001               	movlw	1
  1590  0649  0140               	movlb	0	; select bank0
  1591  064A  07E0               	addwf	_contin2,f
  1592  064B  3000               	movlw	0
  1593  064C  3DE1               	addwfc	_contin2+1,f
  1594  064D  30B0               	movlw	(low (_num2_char| 0))& (0+255)
  1595  064E  3180  2052  3184   	fcall	_convertirnum2
  1596  0651                     l1985:	
  1597                           
  1598                           ;main.c: 116: if(PORTAbits.RA1==0){entrada[0]=2;strcat(num2_char,entrada); contin2++;con
      +                          vertirnum2(num2_char);}
  1599  0651  0140               	movlb	0	; select bank0
  1600  0652  188C               	btfsc	12,1	;volatile
  1601  0653  2E69               	goto	l1995
  1602  0654  3002               	movlw	2
  1603  0655  00B5               	movwf	??_main
  1604  0656  0835               	movf	??_main,w
  1605  0657  00DF               	movwf	_entrada
  1606  0658  305F               	movlw	(low (_entrada| 0))& (0+255)
  1607  0659  00B5               	movwf	??_main
  1608  065A  0835               	movf	??_main,w
  1609  065B  00F0               	movwf	strcat@from
  1610  065C  30B0               	movlw	(low (_num2_char| 0))& (0+255)
  1611  065D  318F  2718  3184   	fcall	_strcat
  1612  0660  3001               	movlw	1
  1613  0661  0140               	movlb	0	; select bank0
  1614  0662  07E0               	addwf	_contin2,f
  1615  0663  3000               	movlw	0
  1616  0664  3DE1               	addwfc	_contin2+1,f
  1617  0665  30B0               	movlw	(low (_num2_char| 0))& (0+255)
  1618  0666  3180  2052  3184   	fcall	_convertirnum2
  1619  0669                     l1995:	
  1620                           
  1621                           ;main.c: 117: if(PORTAbits.RA2==0){entrada[0]=3;strcat(num2_char,entrada); contin2++;con
      +                          vertirnum2(num2_char);}
  1622  0669  0140               	movlb	0	; select bank0
  1623  066A  190C               	btfsc	12,2	;volatile
  1624  066B  2E81               	goto	l2005
  1625  066C  3003               	movlw	3
  1626  066D  00B5               	movwf	??_main
  1627  066E  0835               	movf	??_main,w
  1628  066F  00DF               	movwf	_entrada
  1629  0670  305F               	movlw	(low (_entrada| 0))& (0+255)
  1630  0671  00B5               	movwf	??_main
  1631  0672  0835               	movf	??_main,w
  1632  0673  00F0               	movwf	strcat@from
  1633  0674  30B0               	movlw	(low (_num2_char| 0))& (0+255)
  1634  0675  318F  2718  3184   	fcall	_strcat
  1635  0678  3001               	movlw	1
  1636  0679  0140               	movlb	0	; select bank0
  1637  067A  07E0               	addwf	_contin2,f
  1638  067B  3000               	movlw	0
  1639  067C  3DE1               	addwfc	_contin2+1,f
  1640  067D  30B0               	movlw	(low (_num2_char| 0))& (0+255)
  1641  067E  3180  2052  3184   	fcall	_convertirnum2
  1642  0681                     l2005:	
  1643                           
  1644                           ;main.c: 118: if(PORTAbits.RA3==0){entrada[0]="A";}
  1645  0681  0140               	movlb	0	; select bank0
  1646  0682  198C               	btfsc	12,3	;volatile
  1647  0683  2E88               	goto	l2009
  1648  0684  3034               	movlw	(low (STR_1| (0+32768)))& (0+255)
  1649  0685  00B5               	movwf	??_main
  1650  0686  0835               	movf	??_main,w
  1651  0687  00DF               	movwf	_entrada
  1652  0688                     l2009:	
  1653                           
  1654                           ;main.c: 119: LATAbits.LATA4=1;
  1655  0688  1616               	bsf	22,4	;volatile
  1656                           
  1657                           ;main.c: 120: LATAbits.LATA5=0;
  1658  0689  1296               	bcf	22,5	;volatile
  1659                           
  1660                           ;main.c: 121: if(PORTAbits.RA0==0){entrada[0]=4;strcat(num2_char,entrada); contin2++;con
      +                          vertirnum2(num2_char);}
  1661  068A  180C               	btfsc	12,0	;volatile
  1662  068B  2EA1               	goto	l2023
  1663  068C  3004               	movlw	4
  1664  068D  00B5               	movwf	??_main
  1665  068E  0835               	movf	??_main,w
  1666  068F  00DF               	movwf	_entrada
  1667  0690  305F               	movlw	(low (_entrada| 0))& (0+255)
  1668  0691  00B5               	movwf	??_main
  1669  0692  0835               	movf	??_main,w
  1670  0693  00F0               	movwf	strcat@from
  1671  0694  30B0               	movlw	(low (_num2_char| 0))& (0+255)
  1672  0695  318F  2718  3184   	fcall	_strcat
  1673  0698  3001               	movlw	1
  1674  0699  0140               	movlb	0	; select bank0
  1675  069A  07E0               	addwf	_contin2,f
  1676  069B  3000               	movlw	0
  1677  069C  3DE1               	addwfc	_contin2+1,f
  1678  069D  30B0               	movlw	(low (_num2_char| 0))& (0+255)
  1679  069E  3180  2052  3184   	fcall	_convertirnum2
  1680  06A1                     l2023:	
  1681                           
  1682                           ;main.c: 122: if(PORTAbits.RA1==0){entrada[0]=5;strcat(num2_char,entrada); contin2++;con
      +                          vertirnum2(num2_char);}
  1683  06A1  0140               	movlb	0	; select bank0
  1684  06A2  188C               	btfsc	12,1	;volatile
  1685  06A3  2EB9               	goto	l2033
  1686  06A4  3005               	movlw	5
  1687  06A5  00B5               	movwf	??_main
  1688  06A6  0835               	movf	??_main,w
  1689  06A7  00DF               	movwf	_entrada
  1690  06A8  305F               	movlw	(low (_entrada| 0))& (0+255)
  1691  06A9  00B5               	movwf	??_main
  1692  06AA  0835               	movf	??_main,w
  1693  06AB  00F0               	movwf	strcat@from
  1694  06AC  30B0               	movlw	(low (_num2_char| 0))& (0+255)
  1695  06AD  318F  2718  3184   	fcall	_strcat
  1696  06B0  3001               	movlw	1
  1697  06B1  0140               	movlb	0	; select bank0
  1698  06B2  07E0               	addwf	_contin2,f
  1699  06B3  3000               	movlw	0
  1700  06B4  3DE1               	addwfc	_contin2+1,f
  1701  06B5  30B0               	movlw	(low (_num2_char| 0))& (0+255)
  1702  06B6  3180  2052  3184   	fcall	_convertirnum2
  1703  06B9                     l2033:	
  1704                           
  1705                           ;main.c: 123: if(PORTAbits.RA2==0){entrada[0]=6;strcat(num2_char,entrada); contin2++;con
      +                          vertirnum2(num2_char);}
  1706  06B9  0140               	movlb	0	; select bank0
  1707  06BA  190C               	btfsc	12,2	;volatile
  1708  06BB  2ED1               	goto	l2043
  1709  06BC  3006               	movlw	6
  1710  06BD  00B5               	movwf	??_main
  1711  06BE  0835               	movf	??_main,w
  1712  06BF  00DF               	movwf	_entrada
  1713  06C0  305F               	movlw	(low (_entrada| 0))& (0+255)
  1714  06C1  00B5               	movwf	??_main
  1715  06C2  0835               	movf	??_main,w
  1716  06C3  00F0               	movwf	strcat@from
  1717  06C4  30B0               	movlw	(low (_num2_char| 0))& (0+255)
  1718  06C5  318F  2718  3184   	fcall	_strcat
  1719  06C8  3001               	movlw	1
  1720  06C9  0140               	movlb	0	; select bank0
  1721  06CA  07E0               	addwf	_contin2,f
  1722  06CB  3000               	movlw	0
  1723  06CC  3DE1               	addwfc	_contin2+1,f
  1724  06CD  30B0               	movlw	(low (_num2_char| 0))& (0+255)
  1725  06CE  3180  2052  3184   	fcall	_convertirnum2
  1726  06D1                     l2043:	
  1727                           
  1728                           ;main.c: 124: if(PORTAbits.RA3==0){entrada[0]="B";}
  1729  06D1  0140               	movlb	0	; select bank0
  1730  06D2  198C               	btfsc	12,3	;volatile
  1731  06D3  2ED8               	goto	l2047
  1732  06D4  3036               	movlw	(low (STR_2| (0+32768)))& (0+255)
  1733  06D5  00B5               	movwf	??_main
  1734  06D6  0835               	movf	??_main,w
  1735  06D7  00DF               	movwf	_entrada
  1736  06D8                     l2047:	
  1737                           
  1738                           ;main.c: 125: LATAbits.LATA5=1;
  1739  06D8  1696               	bsf	22,5	;volatile
  1740                           
  1741                           ;main.c: 126: LATAbits.LATA6=0;
  1742  06D9  1316               	bcf	22,6	;volatile
  1743                           
  1744                           ;main.c: 127: if(PORTAbits.RA0==0){entrada[0]=7;strcat(num2_char,entrada); contin2++;con
      +                          vertirnum2(num2_char);}
  1745  06DA  180C               	btfsc	12,0	;volatile
  1746  06DB  2EF1               	goto	l2061
  1747  06DC  3007               	movlw	7
  1748  06DD  00B5               	movwf	??_main
  1749  06DE  0835               	movf	??_main,w
  1750  06DF  00DF               	movwf	_entrada
  1751  06E0  305F               	movlw	(low (_entrada| 0))& (0+255)
  1752  06E1  00B5               	movwf	??_main
  1753  06E2  0835               	movf	??_main,w
  1754  06E3  00F0               	movwf	strcat@from
  1755  06E4  30B0               	movlw	(low (_num2_char| 0))& (0+255)
  1756  06E5  318F  2718  3184   	fcall	_strcat
  1757  06E8  3001               	movlw	1
  1758  06E9  0140               	movlb	0	; select bank0
  1759  06EA  07E0               	addwf	_contin2,f
  1760  06EB  3000               	movlw	0
  1761  06EC  3DE1               	addwfc	_contin2+1,f
  1762  06ED  30B0               	movlw	(low (_num2_char| 0))& (0+255)
  1763  06EE  3180  2052  3184   	fcall	_convertirnum2
  1764  06F1                     l2061:	
  1765                           
  1766                           ;main.c: 128: if(PORTAbits.RA1==0){entrada[0]=8;strcat(num2_char,entrada); contin2++;con
      +                          vertirnum2(num2_char);}
  1767  06F1  0140               	movlb	0	; select bank0
  1768  06F2  188C               	btfsc	12,1	;volatile
  1769  06F3  2F09               	goto	l2071
  1770  06F4  3008               	movlw	8
  1771  06F5  00B5               	movwf	??_main
  1772  06F6  0835               	movf	??_main,w
  1773  06F7  00DF               	movwf	_entrada
  1774  06F8  305F               	movlw	(low (_entrada| 0))& (0+255)
  1775  06F9  00B5               	movwf	??_main
  1776  06FA  0835               	movf	??_main,w
  1777  06FB  00F0               	movwf	strcat@from
  1778  06FC  30B0               	movlw	(low (_num2_char| 0))& (0+255)
  1779  06FD  318F  2718  3184   	fcall	_strcat
  1780  0700  3001               	movlw	1
  1781  0701  0140               	movlb	0	; select bank0
  1782  0702  07E0               	addwf	_contin2,f
  1783  0703  3000               	movlw	0
  1784  0704  3DE1               	addwfc	_contin2+1,f
  1785  0705  30B0               	movlw	(low (_num2_char| 0))& (0+255)
  1786  0706  3180  2052  3184   	fcall	_convertirnum2
  1787  0709                     l2071:	
  1788                           
  1789                           ;main.c: 129: if(PORTAbits.RA2==0){entrada[0]=9;strcat(num2_char,entrada); contin2++;con
      +                          vertirnum2(num2_char);}
  1790  0709  0140               	movlb	0	; select bank0
  1791  070A  190C               	btfsc	12,2	;volatile
  1792  070B  2F21               	goto	l2081
  1793  070C  3009               	movlw	9
  1794  070D  00B5               	movwf	??_main
  1795  070E  0835               	movf	??_main,w
  1796  070F  00DF               	movwf	_entrada
  1797  0710  305F               	movlw	(low (_entrada| 0))& (0+255)
  1798  0711  00B5               	movwf	??_main
  1799  0712  0835               	movf	??_main,w
  1800  0713  00F0               	movwf	strcat@from
  1801  0714  30B0               	movlw	(low (_num2_char| 0))& (0+255)
  1802  0715  318F  2718  3184   	fcall	_strcat
  1803  0718  3001               	movlw	1
  1804  0719  0140               	movlb	0	; select bank0
  1805  071A  07E0               	addwf	_contin2,f
  1806  071B  3000               	movlw	0
  1807  071C  3DE1               	addwfc	_contin2+1,f
  1808  071D  30B0               	movlw	(low (_num2_char| 0))& (0+255)
  1809  071E  3180  2052  3184   	fcall	_convertirnum2
  1810  0721                     l2081:	
  1811                           
  1812                           ;main.c: 130: if(PORTAbits.RA3==0){entrada[0]="C";if(num2_char!=(0)){contin2=4;resultado
      +                          (num1_char,num2_char);}}
  1813  0721  0140               	movlb	0	; select bank0
  1814  0722  198C               	btfsc	12,3	;volatile
  1815  0723  2F34               	goto	l2087
  1816  0724  3038               	movlw	(low (STR_3| (0+32768)))& (0+255)
  1817  0725  00B5               	movwf	??_main
  1818  0726  0835               	movf	??_main,w
  1819  0727  00DF               	movwf	_entrada
  1820  0728  3004               	movlw	4
  1821  0729  00E0               	movwf	_contin2
  1822  072A  3000               	movlw	0
  1823  072B  00E1               	movwf	_contin2+1
  1824  072C  30B0               	movlw	(low (_num2_char| 0))& (0+255)
  1825  072D  00B5               	movwf	??_main
  1826  072E  0835               	movf	??_main,w
  1827  072F  00F6               	movwf	resultado@valor2
  1828  0730  304F               	movlw	(low (_num1_char| 0))& (0+255)
  1829  0731  3182  2289  3184   	fcall	_resultado
  1830  0734                     l2087:	
  1831                           
  1832                           ;main.c: 131: LATAbits.LATA6=1;
  1833  0734  0140               	movlb	0	; select bank0
  1834  0735  1716               	bsf	22,6	;volatile
  1835                           
  1836                           ;main.c: 132: LATAbits.LATA7=0;
  1837  0736  1396               	bcf	22,7	;volatile
  1838                           
  1839                           ;main.c: 133: if(PORTAbits.RA0==0){entrada[0]="*";strcat(num2_char,entrada);}
  1840  0737  180C               	btfsc	12,0	;volatile
  1841  0738  2F45               	goto	l2097
  1842  0739  3032               	movlw	(low (STR_4| (0+32768)))& (0+255)
  1843  073A  00B5               	movwf	??_main
  1844  073B  0835               	movf	??_main,w
  1845  073C  00DF               	movwf	_entrada
  1846  073D  305F               	movlw	(low (_entrada| 0))& (0+255)
  1847  073E  00B5               	movwf	??_main
  1848  073F  0835               	movf	??_main,w
  1849  0740  00F0               	movwf	strcat@from
  1850  0741  30B0               	movlw	(low (_num2_char| 0))& (0+255)
  1851  0742  318F  2718  3184   	fcall	_strcat
  1852  0745                     l2097:	
  1853                           
  1854                           ;main.c: 134: if(PORTAbits.RA1==0){entrada[0]=0;strcat(num2_char,entrada); contin2++;con
      +                          vertirnum2(num2_char);}
  1855  0745  0140               	movlb	0	; select bank0
  1856  0746  188C               	btfsc	12,1	;volatile
  1857  0747  2F5A               	goto	l2107
  1858  0748  01DF               	clrf	_entrada
  1859  0749  305F               	movlw	(low (_entrada| 0))& (0+255)
  1860  074A  00B5               	movwf	??_main
  1861  074B  0835               	movf	??_main,w
  1862  074C  00F0               	movwf	strcat@from
  1863  074D  30B0               	movlw	(low (_num2_char| 0))& (0+255)
  1864  074E  318F  2718  3184   	fcall	_strcat
  1865  0751  3001               	movlw	1
  1866  0752  0140               	movlb	0	; select bank0
  1867  0753  07E0               	addwf	_contin2,f
  1868  0754  3000               	movlw	0
  1869  0755  3DE1               	addwfc	_contin2+1,f
  1870  0756  30B0               	movlw	(low (_num2_char| 0))& (0+255)
  1871  0757  3180  2052  3184   	fcall	_convertirnum2
  1872  075A                     l2107:	
  1873                           
  1874                           ;main.c: 135: if(PORTAbits.RA2==0){entrada[0]="#";}
  1875  075A  0140               	movlb	0	; select bank0
  1876  075B  190C               	btfsc	12,2	;volatile
  1877  075C  2F61               	goto	l2111
  1878  075D  3030               	movlw	(low (STR_5| (0+32768)))& (0+255)
  1879  075E  00B5               	movwf	??_main
  1880  075F  0835               	movf	??_main,w
  1881  0760  00DF               	movwf	_entrada
  1882  0761                     l2111:	
  1883                           
  1884                           ;main.c: 136: if(PORTAbits.RA3==0){entrada[0]="D";}
  1885  0761  198C               	btfsc	12,3	;volatile
  1886  0762  2F67               	goto	l2115
  1887  0763  303A               	movlw	(low (STR_6| (0+32768)))& (0+255)
  1888  0764  00B5               	movwf	??_main
  1889  0765  0835               	movf	??_main,w
  1890  0766  00DF               	movwf	_entrada
  1891  0767                     l2115:	
  1892                           
  1893                           ;main.c: 137: LATAbits.LATA7=1;
  1894  0767  1796               	bsf	22,7	;volatile
  1895                           
  1896                           ;main.c: 138: _delay((unsigned long)((100)*(32000000/4000.0)));
  1897  0768  3005               	movlw	5
  1898  0769  0140               	movlb	0	; select bank0
  1899  076A  00B6               	movwf	??_main+1
  1900  076B  300F               	movlw	15
  1901  076C  00B5               	movwf	??_main
  1902  076D  30F1               	movlw	241
  1903  076E                     u2137:	
  1904  076E  0B89               	decfsz	9,f
  1905  076F  2F6E               	goto	u2137
  1906  0770  0BB5               	decfsz	??_main,f
  1907  0771  2F6E               	goto	u2137
  1908  0772  0BB6               	decfsz	??_main+1,f
  1909  0773  2F6E               	goto	u2137
  1910  0774                     l2117:	
  1911                           
  1912                           ;main.c: 139: }
  1913                           ;main.c: 140: }
  1914                           ;main.c: 143: if(res_int==0){
  1915  0774  0140               	movlb	0	; select bank0
  1916  0775  0849               	movf	_res_int,w
  1917  0776  044A               	iorwf	_res_int+1,w
  1918  0777  1D03               	btfss	3,2
  1919  0778  2FB6               	goto	l2125
  1920                           
  1921                           ;main.c: 144: if(contin1<=3){
  1922  0779  0863               	movf	_contin1+1,w
  1923  077A  3A80               	xorlw	128
  1924  077B  00B5               	movwf	??_main
  1925  077C  3080               	movlw	128
  1926  077D  0235               	subwf	??_main,w
  1927  077E  1D03               	skipz
  1928  077F  2F82               	goto	u2105
  1929  0780  3004               	movlw	4
  1930  0781  0262               	subwf	_contin1,w
  1931  0782                     u2105:	
  1932  0782  1803               	skipnc
  1933  0783  2F9D               	goto	l2123
  1934                           
  1935                           ;main.c: 146: sprintf(buffer1,"Num1: %10d",num1_int);
  1936  0784  301A               	movlw	low (STR_13| (0+32768))
  1937  0785  0140               	movlb	0	; select bank0
  1938  0786  00A0               	movwf	sprintf@f
  1939  0787  3090               	movlw	high (STR_13| (0+32768))
  1940  0788  00A1               	movwf	sprintf@f+1
  1941  0789  084E               	movf	_num1_int+1,w
  1942  078A  00A3               	movwf	?_sprintf+3
  1943  078B  084D               	movf	_num1_int,w
  1944  078C  00A2               	movwf	?_sprintf+2
  1945  078D  3037               	movlw	(low (main@buffer1| 0))& (0+255)
  1946  078E  3183  2358  3184   	fcall	_sprintf
  1947                           
  1948                           ;main.c: 147: Lcd_Out2(1,1,buffer1);
  1949  0791  01F3               	clrf	Lcd_Out2@x
  1950  0792  0AF3               	incf	Lcd_Out2@x,f
  1951  0793  3037               	movlw	(low (main@buffer1| 0))& (0+255)
  1952  0794  0140               	movlb	0	; select bank0
  1953  0795  00B5               	movwf	??_main
  1954  0796  0835               	movf	??_main,w
  1955  0797  00F4               	movwf	Lcd_Out2@buffer
  1956  0798  3001               	movlw	1
  1957  0799  3180  201D  3184   	fcall	_Lcd_Out2
  1958                           
  1959                           ;main.c: 149: }else{
  1960  079C  2CD5               	goto	l1827
  1961  079D                     l2123:	
  1962                           
  1963                           ;main.c: 151: sprintf(buffer1,"Num2: %10d",num2_int);
  1964  079D  3025               	movlw	low (STR_14| (0+32768))
  1965  079E  0140               	movlb	0	; select bank0
  1966  079F  00A0               	movwf	sprintf@f
  1967  07A0  3090               	movlw	high (STR_14| (0+32768))
  1968  07A1  00A1               	movwf	sprintf@f+1
  1969  07A2  084C               	movf	_num2_int+1,w
  1970  07A3  00A3               	movwf	?_sprintf+3
  1971  07A4  084B               	movf	_num2_int,w
  1972  07A5  00A2               	movwf	?_sprintf+2
  1973  07A6  3037               	movlw	(low (main@buffer1| 0))& (0+255)
  1974  07A7  3183  2358  3184   	fcall	_sprintf
  1975                           
  1976                           ;main.c: 152: Lcd_Out2(1,1,buffer1);
  1977  07AA  01F3               	clrf	Lcd_Out2@x
  1978  07AB  0AF3               	incf	Lcd_Out2@x,f
  1979  07AC  3037               	movlw	(low (main@buffer1| 0))& (0+255)
  1980  07AD  0140               	movlb	0	; select bank0
  1981  07AE  00B5               	movwf	??_main
  1982  07AF  0835               	movf	??_main,w
  1983  07B0  00F4               	movwf	Lcd_Out2@buffer
  1984  07B1  3001               	movlw	1
  1985  07B2  3180  201D  3184   	fcall	_Lcd_Out2
  1986                           
  1987                           ;main.c: 154: }
  1988                           ;main.c: 155: }else{
  1989  07B5  2CD5               	goto	l1827
  1990  07B6                     l2125:	
  1991                           
  1992                           ;main.c: 157: sprintf(buffer1,"RESULTADO= %10d",res_int);
  1993  07B6  300A               	movlw	low (STR_15| (0+32768))
  1994  07B7  0140               	movlb	0	; select bank0
  1995  07B8  00A0               	movwf	sprintf@f
  1996  07B9  3090               	movlw	high (STR_15| (0+32768))
  1997  07BA  00A1               	movwf	sprintf@f+1
  1998  07BB  084A               	movf	_res_int+1,w
  1999  07BC  00A3               	movwf	?_sprintf+3
  2000  07BD  0849               	movf	_res_int,w
  2001  07BE  00A2               	movwf	?_sprintf+2
  2002  07BF  3037               	movlw	(low (main@buffer1| 0))& (0+255)
  2003  07C0  3183  2358  3184   	fcall	_sprintf
  2004                           
  2005                           ;main.c: 158: Lcd_Out2(1,1,buffer1);
  2006  07C3  01F3               	clrf	Lcd_Out2@x
  2007  07C4  0AF3               	incf	Lcd_Out2@x,f
  2008  07C5  3037               	movlw	(low (main@buffer1| 0))& (0+255)
  2009  07C6  0140               	movlb	0	; select bank0
  2010  07C7  00B5               	movwf	??_main
  2011  07C8  0835               	movf	??_main,w
  2012  07C9  00F4               	movwf	Lcd_Out2@buffer
  2013  07CA  3001               	movlw	1
  2014  07CB  3180  201D  3184   	fcall	_Lcd_Out2
  2015                           
  2016                           ;main.c: 160: res_int=0;
  2017  07CE  0140               	movlb	0	; select bank0
  2018  07CF  01C9               	clrf	_res_int
  2019  07D0  01CA               	clrf	_res_int+1
  2020                           
  2021                           ;main.c: 161: contin1=1;
  2022  07D1  3001               	movlw	1
  2023  07D2  00E2               	movwf	_contin1
  2024  07D3  3000               	movlw	0
  2025  07D4  00E3               	movwf	_contin1+1
  2026                           
  2027                           ;main.c: 162: contin2=1;
  2028  07D5  3001               	movlw	1
  2029  07D6  00E0               	movwf	_contin2
  2030  07D7  3000               	movlw	0
  2031  07D8  00E1               	movwf	_contin2+1
  2032                           
  2033                           ;main.c: 163: num1_int=0;
  2034  07D9  01CD               	clrf	_num1_int
  2035  07DA  01CE               	clrf	_num1_int+1
  2036                           
  2037                           ;main.c: 164: num2_int=0;
  2038  07DB  01CB               	clrf	_num2_int
  2039  07DC  01CC               	clrf	_num2_int+1
  2040  07DD  2CD5               	goto	l1827
  2041  07DE                     __end_of_main:	
  2042                           ;main.c: 166: }
  2043                           ;main.c: 167: }
  2044                           ;main.c: 168: return (0);
  2045                           ;	Return value of _main is never used
  2046                           
  2047                           
  2048                           	psect	text1
  2049  0F18                     __ptext1:	
  2050 ;; *************** function _strcat *****************
  2051 ;; Defined at:
  2052 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\strcat.c"
  2053 ;; Parameters:    Size  Location     Type
  2054 ;;  to              1    wreg     PTR unsigned char 
  2055 ;;		 -> num2_char(16), num1_char(16), 
  2056 ;;  from            1    0[COMMON] PTR const unsigned char 
  2057 ;;		 -> entrada(1), 
  2058 ;; Auto vars:     Size  Location     Type
  2059 ;;  to              1    3[COMMON] PTR unsigned char 
  2060 ;;		 -> num2_char(16), num1_char(16), 
  2061 ;;  cp              1    2[COMMON] PTR unsigned char 
  2062 ;;		 -> num2_char(16), num1_char(16), 
  2063 ;; Return value:  Size  Location     Type
  2064 ;;                  1    wreg      PTR unsigned char 
  2065 ;; Registers used:
  2066 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0
  2067 ;; Tracked objects:
  2068 ;;		On entry : 0/0
  2069 ;;		On exit  : 0/0
  2070 ;;		Unchanged: 0/0
  2071 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
  2072 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  2073 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  2074 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  2075 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  2076 ;;Total ram usage:        4 bytes
  2077 ;; Hardware stack levels used:    1
  2078 ;; This function calls:
  2079 ;;		Nothing
  2080 ;; This function is called by:
  2081 ;;		_main
  2082 ;; This function uses a non-reentrant model
  2083 ;;
  2084                           
  2085                           
  2086                           ;psect for function _strcat
  2087  0F18                     _strcat:	
  2088                           
  2089                           ;incstack = 0
  2090                           ; Regs used in _strcat: [wreg-fsr1h+status,2+status,0]
  2091                           ;strcat@to stored from wreg
  2092  0F18  00F3               	movwf	strcat@to
  2093  0F19  0873               	movf	strcat@to,w
  2094  0F1A  00F1               	movwf	??_strcat
  2095  0F1B  0871               	movf	??_strcat,w
  2096  0F1C  00F2               	movwf	strcat@cp
  2097  0F1D                     l1683:	
  2098  0F1D  0872               	movf	strcat@cp,w
  2099  0F1E  0086               	movwf	6
  2100  0F1F  0187               	clrf	7
  2101  0F20  0801               	movf	1,w
  2102  0F21  1903               	btfsc	3,2
  2103  0F22  2F30               	goto	l1687
  2104  0F23  3001               	movlw	1
  2105  0F24  00F1               	movwf	??_strcat
  2106  0F25  0871               	movf	??_strcat,w
  2107  0F26  07F2               	addwf	strcat@cp,f
  2108  0F27  2F1D               	goto	l1683
  2109  0F28                     l1685:	
  2110  0F28  3001               	movlw	1
  2111  0F29  00F1               	movwf	??_strcat
  2112  0F2A  0871               	movf	??_strcat,w
  2113  0F2B  07F2               	addwf	strcat@cp,f
  2114  0F2C  3001               	movlw	1
  2115  0F2D  00F1               	movwf	??_strcat
  2116  0F2E  0871               	movf	??_strcat,w
  2117  0F2F  07F0               	addwf	strcat@from,f
  2118  0F30                     l1687:	
  2119  0F30  0872               	movf	strcat@cp,w
  2120  0F31  0086               	movwf	6
  2121  0F32  0187               	clrf	7
  2122  0F33  0870               	movf	strcat@from,w
  2123  0F34  0084               	movwf	4
  2124  0F35  0185               	clrf	5
  2125  0F36  0800               	movf	0,w
  2126  0F37  3FC0               	movwi [0]fsr1
  2127  0F38  0889               	movf	9,f
  2128  0F39  1903               	btfsc	3,2
  2129  0F3A  0008               	return
  2130  0F3B  2F28               	goto	l1685
  2131  0F3C                     __end_of_strcat:	
  2132                           ;	Return value of _strcat is never used
  2133                           
  2134                           
  2135                           	psect	text2
  2136  0358                     __ptext2:	
  2137 ;; *************** function _sprintf *****************
  2138 ;; Defined at:
  2139 ;;		line 492 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\doprnt.c"
  2140 ;; Parameters:    Size  Location     Type
  2141 ;;  sp              1    wreg     PTR unsigned char 
  2142 ;;		 -> main@buffer1(16), 
  2143 ;;  f               2    0[BANK0 ] PTR const unsigned char 
  2144 ;;		 -> STR_15(16), STR_14(11), STR_13(11), 
  2145 ;; Auto vars:     Size  Location     Type
  2146 ;;  sp              1   15[BANK0 ] PTR unsigned char 
  2147 ;;		 -> main@buffer1(16), 
  2148 ;;  tmpval          4    0        struct .
  2149 ;;  width           2   13[BANK0 ] int 
  2150 ;;  val             2   11[BANK0 ] unsigned int 
  2151 ;;  cp              2    0        PTR const unsigned char 
  2152 ;;  len             2    0        unsigned int 
  2153 ;;  c               1   16[BANK0 ] char 
  2154 ;;  flag            1   10[BANK0 ] unsigned char 
  2155 ;;  prec            1    9[BANK0 ] char 
  2156 ;;  ap              1    8[BANK0 ] PTR void [1]
  2157 ;;		 -> ?_sprintf(2), 
  2158 ;; Return value:  Size  Location     Type
  2159 ;;                  2    0[BANK0 ] int 
  2160 ;; Registers used:
  2161 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2162 ;; Tracked objects:
  2163 ;;		On entry : 0/0
  2164 ;;		On exit  : 0/0
  2165 ;;		Unchanged: 0/0
  2166 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
  2167 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  2168 ;;      Locals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  2169 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  2170 ;;      Totals:         0      17       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  2171 ;;Total ram usage:       17 bytes
  2172 ;; Hardware stack levels used:    1
  2173 ;; Hardware stack levels required when called:    1
  2174 ;; This function calls:
  2175 ;;		___lwdiv
  2176 ;;		___lwmod
  2177 ;;		___wmul
  2178 ;;		_isdigit
  2179 ;; This function is called by:
  2180 ;;		_main
  2181 ;; This function uses a non-reentrant model
  2182 ;;
  2183                           
  2184                           
  2185                           ;psect for function _sprintf
  2186  0358                     _sprintf:	
  2187                           
  2188                           ;incstack = 0
  2189                           ; Regs used in _sprintf: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  2190                           ;sprintf@sp stored from wreg
  2191  0358  0140               	movlb	0	; select bank0
  2192  0359  00AF               	movwf	sprintf@sp
  2193                           
  2194                           ;doprnt.c: 494: va_list ap;
  2195                           ;doprnt.c: 499: signed char c;
  2196                           ;doprnt.c: 501: int width;
  2197                           ;doprnt.c: 506: signed char prec;
  2198                           ;doprnt.c: 508: unsigned char flag;
  2199                           ;doprnt.c: 523: union {
  2200                           ;doprnt.c: 524: unsigned long vd;
  2201                           ;doprnt.c: 525: double integ;
  2202                           ;doprnt.c: 526: } tmpval;
  2203                           ;doprnt.c: 528: unsigned int val;
  2204                           ;doprnt.c: 529: unsigned len;
  2205                           ;doprnt.c: 530: const char * cp;
  2206                           ;doprnt.c: 533: *ap = __va_start();
  2207  035A  3022               	movlw	(low ((?_sprintf| 0+2)))& (0+255)
  2208  035B  00A4               	movwf	??_sprintf
  2209  035C  0824               	movf	??_sprintf,w
  2210  035D  00A8               	movwf	sprintf@ap
  2211  035E                     l1771:	
  2212                           ;doprnt.c: 536: while(c = *f++) {
  2213                           
  2214  035E  0140               	movlb	0	; select bank0
  2215  035F  0821               	movf	sprintf@f+1,w
  2216  0360  00A5               	movwf	??_sprintf+1
  2217  0361  0820               	movf	sprintf@f,w
  2218  0362  00A4               	movwf	??_sprintf
  2219  0363  0AA0               	incf	sprintf@f,f
  2220  0364  1903               	skipnz
  2221  0365  0AA1               	incf	sprintf@f+1,f
  2222  0366  0824               	movf	??_sprintf,w
  2223  0367  0084               	movwf	4
  2224  0368  0825               	movf	??_sprintf+1,w
  2225  0369  0085               	movwf	5
  2226  036A  0800               	movf	0,w	;code access
  2227  036B  00A6               	movwf	??_sprintf+2
  2228  036C  0826               	movf	??_sprintf+2,w
  2229  036D  00B0               	movwf	sprintf@c
  2230  036E  0830               	movf	sprintf@c,w
  2231  036F  1903               	btfsc	3,2
  2232  0370  2CA2               	goto	l1773
  2233                           
  2234                           ;doprnt.c: 538: if(c != '%')
  2235  0371  3025               	movlw	37
  2236  0372  0630               	xorwf	sprintf@c,w
  2237  0373  1903               	btfsc	3,2
  2238  0374  2B81               	goto	l1697
  2239                           
  2240                           ;doprnt.c: 540: {
  2241                           ;doprnt.c: 541: ((*sp++ = (c)));
  2242  0375  0830               	movf	sprintf@c,w
  2243  0376  00A4               	movwf	??_sprintf
  2244  0377  082F               	movf	sprintf@sp,w
  2245  0378  0086               	movwf	6
  2246  0379  0187               	clrf	7
  2247  037A  0824               	movf	??_sprintf,w
  2248  037B  0081               	movwf	1
  2249  037C  3001               	movlw	1
  2250  037D  00A4               	movwf	??_sprintf
  2251  037E  0824               	movf	??_sprintf,w
  2252  037F  07AF               	addwf	sprintf@sp,f
  2253                           
  2254                           ;doprnt.c: 542: continue;
  2255  0380  2B5E               	goto	l1771
  2256  0381                     l1697:	
  2257                           
  2258                           ;doprnt.c: 543: }
  2259                           ;doprnt.c: 546: width = 0;
  2260  0381  01AD               	clrf	sprintf@width
  2261  0382  01AE               	clrf	sprintf@width+1
  2262                           
  2263                           ;doprnt.c: 548: flag = 0;
  2264  0383  01AA               	clrf	sprintf@flag
  2265                           
  2266                           ;doprnt.c: 597: if(isdigit((unsigned)*f)) {
  2267  0384  0820               	movf	sprintf@f,w
  2268  0385  0084               	movwf	4
  2269  0386  0821               	movf	sprintf@f+1,w
  2270  0387  0085               	movwf	5
  2271  0388  0800               	movf	0,w	;code access
  2272  0389  3180  200F  3183   	fcall	_isdigit
  2273  038C  1C03               	btfss	3,0
  2274  038D  2BBF               	goto	l1713
  2275                           
  2276                           ;doprnt.c: 598: width = 0;
  2277  038E  0140               	movlb	0	; select bank0
  2278  038F  01AD               	clrf	sprintf@width
  2279  0390  01AE               	clrf	sprintf@width+1
  2280  0391                     l1703:	
  2281                           ;doprnt.c: 599: do {
  2282                           
  2283                           
  2284                           ;doprnt.c: 600: width *= 10;
  2285  0391  300A               	movlw	10
  2286  0392  00F0               	movwf	___wmul@multiplier
  2287  0393  3000               	movlw	0
  2288  0394  00F1               	movwf	___wmul@multiplier+1
  2289  0395  0140               	movlb	0	; select bank0
  2290  0396  082E               	movf	sprintf@width+1,w
  2291  0397  00F3               	movwf	___wmul@multiplicand+1
  2292  0398  082D               	movf	sprintf@width,w
  2293  0399  00F2               	movwf	___wmul@multiplicand
  2294  039A  318E  26FD  3183   	fcall	___wmul
  2295  039D  0871               	movf	?___wmul+1,w
  2296  039E  0140               	movlb	0	; select bank0
  2297  039F  00AE               	movwf	sprintf@width+1
  2298  03A0  0870               	movf	?___wmul,w
  2299  03A1  00AD               	movwf	sprintf@width
  2300                           
  2301                           ;doprnt.c: 601: width += *f++ - '0';
  2302  03A2  0820               	movf	sprintf@f,w
  2303  03A3  0084               	movwf	4
  2304  03A4  0821               	movf	sprintf@f+1,w
  2305  03A5  0085               	movwf	5
  2306  03A6  0800               	movf	0,w	;code access
  2307  03A7  3ED0               	addlw	208
  2308  03A8  00A4               	movwf	??_sprintf
  2309  03A9  30FF               	movlw	255
  2310  03AA  1803               	skipnc
  2311  03AB  3000               	movlw	0
  2312  03AC  00A5               	movwf	??_sprintf+1
  2313  03AD  0824               	movf	??_sprintf,w
  2314  03AE  07AD               	addwf	sprintf@width,f
  2315  03AF  0825               	movf	??_sprintf+1,w
  2316  03B0  3DAE               	addwfc	sprintf@width+1,f
  2317  03B1  3001               	movlw	1
  2318  03B2  07A0               	addwf	sprintf@f,f
  2319  03B3  3000               	movlw	0
  2320  03B4  3DA1               	addwfc	sprintf@f+1,f
  2321                           
  2322                           ;doprnt.c: 602: } while(isdigit((unsigned)*f));
  2323  03B5  0820               	movf	sprintf@f,w
  2324  03B6  0084               	movwf	4
  2325  03B7  0821               	movf	sprintf@f+1,w
  2326  03B8  0085               	movwf	5
  2327  03B9  0800               	movf	0,w	;code access
  2328  03BA  3180  200F  3183   	fcall	_isdigit
  2329  03BD  1803               	btfsc	3,0
  2330  03BE  2B91               	goto	l1703
  2331  03BF                     l1713:	
  2332                           ;doprnt.c: 822: }
  2333                           
  2334                           ;doprnt.c: 813: continue;
  2335                           
  2336                           ;doprnt.c: 802: default:
  2337                           
  2338                           ;doprnt.c: 698: case 'i':
  2339                           ;doprnt.c: 699: break;
  2340                           
  2341                           ;doprnt.c: 697: case 'd':
  2342                           
  2343                           ;doprnt.c: 638: goto alldone;
  2344                           
  2345                           ;doprnt.c: 637: case 0:
  2346                           
  2347                           ;doprnt.c: 608: }
  2348                           ;doprnt.c: 635: switch(c = *f++) {
  2349                           
  2350  03BF  0140               	movlb	0	; select bank0
  2351  03C0  0821               	movf	sprintf@f+1,w
  2352  03C1  00A5               	movwf	??_sprintf+1
  2353  03C2  0820               	movf	sprintf@f,w
  2354  03C3  00A4               	movwf	??_sprintf
  2355  03C4  0AA0               	incf	sprintf@f,f
  2356  03C5  1903               	skipnz
  2357  03C6  0AA1               	incf	sprintf@f+1,f
  2358  03C7  0824               	movf	??_sprintf,w
  2359  03C8  0084               	movwf	4
  2360  03C9  0825               	movf	??_sprintf+1,w
  2361  03CA  0085               	movwf	5
  2362  03CB  0800               	movf	0,w	;code access
  2363  03CC  00B0               	movwf	sprintf@c
  2364                           
  2365                           ; Switch size 1, requested type "space"
  2366                           ; Number of cases is 3, Range of values is 0 to 105
  2367                           ; switch strategies available:
  2368                           ; Name         Instructions Cycles
  2369                           ; simple_byte           10     6 (average)
  2370                           ; direct_byte          218     6 (fixed)
  2371                           ; jumptable            260     6 (fixed)
  2372                           ;	Chosen strategy is simple_byte
  2373  03CD  3A00               	xorlw	0	; case 0
  2374  03CE  1903               	skipnz
  2375  03CF  2CA2               	goto	l1773
  2376  03D0  3A64               	xorlw	100	; case 100
  2377  03D1  1903               	skipnz
  2378  03D2  2BD7               	goto	l1715
  2379  03D3  3A0D               	xorlw	13	; case 105
  2380  03D4  1903               	skipnz
  2381  03D5  2BD7               	goto	l1715
  2382  03D6  2B5E               	goto	l1771
  2383  03D7                     l1715:	
  2384                           
  2385                           ;doprnt.c: 1253: {
  2386                           ;doprnt.c: 1259: val = (int)(*(int *)__va_arg((*(int **)ap), (int)0));
  2387  03D7  0140               	movlb	0	; select bank0
  2388  03D8  0828               	movf	sprintf@ap,w
  2389  03D9  0086               	movwf	6
  2390  03DA  0187               	clrf	7
  2391  03DB  3F40               	moviw [0]fsr1
  2392  03DC  00AB               	movwf	sprintf@val
  2393  03DD  3F41               	moviw [1]fsr1
  2394  03DE  00AC               	movwf	sprintf@val+1
  2395  03DF  3002               	movlw	2
  2396  03E0  00A4               	movwf	??_sprintf
  2397  03E1  0824               	movf	??_sprintf,w
  2398  03E2  07A8               	addwf	sprintf@ap,f
  2399                           
  2400                           ;doprnt.c: 1261: if((int)val < 0) {
  2401  03E3  1FAC               	btfss	sprintf@val+1,7
  2402  03E4  2BEE               	goto	l1725
  2403                           
  2404                           ;doprnt.c: 1262: flag |= 0x03;
  2405  03E5  3003               	movlw	3
  2406  03E6  00A4               	movwf	??_sprintf
  2407  03E7  0824               	movf	??_sprintf,w
  2408  03E8  04AA               	iorwf	sprintf@flag,f
  2409                           
  2410                           ;doprnt.c: 1263: val = -val;
  2411  03E9  09AB               	comf	sprintf@val,f
  2412  03EA  09AC               	comf	sprintf@val+1,f
  2413  03EB  0AAB               	incf	sprintf@val,f
  2414  03EC  1903               	skipnz
  2415  03ED  0AAC               	incf	sprintf@val+1,f
  2416  03EE                     l1725:	
  2417                           
  2418                           ;doprnt.c: 1264: }
  2419                           ;doprnt.c: 1266: }
  2420                           ;doprnt.c: 1305: for(c = 1 ; c != sizeof dpowers/sizeof dpowers[0] ; c++)
  2421  03EE  01B0               	clrf	sprintf@c
  2422  03EF  0AB0               	incf	sprintf@c,f
  2423  03F0  3005               	movlw	5
  2424  03F1  0630               	xorwf	sprintf@c,w
  2425  03F2  1903               	btfsc	3,2
  2426  03F3  2C13               	goto	l1737
  2427  03F4                     l1731:	
  2428                           
  2429                           ;doprnt.c: 1306: if(val < dpowers[c])
  2430  03F4  0830               	movf	sprintf@c,w
  2431  03F5  00A4               	movwf	??_sprintf
  2432  03F6  01A5               	clrf	??_sprintf+1
  2433  03F7  35A4               	lslf	??_sprintf,f
  2434  03F8  0DA5               	rlf	??_sprintf+1,f
  2435  03F9  3000               	movlw	low (_dpowers| (0+32768))
  2436  03FA  0724               	addwf	??_sprintf,w
  2437  03FB  0084               	movwf	4
  2438  03FC  3090               	movlw	high (_dpowers| (0+32768))
  2439  03FD  3D25               	addwfc	??_sprintf+1,w
  2440  03FE  0085               	movwf	5
  2441  03FF  3F00               	moviw [0]fsr0
  2442  0400  00A6               	movwf	??_sprintf+2
  2443  0401  3F01               	moviw [1]fsr0
  2444  0402  00A7               	movwf	??_sprintf+3
  2445  0403  0827               	movf	??_sprintf+3,w
  2446  0404  022C               	subwf	sprintf@val+1,w
  2447  0405  1D03               	skipz
  2448  0406  2C09               	goto	u1645
  2449  0407  0826               	movf	??_sprintf+2,w
  2450  0408  022B               	subwf	sprintf@val,w
  2451  0409                     u1645:	
  2452  0409  1C03               	btfss	3,0
  2453  040A  2C13               	goto	l1737
  2454                           
  2455                           ;doprnt.c: 1307: break;
  2456  040B  3001               	movlw	1
  2457  040C  00A4               	movwf	??_sprintf
  2458  040D  0824               	movf	??_sprintf,w
  2459  040E  07B0               	addwf	sprintf@c,f
  2460  040F  3005               	movlw	5
  2461  0410  0630               	xorwf	sprintf@c,w
  2462  0411  1D03               	btfss	3,2
  2463  0412  2BF4               	goto	l1731
  2464  0413                     l1737:	
  2465                           
  2466                           ;doprnt.c: 1345: if(width && flag & 0x03)
  2467  0413  082D               	movf	sprintf@width,w
  2468  0414  042E               	iorwf	sprintf@width+1,w
  2469  0415  1903               	btfsc	3,2
  2470  0416  2C1F               	goto	l202
  2471  0417  082A               	movf	sprintf@flag,w
  2472  0418  3903               	andlw	3
  2473  0419  1903               	btfsc	3,2
  2474  041A  2C1F               	goto	l202
  2475                           
  2476                           ;doprnt.c: 1346: width--;
  2477  041B  30FF               	movlw	255
  2478  041C  07AD               	addwf	sprintf@width,f
  2479  041D  30FF               	movlw	255
  2480  041E  3DAE               	addwfc	sprintf@width+1,f
  2481  041F                     l202:	
  2482                           
  2483                           ;doprnt.c: 1381: if(width > c)
  2484  041F  0830               	movf	sprintf@c,w
  2485  0420  00A4               	movwf	??_sprintf
  2486  0421  01A5               	clrf	??_sprintf+1
  2487  0422  1BA4               	btfsc	??_sprintf,7
  2488  0423  03A5               	decf	??_sprintf+1,f
  2489  0424  0825               	movf	??_sprintf+1,w
  2490  0425  3A80               	xorlw	128
  2491  0426  00A6               	movwf	??_sprintf+2
  2492  0427  082E               	movf	sprintf@width+1,w
  2493  0428  3A80               	xorlw	128
  2494  0429  0226               	subwf	??_sprintf+2,w
  2495  042A  1D03               	skipz
  2496  042B  2C2E               	goto	u1685
  2497  042C  082D               	movf	sprintf@width,w
  2498  042D  0224               	subwf	??_sprintf,w
  2499  042E                     u1685:	
  2500  042E  1803               	skipnc
  2501  042F  2C3B               	goto	l1745
  2502                           
  2503                           ;doprnt.c: 1382: width -= c;
  2504  0430  0140               	movlb	0	; select bank0
  2505  0431  0830               	movf	sprintf@c,w
  2506  0432  00A4               	movwf	??_sprintf
  2507  0433  01A5               	clrf	??_sprintf+1
  2508  0434  1BA4               	btfsc	??_sprintf,7
  2509  0435  03A5               	decf	??_sprintf+1,f
  2510  0436  0824               	movf	??_sprintf,w
  2511  0437  02AD               	subwf	sprintf@width,f
  2512  0438  0825               	movf	??_sprintf+1,w
  2513  0439  3BAE               	subwfb	sprintf@width+1,f
  2514  043A  2C3E               	goto	l1747
  2515  043B                     l1745:	
  2516                           
  2517                           ;doprnt.c: 1383: else
  2518                           ;doprnt.c: 1384: width = 0;
  2519  043B  0140               	movlb	0	; select bank0
  2520  043C  01AD               	clrf	sprintf@width
  2521  043D  01AE               	clrf	sprintf@width+1
  2522  043E                     l1747:	
  2523                           
  2524                           ;doprnt.c: 1422: {
  2525                           ;doprnt.c: 1424: if(width
  2526                           ;doprnt.c: 1428: )
  2527  043E  082D               	movf	sprintf@width,w
  2528  043F  042E               	iorwf	sprintf@width+1,w
  2529  0440  1903               	btfsc	3,2
  2530  0441  2C55               	goto	l1755
  2531  0442                     l1749:	
  2532                           ;doprnt.c: 1429: do
  2533                           
  2534                           
  2535                           ;doprnt.c: 1430: ((*sp++ = (' ')));
  2536  0442  3020               	movlw	32
  2537  0443  00A4               	movwf	??_sprintf
  2538  0444  082F               	movf	sprintf@sp,w
  2539  0445  0086               	movwf	6
  2540  0446  0187               	clrf	7
  2541  0447  0824               	movf	??_sprintf,w
  2542  0448  0081               	movwf	1
  2543  0449  3001               	movlw	1
  2544  044A  00A4               	movwf	??_sprintf
  2545  044B  0824               	movf	??_sprintf,w
  2546  044C  07AF               	addwf	sprintf@sp,f
  2547                           
  2548                           ;doprnt.c: 1431: while(--width);
  2549  044D  30FF               	movlw	255
  2550  044E  07AD               	addwf	sprintf@width,f
  2551  044F  30FF               	movlw	255
  2552  0450  3DAE               	addwfc	sprintf@width+1,f
  2553  0451  082D               	movf	sprintf@width,w
  2554  0452  042E               	iorwf	sprintf@width+1,w
  2555  0453  1D03               	btfss	3,2
  2556  0454  2C42               	goto	l1749
  2557  0455                     l1755:	
  2558                           
  2559                           ;doprnt.c: 1438: if(flag & 0x03)
  2560  0455  082A               	movf	sprintf@flag,w
  2561  0456  3903               	andlw	3
  2562  0457  1903               	btfsc	3,2
  2563  0458  2C64               	goto	l1761
  2564                           
  2565                           ;doprnt.c: 1439: ((*sp++ = ('-')));
  2566  0459  302D               	movlw	45
  2567  045A  00A4               	movwf	??_sprintf
  2568  045B  082F               	movf	sprintf@sp,w
  2569  045C  0086               	movwf	6
  2570  045D  0187               	clrf	7
  2571  045E  0824               	movf	??_sprintf,w
  2572  045F  0081               	movwf	1
  2573  0460  3001               	movlw	1
  2574  0461  00A4               	movwf	??_sprintf
  2575  0462  0824               	movf	??_sprintf,w
  2576  0463  07AF               	addwf	sprintf@sp,f
  2577  0464                     l1761:	
  2578                           
  2579                           ;doprnt.c: 1469: }
  2580                           ;doprnt.c: 1472: prec = c;
  2581  0464  0830               	movf	sprintf@c,w
  2582  0465  00A4               	movwf	??_sprintf
  2583  0466  0824               	movf	??_sprintf,w
  2584  0467  00A9               	movwf	sprintf@prec
  2585  0468                     l1769:	
  2586                           ;doprnt.c: 1474: while(prec--) {
  2587                           
  2588  0468  30FF               	movlw	255
  2589  0469  00A4               	movwf	??_sprintf
  2590  046A  0824               	movf	??_sprintf,w
  2591  046B  07A9               	addwf	sprintf@prec,f
  2592  046C  0A29               	incf	sprintf@prec,w
  2593  046D  1903               	btfsc	3,2
  2594  046E  2B5E               	goto	l1771
  2595                           
  2596                           ;doprnt.c: 1478: {
  2597                           ;doprnt.c: 1489: c = (val / dpowers[prec]) % 10 + '0';
  2598  046F  300A               	movlw	10
  2599  0470  00F8               	movwf	___lwmod@divisor
  2600  0471  3000               	movlw	0
  2601  0472  00F9               	movwf	___lwmod@divisor+1
  2602  0473  0829               	movf	sprintf@prec,w
  2603  0474  00A4               	movwf	??_sprintf
  2604  0475  01A5               	clrf	??_sprintf+1
  2605  0476  35A4               	lslf	??_sprintf,f
  2606  0477  0DA5               	rlf	??_sprintf+1,f
  2607  0478  3000               	movlw	low (_dpowers| (0+32768))
  2608  0479  0724               	addwf	??_sprintf,w
  2609  047A  0084               	movwf	4
  2610  047B  3090               	movlw	high (_dpowers| (0+32768))
  2611  047C  3D25               	addwfc	??_sprintf+1,w
  2612  047D  0085               	movwf	5
  2613  047E  3F00               	moviw [0]fsr0
  2614  047F  00F0               	movwf	___lwdiv@divisor
  2615  0480  3F01               	moviw [1]fsr0
  2616  0481  00F1               	movwf	___lwdiv@divisor+1
  2617  0482  082C               	movf	sprintf@val+1,w
  2618  0483  00F3               	movwf	___lwdiv@dividend+1
  2619  0484  082B               	movf	sprintf@val,w
  2620  0485  00F2               	movwf	___lwdiv@dividend
  2621  0486  318F  2768  3183   	fcall	___lwdiv
  2622  0489  0871               	movf	?___lwdiv+1,w
  2623  048A  00FB               	movwf	___lwmod@dividend+1
  2624  048B  0870               	movf	?___lwdiv,w
  2625  048C  00FA               	movwf	___lwmod@dividend
  2626  048D  318F  273C  3183   	fcall	___lwmod
  2627  0490  0878               	movf	?___lwmod,w
  2628  0491  3E30               	addlw	48
  2629  0492  0140               	movlb	0	; select bank0
  2630  0493  00A6               	movwf	??_sprintf+2
  2631  0494  0826               	movf	??_sprintf+2,w
  2632  0495  00B0               	movwf	sprintf@c
  2633                           
  2634                           ;doprnt.c: 1523: }
  2635                           ;doprnt.c: 1524: ((*sp++ = (c)));
  2636  0496  0830               	movf	sprintf@c,w
  2637  0497  00A4               	movwf	??_sprintf
  2638  0498  082F               	movf	sprintf@sp,w
  2639  0499  0086               	movwf	6
  2640  049A  0187               	clrf	7
  2641  049B  0824               	movf	??_sprintf,w
  2642  049C  0081               	movwf	1
  2643  049D  3001               	movlw	1
  2644  049E  00A4               	movwf	??_sprintf
  2645  049F  0824               	movf	??_sprintf,w
  2646  04A0  07AF               	addwf	sprintf@sp,f
  2647  04A1  2C68               	goto	l1769
  2648  04A2                     l1773:	
  2649                           ;doprnt.c: 1525: }
  2650                           ;doprnt.c: 1533: }
  2651                           ;doprnt.c: 1535: alldone:
  2652                           
  2653                           
  2654                           ;doprnt.c: 1538: *sp = 0;
  2655  04A2  0140               	movlb	0	; select bank0
  2656  04A3  082F               	movf	sprintf@sp,w
  2657  04A4  0086               	movwf	6
  2658  04A5  0187               	clrf	7
  2659  04A6  0181               	clrf	1
  2660  04A7  0008               	return
  2661  04A8                     __end_of_sprintf:	
  2662                           ;doprnt.c: 1540: return 0;
  2663                           ;	Return value of _sprintf is never used
  2664                           
  2665                           
  2666                           	psect	text3
  2667  000F                     __ptext3:	
  2668 ;; *************** function _isdigit *****************
  2669 ;; Defined at:
  2670 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\isdigit.c"
  2671 ;; Parameters:    Size  Location     Type
  2672 ;;  c               1    wreg     unsigned char 
  2673 ;; Auto vars:     Size  Location     Type
  2674 ;;  c               1    1[COMMON] unsigned char 
  2675 ;; Return value:  Size  Location     Type
  2676 ;;		None               void
  2677 ;; Registers used:
  2678 ;;		wreg, status,2, status,0
  2679 ;; Tracked objects:
  2680 ;;		On entry : 0/0
  2681 ;;		On exit  : 0/0
  2682 ;;		Unchanged: 0/0
  2683 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
  2684 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  2685 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  2686 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  2687 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  2688 ;;Total ram usage:        2 bytes
  2689 ;; Hardware stack levels used:    1
  2690 ;; This function calls:
  2691 ;;		Nothing
  2692 ;; This function is called by:
  2693 ;;		_sprintf
  2694 ;; This function uses a non-reentrant model
  2695 ;;
  2696                           
  2697                           
  2698                           ;psect for function _isdigit
  2699  000F                     _isdigit:	
  2700                           
  2701                           ;incstack = 0
  2702                           ; Regs used in _isdigit: [wreg+status,2+status,0]
  2703                           ;isdigit@c stored from wreg
  2704  000F  00F1               	movwf	isdigit@c
  2705  0010  01F0               	clrf	_isdigit$595
  2706  0011  303A               	movlw	58
  2707  0012  0271               	subwf	isdigit@c,w
  2708  0013  1803               	skipnc
  2709  0014  281B               	goto	l1467
  2710  0015  3030               	movlw	48
  2711  0016  0271               	subwf	isdigit@c,w
  2712  0017  1C03               	skipc
  2713  0018  281B               	goto	l1467
  2714  0019  01F0               	clrf	_isdigit$595
  2715  001A  0AF0               	incf	_isdigit$595,f
  2716  001B                     l1467:	
  2717  001B  0C70               	rrf	_isdigit$595,w
  2718  001C  0008               	return
  2719  001D                     __end_of_isdigit:	
  2720                           
  2721                           	psect	text4
  2722  0F3C                     __ptext4:	
  2723 ;; *************** function ___lwmod *****************
  2724 ;; Defined at:
  2725 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\lwmod.c"
  2726 ;; Parameters:    Size  Location     Type
  2727 ;;  divisor         2    8[COMMON] unsigned int 
  2728 ;;  dividend        2   10[COMMON] unsigned int 
  2729 ;; Auto vars:     Size  Location     Type
  2730 ;;  counter         1   13[COMMON] unsigned char 
  2731 ;; Return value:  Size  Location     Type
  2732 ;;                  2    8[COMMON] unsigned int 
  2733 ;; Registers used:
  2734 ;;		wreg, status,2, status,0
  2735 ;; Tracked objects:
  2736 ;;		On entry : 0/0
  2737 ;;		On exit  : 0/0
  2738 ;;		Unchanged: 0/0
  2739 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
  2740 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  2741 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  2742 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  2743 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  2744 ;;Total ram usage:        6 bytes
  2745 ;; Hardware stack levels used:    1
  2746 ;; This function calls:
  2747 ;;		Nothing
  2748 ;; This function is called by:
  2749 ;;		_sprintf
  2750 ;; This function uses a non-reentrant model
  2751 ;;
  2752                           
  2753                           
  2754                           ;psect for function ___lwmod
  2755  0F3C                     ___lwmod:	
  2756                           
  2757                           ;incstack = 0
  2758                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  2759  0F3C  0878               	movf	___lwmod@divisor,w
  2760  0F3D  0479               	iorwf	___lwmod@divisor+1,w
  2761  0F3E  1903               	btfsc	3,2
  2762  0F3F  2F63               	goto	l1529
  2763  0F40  01FD               	clrf	___lwmod@counter
  2764  0F41  0AFD               	incf	___lwmod@counter,f
  2765  0F42                     l1519:	
  2766  0F42  1BF9               	btfsc	___lwmod@divisor+1,7
  2767  0F43  2F4E               	goto	l1521
  2768  0F44  3001               	movlw	1
  2769  0F45                     u1325:	
  2770  0F45  35F8               	lslf	___lwmod@divisor,f
  2771  0F46  0DF9               	rlf	___lwmod@divisor+1,f
  2772  0F47  0B89               	decfsz	9,f
  2773  0F48  2F45               	goto	u1325
  2774  0F49  3001               	movlw	1
  2775  0F4A  00FC               	movwf	??___lwmod
  2776  0F4B  087C               	movf	??___lwmod,w
  2777  0F4C  07FD               	addwf	___lwmod@counter,f
  2778  0F4D  2F42               	goto	l1519
  2779  0F4E                     l1521:	
  2780  0F4E  0879               	movf	___lwmod@divisor+1,w
  2781  0F4F  027B               	subwf	___lwmod@dividend+1,w
  2782  0F50  1D03               	skipz
  2783  0F51  2F54               	goto	u1345
  2784  0F52  0878               	movf	___lwmod@divisor,w
  2785  0F53  027A               	subwf	___lwmod@dividend,w
  2786  0F54                     u1345:	
  2787  0F54  1C03               	skipc
  2788  0F55  2F5A               	goto	l1525
  2789  0F56  0878               	movf	___lwmod@divisor,w
  2790  0F57  02FA               	subwf	___lwmod@dividend,f
  2791  0F58  0879               	movf	___lwmod@divisor+1,w
  2792  0F59  3BFB               	subwfb	___lwmod@dividend+1,f
  2793  0F5A                     l1525:	
  2794  0F5A  3001               	movlw	1
  2795  0F5B                     u1355:	
  2796  0F5B  36F9               	lsrf	___lwmod@divisor+1,f
  2797  0F5C  0CF8               	rrf	___lwmod@divisor,f
  2798  0F5D  0B89               	decfsz	9,f
  2799  0F5E  2F5B               	goto	u1355
  2800  0F5F  3001               	movlw	1
  2801  0F60  02FD               	subwf	___lwmod@counter,f
  2802  0F61  1D03               	btfss	3,2
  2803  0F62  2F4E               	goto	l1521
  2804  0F63                     l1529:	
  2805  0F63  087B               	movf	___lwmod@dividend+1,w
  2806  0F64  00F9               	movwf	?___lwmod+1
  2807  0F65  087A               	movf	___lwmod@dividend,w
  2808  0F66  00F8               	movwf	?___lwmod
  2809  0F67  0008               	return
  2810  0F68                     __end_of___lwmod:	
  2811                           
  2812                           	psect	text5
  2813  0F68                     __ptext5:	
  2814 ;; *************** function ___lwdiv *****************
  2815 ;; Defined at:
  2816 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\lwdiv.c"
  2817 ;; Parameters:    Size  Location     Type
  2818 ;;  divisor         2    0[COMMON] unsigned int 
  2819 ;;  dividend        2    2[COMMON] unsigned int 
  2820 ;; Auto vars:     Size  Location     Type
  2821 ;;  quotient        2    5[COMMON] unsigned int 
  2822 ;;  counter         1    7[COMMON] unsigned char 
  2823 ;; Return value:  Size  Location     Type
  2824 ;;                  2    0[COMMON] unsigned int 
  2825 ;; Registers used:
  2826 ;;		wreg, status,2, status,0
  2827 ;; Tracked objects:
  2828 ;;		On entry : 0/0
  2829 ;;		On exit  : 0/0
  2830 ;;		Unchanged: 0/0
  2831 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
  2832 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  2833 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  2834 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  2835 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  2836 ;;Total ram usage:        8 bytes
  2837 ;; Hardware stack levels used:    1
  2838 ;; This function calls:
  2839 ;;		Nothing
  2840 ;; This function is called by:
  2841 ;;		_sprintf
  2842 ;; This function uses a non-reentrant model
  2843 ;;
  2844                           
  2845                           
  2846                           ;psect for function ___lwdiv
  2847  0F68                     ___lwdiv:	
  2848                           
  2849                           ;incstack = 0
  2850                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  2851  0F68  01F5               	clrf	___lwdiv@quotient
  2852  0F69  01F6               	clrf	___lwdiv@quotient+1
  2853  0F6A  0870               	movf	___lwdiv@divisor,w
  2854  0F6B  0471               	iorwf	___lwdiv@divisor+1,w
  2855  0F6C  1903               	btfsc	3,2
  2856  0F6D  2F97               	goto	l1507
  2857  0F6E  01F7               	clrf	___lwdiv@counter
  2858  0F6F  0AF7               	incf	___lwdiv@counter,f
  2859  0F70                     l1495:	
  2860  0F70  1BF1               	btfsc	___lwdiv@divisor+1,7
  2861  0F71  2F7C               	goto	l1497
  2862  0F72  3001               	movlw	1
  2863  0F73                     u1255:	
  2864  0F73  35F0               	lslf	___lwdiv@divisor,f
  2865  0F74  0DF1               	rlf	___lwdiv@divisor+1,f
  2866  0F75  0B89               	decfsz	9,f
  2867  0F76  2F73               	goto	u1255
  2868  0F77  3001               	movlw	1
  2869  0F78  00F4               	movwf	??___lwdiv
  2870  0F79  0874               	movf	??___lwdiv,w
  2871  0F7A  07F7               	addwf	___lwdiv@counter,f
  2872  0F7B  2F70               	goto	l1495
  2873  0F7C                     l1497:	
  2874  0F7C  3001               	movlw	1
  2875  0F7D                     u1275:	
  2876  0F7D  35F5               	lslf	___lwdiv@quotient,f
  2877  0F7E  0DF6               	rlf	___lwdiv@quotient+1,f
  2878  0F7F  0B89               	decfsz	9,f
  2879  0F80  2F7D               	goto	u1275
  2880  0F81  0871               	movf	___lwdiv@divisor+1,w
  2881  0F82  0273               	subwf	___lwdiv@dividend+1,w
  2882  0F83  1D03               	skipz
  2883  0F84  2F87               	goto	u1285
  2884  0F85  0870               	movf	___lwdiv@divisor,w
  2885  0F86  0272               	subwf	___lwdiv@dividend,w
  2886  0F87                     u1285:	
  2887  0F87  1C03               	skipc
  2888  0F88  2F8E               	goto	l1503
  2889  0F89  0870               	movf	___lwdiv@divisor,w
  2890  0F8A  02F2               	subwf	___lwdiv@dividend,f
  2891  0F8B  0871               	movf	___lwdiv@divisor+1,w
  2892  0F8C  3BF3               	subwfb	___lwdiv@dividend+1,f
  2893  0F8D  1475               	bsf	___lwdiv@quotient,0
  2894  0F8E                     l1503:	
  2895  0F8E  3001               	movlw	1
  2896  0F8F                     u1295:	
  2897  0F8F  36F1               	lsrf	___lwdiv@divisor+1,f
  2898  0F90  0CF0               	rrf	___lwdiv@divisor,f
  2899  0F91  0B89               	decfsz	9,f
  2900  0F92  2F8F               	goto	u1295
  2901  0F93  3001               	movlw	1
  2902  0F94  02F7               	subwf	___lwdiv@counter,f
  2903  0F95  1D03               	btfss	3,2
  2904  0F96  2F7C               	goto	l1497
  2905  0F97                     l1507:	
  2906  0F97  0876               	movf	___lwdiv@quotient+1,w
  2907  0F98  00F1               	movwf	?___lwdiv+1
  2908  0F99  0875               	movf	___lwdiv@quotient,w
  2909  0F9A  00F0               	movwf	?___lwdiv
  2910  0F9B  0008               	return
  2911  0F9C                     __end_of___lwdiv:	
  2912                           
  2913                           	psect	text6
  2914  0289                     __ptext6:	
  2915 ;; *************** function _resultado *****************
  2916 ;; Defined at:
  2917 ;;		line 36 in file "main.c"
  2918 ;; Parameters:    Size  Location     Type
  2919 ;;  valor1          1    wreg     PTR unsigned char 
  2920 ;;		 -> num1_char(16), 
  2921 ;;  valor2          1    6[COMMON] PTR unsigned char 
  2922 ;;		 -> num2_char(16), 
  2923 ;; Auto vars:     Size  Location     Type
  2924 ;;  valor1          1    9[COMMON] PTR unsigned char 
  2925 ;;		 -> num1_char(16), 
  2926 ;;  i               2   10[COMMON] int 
  2927 ;; Return value:  Size  Location     Type
  2928 ;;                  1    wreg      void 
  2929 ;; Registers used:
  2930 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2931 ;; Tracked objects:
  2932 ;;		On entry : 0/0
  2933 ;;		On exit  : 0/0
  2934 ;;		Unchanged: 0/0
  2935 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
  2936 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  2937 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  2938 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  2939 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  2940 ;;Total ram usage:        6 bytes
  2941 ;; Hardware stack levels used:    1
  2942 ;; Hardware stack levels required when called:    1
  2943 ;; This function calls:
  2944 ;;		___wmul
  2945 ;; This function is called by:
  2946 ;;		_main
  2947 ;; This function uses a non-reentrant model
  2948 ;;
  2949                           
  2950                           
  2951                           ;psect for function _resultado
  2952  0289                     _resultado:	
  2953                           
  2954                           ;incstack = 0
  2955                           ; Regs used in _resultado: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  2956                           ;resultado@valor1 stored from wreg
  2957  0289  00F9               	movwf	resultado@valor1
  2958                           
  2959                           ;main.c: 37: for(int i=0;i<=2;i++){
  2960  028A  01FA               	clrf	resultado@i
  2961  028B  01FB               	clrf	resultado@i+1
  2962  028C  087B               	movf	resultado@i+1,w
  2963  028D  3A80               	xorlw	128
  2964  028E  00F7               	movwf	??_resultado
  2965  028F  3080               	movlw	128
  2966  0290  0277               	subwf	??_resultado,w
  2967  0291  1D03               	skipz
  2968  0292  2A95               	goto	u1405
  2969  0293  3003               	movlw	3
  2970  0294  027A               	subwf	resultado@i,w
  2971  0295                     u1405:	
  2972  0295  1803               	btfsc	3,0
  2973  0296  2B3A               	goto	l1627
  2974  0297                     l1611:	
  2975                           
  2976                           ;main.c: 38: if(i==0){num1_int=(valor1[i]-'0');num2_int=(valor2[i]-'0');}
  2977  0297  087A               	movf	resultado@i,w
  2978  0298  047B               	iorwf	resultado@i+1,w
  2979  0299  1D03               	btfss	3,2
  2980  029A  2AB6               	goto	l1615
  2981  029B  087A               	movf	resultado@i,w
  2982  029C  0779               	addwf	resultado@valor1,w
  2983  029D  00F7               	movwf	??_resultado
  2984  029E  0877               	movf	??_resultado,w
  2985  029F  0086               	movwf	6
  2986  02A0  0187               	clrf	7
  2987  02A1  0801               	movf	1,w
  2988  02A2  3ED0               	addlw	208
  2989  02A3  0140               	movlb	0	; select bank0
  2990  02A4  00CD               	movwf	_num1_int
  2991  02A5  30FF               	movlw	255
  2992  02A6  1803               	skipnc
  2993  02A7  3000               	movlw	0
  2994  02A8  00CE               	movwf	_num1_int+1
  2995  02A9  087A               	movf	resultado@i,w
  2996  02AA  0776               	addwf	resultado@valor2,w
  2997  02AB  00F7               	movwf	??_resultado
  2998  02AC  0877               	movf	??_resultado,w
  2999  02AD  0086               	movwf	6
  3000  02AE  0187               	clrf	7
  3001  02AF  0801               	movf	1,w
  3002  02B0  3ED0               	addlw	208
  3003  02B1  00CB               	movwf	_num2_int
  3004  02B2  30FF               	movlw	255
  3005  02B3  1803               	skipnc
  3006  02B4  3000               	movlw	0
  3007  02B5  00CC               	movwf	_num2_int+1
  3008  02B6                     l1615:	
  3009                           
  3010                           ;main.c: 39: if(i==1){num1_int=num1_int+(valor1[i]-'0')*10;num2_int=num2_int+(valor2[i]-
      +                          '0')*10; }
  3011  02B6  037A               	decf	resultado@i,w
  3012  02B7  047B               	iorwf	resultado@i+1,w
  3013  02B8  1D03               	btfss	3,2
  3014  02B9  2AF0               	goto	l1619
  3015  02BA  087A               	movf	resultado@i,w
  3016  02BB  0779               	addwf	resultado@valor1,w
  3017  02BC  00F7               	movwf	??_resultado
  3018  02BD  0877               	movf	??_resultado,w
  3019  02BE  0086               	movwf	6
  3020  02BF  0187               	clrf	7
  3021  02C0  0801               	movf	1,w
  3022  02C1  3ED0               	addlw	208
  3023  02C2  00F0               	movwf	___wmul@multiplier
  3024  02C3  30FF               	movlw	255
  3025  02C4  1803               	skipnc
  3026  02C5  3000               	movlw	0
  3027  02C6  00F1               	movwf	___wmul@multiplier+1
  3028  02C7  300A               	movlw	10
  3029  02C8  00F2               	movwf	___wmul@multiplicand
  3030  02C9  3000               	movlw	0
  3031  02CA  00F3               	movwf	___wmul@multiplicand+1
  3032  02CB  318E  26FD  3182   	fcall	___wmul
  3033  02CE  0140               	movlb	0	; select bank0
  3034  02CF  084D               	movf	_num1_int,w
  3035  02D0  0770               	addwf	?___wmul,w
  3036  02D1  00CD               	movwf	_num1_int
  3037  02D2  084E               	movf	_num1_int+1,w
  3038  02D3  3D71               	addwfc	?___wmul+1,w
  3039  02D4  00CE               	movwf	_num1_int+1
  3040  02D5  087A               	movf	resultado@i,w
  3041  02D6  0776               	addwf	resultado@valor2,w
  3042  02D7  00F7               	movwf	??_resultado
  3043  02D8  0877               	movf	??_resultado,w
  3044  02D9  0086               	movwf	6
  3045  02DA  0187               	clrf	7
  3046  02DB  0801               	movf	1,w
  3047  02DC  3ED0               	addlw	208
  3048  02DD  00F0               	movwf	___wmul@multiplier
  3049  02DE  30FF               	movlw	255
  3050  02DF  1803               	skipnc
  3051  02E0  3000               	movlw	0
  3052  02E1  00F1               	movwf	___wmul@multiplier+1
  3053  02E2  300A               	movlw	10
  3054  02E3  00F2               	movwf	___wmul@multiplicand
  3055  02E4  3000               	movlw	0
  3056  02E5  00F3               	movwf	___wmul@multiplicand+1
  3057  02E6  318E  26FD  3182   	fcall	___wmul
  3058  02E9  0140               	movlb	0	; select bank0
  3059  02EA  084B               	movf	_num2_int,w
  3060  02EB  0770               	addwf	?___wmul,w
  3061  02EC  00CB               	movwf	_num2_int
  3062  02ED  084C               	movf	_num2_int+1,w
  3063  02EE  3D71               	addwfc	?___wmul+1,w
  3064  02EF  00CC               	movwf	_num2_int+1
  3065  02F0                     l1619:	
  3066                           
  3067                           ;main.c: 40: if(i==2){num1_int=num1_int+(valor1[i]-'0')*100;num2_int=num2_int+(valor2[i]
      +                          -'0')*100; }
  3068  02F0  3002               	movlw	2
  3069  02F1  067A               	xorwf	resultado@i,w
  3070  02F2  047B               	iorwf	resultado@i+1,w
  3071  02F3  1D03               	btfss	3,2
  3072  02F4  2B2B               	goto	l1623
  3073  02F5  087A               	movf	resultado@i,w
  3074  02F6  0779               	addwf	resultado@valor1,w
  3075  02F7  00F7               	movwf	??_resultado
  3076  02F8  0877               	movf	??_resultado,w
  3077  02F9  0086               	movwf	6
  3078  02FA  0187               	clrf	7
  3079  02FB  0801               	movf	1,w
  3080  02FC  3ED0               	addlw	208
  3081  02FD  00F0               	movwf	___wmul@multiplier
  3082  02FE  30FF               	movlw	255
  3083  02FF  1803               	skipnc
  3084  0300  3000               	movlw	0
  3085  0301  00F1               	movwf	___wmul@multiplier+1
  3086  0302  3064               	movlw	100
  3087  0303  00F2               	movwf	___wmul@multiplicand
  3088  0304  3000               	movlw	0
  3089  0305  00F3               	movwf	___wmul@multiplicand+1
  3090  0306  318E  26FD  3182   	fcall	___wmul
  3091  0309  0140               	movlb	0	; select bank0
  3092  030A  084D               	movf	_num1_int,w
  3093  030B  0770               	addwf	?___wmul,w
  3094  030C  00CD               	movwf	_num1_int
  3095  030D  084E               	movf	_num1_int+1,w
  3096  030E  3D71               	addwfc	?___wmul+1,w
  3097  030F  00CE               	movwf	_num1_int+1
  3098  0310  087A               	movf	resultado@i,w
  3099  0311  0776               	addwf	resultado@valor2,w
  3100  0312  00F7               	movwf	??_resultado
  3101  0313  0877               	movf	??_resultado,w
  3102  0314  0086               	movwf	6
  3103  0315  0187               	clrf	7
  3104  0316  0801               	movf	1,w
  3105  0317  3ED0               	addlw	208
  3106  0318  00F0               	movwf	___wmul@multiplier
  3107  0319  30FF               	movlw	255
  3108  031A  1803               	skipnc
  3109  031B  3000               	movlw	0
  3110  031C  00F1               	movwf	___wmul@multiplier+1
  3111  031D  3064               	movlw	100
  3112  031E  00F2               	movwf	___wmul@multiplicand
  3113  031F  3000               	movlw	0
  3114  0320  00F3               	movwf	___wmul@multiplicand+1
  3115  0321  318E  26FD  3182   	fcall	___wmul
  3116  0324  0140               	movlb	0	; select bank0
  3117  0325  084B               	movf	_num2_int,w
  3118  0326  0770               	addwf	?___wmul,w
  3119  0327  00CB               	movwf	_num2_int
  3120  0328  084C               	movf	_num2_int+1,w
  3121  0329  3D71               	addwfc	?___wmul+1,w
  3122  032A  00CC               	movwf	_num2_int+1
  3123  032B                     l1623:	
  3124  032B  3001               	movlw	1
  3125  032C  07FA               	addwf	resultado@i,f
  3126  032D  3000               	movlw	0
  3127  032E  3DFB               	addwfc	resultado@i+1,f
  3128  032F  087B               	movf	resultado@i+1,w
  3129  0330  3A80               	xorlw	128
  3130  0331  00F7               	movwf	??_resultado
  3131  0332  3080               	movlw	128
  3132  0333  0277               	subwf	??_resultado,w
  3133  0334  1D03               	skipz
  3134  0335  2B38               	goto	u1445
  3135  0336  3003               	movlw	3
  3136  0337  027A               	subwf	resultado@i,w
  3137  0338                     u1445:	
  3138  0338  1C03               	skipc
  3139  0339  2A97               	goto	l1611
  3140  033A                     l1627:	
  3141                           
  3142                           ;main.c: 41: }
  3143                           ;main.c: 42: if(operacion==1){
  3144  033A  0140               	movlb	0	; select bank0
  3145  033B  0347               	decf	_operacion,w
  3146  033C  0448               	iorwf	_operacion+1,w
  3147  033D  1D03               	btfss	3,2
  3148  033E  2B46               	goto	l1631
  3149                           
  3150                           ;main.c: 43: res_int=num1_int+num2_int;
  3151  033F  084B               	movf	_num2_int,w
  3152  0340  074D               	addwf	_num1_int,w
  3153  0341  00C9               	movwf	_res_int
  3154  0342  084C               	movf	_num2_int+1,w
  3155  0343  3D4E               	addwfc	_num1_int+1,w
  3156  0344  00CA               	movwf	_res_int+1
  3157                           
  3158                           ;main.c: 44: }else if(operacion==1){
  3159  0345  0008               	return
  3160  0346                     l1631:	
  3161  0346  0347               	decf	_operacion,w
  3162  0347  0448               	iorwf	_operacion+1,w
  3163  0348  1D03               	btfss	3,2
  3164  0349  0008               	return
  3165                           
  3166                           ;main.c: 45: res_int=num1_int-num2_int;
  3167  034A  094B               	comf	_num2_int,w
  3168  034B  00F7               	movwf	??_resultado
  3169  034C  094C               	comf	_num2_int+1,w
  3170  034D  00F8               	movwf	??_resultado+1
  3171  034E  0AF7               	incf	??_resultado,f
  3172  034F  1903               	skipnz
  3173  0350  0AF8               	incf	??_resultado+1,f
  3174  0351  084D               	movf	_num1_int,w
  3175  0352  0777               	addwf	??_resultado,w
  3176  0353  00C9               	movwf	_res_int
  3177  0354  084E               	movf	_num1_int+1,w
  3178  0355  3D78               	addwfc	??_resultado+1,w
  3179  0356  00CA               	movwf	_res_int+1
  3180  0357  0008               	return
  3181  0358                     __end_of_resultado:	
  3182                           
  3183                           	psect	text7
  3184  0052                     __ptext7:	
  3185 ;; *************** function _convertirnum2 *****************
  3186 ;; Defined at:
  3187 ;;		line 58 in file "main.c"
  3188 ;; Parameters:    Size  Location     Type
  3189 ;;  num2            1    wreg     PTR unsigned char 
  3190 ;;		 -> num2_char(16), 
  3191 ;; Auto vars:     Size  Location     Type
  3192 ;;  num2            1    7[COMMON] PTR unsigned char 
  3193 ;;		 -> num2_char(16), 
  3194 ;;  i               2    8[COMMON] int 
  3195 ;; Return value:  Size  Location     Type
  3196 ;;                  1    wreg      void 
  3197 ;; Registers used:
  3198 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3199 ;; Tracked objects:
  3200 ;;		On entry : 0/0
  3201 ;;		On exit  : 0/0
  3202 ;;		Unchanged: 0/0
  3203 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
  3204 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  3205 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  3206 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  3207 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  3208 ;;Total ram usage:        4 bytes
  3209 ;; Hardware stack levels used:    1
  3210 ;; Hardware stack levels required when called:    1
  3211 ;; This function calls:
  3212 ;;		___wmul
  3213 ;; This function is called by:
  3214 ;;		_main
  3215 ;; This function uses a non-reentrant model
  3216 ;;
  3217                           
  3218                           
  3219                           ;psect for function _convertirnum2
  3220  0052                     _convertirnum2:	
  3221                           
  3222                           ;incstack = 0
  3223                           ; Regs used in _convertirnum2: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  3224                           ;convertirnum2@num2 stored from wreg
  3225  0052  00F7               	movwf	convertirnum2@num2
  3226                           
  3227                           ;main.c: 59: for(int i=0;i<=2;i++){
  3228  0053  01F8               	clrf	convertirnum2@i
  3229  0054  01F9               	clrf	convertirnum2@i+1
  3230  0055                     L1:	
  3231  0055  0879               	movf	convertirnum2@i+1,w
  3232  0056  3A80               	xorlw	128
  3233  0057  00F6               	movwf	??_convertirnum2
  3234  0058  3080               	movlw	128
  3235  0059  0276               	subwf	??_convertirnum2,w
  3236  005A  1D03               	skipz
  3237  005B  285E               	goto	u1525
  3238  005C  3003               	movlw	3
  3239  005D  0278               	subwf	convertirnum2@i,w
  3240  005E                     u1525:	
  3241  005E  1803               	btfsc	3,0
  3242  005F  0008               	return
  3243                           
  3244                           ;main.c: 60: if(i==0){num2_int=(num2[i]-'0');}
  3245  0060  0878               	movf	convertirnum2@i,w
  3246  0061  0479               	iorwf	convertirnum2@i+1,w
  3247  0062  1D03               	btfss	3,2
  3248  0063  2872               	goto	l1667
  3249  0064  0878               	movf	convertirnum2@i,w
  3250  0065  0777               	addwf	convertirnum2@num2,w
  3251  0066  00F6               	movwf	??_convertirnum2
  3252  0067  0876               	movf	??_convertirnum2,w
  3253  0068  0086               	movwf	6
  3254  0069  0187               	clrf	7
  3255  006A  0801               	movf	1,w
  3256  006B  3ED0               	addlw	208
  3257  006C  0140               	movlb	0	; select bank0
  3258  006D  00CB               	movwf	_num2_int
  3259  006E  30FF               	movlw	255
  3260  006F  1803               	skipnc
  3261  0070  3000               	movlw	0
  3262  0071  00CC               	movwf	_num2_int+1
  3263  0072                     l1667:	
  3264                           
  3265                           ;main.c: 61: if(i==1){num2_int=num2_int+(num2[i]-'0')*10; }
  3266  0072  0378               	decf	convertirnum2@i,w
  3267  0073  0479               	iorwf	convertirnum2@i+1,w
  3268  0074  1D03               	btfss	3,2
  3269  0075  2891               	goto	l1671
  3270  0076  0878               	movf	convertirnum2@i,w
  3271  0077  0777               	addwf	convertirnum2@num2,w
  3272  0078  00F6               	movwf	??_convertirnum2
  3273  0079  0876               	movf	??_convertirnum2,w
  3274  007A  0086               	movwf	6
  3275  007B  0187               	clrf	7
  3276  007C  0801               	movf	1,w
  3277  007D  3ED0               	addlw	208
  3278  007E  00F0               	movwf	___wmul@multiplier
  3279  007F  30FF               	movlw	255
  3280  0080  1803               	skipnc
  3281  0081  3000               	movlw	0
  3282  0082  00F1               	movwf	___wmul@multiplier+1
  3283  0083  300A               	movlw	10
  3284  0084  00F2               	movwf	___wmul@multiplicand
  3285  0085  3000               	movlw	0
  3286  0086  00F3               	movwf	___wmul@multiplicand+1
  3287  0087  318E  26FD  3180   	fcall	___wmul
  3288  008A  0140               	movlb	0	; select bank0
  3289  008B  084B               	movf	_num2_int,w
  3290  008C  0770               	addwf	?___wmul,w
  3291  008D  00CB               	movwf	_num2_int
  3292  008E  084C               	movf	_num2_int+1,w
  3293  008F  3D71               	addwfc	?___wmul+1,w
  3294  0090  00CC               	movwf	_num2_int+1
  3295  0091                     l1671:	
  3296                           
  3297                           ;main.c: 62: if(i==2){num2_int=num2_int+(num2[i]-'0')*100;}
  3298  0091  3002               	movlw	2
  3299  0092  0678               	xorwf	convertirnum2@i,w
  3300  0093  0479               	iorwf	convertirnum2@i+1,w
  3301  0094  1D03               	btfss	3,2
  3302  0095  28B1               	goto	l1675
  3303  0096  0878               	movf	convertirnum2@i,w
  3304  0097  0777               	addwf	convertirnum2@num2,w
  3305  0098  00F6               	movwf	??_convertirnum2
  3306  0099  0876               	movf	??_convertirnum2,w
  3307  009A  0086               	movwf	6
  3308  009B  0187               	clrf	7
  3309  009C  0801               	movf	1,w
  3310  009D  3ED0               	addlw	208
  3311  009E  00F0               	movwf	___wmul@multiplier
  3312  009F  30FF               	movlw	255
  3313  00A0  1803               	skipnc
  3314  00A1  3000               	movlw	0
  3315  00A2  00F1               	movwf	___wmul@multiplier+1
  3316  00A3  3064               	movlw	100
  3317  00A4  00F2               	movwf	___wmul@multiplicand
  3318  00A5  3000               	movlw	0
  3319  00A6  00F3               	movwf	___wmul@multiplicand+1
  3320  00A7  318E  26FD  3180   	fcall	___wmul
  3321  00AA  0140               	movlb	0	; select bank0
  3322  00AB  084B               	movf	_num2_int,w
  3323  00AC  0770               	addwf	?___wmul,w
  3324  00AD  00CB               	movwf	_num2_int
  3325  00AE  084C               	movf	_num2_int+1,w
  3326  00AF  3D71               	addwfc	?___wmul+1,w
  3327  00B0  00CC               	movwf	_num2_int+1
  3328  00B1                     l1675:	
  3329  00B1  3001               	movlw	1
  3330  00B2  07F8               	addwf	convertirnum2@i,f
  3331  00B3  3000               	movlw	0
  3332  00B4  3DF9               	addwfc	convertirnum2@i+1,f
  3333  00B5  2855               	goto	L1
  3334  00B6                     __end_of_convertirnum2:	
  3335                           
  3336                           	psect	text8
  3337  0F9C                     __ptext8:	
  3338 ;; *************** function _convertirnum1 *****************
  3339 ;; Defined at:
  3340 ;;		line 50 in file "main.c"
  3341 ;; Parameters:    Size  Location     Type
  3342 ;;  num             1    wreg     PTR unsigned char 
  3343 ;;		 -> num1_char(16), 
  3344 ;; Auto vars:     Size  Location     Type
  3345 ;;  num             1    7[COMMON] PTR unsigned char 
  3346 ;;		 -> num1_char(16), 
  3347 ;;  i               2    8[COMMON] int 
  3348 ;; Return value:  Size  Location     Type
  3349 ;;                  1    wreg      void 
  3350 ;; Registers used:
  3351 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3352 ;; Tracked objects:
  3353 ;;		On entry : 0/0
  3354 ;;		On exit  : 0/0
  3355 ;;		Unchanged: 0/0
  3356 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
  3357 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  3358 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  3359 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  3360 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  3361 ;;Total ram usage:        4 bytes
  3362 ;; Hardware stack levels used:    1
  3363 ;; Hardware stack levels required when called:    1
  3364 ;; This function calls:
  3365 ;;		___wmul
  3366 ;; This function is called by:
  3367 ;;		_main
  3368 ;; This function uses a non-reentrant model
  3369 ;;
  3370                           
  3371                           
  3372                           ;psect for function _convertirnum1
  3373  0F9C                     _convertirnum1:	
  3374                           
  3375                           ;incstack = 0
  3376                           ; Regs used in _convertirnum1: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  3377                           ;convertirnum1@num stored from wreg
  3378  0F9C  00F7               	movwf	convertirnum1@num
  3379                           
  3380                           ;main.c: 51: for(int i=0;i<=2;i++){
  3381  0F9D  01F8               	clrf	convertirnum1@i
  3382  0F9E  01F9               	clrf	convertirnum1@i+1
  3383  0F9F                     L2:	
  3384  0F9F  0879               	movf	convertirnum1@i+1,w
  3385  0FA0  3A80               	xorlw	128
  3386  0FA1  00F6               	movwf	??_convertirnum1
  3387  0FA2  3080               	movlw	128
  3388  0FA3  0276               	subwf	??_convertirnum1,w
  3389  0FA4  1D03               	skipz
  3390  0FA5  2FA8               	goto	u1475
  3391  0FA6  3003               	movlw	3
  3392  0FA7  0278               	subwf	convertirnum1@i,w
  3393  0FA8                     u1475:	
  3394  0FA8  1803               	btfsc	3,0
  3395  0FA9  0008               	return
  3396                           
  3397                           ;main.c: 52: if(i==0){num1_int=(num[i]-'0');}
  3398  0FAA  0878               	movf	convertirnum1@i,w
  3399  0FAB  0479               	iorwf	convertirnum1@i+1,w
  3400  0FAC  1D03               	btfss	3,2
  3401  0FAD  2FBC               	goto	l1645
  3402  0FAE  0878               	movf	convertirnum1@i,w
  3403  0FAF  0777               	addwf	convertirnum1@num,w
  3404  0FB0  00F6               	movwf	??_convertirnum1
  3405  0FB1  0876               	movf	??_convertirnum1,w
  3406  0FB2  0086               	movwf	6
  3407  0FB3  0187               	clrf	7
  3408  0FB4  0801               	movf	1,w
  3409  0FB5  3ED0               	addlw	208
  3410  0FB6  0140               	movlb	0	; select bank0
  3411  0FB7  00CD               	movwf	_num1_int
  3412  0FB8  30FF               	movlw	255
  3413  0FB9  1803               	skipnc
  3414  0FBA  3000               	movlw	0
  3415  0FBB  00CE               	movwf	_num1_int+1
  3416  0FBC                     l1645:	
  3417                           
  3418                           ;main.c: 53: if(i==1){num1_int=num1_int+(num[i]-'0')*10; }
  3419  0FBC  0378               	decf	convertirnum1@i,w
  3420  0FBD  0479               	iorwf	convertirnum1@i+1,w
  3421  0FBE  1D03               	btfss	3,2
  3422  0FBF  2FDB               	goto	l1649
  3423  0FC0  0878               	movf	convertirnum1@i,w
  3424  0FC1  0777               	addwf	convertirnum1@num,w
  3425  0FC2  00F6               	movwf	??_convertirnum1
  3426  0FC3  0876               	movf	??_convertirnum1,w
  3427  0FC4  0086               	movwf	6
  3428  0FC5  0187               	clrf	7
  3429  0FC6  0801               	movf	1,w
  3430  0FC7  3ED0               	addlw	208
  3431  0FC8  00F0               	movwf	___wmul@multiplier
  3432  0FC9  30FF               	movlw	255
  3433  0FCA  1803               	skipnc
  3434  0FCB  3000               	movlw	0
  3435  0FCC  00F1               	movwf	___wmul@multiplier+1
  3436  0FCD  300A               	movlw	10
  3437  0FCE  00F2               	movwf	___wmul@multiplicand
  3438  0FCF  3000               	movlw	0
  3439  0FD0  00F3               	movwf	___wmul@multiplicand+1
  3440  0FD1  318E  26FD  318F   	fcall	___wmul
  3441  0FD4  0140               	movlb	0	; select bank0
  3442  0FD5  084D               	movf	_num1_int,w
  3443  0FD6  0770               	addwf	?___wmul,w
  3444  0FD7  00CD               	movwf	_num1_int
  3445  0FD8  084E               	movf	_num1_int+1,w
  3446  0FD9  3D71               	addwfc	?___wmul+1,w
  3447  0FDA  00CE               	movwf	_num1_int+1
  3448  0FDB                     l1649:	
  3449                           
  3450                           ;main.c: 54: if(i==2){num1_int=num1_int+(num[i]-'0')*100;}
  3451  0FDB  3002               	movlw	2
  3452  0FDC  0678               	xorwf	convertirnum1@i,w
  3453  0FDD  0479               	iorwf	convertirnum1@i+1,w
  3454  0FDE  1D03               	btfss	3,2
  3455  0FDF  2FFB               	goto	l1653
  3456  0FE0  0878               	movf	convertirnum1@i,w
  3457  0FE1  0777               	addwf	convertirnum1@num,w
  3458  0FE2  00F6               	movwf	??_convertirnum1
  3459  0FE3  0876               	movf	??_convertirnum1,w
  3460  0FE4  0086               	movwf	6
  3461  0FE5  0187               	clrf	7
  3462  0FE6  0801               	movf	1,w
  3463  0FE7  3ED0               	addlw	208
  3464  0FE8  00F0               	movwf	___wmul@multiplier
  3465  0FE9  30FF               	movlw	255
  3466  0FEA  1803               	skipnc
  3467  0FEB  3000               	movlw	0
  3468  0FEC  00F1               	movwf	___wmul@multiplier+1
  3469  0FED  3064               	movlw	100
  3470  0FEE  00F2               	movwf	___wmul@multiplicand
  3471  0FEF  3000               	movlw	0
  3472  0FF0  00F3               	movwf	___wmul@multiplicand+1
  3473  0FF1  318E  26FD  318F   	fcall	___wmul
  3474  0FF4  0140               	movlb	0	; select bank0
  3475  0FF5  084D               	movf	_num1_int,w
  3476  0FF6  0770               	addwf	?___wmul,w
  3477  0FF7  00CD               	movwf	_num1_int
  3478  0FF8  084E               	movf	_num1_int+1,w
  3479  0FF9  3D71               	addwfc	?___wmul+1,w
  3480  0FFA  00CE               	movwf	_num1_int+1
  3481  0FFB                     l1653:	
  3482  0FFB  3001               	movlw	1
  3483  0FFC  07F8               	addwf	convertirnum1@i,f
  3484  0FFD  3000               	movlw	0
  3485  0FFE  3DF9               	addwfc	convertirnum1@i+1,f
  3486  0FFF  2F9F               	goto	L2
  3487  1000                     __end_of_convertirnum1:	
  3488                           
  3489                           	psect	text9
  3490  0EFD                     __ptext9:	
  3491 ;; *************** function ___wmul *****************
  3492 ;; Defined at:
  3493 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\Umul16.c"
  3494 ;; Parameters:    Size  Location     Type
  3495 ;;  multiplier      2    0[COMMON] unsigned int 
  3496 ;;  multiplicand    2    2[COMMON] unsigned int 
  3497 ;; Auto vars:     Size  Location     Type
  3498 ;;  product         2    4[COMMON] unsigned int 
  3499 ;; Return value:  Size  Location     Type
  3500 ;;                  2    0[COMMON] unsigned int 
  3501 ;; Registers used:
  3502 ;;		wreg, status,2, status,0
  3503 ;; Tracked objects:
  3504 ;;		On entry : 0/0
  3505 ;;		On exit  : 0/0
  3506 ;;		Unchanged: 0/0
  3507 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
  3508 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  3509 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  3510 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  3511 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  3512 ;;Total ram usage:        6 bytes
  3513 ;; Hardware stack levels used:    1
  3514 ;; This function calls:
  3515 ;;		Nothing
  3516 ;; This function is called by:
  3517 ;;		_resultado
  3518 ;;		_convertirnum1
  3519 ;;		_convertirnum2
  3520 ;;		_sprintf
  3521 ;; This function uses a non-reentrant model
  3522 ;;
  3523                           
  3524                           
  3525                           ;psect for function ___wmul
  3526  0EFD                     ___wmul:	
  3527                           
  3528                           ;incstack = 0
  3529                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  3530  0EFD  01F4               	clrf	___wmul@product
  3531  0EFE  01F5               	clrf	___wmul@product+1
  3532  0EFF                     l1473:	
  3533  0EFF  1C70               	btfss	___wmul@multiplier,0
  3534  0F00  2F05               	goto	l295
  3535  0F01  0872               	movf	___wmul@multiplicand,w
  3536  0F02  07F4               	addwf	___wmul@product,f
  3537  0F03  0873               	movf	___wmul@multiplicand+1,w
  3538  0F04  3DF5               	addwfc	___wmul@product+1,f
  3539  0F05                     l295:	
  3540  0F05  3001               	movlw	1
  3541  0F06                     u1215:	
  3542  0F06  35F2               	lslf	___wmul@multiplicand,f
  3543  0F07  0DF3               	rlf	___wmul@multiplicand+1,f
  3544  0F08  0B89               	decfsz	9,f
  3545  0F09  2F06               	goto	u1215
  3546  0F0A  3001               	movlw	1
  3547  0F0B                     u1225:	
  3548  0F0B  36F1               	lsrf	___wmul@multiplier+1,f
  3549  0F0C  0CF0               	rrf	___wmul@multiplier,f
  3550  0F0D  0B89               	decfsz	9,f
  3551  0F0E  2F0B               	goto	u1225
  3552  0F0F  0870               	movf	___wmul@multiplier,w
  3553  0F10  0471               	iorwf	___wmul@multiplier+1,w
  3554  0F11  1D03               	btfss	3,2
  3555  0F12  2EFF               	goto	l1473
  3556  0F13  0875               	movf	___wmul@product+1,w
  3557  0F14  00F1               	movwf	?___wmul+1
  3558  0F15  0874               	movf	___wmul@product,w
  3559  0F16  00F0               	movwf	?___wmul
  3560  0F17  0008               	return
  3561  0F18                     __end_of___wmul:	
  3562                           
  3563                           	psect	text10
  3564  001D                     __ptext10:	
  3565 ;; *************** function _Lcd_Out2 *****************
  3566 ;; Defined at:
  3567 ;;		line 115 in file "flex_lcd.h"
  3568 ;; Parameters:    Size  Location     Type
  3569 ;;  y               1    wreg     unsigned char 
  3570 ;;  x               1    3[COMMON] unsigned char 
  3571 ;;  buffer          1    4[COMMON] PTR unsigned char 
  3572 ;;		 -> main@buffer1(16), 
  3573 ;; Auto vars:     Size  Location     Type
  3574 ;;  y               1    6[COMMON] unsigned char 
  3575 ;;  data            1    7[COMMON] unsigned char 
  3576 ;; Return value:  Size  Location     Type
  3577 ;;                  1    wreg      void 
  3578 ;; Registers used:
  3579 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3580 ;; Tracked objects:
  3581 ;;		On entry : 0/0
  3582 ;;		On exit  : 0/0
  3583 ;;		Unchanged: 0/0
  3584 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
  3585 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  3586 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  3587 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  3588 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  3589 ;;Total ram usage:        5 bytes
  3590 ;; Hardware stack levels used:    1
  3591 ;; Hardware stack levels required when called:    1
  3592 ;; This function calls:
  3593 ;;		_Lcd_Chr_CP
  3594 ;;		_Lcd_Cmd
  3595 ;; This function is called by:
  3596 ;;		_main
  3597 ;; This function uses a non-reentrant model
  3598 ;;
  3599                           
  3600                           
  3601                           ;psect for function _Lcd_Out2
  3602  001D                     _Lcd_Out2:	
  3603                           
  3604                           ;incstack = 0
  3605                           ; Regs used in _Lcd_Out2: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  3606                           ;Lcd_Out2@y stored from wreg
  3607  001D  00F6               	movwf	Lcd_Out2@y
  3608                           
  3609                           ;flex_lcd.h: 117: unsigned char data;
  3610                           ;flex_lcd.h: 118: switch (y)
  3611  001E  282E               	goto	l1595
  3612  001F                     l1585:	
  3613                           ;flex_lcd.h: 119: {
  3614                           ;flex_lcd.h: 120: case 1: data = 128 + x; break;
  3615                           
  3616  001F  0873               	movf	Lcd_Out2@x,w
  3617  0020  3E80               	addlw	128
  3618  0021  282A               	goto	L5
  3619  0022                     l1587:	
  3620                           ;flex_lcd.h: 121: case 2: data = 192 + x; break;
  3621                           
  3622  0022  0873               	movf	Lcd_Out2@x,w
  3623  0023  3EC0               	addlw	192
  3624  0024  282A               	goto	L5
  3625  0025                     l1589:	
  3626                           ;flex_lcd.h: 122: case 3: data = 148 + x; break;
  3627                           
  3628  0025  0873               	movf	Lcd_Out2@x,w
  3629  0026  3E94               	addlw	148
  3630  0027  282A               	goto	L5
  3631  0028                     l1591:	
  3632                           ;flex_lcd.h: 123: case 4: data = 212 + x; break;
  3633                           
  3634  0028  0873               	movf	Lcd_Out2@x,w
  3635  0029  3ED4               	addlw	212
  3636  002A                     L5:	
  3637  002A  00F5               	movwf	??_Lcd_Out2
  3638  002B  0875               	movf	??_Lcd_Out2,w
  3639  002C  00F7               	movwf	Lcd_Out2@data
  3640                           
  3641                           ;flex_lcd.h: 125: }
  3642                           
  3643                           ;flex_lcd.h: 124: default: break;
  3644  002D  283C               	goto	l1597
  3645  002E                     l1595:	
  3646  002E  0876               	movf	Lcd_Out2@y,w
  3647                           
  3648                           ; Switch size 1, requested type "space"
  3649                           ; Number of cases is 4, Range of values is 1 to 4
  3650                           ; switch strategies available:
  3651                           ; Name         Instructions Cycles
  3652                           ; simple_byte           13     7 (average)
  3653                           ; direct_byte           17     9 (fixed)
  3654                           ; jumptable            263     9 (fixed)
  3655                           ;	Chosen strategy is simple_byte
  3656  002F  3A01               	xorlw	1	; case 1
  3657  0030  1903               	skipnz
  3658  0031  281F               	goto	l1585
  3659  0032  3A03               	xorlw	3	; case 2
  3660  0033  1903               	skipnz
  3661  0034  2822               	goto	l1587
  3662  0035  3A01               	xorlw	1	; case 3
  3663  0036  1903               	skipnz
  3664  0037  2825               	goto	l1589
  3665  0038  3A07               	xorlw	7	; case 4
  3666  0039  1903               	skipnz
  3667  003A  2828               	goto	l1591
  3668  003B  283C               	goto	l1597
  3669  003C                     l1597:	
  3670                           
  3671                           ;flex_lcd.h: 126: Lcd_Cmd(data);
  3672  003C  0877               	movf	Lcd_Out2@data,w
  3673  003D  3180  20B6  3180   	fcall	_Lcd_Cmd
  3674  0040                     l1603:	
  3675                           ;flex_lcd.h: 127: while(*buffer)
  3676                           
  3677  0040  0874               	movf	Lcd_Out2@buffer,w
  3678  0041  0086               	movwf	6
  3679  0042  0187               	clrf	7
  3680  0043  0801               	movf	1,w
  3681  0044  1903               	btfsc	3,2
  3682  0045  0008               	return
  3683                           
  3684                           ;flex_lcd.h: 128: {
  3685                           ;flex_lcd.h: 129: Lcd_Chr_CP(*buffer);
  3686  0046  0874               	movf	Lcd_Out2@buffer,w
  3687  0047  0086               	movwf	6
  3688  0048  0187               	clrf	7
  3689  0049  0801               	movf	1,w
  3690  004A  3181  2149  3180   	fcall	_Lcd_Chr_CP
  3691                           
  3692                           ;flex_lcd.h: 130: buffer++;
  3693  004D  3001               	movlw	1
  3694  004E  00F5               	movwf	??_Lcd_Out2
  3695  004F  0875               	movf	??_Lcd_Out2,w
  3696  0050  07F4               	addwf	Lcd_Out2@buffer,f
  3697  0051  2840               	goto	l1603
  3698  0052                     __end_of_Lcd_Out2:	
  3699                           ;flex_lcd.h: 131: }
  3700                           ;flex_lcd.h: 132: return;
  3701                           
  3702                           
  3703                           	psect	text11
  3704  0149                     __ptext11:	
  3705 ;; *************** function _Lcd_Chr_CP *****************
  3706 ;; Defined at:
  3707 ;;		line 136 in file "flex_lcd.h"
  3708 ;; Parameters:    Size  Location     Type
  3709 ;;  data            1    wreg     unsigned char 
  3710 ;; Auto vars:     Size  Location     Type
  3711 ;;  data            1    2[COMMON] unsigned char 
  3712 ;; Return value:  Size  Location     Type
  3713 ;;                  1    wreg      void 
  3714 ;; Registers used:
  3715 ;;		wreg, status,2, status,0
  3716 ;; Tracked objects:
  3717 ;;		On entry : 0/0
  3718 ;;		On exit  : 0/0
  3719 ;;		Unchanged: 0/0
  3720 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
  3721 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  3722 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  3723 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  3724 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  3725 ;;Total ram usage:        3 bytes
  3726 ;; Hardware stack levels used:    1
  3727 ;; This function calls:
  3728 ;;		Nothing
  3729 ;; This function is called by:
  3730 ;;		_Lcd_Out2
  3731 ;;		_Lcd_Out
  3732 ;; This function uses a non-reentrant model
  3733 ;;
  3734                           
  3735                           
  3736                           ;psect for function _Lcd_Chr_CP
  3737  0149                     _Lcd_Chr_CP:	
  3738                           
  3739                           ;incstack = 0
  3740                           ; Regs used in _Lcd_Chr_CP: [wreg+status,2+status,0]
  3741                           ;Lcd_Chr_CP@data stored from wreg
  3742  0149  00F2               	movwf	Lcd_Chr_CP@data
  3743                           
  3744                           ;flex_lcd.h: 137: PORTDbits.RD3 = 0; PORTDbits.RD2 = 1;
  3745  014A  0140               	movlb	0	; select bank0
  3746  014B  118F               	bcf	15,3	;volatile
  3747  014C  150F               	bsf	15,2	;volatile
  3748                           
  3749                           ;flex_lcd.h: 138: PORTCbits.RC3 = (data & 0b10000000)>>7; PORTDbits.RD0 = (data & 0b0100
      +                          0000)>>6;
  3750  014D  0872               	movf	Lcd_Chr_CP@data,w
  3751  014E  00F0               	movwf	??_Lcd_Chr_CP
  3752  014F  3007               	movlw	7
  3753  0150                     u1125:	
  3754  0150  36F0               	lsrf	??_Lcd_Chr_CP,f
  3755  0151  0B89               	decfsz	9,f
  3756  0152  2950               	goto	u1125
  3757  0153  0870               	movf	??_Lcd_Chr_CP,w
  3758  0154  3901               	andlw	1
  3759  0155  00F1               	movwf	??_Lcd_Chr_CP+1
  3760  0156  0DF1               	rlf	??_Lcd_Chr_CP+1,f
  3761  0157  0DF1               	rlf	??_Lcd_Chr_CP+1,f
  3762  0158  0DF1               	rlf	??_Lcd_Chr_CP+1,f
  3763  0159  080E               	movf	14,w	;volatile
  3764  015A  0671               	xorwf	??_Lcd_Chr_CP+1,w
  3765  015B  39F7               	andlw	-9
  3766  015C  0671               	xorwf	??_Lcd_Chr_CP+1,w
  3767  015D  008E               	movwf	14	;volatile
  3768  015E  0872               	movf	Lcd_Chr_CP@data,w
  3769  015F  00F0               	movwf	??_Lcd_Chr_CP
  3770  0160  3006               	movlw	6
  3771  0161                     u1135:	
  3772  0161  36F0               	lsrf	??_Lcd_Chr_CP,f
  3773  0162  0B89               	decfsz	9,f
  3774  0163  2961               	goto	u1135
  3775  0164  3001               	movlw	1
  3776  0165  0570               	andwf	??_Lcd_Chr_CP,w
  3777  0166  00F1               	movwf	??_Lcd_Chr_CP+1
  3778  0167  080F               	movf	15,w	;volatile
  3779  0168  0671               	xorwf	??_Lcd_Chr_CP+1,w
  3780  0169  39FE               	andlw	-2
  3781  016A  0671               	xorwf	??_Lcd_Chr_CP+1,w
  3782  016B  008F               	movwf	15	;volatile
  3783                           
  3784                           ;flex_lcd.h: 139: PORTDbits.RD1 = (data & 0b00100000)>>5; PORTCbits.RC4 = (data & 0b0001
      +                          0000)>>4;
  3785  016C  0872               	movf	Lcd_Chr_CP@data,w
  3786  016D  00F0               	movwf	??_Lcd_Chr_CP
  3787  016E  3005               	movlw	5
  3788  016F                     u1145:	
  3789  016F  36F0               	lsrf	??_Lcd_Chr_CP,f
  3790  0170  0B89               	decfsz	9,f
  3791  0171  296F               	goto	u1145
  3792  0172  0870               	movf	??_Lcd_Chr_CP,w
  3793  0173  3901               	andlw	1
  3794  0174  00F1               	movwf	??_Lcd_Chr_CP+1
  3795  0175  0DF1               	rlf	??_Lcd_Chr_CP+1,f
  3796  0176  080F               	movf	15,w	;volatile
  3797  0177  0671               	xorwf	??_Lcd_Chr_CP+1,w
  3798  0178  39FD               	andlw	-3
  3799  0179  0671               	xorwf	??_Lcd_Chr_CP+1,w
  3800  017A  008F               	movwf	15	;volatile
  3801  017B  0872               	movf	Lcd_Chr_CP@data,w
  3802  017C  00F0               	movwf	??_Lcd_Chr_CP
  3803  017D  3004               	movlw	4
  3804  017E                     u1155:	
  3805  017E  36F0               	lsrf	??_Lcd_Chr_CP,f
  3806  017F  0B89               	decfsz	9,f
  3807  0180  297E               	goto	u1155
  3808  0181  0870               	movf	??_Lcd_Chr_CP,w
  3809  0182  3901               	andlw	1
  3810  0183  00F1               	movwf	??_Lcd_Chr_CP+1
  3811  0184  0EF1               	swapf	??_Lcd_Chr_CP+1,f
  3812  0185  080E               	movf	14,w	;volatile
  3813  0186  0671               	xorwf	??_Lcd_Chr_CP+1,w
  3814  0187  39EF               	andlw	-17
  3815  0188  0671               	xorwf	??_Lcd_Chr_CP+1,w
  3816  0189  008E               	movwf	14	;volatile
  3817                           
  3818                           ;flex_lcd.h: 140: _delay(10);
  3819  018A  3003               	movlw	3
  3820  018B                     u2147:	
  3821  018B  0B89               	decfsz	9,f
  3822  018C  298B               	goto	u2147
  3823  018D  0000               	nop
  3824                           
  3825                           ;flex_lcd.h: 141: PORTDbits.RD3 = 1; _delay((unsigned long)((5)*(32000000/4000000.0))); 
      +                          PORTDbits.RD3 = 0;
  3826  018E  0140               	movlb	0	; select bank0
  3827  018F  158F               	bsf	15,3	;volatile
  3828  0190  300D               	movlw	13
  3829  0191                     u2157:	
  3830  0191  0B89               	decfsz	9,f
  3831  0192  2991               	goto	u2157
  3832  0193  0000               	nop
  3833  0194  0140               	movlb	0	; select bank0
  3834  0195  118F               	bcf	15,3	;volatile
  3835                           
  3836                           ;flex_lcd.h: 142: PORTCbits.RC3 = (data & 0b00001000)>>3; PORTDbits.RD0 = (data & 0b0000
      +                          0100)>>2;
  3837  0196  0872               	movf	Lcd_Chr_CP@data,w
  3838  0197  00F0               	movwf	??_Lcd_Chr_CP
  3839  0198  3003               	movlw	3
  3840  0199                     u1165:	
  3841  0199  36F0               	lsrf	??_Lcd_Chr_CP,f
  3842  019A  0B89               	decfsz	9,f
  3843  019B  2999               	goto	u1165
  3844  019C  0870               	movf	??_Lcd_Chr_CP,w
  3845  019D  3901               	andlw	1
  3846  019E  00F1               	movwf	??_Lcd_Chr_CP+1
  3847  019F  0DF1               	rlf	??_Lcd_Chr_CP+1,f
  3848  01A0  0DF1               	rlf	??_Lcd_Chr_CP+1,f
  3849  01A1  0DF1               	rlf	??_Lcd_Chr_CP+1,f
  3850  01A2  080E               	movf	14,w	;volatile
  3851  01A3  0671               	xorwf	??_Lcd_Chr_CP+1,w
  3852  01A4  39F7               	andlw	-9
  3853  01A5  0671               	xorwf	??_Lcd_Chr_CP+1,w
  3854  01A6  008E               	movwf	14	;volatile
  3855  01A7  0872               	movf	Lcd_Chr_CP@data,w
  3856  01A8  00F0               	movwf	??_Lcd_Chr_CP
  3857  01A9  3002               	movlw	2
  3858  01AA                     u1175:	
  3859  01AA  36F0               	lsrf	??_Lcd_Chr_CP,f
  3860  01AB  0B89               	decfsz	9,f
  3861  01AC  29AA               	goto	u1175
  3862  01AD  3001               	movlw	1
  3863  01AE  0570               	andwf	??_Lcd_Chr_CP,w
  3864  01AF  00F1               	movwf	??_Lcd_Chr_CP+1
  3865  01B0  080F               	movf	15,w	;volatile
  3866  01B1  0671               	xorwf	??_Lcd_Chr_CP+1,w
  3867  01B2  39FE               	andlw	-2
  3868  01B3  0671               	xorwf	??_Lcd_Chr_CP+1,w
  3869  01B4  008F               	movwf	15	;volatile
  3870                           
  3871                           ;flex_lcd.h: 143: PORTDbits.RD1 = (data & 0b00000010)>>1; PORTCbits.RC4 = (data & 0b0000
      +                          0001);
  3872  01B5  3672               	lsrf	Lcd_Chr_CP@data,w
  3873  01B6  3901               	andlw	1
  3874  01B7  00F0               	movwf	??_Lcd_Chr_CP
  3875  01B8  0DF0               	rlf	??_Lcd_Chr_CP,f
  3876  01B9  080F               	movf	15,w	;volatile
  3877  01BA  0670               	xorwf	??_Lcd_Chr_CP,w
  3878  01BB  39FD               	andlw	-3
  3879  01BC  0670               	xorwf	??_Lcd_Chr_CP,w
  3880  01BD  008F               	movwf	15	;volatile
  3881  01BE  0872               	movf	Lcd_Chr_CP@data,w
  3882  01BF  3901               	andlw	1
  3883  01C0  00F0               	movwf	??_Lcd_Chr_CP
  3884  01C1  0EF0               	swapf	??_Lcd_Chr_CP,f
  3885  01C2  080E               	movf	14,w	;volatile
  3886  01C3  0670               	xorwf	??_Lcd_Chr_CP,w
  3887  01C4  39EF               	andlw	-17
  3888  01C5  0670               	xorwf	??_Lcd_Chr_CP,w
  3889  01C6  008E               	movwf	14	;volatile
  3890                           
  3891                           ;flex_lcd.h: 144: _delay(10);
  3892  01C7  3003               	movlw	3
  3893  01C8                     u2167:	
  3894  01C8  0B89               	decfsz	9,f
  3895  01C9  29C8               	goto	u2167
  3896  01CA  0000               	nop
  3897                           
  3898                           ;flex_lcd.h: 145: PORTDbits.RD3 = 1; _delay((unsigned long)((5)*(32000000/4000000.0))); 
      +                          PORTDbits.RD3 = 0;
  3899  01CB  0140               	movlb	0	; select bank0
  3900  01CC  158F               	bsf	15,3	;volatile
  3901  01CD  300D               	movlw	13
  3902  01CE                     u2177:	
  3903  01CE  0B89               	decfsz	9,f
  3904  01CF  29CE               	goto	u2177
  3905  01D0  0000               	nop
  3906  01D1  0140               	movlb	0	; select bank0
  3907  01D2  118F               	bcf	15,3	;volatile
  3908                           
  3909                           ;flex_lcd.h: 146: _delay((unsigned long)((5)*(32000000/4000000.0))); _delay((unsigned lo
      +                          ng)((5500)*(32000000/4000000.0)));
  3910  01D3  300D               	movlw	13
  3911  01D4                     u2187:	
  3912  01D4  0B89               	decfsz	9,f
  3913  01D5  29D4               	goto	u2187
  3914  01D6  0000               	nop
  3915  01D7  303A               	movlw	58
  3916  01D8  00F0               	movwf	??_Lcd_Chr_CP
  3917  01D9  3023               	movlw	35
  3918  01DA                     u2197:	
  3919  01DA  0B89               	decfsz	9,f
  3920  01DB  29DA               	goto	u2197
  3921  01DC  0BF0               	decfsz	??_Lcd_Chr_CP,f
  3922  01DD  29DA               	goto	u2197
  3923  01DE  0000               	nop
  3924  01DF  0008               	return
  3925  01E0                     __end_of_Lcd_Chr_CP:	
  3926                           
  3927                           	psect	text12
  3928  01E0                     __ptext12:	
  3929 ;; *************** function _Lcd_Init *****************
  3930 ;; Defined at:
  3931 ;;		line 52 in file "flex_lcd.h"
  3932 ;; Parameters:    Size  Location     Type
  3933 ;;		None
  3934 ;; Auto vars:     Size  Location     Type
  3935 ;;  data            1    4[COMMON] unsigned char 
  3936 ;; Return value:  Size  Location     Type
  3937 ;;                  1    wreg      void 
  3938 ;; Registers used:
  3939 ;;		wreg, status,2, status,0, pclath, cstack
  3940 ;; Tracked objects:
  3941 ;;		On entry : 0/0
  3942 ;;		On exit  : 0/0
  3943 ;;		Unchanged: 0/0
  3944 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
  3945 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  3946 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  3947 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  3948 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  3949 ;;Total ram usage:        2 bytes
  3950 ;; Hardware stack levels used:    1
  3951 ;; Hardware stack levels required when called:    1
  3952 ;; This function calls:
  3953 ;;		_Lcd_Cmd
  3954 ;; This function is called by:
  3955 ;;		_main
  3956 ;; This function uses a non-reentrant model
  3957 ;;
  3958                           
  3959                           
  3960                           ;psect for function _Lcd_Init
  3961  01E0                     _Lcd_Init:	
  3962                           
  3963                           ;flex_lcd.h: 53: unsigned char data;
  3964                           ;flex_lcd.h: 54: TRISCbits.TRISC3 = 0;
  3965                           
  3966                           ;incstack = 0
  3967                           ; Regs used in _Lcd_Init: [wreg+status,2+status,0+pclath+cstack]
  3968  01E0  0140               	movlb	0	; select bank0
  3969  01E1  1193               	bcf	19,3	;volatile
  3970                           
  3971                           ;flex_lcd.h: 55: TRISDbits.TRISD0 = 0;
  3972  01E2  1014               	bcf	20,0	;volatile
  3973                           
  3974                           ;flex_lcd.h: 56: TRISDbits.TRISD1 = 0;
  3975  01E3  1094               	bcf	20,1	;volatile
  3976                           
  3977                           ;flex_lcd.h: 57: TRISCbits.TRISC4 = 0;
  3978  01E4  1213               	bcf	19,4	;volatile
  3979                           
  3980                           ;flex_lcd.h: 58: TRISDbits.TRISD3 = 0;
  3981  01E5  1194               	bcf	20,3	;volatile
  3982                           
  3983                           ;flex_lcd.h: 59: TRISDbits.TRISD2 = 0;
  3984  01E6  1114               	bcf	20,2	;volatile
  3985                           
  3986                           ;flex_lcd.h: 60: PORTCbits.RC3 = 0;
  3987  01E7  118E               	bcf	14,3	;volatile
  3988                           
  3989                           ;flex_lcd.h: 61: PORTDbits.RD0 = 0;
  3990  01E8  100F               	bcf	15,0	;volatile
  3991                           
  3992                           ;flex_lcd.h: 62: PORTDbits.RD1 = 0;
  3993  01E9  108F               	bcf	15,1	;volatile
  3994                           
  3995                           ;flex_lcd.h: 63: PORTCbits.RC4 = 0;
  3996  01EA  120E               	bcf	14,4	;volatile
  3997                           
  3998                           ;flex_lcd.h: 64: PORTDbits.RD3 = 0;
  3999  01EB  118F               	bcf	15,3	;volatile
  4000                           
  4001                           ;flex_lcd.h: 65: PORTDbits.RD2 = 0;
  4002  01EC  110F               	bcf	15,2	;volatile
  4003                           
  4004                           ;flex_lcd.h: 66: _delay((unsigned long)((5500)*(32000000/4000000.0)));
  4005  01ED  303A               	movlw	58
  4006  01EE  00F3               	movwf	??_Lcd_Init
  4007  01EF  3023               	movlw	35
  4008  01F0                     u2207:	
  4009  01F0  0B89               	decfsz	9,f
  4010  01F1  29F0               	goto	u2207
  4011  01F2  0BF3               	decfsz	??_Lcd_Init,f
  4012  01F3  29F0               	goto	u2207
  4013  01F4  0000               	nop
  4014                           
  4015                           ;flex_lcd.h: 67: _delay((unsigned long)((5500)*(32000000/4000000.0)));
  4016  01F5  303A               	movlw	58
  4017  01F6  00F3               	movwf	??_Lcd_Init
  4018  01F7  3023               	movlw	35
  4019  01F8                     u2217:	
  4020  01F8  0B89               	decfsz	9,f
  4021  01F9  29F8               	goto	u2217
  4022  01FA  0BF3               	decfsz	??_Lcd_Init,f
  4023  01FB  29F8               	goto	u2217
  4024  01FC  0000               	nop
  4025                           
  4026                           ;flex_lcd.h: 68: _delay((unsigned long)((5500)*(32000000/4000000.0)));
  4027  01FD  303A               	movlw	58
  4028  01FE  00F3               	movwf	??_Lcd_Init
  4029  01FF  3023               	movlw	35
  4030  0200                     u2227:	
  4031  0200  0B89               	decfsz	9,f
  4032  0201  2A00               	goto	u2227
  4033  0202  0BF3               	decfsz	??_Lcd_Init,f
  4034  0203  2A00               	goto	u2227
  4035  0204  0000               	nop
  4036                           
  4037                           ;flex_lcd.h: 69: _delay((unsigned long)((5500)*(32000000/4000000.0)));
  4038  0205  303A               	movlw	58
  4039  0206  00F3               	movwf	??_Lcd_Init
  4040  0207  3023               	movlw	35
  4041  0208                     u2237:	
  4042  0208  0B89               	decfsz	9,f
  4043  0209  2A08               	goto	u2237
  4044  020A  0BF3               	decfsz	??_Lcd_Init,f
  4045  020B  2A08               	goto	u2237
  4046  020C  0000               	nop
  4047                           
  4048                           ;flex_lcd.h: 70: _delay((unsigned long)((5500)*(32000000/4000000.0)));
  4049  020D  303A               	movlw	58
  4050  020E  00F3               	movwf	??_Lcd_Init
  4051  020F  3023               	movlw	35
  4052  0210                     u2247:	
  4053  0210  0B89               	decfsz	9,f
  4054  0211  2A10               	goto	u2247
  4055  0212  0BF3               	decfsz	??_Lcd_Init,f
  4056  0213  2A10               	goto	u2247
  4057  0214  0000               	nop
  4058                           
  4059                           ;flex_lcd.h: 71: _delay((unsigned long)((5500)*(32000000/4000000.0)));
  4060  0215  303A               	movlw	58
  4061  0216  00F3               	movwf	??_Lcd_Init
  4062  0217  3023               	movlw	35
  4063  0218                     u2257:	
  4064  0218  0B89               	decfsz	9,f
  4065  0219  2A18               	goto	u2257
  4066  021A  0BF3               	decfsz	??_Lcd_Init,f
  4067  021B  2A18               	goto	u2257
  4068  021C  0000               	nop
  4069                           
  4070                           ;flex_lcd.h: 72: for(data = 1; data < 4; data ++)
  4071  021D  01F4               	clrf	Lcd_Init@data
  4072  021E  0AF4               	incf	Lcd_Init@data,f
  4073  021F  3004               	movlw	4
  4074  0220  0274               	subwf	Lcd_Init@data,w
  4075  0221  1803               	btfsc	3,0
  4076  0222  2A4B               	goto	l44
  4077  0223                     l43:	
  4078                           
  4079                           ;flex_lcd.h: 73: {
  4080                           ;flex_lcd.h: 74: PORTCbits.RC3 = 0; PORTDbits.RD0 = 0; PORTDbits.RD1 = 1; PORTCbits.RC4 
      +                          = 1; PORTDbits.RD3 = 0;
  4081  0223  0140               	movlb	0	; select bank0
  4082  0224  118E               	bcf	14,3	;volatile
  4083  0225  100F               	bcf	15,0	;volatile
  4084  0226  148F               	bsf	15,1	;volatile
  4085  0227  160E               	bsf	14,4	;volatile
  4086  0228  118F               	bcf	15,3	;volatile
  4087                           
  4088                           ;flex_lcd.h: 75: PORTDbits.RD2 = 0; PORTCbits.RC3 = 0; PORTDbits.RD0 = 0; PORTDbits.RD1 
      +                          = 1; PORTCbits.RC4 = 1;
  4089  0229  110F               	bcf	15,2	;volatile
  4090  022A  118E               	bcf	14,3	;volatile
  4091  022B  100F               	bcf	15,0	;volatile
  4092  022C  148F               	bsf	15,1	;volatile
  4093  022D  160E               	bsf	14,4	;volatile
  4094                           
  4095                           ;flex_lcd.h: 76: PORTDbits.RD3 = 1; PORTDbits.RD2 = 0;
  4096  022E  158F               	bsf	15,3	;volatile
  4097  022F  110F               	bcf	15,2	;volatile
  4098                           
  4099                           ;flex_lcd.h: 77: _delay((unsigned long)((5)*(32000000/4000000.0)));
  4100  0230  300D               	movlw	13
  4101  0231                     u2267:	
  4102  0231  0B89               	decfsz	9,f
  4103  0232  2A31               	goto	u2267
  4104  0233  0000               	nop
  4105                           
  4106                           ;flex_lcd.h: 78: PORTCbits.RC3 = 0; PORTDbits.RD0 = 0; PORTDbits.RD1 = 1; PORTCbits.RC4 
      +                          = 1; PORTDbits.RD3 = 0;
  4107  0234  0140               	movlb	0	; select bank0
  4108  0235  118E               	bcf	14,3	;volatile
  4109  0236  100F               	bcf	15,0	;volatile
  4110  0237  148F               	bsf	15,1	;volatile
  4111  0238  160E               	bsf	14,4	;volatile
  4112  0239  118F               	bcf	15,3	;volatile
  4113                           
  4114                           ;flex_lcd.h: 79: PORTDbits.RD2 = 0;
  4115  023A  110F               	bcf	15,2	;volatile
  4116                           
  4117                           ;flex_lcd.h: 80: _delay((unsigned long)((5500)*(32000000/4000000.0)));
  4118  023B  303A               	movlw	58
  4119  023C  00F3               	movwf	??_Lcd_Init
  4120  023D  3023               	movlw	35
  4121  023E                     u2277:	
  4122  023E  0B89               	decfsz	9,f
  4123  023F  2A3E               	goto	u2277
  4124  0240  0BF3               	decfsz	??_Lcd_Init,f
  4125  0241  2A3E               	goto	u2277
  4126  0242  0000               	nop
  4127  0243  3001               	movlw	1
  4128  0244  00F3               	movwf	??_Lcd_Init
  4129  0245  0873               	movf	??_Lcd_Init,w
  4130  0246  07F4               	addwf	Lcd_Init@data,f
  4131  0247  3004               	movlw	4
  4132  0248  0274               	subwf	Lcd_Init@data,w
  4133  0249  1C03               	skipc
  4134  024A  2A23               	goto	l43
  4135  024B                     l44:	
  4136                           
  4137                           ;flex_lcd.h: 81: }
  4138                           ;flex_lcd.h: 82: PORTCbits.RC3 = 0; PORTDbits.RD0 = 0; PORTDbits.RD1 = 1; PORTCbits.RC4 
      +                          = 0; PORTDbits.RD3 = 0; PORTDbits.RD2 = 0;
  4139  024B  0140               	movlb	0	; select bank0
  4140  024C  118E               	bcf	14,3	;volatile
  4141  024D  100F               	bcf	15,0	;volatile
  4142  024E  148F               	bsf	15,1	;volatile
  4143  024F  120E               	bcf	14,4	;volatile
  4144  0250  118F               	bcf	15,3	;volatile
  4145  0251  110F               	bcf	15,2	;volatile
  4146                           
  4147                           ;flex_lcd.h: 83: PORTCbits.RC3 = 0; PORTDbits.RD0 = 0; PORTDbits.RD1 = 1; PORTCbits.RC4 
      +                          = 0; PORTDbits.RD3 = 1; PORTDbits.RD2 = 0;
  4148  0252  118E               	bcf	14,3	;volatile
  4149  0253  100F               	bcf	15,0	;volatile
  4150  0254  148F               	bsf	15,1	;volatile
  4151  0255  120E               	bcf	14,4	;volatile
  4152  0256  158F               	bsf	15,3	;volatile
  4153  0257  110F               	bcf	15,2	;volatile
  4154                           
  4155                           ;flex_lcd.h: 84: _delay((unsigned long)((5)*(32000000/4000000.0)));
  4156  0258  300D               	movlw	13
  4157  0259                     u2287:	
  4158  0259  0B89               	decfsz	9,f
  4159  025A  2A59               	goto	u2287
  4160  025B  0000               	nop
  4161                           
  4162                           ;flex_lcd.h: 85: PORTCbits.RC3 = 0; PORTDbits.RD0 = 0; PORTDbits.RD1 = 1; PORTCbits.RC4 
      +                          = 0; PORTDbits.RD3 = 0; PORTDbits.RD2 = 0;
  4163  025C  0140               	movlb	0	; select bank0
  4164  025D  118E               	bcf	14,3	;volatile
  4165  025E  100F               	bcf	15,0	;volatile
  4166  025F  148F               	bsf	15,1	;volatile
  4167  0260  120E               	bcf	14,4	;volatile
  4168  0261  118F               	bcf	15,3	;volatile
  4169  0262  110F               	bcf	15,2	;volatile
  4170                           
  4171                           ;flex_lcd.h: 86: _delay((unsigned long)((5500)*(32000000/4000000.0)));
  4172  0263  303A               	movlw	58
  4173  0264  00F3               	movwf	??_Lcd_Init
  4174  0265  3023               	movlw	35
  4175  0266                     u2297:	
  4176  0266  0B89               	decfsz	9,f
  4177  0267  2A66               	goto	u2297
  4178  0268  0BF3               	decfsz	??_Lcd_Init,f
  4179  0269  2A66               	goto	u2297
  4180  026A  0000               	nop
  4181                           
  4182                           ;flex_lcd.h: 87: data = 40; Lcd_Cmd(data);
  4183  026B  3028               	movlw	40
  4184  026C  00F3               	movwf	??_Lcd_Init
  4185  026D  0873               	movf	??_Lcd_Init,w
  4186  026E  00F4               	movwf	Lcd_Init@data
  4187  026F  0874               	movf	Lcd_Init@data,w
  4188  0270  3180  20B6  3181   	fcall	_Lcd_Cmd
  4189                           
  4190                           ;flex_lcd.h: 88: data = 16; Lcd_Cmd(data);
  4191  0273  3010               	movlw	16
  4192  0274  00F3               	movwf	??_Lcd_Init
  4193  0275  0873               	movf	??_Lcd_Init,w
  4194  0276  00F4               	movwf	Lcd_Init@data
  4195  0277  0874               	movf	Lcd_Init@data,w
  4196  0278  3180  20B6  3181   	fcall	_Lcd_Cmd
  4197                           
  4198                           ;flex_lcd.h: 89: data = 1; Lcd_Cmd(data);
  4199  027B  01F4               	clrf	Lcd_Init@data
  4200  027C  0AF4               	incf	Lcd_Init@data,f
  4201  027D  0874               	movf	Lcd_Init@data,w
  4202  027E  3180  20B6  3181   	fcall	_Lcd_Cmd
  4203                           
  4204                           ;flex_lcd.h: 90: data = 15; Lcd_Cmd(data);
  4205  0281  300F               	movlw	15
  4206  0282  00F3               	movwf	??_Lcd_Init
  4207  0283  0873               	movf	??_Lcd_Init,w
  4208  0284  00F4               	movwf	Lcd_Init@data
  4209  0285  0874               	movf	Lcd_Init@data,w
  4210  0286  3180  20B6         	fcall	_Lcd_Cmd
  4211  0288  0008               	return
  4212  0289                     __end_of_Lcd_Init:	
  4213                           
  4214                           	psect	text13
  4215  00B6                     __ptext13:	
  4216 ;; *************** function _Lcd_Cmd *****************
  4217 ;; Defined at:
  4218 ;;		line 150 in file "flex_lcd.h"
  4219 ;; Parameters:    Size  Location     Type
  4220 ;;  data            1    wreg     unsigned char 
  4221 ;; Auto vars:     Size  Location     Type
  4222 ;;  data            1    2[COMMON] unsigned char 
  4223 ;; Return value:  Size  Location     Type
  4224 ;;                  1    wreg      void 
  4225 ;; Registers used:
  4226 ;;		wreg, status,2, status,0
  4227 ;; Tracked objects:
  4228 ;;		On entry : 0/0
  4229 ;;		On exit  : 0/0
  4230 ;;		Unchanged: 0/0
  4231 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
  4232 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  4233 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  4234 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  4235 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  4236 ;;Total ram usage:        3 bytes
  4237 ;; Hardware stack levels used:    1
  4238 ;; This function calls:
  4239 ;;		Nothing
  4240 ;; This function is called by:
  4241 ;;		_Lcd_Init
  4242 ;;		_Lcd_Out2
  4243 ;;		_main
  4244 ;;		_Lcd_Out
  4245 ;; This function uses a non-reentrant model
  4246 ;;
  4247                           
  4248                           
  4249                           ;psect for function _Lcd_Cmd
  4250  00B6                     _Lcd_Cmd:	
  4251                           
  4252                           ;incstack = 0
  4253                           ; Regs used in _Lcd_Cmd: [wreg+status,2+status,0]
  4254                           ;Lcd_Cmd@data stored from wreg
  4255  00B6  00F2               	movwf	Lcd_Cmd@data
  4256                           
  4257                           ;flex_lcd.h: 151: PORTDbits.RD3 = 0; PORTDbits.RD2 = 0;
  4258  00B7  0140               	movlb	0	; select bank0
  4259  00B8  118F               	bcf	15,3	;volatile
  4260  00B9  110F               	bcf	15,2	;volatile
  4261                           
  4262                           ;flex_lcd.h: 152: PORTCbits.RC3 = (data & 0b10000000)>>7; PORTDbits.RD0 = (data & 0b0100
      +                          0000)>>6;
  4263  00BA  0872               	movf	Lcd_Cmd@data,w
  4264  00BB  00F0               	movwf	??_Lcd_Cmd
  4265  00BC  3007               	movlw	7
  4266  00BD                     u1065:	
  4267  00BD  36F0               	lsrf	??_Lcd_Cmd,f
  4268  00BE  0B89               	decfsz	9,f
  4269  00BF  28BD               	goto	u1065
  4270  00C0  0870               	movf	??_Lcd_Cmd,w
  4271  00C1  3901               	andlw	1
  4272  00C2  00F1               	movwf	??_Lcd_Cmd+1
  4273  00C3  0DF1               	rlf	??_Lcd_Cmd+1,f
  4274  00C4  0DF1               	rlf	??_Lcd_Cmd+1,f
  4275  00C5  0DF1               	rlf	??_Lcd_Cmd+1,f
  4276  00C6  080E               	movf	14,w	;volatile
  4277  00C7  0671               	xorwf	??_Lcd_Cmd+1,w
  4278  00C8  39F7               	andlw	-9
  4279  00C9  0671               	xorwf	??_Lcd_Cmd+1,w
  4280  00CA  008E               	movwf	14	;volatile
  4281  00CB  0872               	movf	Lcd_Cmd@data,w
  4282  00CC  00F0               	movwf	??_Lcd_Cmd
  4283  00CD  3006               	movlw	6
  4284  00CE                     u1075:	
  4285  00CE  36F0               	lsrf	??_Lcd_Cmd,f
  4286  00CF  0B89               	decfsz	9,f
  4287  00D0  28CE               	goto	u1075
  4288  00D1  3001               	movlw	1
  4289  00D2  0570               	andwf	??_Lcd_Cmd,w
  4290  00D3  00F1               	movwf	??_Lcd_Cmd+1
  4291  00D4  080F               	movf	15,w	;volatile
  4292  00D5  0671               	xorwf	??_Lcd_Cmd+1,w
  4293  00D6  39FE               	andlw	-2
  4294  00D7  0671               	xorwf	??_Lcd_Cmd+1,w
  4295  00D8  008F               	movwf	15	;volatile
  4296                           
  4297                           ;flex_lcd.h: 153: PORTDbits.RD1 = (data & 0b00100000)>>5; PORTCbits.RC4 = (data & 0b0001
      +                          0000)>>4;
  4298  00D9  0872               	movf	Lcd_Cmd@data,w
  4299  00DA  00F0               	movwf	??_Lcd_Cmd
  4300  00DB  3005               	movlw	5
  4301  00DC                     u1085:	
  4302  00DC  36F0               	lsrf	??_Lcd_Cmd,f
  4303  00DD  0B89               	decfsz	9,f
  4304  00DE  28DC               	goto	u1085
  4305  00DF  0870               	movf	??_Lcd_Cmd,w
  4306  00E0  3901               	andlw	1
  4307  00E1  00F1               	movwf	??_Lcd_Cmd+1
  4308  00E2  0DF1               	rlf	??_Lcd_Cmd+1,f
  4309  00E3  080F               	movf	15,w	;volatile
  4310  00E4  0671               	xorwf	??_Lcd_Cmd+1,w
  4311  00E5  39FD               	andlw	-3
  4312  00E6  0671               	xorwf	??_Lcd_Cmd+1,w
  4313  00E7  008F               	movwf	15	;volatile
  4314  00E8  0872               	movf	Lcd_Cmd@data,w
  4315  00E9  00F0               	movwf	??_Lcd_Cmd
  4316  00EA  3004               	movlw	4
  4317  00EB                     u1095:	
  4318  00EB  36F0               	lsrf	??_Lcd_Cmd,f
  4319  00EC  0B89               	decfsz	9,f
  4320  00ED  28EB               	goto	u1095
  4321  00EE  0870               	movf	??_Lcd_Cmd,w
  4322  00EF  3901               	andlw	1
  4323  00F0  00F1               	movwf	??_Lcd_Cmd+1
  4324  00F1  0EF1               	swapf	??_Lcd_Cmd+1,f
  4325  00F2  080E               	movf	14,w	;volatile
  4326  00F3  0671               	xorwf	??_Lcd_Cmd+1,w
  4327  00F4  39EF               	andlw	-17
  4328  00F5  0671               	xorwf	??_Lcd_Cmd+1,w
  4329  00F6  008E               	movwf	14	;volatile
  4330                           
  4331                           ;flex_lcd.h: 154: _delay(10);
  4332  00F7  3003               	movlw	3
  4333  00F8                     u2307:	
  4334  00F8  0B89               	decfsz	9,f
  4335  00F9  28F8               	goto	u2307
  4336  00FA  0000               	nop
  4337                           
  4338                           ;flex_lcd.h: 155: PORTDbits.RD3 = 1; _delay((unsigned long)((5)*(32000000/4000000.0))); 
      +                          PORTDbits.RD3 = 0;
  4339  00FB  0140               	movlb	0	; select bank0
  4340  00FC  158F               	bsf	15,3	;volatile
  4341  00FD  300D               	movlw	13
  4342  00FE                     u2317:	
  4343  00FE  0B89               	decfsz	9,f
  4344  00FF  28FE               	goto	u2317
  4345  0100  0000               	nop
  4346  0101  0140               	movlb	0	; select bank0
  4347  0102  118F               	bcf	15,3	;volatile
  4348                           
  4349                           ;flex_lcd.h: 156: PORTCbits.RC3 = (data & 0b00001000)>>3; PORTDbits.RD0 = (data & 0b0000
      +                          0100)>>2;
  4350  0103  0872               	movf	Lcd_Cmd@data,w
  4351  0104  00F0               	movwf	??_Lcd_Cmd
  4352  0105  3003               	movlw	3
  4353  0106                     u1105:	
  4354  0106  36F0               	lsrf	??_Lcd_Cmd,f
  4355  0107  0B89               	decfsz	9,f
  4356  0108  2906               	goto	u1105
  4357  0109  0870               	movf	??_Lcd_Cmd,w
  4358  010A  3901               	andlw	1
  4359  010B  00F1               	movwf	??_Lcd_Cmd+1
  4360  010C  0DF1               	rlf	??_Lcd_Cmd+1,f
  4361  010D  0DF1               	rlf	??_Lcd_Cmd+1,f
  4362  010E  0DF1               	rlf	??_Lcd_Cmd+1,f
  4363  010F  080E               	movf	14,w	;volatile
  4364  0110  0671               	xorwf	??_Lcd_Cmd+1,w
  4365  0111  39F7               	andlw	-9
  4366  0112  0671               	xorwf	??_Lcd_Cmd+1,w
  4367  0113  008E               	movwf	14	;volatile
  4368  0114  0872               	movf	Lcd_Cmd@data,w
  4369  0115  00F0               	movwf	??_Lcd_Cmd
  4370  0116  3002               	movlw	2
  4371  0117                     u1115:	
  4372  0117  36F0               	lsrf	??_Lcd_Cmd,f
  4373  0118  0B89               	decfsz	9,f
  4374  0119  2917               	goto	u1115
  4375  011A  3001               	movlw	1
  4376  011B  0570               	andwf	??_Lcd_Cmd,w
  4377  011C  00F1               	movwf	??_Lcd_Cmd+1
  4378  011D  080F               	movf	15,w	;volatile
  4379  011E  0671               	xorwf	??_Lcd_Cmd+1,w
  4380  011F  39FE               	andlw	-2
  4381  0120  0671               	xorwf	??_Lcd_Cmd+1,w
  4382  0121  008F               	movwf	15	;volatile
  4383                           
  4384                           ;flex_lcd.h: 157: PORTDbits.RD1 = (data & 0b00000010)>>1; PORTCbits.RC4 = (data & 0b0000
      +                          0001);
  4385  0122  3672               	lsrf	Lcd_Cmd@data,w
  4386  0123  3901               	andlw	1
  4387  0124  00F0               	movwf	??_Lcd_Cmd
  4388  0125  0DF0               	rlf	??_Lcd_Cmd,f
  4389  0126  080F               	movf	15,w	;volatile
  4390  0127  0670               	xorwf	??_Lcd_Cmd,w
  4391  0128  39FD               	andlw	-3
  4392  0129  0670               	xorwf	??_Lcd_Cmd,w
  4393  012A  008F               	movwf	15	;volatile
  4394  012B  0872               	movf	Lcd_Cmd@data,w
  4395  012C  3901               	andlw	1
  4396  012D  00F0               	movwf	??_Lcd_Cmd
  4397  012E  0EF0               	swapf	??_Lcd_Cmd,f
  4398  012F  080E               	movf	14,w	;volatile
  4399  0130  0670               	xorwf	??_Lcd_Cmd,w
  4400  0131  39EF               	andlw	-17
  4401  0132  0670               	xorwf	??_Lcd_Cmd,w
  4402  0133  008E               	movwf	14	;volatile
  4403                           
  4404                           ;flex_lcd.h: 158: _delay(10);
  4405  0134  3003               	movlw	3
  4406  0135                     u2327:	
  4407  0135  0B89               	decfsz	9,f
  4408  0136  2935               	goto	u2327
  4409  0137  0000               	nop
  4410                           
  4411                           ;flex_lcd.h: 159: PORTDbits.RD3 = 1; _delay((unsigned long)((5)*(32000000/4000000.0))); 
      +                          PORTDbits.RD3 = 0;
  4412  0138  0140               	movlb	0	; select bank0
  4413  0139  158F               	bsf	15,3	;volatile
  4414  013A  300D               	movlw	13
  4415  013B                     u2337:	
  4416  013B  0B89               	decfsz	9,f
  4417  013C  293B               	goto	u2337
  4418  013D  0000               	nop
  4419  013E  0140               	movlb	0	; select bank0
  4420  013F  118F               	bcf	15,3	;volatile
  4421                           
  4422                           ;flex_lcd.h: 160: _delay((unsigned long)((5500)*(32000000/4000000.0)));
  4423  0140  303A               	movlw	58
  4424  0141  00F0               	movwf	??_Lcd_Cmd
  4425  0142  3023               	movlw	35
  4426  0143                     u2347:	
  4427  0143  0B89               	decfsz	9,f
  4428  0144  2943               	goto	u2347
  4429  0145  0BF0               	decfsz	??_Lcd_Cmd,f
  4430  0146  2943               	goto	u2347
  4431  0147  0000               	nop
  4432  0148  0008               	return
  4433  0149                     __end_of_Lcd_Cmd:	
  4434  007E                     btemp	set	126	;btemp
  4435  007E                     wtemp0	set	126


Data Sizes:
    Strings     50
    Constant    10
    Data        4
    BSS         57
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     39      68
    BANK1            80      0      32
    BANK2            80      0       0
    BANK3            80      0       0
    BANK4            80      0       0
    BANK5            80      0       0
    BANK6            80      0       0
    BANK7            80      0       0
    BANK8            80      0       0
    BANK9            80      0       0
    BANK10           80      0       0
    BANK11           80      0       0
    BANK12           80      0       0
    BANK13           80      0       0
    BANK14           80      0       0
    BANK15           80      0       0
    BANK16           80      0       0
    BANK17           80      0       0
    BANK18           80      0       0
    BANK19           80      0       0
    BANK20           80      0       0
    BANK21           80      0       0
    BANK22           80      0       0
    BANK23           80      0       0
    BANK24           80      0       0
    BANK25           80      0       0
    BANK26           80      0       0
    BANK27           80      0       0
    BANK28           80      0       0
    BANK29           80      0       0
    BANK30           80      0       0
    BANK31           80      0       0
    BANK32           80      0       0
    BANK33           80      0       0
    BANK34           80      0       0
    BANK35           80      0       0
    BANK36           80      0       0
    BANK37           80      0       0
    BANK38           80      0       0
    BANK39           80      0       0
    BANK40           80      0       0
    BANK41           80      0       0
    BANK42           80      0       0
    BANK43           80      0       0
    BANK44           80      0       0
    BANK45           80      0       0
    BANK46           80      0       0
    BANK47           80      0       0
    BANK48           80      0       0
    BANK49           80      0       0
    BANK50           80      0       0

Pointer List with Targets:

    strcat@from	PTR const unsigned char  size(1) Largest target is 1
		 -> entrada(BANK0[1]), 

    strcat@to	PTR unsigned char  size(1) Largest target is 16
		 -> num2_char(BANK1[16]), num1_char(BANK0[16]), 

    strcat@cp	PTR unsigned char  size(1) Largest target is 16
		 -> num2_char(BANK1[16]), num1_char(BANK0[16]), 

    sprintf@f	PTR const unsigned char  size(2) Largest target is 16
		 -> STR_15(CODE[16]), STR_14(CODE[11]), STR_13(CODE[11]), 

    sprintf@sp	PTR unsigned char  size(1) Largest target is 16
		 -> main@buffer1(BANK0[16]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    sp__strcat	PTR unsigned char  size(1) Largest target is 16
		 -> num2_char(BANK1[16]), num1_char(BANK0[16]), 

    convertirnum2@num2	PTR unsigned char  size(1) Largest target is 16
		 -> num2_char(BANK1[16]), 

    convertirnum1@num	PTR unsigned char  size(1) Largest target is 16
		 -> num1_char(BANK0[16]), 

    resultado@valor2	PTR unsigned char  size(1) Largest target is 16
		 -> num2_char(BANK1[16]), 

    resultado@valor1	PTR unsigned char  size(1) Largest target is 16
		 -> num1_char(BANK0[16]), 

    Lcd_Out2@buffer	PTR unsigned char  size(1) Largest target is 16
		 -> main@buffer1(BANK0[16]), 


Critical Paths under _main in COMMON

    _sprintf->___lwmod
    ___lwmod->___lwdiv
    _resultado->___wmul
    _convertirnum2->___wmul
    _convertirnum1->___wmul
    _Lcd_Out2->_Lcd_Chr_CP
    _Lcd_Out2->_Lcd_Cmd
    _Lcd_Init->_Lcd_Cmd

Critical Paths under _main in BANK0

    _main->_sprintf

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _main in BANK16

    None.

Critical Paths under _main in BANK17

    None.

Critical Paths under _main in BANK18

    None.

Critical Paths under _main in BANK19

    None.

Critical Paths under _main in BANK20

    None.

Critical Paths under _main in BANK21

    None.

Critical Paths under _main in BANK22

    None.

Critical Paths under _main in BANK23

    None.

Critical Paths under _main in BANK24

    None.

Critical Paths under _main in BANK25

    None.

Critical Paths under _main in BANK26

    None.

Critical Paths under _main in BANK27

    None.

Critical Paths under _main in BANK28

    None.

Critical Paths under _main in BANK29

    None.

Critical Paths under _main in BANK30

    None.

Critical Paths under _main in BANK31

    None.

Critical Paths under _main in BANK32

    None.

Critical Paths under _main in BANK33

    None.

Critical Paths under _main in BANK34

    None.

Critical Paths under _main in BANK35

    None.

Critical Paths under _main in BANK36

    None.

Critical Paths under _main in BANK37

    None.

Critical Paths under _main in BANK38

    None.

Critical Paths under _main in BANK39

    None.

Critical Paths under _main in BANK40

    None.

Critical Paths under _main in BANK41

    None.

Critical Paths under _main in BANK42

    None.

Critical Paths under _main in BANK43

    None.

Critical Paths under _main in BANK44

    None.

Critical Paths under _main in BANK45

    None.

Critical Paths under _main in BANK46

    None.

Critical Paths under _main in BANK47

    None.

Critical Paths under _main in BANK48

    None.

Critical Paths under _main in BANK49

    None.

Critical Paths under _main in BANK50

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                38    34      4   12022
                                             17 BANK0     22    18      4
                            _Lcd_Cmd
                           _Lcd_Init
                           _Lcd_Out2
                      _convertirnum1
                      _convertirnum2
                          _resultado
                            _sprintf
                             _strcat
 ---------------------------------------------------------------------------------
 (1) _strcat                                               4     3      1    2260
                                              0 COMMON     4     3      1
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             25    21      4    2921
                                              0 BANK0     17    13      4
                            ___lwdiv
                            ___lwmod
                             ___wmul
                            _isdigit
 ---------------------------------------------------------------------------------
 (2) _isdigit                                              2     2      0      68
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (2) ___lwmod                                              6     2      4     287
                                              8 COMMON     6     2      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              8     4      4     290
                                              0 COMMON     8     4      4
 ---------------------------------------------------------------------------------
 (1) _resultado                                            6     5      1    1714
                                              6 COMMON     6     5      1
                             ___wmul
 ---------------------------------------------------------------------------------
 (1) _convertirnum2                                        4     4      0    1788
                                              6 COMMON     4     4      0
                             ___wmul
 ---------------------------------------------------------------------------------
 (1) _convertirnum1                                        4     4      0    1788
                                              6 COMMON     4     4      0
                             ___wmul
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4    1244
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (1) _Lcd_Out2                                             5     3      2     917
                                              3 COMMON     5     3      2
                         _Lcd_Chr_CP
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (2) _Lcd_Chr_CP                                           3     3      0     176
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (1) _Lcd_Init                                             2     2      0     314
                                              3 COMMON     2     2      0
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (2) _Lcd_Cmd                                              3     3      0     176
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Lcd_Cmd
   _Lcd_Init
     _Lcd_Cmd
   _Lcd_Out2
     _Lcd_Chr_CP
     _Lcd_Cmd
   _convertirnum1
     ___wmul
   _convertirnum2
     ___wmul
   _resultado
     ___wmul
   _sprintf
     ___lwdiv
     ___lwmod
       ___lwdiv (ARG)
     ___wmul
     _isdigit
   _strcat

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             FF0      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      E       E       2      100.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     27      44       5       85.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BANK1               50      0      20       7       40.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BITBANK2            50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BANK2               50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BITBANK3            50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BANK3               50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITBANK4            50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BANK4               50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITBANK5            50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BANK5               50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITBANK6            50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BANK6               50      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITBANK7            50      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BANK7               50      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITBANK8            50      0       0      20        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BANK8               50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BITBANK9            50      0       0      22        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BANK9               50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BITBANK10           50      0       0      24        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BANK10              50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BITBANK11           50      0       0      26        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BANK11              50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
ABS                  0      0      72      28        0.0%
BITBANK12           50      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BANK12              50      0       0      30        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITBANK13           50      0       0      31        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BANK13              50      0       0      32        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%
BITBANK14           50      0       0      33        0.0%
BITSFR32             0      0       0      33        0.0%
SFR32                0      0       0      33        0.0%
BANK14              50      0       0      34        0.0%
BITSFR33             0      0       0      34        0.0%
SFR33                0      0       0      34        0.0%
BITBANK15           50      0       0      35        0.0%
BITSFR34             0      0       0      35        0.0%
SFR34                0      0       0      35        0.0%
BANK15              50      0       0      36        0.0%
BITSFR35             0      0       0      36        0.0%
SFR35                0      0       0      36        0.0%
BITBANK16           50      0       0      37        0.0%
BITSFR36             0      0       0      37        0.0%
SFR36                0      0       0      37        0.0%
BANK16              50      0       0      38        0.0%
BITSFR37             0      0       0      38        0.0%
SFR37                0      0       0      38        0.0%
BITBANK17           50      0       0      39        0.0%
BITSFR38             0      0       0      39        0.0%
SFR38                0      0       0      39        0.0%
BANK17              50      0       0      40        0.0%
BITSFR39             0      0       0      40        0.0%
SFR39                0      0       0      40        0.0%
BITBANK18           50      0       0      41        0.0%
BITSFR40             0      0       0      41        0.0%
SFR40                0      0       0      41        0.0%
BANK18              50      0       0      42        0.0%
BITSFR41             0      0       0      42        0.0%
SFR41                0      0       0      42        0.0%
BITBANK19           50      0       0      43        0.0%
BITSFR42             0      0       0      43        0.0%
SFR42                0      0       0      43        0.0%
BANK19              50      0       0      44        0.0%
BITSFR43             0      0       0      44        0.0%
SFR43                0      0       0      44        0.0%
BITBANK20           50      0       0      45        0.0%
BITSFR44             0      0       0      45        0.0%
SFR44                0      0       0      45        0.0%
BANK20              50      0       0      46        0.0%
BITSFR45             0      0       0      46        0.0%
SFR45                0      0       0      46        0.0%
BITBANK21           50      0       0      47        0.0%
BITSFR46             0      0       0      47        0.0%
SFR46                0      0       0      47        0.0%
BANK21              50      0       0      48        0.0%
BITSFR47             0      0       0      48        0.0%
SFR47                0      0       0      48        0.0%
BITBANK22           50      0       0      49        0.0%
BITSFR48             0      0       0      49        0.0%
SFR48                0      0       0      49        0.0%
BANK22              50      0       0      50        0.0%
BITSFR49             0      0       0      50        0.0%
SFR49                0      0       0      50        0.0%
BITBANK23           50      0       0      51        0.0%
BITSFR50             0      0       0      51        0.0%
SFR50                0      0       0      51        0.0%
BANK23              50      0       0      52        0.0%
BITSFR51             0      0       0      52        0.0%
SFR51                0      0       0      52        0.0%
BITBANK24           50      0       0      53        0.0%
BITSFR52             0      0       0      53        0.0%
SFR52                0      0       0      53        0.0%
BANK24              50      0       0      54        0.0%
BITSFR53             0      0       0      54        0.0%
SFR53                0      0       0      54        0.0%
BITBANK25           50      0       0      55        0.0%
BITSFR54             0      0       0      55        0.0%
SFR54                0      0       0      55        0.0%
BANK25              50      0       0      56        0.0%
BITSFR55             0      0       0      56        0.0%
SFR55                0      0       0      56        0.0%
BITBANK26           50      0       0      57        0.0%
BITSFR56             0      0       0      57        0.0%
SFR56                0      0       0      57        0.0%
BANK26              50      0       0      58        0.0%
BITSFR57             0      0       0      58        0.0%
SFR57                0      0       0      58        0.0%
BITSFR58             0      0       0      59        0.0%
SFR58                0      0       0      59        0.0%
DATA                 0      0      72      59        0.0%
BITBANK27           50      0       0      60        0.0%
BITSFR59             0      0       0      60        0.0%
SFR59                0      0       0      60        0.0%
BANK27              50      0       0      61        0.0%
BITSFR60             0      0       0      61        0.0%
SFR60                0      0       0      61        0.0%
BITBANK28           50      0       0      62        0.0%
BITSFR61             0      0       0      62        0.0%
SFR61                0      0       0      62        0.0%
BANK28              50      0       0      63        0.0%
BITSFR62             0      0       0      63        0.0%
SFR62                0      0       0      63        0.0%
BITBANK29           50      0       0      64        0.0%
BITSFR63             0      0       0      64        0.0%
SFR63                0      0       0      64        0.0%
BANK29              50      0       0      65        0.0%
BITBANK30           50      0       0      66        0.0%
BANK30              50      0       0      67        0.0%
BITBANK31           50      0       0      68        0.0%
BANK31              50      0       0      69        0.0%
BITBANK32           50      0       0      70        0.0%
BANK32              50      0       0      71        0.0%
BITBANK33           50      0       0      72        0.0%
BANK33              50      0       0      73        0.0%
BITBANK34           50      0       0      74        0.0%
BANK34              50      0       0      75        0.0%
BITBANK35           50      0       0      76        0.0%
BANK35              50      0       0      77        0.0%
BITBANK36           50      0       0      78        0.0%
BANK36              50      0       0      79        0.0%
BITBANK37           50      0       0      80        0.0%
BANK37              50      0       0      81        0.0%
BITBANK38           50      0       0      82        0.0%
BANK38              50      0       0      83        0.0%
BITBANK39           50      0       0      84        0.0%
BANK39              50      0       0      85        0.0%
BITBANK40           50      0       0      86        0.0%
BANK40              50      0       0      87        0.0%
BITBANK41           50      0       0      88        0.0%
BANK41              50      0       0      89        0.0%
BITBANK42           50      0       0      90        0.0%
BANK42              50      0       0      91        0.0%
BITBANK43           50      0       0      92        0.0%
BANK43              50      0       0      93        0.0%
BITBANK44           50      0       0      94        0.0%
BANK44              50      0       0      95        0.0%
BITBANK45           50      0       0      96        0.0%
BANK45              50      0       0      97        0.0%
BITBANK46           50      0       0      98        0.0%
BANK46              50      0       0      99        0.0%
BITBANK47           50      0       0     100        0.0%
BANK47              50      0       0     101        0.0%
BITBANK48           50      0       0     102        0.0%
BANK48              50      0       0     103        0.0%
BITBANK49           50      0       0     104        0.0%
BANK49              50      0       0     105        0.0%
BITBANK50           50      0       0     106        0.0%
BANK50              50      0       0     107        0.0%


Microchip Technology PIC Macro Assembler V1.45 build -152302408 
Symbol Table                                                                                   Wed Sep 26 01:27:20 2018

            __CFG_CP$OFF 0000                       l43 0223                       l44 024B  
    ___wmul@multiplicand 0072              __CFG_LVP$ON 0000                      l202 041F  
                    l295 0F05             __CFG_CPD$OFF 0000             __CFG_BORV$LO 0000  
                    wreg 0009             __CFG_ZCD$OFF 0000              main@buffer1 0037  
                   l2005 0681                     l2111 0761                     l2023 06A1  
                   l2033 06B9                     l2009 0688                     l2123 079D  
                   l2115 0767                     l2107 075A                     l2043 06D1  
                   l2125 07B6                     l2061 06F1                     l2117 0774  
                   l1503 0F8E                     l2071 0709                     l2047 06D8  
                   l1521 0F4E                     l2081 0721                     l1603 0040  
                   l1611 0297                     l1507 0F97                     l1525 0F5A  
                   l1631 0346                     l1623 032B                     l1615 02B6  
                   l1519 0F42                     l1703 0391                     l2087 0734  
                   l1473 0EFF                     l1529 0F63                     l1713 03BF  
                   l2097 0745                     l1619 02F0                     l1627 033A  
                   l1467 001B                     l1731 03F4                     l1715 03D7  
                   l1653 0FFB                     l1645 0FBC                     l1725 03EE  
                   l1591 0028                     l1671 0091                     l1495 0F70  
                   l1903 0591                     l1585 001F                     l1649 0FDB  
                   l1497 0F7C                     l1761 0464                     l1745 043B  
                   l1737 0413                     l1587 0022                     l1595 002E  
                   l1675 00B1                     l1667 0072                     l1755 0455  
                   l1747 043E                     l1771 035E                     l1683 0F1D  
                   l1827 04D5                     l1589 0025                     l1597 003C  
                   l1749 0442                     l1773 04A2                     l1685 0F28  
                   l1941 05E1                     l1917 05AA                     l1687 0F30  
                   l1951 05F1                     l1927 05C2                     l1863 053B  
                   l1839 04FC                     l1769 0468                     l1697 0381  
                   l1961 0606                     l1937 05DA                     l1849 0514  
                   l1971 061C                     l1859 052C                     l1877 0554  
                   l1973 062A                     l1967 0615                     l1887 056C  
                   l1985 0651                     l1897 0584                     l1995 0669  
                   STR_1 1034                     STR_2 1036                     STR_3 1038  
                   STR_4 1032                     STR_5 1030                     STR_6 103A  
                   STR_7 1034                     STR_8 1036                     STR_9 1038  
                   u1105 0106                     u1115 0117                     u1125 0150  
                   u1135 0161                     u1215 0F06                     u1065 00BD  
                   u1145 016F                     u1225 0F0B                     u2105 0782  
                   u1075 00CE                     u1155 017E                     u1085 00DC  
                   u1165 0199                     u1405 0295                     u1325 0F45  
                   u2117 04CF                     u1095 00EB                     u2207 01F0  
                   u1175 01AA                     u1255 0F73                     u2127 0623  
                   u2217 01F8                     u1345 0F54                     u2137 076E  
                   u2307 00F8                     u2227 0200                     u2147 018B  
                   u1275 0F7D                     u1355 0F5B                     u2317 00FE  
                   u2237 0208                     u2157 0191                     u1525 005E  
                   u1445 0338                     u1285 0F87                     u2327 0135  
                   u2247 0210                     u2167 01C8                     u1295 0F8F  
                   u2337 013B                     u2257 0218                     u2177 01CE  
                   u2347 0143                     u2267 0231                     u2187 01D4  
                   u1475 0FA8                     u2277 023E                     u2197 01DA  
                   u1645 0409                     u2287 0259                     u2297 0266  
                   u1755 04DF                     u1685 042E                     u1925 0634  
                   _WPUA 1F39             __CFG_WRT$OFF 0000            __CFG_FCMEN$ON 0000  
                   _main 04A8                     fsr0h 0005                     fsr1h 0007  
                   indf0 0000                     fsr0l 0004                     indf1 0001  
                   fsr1l 0006                     btemp 007E            __CFG_BOREN$ON 0000  
                   start 0002          __end_of_Lcd_Cmd 0149            __CFG_CSWEN$ON 0000  
          __CFG_MCLRE$ON 0000               _Lcd_Chr_CP 0149           Lcd_Out2@buffer 0074  
                  ?_main 0031                    STR_10 1032                    STR_11 1030  
                  STR_12 103A                    STR_13 101A                    STR_14 1025  
                  STR_15 100A            __CFG_WDTE$OFF 0000          __end_of___lwdiv 0F9C  
        __end_of___lwmod 0F68            _convertirnum1 0F9C            _convertirnum2 0052  
                  _PORTA 000C                    _PORTC 000E                    _PORTD 000F  
                  _TRISA 0011            __CFG_PWRTE$ON 0000          __end_of_dpowers 100A  
        __end_of_isdigit 001D                    status 0003                    wtemp0 007E  
        __end_of_sprintf 04A8         __end_of_Lcd_Init 0289         __end_of_Lcd_Out2 0052  
        __initialization 07DE             __end_of_main 07DE                   ??_main 0035  
         ?_convertirnum1 0070           ?_convertirnum2 0070                   _ANSELA 1F38  
                 _ANSELC 1F4E                   _ANSELD 1F59           __CFG_WDTCCS$SC 0000  
              ??_Lcd_Cmd 0070              ?_Lcd_Chr_CP 0070                   ___wmul 0EFD  
         __CFG_STVREN$ON 0000                ??___lwdiv 0074                ??___lwmod 007C  
                 _strcat 0F18                ??_isdigit 0070                ??_sprintf 0024  
__end_of__initialization 07FD           __pcstackCOMMON 0070        convertirnum2@num2 0077  
           __pidataBANK0 0005          ??_convertirnum1 0076          ??_convertirnum2 0076  
              ?_Lcd_Init 0070                ?_Lcd_Out2 0073             sprintf@width 002D  
    __size_of_Lcd_Chr_CP 0097               __pbssBANK0 0047               __pbssBANK1 00A0  
             __pmaintext 04A8                  ?___wmul 0070          __CFG_PPS1WAY$ON 0000  
    __CFG_RSTOSC$HFINT32 0000                  ?_strcat 0070       __size_of_resultado 00CF  
             ??_Lcd_Init 0073               ??_Lcd_Out2 0075                  _Lcd_Cmd 00B6  
   __CFG_SCANE$available 0000          __size_of___wmul 001B                  ___lwdiv 0F68  
                ___lwmod 0F3C                  __ptext1 0F18                  __ptext2 0358  
                __ptext3 000F                  __ptext4 0F3C                  __ptext5 0F68  
                __ptext6 0289                  __ptext7 0052                  __ptext8 0F9C  
                __ptext9 0EFD                  _contin1 0062                  _contin2 0060  
        __size_of_strcat 0024                  _entrada 005F                  _dpowers 1000  
                _isdigit 000F                  _res_int 0049                  _sprintf 0358  
                clrloop0 000A     end_of_initialization 07FD        __end_of_resultado 0358  
           ??_Lcd_Chr_CP 0070                Lcd_Out2@x 0073                Lcd_Out2@y 0076  
  __CFG_WDTCPS$WDTCPS_31 0000                _PORTAbits 000C                _PORTCbits 000E  
              _PORTDbits 000F                _TRISCbits 0013                _TRISDbits 0014  
       __CFG_FEXTOSC$OFF 0000       __end_of_Lcd_Chr_CP 01E0           __end_of___wmul 0F18  
         __end_of_strcat 0F3C      start_initialization 07DE        __size_of_Lcd_Init 00A9  
      __size_of_Lcd_Out2 0035         __CFG_LPBOREN$OFF 0000                 ??___wmul 0074  
            __pdataBANK0 0060                 ??_strcat 0071    __end_of_convertirnum1 1000  
  __end_of_convertirnum2 00B6                ___latbits 0004            __pcstackBANK0 0020  
       convertirnum1@num 0077                 ?_Lcd_Cmd 0070              sprintf@flag 002A  
            sprintf@prec 0029         ___lwdiv@dividend 0072                 ?___lwdiv 0070  
               ?___lwmod 0078                 ?_isdigit 0070         ___lwdiv@quotient 0075  
               ?_sprintf 0020           _resultado_char 00A0                _num1_char 004F  
              _num2_char 00B0           ___wmul@product 0074                 _LATAbits 0016  
              clear_ram0 0009                _operacion 0047                _resultado 0289  
             resultado@i 007A             Lcd_Init@data 0074        ___wmul@multiplier 0070  
           Lcd_Out2@data 0077                 _Lcd_Init 01E0                 _Lcd_Out2 001D  
       __size_of_Lcd_Cmd 0093               ?_resultado 0076         __size_of___lwdiv 0034  
       __size_of___lwmod 002C              _isdigit$595 0070               sprintf@val 002B  
             strcat@from 0070         __size_of_isdigit 000E           Lcd_Chr_CP@data 0072  
        ___lwdiv@divisor 0070          ___lwdiv@counter 0077                 __ptext10 001D  
               __ptext11 0149                 __ptext12 01E0                 __ptext13 00B6  
       __size_of_sprintf 0150              Lcd_Cmd@data 0072            __size_of_main 0336  
               _num1_int 004D                 _num2_int 004B     __CFG_WDTCWS$WDTCWS_7 0000  
               main@argc 0031                 main@argv 0033          resultado@valor1 0079  
        resultado@valor2 0076           __pstringtext10 0000                 isdigit@c 0071  
         convertirnum1@i 0078           convertirnum2@i 0078                sprintf@ap 0028  
              sprintf@sp 002F         ___lwmod@dividend 007A        __CFG_CLKOUTEN$OFF 0000  
             _OSCFRQbits 0893              ??_resultado 0077            __pstringtext1 1000  
          __pstringtext2 101A            __pstringtext3 1025            __pstringtext4 1030  
          __pstringtext5 1032            __pstringtext6 1034            __pstringtext7 1036  
          __pstringtext8 1038            __pstringtext9 103A                 sprintf@c 0030  
               sprintf@f 0020                 strcat@cp 0072                 strcat@to 0073  
        ___lwmod@divisor 0078          ___lwmod@counter 007D   __size_of_convertirnum1 0064  
 __size_of_convertirnum2 0064  
