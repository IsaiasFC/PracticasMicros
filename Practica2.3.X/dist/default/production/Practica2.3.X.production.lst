

Microchip Technology PIC LITE Macro Assembler V1.45 build -152302408 
                                                                                               Mon Sep 10 10:36:15 2018

Microchip Technology Omniscient Code Generator v1.45 (Free mode) build 201711160504
     1                           	processor	16F18877
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	stringtext1,global,class=STRCODE,delta=2
     5                           	psect	stringtext2,global,class=STRCODE,delta=2
     6                           	psect	stringtext3,global,class=STRCODE,delta=2
     7                           	psect	stringtext4,global,class=STRCODE,delta=2
     8                           	psect	stringtext5,global,class=STRCODE,delta=2
     9                           	psect	stringtext6,global,class=STRCODE,delta=2
    10                           	psect	stringtext7,global,class=STRCODE,delta=2
    11                           	psect	stringtext8,global,class=STRCODE,delta=2
    12                           	psect	stringtext9,global,class=STRCODE,delta=2
    13                           	psect	stringtext10,global,class=STRCODE,delta=2
    14                           	psect	stringtext11,global,class=STRCODE,delta=2
    15                           	psect	stringtext12,global,class=STRCODE,delta=2
    16                           	psect	stringtext13,global,class=STRCODE,delta=2
    17                           	psect	stringtext14,global,class=STRCODE,delta=2
    18                           	psect	stringtext15,global,class=STRCODE,delta=2
    19                           	psect	stringtext16,global,class=STRCODE,delta=2
    20                           	psect	stringtext17,global,class=STRCODE,delta=2
    21                           	psect	stringtext18,global,class=STRCODE,delta=2
    22                           	psect	cinit,global,class=CODE,merge=1,delta=2
    23                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    24                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    25                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    26                           	psect	text1,local,class=CODE,merge=1,delta=2
    27                           	psect	text2,local,class=CODE,merge=1,delta=2,group=2
    28                           	psect	text3,local,class=CODE,merge=1,delta=2,group=2
    29                           	psect	text4,local,class=CODE,merge=1,delta=2,group=2
    30                           	psect	text5,local,class=CODE,merge=1,delta=2,group=2
    31                           	psect	text6,local,class=CODE,merge=1,delta=2
    32                           	psect	text7,local,class=CODE,merge=1,delta=2
    33                           	psect	text8,local,class=CODE,merge=1,delta=2
    34                           	psect	text9,local,class=CODE,merge=1,delta=2
    35                           	psect	text10,local,class=CODE,merge=1,delta=2
    36                           	dabs	1,0x7E,2
    37  0000                     
    38                           ; Version 1.45
    39                           ; Generated 16/11/2017 GMT
    40                           ; 
    41                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    42                           ; All rights reserved.
    43                           ; 
    44                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    45                           ; 
    46                           ; Redistribution and use in source and binary forms, with or without modification, are
    47                           ; permitted provided that the following conditions are met:
    48                           ; 
    49                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    50                           ;        conditions and the following disclaimer.
    51                           ; 
    52                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    53                           ;        of conditions and the following disclaimer in the documentation and/or other
    54                           ;        materials provided with the distribution.
    55                           ; 
    56                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    57                           ;        software without specific prior written permission.
    58                           ; 
    59                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    60                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    61                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    62                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    63                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    64                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    65                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    66                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    67                           ; 
    68                           ; 
    69                           ; Code-generator required, PIC16F18877 Definitions
    70                           ; 
    71                           ; SFR Addresses
    72  0000                     	;# 
    73  0001                     	;# 
    74  0002                     	;# 
    75  0003                     	;# 
    76  0004                     	;# 
    77  0005                     	;# 
    78  0006                     	;# 
    79  0007                     	;# 
    80  0008                     	;# 
    81  0009                     	;# 
    82  000A                     	;# 
    83  000B                     	;# 
    84  000C                     	;# 
    85  000D                     	;# 
    86  000E                     	;# 
    87  000F                     	;# 
    88  0010                     	;# 
    89  0011                     	;# 
    90  0012                     	;# 
    91  0013                     	;# 
    92  0014                     	;# 
    93  0015                     	;# 
    94  0016                     	;# 
    95  0017                     	;# 
    96  0018                     	;# 
    97  0019                     	;# 
    98  001A                     	;# 
    99  001C                     	;# 
   100  001C                     	;# 
   101  001D                     	;# 
   102  001D                     	;# 
   103  001E                     	;# 
   104  001F                     	;# 
   105  008C                     	;# 
   106  008C                     	;# 
   107  008D                     	;# 
   108  008E                     	;# 
   109  008E                     	;# 
   110  008F                     	;# 
   111  0090                     	;# 
   112  0090                     	;# 
   113  0091                     	;# 
   114  0093                     	;# 
   115  0094                     	;# 
   116  0095                     	;# 
   117  0096                     	;# 
   118  0097                     	;# 
   119  0098                     	;# 
   120  0099                     	;# 
   121  009A                     	;# 
   122  009B                     	;# 
   123  009C                     	;# 
   124  009D                     	;# 
   125  009E                     	;# 
   126  010C                     	;# 
   127  010D                     	;# 
   128  010E                     	;# 
   129  010E                     	;# 
   130  010F                     	;# 
   131  0110                     	;# 
   132  0110                     	;# 
   133  0111                     	;# 
   134  0112                     	;# 
   135  0112                     	;# 
   136  0113                     	;# 
   137  0114                     	;# 
   138  0114                     	;# 
   139  0115                     	;# 
   140  0116                     	;# 
   141  0116                     	;# 
   142  0117                     	;# 
   143  0119                     	;# 
   144  0119                     	;# 
   145  0119                     	;# 
   146  011A                     	;# 
   147  011A                     	;# 
   148  011A                     	;# 
   149  011B                     	;# 
   150  011B                     	;# 
   151  011B                     	;# 
   152  011B                     	;# 
   153  011B                     	;# 
   154  011C                     	;# 
   155  011C                     	;# 
   156  011C                     	;# 
   157  011D                     	;# 
   158  011D                     	;# 
   159  011D                     	;# 
   160  011E                     	;# 
   161  011E                     	;# 
   162  011E                     	;# 
   163  011F                     	;# 
   164  011F                     	;# 
   165  011F                     	;# 
   166  011F                     	;# 
   167  011F                     	;# 
   168  018C                     	;# 
   169  018D                     	;# 
   170  018E                     	;# 
   171  018F                     	;# 
   172  0190                     	;# 
   173  0191                     	;# 
   174  0192                     	;# 
   175  0196                     	;# 
   176  0197                     	;# 
   177  0198                     	;# 
   178  0199                     	;# 
   179  019A                     	;# 
   180  019B                     	;# 
   181  019C                     	;# 
   182  020C                     	;# 
   183  020C                     	;# 
   184  020D                     	;# 
   185  020E                     	;# 
   186  020F                     	;# 
   187  020F                     	;# 
   188  0210                     	;# 
   189  0210                     	;# 
   190  0211                     	;# 
   191  0211                     	;# 
   192  0212                     	;# 
   193  0212                     	;# 
   194  0213                     	;# 
   195  0214                     	;# 
   196  0215                     	;# 
   197  0215                     	;# 
   198  0216                     	;# 
   199  0216                     	;# 
   200  0217                     	;# 
   201  0217                     	;# 
   202  0218                     	;# 
   203  0218                     	;# 
   204  0219                     	;# 
   205  021A                     	;# 
   206  021B                     	;# 
   207  021B                     	;# 
   208  021C                     	;# 
   209  021C                     	;# 
   210  021D                     	;# 
   211  021D                     	;# 
   212  021E                     	;# 
   213  021F                     	;# 
   214  028C                     	;# 
   215  028C                     	;# 
   216  028D                     	;# 
   217  028D                     	;# 
   218  028E                     	;# 
   219  028F                     	;# 
   220  0290                     	;# 
   221  0290                     	;# 
   222  0291                     	;# 
   223  0292                     	;# 
   224  0292                     	;# 
   225  0293                     	;# 
   226  0293                     	;# 
   227  0294                     	;# 
   228  0295                     	;# 
   229  0296                     	;# 
   230  0296                     	;# 
   231  0297                     	;# 
   232  0298                     	;# 
   233  0298                     	;# 
   234  0299                     	;# 
   235  0299                     	;# 
   236  029A                     	;# 
   237  029B                     	;# 
   238  029C                     	;# 
   239  029C                     	;# 
   240  029D                     	;# 
   241  030C                     	;# 
   242  030C                     	;# 
   243  030D                     	;# 
   244  030E                     	;# 
   245  030F                     	;# 
   246  0310                     	;# 
   247  0310                     	;# 
   248  0311                     	;# 
   249  0312                     	;# 
   250  0313                     	;# 
   251  0314                     	;# 
   252  0314                     	;# 
   253  0315                     	;# 
   254  0316                     	;# 
   255  0317                     	;# 
   256  0318                     	;# 
   257  0318                     	;# 
   258  0319                     	;# 
   259  031A                     	;# 
   260  031B                     	;# 
   261  031C                     	;# 
   262  031C                     	;# 
   263  031D                     	;# 
   264  031E                     	;# 
   265  031F                     	;# 
   266  038C                     	;# 
   267  038D                     	;# 
   268  038E                     	;# 
   269  0390                     	;# 
   270  0391                     	;# 
   271  0392                     	;# 
   272  040C                     	;# 
   273  040D                     	;# 
   274  040E                     	;# 
   275  040F                     	;# 
   276  0410                     	;# 
   277  0411                     	;# 
   278  0416                     	;# 
   279  0416                     	;# 
   280  0417                     	;# 
   281  0418                     	;# 
   282  0418                     	;# 
   283  0419                     	;# 
   284  041A                     	;# 
   285  041A                     	;# 
   286  041B                     	;# 
   287  041C                     	;# 
   288  041C                     	;# 
   289  041D                     	;# 
   290  041E                     	;# 
   291  041F                     	;# 
   292  048C                     	;# 
   293  048C                     	;# 
   294  048D                     	;# 
   295  048E                     	;# 
   296  048F                     	;# 
   297  048F                     	;# 
   298  0490                     	;# 
   299  0491                     	;# 
   300  0492                     	;# 
   301  0492                     	;# 
   302  0493                     	;# 
   303  0494                     	;# 
   304  0495                     	;# 
   305  0495                     	;# 
   306  0496                     	;# 
   307  0497                     	;# 
   308  0498                     	;# 
   309  0499                     	;# 
   310  049A                     	;# 
   311  049B                     	;# 
   312  049C                     	;# 
   313  049D                     	;# 
   314  050C                     	;# 
   315  050C                     	;# 
   316  050D                     	;# 
   317  050E                     	;# 
   318  050F                     	;# 
   319  050F                     	;# 
   320  0510                     	;# 
   321  0511                     	;# 
   322  0512                     	;# 
   323  0512                     	;# 
   324  0513                     	;# 
   325  0514                     	;# 
   326  0515                     	;# 
   327  0515                     	;# 
   328  0516                     	;# 
   329  0517                     	;# 
   330  0518                     	;# 
   331  0519                     	;# 
   332  051A                     	;# 
   333  051B                     	;# 
   334  051C                     	;# 
   335  051D                     	;# 
   336  058C                     	;# 
   337  058C                     	;# 
   338  058D                     	;# 
   339  058E                     	;# 
   340  058F                     	;# 
   341  058F                     	;# 
   342  0590                     	;# 
   343  0591                     	;# 
   344  0592                     	;# 
   345  0593                     	;# 
   346  060C                     	;# 
   347  060D                     	;# 
   348  060E                     	;# 
   349  060F                     	;# 
   350  0610                     	;# 
   351  0611                     	;# 
   352  0612                     	;# 
   353  0613                     	;# 
   354  0614                     	;# 
   355  0616                     	;# 
   356  0617                     	;# 
   357  0618                     	;# 
   358  0619                     	;# 
   359  061A                     	;# 
   360  061B                     	;# 
   361  061C                     	;# 
   362  061D                     	;# 
   363  061E                     	;# 
   364  068C                     	;# 
   365  068D                     	;# 
   366  068E                     	;# 
   367  068F                     	;# 
   368  0690                     	;# 
   369  0691                     	;# 
   370  0692                     	;# 
   371  0693                     	;# 
   372  0694                     	;# 
   373  070C                     	;# 
   374  070D                     	;# 
   375  070E                     	;# 
   376  070F                     	;# 
   377  0710                     	;# 
   378  0711                     	;# 
   379  0712                     	;# 
   380  0713                     	;# 
   381  0714                     	;# 
   382  0716                     	;# 
   383  0717                     	;# 
   384  0718                     	;# 
   385  0719                     	;# 
   386  071A                     	;# 
   387  071B                     	;# 
   388  071C                     	;# 
   389  071D                     	;# 
   390  071E                     	;# 
   391  0796                     	;# 
   392  0797                     	;# 
   393  0798                     	;# 
   394  0799                     	;# 
   395  079A                     	;# 
   396  079B                     	;# 
   397  080C                     	;# 
   398  080D                     	;# 
   399  080E                     	;# 
   400  080F                     	;# 
   401  0810                     	;# 
   402  0811                     	;# 
   403  0812                     	;# 
   404  0813                     	;# 
   405  0814                     	;# 
   406  081A                     	;# 
   407  081B                     	;# 
   408  081C                     	;# 
   409  081D                     	;# 
   410  081E                     	;# 
   411  081F                     	;# 
   412  088C                     	;# 
   413  088D                     	;# 
   414  088E                     	;# 
   415  088F                     	;# 
   416  0890                     	;# 
   417  0891                     	;# 
   418  0892                     	;# 
   419  0893                     	;# 
   420  0895                     	;# 
   421  0896                     	;# 
   422  0897                     	;# 
   423  0898                     	;# 
   424  0899                     	;# 
   425  089A                     	;# 
   426  089B                     	;# 
   427  090C                     	;# 
   428  090E                     	;# 
   429  090F                     	;# 
   430  091F                     	;# 
   431  098F                     	;# 
   432  098F                     	;# 
   433  0990                     	;# 
   434  0991                     	;# 
   435  0992                     	;# 
   436  0993                     	;# 
   437  0994                     	;# 
   438  0995                     	;# 
   439  0996                     	;# 
   440  0997                     	;# 
   441  1E0F                     	;# 
   442  1E10                     	;# 
   443  1E11                     	;# 
   444  1E12                     	;# 
   445  1E13                     	;# 
   446  1E14                     	;# 
   447  1E15                     	;# 
   448  1E16                     	;# 
   449  1E17                     	;# 
   450  1E18                     	;# 
   451  1E19                     	;# 
   452  1E1A                     	;# 
   453  1E1B                     	;# 
   454  1E1C                     	;# 
   455  1E1D                     	;# 
   456  1E1E                     	;# 
   457  1E1F                     	;# 
   458  1E20                     	;# 
   459  1E21                     	;# 
   460  1E22                     	;# 
   461  1E23                     	;# 
   462  1E24                     	;# 
   463  1E25                     	;# 
   464  1E26                     	;# 
   465  1E27                     	;# 
   466  1E28                     	;# 
   467  1E29                     	;# 
   468  1E2A                     	;# 
   469  1E2B                     	;# 
   470  1E2C                     	;# 
   471  1E2D                     	;# 
   472  1E2E                     	;# 
   473  1E2F                     	;# 
   474  1E30                     	;# 
   475  1E31                     	;# 
   476  1E32                     	;# 
   477  1E33                     	;# 
   478  1E34                     	;# 
   479  1E35                     	;# 
   480  1E36                     	;# 
   481  1E37                     	;# 
   482  1E8F                     	;# 
   483  1E90                     	;# 
   484  1E91                     	;# 
   485  1E92                     	;# 
   486  1E93                     	;# 
   487  1E94                     	;# 
   488  1E95                     	;# 
   489  1E96                     	;# 
   490  1E97                     	;# 
   491  1E9C                     	;# 
   492  1E9D                     	;# 
   493  1E9E                     	;# 
   494  1EA1                     	;# 
   495  1EA2                     	;# 
   496  1EA3                     	;# 
   497  1EA4                     	;# 
   498  1EA5                     	;# 
   499  1EA9                     	;# 
   500  1EAA                     	;# 
   501  1EAB                     	;# 
   502  1EAC                     	;# 
   503  1EB1                     	;# 
   504  1EB2                     	;# 
   505  1EB3                     	;# 
   506  1EB8                     	;# 
   507  1EB9                     	;# 
   508  1EBA                     	;# 
   509  1EBB                     	;# 
   510  1EBC                     	;# 
   511  1EBD                     	;# 
   512  1EBE                     	;# 
   513  1EC3                     	;# 
   514  1EC5                     	;# 
   515  1EC6                     	;# 
   516  1EC7                     	;# 
   517  1EC8                     	;# 
   518  1EC9                     	;# 
   519  1ECA                     	;# 
   520  1ECB                     	;# 
   521  1ECC                     	;# 
   522  1F10                     	;# 
   523  1F11                     	;# 
   524  1F12                     	;# 
   525  1F13                     	;# 
   526  1F14                     	;# 
   527  1F15                     	;# 
   528  1F16                     	;# 
   529  1F17                     	;# 
   530  1F18                     	;# 
   531  1F19                     	;# 
   532  1F1A                     	;# 
   533  1F1B                     	;# 
   534  1F1C                     	;# 
   535  1F1D                     	;# 
   536  1F1E                     	;# 
   537  1F1F                     	;# 
   538  1F20                     	;# 
   539  1F21                     	;# 
   540  1F22                     	;# 
   541  1F23                     	;# 
   542  1F24                     	;# 
   543  1F25                     	;# 
   544  1F26                     	;# 
   545  1F27                     	;# 
   546  1F28                     	;# 
   547  1F29                     	;# 
   548  1F2A                     	;# 
   549  1F2B                     	;# 
   550  1F2C                     	;# 
   551  1F2D                     	;# 
   552  1F2E                     	;# 
   553  1F2F                     	;# 
   554  1F30                     	;# 
   555  1F31                     	;# 
   556  1F32                     	;# 
   557  1F38                     	;# 
   558  1F39                     	;# 
   559  1F3A                     	;# 
   560  1F3B                     	;# 
   561  1F3C                     	;# 
   562  1F3D                     	;# 
   563  1F3E                     	;# 
   564  1F3F                     	;# 
   565  1F40                     	;# 
   566  1F41                     	;# 
   567  1F43                     	;# 
   568  1F44                     	;# 
   569  1F45                     	;# 
   570  1F46                     	;# 
   571  1F47                     	;# 
   572  1F48                     	;# 
   573  1F49                     	;# 
   574  1F4A                     	;# 
   575  1F4B                     	;# 
   576  1F4C                     	;# 
   577  1F4E                     	;# 
   578  1F4F                     	;# 
   579  1F50                     	;# 
   580  1F51                     	;# 
   581  1F52                     	;# 
   582  1F53                     	;# 
   583  1F54                     	;# 
   584  1F55                     	;# 
   585  1F56                     	;# 
   586  1F57                     	;# 
   587  1F59                     	;# 
   588  1F5A                     	;# 
   589  1F5B                     	;# 
   590  1F5C                     	;# 
   591  1F5D                     	;# 
   592  1F61                     	;# 
   593  1F62                     	;# 
   594  1F64                     	;# 
   595  1F65                     	;# 
   596  1F66                     	;# 
   597  1F67                     	;# 
   598  1F68                     	;# 
   599  1F69                     	;# 
   600  1F6A                     	;# 
   601  1F6B                     	;# 
   602  1F6C                     	;# 
   603  1F6D                     	;# 
   604  1FE4                     	;# 
   605  1FE5                     	;# 
   606  1FE6                     	;# 
   607  1FE7                     	;# 
   608  1FE8                     	;# 
   609  1FE9                     	;# 
   610  1FEA                     	;# 
   611  1FEB                     	;# 
   612  1FED                     	;# 
   613  1FEE                     	;# 
   614  1FEF                     	;# 
   615                           
   616                           	psect	stringtext1
   617  0800                     __pstringtext1:	
   618  0800                     _dpowers:	
   619  0800  3401               	retlw	1
   620  0801  3400               	retlw	0
   621  0802  340A               	retlw	10
   622  0803  3400               	retlw	0
   623  0804  3464               	retlw	100
   624  0805  3400               	retlw	0
   625  0806  34E8               	retlw	232
   626  0807  3403               	retlw	3
   627  0808  3410               	retlw	16
   628  0809  3427               	retlw	39
   629  080A                     __end_of_dpowers:	
   630  000F                     _PORTDbits	set	15
   631  000E                     _PORTCbits	set	14
   632  0014                     _TRISDbits	set	20
   633  0013                     _TRISCbits	set	19
   634  0893                     _OSCFRQbits	set	2195
   635  1F59                     _ANSELD	set	8025
   636  1F4E                     _ANSELC	set	8014
   637  080A                     STR_15:	
   638  080A  344D               	retlw	77	;'M'
   639  080B  3445               	retlw	69	;'E'
   640  080C  3443               	retlw	67	;'C'
   641  080D  3441               	retlw	65	;'A'
   642  080E  3454               	retlw	84	;'T'
   643  080F  3452               	retlw	82	;'R'
   644  0810  344F               	retlw	79	;'O'
   645  0811  344E               	retlw	78	;'N'
   646  0812  3449               	retlw	73	;'I'
   647  0813  3443               	retlw	67	;'C'
   648  0814  3441               	retlw	65	;'A'
   649  0815  3421               	retlw	33	;'!'
   650  0816  3420               	retlw	32	;' '
   651  0817  3420               	retlw	32	;' '
   652  0818  3420               	retlw	32	;' '
   653  0819  3420               	retlw	32	;' '
   654  081A  3400               	retlw	0
   655                           
   656                           	psect	stringtext2
   657  081B                     __pstringtext2:	
   658  081B                     STR_16:	
   659  081B  3420               	retlw	32	;' '
   660  081C  344D               	retlw	77	;'M'
   661  081D  3445               	retlw	69	;'E'
   662  081E  3443               	retlw	67	;'C'
   663  081F  3441               	retlw	65	;'A'
   664  0820  3454               	retlw	84	;'T'
   665  0821  3452               	retlw	82	;'R'
   666  0822  344F               	retlw	79	;'O'
   667  0823  344E               	retlw	78	;'N'
   668  0824  3449               	retlw	73	;'I'
   669  0825  3443               	retlw	67	;'C'
   670  0826  3441               	retlw	65	;'A'
   671  0827  3421               	retlw	33	;'!'
   672  0828  3420               	retlw	32	;' '
   673  0829  3420               	retlw	32	;' '
   674  082A  3420               	retlw	32	;' '
   675  082B  3400               	retlw	0
   676                           
   677                           	psect	stringtext3
   678  082C                     __pstringtext3:	
   679  082C                     STR_1:	
   680  082C  3420               	retlw	32	;' '
   681  082D  3420               	retlw	32	;' '
   682  082E  344D               	retlw	77	;'M'
   683  082F  3445               	retlw	69	;'E'
   684  0830  3443               	retlw	67	;'C'
   685  0831  3441               	retlw	65	;'A'
   686  0832  3454               	retlw	84	;'T'
   687  0833  3452               	retlw	82	;'R'
   688  0834  344F               	retlw	79	;'O'
   689  0835  344E               	retlw	78	;'N'
   690  0836  3449               	retlw	73	;'I'
   691  0837  3443               	retlw	67	;'C'
   692  0838  3441               	retlw	65	;'A'
   693  0839  3421               	retlw	33	;'!'
   694  083A  3420               	retlw	32	;' '
   695  083B  3420               	retlw	32	;' '
   696  083C  3400               	retlw	0
   697                           
   698                           	psect	stringtext4
   699  083D                     __pstringtext4:	
   700  083D                     STR_2:	
   701  083D  3420               	retlw	32	;' '
   702  083E  3420               	retlw	32	;' '
   703  083F  3420               	retlw	32	;' '
   704  0840  344D               	retlw	77	;'M'
   705  0841  3445               	retlw	69	;'E'
   706  0842  3443               	retlw	67	;'C'
   707  0843  3441               	retlw	65	;'A'
   708  0844  3454               	retlw	84	;'T'
   709  0845  3452               	retlw	82	;'R'
   710  0846  344F               	retlw	79	;'O'
   711  0847  344E               	retlw	78	;'N'
   712  0848  3449               	retlw	73	;'I'
   713  0849  3443               	retlw	67	;'C'
   714  084A  3441               	retlw	65	;'A'
   715  084B  3421               	retlw	33	;'!'
   716  084C  3420               	retlw	32	;' '
   717  084D  3400               	retlw	0
   718                           
   719                           	psect	stringtext5
   720  084E                     __pstringtext5:	
   721  084E                     STR_3:	
   722  084E  3420               	retlw	32	;' '
   723  084F  3420               	retlw	32	;' '
   724  0850  3420               	retlw	32	;' '
   725  0851  3420               	retlw	32	;' '
   726  0852  344D               	retlw	77	;'M'
   727  0853  3445               	retlw	69	;'E'
   728  0854  3443               	retlw	67	;'C'
   729  0855  3441               	retlw	65	;'A'
   730  0856  3454               	retlw	84	;'T'
   731  0857  3452               	retlw	82	;'R'
   732  0858  344F               	retlw	79	;'O'
   733  0859  344E               	retlw	78	;'N'
   734  085A  3449               	retlw	73	;'I'
   735  085B  3443               	retlw	67	;'C'
   736  085C  3441               	retlw	65	;'A'
   737  085D  3421               	retlw	33	;'!'
   738  085E  3400               	retlw	0
   739                           
   740                           	psect	stringtext6
   741  085F                     __pstringtext6:	
   742  085F                     STR_11:	
   743  085F  3454               	retlw	84	;'T'
   744  0860  3452               	retlw	82	;'R'
   745  0861  344F               	retlw	79	;'O'
   746  0862  344E               	retlw	78	;'N'
   747  0863  3449               	retlw	73	;'I'
   748  0864  3443               	retlw	67	;'C'
   749  0865  3441               	retlw	65	;'A'
   750  0866  3421               	retlw	33	;'!'
   751  0867  3420               	retlw	32	;' '
   752  0868  3420               	retlw	32	;' '
   753  0869  3420               	retlw	32	;' '
   754  086A  3420               	retlw	32	;' '
   755  086B  344D               	retlw	77	;'M'
   756  086C  3445               	retlw	69	;'E'
   757  086D  3443               	retlw	67	;'C'
   758  086E  3441               	retlw	65	;'A'
   759  086F  3400               	retlw	0
   760                           
   761                           	psect	stringtext7
   762  0870                     __pstringtext7:	
   763  0870                     STR_4:	
   764  0870  3421               	retlw	33	;'!'
   765  0871  3420               	retlw	32	;' '
   766  0872  3420               	retlw	32	;' '
   767  0873  3420               	retlw	32	;' '
   768  0874  3420               	retlw	32	;' '
   769  0875  344D               	retlw	77	;'M'
   770  0876  3445               	retlw	69	;'E'
   771  0877  3443               	retlw	67	;'C'
   772  0878  3441               	retlw	65	;'A'
   773  0879  3454               	retlw	84	;'T'
   774  087A  3452               	retlw	82	;'R'
   775  087B  344F               	retlw	79	;'O'
   776  087C  344E               	retlw	78	;'N'
   777  087D  3449               	retlw	73	;'I'
   778  087E  3443               	retlw	67	;'C'
   779  087F  3441               	retlw	65	;'A'
   780  0880  3400               	retlw	0
   781                           
   782                           	psect	stringtext8
   783  0881                     __pstringtext8:	
   784  0881                     STR_12:	
   785  0881  3441               	retlw	65	;'A'
   786  0882  3454               	retlw	84	;'T'
   787  0883  3452               	retlw	82	;'R'
   788  0884  344F               	retlw	79	;'O'
   789  0885  344E               	retlw	78	;'N'
   790  0886  3449               	retlw	73	;'I'
   791  0887  3443               	retlw	67	;'C'
   792  0888  3441               	retlw	65	;'A'
   793  0889  3421               	retlw	33	;'!'
   794  088A  3420               	retlw	32	;' '
   795  088B  3420               	retlw	32	;' '
   796  088C  3420               	retlw	32	;' '
   797  088D  3420               	retlw	32	;' '
   798  088E  344D               	retlw	77	;'M'
   799  088F  3445               	retlw	69	;'E'
   800  0890  3443               	retlw	67	;'C'
   801  0891  3400               	retlw	0
   802                           
   803                           	psect	stringtext9
   804  0892                     __pstringtext9:	
   805  0892                     STR_5:	
   806  0892  3441               	retlw	65	;'A'
   807  0893  3421               	retlw	33	;'!'
   808  0894  3420               	retlw	32	;' '
   809  0895  3420               	retlw	32	;' '
   810  0896  3420               	retlw	32	;' '
   811  0897  3420               	retlw	32	;' '
   812  0898  344D               	retlw	77	;'M'
   813  0899  3445               	retlw	69	;'E'
   814  089A  3443               	retlw	67	;'C'
   815  089B  3441               	retlw	65	;'A'
   816  089C  3454               	retlw	84	;'T'
   817  089D  3452               	retlw	82	;'R'
   818  089E  344F               	retlw	79	;'O'
   819  089F  344E               	retlw	78	;'N'
   820  08A0  3449               	retlw	73	;'I'
   821  08A1  3443               	retlw	67	;'C'
   822  08A2  3400               	retlw	0
   823                           
   824                           	psect	stringtext10
   825  08A3                     __pstringtext10:	
   826  08A3                     STR_13:	
   827  08A3  3443               	retlw	67	;'C'
   828  08A4  3441               	retlw	65	;'A'
   829  08A5  3454               	retlw	84	;'T'
   830  08A6  3452               	retlw	82	;'R'
   831  08A7  344F               	retlw	79	;'O'
   832  08A8  344E               	retlw	78	;'N'
   833  08A9  3449               	retlw	73	;'I'
   834  08AA  3443               	retlw	67	;'C'
   835  08AB  3441               	retlw	65	;'A'
   836  08AC  3421               	retlw	33	;'!'
   837  08AD  3420               	retlw	32	;' '
   838  08AE  3420               	retlw	32	;' '
   839  08AF  3420               	retlw	32	;' '
   840  08B0  3420               	retlw	32	;' '
   841  08B1  344D               	retlw	77	;'M'
   842  08B2  3445               	retlw	69	;'E'
   843  08B3  3400               	retlw	0
   844                           
   845                           	psect	stringtext11
   846  08B4                     __pstringtext11:	
   847  08B4                     STR_6:	
   848  08B4  3443               	retlw	67	;'C'
   849  08B5  3441               	retlw	65	;'A'
   850  08B6  3421               	retlw	33	;'!'
   851  08B7  3420               	retlw	32	;' '
   852  08B8  3420               	retlw	32	;' '
   853  08B9  3420               	retlw	32	;' '
   854  08BA  3420               	retlw	32	;' '
   855  08BB  344D               	retlw	77	;'M'
   856  08BC  3445               	retlw	69	;'E'
   857  08BD  3443               	retlw	67	;'C'
   858  08BE  3441               	retlw	65	;'A'
   859  08BF  3454               	retlw	84	;'T'
   860  08C0  3452               	retlw	82	;'R'
   861  08C1  344F               	retlw	79	;'O'
   862  08C2  344E               	retlw	78	;'N'
   863  08C3  3449               	retlw	73	;'I'
   864  08C4  3400               	retlw	0
   865                           
   866                           	psect	stringtext12
   867  08C5                     __pstringtext12:	
   868  08C5                     STR_14:	
   869  08C5  3445               	retlw	69	;'E'
   870  08C6  3443               	retlw	67	;'C'
   871  08C7  3441               	retlw	65	;'A'
   872  08C8  3454               	retlw	84	;'T'
   873  08C9  3452               	retlw	82	;'R'
   874  08CA  344F               	retlw	79	;'O'
   875  08CB  344E               	retlw	78	;'N'
   876  08CC  3449               	retlw	73	;'I'
   877  08CD  3443               	retlw	67	;'C'
   878  08CE  3441               	retlw	65	;'A'
   879  08CF  3421               	retlw	33	;'!'
   880  08D0  3420               	retlw	32	;' '
   881  08D1  3420               	retlw	32	;' '
   882  08D2  3420               	retlw	32	;' '
   883  08D3  3420               	retlw	32	;' '
   884  08D4  344D               	retlw	77	;'M'
   885  08D5  3400               	retlw	0
   886                           
   887                           	psect	stringtext13
   888  08D6                     __pstringtext13:	
   889  08D6                     STR_7:	
   890  08D6  3449               	retlw	73	;'I'
   891  08D7  3443               	retlw	67	;'C'
   892  08D8  3441               	retlw	65	;'A'
   893  08D9  3421               	retlw	33	;'!'
   894  08DA  3420               	retlw	32	;' '
   895  08DB  3420               	retlw	32	;' '
   896  08DC  3420               	retlw	32	;' '
   897  08DD  3420               	retlw	32	;' '
   898  08DE  344D               	retlw	77	;'M'
   899  08DF  3445               	retlw	69	;'E'
   900  08E0  3443               	retlw	67	;'C'
   901  08E1  3441               	retlw	65	;'A'
   902  08E2  3454               	retlw	84	;'T'
   903  08E3  3452               	retlw	82	;'R'
   904  08E4  344F               	retlw	79	;'O'
   905  08E5  344E               	retlw	78	;'N'
   906  08E6  3400               	retlw	0
   907                           
   908                           	psect	stringtext14
   909  08E7                     __pstringtext14:	
   910  08E7                     STR_8:	
   911  08E7  344E               	retlw	78	;'N'
   912  08E8  3449               	retlw	73	;'I'
   913  08E9  3443               	retlw	67	;'C'
   914  08EA  3441               	retlw	65	;'A'
   915  08EB  3421               	retlw	33	;'!'
   916  08EC  3420               	retlw	32	;' '
   917  08ED  3420               	retlw	32	;' '
   918  08EE  3420               	retlw	32	;' '
   919  08EF  3420               	retlw	32	;' '
   920  08F0  344D               	retlw	77	;'M'
   921  08F1  3445               	retlw	69	;'E'
   922  08F2  3443               	retlw	67	;'C'
   923  08F3  3441               	retlw	65	;'A'
   924  08F4  3454               	retlw	84	;'T'
   925  08F5  3452               	retlw	82	;'R'
   926  08F6  344F               	retlw	79	;'O'
   927  08F7  3400               	retlw	0
   928                           
   929                           	psect	stringtext15
   930  08F8                     __pstringtext15:	
   931  08F8                     STR_9:	
   932  08F8  344F               	retlw	79	;'O'
   933  08F9  344E               	retlw	78	;'N'
   934  08FA  3449               	retlw	73	;'I'
   935  08FB  3443               	retlw	67	;'C'
   936  08FC  3441               	retlw	65	;'A'
   937  08FD  3421               	retlw	33	;'!'
   938  08FE  3420               	retlw	32	;' '
   939  08FF  3420               	retlw	32	;' '
   940  0900  3420               	retlw	32	;' '
   941  0901  3420               	retlw	32	;' '
   942  0902  344D               	retlw	77	;'M'
   943  0903  3445               	retlw	69	;'E'
   944  0904  3443               	retlw	67	;'C'
   945  0905  3441               	retlw	65	;'A'
   946  0906  3454               	retlw	84	;'T'
   947  0907  3452               	retlw	82	;'R'
   948  0908  3400               	retlw	0
   949                           
   950                           	psect	stringtext16
   951  0909                     __pstringtext16:	
   952  0909                     STR_10:	
   953  0909  3452               	retlw	82	;'R'
   954  090A  344F               	retlw	79	;'O'
   955  090B  344E               	retlw	78	;'N'
   956  090C  3449               	retlw	73	;'I'
   957  090D  3443               	retlw	67	;'C'
   958  090E  3441               	retlw	65	;'A'
   959  090F  3421               	retlw	33	;'!'
   960  0910  3420               	retlw	32	;' '
   961  0911  3420               	retlw	32	;' '
   962  0912  3420               	retlw	32	;' '
   963  0913  3420               	retlw	32	;' '
   964  0914  344D               	retlw	77	;'M'
   965  0915  3445               	retlw	69	;'E'
   966  0916  3443               	retlw	67	;'C'
   967  0917  3441               	retlw	65	;'A'
   968  0918  3454               	retlw	84	;'T'
   969  0919  3400               	retlw	0
   970                           
   971                           	psect	stringtext17
   972  091A                     __pstringtext17:	
   973  091A                     STR_17:	
   974  091A  3420               	retlw	32	;' '
   975  091B  3443               	retlw	67	;'C'
   976  091C  346F               	retlw	111	;'o'
   977  091D  346E               	retlw	110	;'n'
   978  091E  3474               	retlw	116	;'t'
   979  091F  3461               	retlw	97	;'a'
   980  0920  3464               	retlw	100	;'d'
   981  0921  346F               	retlw	111	;'o'
   982  0922  3472               	retlw	114	;'r'
   983  0923  343D               	retlw	61	;'='
   984  0924  3420               	retlw	32	;' '
   985  0925  3425               	retlw	37	;'%'
   986  0926  3430               	retlw	48	;'0'
   987  0927  3432               	retlw	50	;'2'
   988  0928  3464               	retlw	100	;'d'
   989  0929  3400               	retlw	0
   990                           
   991                           	psect	stringtext18
   992  0000                     __pstringtext18:	
   993                           
   994                           ; #config settings
   995  0000                     
   996                           	psect	cinit
   997  07FD                     start_initialization:	
   998  07FD                     __initialization:	
   999  07FD                     end_of_initialization:	
  1000                           ;End of C runtime variable initialization code
  1001                           
  1002  07FD                     __end_of__initialization:	
  1003  07FD  0140               	movlb	0
  1004  07FE  3185  2DDD         	ljmp	_main	;jump to C main() function
  1005                           
  1006                           	psect	cstackCOMMON
  1007  0070                     __pcstackCOMMON:	
  1008  0070                     ?_isdigit:	
  1009  0070                     ?_Lcd_Cmd:	
  1010                           ; 1 bit 
  1011                           
  1012  0070                     ??_Lcd_Cmd:	
  1013                           ; 1 bytes @ 0x0
  1014                           
  1015  0070                     ?_Lcd_Chr_CP:	
  1016                           ; 1 bytes @ 0x0
  1017                           
  1018  0070                     ??_Lcd_Chr_CP:	
  1019                           ; 1 bytes @ 0x0
  1020                           
  1021  0070                     ??_isdigit:	
  1022                           ; 1 bytes @ 0x0
  1023                           
  1024  0070                     ?_Lcd_Init:	
  1025                           ; 1 bytes @ 0x0
  1026                           
  1027  0070                     ?___wmul:	
  1028                           ; 1 bytes @ 0x0
  1029                           
  1030  0070                     ?___lwdiv:	
  1031                           ; 2 bytes @ 0x0
  1032                           
  1033  0070                     _isdigit$507:	
  1034                           ; 2 bytes @ 0x0
  1035                           
  1036  0070                     ___wmul@multiplier:	
  1037                           ; 1 bytes @ 0x0
  1038                           
  1039  0070                     ___lwdiv@divisor:	
  1040                           ; 2 bytes @ 0x0
  1041                           
  1042                           
  1043                           ; 2 bytes @ 0x0
  1044  0070                     	ds	1
  1045  0071                     isdigit@c:	
  1046                           
  1047                           ; 1 bytes @ 0x1
  1048  0071                     	ds	1
  1049  0072                     Lcd_Chr_CP@data:	
  1050  0072                     Lcd_Cmd@data:	
  1051                           ; 1 bytes @ 0x2
  1052                           
  1053  0072                     ___wmul@multiplicand:	
  1054                           ; 1 bytes @ 0x2
  1055                           
  1056  0072                     ___lwdiv@dividend:	
  1057                           ; 2 bytes @ 0x2
  1058                           
  1059                           
  1060                           ; 2 bytes @ 0x2
  1061  0072                     	ds	1
  1062  0073                     ??_Lcd_Init:	
  1063  0073                     ?_Lcd_Out:	
  1064                           ; 1 bytes @ 0x3
  1065                           
  1066  0073                     ?_Lcd_Out2:	
  1067                           ; 1 bytes @ 0x3
  1068                           
  1069  0073                     Lcd_Out@x:	
  1070                           ; 1 bytes @ 0x3
  1071                           
  1072  0073                     Lcd_Out2@x:	
  1073                           ; 1 bytes @ 0x3
  1074                           
  1075                           
  1076                           ; 1 bytes @ 0x3
  1077  0073                     	ds	1
  1078  0074                     ??___wmul:	
  1079  0074                     ??___lwdiv:	
  1080                           ; 1 bytes @ 0x4
  1081                           
  1082  0074                     Lcd_Init@data:	
  1083                           ; 1 bytes @ 0x4
  1084                           
  1085  0074                     Lcd_Out2@buffer:	
  1086                           ; 1 bytes @ 0x4
  1087                           
  1088  0074                     Lcd_Out@buffer:	
  1089                           ; 1 bytes @ 0x4
  1090                           
  1091  0074                     ___wmul@product:	
  1092                           ; 2 bytes @ 0x4
  1093                           
  1094                           
  1095                           ; 2 bytes @ 0x4
  1096  0074                     	ds	1
  1097  0075                     ??_Lcd_Out2:	
  1098  0075                     ___lwdiv@quotient:	
  1099                           ; 1 bytes @ 0x5
  1100                           
  1101                           
  1102                           ; 2 bytes @ 0x5
  1103  0075                     	ds	1
  1104  0076                     ??_Lcd_Out:	
  1105  0076                     Lcd_Out2@y:	
  1106                           ; 1 bytes @ 0x6
  1107                           
  1108                           
  1109                           ; 1 bytes @ 0x6
  1110  0076                     	ds	1
  1111  0077                     Lcd_Out@y:	
  1112  0077                     Lcd_Out2@data:	
  1113                           ; 1 bytes @ 0x7
  1114                           
  1115  0077                     ___lwdiv@counter:	
  1116                           ; 1 bytes @ 0x7
  1117                           
  1118                           
  1119                           ; 1 bytes @ 0x7
  1120  0077                     	ds	1
  1121  0078                     ?___lwmod:	
  1122  0078                     Lcd_Out@data:	
  1123                           ; 2 bytes @ 0x8
  1124                           
  1125  0078                     ___lwmod@divisor:	
  1126                           ; 1 bytes @ 0x8
  1127                           
  1128                           
  1129                           ; 2 bytes @ 0x8
  1130  0078                     	ds	2
  1131  007A                     ___lwmod@dividend:	
  1132                           
  1133                           ; 2 bytes @ 0xA
  1134  007A                     	ds	2
  1135  007C                     ??___lwmod:	
  1136                           
  1137                           ; 1 bytes @ 0xC
  1138  007C                     	ds	1
  1139  007D                     ___lwmod@counter:	
  1140                           
  1141                           ; 1 bytes @ 0xD
  1142  007D                     	ds	1
  1143                           
  1144                           	psect	cstackBANK0
  1145  0020                     __pcstackBANK0:	
  1146  0020                     ?_sprintf:	
  1147  0020                     sprintf@f:	
  1148                           ; 2 bytes @ 0x0
  1149                           
  1150                           
  1151                           ; 2 bytes @ 0x0
  1152  0020                     	ds	4
  1153  0024                     ??_sprintf:	
  1154                           
  1155                           ; 1 bytes @ 0x4
  1156  0024                     	ds	4
  1157  0028                     sprintf@ap:	
  1158                           
  1159                           ; 1 bytes @ 0x8
  1160  0028                     	ds	1
  1161  0029                     sprintf@prec:	
  1162                           
  1163                           ; 1 bytes @ 0x9
  1164  0029                     	ds	1
  1165  002A                     sprintf@val:	
  1166                           
  1167                           ; 2 bytes @ 0xA
  1168  002A                     	ds	2
  1169  002C                     sprintf@flag:	
  1170                           
  1171                           ; 1 bytes @ 0xC
  1172  002C                     	ds	1
  1173  002D                     sprintf@width:	
  1174                           
  1175                           ; 2 bytes @ 0xD
  1176  002D                     	ds	2
  1177  002F                     sprintf@sp:	
  1178                           
  1179                           ; 1 bytes @ 0xF
  1180  002F                     	ds	1
  1181  0030                     sprintf@c:	
  1182                           
  1183                           ; 1 bytes @ 0x10
  1184  0030                     	ds	1
  1185  0031                     ?_main:	
  1186  0031                     main@argc:	
  1187                           ; 2 bytes @ 0x11
  1188                           
  1189                           
  1190                           ; 2 bytes @ 0x11
  1191  0031                     	ds	2
  1192  0033                     main@argv:	
  1193                           
  1194                           ; 2 bytes @ 0x13
  1195  0033                     	ds	2
  1196  0035                     ??_main:	
  1197                           
  1198                           ; 1 bytes @ 0x15
  1199  0035                     	ds	2
  1200  0037                     main@buffer1:	
  1201                           
  1202                           ; 16 bytes @ 0x17
  1203  0037                     	ds	16
  1204  0047                     main@i:	
  1205                           
  1206                           ; 2 bytes @ 0x27
  1207  0047                     	ds	2
  1208  0049                     main@cont:	
  1209                           
  1210                           ; 2 bytes @ 0x29
  1211  0049                     	ds	2
  1212  004B                     main@i2:	
  1213                           
  1214                           ; 2 bytes @ 0x2B
  1215  004B                     	ds	2
  1216                           
  1217                           	psect	maintext
  1218  05DD                     __pmaintext:	
  1219 ;;
  1220 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  1221 ;;
  1222 ;; *************** function _main *****************
  1223 ;; Defined at:
  1224 ;;		line 9 in file "main.c"
  1225 ;; Parameters:    Size  Location     Type
  1226 ;;  argc            2   17[BANK0 ] int 
  1227 ;;  argv            2   19[BANK0 ] PTR PTR unsigned char 
  1228 ;; Auto vars:     Size  Location     Type
  1229 ;;  i2              2   43[BANK0 ] int 
  1230 ;;  buffer1        16   23[BANK0 ] unsigned char [16]
  1231 ;;  buffer2        16    0        unsigned char [16]
  1232 ;;  cont            2   41[BANK0 ] int 
  1233 ;;  i               2   39[BANK0 ] int 
  1234 ;; Return value:  Size  Location     Type
  1235 ;;                  2   17[BANK0 ] int 
  1236 ;; Registers used:
  1237 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  1238 ;; Tracked objects:
  1239 ;;		On entry : B3F/0
  1240 ;;		On exit  : 0/0
  1241 ;;		Unchanged: 0/0
  1242 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
  1243 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  1244 ;;      Locals:         0      22       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  1245 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  1246 ;;      Totals:         0      28       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  1247 ;;Total ram usage:       28 bytes
  1248 ;; Hardware stack levels required when called:    2
  1249 ;; This function calls:
  1250 ;;		_Lcd_Cmd
  1251 ;;		_Lcd_Init
  1252 ;;		_Lcd_Out
  1253 ;;		_Lcd_Out2
  1254 ;;		_sprintf
  1255 ;; This function is called by:
  1256 ;;		Startup code after reset
  1257 ;; This function uses a non-reentrant model
  1258 ;;
  1259                           
  1260                           
  1261                           ;psect for function _main
  1262  05DD                     _main:	
  1263                           
  1264                           ;main.c: 10: OSCFRQbits.HFFRQ=0b110;
  1265                           
  1266                           ;incstack = 0
  1267                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  1268  05DD  0151               	movlb	17	; select bank17
  1269  05DE  0813               	movf	19,w	;volatile
  1270  05DF  39F8               	andlw	-8
  1271  05E0  3806               	iorlw	6
  1272  05E1  0093               	movwf	19	;volatile
  1273                           
  1274                           ;main.c: 11: ANSELC=0b00000000;
  1275  05E2  017E               	movlb	62	; select bank62
  1276  05E3  01CE               	clrf	78	;volatile
  1277                           
  1278                           ;main.c: 12: ANSELD=0b00000000;
  1279  05E4  01D9               	clrf	89	;volatile
  1280                           
  1281                           ;main.c: 17: unsigned char buffer1[16],buffer2[16];
  1282                           ;main.c: 18: int i=0,cont=0;
  1283  05E5  0140               	movlb	0	; select bank0
  1284  05E6  01C7               	clrf	main@i
  1285  05E7  01C8               	clrf	main@i+1
  1286  05E8  01C9               	clrf	main@cont
  1287  05E9  01CA               	clrf	main@cont+1
  1288                           
  1289                           ;main.c: 20: Lcd_Init();
  1290  05EA  3183  23B0  3185   	fcall	_Lcd_Init
  1291                           
  1292                           ;main.c: 21: Lcd_Cmd(1);
  1293  05ED  3001               	movlw	1
  1294  05EE  3182  2286  3185   	fcall	_Lcd_Cmd
  1295                           
  1296                           ;main.c: 22: Lcd_Cmd(12);
  1297  05F1  300C               	movlw	12
  1298  05F2  3182  2286  3185   	fcall	_Lcd_Cmd
  1299                           
  1300                           ;main.c: 23: _delay((unsigned long)((100)*(32000000/4000.0)));
  1301  05F5  3005               	movlw	5
  1302  05F6  0140               	movlb	0	; select bank0
  1303  05F7  00B6               	movwf	??_main+1
  1304  05F8  300F               	movlw	15
  1305  05F9  00B5               	movwf	??_main
  1306  05FA  30F1               	movlw	241
  1307  05FB                     u1497:	
  1308  05FB  0B89               	decfsz	9,f
  1309  05FC  2DFB               	goto	u1497
  1310  05FD  0BB5               	decfsz	??_main,f
  1311  05FE  2DFB               	goto	u1497
  1312  05FF  0BB6               	decfsz	??_main+1,f
  1313  0600  2DFB               	goto	u1497
  1314                           
  1315                           ;main.c: 25: Lcd_Cmd(15);
  1316  0601  300F               	movlw	15
  1317  0602  3182  2286  3185   	fcall	_Lcd_Cmd
  1318                           
  1319                           ;main.c: 26: _delay((unsigned long)((1000)*(32000000/4000.0)));
  1320  0605  3029               	movlw	41
  1321  0606  0140               	movlb	0	; select bank0
  1322  0607  00B6               	movwf	??_main+1
  1323  0608  3096               	movlw	150
  1324  0609  00B5               	movwf	??_main
  1325  060A  307F               	movlw	127
  1326  060B                     u1507:	
  1327  060B  0B89               	decfsz	9,f
  1328  060C  2E0B               	goto	u1507
  1329  060D  0BB5               	decfsz	??_main,f
  1330  060E  2E0B               	goto	u1507
  1331  060F  0BB6               	decfsz	??_main+1,f
  1332  0610  2E0B               	goto	u1507
  1333                           
  1334                           ;main.c: 27: Lcd_Cmd(12);
  1335  0611  300C               	movlw	12
  1336  0612  3182  2286  3185   	fcall	_Lcd_Cmd
  1337                           
  1338                           ;main.c: 30: for(int i2=0;i2<16;i2++){
  1339  0615  0140               	movlb	0	; select bank0
  1340  0616  01CB               	clrf	main@i2
  1341  0617  01CC               	clrf	main@i2+1
  1342  0618  084C               	movf	main@i2+1,w
  1343  0619  3A80               	xorlw	128
  1344  061A  00B5               	movwf	??_main
  1345  061B  3080               	movlw	128
  1346  061C  0235               	subwf	??_main,w
  1347  061D  1D03               	skipz
  1348  061E  2E21               	goto	u1295
  1349  061F  3010               	movlw	16
  1350  0620  024B               	subwf	main@i2,w
  1351  0621                     u1295:	
  1352  0621  1803               	btfsc	3,0
  1353  0622  2FFB               	goto	l100
  1354  0623                     l1440:	
  1355                           
  1356                           ;main.c: 37: if(i2==0){
  1357  0623  0140               	movlb	0	; select bank0
  1358  0624  084B               	movf	main@i2,w
  1359  0625  044C               	iorwf	main@i2+1,w
  1360  0626  1D03               	btfss	3,2
  1361  0627  2E3B               	goto	l1446
  1362                           
  1363                           ;main.c: 39: Lcd_Out(1,0,"  MECATRONICA!  ");
  1364  0628  01F3               	clrf	Lcd_Out@x
  1365  0629  302C               	movlw	low (STR_1| (0+32768))
  1366  062A  00F4               	movwf	Lcd_Out@buffer
  1367  062B  3088               	movlw	high (STR_1| (0+32768))
  1368  062C  00F5               	movwf	Lcd_Out@buffer+1
  1369  062D  3001               	movlw	1
  1370  062E  3182  224F  3185   	fcall	_Lcd_Out
  1371                           
  1372                           ;main.c: 40: _delay((unsigned long)((10)*(32000000/4000.0)));
  1373  0631  3068               	movlw	104
  1374  0632  0140               	movlb	0	; select bank0
  1375  0633  00B5               	movwf	??_main
  1376  0634  30E4               	movlw	228
  1377  0635                     u1517:	
  1378  0635  0B89               	decfsz	9,f
  1379  0636  2E35               	goto	u1517
  1380  0637  0BB5               	decfsz	??_main,f
  1381  0638  2E35               	goto	u1517
  1382  0639  0000               	nop
  1383                           
  1384                           ;main.c: 41: }else if(i2==1){
  1385  063A  2FB0               	goto	l1536
  1386  063B                     l1446:	
  1387  063B  0140               	movlb	0	; select bank0
  1388  063C  034B               	decf	main@i2,w
  1389  063D  044C               	iorwf	main@i2+1,w
  1390  063E  1D03               	btfss	3,2
  1391  063F  2E53               	goto	l1452
  1392                           
  1393                           ;main.c: 43: Lcd_Out(1,0,"   MECATRONICA! ");
  1394  0640  01F3               	clrf	Lcd_Out@x
  1395  0641  303D               	movlw	low (STR_2| (0+32768))
  1396  0642  00F4               	movwf	Lcd_Out@buffer
  1397  0643  3088               	movlw	high (STR_2| (0+32768))
  1398  0644  00F5               	movwf	Lcd_Out@buffer+1
  1399  0645  3001               	movlw	1
  1400  0646  3182  224F  3185   	fcall	_Lcd_Out
  1401                           
  1402                           ;main.c: 44: _delay((unsigned long)((10)*(32000000/4000.0)));
  1403  0649  3068               	movlw	104
  1404  064A  0140               	movlb	0	; select bank0
  1405  064B  00B5               	movwf	??_main
  1406  064C  30E4               	movlw	228
  1407  064D                     u1527:	
  1408  064D  0B89               	decfsz	9,f
  1409  064E  2E4D               	goto	u1527
  1410  064F  0BB5               	decfsz	??_main,f
  1411  0650  2E4D               	goto	u1527
  1412  0651  0000               	nop
  1413                           
  1414                           ;main.c: 45: }else if(i2==2){
  1415  0652  2FB0               	goto	l1536
  1416  0653                     l1452:	
  1417  0653  3002               	movlw	2
  1418  0654  0140               	movlb	0	; select bank0
  1419  0655  064B               	xorwf	main@i2,w
  1420  0656  044C               	iorwf	main@i2+1,w
  1421  0657  1D03               	btfss	3,2
  1422  0658  2E6C               	goto	l1458
  1423                           
  1424                           ;main.c: 47: Lcd_Out(1,0,"    MECATRONICA!");
  1425  0659  01F3               	clrf	Lcd_Out@x
  1426  065A  304E               	movlw	low (STR_3| (0+32768))
  1427  065B  00F4               	movwf	Lcd_Out@buffer
  1428  065C  3088               	movlw	high (STR_3| (0+32768))
  1429  065D  00F5               	movwf	Lcd_Out@buffer+1
  1430  065E  3001               	movlw	1
  1431  065F  3182  224F  3185   	fcall	_Lcd_Out
  1432                           
  1433                           ;main.c: 48: _delay((unsigned long)((10)*(32000000/4000.0)));
  1434  0662  3068               	movlw	104
  1435  0663  0140               	movlb	0	; select bank0
  1436  0664  00B5               	movwf	??_main
  1437  0665  30E4               	movlw	228
  1438  0666                     u1537:	
  1439  0666  0B89               	decfsz	9,f
  1440  0667  2E66               	goto	u1537
  1441  0668  0BB5               	decfsz	??_main,f
  1442  0669  2E66               	goto	u1537
  1443  066A  0000               	nop
  1444                           
  1445                           ;main.c: 49: }else if(i2==3){
  1446  066B  2FB0               	goto	l1536
  1447  066C                     l1458:	
  1448  066C  3003               	movlw	3
  1449  066D  0140               	movlb	0	; select bank0
  1450  066E  064B               	xorwf	main@i2,w
  1451  066F  044C               	iorwf	main@i2+1,w
  1452  0670  1D03               	btfss	3,2
  1453  0671  2E85               	goto	l1464
  1454                           
  1455                           ;main.c: 51: Lcd_Out(1,0,"!    MECATRONICA");
  1456  0672  01F3               	clrf	Lcd_Out@x
  1457  0673  3070               	movlw	low (STR_4| (0+32768))
  1458  0674  00F4               	movwf	Lcd_Out@buffer
  1459  0675  3088               	movlw	high (STR_4| (0+32768))
  1460  0676  00F5               	movwf	Lcd_Out@buffer+1
  1461  0677  3001               	movlw	1
  1462  0678  3182  224F  3185   	fcall	_Lcd_Out
  1463                           
  1464                           ;main.c: 52: _delay((unsigned long)((10)*(32000000/4000.0)));
  1465  067B  3068               	movlw	104
  1466  067C  0140               	movlb	0	; select bank0
  1467  067D  00B5               	movwf	??_main
  1468  067E  30E4               	movlw	228
  1469  067F                     u1547:	
  1470  067F  0B89               	decfsz	9,f
  1471  0680  2E7F               	goto	u1547
  1472  0681  0BB5               	decfsz	??_main,f
  1473  0682  2E7F               	goto	u1547
  1474  0683  0000               	nop
  1475                           
  1476                           ;main.c: 53: }else if(i2==4){
  1477  0684  2FB0               	goto	l1536
  1478  0685                     l1464:	
  1479  0685  3004               	movlw	4
  1480  0686  0140               	movlb	0	; select bank0
  1481  0687  064B               	xorwf	main@i2,w
  1482  0688  044C               	iorwf	main@i2+1,w
  1483  0689  1D03               	btfss	3,2
  1484  068A  2E9E               	goto	l1470
  1485                           
  1486                           ;main.c: 55: Lcd_Out(1,0,"A!    MECATRONIC");
  1487  068B  01F3               	clrf	Lcd_Out@x
  1488  068C  3092               	movlw	low (STR_5| (0+32768))
  1489  068D  00F4               	movwf	Lcd_Out@buffer
  1490  068E  3088               	movlw	high (STR_5| (0+32768))
  1491  068F  00F5               	movwf	Lcd_Out@buffer+1
  1492  0690  3001               	movlw	1
  1493  0691  3182  224F  3185   	fcall	_Lcd_Out
  1494                           
  1495                           ;main.c: 56: _delay((unsigned long)((10)*(32000000/4000.0)));
  1496  0694  3068               	movlw	104
  1497  0695  0140               	movlb	0	; select bank0
  1498  0696  00B5               	movwf	??_main
  1499  0697  30E4               	movlw	228
  1500  0698                     u1557:	
  1501  0698  0B89               	decfsz	9,f
  1502  0699  2E98               	goto	u1557
  1503  069A  0BB5               	decfsz	??_main,f
  1504  069B  2E98               	goto	u1557
  1505  069C  0000               	nop
  1506                           
  1507                           ;main.c: 57: }else if(i2==5){
  1508  069D  2FB0               	goto	l1536
  1509  069E                     l1470:	
  1510  069E  3005               	movlw	5
  1511  069F  0140               	movlb	0	; select bank0
  1512  06A0  064B               	xorwf	main@i2,w
  1513  06A1  044C               	iorwf	main@i2+1,w
  1514  06A2  1D03               	btfss	3,2
  1515  06A3  2EB7               	goto	l1476
  1516                           
  1517                           ;main.c: 59: Lcd_Out(1,0,"CA!    MECATRONI");
  1518  06A4  01F3               	clrf	Lcd_Out@x
  1519  06A5  30B4               	movlw	low (STR_6| (0+32768))
  1520  06A6  00F4               	movwf	Lcd_Out@buffer
  1521  06A7  3088               	movlw	high (STR_6| (0+32768))
  1522  06A8  00F5               	movwf	Lcd_Out@buffer+1
  1523  06A9  3001               	movlw	1
  1524  06AA  3182  224F  3185   	fcall	_Lcd_Out
  1525                           
  1526                           ;main.c: 60: _delay((unsigned long)((10)*(32000000/4000.0)));
  1527  06AD  3068               	movlw	104
  1528  06AE  0140               	movlb	0	; select bank0
  1529  06AF  00B5               	movwf	??_main
  1530  06B0  30E4               	movlw	228
  1531  06B1                     u1567:	
  1532  06B1  0B89               	decfsz	9,f
  1533  06B2  2EB1               	goto	u1567
  1534  06B3  0BB5               	decfsz	??_main,f
  1535  06B4  2EB1               	goto	u1567
  1536  06B5  0000               	nop
  1537                           
  1538                           ;main.c: 61: }else if(i2==6){
  1539  06B6  2FB0               	goto	l1536
  1540  06B7                     l1476:	
  1541  06B7  3006               	movlw	6
  1542  06B8  0140               	movlb	0	; select bank0
  1543  06B9  064B               	xorwf	main@i2,w
  1544  06BA  044C               	iorwf	main@i2+1,w
  1545  06BB  1D03               	btfss	3,2
  1546  06BC  2ED0               	goto	l1482
  1547                           
  1548                           ;main.c: 63: Lcd_Out(1,0,"ICA!    MECATRON");
  1549  06BD  01F3               	clrf	Lcd_Out@x
  1550  06BE  30D6               	movlw	low (STR_7| (0+32768))
  1551  06BF  00F4               	movwf	Lcd_Out@buffer
  1552  06C0  3088               	movlw	high (STR_7| (0+32768))
  1553  06C1  00F5               	movwf	Lcd_Out@buffer+1
  1554  06C2  3001               	movlw	1
  1555  06C3  3182  224F  3185   	fcall	_Lcd_Out
  1556                           
  1557                           ;main.c: 64: _delay((unsigned long)((10)*(32000000/4000.0)));
  1558  06C6  3068               	movlw	104
  1559  06C7  0140               	movlb	0	; select bank0
  1560  06C8  00B5               	movwf	??_main
  1561  06C9  30E4               	movlw	228
  1562  06CA                     u1577:	
  1563  06CA  0B89               	decfsz	9,f
  1564  06CB  2ECA               	goto	u1577
  1565  06CC  0BB5               	decfsz	??_main,f
  1566  06CD  2ECA               	goto	u1577
  1567  06CE  0000               	nop
  1568                           
  1569                           ;main.c: 65: }else if(i2==7){
  1570  06CF  2FB0               	goto	l1536
  1571  06D0                     l1482:	
  1572  06D0  3007               	movlw	7
  1573  06D1  0140               	movlb	0	; select bank0
  1574  06D2  064B               	xorwf	main@i2,w
  1575  06D3  044C               	iorwf	main@i2+1,w
  1576  06D4  1D03               	btfss	3,2
  1577  06D5  2EE9               	goto	l1488
  1578                           
  1579                           ;main.c: 67: Lcd_Out(1,0,"NICA!    MECATRO");
  1580  06D6  01F3               	clrf	Lcd_Out@x
  1581  06D7  30E7               	movlw	low (STR_8| (0+32768))
  1582  06D8  00F4               	movwf	Lcd_Out@buffer
  1583  06D9  3088               	movlw	high (STR_8| (0+32768))
  1584  06DA  00F5               	movwf	Lcd_Out@buffer+1
  1585  06DB  3001               	movlw	1
  1586  06DC  3182  224F  3185   	fcall	_Lcd_Out
  1587                           
  1588                           ;main.c: 68: _delay((unsigned long)((10)*(32000000/4000.0)));
  1589  06DF  3068               	movlw	104
  1590  06E0  0140               	movlb	0	; select bank0
  1591  06E1  00B5               	movwf	??_main
  1592  06E2  30E4               	movlw	228
  1593  06E3                     u1587:	
  1594  06E3  0B89               	decfsz	9,f
  1595  06E4  2EE3               	goto	u1587
  1596  06E5  0BB5               	decfsz	??_main,f
  1597  06E6  2EE3               	goto	u1587
  1598  06E7  0000               	nop
  1599                           
  1600                           ;main.c: 69: }else if(i2==8){
  1601  06E8  2FB0               	goto	l1536
  1602  06E9                     l1488:	
  1603  06E9  3008               	movlw	8
  1604  06EA  0140               	movlb	0	; select bank0
  1605  06EB  064B               	xorwf	main@i2,w
  1606  06EC  044C               	iorwf	main@i2+1,w
  1607  06ED  1D03               	btfss	3,2
  1608  06EE  2F02               	goto	l1494
  1609                           
  1610                           ;main.c: 71: Lcd_Out(1,0,"ONICA!    MECATR");
  1611  06EF  01F3               	clrf	Lcd_Out@x
  1612  06F0  30F8               	movlw	low (STR_9| (0+32768))
  1613  06F1  00F4               	movwf	Lcd_Out@buffer
  1614  06F2  3088               	movlw	high (STR_9| (0+32768))
  1615  06F3  00F5               	movwf	Lcd_Out@buffer+1
  1616  06F4  3001               	movlw	1
  1617  06F5  3182  224F  3185   	fcall	_Lcd_Out
  1618                           
  1619                           ;main.c: 72: _delay((unsigned long)((10)*(32000000/4000.0)));
  1620  06F8  3068               	movlw	104
  1621  06F9  0140               	movlb	0	; select bank0
  1622  06FA  00B5               	movwf	??_main
  1623  06FB  30E4               	movlw	228
  1624  06FC                     u1597:	
  1625  06FC  0B89               	decfsz	9,f
  1626  06FD  2EFC               	goto	u1597
  1627  06FE  0BB5               	decfsz	??_main,f
  1628  06FF  2EFC               	goto	u1597
  1629  0700  0000               	nop
  1630                           
  1631                           ;main.c: 73: }else if(i2==9){
  1632  0701  2FB0               	goto	l1536
  1633  0702                     l1494:	
  1634  0702  3009               	movlw	9
  1635  0703  0140               	movlb	0	; select bank0
  1636  0704  064B               	xorwf	main@i2,w
  1637  0705  044C               	iorwf	main@i2+1,w
  1638  0706  1D03               	btfss	3,2
  1639  0707  2F1B               	goto	l1500
  1640                           
  1641                           ;main.c: 75: Lcd_Out(1,0,"RONICA!    MECAT");
  1642  0708  01F3               	clrf	Lcd_Out@x
  1643  0709  3009               	movlw	low (STR_10| (0+32768))
  1644  070A  00F4               	movwf	Lcd_Out@buffer
  1645  070B  3089               	movlw	high (STR_10| (0+32768))
  1646  070C  00F5               	movwf	Lcd_Out@buffer+1
  1647  070D  3001               	movlw	1
  1648  070E  3182  224F  3185   	fcall	_Lcd_Out
  1649                           
  1650                           ;main.c: 76: _delay((unsigned long)((10)*(32000000/4000.0)));
  1651  0711  3068               	movlw	104
  1652  0712  0140               	movlb	0	; select bank0
  1653  0713  00B5               	movwf	??_main
  1654  0714  30E4               	movlw	228
  1655  0715                     u1607:	
  1656  0715  0B89               	decfsz	9,f
  1657  0716  2F15               	goto	u1607
  1658  0717  0BB5               	decfsz	??_main,f
  1659  0718  2F15               	goto	u1607
  1660  0719  0000               	nop
  1661                           
  1662                           ;main.c: 77: }else if(i2==10){
  1663  071A  2FB0               	goto	l1536
  1664  071B                     l1500:	
  1665  071B  300A               	movlw	10
  1666  071C  0140               	movlb	0	; select bank0
  1667  071D  064B               	xorwf	main@i2,w
  1668  071E  044C               	iorwf	main@i2+1,w
  1669  071F  1D03               	btfss	3,2
  1670  0720  2F34               	goto	l1506
  1671                           
  1672                           ;main.c: 79: Lcd_Out(1,0,"TRONICA!    MECA");
  1673  0721  01F3               	clrf	Lcd_Out@x
  1674  0722  305F               	movlw	low (STR_11| (0+32768))
  1675  0723  00F4               	movwf	Lcd_Out@buffer
  1676  0724  3088               	movlw	high (STR_11| (0+32768))
  1677  0725  00F5               	movwf	Lcd_Out@buffer+1
  1678  0726  3001               	movlw	1
  1679  0727  3182  224F  3185   	fcall	_Lcd_Out
  1680                           
  1681                           ;main.c: 80: _delay((unsigned long)((10)*(32000000/4000.0)));
  1682  072A  3068               	movlw	104
  1683  072B  0140               	movlb	0	; select bank0
  1684  072C  00B5               	movwf	??_main
  1685  072D  30E4               	movlw	228
  1686  072E                     u1617:	
  1687  072E  0B89               	decfsz	9,f
  1688  072F  2F2E               	goto	u1617
  1689  0730  0BB5               	decfsz	??_main,f
  1690  0731  2F2E               	goto	u1617
  1691  0732  0000               	nop
  1692                           
  1693                           ;main.c: 81: }else if(i2==11){
  1694  0733  2FB0               	goto	l1536
  1695  0734                     l1506:	
  1696  0734  300B               	movlw	11
  1697  0735  0140               	movlb	0	; select bank0
  1698  0736  064B               	xorwf	main@i2,w
  1699  0737  044C               	iorwf	main@i2+1,w
  1700  0738  1D03               	btfss	3,2
  1701  0739  2F4D               	goto	l1512
  1702                           
  1703                           ;main.c: 83: Lcd_Out(1,0,"ATRONICA!    MEC");
  1704  073A  01F3               	clrf	Lcd_Out@x
  1705  073B  3081               	movlw	low (STR_12| (0+32768))
  1706  073C  00F4               	movwf	Lcd_Out@buffer
  1707  073D  3088               	movlw	high (STR_12| (0+32768))
  1708  073E  00F5               	movwf	Lcd_Out@buffer+1
  1709  073F  3001               	movlw	1
  1710  0740  3182  224F  3185   	fcall	_Lcd_Out
  1711                           
  1712                           ;main.c: 84: _delay((unsigned long)((10)*(32000000/4000.0)));
  1713  0743  3068               	movlw	104
  1714  0744  0140               	movlb	0	; select bank0
  1715  0745  00B5               	movwf	??_main
  1716  0746  30E4               	movlw	228
  1717  0747                     u1627:	
  1718  0747  0B89               	decfsz	9,f
  1719  0748  2F47               	goto	u1627
  1720  0749  0BB5               	decfsz	??_main,f
  1721  074A  2F47               	goto	u1627
  1722  074B  0000               	nop
  1723                           
  1724                           ;main.c: 85: }else if(i2==12){
  1725  074C  2FB0               	goto	l1536
  1726  074D                     l1512:	
  1727  074D  300C               	movlw	12
  1728  074E  0140               	movlb	0	; select bank0
  1729  074F  064B               	xorwf	main@i2,w
  1730  0750  044C               	iorwf	main@i2+1,w
  1731  0751  1D03               	btfss	3,2
  1732  0752  2F66               	goto	l1518
  1733                           
  1734                           ;main.c: 87: Lcd_Out(1,0,"CATRONICA!    ME");
  1735  0753  01F3               	clrf	Lcd_Out@x
  1736  0754  30A3               	movlw	low (STR_13| (0+32768))
  1737  0755  00F4               	movwf	Lcd_Out@buffer
  1738  0756  3088               	movlw	high (STR_13| (0+32768))
  1739  0757  00F5               	movwf	Lcd_Out@buffer+1
  1740  0758  3001               	movlw	1
  1741  0759  3182  224F  3185   	fcall	_Lcd_Out
  1742                           
  1743                           ;main.c: 88: _delay((unsigned long)((10)*(32000000/4000.0)));
  1744  075C  3068               	movlw	104
  1745  075D  0140               	movlb	0	; select bank0
  1746  075E  00B5               	movwf	??_main
  1747  075F  30E4               	movlw	228
  1748  0760                     u1637:	
  1749  0760  0B89               	decfsz	9,f
  1750  0761  2F60               	goto	u1637
  1751  0762  0BB5               	decfsz	??_main,f
  1752  0763  2F60               	goto	u1637
  1753  0764  0000               	nop
  1754                           
  1755                           ;main.c: 89: }else if(i2==13){
  1756  0765  2FB0               	goto	l1536
  1757  0766                     l1518:	
  1758  0766  300D               	movlw	13
  1759  0767  0140               	movlb	0	; select bank0
  1760  0768  064B               	xorwf	main@i2,w
  1761  0769  044C               	iorwf	main@i2+1,w
  1762  076A  1D03               	btfss	3,2
  1763  076B  2F7F               	goto	l1524
  1764                           
  1765                           ;main.c: 91: Lcd_Out(1,0,"ECATRONICA!    M");
  1766  076C  01F3               	clrf	Lcd_Out@x
  1767  076D  30C5               	movlw	low (STR_14| (0+32768))
  1768  076E  00F4               	movwf	Lcd_Out@buffer
  1769  076F  3088               	movlw	high (STR_14| (0+32768))
  1770  0770  00F5               	movwf	Lcd_Out@buffer+1
  1771  0771  3001               	movlw	1
  1772  0772  3182  224F  3185   	fcall	_Lcd_Out
  1773                           
  1774                           ;main.c: 92: _delay((unsigned long)((10)*(32000000/4000.0)));
  1775  0775  3068               	movlw	104
  1776  0776  0140               	movlb	0	; select bank0
  1777  0777  00B5               	movwf	??_main
  1778  0778  30E4               	movlw	228
  1779  0779                     u1647:	
  1780  0779  0B89               	decfsz	9,f
  1781  077A  2F79               	goto	u1647
  1782  077B  0BB5               	decfsz	??_main,f
  1783  077C  2F79               	goto	u1647
  1784  077D  0000               	nop
  1785                           
  1786                           ;main.c: 93: }else if(i2==14){
  1787  077E  2FB0               	goto	l1536
  1788  077F                     l1524:	
  1789  077F  300E               	movlw	14
  1790  0780  0140               	movlb	0	; select bank0
  1791  0781  064B               	xorwf	main@i2,w
  1792  0782  044C               	iorwf	main@i2+1,w
  1793  0783  1D03               	btfss	3,2
  1794  0784  2F98               	goto	l1530
  1795                           
  1796                           ;main.c: 95: Lcd_Out(1,0,"MECATRONICA!    ");
  1797  0785  01F3               	clrf	Lcd_Out@x
  1798  0786  300A               	movlw	low (STR_15| (0+32768))
  1799  0787  00F4               	movwf	Lcd_Out@buffer
  1800  0788  3088               	movlw	high (STR_15| (0+32768))
  1801  0789  00F5               	movwf	Lcd_Out@buffer+1
  1802  078A  3001               	movlw	1
  1803  078B  3182  224F  3185   	fcall	_Lcd_Out
  1804                           
  1805                           ;main.c: 96: _delay((unsigned long)((10)*(32000000/4000.0)));
  1806  078E  3068               	movlw	104
  1807  078F  0140               	movlb	0	; select bank0
  1808  0790  00B5               	movwf	??_main
  1809  0791  30E4               	movlw	228
  1810  0792                     u1657:	
  1811  0792  0B89               	decfsz	9,f
  1812  0793  2F92               	goto	u1657
  1813  0794  0BB5               	decfsz	??_main,f
  1814  0795  2F92               	goto	u1657
  1815  0796  0000               	nop
  1816                           
  1817                           ;main.c: 97: }else if(i2==15){
  1818  0797  2FB0               	goto	l1536
  1819  0798                     l1530:	
  1820  0798  300F               	movlw	15
  1821  0799  0140               	movlb	0	; select bank0
  1822  079A  064B               	xorwf	main@i2,w
  1823  079B  044C               	iorwf	main@i2+1,w
  1824  079C  1D03               	btfss	3,2
  1825  079D  2FB0               	goto	l1536
  1826                           
  1827                           ;main.c: 99: Lcd_Out(1,0," MECATRONICA!   ");
  1828  079E  01F3               	clrf	Lcd_Out@x
  1829  079F  301B               	movlw	low (STR_16| (0+32768))
  1830  07A0  00F4               	movwf	Lcd_Out@buffer
  1831  07A1  3088               	movlw	high (STR_16| (0+32768))
  1832  07A2  00F5               	movwf	Lcd_Out@buffer+1
  1833  07A3  3001               	movlw	1
  1834  07A4  3182  224F  3185   	fcall	_Lcd_Out
  1835                           
  1836                           ;main.c: 100: _delay((unsigned long)((10)*(32000000/4000.0)));
  1837  07A7  3068               	movlw	104
  1838  07A8  0140               	movlb	0	; select bank0
  1839  07A9  00B5               	movwf	??_main
  1840  07AA  30E4               	movlw	228
  1841  07AB                     u1667:	
  1842  07AB  0B89               	decfsz	9,f
  1843  07AC  2FAB               	goto	u1667
  1844  07AD  0BB5               	decfsz	??_main,f
  1845  07AE  2FAB               	goto	u1667
  1846  07AF  0000               	nop
  1847  07B0                     l1536:	
  1848                           
  1849                           ;main.c: 101: }
  1850                           ;main.c: 102: sprintf(buffer1," Contador= %02d",cont);
  1851  07B0  301A               	movlw	low (STR_17| (0+32768))
  1852  07B1  0140               	movlb	0	; select bank0
  1853  07B2  00A0               	movwf	sprintf@f
  1854  07B3  3089               	movlw	high (STR_17| (0+32768))
  1855  07B4  00A1               	movwf	sprintf@f+1
  1856  07B5  084A               	movf	main@cont+1,w
  1857  07B6  00A3               	movwf	?_sprintf+3
  1858  07B7  0849               	movf	main@cont,w
  1859  07B8  00A2               	movwf	?_sprintf+2
  1860  07B9  3037               	movlw	(low (main@buffer1| 0))& (0+255)
  1861  07BA  3184  2459  3185   	fcall	_sprintf
  1862                           
  1863                           ;main.c: 103: Lcd_Out2(2,1,buffer1);
  1864  07BD  01F3               	clrf	Lcd_Out2@x
  1865  07BE  0AF3               	incf	Lcd_Out2@x,f
  1866  07BF  3037               	movlw	(low (main@buffer1| 0))& (0+255)
  1867  07C0  0140               	movlb	0	; select bank0
  1868  07C1  00B5               	movwf	??_main
  1869  07C2  0835               	movf	??_main,w
  1870  07C3  00F4               	movwf	Lcd_Out2@buffer
  1871  07C4  3002               	movlw	2
  1872  07C5  3182  221A  3185   	fcall	_Lcd_Out2
  1873                           
  1874                           ;main.c: 104: if(cont==12){
  1875  07C8  300C               	movlw	12
  1876  07C9  0140               	movlb	0	; select bank0
  1877  07CA  0649               	xorwf	main@cont,w
  1878  07CB  044A               	iorwf	main@cont+1,w
  1879  07CC  1D03               	btfss	3,2
  1880  07CD  2FD1               	goto	l1544
  1881                           
  1882                           ;main.c: 105: cont=0;
  1883  07CE  01C9               	clrf	main@cont
  1884  07CF  01CA               	clrf	main@cont+1
  1885                           
  1886                           ;main.c: 106: }else{
  1887  07D0  2FD7               	goto	l98
  1888  07D1                     l1544:	
  1889                           
  1890                           ;main.c: 107: cont=cont+1;
  1891  07D1  0849               	movf	main@cont,w
  1892  07D2  3E01               	addlw	1
  1893  07D3  00C9               	movwf	main@cont
  1894  07D4  3000               	movlw	0
  1895  07D5  3D4A               	addwfc	main@cont+1,w
  1896  07D6  00CA               	movwf	main@cont+1
  1897  07D7                     l98:	
  1898                           
  1899                           ;main.c: 108: }
  1900                           ;main.c: 109: if(i2==15){
  1901  07D7  300F               	movlw	15
  1902  07D8  064B               	xorwf	main@i2,w
  1903  07D9  044C               	iorwf	main@i2+1,w
  1904  07DA  1D03               	btfss	3,2
  1905  07DB  2FDE               	goto	l1548
  1906                           
  1907                           ;main.c: 110: i2=0;
  1908  07DC  01CB               	clrf	main@i2
  1909  07DD  01CC               	clrf	main@i2+1
  1910  07DE                     l1548:	
  1911                           
  1912                           ;main.c: 111: }
  1913                           ;main.c: 112: _delay((unsigned long)((500)*(32000000/4000.0)));
  1914  07DE  3015               	movlw	21
  1915  07DF  0140               	movlb	0	; select bank0
  1916  07E0  00B6               	movwf	??_main+1
  1917  07E1  304B               	movlw	75
  1918  07E2  00B5               	movwf	??_main
  1919  07E3  30BE               	movlw	190
  1920  07E4                     u1677:	
  1921  07E4  0B89               	decfsz	9,f
  1922  07E5  2FE4               	goto	u1677
  1923  07E6  0BB5               	decfsz	??_main,f
  1924  07E7  2FE4               	goto	u1677
  1925  07E8  0BB6               	decfsz	??_main+1,f
  1926  07E9  2FE4               	goto	u1677
  1927  07EA  0000               	nop
  1928  07EB  3001               	movlw	1
  1929  07EC  0140               	movlb	0	; select bank0
  1930  07ED  07CB               	addwf	main@i2,f
  1931  07EE  3000               	movlw	0
  1932  07EF  3DCC               	addwfc	main@i2+1,f
  1933  07F0  084C               	movf	main@i2+1,w
  1934  07F1  3A80               	xorlw	128
  1935  07F2  00B5               	movwf	??_main
  1936  07F3  3080               	movlw	128
  1937  07F4  0235               	subwf	??_main,w
  1938  07F5  1D03               	skipz
  1939  07F6  2FF9               	goto	u1485
  1940  07F7  3010               	movlw	16
  1941  07F8  024B               	subwf	main@i2,w
  1942  07F9                     u1485:	
  1943  07F9  1C03               	skipc
  1944  07FA  2E23               	goto	l1440
  1945  07FB                     l100:	
  1946                           ;main.c: 113: }
  1947                           ;main.c: 118: return (0);
  1948                           ;	Return value of _main is never used
  1949                           
  1950  07FB  3180  2802         	ljmp	start
  1951  07FD                     __end_of_main:	
  1952                           
  1953                           	psect	text1
  1954  0459                     __ptext1:	
  1955 ;; *************** function _sprintf *****************
  1956 ;; Defined at:
  1957 ;;		line 492 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\doprnt.c"
  1958 ;; Parameters:    Size  Location     Type
  1959 ;;  sp              1    wreg     PTR unsigned char 
  1960 ;;		 -> main@buffer1(16), 
  1961 ;;  f               2    0[BANK0 ] PTR const unsigned char 
  1962 ;;		 -> STR_17(16), 
  1963 ;; Auto vars:     Size  Location     Type
  1964 ;;  sp              1   15[BANK0 ] PTR unsigned char 
  1965 ;;		 -> main@buffer1(16), 
  1966 ;;  tmpval          4    0        struct .
  1967 ;;  width           2   13[BANK0 ] int 
  1968 ;;  val             2   10[BANK0 ] unsigned int 
  1969 ;;  cp              2    0        PTR const unsigned char 
  1970 ;;  len             2    0        unsigned int 
  1971 ;;  c               1   16[BANK0 ] char 
  1972 ;;  flag            1   12[BANK0 ] unsigned char 
  1973 ;;  prec            1    9[BANK0 ] char 
  1974 ;;  ap              1    8[BANK0 ] PTR void [1]
  1975 ;;		 -> ?_sprintf(2), 
  1976 ;; Return value:  Size  Location     Type
  1977 ;;                  2    0[BANK0 ] int 
  1978 ;; Registers used:
  1979 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  1980 ;; Tracked objects:
  1981 ;;		On entry : 0/0
  1982 ;;		On exit  : 0/0
  1983 ;;		Unchanged: 0/0
  1984 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
  1985 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  1986 ;;      Locals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  1987 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  1988 ;;      Totals:         0      17       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  1989 ;;Total ram usage:       17 bytes
  1990 ;; Hardware stack levels used:    1
  1991 ;; Hardware stack levels required when called:    1
  1992 ;; This function calls:
  1993 ;;		___lwdiv
  1994 ;;		___lwmod
  1995 ;;		___wmul
  1996 ;;		_isdigit
  1997 ;; This function is called by:
  1998 ;;		_main
  1999 ;; This function uses a non-reentrant model
  2000 ;;
  2001                           
  2002                           
  2003                           ;psect for function _sprintf
  2004  0459                     _sprintf:	
  2005                           
  2006                           ;incstack = 0
  2007                           ; Regs used in _sprintf: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  2008                           ;sprintf@sp stored from wreg
  2009  0459  0140               	movlb	0	; select bank0
  2010  045A  00AF               	movwf	sprintf@sp
  2011                           
  2012                           ;doprnt.c: 494: va_list ap;
  2013                           ;doprnt.c: 499: signed char c;
  2014                           ;doprnt.c: 501: int width;
  2015                           ;doprnt.c: 506: signed char prec;
  2016                           ;doprnt.c: 508: unsigned char flag;
  2017                           ;doprnt.c: 523: union {
  2018                           ;doprnt.c: 524: unsigned long vd;
  2019                           ;doprnt.c: 525: double integ;
  2020                           ;doprnt.c: 526: } tmpval;
  2021                           ;doprnt.c: 528: unsigned int val;
  2022                           ;doprnt.c: 529: unsigned len;
  2023                           ;doprnt.c: 530: const char * cp;
  2024                           ;doprnt.c: 533: *ap = __va_start();
  2025  045B  3022               	movlw	(low ((?_sprintf| 0+2)))& (0+255)
  2026  045C  00A4               	movwf	??_sprintf
  2027  045D  0824               	movf	??_sprintf,w
  2028  045E  00A8               	movwf	sprintf@ap
  2029  045F                     l1404:	
  2030                           ;doprnt.c: 536: while(c = *f++) {
  2031                           
  2032  045F  0140               	movlb	0	; select bank0
  2033  0460  0821               	movf	sprintf@f+1,w
  2034  0461  00A5               	movwf	??_sprintf+1
  2035  0462  0820               	movf	sprintf@f,w
  2036  0463  00A4               	movwf	??_sprintf
  2037  0464  0AA0               	incf	sprintf@f,f
  2038  0465  1903               	skipnz
  2039  0466  0AA1               	incf	sprintf@f+1,f
  2040  0467  0824               	movf	??_sprintf,w
  2041  0468  0084               	movwf	4
  2042  0469  0825               	movf	??_sprintf+1,w
  2043  046A  0085               	movwf	5
  2044  046B  0800               	movf	0,w	;code access
  2045  046C  00A6               	movwf	??_sprintf+2
  2046  046D  0826               	movf	??_sprintf+2,w
  2047  046E  00B0               	movwf	sprintf@c
  2048  046F  0830               	movf	sprintf@c,w
  2049  0470  1903               	btfsc	3,2
  2050  0471  2DD7               	goto	l1406
  2051                           
  2052                           ;doprnt.c: 538: if(c != '%')
  2053  0472  3025               	movlw	37
  2054  0473  0630               	xorwf	sprintf@c,w
  2055  0474  1903               	btfsc	3,2
  2056  0475  2C82               	goto	l1308
  2057                           
  2058                           ;doprnt.c: 540: {
  2059                           ;doprnt.c: 541: ((*sp++ = (c)));
  2060  0476  0830               	movf	sprintf@c,w
  2061  0477  00A4               	movwf	??_sprintf
  2062  0478  082F               	movf	sprintf@sp,w
  2063  0479  0086               	movwf	6
  2064  047A  0187               	clrf	7
  2065  047B  0824               	movf	??_sprintf,w
  2066  047C  0081               	movwf	1
  2067  047D  3001               	movlw	1
  2068  047E  00A4               	movwf	??_sprintf
  2069  047F  0824               	movf	??_sprintf,w
  2070  0480  07AF               	addwf	sprintf@sp,f
  2071                           
  2072                           ;doprnt.c: 542: continue;
  2073  0481  2C5F               	goto	l1404
  2074  0482                     l1308:	
  2075                           
  2076                           ;doprnt.c: 543: }
  2077                           ;doprnt.c: 546: width = 0;
  2078  0482  01AD               	clrf	sprintf@width
  2079  0483  01AE               	clrf	sprintf@width+1
  2080                           
  2081                           ;doprnt.c: 548: flag = 0;
  2082  0484  01AC               	clrf	sprintf@flag
  2083                           
  2084                           ;doprnt.c: 551: switch(*f) {
  2085                           
  2086                           ;doprnt.c: 550: for(;;) {
  2087  0485  2C8B               	goto	l1314
  2088  0486                     l116:	
  2089                           ;doprnt.c: 579: case '0':
  2090                           
  2091                           
  2092                           ;doprnt.c: 580: flag |= 0x04;
  2093  0486  152C               	bsf	sprintf@flag,2
  2094                           
  2095                           ;doprnt.c: 581: f++;
  2096  0487  3001               	movlw	1
  2097  0488  07A0               	addwf	sprintf@f,f
  2098  0489  3000               	movlw	0
  2099  048A  3DA1               	addwfc	sprintf@f+1,f
  2100  048B                     l1314:	
  2101                           ;doprnt.c: 584: }
  2102                           
  2103                           ;doprnt.c: 582: continue;
  2104                           
  2105  048B  0820               	movf	sprintf@f,w
  2106  048C  0084               	movwf	4
  2107  048D  0821               	movf	sprintf@f+1,w
  2108  048E  0085               	movwf	5
  2109  048F  0800               	movf	0,w	;code access
  2110                           
  2111                           ; Switch size 1, requested type "space"
  2112                           ; Number of cases is 1, Range of values is 48 to 48
  2113                           ; switch strategies available:
  2114                           ; Name         Instructions Cycles
  2115                           ; simple_byte            4     3 (average)
  2116                           ; direct_byte           11     9 (fixed)
  2117                           ; jumptable            263     9 (fixed)
  2118                           ;	Chosen strategy is simple_byte
  2119  0490  3A30               	xorlw	48	; case 48
  2120  0491  1903               	skipnz
  2121  0492  2C86               	goto	l116
  2122  0493  2C94               	goto	l1316
  2123  0494                     l1316:	
  2124                           ;doprnt.c: 586: }
  2125                           
  2126                           ;doprnt.c: 585: break;
  2127                           
  2128                           
  2129                           ;doprnt.c: 597: if(isdigit((unsigned)*f)) {
  2130  0494  0820               	movf	sprintf@f,w
  2131  0495  0084               	movwf	4
  2132  0496  0821               	movf	sprintf@f+1,w
  2133  0497  0085               	movwf	5
  2134  0498  0800               	movf	0,w	;code access
  2135  0499  3181  2191  3184   	fcall	_isdigit
  2136  049C  1C03               	btfss	3,0
  2137  049D  2CCF               	goto	l1330
  2138                           
  2139                           ;doprnt.c: 598: width = 0;
  2140  049E  0140               	movlb	0	; select bank0
  2141  049F  01AD               	clrf	sprintf@width
  2142  04A0  01AE               	clrf	sprintf@width+1
  2143  04A1                     l1320:	
  2144                           ;doprnt.c: 599: do {
  2145                           
  2146                           
  2147                           ;doprnt.c: 600: width *= 10;
  2148  04A1  300A               	movlw	10
  2149  04A2  00F0               	movwf	___wmul@multiplier
  2150  04A3  3000               	movlw	0
  2151  04A4  00F1               	movwf	___wmul@multiplier+1
  2152  04A5  0140               	movlb	0	; select bank0
  2153  04A6  082E               	movf	sprintf@width+1,w
  2154  04A7  00F3               	movwf	___wmul@multiplicand+1
  2155  04A8  082D               	movf	sprintf@width,w
  2156  04A9  00F2               	movwf	___wmul@multiplicand
  2157  04AA  3181  219F  3184   	fcall	___wmul
  2158  04AD  0871               	movf	?___wmul+1,w
  2159  04AE  0140               	movlb	0	; select bank0
  2160  04AF  00AE               	movwf	sprintf@width+1
  2161  04B0  0870               	movf	?___wmul,w
  2162  04B1  00AD               	movwf	sprintf@width
  2163                           
  2164                           ;doprnt.c: 601: width += *f++ - '0';
  2165  04B2  0820               	movf	sprintf@f,w
  2166  04B3  0084               	movwf	4
  2167  04B4  0821               	movf	sprintf@f+1,w
  2168  04B5  0085               	movwf	5
  2169  04B6  0800               	movf	0,w	;code access
  2170  04B7  3ED0               	addlw	208
  2171  04B8  00A4               	movwf	??_sprintf
  2172  04B9  30FF               	movlw	255
  2173  04BA  1803               	skipnc
  2174  04BB  3000               	movlw	0
  2175  04BC  00A5               	movwf	??_sprintf+1
  2176  04BD  0824               	movf	??_sprintf,w
  2177  04BE  07AD               	addwf	sprintf@width,f
  2178  04BF  0825               	movf	??_sprintf+1,w
  2179  04C0  3DAE               	addwfc	sprintf@width+1,f
  2180  04C1  3001               	movlw	1
  2181  04C2  07A0               	addwf	sprintf@f,f
  2182  04C3  3000               	movlw	0
  2183  04C4  3DA1               	addwfc	sprintf@f+1,f
  2184                           
  2185                           ;doprnt.c: 602: } while(isdigit((unsigned)*f));
  2186  04C5  0820               	movf	sprintf@f,w
  2187  04C6  0084               	movwf	4
  2188  04C7  0821               	movf	sprintf@f+1,w
  2189  04C8  0085               	movwf	5
  2190  04C9  0800               	movf	0,w	;code access
  2191  04CA  3181  2191  3184   	fcall	_isdigit
  2192  04CD  1803               	btfsc	3,0
  2193  04CE  2CA1               	goto	l1320
  2194  04CF                     l1330:	
  2195                           ;doprnt.c: 822: }
  2196                           
  2197                           ;doprnt.c: 813: continue;
  2198                           
  2199                           ;doprnt.c: 802: default:
  2200                           
  2201                           ;doprnt.c: 698: case 'i':
  2202                           ;doprnt.c: 699: break;
  2203                           
  2204                           ;doprnt.c: 697: case 'd':
  2205                           
  2206                           ;doprnt.c: 638: goto alldone;
  2207                           
  2208                           ;doprnt.c: 637: case 0:
  2209                           
  2210                           ;doprnt.c: 608: }
  2211                           ;doprnt.c: 635: switch(c = *f++) {
  2212                           
  2213  04CF  0140               	movlb	0	; select bank0
  2214  04D0  0821               	movf	sprintf@f+1,w
  2215  04D1  00A5               	movwf	??_sprintf+1
  2216  04D2  0820               	movf	sprintf@f,w
  2217  04D3  00A4               	movwf	??_sprintf
  2218  04D4  0AA0               	incf	sprintf@f,f
  2219  04D5  1903               	skipnz
  2220  04D6  0AA1               	incf	sprintf@f+1,f
  2221  04D7  0824               	movf	??_sprintf,w
  2222  04D8  0084               	movwf	4
  2223  04D9  0825               	movf	??_sprintf+1,w
  2224  04DA  0085               	movwf	5
  2225  04DB  0800               	movf	0,w	;code access
  2226  04DC  00B0               	movwf	sprintf@c
  2227                           
  2228                           ; Switch size 1, requested type "space"
  2229                           ; Number of cases is 3, Range of values is 0 to 105
  2230                           ; switch strategies available:
  2231                           ; Name         Instructions Cycles
  2232                           ; simple_byte           10     6 (average)
  2233                           ; direct_byte          218     6 (fixed)
  2234                           ; jumptable            260     6 (fixed)
  2235                           ;	Chosen strategy is simple_byte
  2236  04DD  3A00               	xorlw	0	; case 0
  2237  04DE  1903               	skipnz
  2238  04DF  2DD7               	goto	l1406
  2239  04E0  3A64               	xorlw	100	; case 100
  2240  04E1  1903               	skipnz
  2241  04E2  2CE7               	goto	l1332
  2242  04E3  3A0D               	xorlw	13	; case 105
  2243  04E4  1903               	skipnz
  2244  04E5  2CE7               	goto	l1332
  2245  04E6  2C5F               	goto	l1404
  2246  04E7                     l1332:	
  2247                           
  2248                           ;doprnt.c: 1253: {
  2249                           ;doprnt.c: 1259: val = (int)(*(int *)__va_arg((*(int **)ap), (int)0));
  2250  04E7  0140               	movlb	0	; select bank0
  2251  04E8  0828               	movf	sprintf@ap,w
  2252  04E9  0086               	movwf	6
  2253  04EA  0187               	clrf	7
  2254  04EB  3F40               	moviw [0]fsr1
  2255  04EC  00AA               	movwf	sprintf@val
  2256  04ED  3F41               	moviw [1]fsr1
  2257  04EE  00AB               	movwf	sprintf@val+1
  2258  04EF  3002               	movlw	2
  2259  04F0  00A4               	movwf	??_sprintf
  2260  04F1  0824               	movf	??_sprintf,w
  2261  04F2  07A8               	addwf	sprintf@ap,f
  2262                           
  2263                           ;doprnt.c: 1261: if((int)val < 0) {
  2264  04F3  1FAB               	btfss	sprintf@val+1,7
  2265  04F4  2CFE               	goto	l1342
  2266                           
  2267                           ;doprnt.c: 1262: flag |= 0x03;
  2268  04F5  3003               	movlw	3
  2269  04F6  00A4               	movwf	??_sprintf
  2270  04F7  0824               	movf	??_sprintf,w
  2271  04F8  04AC               	iorwf	sprintf@flag,f
  2272                           
  2273                           ;doprnt.c: 1263: val = -val;
  2274  04F9  09AA               	comf	sprintf@val,f
  2275  04FA  09AB               	comf	sprintf@val+1,f
  2276  04FB  0AAA               	incf	sprintf@val,f
  2277  04FC  1903               	skipnz
  2278  04FD  0AAB               	incf	sprintf@val+1,f
  2279  04FE                     l1342:	
  2280                           
  2281                           ;doprnt.c: 1264: }
  2282                           ;doprnt.c: 1266: }
  2283                           ;doprnt.c: 1305: for(c = 1 ; c != sizeof dpowers/sizeof dpowers[0] ; c++)
  2284  04FE  01B0               	clrf	sprintf@c
  2285  04FF  0AB0               	incf	sprintf@c,f
  2286  0500  3005               	movlw	5
  2287  0501  0630               	xorwf	sprintf@c,w
  2288  0502  1903               	btfsc	3,2
  2289  0503  2D23               	goto	l1354
  2290  0504                     l1348:	
  2291                           
  2292                           ;doprnt.c: 1306: if(val < dpowers[c])
  2293  0504  0830               	movf	sprintf@c,w
  2294  0505  00A4               	movwf	??_sprintf
  2295  0506  01A5               	clrf	??_sprintf+1
  2296  0507  35A4               	lslf	??_sprintf,f
  2297  0508  0DA5               	rlf	??_sprintf+1,f
  2298  0509  3000               	movlw	low (_dpowers| (0+32768))
  2299  050A  0724               	addwf	??_sprintf,w
  2300  050B  0084               	movwf	4
  2301  050C  3088               	movlw	high (_dpowers| (0+32768))
  2302  050D  3D25               	addwfc	??_sprintf+1,w
  2303  050E  0085               	movwf	5
  2304  050F  3F00               	moviw [0]fsr0
  2305  0510  00A6               	movwf	??_sprintf+2
  2306  0511  3F01               	moviw [1]fsr0
  2307  0512  00A7               	movwf	??_sprintf+3
  2308  0513  0827               	movf	??_sprintf+3,w
  2309  0514  022B               	subwf	sprintf@val+1,w
  2310  0515  1D03               	skipz
  2311  0516  2D19               	goto	u1155
  2312  0517  0826               	movf	??_sprintf+2,w
  2313  0518  022A               	subwf	sprintf@val,w
  2314  0519                     u1155:	
  2315  0519  1C03               	btfss	3,0
  2316  051A  2D23               	goto	l1354
  2317                           
  2318                           ;doprnt.c: 1307: break;
  2319  051B  3001               	movlw	1
  2320  051C  00A4               	movwf	??_sprintf
  2321  051D  0824               	movf	??_sprintf,w
  2322  051E  07B0               	addwf	sprintf@c,f
  2323  051F  3005               	movlw	5
  2324  0520  0630               	xorwf	sprintf@c,w
  2325  0521  1D03               	btfss	3,2
  2326  0522  2D04               	goto	l1348
  2327  0523                     l1354:	
  2328                           
  2329                           ;doprnt.c: 1345: if(width && flag & 0x03)
  2330  0523  082D               	movf	sprintf@width,w
  2331  0524  042E               	iorwf	sprintf@width+1,w
  2332  0525  1903               	btfsc	3,2
  2333  0526  2D2F               	goto	l134
  2334  0527  082C               	movf	sprintf@flag,w
  2335  0528  3903               	andlw	3
  2336  0529  1903               	btfsc	3,2
  2337  052A  2D2F               	goto	l134
  2338                           
  2339                           ;doprnt.c: 1346: width--;
  2340  052B  30FF               	movlw	255
  2341  052C  07AD               	addwf	sprintf@width,f
  2342  052D  30FF               	movlw	255
  2343  052E  3DAE               	addwfc	sprintf@width+1,f
  2344  052F                     l134:	
  2345                           
  2346                           ;doprnt.c: 1381: if(width > c)
  2347  052F  0830               	movf	sprintf@c,w
  2348  0530  00A4               	movwf	??_sprintf
  2349  0531  01A5               	clrf	??_sprintf+1
  2350  0532  1BA4               	btfsc	??_sprintf,7
  2351  0533  03A5               	decf	??_sprintf+1,f
  2352  0534  0825               	movf	??_sprintf+1,w
  2353  0535  3A80               	xorlw	128
  2354  0536  00A6               	movwf	??_sprintf+2
  2355  0537  082E               	movf	sprintf@width+1,w
  2356  0538  3A80               	xorlw	128
  2357  0539  0226               	subwf	??_sprintf+2,w
  2358  053A  1D03               	skipz
  2359  053B  2D3E               	goto	u1195
  2360  053C  082D               	movf	sprintf@width,w
  2361  053D  0224               	subwf	??_sprintf,w
  2362  053E                     u1195:	
  2363  053E  1803               	skipnc
  2364  053F  2D4B               	goto	l1362
  2365                           
  2366                           ;doprnt.c: 1382: width -= c;
  2367  0540  0140               	movlb	0	; select bank0
  2368  0541  0830               	movf	sprintf@c,w
  2369  0542  00A4               	movwf	??_sprintf
  2370  0543  01A5               	clrf	??_sprintf+1
  2371  0544  1BA4               	btfsc	??_sprintf,7
  2372  0545  03A5               	decf	??_sprintf+1,f
  2373  0546  0824               	movf	??_sprintf,w
  2374  0547  02AD               	subwf	sprintf@width,f
  2375  0548  0825               	movf	??_sprintf+1,w
  2376  0549  3BAE               	subwfb	sprintf@width+1,f
  2377  054A  2D4E               	goto	l1364
  2378  054B                     l1362:	
  2379                           
  2380                           ;doprnt.c: 1383: else
  2381                           ;doprnt.c: 1384: width = 0;
  2382  054B  0140               	movlb	0	; select bank0
  2383  054C  01AD               	clrf	sprintf@width
  2384  054D  01AE               	clrf	sprintf@width+1
  2385  054E                     l1364:	
  2386                           
  2387                           ;doprnt.c: 1387: if(flag & 0x04) {
  2388  054E  1D2C               	btfss	sprintf@flag,2
  2389  054F  2D73               	goto	l1380
  2390                           
  2391                           ;doprnt.c: 1392: if(flag & 0x03)
  2392  0550  082C               	movf	sprintf@flag,w
  2393  0551  3903               	andlw	3
  2394  0552  1903               	btfsc	3,2
  2395  0553  2D5F               	goto	l1372
  2396                           
  2397                           ;doprnt.c: 1393: ((*sp++ = ('-')));
  2398  0554  302D               	movlw	45
  2399  0555  00A4               	movwf	??_sprintf
  2400  0556  082F               	movf	sprintf@sp,w
  2401  0557  0086               	movwf	6
  2402  0558  0187               	clrf	7
  2403  0559  0824               	movf	??_sprintf,w
  2404  055A  0081               	movwf	1
  2405  055B  3001               	movlw	1
  2406  055C  00A4               	movwf	??_sprintf
  2407  055D  0824               	movf	??_sprintf,w
  2408  055E  07AF               	addwf	sprintf@sp,f
  2409  055F                     l1372:	
  2410                           
  2411                           ;doprnt.c: 1415: if(width)
  2412  055F  082D               	movf	sprintf@width,w
  2413  0560  042E               	iorwf	sprintf@width+1,w
  2414  0561  1903               	btfsc	3,2
  2415  0562  2D99               	goto	l1394
  2416                           
  2417                           ;doprnt.c: 1417: ((*sp++ = ('0')));
  2418                           
  2419                           ;doprnt.c: 1416: do
  2420  0563  3030               	movlw	48
  2421  0564  00A4               	movwf	??_sprintf
  2422  0565  082F               	movf	sprintf@sp,w
  2423  0566  0086               	movwf	6
  2424  0567  0187               	clrf	7
  2425  0568  0824               	movf	??_sprintf,w
  2426  0569  0081               	movwf	1
  2427  056A  3001               	movlw	1
  2428  056B  00A4               	movwf	??_sprintf
  2429  056C  0824               	movf	??_sprintf,w
  2430  056D  07AF               	addwf	sprintf@sp,f
  2431                           
  2432                           ;doprnt.c: 1418: while(--width);
  2433  056E  30FF               	movlw	255
  2434  056F  07AD               	addwf	sprintf@width,f
  2435  0570  30FF               	movlw	255
  2436  0571  3DAE               	addwfc	sprintf@width+1,f
  2437  0572  2D5F               	goto	l1372
  2438  0573                     l1380:	
  2439                           ;doprnt.c: 1420: } else
  2440                           
  2441                           
  2442                           ;doprnt.c: 1422: {
  2443                           ;doprnt.c: 1424: if(width
  2444                           ;doprnt.c: 1428: )
  2445  0573  082D               	movf	sprintf@width,w
  2446  0574  042E               	iorwf	sprintf@width+1,w
  2447  0575  1903               	btfsc	3,2
  2448  0576  2D8A               	goto	l1388
  2449  0577                     l1382:	
  2450                           ;doprnt.c: 1429: do
  2451                           
  2452                           
  2453                           ;doprnt.c: 1430: ((*sp++ = (' ')));
  2454  0577  3020               	movlw	32
  2455  0578  00A4               	movwf	??_sprintf
  2456  0579  082F               	movf	sprintf@sp,w
  2457  057A  0086               	movwf	6
  2458  057B  0187               	clrf	7
  2459  057C  0824               	movf	??_sprintf,w
  2460  057D  0081               	movwf	1
  2461  057E  3001               	movlw	1
  2462  057F  00A4               	movwf	??_sprintf
  2463  0580  0824               	movf	??_sprintf,w
  2464  0581  07AF               	addwf	sprintf@sp,f
  2465                           
  2466                           ;doprnt.c: 1431: while(--width);
  2467  0582  30FF               	movlw	255
  2468  0583  07AD               	addwf	sprintf@width,f
  2469  0584  30FF               	movlw	255
  2470  0585  3DAE               	addwfc	sprintf@width+1,f
  2471  0586  082D               	movf	sprintf@width,w
  2472  0587  042E               	iorwf	sprintf@width+1,w
  2473  0588  1D03               	btfss	3,2
  2474  0589  2D77               	goto	l1382
  2475  058A                     l1388:	
  2476                           
  2477                           ;doprnt.c: 1438: if(flag & 0x03)
  2478  058A  082C               	movf	sprintf@flag,w
  2479  058B  3903               	andlw	3
  2480  058C  1903               	btfsc	3,2
  2481  058D  2D99               	goto	l1394
  2482                           
  2483                           ;doprnt.c: 1439: ((*sp++ = ('-')));
  2484  058E  302D               	movlw	45
  2485  058F  00A4               	movwf	??_sprintf
  2486  0590  082F               	movf	sprintf@sp,w
  2487  0591  0086               	movwf	6
  2488  0592  0187               	clrf	7
  2489  0593  0824               	movf	??_sprintf,w
  2490  0594  0081               	movwf	1
  2491  0595  3001               	movlw	1
  2492  0596  00A4               	movwf	??_sprintf
  2493  0597  0824               	movf	??_sprintf,w
  2494  0598  07AF               	addwf	sprintf@sp,f
  2495  0599                     l1394:	
  2496                           
  2497                           ;doprnt.c: 1469: }
  2498                           ;doprnt.c: 1472: prec = c;
  2499  0599  0830               	movf	sprintf@c,w
  2500  059A  00A4               	movwf	??_sprintf
  2501  059B  0824               	movf	??_sprintf,w
  2502  059C  00A9               	movwf	sprintf@prec
  2503  059D                     l1402:	
  2504                           ;doprnt.c: 1474: while(prec--) {
  2505                           
  2506  059D  30FF               	movlw	255
  2507  059E  00A4               	movwf	??_sprintf
  2508  059F  0824               	movf	??_sprintf,w
  2509  05A0  07A9               	addwf	sprintf@prec,f
  2510  05A1  0A29               	incf	sprintf@prec,w
  2511  05A2  1903               	btfsc	3,2
  2512  05A3  2C5F               	goto	l1404
  2513                           
  2514                           ;doprnt.c: 1478: {
  2515                           ;doprnt.c: 1489: c = (val / dpowers[prec]) % 10 + '0';
  2516  05A4  300A               	movlw	10
  2517  05A5  00F8               	movwf	___lwmod@divisor
  2518  05A6  3000               	movlw	0
  2519  05A7  00F9               	movwf	___lwmod@divisor+1
  2520  05A8  0829               	movf	sprintf@prec,w
  2521  05A9  00A4               	movwf	??_sprintf
  2522  05AA  01A5               	clrf	??_sprintf+1
  2523  05AB  35A4               	lslf	??_sprintf,f
  2524  05AC  0DA5               	rlf	??_sprintf+1,f
  2525  05AD  3000               	movlw	low (_dpowers| (0+32768))
  2526  05AE  0724               	addwf	??_sprintf,w
  2527  05AF  0084               	movwf	4
  2528  05B0  3088               	movlw	high (_dpowers| (0+32768))
  2529  05B1  3D25               	addwfc	??_sprintf+1,w
  2530  05B2  0085               	movwf	5
  2531  05B3  3F00               	moviw [0]fsr0
  2532  05B4  00F0               	movwf	___lwdiv@divisor
  2533  05B5  3F01               	moviw [1]fsr0
  2534  05B6  00F1               	movwf	___lwdiv@divisor+1
  2535  05B7  082B               	movf	sprintf@val+1,w
  2536  05B8  00F3               	movwf	___lwdiv@dividend+1
  2537  05B9  082A               	movf	sprintf@val,w
  2538  05BA  00F2               	movwf	___lwdiv@dividend
  2539  05BB  3181  21E6  3184   	fcall	___lwdiv
  2540  05BE  0871               	movf	?___lwdiv+1,w
  2541  05BF  00FB               	movwf	___lwmod@dividend+1
  2542  05C0  0870               	movf	?___lwdiv,w
  2543  05C1  00FA               	movwf	___lwmod@dividend
  2544  05C2  3181  21BA  3184   	fcall	___lwmod
  2545  05C5  0878               	movf	?___lwmod,w
  2546  05C6  3E30               	addlw	48
  2547  05C7  0140               	movlb	0	; select bank0
  2548  05C8  00A6               	movwf	??_sprintf+2
  2549  05C9  0826               	movf	??_sprintf+2,w
  2550  05CA  00B0               	movwf	sprintf@c
  2551                           
  2552                           ;doprnt.c: 1523: }
  2553                           ;doprnt.c: 1524: ((*sp++ = (c)));
  2554  05CB  0830               	movf	sprintf@c,w
  2555  05CC  00A4               	movwf	??_sprintf
  2556  05CD  082F               	movf	sprintf@sp,w
  2557  05CE  0086               	movwf	6
  2558  05CF  0187               	clrf	7
  2559  05D0  0824               	movf	??_sprintf,w
  2560  05D1  0081               	movwf	1
  2561  05D2  3001               	movlw	1
  2562  05D3  00A4               	movwf	??_sprintf
  2563  05D4  0824               	movf	??_sprintf,w
  2564  05D5  07AF               	addwf	sprintf@sp,f
  2565  05D6  2D9D               	goto	l1402
  2566  05D7                     l1406:	
  2567                           ;doprnt.c: 1525: }
  2568                           ;doprnt.c: 1533: }
  2569                           ;doprnt.c: 1535: alldone:
  2570                           
  2571                           
  2572                           ;doprnt.c: 1538: *sp = 0;
  2573  05D7  0140               	movlb	0	; select bank0
  2574  05D8  082F               	movf	sprintf@sp,w
  2575  05D9  0086               	movwf	6
  2576  05DA  0187               	clrf	7
  2577  05DB  0181               	clrf	1
  2578  05DC  0008               	return
  2579  05DD                     __end_of_sprintf:	
  2580                           ;doprnt.c: 1540: return 0;
  2581                           ;	Return value of _sprintf is never used
  2582                           
  2583                           
  2584                           	psect	text2
  2585  0191                     __ptext2:	
  2586 ;; *************** function _isdigit *****************
  2587 ;; Defined at:
  2588 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\isdigit.c"
  2589 ;; Parameters:    Size  Location     Type
  2590 ;;  c               1    wreg     unsigned char 
  2591 ;; Auto vars:     Size  Location     Type
  2592 ;;  c               1    1[COMMON] unsigned char 
  2593 ;; Return value:  Size  Location     Type
  2594 ;;		None               void
  2595 ;; Registers used:
  2596 ;;		wreg, status,2, status,0
  2597 ;; Tracked objects:
  2598 ;;		On entry : 0/0
  2599 ;;		On exit  : 0/0
  2600 ;;		Unchanged: 0/0
  2601 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
  2602 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  2603 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  2604 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  2605 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  2606 ;;Total ram usage:        2 bytes
  2607 ;; Hardware stack levels used:    1
  2608 ;; This function calls:
  2609 ;;		Nothing
  2610 ;; This function is called by:
  2611 ;;		_sprintf
  2612 ;; This function uses a non-reentrant model
  2613 ;;
  2614                           
  2615                           
  2616                           ;psect for function _isdigit
  2617  0191                     _isdigit:	
  2618                           
  2619                           ;incstack = 0
  2620                           ; Regs used in _isdigit: [wreg+status,2+status,0]
  2621                           ;isdigit@c stored from wreg
  2622  0191  00F1               	movwf	isdigit@c
  2623  0192  01F0               	clrf	_isdigit$507
  2624  0193  303A               	movlw	58
  2625  0194  0271               	subwf	isdigit@c,w
  2626  0195  1803               	skipnc
  2627  0196  299D               	goto	l1140
  2628  0197  3030               	movlw	48
  2629  0198  0271               	subwf	isdigit@c,w
  2630  0199  1C03               	skipc
  2631  019A  299D               	goto	l1140
  2632  019B  01F0               	clrf	_isdigit$507
  2633  019C  0AF0               	incf	_isdigit$507,f
  2634  019D                     l1140:	
  2635  019D  0C70               	rrf	_isdigit$507,w
  2636  019E  0008               	return
  2637  019F                     __end_of_isdigit:	
  2638                           
  2639                           	psect	text3
  2640  019F                     __ptext3:	
  2641 ;; *************** function ___wmul *****************
  2642 ;; Defined at:
  2643 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\Umul16.c"
  2644 ;; Parameters:    Size  Location     Type
  2645 ;;  multiplier      2    0[COMMON] unsigned int 
  2646 ;;  multiplicand    2    2[COMMON] unsigned int 
  2647 ;; Auto vars:     Size  Location     Type
  2648 ;;  product         2    4[COMMON] unsigned int 
  2649 ;; Return value:  Size  Location     Type
  2650 ;;                  2    0[COMMON] unsigned int 
  2651 ;; Registers used:
  2652 ;;		wreg, status,2, status,0
  2653 ;; Tracked objects:
  2654 ;;		On entry : 0/0
  2655 ;;		On exit  : 0/0
  2656 ;;		Unchanged: 0/0
  2657 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
  2658 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  2659 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  2660 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  2661 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  2662 ;;Total ram usage:        6 bytes
  2663 ;; Hardware stack levels used:    1
  2664 ;; This function calls:
  2665 ;;		Nothing
  2666 ;; This function is called by:
  2667 ;;		_sprintf
  2668 ;; This function uses a non-reentrant model
  2669 ;;
  2670                           
  2671                           
  2672                           ;psect for function ___wmul
  2673  019F                     ___wmul:	
  2674                           
  2675                           ;incstack = 0
  2676                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  2677  019F  01F4               	clrf	___wmul@product
  2678  01A0  01F5               	clrf	___wmul@product+1
  2679  01A1                     l1146:	
  2680  01A1  1C70               	btfss	___wmul@multiplier,0
  2681  01A2  29A7               	goto	l233
  2682  01A3  0872               	movf	___wmul@multiplicand,w
  2683  01A4  07F4               	addwf	___wmul@product,f
  2684  01A5  0873               	movf	___wmul@multiplicand+1,w
  2685  01A6  3DF5               	addwfc	___wmul@product+1,f
  2686  01A7                     l233:	
  2687  01A7  3001               	movlw	1
  2688  01A8                     u905:	
  2689  01A8  35F2               	lslf	___wmul@multiplicand,f
  2690  01A9  0DF3               	rlf	___wmul@multiplicand+1,f
  2691  01AA  0B89               	decfsz	9,f
  2692  01AB  29A8               	goto	u905
  2693  01AC  3001               	movlw	1
  2694  01AD                     u915:	
  2695  01AD  36F1               	lsrf	___wmul@multiplier+1,f
  2696  01AE  0CF0               	rrf	___wmul@multiplier,f
  2697  01AF  0B89               	decfsz	9,f
  2698  01B0  29AD               	goto	u915
  2699  01B1  0870               	movf	___wmul@multiplier,w
  2700  01B2  0471               	iorwf	___wmul@multiplier+1,w
  2701  01B3  1D03               	btfss	3,2
  2702  01B4  29A1               	goto	l1146
  2703  01B5  0875               	movf	___wmul@product+1,w
  2704  01B6  00F1               	movwf	?___wmul+1
  2705  01B7  0874               	movf	___wmul@product,w
  2706  01B8  00F0               	movwf	?___wmul
  2707  01B9  0008               	return
  2708  01BA                     __end_of___wmul:	
  2709                           
  2710                           	psect	text4
  2711  01BA                     __ptext4:	
  2712 ;; *************** function ___lwmod *****************
  2713 ;; Defined at:
  2714 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\lwmod.c"
  2715 ;; Parameters:    Size  Location     Type
  2716 ;;  divisor         2    8[COMMON] unsigned int 
  2717 ;;  dividend        2   10[COMMON] unsigned int 
  2718 ;; Auto vars:     Size  Location     Type
  2719 ;;  counter         1   13[COMMON] unsigned char 
  2720 ;; Return value:  Size  Location     Type
  2721 ;;                  2    8[COMMON] unsigned int 
  2722 ;; Registers used:
  2723 ;;		wreg, status,2, status,0
  2724 ;; Tracked objects:
  2725 ;;		On entry : 0/0
  2726 ;;		On exit  : 0/0
  2727 ;;		Unchanged: 0/0
  2728 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
  2729 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  2730 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  2731 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  2732 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  2733 ;;Total ram usage:        6 bytes
  2734 ;; Hardware stack levels used:    1
  2735 ;; This function calls:
  2736 ;;		Nothing
  2737 ;; This function is called by:
  2738 ;;		_sprintf
  2739 ;; This function uses a non-reentrant model
  2740 ;;
  2741                           
  2742                           
  2743                           ;psect for function ___lwmod
  2744  01BA                     ___lwmod:	
  2745                           
  2746                           ;incstack = 0
  2747                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  2748  01BA  0878               	movf	___lwmod@divisor,w
  2749  01BB  0479               	iorwf	___lwmod@divisor+1,w
  2750  01BC  1903               	btfsc	3,2
  2751  01BD  29E1               	goto	l1202
  2752  01BE  01FD               	clrf	___lwmod@counter
  2753  01BF  0AFD               	incf	___lwmod@counter,f
  2754  01C0                     l1192:	
  2755  01C0  1BF9               	btfsc	___lwmod@divisor+1,7
  2756  01C1  29CC               	goto	l1194
  2757  01C2  3001               	movlw	1
  2758  01C3                     u1015:	
  2759  01C3  35F8               	lslf	___lwmod@divisor,f
  2760  01C4  0DF9               	rlf	___lwmod@divisor+1,f
  2761  01C5  0B89               	decfsz	9,f
  2762  01C6  29C3               	goto	u1015
  2763  01C7  3001               	movlw	1
  2764  01C8  00FC               	movwf	??___lwmod
  2765  01C9  087C               	movf	??___lwmod,w
  2766  01CA  07FD               	addwf	___lwmod@counter,f
  2767  01CB  29C0               	goto	l1192
  2768  01CC                     l1194:	
  2769  01CC  0879               	movf	___lwmod@divisor+1,w
  2770  01CD  027B               	subwf	___lwmod@dividend+1,w
  2771  01CE  1D03               	skipz
  2772  01CF  29D2               	goto	u1035
  2773  01D0  0878               	movf	___lwmod@divisor,w
  2774  01D1  027A               	subwf	___lwmod@dividend,w
  2775  01D2                     u1035:	
  2776  01D2  1C03               	skipc
  2777  01D3  29D8               	goto	l1198
  2778  01D4  0878               	movf	___lwmod@divisor,w
  2779  01D5  02FA               	subwf	___lwmod@dividend,f
  2780  01D6  0879               	movf	___lwmod@divisor+1,w
  2781  01D7  3BFB               	subwfb	___lwmod@dividend+1,f
  2782  01D8                     l1198:	
  2783  01D8  3001               	movlw	1
  2784  01D9                     u1045:	
  2785  01D9  36F9               	lsrf	___lwmod@divisor+1,f
  2786  01DA  0CF8               	rrf	___lwmod@divisor,f
  2787  01DB  0B89               	decfsz	9,f
  2788  01DC  29D9               	goto	u1045
  2789  01DD  3001               	movlw	1
  2790  01DE  02FD               	subwf	___lwmod@counter,f
  2791  01DF  1D03               	btfss	3,2
  2792  01E0  29CC               	goto	l1194
  2793  01E1                     l1202:	
  2794  01E1  087B               	movf	___lwmod@dividend+1,w
  2795  01E2  00F9               	movwf	?___lwmod+1
  2796  01E3  087A               	movf	___lwmod@dividend,w
  2797  01E4  00F8               	movwf	?___lwmod
  2798  01E5  0008               	return
  2799  01E6                     __end_of___lwmod:	
  2800                           
  2801                           	psect	text5
  2802  01E6                     __ptext5:	
  2803 ;; *************** function ___lwdiv *****************
  2804 ;; Defined at:
  2805 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\lwdiv.c"
  2806 ;; Parameters:    Size  Location     Type
  2807 ;;  divisor         2    0[COMMON] unsigned int 
  2808 ;;  dividend        2    2[COMMON] unsigned int 
  2809 ;; Auto vars:     Size  Location     Type
  2810 ;;  quotient        2    5[COMMON] unsigned int 
  2811 ;;  counter         1    7[COMMON] unsigned char 
  2812 ;; Return value:  Size  Location     Type
  2813 ;;                  2    0[COMMON] unsigned int 
  2814 ;; Registers used:
  2815 ;;		wreg, status,2, status,0
  2816 ;; Tracked objects:
  2817 ;;		On entry : 0/0
  2818 ;;		On exit  : 0/0
  2819 ;;		Unchanged: 0/0
  2820 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
  2821 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  2822 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  2823 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  2824 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  2825 ;;Total ram usage:        8 bytes
  2826 ;; Hardware stack levels used:    1
  2827 ;; This function calls:
  2828 ;;		Nothing
  2829 ;; This function is called by:
  2830 ;;		_sprintf
  2831 ;; This function uses a non-reentrant model
  2832 ;;
  2833                           
  2834                           
  2835                           ;psect for function ___lwdiv
  2836  01E6                     ___lwdiv:	
  2837                           
  2838                           ;incstack = 0
  2839                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  2840  01E6  01F5               	clrf	___lwdiv@quotient
  2841  01E7  01F6               	clrf	___lwdiv@quotient+1
  2842  01E8  0870               	movf	___lwdiv@divisor,w
  2843  01E9  0471               	iorwf	___lwdiv@divisor+1,w
  2844  01EA  1903               	btfsc	3,2
  2845  01EB  2A15               	goto	l1180
  2846  01EC  01F7               	clrf	___lwdiv@counter
  2847  01ED  0AF7               	incf	___lwdiv@counter,f
  2848  01EE                     l1168:	
  2849  01EE  1BF1               	btfsc	___lwdiv@divisor+1,7
  2850  01EF  29FA               	goto	l1170
  2851  01F0  3001               	movlw	1
  2852  01F1                     u945:	
  2853  01F1  35F0               	lslf	___lwdiv@divisor,f
  2854  01F2  0DF1               	rlf	___lwdiv@divisor+1,f
  2855  01F3  0B89               	decfsz	9,f
  2856  01F4  29F1               	goto	u945
  2857  01F5  3001               	movlw	1
  2858  01F6  00F4               	movwf	??___lwdiv
  2859  01F7  0874               	movf	??___lwdiv,w
  2860  01F8  07F7               	addwf	___lwdiv@counter,f
  2861  01F9  29EE               	goto	l1168
  2862  01FA                     l1170:	
  2863  01FA  3001               	movlw	1
  2864  01FB                     u965:	
  2865  01FB  35F5               	lslf	___lwdiv@quotient,f
  2866  01FC  0DF6               	rlf	___lwdiv@quotient+1,f
  2867  01FD  0B89               	decfsz	9,f
  2868  01FE  29FB               	goto	u965
  2869  01FF  0871               	movf	___lwdiv@divisor+1,w
  2870  0200  0273               	subwf	___lwdiv@dividend+1,w
  2871  0201  1D03               	skipz
  2872  0202  2A05               	goto	u975
  2873  0203  0870               	movf	___lwdiv@divisor,w
  2874  0204  0272               	subwf	___lwdiv@dividend,w
  2875  0205                     u975:	
  2876  0205  1C03               	skipc
  2877  0206  2A0C               	goto	l1176
  2878  0207  0870               	movf	___lwdiv@divisor,w
  2879  0208  02F2               	subwf	___lwdiv@dividend,f
  2880  0209  0871               	movf	___lwdiv@divisor+1,w
  2881  020A  3BF3               	subwfb	___lwdiv@dividend+1,f
  2882  020B  1475               	bsf	___lwdiv@quotient,0
  2883  020C                     l1176:	
  2884  020C  3001               	movlw	1
  2885  020D                     u985:	
  2886  020D  36F1               	lsrf	___lwdiv@divisor+1,f
  2887  020E  0CF0               	rrf	___lwdiv@divisor,f
  2888  020F  0B89               	decfsz	9,f
  2889  0210  2A0D               	goto	u985
  2890  0211  3001               	movlw	1
  2891  0212  02F7               	subwf	___lwdiv@counter,f
  2892  0213  1D03               	btfss	3,2
  2893  0214  29FA               	goto	l1170
  2894  0215                     l1180:	
  2895  0215  0876               	movf	___lwdiv@quotient+1,w
  2896  0216  00F1               	movwf	?___lwdiv+1
  2897  0217  0875               	movf	___lwdiv@quotient,w
  2898  0218  00F0               	movwf	?___lwdiv
  2899  0219  0008               	return
  2900  021A                     __end_of___lwdiv:	
  2901                           
  2902                           	psect	text6
  2903  021A                     __ptext6:	
  2904 ;; *************** function _Lcd_Out2 *****************
  2905 ;; Defined at:
  2906 ;;		line 115 in file "flex_lcd.h"
  2907 ;; Parameters:    Size  Location     Type
  2908 ;;  y               1    wreg     unsigned char 
  2909 ;;  x               1    3[COMMON] unsigned char 
  2910 ;;  buffer          1    4[COMMON] PTR unsigned char 
  2911 ;;		 -> main@buffer1(16), 
  2912 ;; Auto vars:     Size  Location     Type
  2913 ;;  y               1    6[COMMON] unsigned char 
  2914 ;;  data            1    7[COMMON] unsigned char 
  2915 ;; Return value:  Size  Location     Type
  2916 ;;                  1    wreg      void 
  2917 ;; Registers used:
  2918 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2919 ;; Tracked objects:
  2920 ;;		On entry : 0/0
  2921 ;;		On exit  : 0/0
  2922 ;;		Unchanged: 0/0
  2923 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
  2924 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  2925 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  2926 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  2927 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  2928 ;;Total ram usage:        5 bytes
  2929 ;; Hardware stack levels used:    1
  2930 ;; Hardware stack levels required when called:    1
  2931 ;; This function calls:
  2932 ;;		_Lcd_Chr_CP
  2933 ;;		_Lcd_Cmd
  2934 ;; This function is called by:
  2935 ;;		_main
  2936 ;; This function uses a non-reentrant model
  2937 ;;
  2938                           
  2939                           
  2940                           ;psect for function _Lcd_Out2
  2941  021A                     _Lcd_Out2:	
  2942                           
  2943                           ;incstack = 0
  2944                           ; Regs used in _Lcd_Out2: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  2945                           ;Lcd_Out2@y stored from wreg
  2946  021A  00F6               	movwf	Lcd_Out2@y
  2947                           
  2948                           ;flex_lcd.h: 117: unsigned char data;
  2949                           ;flex_lcd.h: 118: switch (y)
  2950  021B  2A2B               	goto	l1290
  2951  021C                     l1280:	
  2952                           ;flex_lcd.h: 119: {
  2953                           ;flex_lcd.h: 120: case 1: data = 128 + x; break;
  2954                           
  2955  021C  0873               	movf	Lcd_Out2@x,w
  2956  021D  3E80               	addlw	128
  2957  021E  2A27               	goto	L4
  2958  021F                     l1282:	
  2959                           ;flex_lcd.h: 121: case 2: data = 192 + x; break;
  2960                           
  2961  021F  0873               	movf	Lcd_Out2@x,w
  2962  0220  3EC0               	addlw	192
  2963  0221  2A27               	goto	L4
  2964  0222                     l1284:	
  2965                           ;flex_lcd.h: 122: case 3: data = 148 + x; break;
  2966                           
  2967  0222  0873               	movf	Lcd_Out2@x,w
  2968  0223  3E94               	addlw	148
  2969  0224  2A27               	goto	L4
  2970  0225                     l1286:	
  2971                           ;flex_lcd.h: 123: case 4: data = 212 + x; break;
  2972                           
  2973  0225  0873               	movf	Lcd_Out2@x,w
  2974  0226  3ED4               	addlw	212
  2975  0227                     L4:	
  2976  0227  00F5               	movwf	??_Lcd_Out2
  2977  0228  0875               	movf	??_Lcd_Out2,w
  2978  0229  00F7               	movwf	Lcd_Out2@data
  2979                           
  2980                           ;flex_lcd.h: 125: }
  2981                           
  2982                           ;flex_lcd.h: 124: default: break;
  2983  022A  2A39               	goto	l1292
  2984  022B                     l1290:	
  2985  022B  0876               	movf	Lcd_Out2@y,w
  2986                           
  2987                           ; Switch size 1, requested type "space"
  2988                           ; Number of cases is 4, Range of values is 1 to 4
  2989                           ; switch strategies available:
  2990                           ; Name         Instructions Cycles
  2991                           ; simple_byte           13     7 (average)
  2992                           ; direct_byte           17     9 (fixed)
  2993                           ; jumptable            263     9 (fixed)
  2994                           ;	Chosen strategy is simple_byte
  2995  022C  3A01               	xorlw	1	; case 1
  2996  022D  1903               	skipnz
  2997  022E  2A1C               	goto	l1280
  2998  022F  3A03               	xorlw	3	; case 2
  2999  0230  1903               	skipnz
  3000  0231  2A1F               	goto	l1282
  3001  0232  3A01               	xorlw	1	; case 3
  3002  0233  1903               	skipnz
  3003  0234  2A22               	goto	l1284
  3004  0235  3A07               	xorlw	7	; case 4
  3005  0236  1903               	skipnz
  3006  0237  2A25               	goto	l1286
  3007  0238  2A39               	goto	l1292
  3008  0239                     l1292:	
  3009                           
  3010                           ;flex_lcd.h: 126: Lcd_Cmd(data);
  3011  0239  0877               	movf	Lcd_Out2@data,w
  3012  023A  3182  2286  3182   	fcall	_Lcd_Cmd
  3013  023D                     l1298:	
  3014                           ;flex_lcd.h: 127: while(*buffer)
  3015                           
  3016  023D  0874               	movf	Lcd_Out2@buffer,w
  3017  023E  0086               	movwf	6
  3018  023F  0187               	clrf	7
  3019  0240  0801               	movf	1,w
  3020  0241  1903               	btfsc	3,2
  3021  0242  0008               	return
  3022                           
  3023                           ;flex_lcd.h: 128: {
  3024                           ;flex_lcd.h: 129: Lcd_Chr_CP(*buffer);
  3025  0243  0874               	movf	Lcd_Out2@buffer,w
  3026  0244  0086               	movwf	6
  3027  0245  0187               	clrf	7
  3028  0246  0801               	movf	1,w
  3029  0247  3183  2319  3182   	fcall	_Lcd_Chr_CP
  3030                           
  3031                           ;flex_lcd.h: 130: buffer++;
  3032  024A  3001               	movlw	1
  3033  024B  00F5               	movwf	??_Lcd_Out2
  3034  024C  0875               	movf	??_Lcd_Out2,w
  3035  024D  07F4               	addwf	Lcd_Out2@buffer,f
  3036  024E  2A3D               	goto	l1298
  3037  024F                     __end_of_Lcd_Out2:	
  3038                           ;flex_lcd.h: 131: }
  3039                           ;flex_lcd.h: 132: return;
  3040                           
  3041                           
  3042                           	psect	text7
  3043  024F                     __ptext7:	
  3044 ;; *************** function _Lcd_Out *****************
  3045 ;; Defined at:
  3046 ;;		line 94 in file "flex_lcd.h"
  3047 ;; Parameters:    Size  Location     Type
  3048 ;;  y               1    wreg     unsigned char 
  3049 ;;  x               1    3[COMMON] unsigned char 
  3050 ;;  buffer          2    4[COMMON] PTR const unsigned char 
  3051 ;;		 -> STR_16(17), STR_15(17), STR_14(17), STR_13(17), 
  3052 ;;		 -> STR_12(17), STR_11(17), STR_10(17), STR_9(17), 
  3053 ;;		 -> STR_8(17), STR_7(17), STR_6(17), STR_5(17), 
  3054 ;;		 -> STR_4(17), STR_3(17), STR_2(17), STR_1(17), 
  3055 ;; Auto vars:     Size  Location     Type
  3056 ;;  y               1    7[COMMON] unsigned char 
  3057 ;;  data            1    8[COMMON] unsigned char 
  3058 ;; Return value:  Size  Location     Type
  3059 ;;                  1    wreg      void 
  3060 ;; Registers used:
  3061 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  3062 ;; Tracked objects:
  3063 ;;		On entry : 0/0
  3064 ;;		On exit  : 0/0
  3065 ;;		Unchanged: 0/0
  3066 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
  3067 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  3068 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  3069 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  3070 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  3071 ;;Total ram usage:        6 bytes
  3072 ;; Hardware stack levels used:    1
  3073 ;; Hardware stack levels required when called:    1
  3074 ;; This function calls:
  3075 ;;		_Lcd_Chr_CP
  3076 ;;		_Lcd_Cmd
  3077 ;; This function is called by:
  3078 ;;		_main
  3079 ;; This function uses a non-reentrant model
  3080 ;;
  3081                           
  3082                           
  3083                           ;psect for function _Lcd_Out
  3084  024F                     _Lcd_Out:	
  3085                           
  3086                           ;incstack = 0
  3087                           ; Regs used in _Lcd_Out: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  3088                           ;Lcd_Out@y stored from wreg
  3089  024F  00F7               	movwf	Lcd_Out@y
  3090                           
  3091                           ;flex_lcd.h: 96: unsigned char data;
  3092                           ;flex_lcd.h: 97: switch (y)
  3093  0250  2A60               	goto	l1268
  3094  0251                     l1258:	
  3095                           ;flex_lcd.h: 98: {
  3096                           ;flex_lcd.h: 99: case 1: data = 128 + x; break;
  3097                           
  3098  0251  0873               	movf	Lcd_Out@x,w
  3099  0252  3E80               	addlw	128
  3100  0253  2A5C               	goto	L7
  3101  0254                     l1260:	
  3102                           ;flex_lcd.h: 100: case 2: data = 192 + x; break;
  3103                           
  3104  0254  0873               	movf	Lcd_Out@x,w
  3105  0255  3EC0               	addlw	192
  3106  0256  2A5C               	goto	L7
  3107  0257                     l1262:	
  3108                           ;flex_lcd.h: 101: case 3: data = 148 + x; break;
  3109                           
  3110  0257  0873               	movf	Lcd_Out@x,w
  3111  0258  3E94               	addlw	148
  3112  0259  2A5C               	goto	L7
  3113  025A                     l1264:	
  3114                           ;flex_lcd.h: 102: case 4: data = 212 + x; break;
  3115                           
  3116  025A  0873               	movf	Lcd_Out@x,w
  3117  025B  3ED4               	addlw	212
  3118  025C                     L7:	
  3119  025C  00F6               	movwf	??_Lcd_Out
  3120  025D  0876               	movf	??_Lcd_Out,w
  3121  025E  00F8               	movwf	Lcd_Out@data
  3122                           
  3123                           ;flex_lcd.h: 104: }
  3124                           
  3125                           ;flex_lcd.h: 103: default: break;
  3126  025F  2A6E               	goto	l1270
  3127  0260                     l1268:	
  3128  0260  0877               	movf	Lcd_Out@y,w
  3129                           
  3130                           ; Switch size 1, requested type "space"
  3131                           ; Number of cases is 4, Range of values is 1 to 4
  3132                           ; switch strategies available:
  3133                           ; Name         Instructions Cycles
  3134                           ; simple_byte           13     7 (average)
  3135                           ; direct_byte           17     9 (fixed)
  3136                           ; jumptable            263     9 (fixed)
  3137                           ;	Chosen strategy is simple_byte
  3138  0261  3A01               	xorlw	1	; case 1
  3139  0262  1903               	skipnz
  3140  0263  2A51               	goto	l1258
  3141  0264  3A03               	xorlw	3	; case 2
  3142  0265  1903               	skipnz
  3143  0266  2A54               	goto	l1260
  3144  0267  3A01               	xorlw	1	; case 3
  3145  0268  1903               	skipnz
  3146  0269  2A57               	goto	l1262
  3147  026A  3A07               	xorlw	7	; case 4
  3148  026B  1903               	skipnz
  3149  026C  2A5A               	goto	l1264
  3150  026D  2A6E               	goto	l1270
  3151  026E                     l1270:	
  3152                           
  3153                           ;flex_lcd.h: 105: Lcd_Cmd(data);
  3154  026E  0878               	movf	Lcd_Out@data,w
  3155  026F  3182  2286  3182   	fcall	_Lcd_Cmd
  3156  0272                     l1276:	
  3157                           ;flex_lcd.h: 106: while(*buffer)
  3158                           
  3159  0272  0874               	movf	Lcd_Out@buffer,w
  3160  0273  0084               	movwf	4
  3161  0274  0875               	movf	Lcd_Out@buffer+1,w
  3162  0275  0085               	movwf	5
  3163  0276  0012               	moviw fsr0++
  3164  0277  1903               	btfsc	3,2
  3165  0278  0008               	return
  3166                           
  3167                           ;flex_lcd.h: 107: {
  3168                           ;flex_lcd.h: 108: Lcd_Chr_CP(*buffer);
  3169  0279  0874               	movf	Lcd_Out@buffer,w
  3170  027A  0084               	movwf	4
  3171  027B  0875               	movf	Lcd_Out@buffer+1,w
  3172  027C  0085               	movwf	5
  3173  027D  0800               	movf	0,w	;code access
  3174  027E  3183  2319  3182   	fcall	_Lcd_Chr_CP
  3175                           
  3176                           ;flex_lcd.h: 109: buffer++;
  3177  0281  3001               	movlw	1
  3178  0282  07F4               	addwf	Lcd_Out@buffer,f
  3179  0283  3000               	movlw	0
  3180  0284  3DF5               	addwfc	Lcd_Out@buffer+1,f
  3181  0285  2A72               	goto	l1276
  3182  0286                     __end_of_Lcd_Out:	
  3183                           ;flex_lcd.h: 110: }
  3184                           ;flex_lcd.h: 111: return;
  3185                           
  3186                           
  3187                           	psect	text8
  3188  0319                     __ptext8:	
  3189 ;; *************** function _Lcd_Chr_CP *****************
  3190 ;; Defined at:
  3191 ;;		line 136 in file "flex_lcd.h"
  3192 ;; Parameters:    Size  Location     Type
  3193 ;;  data            1    wreg     unsigned char 
  3194 ;; Auto vars:     Size  Location     Type
  3195 ;;  data            1    2[COMMON] unsigned char 
  3196 ;; Return value:  Size  Location     Type
  3197 ;;                  1    wreg      void 
  3198 ;; Registers used:
  3199 ;;		wreg, status,2, status,0
  3200 ;; Tracked objects:
  3201 ;;		On entry : 0/0
  3202 ;;		On exit  : 0/0
  3203 ;;		Unchanged: 0/0
  3204 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
  3205 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  3206 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  3207 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  3208 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  3209 ;;Total ram usage:        3 bytes
  3210 ;; Hardware stack levels used:    1
  3211 ;; This function calls:
  3212 ;;		Nothing
  3213 ;; This function is called by:
  3214 ;;		_Lcd_Out
  3215 ;;		_Lcd_Out2
  3216 ;; This function uses a non-reentrant model
  3217 ;;
  3218                           
  3219                           
  3220                           ;psect for function _Lcd_Chr_CP
  3221  0319                     _Lcd_Chr_CP:	
  3222                           
  3223                           ;incstack = 0
  3224                           ; Regs used in _Lcd_Chr_CP: [wreg+status,2+status,0]
  3225                           ;Lcd_Chr_CP@data stored from wreg
  3226  0319  00F2               	movwf	Lcd_Chr_CP@data
  3227                           
  3228                           ;flex_lcd.h: 137: PORTDbits.RD3 = 0; PORTDbits.RD2 = 1;
  3229  031A  0140               	movlb	0	; select bank0
  3230  031B  118F               	bcf	15,3	;volatile
  3231  031C  150F               	bsf	15,2	;volatile
  3232                           
  3233                           ;flex_lcd.h: 138: PORTCbits.RC3 = (data & 0b10000000)>>7; PORTDbits.RD0 = (data & 0b0100
      +                          0000)>>6;
  3234  031D  0872               	movf	Lcd_Chr_CP@data,w
  3235  031E  00F0               	movwf	??_Lcd_Chr_CP
  3236  031F  3007               	movlw	7
  3237  0320                     u815:	
  3238  0320  36F0               	lsrf	??_Lcd_Chr_CP,f
  3239  0321  0B89               	decfsz	9,f
  3240  0322  2B20               	goto	u815
  3241  0323  0870               	movf	??_Lcd_Chr_CP,w
  3242  0324  3901               	andlw	1
  3243  0325  00F1               	movwf	??_Lcd_Chr_CP+1
  3244  0326  0DF1               	rlf	??_Lcd_Chr_CP+1,f
  3245  0327  0DF1               	rlf	??_Lcd_Chr_CP+1,f
  3246  0328  0DF1               	rlf	??_Lcd_Chr_CP+1,f
  3247  0329  080E               	movf	14,w	;volatile
  3248  032A  0671               	xorwf	??_Lcd_Chr_CP+1,w
  3249  032B  39F7               	andlw	-9
  3250  032C  0671               	xorwf	??_Lcd_Chr_CP+1,w
  3251  032D  008E               	movwf	14	;volatile
  3252  032E  0872               	movf	Lcd_Chr_CP@data,w
  3253  032F  00F0               	movwf	??_Lcd_Chr_CP
  3254  0330  3006               	movlw	6
  3255  0331                     u825:	
  3256  0331  36F0               	lsrf	??_Lcd_Chr_CP,f
  3257  0332  0B89               	decfsz	9,f
  3258  0333  2B31               	goto	u825
  3259  0334  3001               	movlw	1
  3260  0335  0570               	andwf	??_Lcd_Chr_CP,w
  3261  0336  00F1               	movwf	??_Lcd_Chr_CP+1
  3262  0337  080F               	movf	15,w	;volatile
  3263  0338  0671               	xorwf	??_Lcd_Chr_CP+1,w
  3264  0339  39FE               	andlw	-2
  3265  033A  0671               	xorwf	??_Lcd_Chr_CP+1,w
  3266  033B  008F               	movwf	15	;volatile
  3267                           
  3268                           ;flex_lcd.h: 139: PORTDbits.RD1 = (data & 0b00100000)>>5; PORTCbits.RC4 = (data & 0b0001
      +                          0000)>>4;
  3269  033C  0872               	movf	Lcd_Chr_CP@data,w
  3270  033D  00F0               	movwf	??_Lcd_Chr_CP
  3271  033E  3005               	movlw	5
  3272  033F                     u835:	
  3273  033F  36F0               	lsrf	??_Lcd_Chr_CP,f
  3274  0340  0B89               	decfsz	9,f
  3275  0341  2B3F               	goto	u835
  3276  0342  0870               	movf	??_Lcd_Chr_CP,w
  3277  0343  3901               	andlw	1
  3278  0344  00F1               	movwf	??_Lcd_Chr_CP+1
  3279  0345  0DF1               	rlf	??_Lcd_Chr_CP+1,f
  3280  0346  080F               	movf	15,w	;volatile
  3281  0347  0671               	xorwf	??_Lcd_Chr_CP+1,w
  3282  0348  39FD               	andlw	-3
  3283  0349  0671               	xorwf	??_Lcd_Chr_CP+1,w
  3284  034A  008F               	movwf	15	;volatile
  3285  034B  0872               	movf	Lcd_Chr_CP@data,w
  3286  034C  00F0               	movwf	??_Lcd_Chr_CP
  3287  034D  3004               	movlw	4
  3288  034E                     u845:	
  3289  034E  36F0               	lsrf	??_Lcd_Chr_CP,f
  3290  034F  0B89               	decfsz	9,f
  3291  0350  2B4E               	goto	u845
  3292  0351  0870               	movf	??_Lcd_Chr_CP,w
  3293  0352  3901               	andlw	1
  3294  0353  00F1               	movwf	??_Lcd_Chr_CP+1
  3295  0354  0EF1               	swapf	??_Lcd_Chr_CP+1,f
  3296  0355  080E               	movf	14,w	;volatile
  3297  0356  0671               	xorwf	??_Lcd_Chr_CP+1,w
  3298  0357  39EF               	andlw	-17
  3299  0358  0671               	xorwf	??_Lcd_Chr_CP+1,w
  3300  0359  008E               	movwf	14	;volatile
  3301                           
  3302                           ;flex_lcd.h: 140: _delay(10);
  3303  035A  3003               	movlw	3
  3304  035B                     u1687:	
  3305  035B  0B89               	decfsz	9,f
  3306  035C  2B5B               	goto	u1687
  3307  035D  0000               	nop
  3308                           
  3309                           ;flex_lcd.h: 141: PORTDbits.RD3 = 1; _delay((unsigned long)((5)*(32000000/4000000.0))); 
      +                          PORTDbits.RD3 = 0;
  3310  035E  0140               	movlb	0	; select bank0
  3311  035F  158F               	bsf	15,3	;volatile
  3312  0360  300D               	movlw	13
  3313  0361                     u1697:	
  3314  0361  0B89               	decfsz	9,f
  3315  0362  2B61               	goto	u1697
  3316  0363  0000               	nop
  3317  0364  0140               	movlb	0	; select bank0
  3318  0365  118F               	bcf	15,3	;volatile
  3319                           
  3320                           ;flex_lcd.h: 142: PORTCbits.RC3 = (data & 0b00001000)>>3; PORTDbits.RD0 = (data & 0b0000
      +                          0100)>>2;
  3321  0366  0872               	movf	Lcd_Chr_CP@data,w
  3322  0367  00F0               	movwf	??_Lcd_Chr_CP
  3323  0368  3003               	movlw	3
  3324  0369                     u855:	
  3325  0369  36F0               	lsrf	??_Lcd_Chr_CP,f
  3326  036A  0B89               	decfsz	9,f
  3327  036B  2B69               	goto	u855
  3328  036C  0870               	movf	??_Lcd_Chr_CP,w
  3329  036D  3901               	andlw	1
  3330  036E  00F1               	movwf	??_Lcd_Chr_CP+1
  3331  036F  0DF1               	rlf	??_Lcd_Chr_CP+1,f
  3332  0370  0DF1               	rlf	??_Lcd_Chr_CP+1,f
  3333  0371  0DF1               	rlf	??_Lcd_Chr_CP+1,f
  3334  0372  080E               	movf	14,w	;volatile
  3335  0373  0671               	xorwf	??_Lcd_Chr_CP+1,w
  3336  0374  39F7               	andlw	-9
  3337  0375  0671               	xorwf	??_Lcd_Chr_CP+1,w
  3338  0376  008E               	movwf	14	;volatile
  3339  0377  0872               	movf	Lcd_Chr_CP@data,w
  3340  0378  00F0               	movwf	??_Lcd_Chr_CP
  3341  0379  3002               	movlw	2
  3342  037A                     u865:	
  3343  037A  36F0               	lsrf	??_Lcd_Chr_CP,f
  3344  037B  0B89               	decfsz	9,f
  3345  037C  2B7A               	goto	u865
  3346  037D  3001               	movlw	1
  3347  037E  0570               	andwf	??_Lcd_Chr_CP,w
  3348  037F  00F1               	movwf	??_Lcd_Chr_CP+1
  3349  0380  080F               	movf	15,w	;volatile
  3350  0381  0671               	xorwf	??_Lcd_Chr_CP+1,w
  3351  0382  39FE               	andlw	-2
  3352  0383  0671               	xorwf	??_Lcd_Chr_CP+1,w
  3353  0384  008F               	movwf	15	;volatile
  3354                           
  3355                           ;flex_lcd.h: 143: PORTDbits.RD1 = (data & 0b00000010)>>1; PORTCbits.RC4 = (data & 0b0000
      +                          0001);
  3356  0385  3672               	lsrf	Lcd_Chr_CP@data,w
  3357  0386  3901               	andlw	1
  3358  0387  00F0               	movwf	??_Lcd_Chr_CP
  3359  0388  0DF0               	rlf	??_Lcd_Chr_CP,f
  3360  0389  080F               	movf	15,w	;volatile
  3361  038A  0670               	xorwf	??_Lcd_Chr_CP,w
  3362  038B  39FD               	andlw	-3
  3363  038C  0670               	xorwf	??_Lcd_Chr_CP,w
  3364  038D  008F               	movwf	15	;volatile
  3365  038E  0872               	movf	Lcd_Chr_CP@data,w
  3366  038F  3901               	andlw	1
  3367  0390  00F0               	movwf	??_Lcd_Chr_CP
  3368  0391  0EF0               	swapf	??_Lcd_Chr_CP,f
  3369  0392  080E               	movf	14,w	;volatile
  3370  0393  0670               	xorwf	??_Lcd_Chr_CP,w
  3371  0394  39EF               	andlw	-17
  3372  0395  0670               	xorwf	??_Lcd_Chr_CP,w
  3373  0396  008E               	movwf	14	;volatile
  3374                           
  3375                           ;flex_lcd.h: 144: _delay(10);
  3376  0397  3003               	movlw	3
  3377  0398                     u1707:	
  3378  0398  0B89               	decfsz	9,f
  3379  0399  2B98               	goto	u1707
  3380  039A  0000               	nop
  3381                           
  3382                           ;flex_lcd.h: 145: PORTDbits.RD3 = 1; _delay((unsigned long)((5)*(32000000/4000000.0))); 
      +                          PORTDbits.RD3 = 0;
  3383  039B  0140               	movlb	0	; select bank0
  3384  039C  158F               	bsf	15,3	;volatile
  3385  039D  300D               	movlw	13
  3386  039E                     u1717:	
  3387  039E  0B89               	decfsz	9,f
  3388  039F  2B9E               	goto	u1717
  3389  03A0  0000               	nop
  3390  03A1  0140               	movlb	0	; select bank0
  3391  03A2  118F               	bcf	15,3	;volatile
  3392                           
  3393                           ;flex_lcd.h: 146: _delay((unsigned long)((5)*(32000000/4000000.0))); _delay((unsigned lo
      +                          ng)((5500)*(32000000/4000000.0)));
  3394  03A3  300D               	movlw	13
  3395  03A4                     u1727:	
  3396  03A4  0B89               	decfsz	9,f
  3397  03A5  2BA4               	goto	u1727
  3398  03A6  0000               	nop
  3399  03A7  303A               	movlw	58
  3400  03A8  00F0               	movwf	??_Lcd_Chr_CP
  3401  03A9  3023               	movlw	35
  3402  03AA                     u1737:	
  3403  03AA  0B89               	decfsz	9,f
  3404  03AB  2BAA               	goto	u1737
  3405  03AC  0BF0               	decfsz	??_Lcd_Chr_CP,f
  3406  03AD  2BAA               	goto	u1737
  3407  03AE  0000               	nop
  3408  03AF  0008               	return
  3409  03B0                     __end_of_Lcd_Chr_CP:	
  3410                           
  3411                           	psect	text9
  3412  03B0                     __ptext9:	
  3413 ;; *************** function _Lcd_Init *****************
  3414 ;; Defined at:
  3415 ;;		line 52 in file "flex_lcd.h"
  3416 ;; Parameters:    Size  Location     Type
  3417 ;;		None
  3418 ;; Auto vars:     Size  Location     Type
  3419 ;;  data            1    4[COMMON] unsigned char 
  3420 ;; Return value:  Size  Location     Type
  3421 ;;                  1    wreg      void 
  3422 ;; Registers used:
  3423 ;;		wreg, status,2, status,0, pclath, cstack
  3424 ;; Tracked objects:
  3425 ;;		On entry : 0/0
  3426 ;;		On exit  : 0/0
  3427 ;;		Unchanged: 0/0
  3428 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
  3429 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  3430 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  3431 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  3432 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  3433 ;;Total ram usage:        2 bytes
  3434 ;; Hardware stack levels used:    1
  3435 ;; Hardware stack levels required when called:    1
  3436 ;; This function calls:
  3437 ;;		_Lcd_Cmd
  3438 ;; This function is called by:
  3439 ;;		_main
  3440 ;; This function uses a non-reentrant model
  3441 ;;
  3442                           
  3443                           
  3444                           ;psect for function _Lcd_Init
  3445  03B0                     _Lcd_Init:	
  3446                           
  3447                           ;flex_lcd.h: 53: unsigned char data;
  3448                           ;flex_lcd.h: 54: TRISCbits.TRISC3 = 0;
  3449                           
  3450                           ;incstack = 0
  3451                           ; Regs used in _Lcd_Init: [wreg+status,2+status,0+pclath+cstack]
  3452  03B0  0140               	movlb	0	; select bank0
  3453  03B1  1193               	bcf	19,3	;volatile
  3454                           
  3455                           ;flex_lcd.h: 55: TRISDbits.TRISD0 = 0;
  3456  03B2  1014               	bcf	20,0	;volatile
  3457                           
  3458                           ;flex_lcd.h: 56: TRISDbits.TRISD1 = 0;
  3459  03B3  1094               	bcf	20,1	;volatile
  3460                           
  3461                           ;flex_lcd.h: 57: TRISCbits.TRISC4 = 0;
  3462  03B4  1213               	bcf	19,4	;volatile
  3463                           
  3464                           ;flex_lcd.h: 58: TRISDbits.TRISD3 = 0;
  3465  03B5  1194               	bcf	20,3	;volatile
  3466                           
  3467                           ;flex_lcd.h: 59: TRISDbits.TRISD2 = 0;
  3468  03B6  1114               	bcf	20,2	;volatile
  3469                           
  3470                           ;flex_lcd.h: 60: PORTCbits.RC3 = 0;
  3471  03B7  118E               	bcf	14,3	;volatile
  3472                           
  3473                           ;flex_lcd.h: 61: PORTDbits.RD0 = 0;
  3474  03B8  100F               	bcf	15,0	;volatile
  3475                           
  3476                           ;flex_lcd.h: 62: PORTDbits.RD1 = 0;
  3477  03B9  108F               	bcf	15,1	;volatile
  3478                           
  3479                           ;flex_lcd.h: 63: PORTCbits.RC4 = 0;
  3480  03BA  120E               	bcf	14,4	;volatile
  3481                           
  3482                           ;flex_lcd.h: 64: PORTDbits.RD3 = 0;
  3483  03BB  118F               	bcf	15,3	;volatile
  3484                           
  3485                           ;flex_lcd.h: 65: PORTDbits.RD2 = 0;
  3486  03BC  110F               	bcf	15,2	;volatile
  3487                           
  3488                           ;flex_lcd.h: 66: _delay((unsigned long)((5500)*(32000000/4000000.0)));
  3489  03BD  303A               	movlw	58
  3490  03BE  00F3               	movwf	??_Lcd_Init
  3491  03BF  3023               	movlw	35
  3492  03C0                     u1747:	
  3493  03C0  0B89               	decfsz	9,f
  3494  03C1  2BC0               	goto	u1747
  3495  03C2  0BF3               	decfsz	??_Lcd_Init,f
  3496  03C3  2BC0               	goto	u1747
  3497  03C4  0000               	nop
  3498                           
  3499                           ;flex_lcd.h: 67: _delay((unsigned long)((5500)*(32000000/4000000.0)));
  3500  03C5  303A               	movlw	58
  3501  03C6  00F3               	movwf	??_Lcd_Init
  3502  03C7  3023               	movlw	35
  3503  03C8                     u1757:	
  3504  03C8  0B89               	decfsz	9,f
  3505  03C9  2BC8               	goto	u1757
  3506  03CA  0BF3               	decfsz	??_Lcd_Init,f
  3507  03CB  2BC8               	goto	u1757
  3508  03CC  0000               	nop
  3509                           
  3510                           ;flex_lcd.h: 68: _delay((unsigned long)((5500)*(32000000/4000000.0)));
  3511  03CD  303A               	movlw	58
  3512  03CE  00F3               	movwf	??_Lcd_Init
  3513  03CF  3023               	movlw	35
  3514  03D0                     u1767:	
  3515  03D0  0B89               	decfsz	9,f
  3516  03D1  2BD0               	goto	u1767
  3517  03D2  0BF3               	decfsz	??_Lcd_Init,f
  3518  03D3  2BD0               	goto	u1767
  3519  03D4  0000               	nop
  3520                           
  3521                           ;flex_lcd.h: 69: _delay((unsigned long)((5500)*(32000000/4000000.0)));
  3522  03D5  303A               	movlw	58
  3523  03D6  00F3               	movwf	??_Lcd_Init
  3524  03D7  3023               	movlw	35
  3525  03D8                     u1777:	
  3526  03D8  0B89               	decfsz	9,f
  3527  03D9  2BD8               	goto	u1777
  3528  03DA  0BF3               	decfsz	??_Lcd_Init,f
  3529  03DB  2BD8               	goto	u1777
  3530  03DC  0000               	nop
  3531                           
  3532                           ;flex_lcd.h: 70: _delay((unsigned long)((5500)*(32000000/4000000.0)));
  3533  03DD  303A               	movlw	58
  3534  03DE  00F3               	movwf	??_Lcd_Init
  3535  03DF  3023               	movlw	35
  3536  03E0                     u1787:	
  3537  03E0  0B89               	decfsz	9,f
  3538  03E1  2BE0               	goto	u1787
  3539  03E2  0BF3               	decfsz	??_Lcd_Init,f
  3540  03E3  2BE0               	goto	u1787
  3541  03E4  0000               	nop
  3542                           
  3543                           ;flex_lcd.h: 71: _delay((unsigned long)((5500)*(32000000/4000000.0)));
  3544  03E5  303A               	movlw	58
  3545  03E6  00F3               	movwf	??_Lcd_Init
  3546  03E7  3023               	movlw	35
  3547  03E8                     u1797:	
  3548  03E8  0B89               	decfsz	9,f
  3549  03E9  2BE8               	goto	u1797
  3550  03EA  0BF3               	decfsz	??_Lcd_Init,f
  3551  03EB  2BE8               	goto	u1797
  3552  03EC  0000               	nop
  3553                           
  3554                           ;flex_lcd.h: 72: for(data = 1; data < 4; data ++)
  3555  03ED  01F4               	clrf	Lcd_Init@data
  3556  03EE  0AF4               	incf	Lcd_Init@data,f
  3557  03EF  3004               	movlw	4
  3558  03F0  0274               	subwf	Lcd_Init@data,w
  3559  03F1  1803               	btfsc	3,0
  3560  03F2  2C1B               	goto	l26
  3561  03F3                     l25:	
  3562                           
  3563                           ;flex_lcd.h: 73: {
  3564                           ;flex_lcd.h: 74: PORTCbits.RC3 = 0; PORTDbits.RD0 = 0; PORTDbits.RD1 = 1; PORTCbits.RC4 
      +                          = 1; PORTDbits.RD3 = 0;
  3565  03F3  0140               	movlb	0	; select bank0
  3566  03F4  118E               	bcf	14,3	;volatile
  3567  03F5  100F               	bcf	15,0	;volatile
  3568  03F6  148F               	bsf	15,1	;volatile
  3569  03F7  160E               	bsf	14,4	;volatile
  3570  03F8  118F               	bcf	15,3	;volatile
  3571                           
  3572                           ;flex_lcd.h: 75: PORTDbits.RD2 = 0; PORTCbits.RC3 = 0; PORTDbits.RD0 = 0; PORTDbits.RD1 
      +                          = 1; PORTCbits.RC4 = 1;
  3573  03F9  110F               	bcf	15,2	;volatile
  3574  03FA  118E               	bcf	14,3	;volatile
  3575  03FB  100F               	bcf	15,0	;volatile
  3576  03FC  148F               	bsf	15,1	;volatile
  3577  03FD  160E               	bsf	14,4	;volatile
  3578                           
  3579                           ;flex_lcd.h: 76: PORTDbits.RD3 = 1; PORTDbits.RD2 = 0;
  3580  03FE  158F               	bsf	15,3	;volatile
  3581  03FF  110F               	bcf	15,2	;volatile
  3582                           
  3583                           ;flex_lcd.h: 77: _delay((unsigned long)((5)*(32000000/4000000.0)));
  3584  0400  300D               	movlw	13
  3585  0401                     u1807:	
  3586  0401  0B89               	decfsz	9,f
  3587  0402  2C01               	goto	u1807
  3588  0403  0000               	nop
  3589                           
  3590                           ;flex_lcd.h: 78: PORTCbits.RC3 = 0; PORTDbits.RD0 = 0; PORTDbits.RD1 = 1; PORTCbits.RC4 
      +                          = 1; PORTDbits.RD3 = 0;
  3591  0404  0140               	movlb	0	; select bank0
  3592  0405  118E               	bcf	14,3	;volatile
  3593  0406  100F               	bcf	15,0	;volatile
  3594  0407  148F               	bsf	15,1	;volatile
  3595  0408  160E               	bsf	14,4	;volatile
  3596  0409  118F               	bcf	15,3	;volatile
  3597                           
  3598                           ;flex_lcd.h: 79: PORTDbits.RD2 = 0;
  3599  040A  110F               	bcf	15,2	;volatile
  3600                           
  3601                           ;flex_lcd.h: 80: _delay((unsigned long)((5500)*(32000000/4000000.0)));
  3602  040B  303A               	movlw	58
  3603  040C  00F3               	movwf	??_Lcd_Init
  3604  040D  3023               	movlw	35
  3605  040E                     u1817:	
  3606  040E  0B89               	decfsz	9,f
  3607  040F  2C0E               	goto	u1817
  3608  0410  0BF3               	decfsz	??_Lcd_Init,f
  3609  0411  2C0E               	goto	u1817
  3610  0412  0000               	nop
  3611  0413  3001               	movlw	1
  3612  0414  00F3               	movwf	??_Lcd_Init
  3613  0415  0873               	movf	??_Lcd_Init,w
  3614  0416  07F4               	addwf	Lcd_Init@data,f
  3615  0417  3004               	movlw	4
  3616  0418  0274               	subwf	Lcd_Init@data,w
  3617  0419  1C03               	skipc
  3618  041A  2BF3               	goto	l25
  3619  041B                     l26:	
  3620                           
  3621                           ;flex_lcd.h: 81: }
  3622                           ;flex_lcd.h: 82: PORTCbits.RC3 = 0; PORTDbits.RD0 = 0; PORTDbits.RD1 = 1; PORTCbits.RC4 
      +                          = 0; PORTDbits.RD3 = 0; PORTDbits.RD2 = 0;
  3623  041B  0140               	movlb	0	; select bank0
  3624  041C  118E               	bcf	14,3	;volatile
  3625  041D  100F               	bcf	15,0	;volatile
  3626  041E  148F               	bsf	15,1	;volatile
  3627  041F  120E               	bcf	14,4	;volatile
  3628  0420  118F               	bcf	15,3	;volatile
  3629  0421  110F               	bcf	15,2	;volatile
  3630                           
  3631                           ;flex_lcd.h: 83: PORTCbits.RC3 = 0; PORTDbits.RD0 = 0; PORTDbits.RD1 = 1; PORTCbits.RC4 
      +                          = 0; PORTDbits.RD3 = 1; PORTDbits.RD2 = 0;
  3632  0422  118E               	bcf	14,3	;volatile
  3633  0423  100F               	bcf	15,0	;volatile
  3634  0424  148F               	bsf	15,1	;volatile
  3635  0425  120E               	bcf	14,4	;volatile
  3636  0426  158F               	bsf	15,3	;volatile
  3637  0427  110F               	bcf	15,2	;volatile
  3638                           
  3639                           ;flex_lcd.h: 84: _delay((unsigned long)((5)*(32000000/4000000.0)));
  3640  0428  300D               	movlw	13
  3641  0429                     u1827:	
  3642  0429  0B89               	decfsz	9,f
  3643  042A  2C29               	goto	u1827
  3644  042B  0000               	nop
  3645                           
  3646                           ;flex_lcd.h: 85: PORTCbits.RC3 = 0; PORTDbits.RD0 = 0; PORTDbits.RD1 = 1; PORTCbits.RC4 
      +                          = 0; PORTDbits.RD3 = 0; PORTDbits.RD2 = 0;
  3647  042C  0140               	movlb	0	; select bank0
  3648  042D  118E               	bcf	14,3	;volatile
  3649  042E  100F               	bcf	15,0	;volatile
  3650  042F  148F               	bsf	15,1	;volatile
  3651  0430  120E               	bcf	14,4	;volatile
  3652  0431  118F               	bcf	15,3	;volatile
  3653  0432  110F               	bcf	15,2	;volatile
  3654                           
  3655                           ;flex_lcd.h: 86: _delay((unsigned long)((5500)*(32000000/4000000.0)));
  3656  0433  303A               	movlw	58
  3657  0434  00F3               	movwf	??_Lcd_Init
  3658  0435  3023               	movlw	35
  3659  0436                     u1837:	
  3660  0436  0B89               	decfsz	9,f
  3661  0437  2C36               	goto	u1837
  3662  0438  0BF3               	decfsz	??_Lcd_Init,f
  3663  0439  2C36               	goto	u1837
  3664  043A  0000               	nop
  3665                           
  3666                           ;flex_lcd.h: 87: data = 40; Lcd_Cmd(data);
  3667  043B  3028               	movlw	40
  3668  043C  00F3               	movwf	??_Lcd_Init
  3669  043D  0873               	movf	??_Lcd_Init,w
  3670  043E  00F4               	movwf	Lcd_Init@data
  3671  043F  0874               	movf	Lcd_Init@data,w
  3672  0440  3182  2286  3183   	fcall	_Lcd_Cmd
  3673                           
  3674                           ;flex_lcd.h: 88: data = 16; Lcd_Cmd(data);
  3675  0443  3010               	movlw	16
  3676  0444  00F3               	movwf	??_Lcd_Init
  3677  0445  0873               	movf	??_Lcd_Init,w
  3678  0446  00F4               	movwf	Lcd_Init@data
  3679  0447  0874               	movf	Lcd_Init@data,w
  3680  0448  3182  2286  3183   	fcall	_Lcd_Cmd
  3681                           
  3682                           ;flex_lcd.h: 89: data = 1; Lcd_Cmd(data);
  3683  044B  01F4               	clrf	Lcd_Init@data
  3684  044C  0AF4               	incf	Lcd_Init@data,f
  3685  044D  0874               	movf	Lcd_Init@data,w
  3686  044E  3182  2286  3183   	fcall	_Lcd_Cmd
  3687                           
  3688                           ;flex_lcd.h: 90: data = 15; Lcd_Cmd(data);
  3689  0451  300F               	movlw	15
  3690  0452  00F3               	movwf	??_Lcd_Init
  3691  0453  0873               	movf	??_Lcd_Init,w
  3692  0454  00F4               	movwf	Lcd_Init@data
  3693  0455  0874               	movf	Lcd_Init@data,w
  3694  0456  3182  2286         	fcall	_Lcd_Cmd
  3695  0458  0008               	return
  3696  0459                     __end_of_Lcd_Init:	
  3697                           
  3698                           	psect	text10
  3699  0286                     __ptext10:	
  3700 ;; *************** function _Lcd_Cmd *****************
  3701 ;; Defined at:
  3702 ;;		line 150 in file "flex_lcd.h"
  3703 ;; Parameters:    Size  Location     Type
  3704 ;;  data            1    wreg     unsigned char 
  3705 ;; Auto vars:     Size  Location     Type
  3706 ;;  data            1    2[COMMON] unsigned char 
  3707 ;; Return value:  Size  Location     Type
  3708 ;;                  1    wreg      void 
  3709 ;; Registers used:
  3710 ;;		wreg, status,2, status,0
  3711 ;; Tracked objects:
  3712 ;;		On entry : 0/0
  3713 ;;		On exit  : 0/0
  3714 ;;		Unchanged: 0/0
  3715 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
  3716 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  3717 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  3718 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  3719 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  3720 ;;Total ram usage:        3 bytes
  3721 ;; Hardware stack levels used:    1
  3722 ;; This function calls:
  3723 ;;		Nothing
  3724 ;; This function is called by:
  3725 ;;		_Lcd_Init
  3726 ;;		_Lcd_Out
  3727 ;;		_Lcd_Out2
  3728 ;;		_main
  3729 ;; This function uses a non-reentrant model
  3730 ;;
  3731                           
  3732                           
  3733                           ;psect for function _Lcd_Cmd
  3734  0286                     _Lcd_Cmd:	
  3735                           
  3736                           ;incstack = 0
  3737                           ; Regs used in _Lcd_Cmd: [wreg+status,2+status,0]
  3738                           ;Lcd_Cmd@data stored from wreg
  3739  0286  00F2               	movwf	Lcd_Cmd@data
  3740                           
  3741                           ;flex_lcd.h: 151: PORTDbits.RD3 = 0; PORTDbits.RD2 = 0;
  3742  0287  0140               	movlb	0	; select bank0
  3743  0288  118F               	bcf	15,3	;volatile
  3744  0289  110F               	bcf	15,2	;volatile
  3745                           
  3746                           ;flex_lcd.h: 152: PORTCbits.RC3 = (data & 0b10000000)>>7; PORTDbits.RD0 = (data & 0b0100
      +                          0000)>>6;
  3747  028A  0872               	movf	Lcd_Cmd@data,w
  3748  028B  00F0               	movwf	??_Lcd_Cmd
  3749  028C  3007               	movlw	7
  3750  028D                     u755:	
  3751  028D  36F0               	lsrf	??_Lcd_Cmd,f
  3752  028E  0B89               	decfsz	9,f
  3753  028F  2A8D               	goto	u755
  3754  0290  0870               	movf	??_Lcd_Cmd,w
  3755  0291  3901               	andlw	1
  3756  0292  00F1               	movwf	??_Lcd_Cmd+1
  3757  0293  0DF1               	rlf	??_Lcd_Cmd+1,f
  3758  0294  0DF1               	rlf	??_Lcd_Cmd+1,f
  3759  0295  0DF1               	rlf	??_Lcd_Cmd+1,f
  3760  0296  080E               	movf	14,w	;volatile
  3761  0297  0671               	xorwf	??_Lcd_Cmd+1,w
  3762  0298  39F7               	andlw	-9
  3763  0299  0671               	xorwf	??_Lcd_Cmd+1,w
  3764  029A  008E               	movwf	14	;volatile
  3765  029B  0872               	movf	Lcd_Cmd@data,w
  3766  029C  00F0               	movwf	??_Lcd_Cmd
  3767  029D  3006               	movlw	6
  3768  029E                     u765:	
  3769  029E  36F0               	lsrf	??_Lcd_Cmd,f
  3770  029F  0B89               	decfsz	9,f
  3771  02A0  2A9E               	goto	u765
  3772  02A1  3001               	movlw	1
  3773  02A2  0570               	andwf	??_Lcd_Cmd,w
  3774  02A3  00F1               	movwf	??_Lcd_Cmd+1
  3775  02A4  080F               	movf	15,w	;volatile
  3776  02A5  0671               	xorwf	??_Lcd_Cmd+1,w
  3777  02A6  39FE               	andlw	-2
  3778  02A7  0671               	xorwf	??_Lcd_Cmd+1,w
  3779  02A8  008F               	movwf	15	;volatile
  3780                           
  3781                           ;flex_lcd.h: 153: PORTDbits.RD1 = (data & 0b00100000)>>5; PORTCbits.RC4 = (data & 0b0001
      +                          0000)>>4;
  3782  02A9  0872               	movf	Lcd_Cmd@data,w
  3783  02AA  00F0               	movwf	??_Lcd_Cmd
  3784  02AB  3005               	movlw	5
  3785  02AC                     u775:	
  3786  02AC  36F0               	lsrf	??_Lcd_Cmd,f
  3787  02AD  0B89               	decfsz	9,f
  3788  02AE  2AAC               	goto	u775
  3789  02AF  0870               	movf	??_Lcd_Cmd,w
  3790  02B0  3901               	andlw	1
  3791  02B1  00F1               	movwf	??_Lcd_Cmd+1
  3792  02B2  0DF1               	rlf	??_Lcd_Cmd+1,f
  3793  02B3  080F               	movf	15,w	;volatile
  3794  02B4  0671               	xorwf	??_Lcd_Cmd+1,w
  3795  02B5  39FD               	andlw	-3
  3796  02B6  0671               	xorwf	??_Lcd_Cmd+1,w
  3797  02B7  008F               	movwf	15	;volatile
  3798  02B8  0872               	movf	Lcd_Cmd@data,w
  3799  02B9  00F0               	movwf	??_Lcd_Cmd
  3800  02BA  3004               	movlw	4
  3801  02BB                     u785:	
  3802  02BB  36F0               	lsrf	??_Lcd_Cmd,f
  3803  02BC  0B89               	decfsz	9,f
  3804  02BD  2ABB               	goto	u785
  3805  02BE  0870               	movf	??_Lcd_Cmd,w
  3806  02BF  3901               	andlw	1
  3807  02C0  00F1               	movwf	??_Lcd_Cmd+1
  3808  02C1  0EF1               	swapf	??_Lcd_Cmd+1,f
  3809  02C2  080E               	movf	14,w	;volatile
  3810  02C3  0671               	xorwf	??_Lcd_Cmd+1,w
  3811  02C4  39EF               	andlw	-17
  3812  02C5  0671               	xorwf	??_Lcd_Cmd+1,w
  3813  02C6  008E               	movwf	14	;volatile
  3814                           
  3815                           ;flex_lcd.h: 154: _delay(10);
  3816  02C7  3003               	movlw	3
  3817  02C8                     u1847:	
  3818  02C8  0B89               	decfsz	9,f
  3819  02C9  2AC8               	goto	u1847
  3820  02CA  0000               	nop
  3821                           
  3822                           ;flex_lcd.h: 155: PORTDbits.RD3 = 1; _delay((unsigned long)((5)*(32000000/4000000.0))); 
      +                          PORTDbits.RD3 = 0;
  3823  02CB  0140               	movlb	0	; select bank0
  3824  02CC  158F               	bsf	15,3	;volatile
  3825  02CD  300D               	movlw	13
  3826  02CE                     u1857:	
  3827  02CE  0B89               	decfsz	9,f
  3828  02CF  2ACE               	goto	u1857
  3829  02D0  0000               	nop
  3830  02D1  0140               	movlb	0	; select bank0
  3831  02D2  118F               	bcf	15,3	;volatile
  3832                           
  3833                           ;flex_lcd.h: 156: PORTCbits.RC3 = (data & 0b00001000)>>3; PORTDbits.RD0 = (data & 0b0000
      +                          0100)>>2;
  3834  02D3  0872               	movf	Lcd_Cmd@data,w
  3835  02D4  00F0               	movwf	??_Lcd_Cmd
  3836  02D5  3003               	movlw	3
  3837  02D6                     u795:	
  3838  02D6  36F0               	lsrf	??_Lcd_Cmd,f
  3839  02D7  0B89               	decfsz	9,f
  3840  02D8  2AD6               	goto	u795
  3841  02D9  0870               	movf	??_Lcd_Cmd,w
  3842  02DA  3901               	andlw	1
  3843  02DB  00F1               	movwf	??_Lcd_Cmd+1
  3844  02DC  0DF1               	rlf	??_Lcd_Cmd+1,f
  3845  02DD  0DF1               	rlf	??_Lcd_Cmd+1,f
  3846  02DE  0DF1               	rlf	??_Lcd_Cmd+1,f
  3847  02DF  080E               	movf	14,w	;volatile
  3848  02E0  0671               	xorwf	??_Lcd_Cmd+1,w
  3849  02E1  39F7               	andlw	-9
  3850  02E2  0671               	xorwf	??_Lcd_Cmd+1,w
  3851  02E3  008E               	movwf	14	;volatile
  3852  02E4  0872               	movf	Lcd_Cmd@data,w
  3853  02E5  00F0               	movwf	??_Lcd_Cmd
  3854  02E6  3002               	movlw	2
  3855  02E7                     u805:	
  3856  02E7  36F0               	lsrf	??_Lcd_Cmd,f
  3857  02E8  0B89               	decfsz	9,f
  3858  02E9  2AE7               	goto	u805
  3859  02EA  3001               	movlw	1
  3860  02EB  0570               	andwf	??_Lcd_Cmd,w
  3861  02EC  00F1               	movwf	??_Lcd_Cmd+1
  3862  02ED  080F               	movf	15,w	;volatile
  3863  02EE  0671               	xorwf	??_Lcd_Cmd+1,w
  3864  02EF  39FE               	andlw	-2
  3865  02F0  0671               	xorwf	??_Lcd_Cmd+1,w
  3866  02F1  008F               	movwf	15	;volatile
  3867                           
  3868                           ;flex_lcd.h: 157: PORTDbits.RD1 = (data & 0b00000010)>>1; PORTCbits.RC4 = (data & 0b0000
      +                          0001);
  3869  02F2  3672               	lsrf	Lcd_Cmd@data,w
  3870  02F3  3901               	andlw	1
  3871  02F4  00F0               	movwf	??_Lcd_Cmd
  3872  02F5  0DF0               	rlf	??_Lcd_Cmd,f
  3873  02F6  080F               	movf	15,w	;volatile
  3874  02F7  0670               	xorwf	??_Lcd_Cmd,w
  3875  02F8  39FD               	andlw	-3
  3876  02F9  0670               	xorwf	??_Lcd_Cmd,w
  3877  02FA  008F               	movwf	15	;volatile
  3878  02FB  0872               	movf	Lcd_Cmd@data,w
  3879  02FC  3901               	andlw	1
  3880  02FD  00F0               	movwf	??_Lcd_Cmd
  3881  02FE  0EF0               	swapf	??_Lcd_Cmd,f
  3882  02FF  080E               	movf	14,w	;volatile
  3883  0300  0670               	xorwf	??_Lcd_Cmd,w
  3884  0301  39EF               	andlw	-17
  3885  0302  0670               	xorwf	??_Lcd_Cmd,w
  3886  0303  008E               	movwf	14	;volatile
  3887                           
  3888                           ;flex_lcd.h: 158: _delay(10);
  3889  0304  3003               	movlw	3
  3890  0305                     u1867:	
  3891  0305  0B89               	decfsz	9,f
  3892  0306  2B05               	goto	u1867
  3893  0307  0000               	nop
  3894                           
  3895                           ;flex_lcd.h: 159: PORTDbits.RD3 = 1; _delay((unsigned long)((5)*(32000000/4000000.0))); 
      +                          PORTDbits.RD3 = 0;
  3896  0308  0140               	movlb	0	; select bank0
  3897  0309  158F               	bsf	15,3	;volatile
  3898  030A  300D               	movlw	13
  3899  030B                     u1877:	
  3900  030B  0B89               	decfsz	9,f
  3901  030C  2B0B               	goto	u1877
  3902  030D  0000               	nop
  3903  030E  0140               	movlb	0	; select bank0
  3904  030F  118F               	bcf	15,3	;volatile
  3905                           
  3906                           ;flex_lcd.h: 160: _delay((unsigned long)((5500)*(32000000/4000000.0)));
  3907  0310  303A               	movlw	58
  3908  0311  00F0               	movwf	??_Lcd_Cmd
  3909  0312  3023               	movlw	35
  3910  0313                     u1887:	
  3911  0313  0B89               	decfsz	9,f
  3912  0314  2B13               	goto	u1887
  3913  0315  0BF0               	decfsz	??_Lcd_Cmd,f
  3914  0316  2B13               	goto	u1887
  3915  0317  0000               	nop
  3916  0318  0008               	return
  3917  0319                     __end_of_Lcd_Cmd:	
  3918  007E                     btemp	set	126	;btemp
  3919  007E                     wtemp0	set	126


Data Sizes:
    Strings     288
    Constant    10
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     45      45
    BANK1            80      0       0
    BANK2            80      0       0
    BANK3            80      0       0
    BANK4            80      0       0
    BANK5            80      0       0
    BANK6            80      0       0
    BANK7            80      0       0
    BANK8            80      0       0
    BANK9            80      0       0
    BANK10           80      0       0
    BANK11           80      0       0
    BANK12           80      0       0
    BANK13           80      0       0
    BANK14           80      0       0
    BANK15           80      0       0
    BANK16           80      0       0
    BANK17           80      0       0
    BANK18           80      0       0
    BANK19           80      0       0
    BANK20           80      0       0
    BANK21           80      0       0
    BANK22           80      0       0
    BANK23           80      0       0
    BANK24           80      0       0
    BANK25           80      0       0
    BANK26           80      0       0
    BANK27           80      0       0
    BANK28           80      0       0
    BANK29           80      0       0
    BANK30           80      0       0
    BANK31           80      0       0
    BANK32           80      0       0
    BANK33           80      0       0
    BANK34           80      0       0
    BANK35           80      0       0
    BANK36           80      0       0
    BANK37           80      0       0
    BANK38           80      0       0
    BANK39           80      0       0
    BANK40           80      0       0
    BANK41           80      0       0
    BANK42           80      0       0
    BANK43           80      0       0
    BANK44           80      0       0
    BANK45           80      0       0
    BANK46           80      0       0
    BANK47           80      0       0
    BANK48           80      0       0
    BANK49           80      0       0
    BANK50           80      0       0

Pointer List with Targets:

    sprintf@f	PTR const unsigned char  size(2) Largest target is 16
		 -> STR_17(CODE[16]), 

    sprintf@sp	PTR unsigned char  size(1) Largest target is 16
		 -> main@buffer1(BANK0[16]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    Lcd_Out2@buffer	PTR unsigned char  size(1) Largest target is 16
		 -> main@buffer1(BANK0[16]), 

    Lcd_Out@buffer	PTR const unsigned char  size(2) Largest target is 17
		 -> STR_16(CODE[17]), STR_15(CODE[17]), STR_14(CODE[17]), STR_13(CODE[17]), 
		 -> STR_12(CODE[17]), STR_11(CODE[17]), STR_10(CODE[17]), STR_9(CODE[17]), 
		 -> STR_8(CODE[17]), STR_7(CODE[17]), STR_6(CODE[17]), STR_5(CODE[17]), 
		 -> STR_4(CODE[17]), STR_3(CODE[17]), STR_2(CODE[17]), STR_1(CODE[17]), 


Critical Paths under _main in COMMON

    _sprintf->___lwmod
    ___lwmod->___lwdiv
    _Lcd_Out2->_Lcd_Chr_CP
    _Lcd_Out2->_Lcd_Cmd
    _Lcd_Out->_Lcd_Chr_CP
    _Lcd_Out->_Lcd_Cmd
    _Lcd_Init->_Lcd_Cmd

Critical Paths under _main in BANK0

    _main->_sprintf

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _main in BANK16

    None.

Critical Paths under _main in BANK17

    None.

Critical Paths under _main in BANK18

    None.

Critical Paths under _main in BANK19

    None.

Critical Paths under _main in BANK20

    None.

Critical Paths under _main in BANK21

    None.

Critical Paths under _main in BANK22

    None.

Critical Paths under _main in BANK23

    None.

Critical Paths under _main in BANK24

    None.

Critical Paths under _main in BANK25

    None.

Critical Paths under _main in BANK26

    None.

Critical Paths under _main in BANK27

    None.

Critical Paths under _main in BANK28

    None.

Critical Paths under _main in BANK29

    None.

Critical Paths under _main in BANK30

    None.

Critical Paths under _main in BANK31

    None.

Critical Paths under _main in BANK32

    None.

Critical Paths under _main in BANK33

    None.

Critical Paths under _main in BANK34

    None.

Critical Paths under _main in BANK35

    None.

Critical Paths under _main in BANK36

    None.

Critical Paths under _main in BANK37

    None.

Critical Paths under _main in BANK38

    None.

Critical Paths under _main in BANK39

    None.

Critical Paths under _main in BANK40

    None.

Critical Paths under _main in BANK41

    None.

Critical Paths under _main in BANK42

    None.

Critical Paths under _main in BANK43

    None.

Critical Paths under _main in BANK44

    None.

Critical Paths under _main in BANK45

    None.

Critical Paths under _main in BANK46

    None.

Critical Paths under _main in BANK47

    None.

Critical Paths under _main in BANK48

    None.

Critical Paths under _main in BANK49

    None.

Critical Paths under _main in BANK50

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                44    40      4    6150
                                             17 BANK0     28    24      4
                            _Lcd_Cmd
                           _Lcd_Init
                            _Lcd_Out
                           _Lcd_Out2
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             25    21      4    1867
                                              0 BANK0     17    13      4
                            ___lwdiv
                            ___lwmod
                             ___wmul
                            _isdigit
 ---------------------------------------------------------------------------------
 (2) _isdigit                                              2     2      0      68
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4     220
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (2) ___lwmod                                              6     2      4     287
                                              8 COMMON     6     2      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              8     4      4     290
                                              0 COMMON     8     4      4
 ---------------------------------------------------------------------------------
 (1) _Lcd_Out2                                             5     3      2     661
                                              3 COMMON     5     3      2
                         _Lcd_Chr_CP
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (1) _Lcd_Out                                              6     3      3    2581
                                              3 COMMON     6     3      3
                         _Lcd_Chr_CP
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (2) _Lcd_Chr_CP                                           3     3      0     176
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (1) _Lcd_Init                                             2     2      0     314
                                              3 COMMON     2     2      0
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (2) _Lcd_Cmd                                              3     3      0     176
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Lcd_Cmd
   _Lcd_Init
     _Lcd_Cmd
   _Lcd_Out
     _Lcd_Chr_CP
     _Lcd_Cmd
   _Lcd_Out2
     _Lcd_Chr_CP
     _Lcd_Cmd
   _sprintf
     ___lwdiv
     ___lwmod
       ___lwdiv (ARG)
     ___wmul
     _isdigit

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             FF0      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      E       E       2      100.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     2D      2D       5       56.3%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BITBANK2            50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BANK2               50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BITBANK3            50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BANK3               50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITBANK4            50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BANK4               50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITBANK5            50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BANK5               50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITBANK6            50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BANK6               50      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITBANK7            50      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BANK7               50      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITBANK8            50      0       0      20        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BANK8               50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BITBANK9            50      0       0      22        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BANK9               50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BITBANK10           50      0       0      24        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BANK10              50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BITBANK11           50      0       0      26        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BANK11              50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
ABS                  0      0       0      28        0.0%
BITBANK12           50      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BANK12              50      0       0      30        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITBANK13           50      0       0      31        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BANK13              50      0       0      32        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%
BITBANK14           50      0       0      33        0.0%
BITSFR32             0      0       0      33        0.0%
SFR32                0      0       0      33        0.0%
BANK14              50      0       0      34        0.0%
BITSFR33             0      0       0      34        0.0%
SFR33                0      0       0      34        0.0%
BITBANK15           50      0       0      35        0.0%
BITSFR34             0      0       0      35        0.0%
SFR34                0      0       0      35        0.0%
BANK15              50      0       0      36        0.0%
BITSFR35             0      0       0      36        0.0%
SFR35                0      0       0      36        0.0%
BITBANK16           50      0       0      37        0.0%
BITSFR36             0      0       0      37        0.0%
SFR36                0      0       0      37        0.0%
BANK16              50      0       0      38        0.0%
BITSFR37             0      0       0      38        0.0%
SFR37                0      0       0      38        0.0%
BITBANK17           50      0       0      39        0.0%
BITSFR38             0      0       0      39        0.0%
SFR38                0      0       0      39        0.0%
BANK17              50      0       0      40        0.0%
BITSFR39             0      0       0      40        0.0%
SFR39                0      0       0      40        0.0%
BITBANK18           50      0       0      41        0.0%
BITSFR40             0      0       0      41        0.0%
SFR40                0      0       0      41        0.0%
BANK18              50      0       0      42        0.0%
BITSFR41             0      0       0      42        0.0%
SFR41                0      0       0      42        0.0%
BITBANK19           50      0       0      43        0.0%
BITSFR42             0      0       0      43        0.0%
SFR42                0      0       0      43        0.0%
BANK19              50      0       0      44        0.0%
BITSFR43             0      0       0      44        0.0%
SFR43                0      0       0      44        0.0%
BITBANK20           50      0       0      45        0.0%
BITSFR44             0      0       0      45        0.0%
SFR44                0      0       0      45        0.0%
BANK20              50      0       0      46        0.0%
BITSFR45             0      0       0      46        0.0%
SFR45                0      0       0      46        0.0%
BITBANK21           50      0       0      47        0.0%
BITSFR46             0      0       0      47        0.0%
SFR46                0      0       0      47        0.0%
BANK21              50      0       0      48        0.0%
BITSFR47             0      0       0      48        0.0%
SFR47                0      0       0      48        0.0%
BITBANK22           50      0       0      49        0.0%
BITSFR48             0      0       0      49        0.0%
SFR48                0      0       0      49        0.0%
BANK22              50      0       0      50        0.0%
BITSFR49             0      0       0      50        0.0%
SFR49                0      0       0      50        0.0%
BITBANK23           50      0       0      51        0.0%
BITSFR50             0      0       0      51        0.0%
SFR50                0      0       0      51        0.0%
BANK23              50      0       0      52        0.0%
BITSFR51             0      0       0      52        0.0%
SFR51                0      0       0      52        0.0%
BITBANK24           50      0       0      53        0.0%
BITSFR52             0      0       0      53        0.0%
SFR52                0      0       0      53        0.0%
BANK24              50      0       0      54        0.0%
BITSFR53             0      0       0      54        0.0%
SFR53                0      0       0      54        0.0%
BITBANK25           50      0       0      55        0.0%
BITSFR54             0      0       0      55        0.0%
SFR54                0      0       0      55        0.0%
BANK25              50      0       0      56        0.0%
BITSFR55             0      0       0      56        0.0%
SFR55                0      0       0      56        0.0%
BITBANK26           50      0       0      57        0.0%
BITSFR56             0      0       0      57        0.0%
SFR56                0      0       0      57        0.0%
BANK26              50      0       0      58        0.0%
BITSFR57             0      0       0      58        0.0%
SFR57                0      0       0      58        0.0%
BITSFR58             0      0       0      59        0.0%
SFR58                0      0       0      59        0.0%
DATA                 0      0       0      59        0.0%
BITBANK27           50      0       0      60        0.0%
BITSFR59             0      0       0      60        0.0%
SFR59                0      0       0      60        0.0%
BANK27              50      0       0      61        0.0%
BITSFR60             0      0       0      61        0.0%
SFR60                0      0       0      61        0.0%
BITBANK28           50      0       0      62        0.0%
BITSFR61             0      0       0      62        0.0%
SFR61                0      0       0      62        0.0%
BANK28              50      0       0      63        0.0%
BITSFR62             0      0       0      63        0.0%
SFR62                0      0       0      63        0.0%
BITBANK29           50      0       0      64        0.0%
BITSFR63             0      0       0      64        0.0%
SFR63                0      0       0      64        0.0%
BANK29              50      0       0      65        0.0%
BITBANK30           50      0       0      66        0.0%
BANK30              50      0       0      67        0.0%
BITBANK31           50      0       0      68        0.0%
BANK31              50      0       0      69        0.0%
BITBANK32           50      0       0      70        0.0%
BANK32              50      0       0      71        0.0%
BITBANK33           50      0       0      72        0.0%
BANK33              50      0       0      73        0.0%
BITBANK34           50      0       0      74        0.0%
BANK34              50      0       0      75        0.0%
BITBANK35           50      0       0      76        0.0%
BANK35              50      0       0      77        0.0%
BITBANK36           50      0       0      78        0.0%
BANK36              50      0       0      79        0.0%
BITBANK37           50      0       0      80        0.0%
BANK37              50      0       0      81        0.0%
BITBANK38           50      0       0      82        0.0%
BANK38              50      0       0      83        0.0%
BITBANK39           50      0       0      84        0.0%
BANK39              50      0       0      85        0.0%
BITBANK40           50      0       0      86        0.0%
BANK40              50      0       0      87        0.0%
BITBANK41           50      0       0      88        0.0%
BANK41              50      0       0      89        0.0%
BITBANK42           50      0       0      90        0.0%
BANK42              50      0       0      91        0.0%
BITBANK43           50      0       0      92        0.0%
BANK43              50      0       0      93        0.0%
BITBANK44           50      0       0      94        0.0%
BANK44              50      0       0      95        0.0%
BITBANK45           50      0       0      96        0.0%
BANK45              50      0       0      97        0.0%
BITBANK46           50      0       0      98        0.0%
BANK46              50      0       0      99        0.0%
BITBANK47           50      0       0     100        0.0%
BANK47              50      0       0     101        0.0%
BITBANK48           50      0       0     102        0.0%
BANK48              50      0       0     103        0.0%
BITBANK49           50      0       0     104        0.0%
BANK49              50      0       0     105        0.0%
BITBANK50           50      0       0     106        0.0%
BANK50              50      0       0     107        0.0%


Microchip Technology PIC Macro Assembler V1.45 build -152302408 
Symbol Table                                                                                   Mon Sep 10 10:36:15 2018

            __CFG_CP$OFF 0000                       l25 03F3                       l26 041B  
                     l98 07D7      ___wmul@multiplicand 0072              __CFG_LVP$ON 0000  
                    l100 07FB                      l116 0486                      l134 052F  
                    l233 01A7             __CFG_CPD$OFF 0000                      u805 02E7  
                    u815 0320                      u825 0331                      u905 01A8  
                    u755 028D                      u835 033F                      u915 01AD  
                    u765 029E                      u845 034E                      u775 02AC  
                    u855 0369                      u785 02BB                      u865 037A  
                    u945 01F1                      u795 02D6                      u965 01FB  
                    u975 0205                      u985 020D             __CFG_BORV$LO 0000  
                    wreg 0009             __CFG_ZCD$OFF 0000              main@buffer1 0037  
                   l1202 01E1                     l1140 019D                     l1320 04A1  
                   l1170 01FA                     l1146 01A1                     l1402 059D  
                   l1330 04CF                     l1314 048B                     l1260 0254  
                   l1180 0215                     l1332 04E7                     l1316 0494  
                   l1308 0482                     l1404 045F                     l1500 071B  
                   l1262 0257                     l1270 026E                     l1342 04FE  
                   l1406 05D7                     l1264 025A                     l1280 021C  
                   l1176 020C                     l1168 01EE                     l1192 01C0  
                   l1512 074D                     l1440 0623                     l1258 0251  
                   l1282 021F                     l1290 022B                     l1194 01CC  
                   l1362 054B                     l1354 0523                     l1530 0798  
                   l1506 0734                     l1276 0272                     l1268 0260  
                   l1284 0222                     l1292 0239                     l1372 055F  
                   l1380 0573                     l1364 054E                     l1348 0504  
                   l1524 077F                     l1452 0653                     l1286 0225  
                   l1198 01D8                     l1382 0577                     l1518 0766  
                   l1470 069E                     l1446 063B                     l1544 07D1  
                   l1464 0685                     l1536 07B0                     l1298 023D  
                   l1394 0599                     l1482 06D0                     l1458 066C  
                   l1388 058A                     l1548 07DE                     l1476 06B7  
                   l1494 0702                     l1488 06E9                     STR_1 082C  
                   STR_2 083D                     STR_3 084E                     STR_4 0870  
                   STR_5 0892                     STR_6 08B4                     STR_7 08D6  
                   STR_8 08E7                     STR_9 08F8                     u1015 01C3  
                   u1035 01D2                     u1045 01D9                     u1155 0519  
                   u1195 053E                     u1507 060B                     u1517 0635  
                   u1607 0715                     u1527 064D                     u1295 0621  
                   u1617 072E                     u1537 0666                     u1707 0398  
                   u1627 0747                     u1547 067F                     u1717 039E  
                   u1485 07F9                     u1637 0760                     u1557 0698  
                   u1807 0401                     u1727 03A4                     u1647 0779  
                   u1567 06B1                     u1817 040E                     u1737 03AA  
                   u1657 0792                     u1577 06CA                     u1497 05FB  
                   u1827 0429                     u1747 03C0                     u1667 07AB  
                   u1587 06E3                     u1837 0436                     u1757 03C8  
                   u1677 07E4                     u1597 06FC                     u1847 02C8  
                   u1767 03D0                     u1687 035B                     u1857 02CE  
                   u1777 03D8                     u1697 0361                     u1867 0305  
                   u1787 03E0                     u1877 030B                     u1797 03E8  
                   u1887 0313             __CFG_WRT$OFF 0000            __CFG_FCMEN$ON 0000  
                   _main 05DD                     fsr0h 0005                     fsr1h 0007  
                   indf0 0000                     fsr0l 0004                     indf1 0001  
                   fsr1l 0006                     btemp 007E            __CFG_BOREN$ON 0000  
                   start 0002          __end_of_Lcd_Cmd 0319          __end_of_Lcd_Out 0286  
          __CFG_CSWEN$ON 0000            __CFG_MCLRE$ON 0000               _Lcd_Chr_CP 0319  
         Lcd_Out2@buffer 0074                    ?_main 0031                    STR_10 0909  
                  STR_11 085F                    STR_12 0881                    STR_13 08A3  
                  STR_14 08C5                    STR_15 080A                    STR_16 081B  
                  STR_17 091A            __CFG_WDTE$OFF 0000          __end_of___lwdiv 021A  
        __end_of___lwmod 01E6            __CFG_PWRTE$ON 0000          __end_of_dpowers 080A  
        __end_of_isdigit 019F                    main@i 0047                    status 0003  
                  wtemp0 007E          __end_of_sprintf 05DD         __end_of_Lcd_Init 0459  
       __end_of_Lcd_Out2 024F          __initialization 07FD             __end_of_main 07FD  
                 ??_main 0035                   _ANSELC 1F4E                   _ANSELD 1F59  
         __CFG_WDTCCS$SC 0000                ??_Lcd_Cmd 0070                ??_Lcd_Out 0076  
            ?_Lcd_Chr_CP 0070                   ___wmul 019F           __CFG_STVREN$ON 0000  
              ??___lwdiv 0074                ??___lwmod 007C                   main@i2 004B  
              ??_isdigit 0070                ??_sprintf 0024  __end_of__initialization 07FD  
         __pcstackCOMMON 0070                ?_Lcd_Init 0070                ?_Lcd_Out2 0073  
           sprintf@width 002D      __size_of_Lcd_Chr_CP 0097               __pmaintext 05DD  
                ?___wmul 0070          __CFG_PPS1WAY$ON 0000      __CFG_RSTOSC$HFINT32 0000  
             ??_Lcd_Init 0073               ??_Lcd_Out2 0075                  _Lcd_Cmd 0286  
                _Lcd_Out 024F     __CFG_SCANE$available 0000          __size_of___wmul 001B  
                ___lwdiv 01E6                  ___lwmod 01BA                  __ptext1 0459  
                __ptext2 0191                  __ptext3 019F                  __ptext4 01BA  
                __ptext5 01E6                  __ptext6 021A                  __ptext7 024F  
                __ptext8 0319                  __ptext9 03B0                  _dpowers 0800  
                _isdigit 0191                  _sprintf 0459     end_of_initialization 07FD  
           ??_Lcd_Chr_CP 0070                Lcd_Out2@x 0073                Lcd_Out2@y 0076  
  __CFG_WDTCPS$WDTCPS_31 0000                _PORTCbits 000E                _PORTDbits 000F  
              _TRISCbits 0013                _TRISDbits 0014         __CFG_FEXTOSC$OFF 0000  
     __end_of_Lcd_Chr_CP 03B0           __end_of___wmul 01BA      start_initialization 07FD  
          Lcd_Out@buffer 0074        __size_of_Lcd_Init 00A9        __size_of_Lcd_Out2 0035  
       __CFG_LPBOREN$OFF 0000                 ??___wmul 0074                ___latbits 0004  
          __pcstackBANK0 0020                 ?_Lcd_Cmd 0070              sprintf@flag 002C  
               ?_Lcd_Out 0073              sprintf@prec 0029         ___lwdiv@dividend 0072  
               ?___lwdiv 0070                 ?___lwmod 0078                 ?_isdigit 0070  
       ___lwdiv@quotient 0075                 ?_sprintf 0020           ___wmul@product 0074  
               Lcd_Out@x 0073                 Lcd_Out@y 0077             Lcd_Init@data 0074  
      ___wmul@multiplier 0070             Lcd_Out2@data 0077                 _Lcd_Init 03B0  
               _Lcd_Out2 021A         __size_of_Lcd_Cmd 0093         __size_of_Lcd_Out 0037  
       __size_of___lwdiv 0034         __size_of___lwmod 002C              _isdigit$507 0070  
             sprintf@val 002A         __size_of_isdigit 000E           Lcd_Chr_CP@data 0072  
        ___lwdiv@divisor 0070          ___lwdiv@counter 0077                 __ptext10 0286  
       __size_of_sprintf 0184              Lcd_Cmd@data 0072            __size_of_main 0220  
   __CFG_WDTCWS$WDTCWS_7 0000                 main@argc 0031                 main@argv 0033  
               main@cont 0049              Lcd_Out@data 0078           __pstringtext10 08A3  
         __pstringtext11 08B4           __pstringtext12 08C5           __pstringtext13 08D6  
         __pstringtext14 08E7           __pstringtext15 08F8           __pstringtext16 0909  
         __pstringtext17 091A           __pstringtext18 0000                 isdigit@c 0071  
              sprintf@ap 0028                sprintf@sp 002F         ___lwmod@dividend 007A  
      __CFG_CLKOUTEN$OFF 0000               _OSCFRQbits 0893            __pstringtext1 0800  
          __pstringtext2 081B            __pstringtext3 082C            __pstringtext4 083D  
          __pstringtext5 084E            __pstringtext6 085F            __pstringtext7 0870  
          __pstringtext8 0881            __pstringtext9 0892                 sprintf@c 0030  
               sprintf@f 0020          ___lwmod@divisor 0078          ___lwmod@counter 007D  
