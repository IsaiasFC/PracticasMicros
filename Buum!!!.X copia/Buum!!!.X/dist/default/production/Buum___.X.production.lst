

Microchip Technology PIC LITE Macro Assembler V1.45 build -152302408 
                                                                                               Mon Nov 26 15:20:53 2018

Microchip Technology Omniscient Code Generator v1.45 (Free mode) build 201711160504
     1                           	processor	16F18877
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	idataBANK0,global,class=CODE,delta=2
     5                           	psect	idataBANK1,global,class=CODE,delta=2
     6                           	psect	stringtext1,global,class=STRCODE,delta=2
     7                           	psect	stringtext2,global,class=STRCODE,delta=2
     8                           	psect	stringtext3,global,class=STRCODE,delta=2
     9                           	psect	stringtext4,global,class=STRCODE,delta=2
    10                           	psect	stringtext5,global,class=STRCODE,delta=2
    11                           	psect	stringtext6,global,class=STRCODE,delta=2
    12                           	psect	stringtext7,global,class=STRCODE,delta=2
    13                           	psect	stringtext8,global,class=STRCODE,delta=2
    14                           	psect	stringtext9,global,class=STRCODE,delta=2
    15                           	psect	stringtext10,global,class=STRCODE,delta=2
    16                           	psect	stringtext11,global,class=STRCODE,delta=2
    17                           	psect	stringtext12,global,class=STRCODE,delta=2
    18                           	psect	stringtext13,global,class=STRCODE,delta=2
    19                           	psect	stringtext14,global,class=STRCODE,delta=2
    20                           	psect	stringtext15,global,class=STRCODE,delta=2
    21                           	psect	stringtext16,global,class=STRCODE,delta=2
    22                           	psect	stringtext17,global,class=STRCODE,delta=2
    23                           	psect	stringtext18,global,class=STRCODE,delta=2
    24                           	psect	stringtext19,global,class=STRCODE,delta=2
    25                           	psect	stringtext20,global,class=STRCODE,delta=2
    26                           	psect	cinit,global,class=CODE,merge=1,delta=2
    27                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    28                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
    29                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    30                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1
    31                           	psect	clrtext,global,class=CODE,delta=2
    32                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    33                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    34                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    35                           	psect	text1,local,class=CODE,merge=1,delta=2
    36                           	psect	text2,local,class=CODE,merge=1,delta=2
    37                           	psect	text3,local,class=CODE,merge=1,delta=2
    38                           	psect	text4,local,class=CODE,merge=1,delta=2,group=2
    39                           	psect	text5,local,class=CODE,merge=1,delta=2,group=2
    40                           	psect	text6,local,class=CODE,merge=1,delta=2
    41                           	psect	text7,local,class=CODE,merge=1,delta=2,group=2
    42                           	psect	text8,local,class=CODE,merge=1,delta=2,group=2
    43                           	psect	text9,local,class=CODE,merge=1,delta=2
    44                           	psect	text10,local,class=CODE,merge=1,delta=2
    45                           	psect	text11,local,class=CODE,merge=1,delta=2
    46                           	psect	text12,local,class=CODE,merge=1,delta=2
    47                           	psect	text13,local,class=CODE,merge=1,delta=2
    48                           	dabs	1,0x7E,2
    49  0000                     
    50                           ; Version 1.45
    51                           ; Generated 16/11/2017 GMT
    52                           ; 
    53                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    54                           ; All rights reserved.
    55                           ; 
    56                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    57                           ; 
    58                           ; Redistribution and use in source and binary forms, with or without modification, are
    59                           ; permitted provided that the following conditions are met:
    60                           ; 
    61                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    62                           ;        conditions and the following disclaimer.
    63                           ; 
    64                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    65                           ;        of conditions and the following disclaimer in the documentation and/or other
    66                           ;        materials provided with the distribution.
    67                           ; 
    68                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    69                           ;        software without specific prior written permission.
    70                           ; 
    71                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    72                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    73                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    74                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    75                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    76                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    77                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    78                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    79                           ; 
    80                           ; 
    81                           ; Code-generator required, PIC16F18877 Definitions
    82                           ; 
    83                           ; SFR Addresses
    84  0000                     	;# 
    85  0001                     	;# 
    86  0002                     	;# 
    87  0003                     	;# 
    88  0004                     	;# 
    89  0005                     	;# 
    90  0006                     	;# 
    91  0007                     	;# 
    92  0008                     	;# 
    93  0009                     	;# 
    94  000A                     	;# 
    95  000B                     	;# 
    96  000C                     	;# 
    97  000D                     	;# 
    98  000E                     	;# 
    99  000F                     	;# 
   100  0010                     	;# 
   101  0011                     	;# 
   102  0012                     	;# 
   103  0013                     	;# 
   104  0014                     	;# 
   105  0015                     	;# 
   106  0016                     	;# 
   107  0017                     	;# 
   108  0018                     	;# 
   109  0019                     	;# 
   110  001A                     	;# 
   111  001C                     	;# 
   112  001C                     	;# 
   113  001D                     	;# 
   114  001D                     	;# 
   115  001E                     	;# 
   116  001F                     	;# 
   117  008C                     	;# 
   118  008C                     	;# 
   119  008D                     	;# 
   120  008E                     	;# 
   121  008E                     	;# 
   122  008F                     	;# 
   123  0090                     	;# 
   124  0090                     	;# 
   125  0091                     	;# 
   126  0093                     	;# 
   127  0094                     	;# 
   128  0095                     	;# 
   129  0096                     	;# 
   130  0097                     	;# 
   131  0098                     	;# 
   132  0099                     	;# 
   133  009A                     	;# 
   134  009B                     	;# 
   135  009C                     	;# 
   136  009D                     	;# 
   137  009E                     	;# 
   138  010C                     	;# 
   139  010D                     	;# 
   140  010E                     	;# 
   141  010E                     	;# 
   142  010F                     	;# 
   143  0110                     	;# 
   144  0110                     	;# 
   145  0111                     	;# 
   146  0112                     	;# 
   147  0112                     	;# 
   148  0113                     	;# 
   149  0114                     	;# 
   150  0114                     	;# 
   151  0115                     	;# 
   152  0116                     	;# 
   153  0116                     	;# 
   154  0117                     	;# 
   155  0119                     	;# 
   156  0119                     	;# 
   157  0119                     	;# 
   158  011A                     	;# 
   159  011A                     	;# 
   160  011A                     	;# 
   161  011B                     	;# 
   162  011B                     	;# 
   163  011B                     	;# 
   164  011B                     	;# 
   165  011B                     	;# 
   166  011C                     	;# 
   167  011C                     	;# 
   168  011C                     	;# 
   169  011D                     	;# 
   170  011D                     	;# 
   171  011D                     	;# 
   172  011E                     	;# 
   173  011E                     	;# 
   174  011E                     	;# 
   175  011F                     	;# 
   176  011F                     	;# 
   177  011F                     	;# 
   178  011F                     	;# 
   179  011F                     	;# 
   180  018C                     	;# 
   181  018D                     	;# 
   182  018E                     	;# 
   183  018F                     	;# 
   184  0190                     	;# 
   185  0191                     	;# 
   186  0192                     	;# 
   187  0196                     	;# 
   188  0197                     	;# 
   189  0198                     	;# 
   190  0199                     	;# 
   191  019A                     	;# 
   192  019B                     	;# 
   193  019C                     	;# 
   194  020C                     	;# 
   195  020C                     	;# 
   196  020D                     	;# 
   197  020E                     	;# 
   198  020F                     	;# 
   199  020F                     	;# 
   200  0210                     	;# 
   201  0210                     	;# 
   202  0211                     	;# 
   203  0211                     	;# 
   204  0212                     	;# 
   205  0212                     	;# 
   206  0213                     	;# 
   207  0214                     	;# 
   208  0215                     	;# 
   209  0215                     	;# 
   210  0216                     	;# 
   211  0216                     	;# 
   212  0217                     	;# 
   213  0217                     	;# 
   214  0218                     	;# 
   215  0218                     	;# 
   216  0219                     	;# 
   217  021A                     	;# 
   218  021B                     	;# 
   219  021B                     	;# 
   220  021C                     	;# 
   221  021C                     	;# 
   222  021D                     	;# 
   223  021D                     	;# 
   224  021E                     	;# 
   225  021F                     	;# 
   226  028C                     	;# 
   227  028C                     	;# 
   228  028D                     	;# 
   229  028D                     	;# 
   230  028E                     	;# 
   231  028F                     	;# 
   232  0290                     	;# 
   233  0290                     	;# 
   234  0291                     	;# 
   235  0292                     	;# 
   236  0292                     	;# 
   237  0293                     	;# 
   238  0293                     	;# 
   239  0294                     	;# 
   240  0295                     	;# 
   241  0296                     	;# 
   242  0296                     	;# 
   243  0297                     	;# 
   244  0298                     	;# 
   245  0298                     	;# 
   246  0299                     	;# 
   247  0299                     	;# 
   248  029A                     	;# 
   249  029B                     	;# 
   250  029C                     	;# 
   251  029C                     	;# 
   252  029D                     	;# 
   253  030C                     	;# 
   254  030C                     	;# 
   255  030D                     	;# 
   256  030E                     	;# 
   257  030F                     	;# 
   258  0310                     	;# 
   259  0310                     	;# 
   260  0311                     	;# 
   261  0312                     	;# 
   262  0313                     	;# 
   263  0314                     	;# 
   264  0314                     	;# 
   265  0315                     	;# 
   266  0316                     	;# 
   267  0317                     	;# 
   268  0318                     	;# 
   269  0318                     	;# 
   270  0319                     	;# 
   271  031A                     	;# 
   272  031B                     	;# 
   273  031C                     	;# 
   274  031C                     	;# 
   275  031D                     	;# 
   276  031E                     	;# 
   277  031F                     	;# 
   278  038C                     	;# 
   279  038D                     	;# 
   280  038E                     	;# 
   281  0390                     	;# 
   282  0391                     	;# 
   283  0392                     	;# 
   284  040C                     	;# 
   285  040D                     	;# 
   286  040E                     	;# 
   287  040F                     	;# 
   288  0410                     	;# 
   289  0411                     	;# 
   290  0416                     	;# 
   291  0416                     	;# 
   292  0417                     	;# 
   293  0418                     	;# 
   294  0418                     	;# 
   295  0419                     	;# 
   296  041A                     	;# 
   297  041A                     	;# 
   298  041B                     	;# 
   299  041C                     	;# 
   300  041C                     	;# 
   301  041D                     	;# 
   302  041E                     	;# 
   303  041F                     	;# 
   304  048C                     	;# 
   305  048C                     	;# 
   306  048D                     	;# 
   307  048E                     	;# 
   308  048F                     	;# 
   309  048F                     	;# 
   310  0490                     	;# 
   311  0491                     	;# 
   312  0492                     	;# 
   313  0492                     	;# 
   314  0493                     	;# 
   315  0494                     	;# 
   316  0495                     	;# 
   317  0495                     	;# 
   318  0496                     	;# 
   319  0497                     	;# 
   320  0498                     	;# 
   321  0499                     	;# 
   322  049A                     	;# 
   323  049B                     	;# 
   324  049C                     	;# 
   325  049D                     	;# 
   326  050C                     	;# 
   327  050C                     	;# 
   328  050D                     	;# 
   329  050E                     	;# 
   330  050F                     	;# 
   331  050F                     	;# 
   332  0510                     	;# 
   333  0511                     	;# 
   334  0512                     	;# 
   335  0512                     	;# 
   336  0513                     	;# 
   337  0514                     	;# 
   338  0515                     	;# 
   339  0515                     	;# 
   340  0516                     	;# 
   341  0517                     	;# 
   342  0518                     	;# 
   343  0519                     	;# 
   344  051A                     	;# 
   345  051B                     	;# 
   346  051C                     	;# 
   347  051D                     	;# 
   348  058C                     	;# 
   349  058C                     	;# 
   350  058D                     	;# 
   351  058E                     	;# 
   352  058F                     	;# 
   353  058F                     	;# 
   354  0590                     	;# 
   355  0591                     	;# 
   356  0592                     	;# 
   357  0593                     	;# 
   358  060C                     	;# 
   359  060D                     	;# 
   360  060E                     	;# 
   361  060F                     	;# 
   362  0610                     	;# 
   363  0611                     	;# 
   364  0612                     	;# 
   365  0613                     	;# 
   366  0614                     	;# 
   367  0616                     	;# 
   368  0617                     	;# 
   369  0618                     	;# 
   370  0619                     	;# 
   371  061A                     	;# 
   372  061B                     	;# 
   373  061C                     	;# 
   374  061D                     	;# 
   375  061E                     	;# 
   376  068C                     	;# 
   377  068D                     	;# 
   378  068E                     	;# 
   379  068F                     	;# 
   380  0690                     	;# 
   381  0691                     	;# 
   382  0692                     	;# 
   383  0693                     	;# 
   384  0694                     	;# 
   385  070C                     	;# 
   386  070D                     	;# 
   387  070E                     	;# 
   388  070F                     	;# 
   389  0710                     	;# 
   390  0711                     	;# 
   391  0712                     	;# 
   392  0713                     	;# 
   393  0714                     	;# 
   394  0716                     	;# 
   395  0717                     	;# 
   396  0718                     	;# 
   397  0719                     	;# 
   398  071A                     	;# 
   399  071B                     	;# 
   400  071C                     	;# 
   401  071D                     	;# 
   402  071E                     	;# 
   403  0796                     	;# 
   404  0797                     	;# 
   405  0798                     	;# 
   406  0799                     	;# 
   407  079A                     	;# 
   408  079B                     	;# 
   409  080C                     	;# 
   410  080D                     	;# 
   411  080E                     	;# 
   412  080F                     	;# 
   413  0810                     	;# 
   414  0811                     	;# 
   415  0812                     	;# 
   416  0813                     	;# 
   417  0814                     	;# 
   418  081A                     	;# 
   419  081B                     	;# 
   420  081C                     	;# 
   421  081D                     	;# 
   422  081E                     	;# 
   423  081F                     	;# 
   424  088C                     	;# 
   425  088D                     	;# 
   426  088E                     	;# 
   427  088F                     	;# 
   428  0890                     	;# 
   429  0891                     	;# 
   430  0892                     	;# 
   431  0893                     	;# 
   432  0895                     	;# 
   433  0896                     	;# 
   434  0897                     	;# 
   435  0898                     	;# 
   436  0899                     	;# 
   437  089A                     	;# 
   438  089B                     	;# 
   439  090C                     	;# 
   440  090E                     	;# 
   441  090F                     	;# 
   442  091F                     	;# 
   443  098F                     	;# 
   444  098F                     	;# 
   445  0990                     	;# 
   446  0991                     	;# 
   447  0992                     	;# 
   448  0993                     	;# 
   449  0994                     	;# 
   450  0995                     	;# 
   451  0996                     	;# 
   452  0997                     	;# 
   453  1E0F                     	;# 
   454  1E10                     	;# 
   455  1E11                     	;# 
   456  1E12                     	;# 
   457  1E13                     	;# 
   458  1E14                     	;# 
   459  1E15                     	;# 
   460  1E16                     	;# 
   461  1E17                     	;# 
   462  1E18                     	;# 
   463  1E19                     	;# 
   464  1E1A                     	;# 
   465  1E1B                     	;# 
   466  1E1C                     	;# 
   467  1E1D                     	;# 
   468  1E1E                     	;# 
   469  1E1F                     	;# 
   470  1E20                     	;# 
   471  1E21                     	;# 
   472  1E22                     	;# 
   473  1E23                     	;# 
   474  1E24                     	;# 
   475  1E25                     	;# 
   476  1E26                     	;# 
   477  1E27                     	;# 
   478  1E28                     	;# 
   479  1E29                     	;# 
   480  1E2A                     	;# 
   481  1E2B                     	;# 
   482  1E2C                     	;# 
   483  1E2D                     	;# 
   484  1E2E                     	;# 
   485  1E2F                     	;# 
   486  1E30                     	;# 
   487  1E31                     	;# 
   488  1E32                     	;# 
   489  1E33                     	;# 
   490  1E34                     	;# 
   491  1E35                     	;# 
   492  1E36                     	;# 
   493  1E37                     	;# 
   494  1E8F                     	;# 
   495  1E90                     	;# 
   496  1E91                     	;# 
   497  1E92                     	;# 
   498  1E93                     	;# 
   499  1E94                     	;# 
   500  1E95                     	;# 
   501  1E96                     	;# 
   502  1E97                     	;# 
   503  1E9C                     	;# 
   504  1E9D                     	;# 
   505  1E9E                     	;# 
   506  1EA1                     	;# 
   507  1EA2                     	;# 
   508  1EA3                     	;# 
   509  1EA4                     	;# 
   510  1EA5                     	;# 
   511  1EA9                     	;# 
   512  1EAA                     	;# 
   513  1EAB                     	;# 
   514  1EAC                     	;# 
   515  1EB1                     	;# 
   516  1EB2                     	;# 
   517  1EB3                     	;# 
   518  1EB8                     	;# 
   519  1EB9                     	;# 
   520  1EBA                     	;# 
   521  1EBB                     	;# 
   522  1EBC                     	;# 
   523  1EBD                     	;# 
   524  1EBE                     	;# 
   525  1EC3                     	;# 
   526  1EC5                     	;# 
   527  1EC6                     	;# 
   528  1EC7                     	;# 
   529  1EC8                     	;# 
   530  1EC9                     	;# 
   531  1ECA                     	;# 
   532  1ECB                     	;# 
   533  1ECC                     	;# 
   534  1F10                     	;# 
   535  1F11                     	;# 
   536  1F12                     	;# 
   537  1F13                     	;# 
   538  1F14                     	;# 
   539  1F15                     	;# 
   540  1F16                     	;# 
   541  1F17                     	;# 
   542  1F18                     	;# 
   543  1F19                     	;# 
   544  1F1A                     	;# 
   545  1F1B                     	;# 
   546  1F1C                     	;# 
   547  1F1D                     	;# 
   548  1F1E                     	;# 
   549  1F1F                     	;# 
   550  1F20                     	;# 
   551  1F21                     	;# 
   552  1F22                     	;# 
   553  1F23                     	;# 
   554  1F24                     	;# 
   555  1F25                     	;# 
   556  1F26                     	;# 
   557  1F27                     	;# 
   558  1F28                     	;# 
   559  1F29                     	;# 
   560  1F2A                     	;# 
   561  1F2B                     	;# 
   562  1F2C                     	;# 
   563  1F2D                     	;# 
   564  1F2E                     	;# 
   565  1F2F                     	;# 
   566  1F30                     	;# 
   567  1F31                     	;# 
   568  1F32                     	;# 
   569  1F38                     	;# 
   570  1F39                     	;# 
   571  1F3A                     	;# 
   572  1F3B                     	;# 
   573  1F3C                     	;# 
   574  1F3D                     	;# 
   575  1F3E                     	;# 
   576  1F3F                     	;# 
   577  1F40                     	;# 
   578  1F41                     	;# 
   579  1F43                     	;# 
   580  1F44                     	;# 
   581  1F45                     	;# 
   582  1F46                     	;# 
   583  1F47                     	;# 
   584  1F48                     	;# 
   585  1F49                     	;# 
   586  1F4A                     	;# 
   587  1F4B                     	;# 
   588  1F4C                     	;# 
   589  1F4E                     	;# 
   590  1F4F                     	;# 
   591  1F50                     	;# 
   592  1F51                     	;# 
   593  1F52                     	;# 
   594  1F53                     	;# 
   595  1F54                     	;# 
   596  1F55                     	;# 
   597  1F56                     	;# 
   598  1F57                     	;# 
   599  1F59                     	;# 
   600  1F5A                     	;# 
   601  1F5B                     	;# 
   602  1F5C                     	;# 
   603  1F5D                     	;# 
   604  1F61                     	;# 
   605  1F62                     	;# 
   606  1F64                     	;# 
   607  1F65                     	;# 
   608  1F66                     	;# 
   609  1F67                     	;# 
   610  1F68                     	;# 
   611  1F69                     	;# 
   612  1F6A                     	;# 
   613  1F6B                     	;# 
   614  1F6C                     	;# 
   615  1F6D                     	;# 
   616  1FE4                     	;# 
   617  1FE5                     	;# 
   618  1FE6                     	;# 
   619  1FE7                     	;# 
   620  1FE8                     	;# 
   621  1FE9                     	;# 
   622  1FEA                     	;# 
   623  1FEB                     	;# 
   624  1FED                     	;# 
   625  1FEE                     	;# 
   626  1FEF                     	;# 
   627                           
   628                           	psect	idataBANK0
   629  0814                     __pidataBANK0:	
   630                           
   631                           ;initializer for _adressRTC
   632  0814  34D0               	retlw	208
   633  0815  3400               	retlw	0
   634                           
   635                           	psect	idataBANK1
   636  0812                     __pidataBANK1:	
   637                           
   638                           ;initializer for _adressRTC_read
   639  0812  34D1               	retlw	209
   640  0813  3400               	retlw	0
   641                           
   642                           	psect	stringtext1
   643  1800                     __pstringtext1:	
   644  1800                     _dpowers:	
   645  1800  3401               	retlw	1
   646  1801  3400               	retlw	0
   647  1802  340A               	retlw	10
   648  1803  3400               	retlw	0
   649  1804  3464               	retlw	100
   650  1805  3400               	retlw	0
   651  1806  34E8               	retlw	232
   652  1807  3403               	retlw	3
   653  1808  3410               	retlw	16
   654  1809  3427               	retlw	39
   655  180A                     __end_of_dpowers:	
   656  000F                     _PORTD	set	15
   657  000E                     _PORTC	set	14
   658  0012                     _TRISB	set	18
   659  000D                     _PORTB	set	13
   660  0011                     _TRISA	set	17
   661  000C                     _PORTA	set	12
   662  000D                     _PORTBbits	set	13
   663  0016                     _LATAbits	set	22
   664  000F                     _PORTDbits	set	15
   665  000E                     _PORTCbits	set	14
   666  0014                     _TRISDbits	set	20
   667  0013                     _TRISCbits	set	19
   668  018D                     _SSP1ADD	set	397
   669  0190                     _SSP1CON1bits	set	400
   670  018F                     _SSP1STATbits	set	399
   671  018C                     _SSP1BUF	set	396
   672  0191                     _SSP1CON2bits	set	401
   673  0893                     _OSCFRQbits	set	2195
   674  1EC6                     _SSP1DATPPS	set	7878
   675  1EC5                     _SSP1CLKPPS	set	7877
   676  1F18                     _RB0PPS	set	7960
   677  1F24                     _RC4PPS	set	7972
   678  1F23                     _RC3PPS	set	7971
   679  1F59                     _ANSELD	set	8025
   680  1F4E                     _ANSELCbits	set	8014
   681  1F43                     _ANSELB	set	8003
   682  1F38                     _ANSELA	set	7992
   683  180A                     STR_6:	
   684  180A  3425               	retlw	37	;'%'
   685  180B  3464               	retlw	100	;'d'
   686  180C  343A               	retlw	58	;':'
   687  180D  3425               	retlw	37	;'%'
   688  180E  3464               	retlw	100	;'d'
   689  180F  343A               	retlw	58	;':'
   690  1810  3425               	retlw	37	;'%'
   691  1811  3464               	retlw	100	;'d'
   692  1812  3420               	retlw	32	;' '
   693  1813  3425               	retlw	37	;'%'
   694  1814  3464               	retlw	100	;'d'
   695  1815  342F               	retlw	47	;'/'
   696  1816  3425               	retlw	37	;'%'
   697  1817  3464               	retlw	100	;'d'
   698  1818  342F               	retlw	47	;'/'
   699  1819  3425               	retlw	37	;'%'
   700  181A  3464               	retlw	100	;'d'
   701  181B  3400               	retlw	0
   702                           
   703                           	psect	stringtext2
   704  181C                     __pstringtext2:	
   705  181C                     STR_2:	
   706  181C  3453               	retlw	83	;'S'
   707  181D  3445               	retlw	69	;'E'
   708  181E  344C               	retlw	76	;'L'
   709  181F  3420               	retlw	32	;' '
   710  1820  3448               	retlw	72	;'H'
   711  1821  344F               	retlw	79	;'O'
   712  1822  3455               	retlw	85	;'U'
   713  1823  3452               	retlw	82	;'R'
   714  1824  3420               	retlw	32	;' '
   715  1825  3442               	retlw	66	;'B'
   716  1826  3455               	retlw	85	;'U'
   717  1827  344D               	retlw	77	;'M'
   718  1828  3421               	retlw	33	;'!'
   719  1829  3421               	retlw	33	;'!'
   720  182A  3421               	retlw	33	;'!'
   721  182B  3400               	retlw	0
   722                           
   723                           	psect	stringtext3
   724  182C                     __pstringtext3:	
   725  182C                     STR_35:	
   726  182C  3425               	retlw	37	;'%'
   727  182D  3464               	retlw	100	;'d'
   728  182E  343A               	retlw	58	;':'
   729  182F  3425               	retlw	37	;'%'
   730  1830  3464               	retlw	100	;'d'
   731  1831  343A               	retlw	58	;':'
   732  1832  3425               	retlw	37	;'%'
   733  1833  3464               	retlw	100	;'d'
   734  1834  3420               	retlw	32	;' '
   735  1835  3420               	retlw	32	;' '
   736  1836  3425               	retlw	37	;'%'
   737  1837  3464               	retlw	100	;'d'
   738  1838  342F               	retlw	47	;'/'
   739  1839  3425               	retlw	37	;'%'
   740  183A  3464               	retlw	100	;'d'
   741  183B  3400               	retlw	0
   742                           
   743                           	psect	stringtext4
   744  183C                     __pstringtext4:	
   745  183C                     STR_11:	
   746  183C  3420               	retlw	32	;' '
   747  183D  3420               	retlw	32	;' '
   748  183E  3443               	retlw	67	;'C'
   749  183F  344F               	retlw	79	;'O'
   750  1840  344E               	retlw	78	;'N'
   751  1841  3446               	retlw	70	;'F'
   752  1842  3449               	retlw	73	;'I'
   753  1843  3447               	retlw	71	;'G'
   754  1844  3420               	retlw	32	;' '
   755  1845  3446               	retlw	70	;'F'
   756  1846  3445               	retlw	69	;'E'
   757  1847  3443               	retlw	67	;'C'
   758  1848  3448               	retlw	72	;'H'
   759  1849  3441               	retlw	65	;'A'
   760  184A  3400               	retlw	0
   761                           
   762                           	psect	stringtext5
   763  184B                     __pstringtext5:	
   764  184B                     STR_3:	
   765  184B  3420               	retlw	32	;' '
   766  184C  3449               	retlw	73	;'I'
   767  184D  344E               	retlw	78	;'N'
   768  184E  3449               	retlw	73	;'I'
   769  184F  3443               	retlw	67	;'C'
   770  1850  3449               	retlw	73	;'I'
   771  1851  344F               	retlw	79	;'O'
   772  1852  3420               	retlw	32	;' '
   773  1853  3443               	retlw	67	;'C'
   774  1854  344F               	retlw	79	;'O'
   775  1855  344E               	retlw	78	;'N'
   776  1856  3446               	retlw	70	;'F'
   777  1857  3449               	retlw	73	;'I'
   778  1858  3447               	retlw	71	;'G'
   779  1859  3400               	retlw	0
   780                           
   781                           	psect	stringtext6
   782  185A                     __pstringtext6:	
   783  185A                     STR_20:	
   784  185A  3420               	retlw	32	;' '
   785  185B  3420               	retlw	32	;' '
   786  185C  3444               	retlw	68	;'D'
   787  185D  3445               	retlw	69	;'E'
   788  185E  3420               	retlw	32	;' '
   789  185F  3445               	retlw	69	;'E'
   790  1860  3458               	retlw	88	;'X'
   791  1861  3450               	retlw	80	;'P'
   792  1862  344C               	retlw	76	;'L'
   793  1863  344F               	retlw	79	;'O'
   794  1864  3453               	retlw	83	;'S'
   795  1865  3449               	retlw	73	;'I'
   796  1866  344F               	retlw	79	;'O'
   797  1867  344E               	retlw	78	;'N'
   798  1868  3400               	retlw	0
   799                           
   800                           	psect	stringtext7
   801  1869                     __pstringtext7:	
   802  1869                     STR_36:	
   803  1869  3420               	retlw	32	;' '
   804  186A  3420               	retlw	32	;' '
   805  186B  3420               	retlw	32	;' '
   806  186C  3442               	retlw	66	;'B'
   807  186D  3455               	retlw	85	;'U'
   808  186E  344D               	retlw	77	;'M'
   809  186F  3421               	retlw	33	;'!'
   810  1870  3421               	retlw	33	;'!'
   811  1871  3421               	retlw	33	;'!'
   812  1872  3421               	retlw	33	;'!'
   813  1873  3421               	retlw	33	;'!'
   814  1874  3421               	retlw	33	;'!'
   815  1875  3421               	retlw	33	;'!'
   816  1876  3400               	retlw	0
   817                           
   818                           	psect	stringtext8
   819  1877                     __pstringtext8:	
   820  1877                     STR_34:	
   821  1877  3420               	retlw	32	;' '
   822  1878  3420               	retlw	32	;' '
   823  1879  3443               	retlw	67	;'C'
   824  187A  344F               	retlw	79	;'O'
   825  187B  344E               	retlw	78	;'N'
   826  187C  3446               	retlw	70	;'F'
   827  187D  3449               	retlw	73	;'I'
   828  187E  3447               	retlw	71	;'G'
   829  187F  3455               	retlw	85	;'U'
   830  1880  3452               	retlw	82	;'R'
   831  1881  3441               	retlw	65	;'A'
   832  1882  3444               	retlw	68	;'D'
   833  1883  3441               	retlw	65	;'A'
   834  1884  3400               	retlw	0
   835                           
   836                           	psect	stringtext9
   837  1885                     __pstringtext9:	
   838  1885                     STR_5:	
   839  1885  3420               	retlw	32	;' '
   840  1886  3420               	retlw	32	;' '
   841  1887  3420               	retlw	32	;' '
   842  1888  3443               	retlw	67	;'C'
   843  1889  344F               	retlw	79	;'O'
   844  188A  344E               	retlw	78	;'N'
   845  188B  3446               	retlw	70	;'F'
   846  188C  3449               	retlw	73	;'I'
   847  188D  3447               	retlw	71	;'G'
   848  188E  3420               	retlw	32	;' '
   849  188F  3453               	retlw	83	;'S'
   850  1890  3445               	retlw	69	;'E'
   851  1891  3447               	retlw	71	;'G'
   852  1892  3400               	retlw	0
   853                           
   854                           	psect	stringtext10
   855  1893                     __pstringtext10:	
   856  1893                     STR_7:	
   857  1893  3420               	retlw	32	;' '
   858  1894  3420               	retlw	32	;' '
   859  1895  3420               	retlw	32	;' '
   860  1896  3443               	retlw	67	;'C'
   861  1897  344F               	retlw	79	;'O'
   862  1898  344E               	retlw	78	;'N'
   863  1899  3446               	retlw	70	;'F'
   864  189A  3449               	retlw	73	;'I'
   865  189B  3447               	retlw	71	;'G'
   866  189C  3420               	retlw	32	;' '
   867  189D  344D               	retlw	77	;'M'
   868  189E  3449               	retlw	73	;'I'
   869  189F  344E               	retlw	78	;'N'
   870  18A0  3400               	retlw	0
   871                           
   872                           	psect	stringtext11
   873  18A1                     __pstringtext11:	
   874  18A1                     STR_18:	
   875  18A1  3420               	retlw	32	;' '
   876  18A2  3420               	retlw	32	;' '
   877  18A3  3443               	retlw	67	;'C'
   878  18A4  344F               	retlw	79	;'O'
   879  18A5  344E               	retlw	78	;'N'
   880  18A6  3446               	retlw	70	;'F'
   881  18A7  3449               	retlw	73	;'I'
   882  18A8  3447               	retlw	71	;'G'
   883  18A9  3455               	retlw	85	;'U'
   884  18AA  3452               	retlw	82	;'R'
   885  18AB  3441               	retlw	65	;'A'
   886  18AC  3444               	retlw	68	;'D'
   887  18AD  344F               	retlw	79	;'O'
   888  18AE  3400               	retlw	0
   889                           
   890                           	psect	stringtext12
   891  18AF                     __pstringtext12:	
   892  18AF                     STR_15:	
   893  18AF  3420               	retlw	32	;' '
   894  18B0  3420               	retlw	32	;' '
   895  18B1  3443               	retlw	67	;'C'
   896  18B2  344F               	retlw	79	;'O'
   897  18B3  344E               	retlw	78	;'N'
   898  18B4  3446               	retlw	70	;'F'
   899  18B5  3449               	retlw	73	;'I'
   900  18B6  3447               	retlw	71	;'G'
   901  18B7  3420               	retlw	32	;' '
   902  18B8  3459               	retlw	89	;'Y'
   903  18B9  3445               	retlw	69	;'E'
   904  18BA  3441               	retlw	65	;'A'
   905  18BB  3452               	retlw	82	;'R'
   906  18BC  3400               	retlw	0
   907                           
   908                           	psect	stringtext13
   909  18BD                     __pstringtext13:	
   910  18BD                     STR_1:	
   911  18BD  3420               	retlw	32	;' '
   912  18BE  3420               	retlw	32	;' '
   913  18BF  3443               	retlw	67	;'C'
   914  18C0  344F               	retlw	79	;'O'
   915  18C1  344E               	retlw	78	;'N'
   916  18C2  3446               	retlw	70	;'F'
   917  18C3  3449               	retlw	73	;'I'
   918  18C4  3447               	retlw	71	;'G'
   919  18C5  3420               	retlw	32	;' '
   920  18C6  3448               	retlw	72	;'H'
   921  18C7  344F               	retlw	79	;'O'
   922  18C8  3455               	retlw	85	;'U'
   923  18C9  3452               	retlw	82	;'R'
   924  18CA  3400               	retlw	0
   925                           
   926                           	psect	stringtext14
   927  18CB                     __pstringtext14:	
   928  18CB                     STR_13:	
   929  18CB  3420               	retlw	32	;' '
   930  18CC  3420               	retlw	32	;' '
   931  18CD  3420               	retlw	32	;' '
   932  18CE  3443               	retlw	67	;'C'
   933  18CF  344F               	retlw	79	;'O'
   934  18D0  344E               	retlw	78	;'N'
   935  18D1  3446               	retlw	70	;'F'
   936  18D2  3449               	retlw	73	;'I'
   937  18D3  3447               	retlw	71	;'G'
   938  18D4  3420               	retlw	32	;' '
   939  18D5  344D               	retlw	77	;'M'
   940  18D6  3445               	retlw	69	;'E'
   941  18D7  3453               	retlw	83	;'S'
   942  18D8  3400               	retlw	0
   943                           
   944                           	psect	stringtext15
   945  18D9                     __pstringtext15:	
   946  18D9                     STR_37:	
   947  18D9  3454               	retlw	84	;'T'
   948  18DA  3449               	retlw	73	;'I'
   949  18DB  344D               	retlw	77	;'M'
   950  18DC  3445               	retlw	69	;'E'
   951  18DD  3420               	retlw	32	;' '
   952  18DE  344F               	retlw	79	;'O'
   953  18DF  3456               	retlw	86	;'V'
   954  18E0  3445               	retlw	69	;'E'
   955  18E1  3452               	retlw	82	;'R'
   956  18E2  3420               	retlw	32	;' '
   957  18E3  343A               	retlw	58	;':'
   958  18E4  3433               	retlw	51	;'3'
   959  18E5  3400               	retlw	0
   960                           
   961                           	psect	stringtext16
   962  18E6                     __pstringtext16:	
   963  18E6                     STR_4:	
   964  18E6  3420               	retlw	32	;' '
   965  18E7  3420               	retlw	32	;' '
   966  18E8  3420               	retlw	32	;' '
   967  18E9  3444               	retlw	68	;'D'
   968  18EA  3445               	retlw	69	;'E'
   969  18EB  344C               	retlw	76	;'L'
   970  18EC  3420               	retlw	32	;' '
   971  18ED  3452               	retlw	82	;'R'
   972  18EE  3445               	retlw	69	;'E'
   973  18EF  344C               	retlw	76	;'L'
   974  18F0  344F               	retlw	79	;'O'
   975  18F1  344A               	retlw	74	;'J'
   976  18F2  3400               	retlw	0
   977                           
   978                           	psect	stringtext17
   979  18F3                     __pstringtext17:	
   980  18F3                     STR_33:	
   981  18F3  3420               	retlw	32	;' '
   982  18F4  3420               	retlw	32	;' '
   983  18F5  3420               	retlw	32	;' '
   984  18F6  3445               	retlw	69	;'E'
   985  18F7  3458               	retlw	88	;'X'
   986  18F8  3450               	retlw	80	;'P'
   987  18F9  344C               	retlw	76	;'L'
   988  18FA  344F               	retlw	79	;'O'
   989  18FB  3453               	retlw	83	;'S'
   990  18FC  3449               	retlw	73	;'I'
   991  18FD  344F               	retlw	79	;'O'
   992  18FE  344E               	retlw	78	;'N'
   993  18FF  3400               	retlw	0
   994                           
   995                           	psect	stringtext18
   996  1900                     __pstringtext18:	
   997  1900                     STR_9:	
   998  1900  3420               	retlw	32	;' '
   999  1901  3420               	retlw	32	;' '
  1000  1902  3420               	retlw	32	;' '
  1001  1903  3443               	retlw	67	;'C'
  1002  1904  344F               	retlw	79	;'O'
  1003  1905  344E               	retlw	78	;'N'
  1004  1906  3446               	retlw	70	;'F'
  1005  1907  3449               	retlw	73	;'I'
  1006  1908  3447               	retlw	71	;'G'
  1007  1909  3420               	retlw	32	;' '
  1008  190A  3448               	retlw	72	;'H'
  1009  190B  3452               	retlw	82	;'R'
  1010  190C  3400               	retlw	0
  1011                           
  1012                           	psect	stringtext19
  1013  190D                     __pstringtext19:	
  1014  190D                     STR_17:	
  1015  190D  3420               	retlw	32	;' '
  1016  190E  3420               	retlw	32	;' '
  1017  190F  3420               	retlw	32	;' '
  1018  1910  3420               	retlw	32	;' '
  1019  1911  3420               	retlw	32	;' '
  1020  1912  3452               	retlw	82	;'R'
  1021  1913  3445               	retlw	69	;'E'
  1022  1914  344C               	retlw	76	;'L'
  1023  1915  344F               	retlw	79	;'O'
  1024  1916  344A               	retlw	74	;'J'
  1025  1917  3400               	retlw	0
  1026                           
  1027                           	psect	stringtext20
  1028  0000                     __pstringtext20:	
  1029  183C                     
  1030                           ; #config settings
  1031  0000                     
  1032                           	psect	cinit
  1033  07DD                     start_initialization:	
  1034  07DD                     __initialization:	
  1035                           
  1036                           ; Initialize objects allocated to BANK0
  1037  07DD  3188  2014  3187   	fcall	__pidataBANK0	;fetch initializer
  1038  07E0  00EE               	movwf	__pdataBANK0& (0+127)
  1039  07E1  3188  2015  3187   	fcall	__pidataBANK0+1	;fetch initializer
  1040  07E4  00EF               	movwf	(__pdataBANK0+1)& (0+127)
  1041                           
  1042                           ; Initialize objects allocated to BANK1
  1043  07E5  0141               	movlb	1	; select bank1
  1044  07E6  3188  2012  3187   	fcall	__pidataBANK1	;fetch initializer
  1045  07E9  00DE               	movwf	__pdataBANK1& (0+127)
  1046  07EA  3188  2013  3187   	fcall	__pidataBANK1+1	;fetch initializer
  1047  07ED  00DF               	movwf	(__pdataBANK1+1)& (0+127)
  1048                           
  1049                           ; Clear objects allocated to BANK0
  1050  07EE  3020               	movlw	low __pbssBANK0
  1051  07EF  0084               	movwf	4
  1052  07F0  3000               	movlw	high __pbssBANK0
  1053  07F1  0085               	movwf	5
  1054  07F2  302A               	movlw	42
  1055  07F3  3180  2005  3187   	fcall	clear_ram0
  1056                           
  1057                           ; Clear objects allocated to BANK1
  1058  07F6  30A0               	movlw	low __pbssBANK1
  1059  07F7  0084               	movwf	4
  1060  07F8  3000               	movlw	high __pbssBANK1
  1061  07F9  0085               	movwf	5
  1062  07FA  303E               	movlw	62
  1063  07FB  3180  2005         	fcall	clear_ram0
  1064  07FD                     end_of_initialization:	
  1065                           ;End of C runtime variable initialization code
  1066                           
  1067  07FD                     __end_of__initialization:	
  1068  07FD  0140               	movlb	0
  1069  07FE  318D  2D0B         	ljmp	_main	;jump to C main() function
  1070                           
  1071                           	psect	bssBANK0
  1072  0020                     __pbssBANK0:	
  1073  0020                     _i:	
  1074  0020                     	ds	2
  1075  0022                     _aux:	
  1076  0022                     	ds	2
  1077  0024                     _seleccion:	
  1078  0024                     	ds	2
  1079  0026                     _syear:	
  1080  0026                     	ds	2
  1081  0028                     _smonth:	
  1082  0028                     	ds	2
  1083  002A                     _sdate:	
  1084  002A                     	ds	2
  1085  002C                     _shr:	
  1086  002C                     	ds	2
  1087  002E                     _smin:	
  1088  002E                     	ds	2
  1089  0030                     _sseg:	
  1090  0030                     	ds	2
  1091  0032                     _iyear:	
  1092  0032                     	ds	2
  1093  0034                     _imonth:	
  1094  0034                     	ds	2
  1095  0036                     _idate:	
  1096  0036                     	ds	2
  1097  0038                     _ihr:	
  1098  0038                     	ds	2
  1099  003A                     _imin:	
  1100  003A                     	ds	2
  1101  003C                     _iseg:	
  1102  003C                     	ds	2
  1103  003E                     _dseg:	
  1104  003E                     	ds	2
  1105  0040                     _rmonth:	
  1106  0040                     	ds	2
  1107  0042                     _rdate:	
  1108  0042                     	ds	2
  1109  0044                     _rhr:	
  1110  0044                     	ds	2
  1111  0046                     _rmin:	
  1112  0046                     	ds	2
  1113  0048                     _rseg:	
  1114  0048                     	ds	2
  1115                           
  1116                           	psect	dataBANK0
  1117  006E                     __pdataBANK0:	
  1118  006E                     _adressRTC:	
  1119  006E                     	ds	2
  1120                           
  1121                           	psect	bssBANK1
  1122  00A0                     __pbssBANK1:	
  1123  00A0                     _auxbum:	
  1124  00A0                     	ds	2
  1125  00A2                     _aux7:	
  1126  00A2                     	ds	2
  1127  00A4                     _aux6:	
  1128  00A4                     	ds	2
  1129  00A6                     _aux5:	
  1130  00A6                     	ds	2
  1131  00A8                     _aux4:	
  1132  00A8                     	ds	2
  1133  00AA                     _aux3:	
  1134  00AA                     	ds	2
  1135  00AC                     _aux2:	
  1136  00AC                     	ds	2
  1137  00AE                     _inicio:	
  1138  00AE                     	ds	2
  1139  00B0                     _dyear:	
  1140  00B0                     	ds	2
  1141  00B2                     _dmonth:	
  1142  00B2                     	ds	2
  1143  00B4                     _ddate:	
  1144  00B4                     	ds	2
  1145  00B6                     _dday:	
  1146  00B6                     	ds	2
  1147  00B8                     _dhr:	
  1148  00B8                     	ds	2
  1149  00BA                     _dmin:	
  1150  00BA                     	ds	2
  1151  00BC                     _rday:	
  1152  00BC                     	ds	2
  1153  00BE                     _cyear:	
  1154  00BE                     	ds	2
  1155  00C0                     _cmonth:	
  1156  00C0                     	ds	2
  1157  00C2                     _cdate:	
  1158  00C2                     	ds	2
  1159  00C4                     _cday:	
  1160  00C4                     	ds	2
  1161  00C6                     _chr:	
  1162  00C6                     	ds	2
  1163  00C8                     _cmin:	
  1164  00C8                     	ds	2
  1165  00CA                     _cseg:	
  1166  00CA                     	ds	2
  1167  00CC                     _buffer1:	
  1168  00CC                     	ds	16
  1169  00DC                     _ryear:	
  1170  00DC                     	ds	2
  1171                           
  1172                           	psect	dataBANK1
  1173  00DE                     __pdataBANK1:	
  1174  00DE                     _adressRTC_read:	
  1175  00DE                     	ds	2
  1176                           
  1177                           	psect	clrtext
  1178  0005                     clear_ram0:	
  1179                           ;	Called with FSR0 containing the base address, and
  1180                           ;	WREG with the size to clear
  1181                           
  1182  0005  0064               	clrwdt	;clear the watchdog before getting into this loop
  1183  0006                     clrloop0:	
  1184  0006  0180               	clrf	0	;clear RAM location pointed to by FSR
  1185  0007  3101               	addfsr 0,1
  1186  0008  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
  1187  0009  2806               	goto	clrloop0	;have we reached the end yet?
  1188  000A  3400               	retlw	0	;all done for this memory range, return
  1189                           
  1190                           	psect	cstackCOMMON
  1191  0070                     __pcstackCOMMON:	
  1192  0070                     ?_Lcd_Cmd:	
  1193  0070                     ??_Lcd_Cmd:	
  1194                           ; 1 bytes @ 0x0
  1195                           
  1196  0070                     ?_Lcd_Chr_CP:	
  1197                           ; 1 bytes @ 0x0
  1198                           
  1199  0070                     ??_Lcd_Chr_CP:	
  1200                           ; 1 bytes @ 0x0
  1201                           
  1202  0070                     ?_Lcd_Init:	
  1203                           ; 1 bytes @ 0x0
  1204                           
  1205  0070                     ?_moverservo:	
  1206                           ; 1 bytes @ 0x0
  1207                           
  1208  0070                     ?_menu:	
  1209                           ; 1 bytes @ 0x0
  1210                           
  1211  0070                     ?___awdiv:	
  1212                           ; 1 bytes @ 0x0
  1213                           
  1214  0070                     ?___lwdiv:	
  1215                           ; 2 bytes @ 0x0
  1216                           
  1217  0070                     moverservo@grados:	
  1218                           ; 2 bytes @ 0x0
  1219                           
  1220  0070                     ___awdiv@divisor:	
  1221                           ; 2 bytes @ 0x0
  1222                           
  1223  0070                     ___lwdiv@divisor:	
  1224                           ; 2 bytes @ 0x0
  1225                           
  1226                           
  1227                           ; 2 bytes @ 0x0
  1228  0070                     	ds	2
  1229  0072                     ??_moverservo:	
  1230  0072                     Lcd_Chr_CP@data:	
  1231                           ; 1 bytes @ 0x2
  1232                           
  1233  0072                     Lcd_Cmd@data:	
  1234                           ; 1 bytes @ 0x2
  1235                           
  1236  0072                     ___awdiv@dividend:	
  1237                           ; 1 bytes @ 0x2
  1238                           
  1239  0072                     ___lwdiv@dividend:	
  1240                           ; 2 bytes @ 0x2
  1241                           
  1242                           
  1243                           ; 2 bytes @ 0x2
  1244  0072                     	ds	1
  1245  0073                     ??_Lcd_Init:	
  1246  0073                     ?_Lcd_Out:	
  1247                           ; 1 bytes @ 0x3
  1248                           
  1249  0073                     ?_Lcd_Out2:	
  1250                           ; 1 bytes @ 0x3
  1251                           
  1252  0073                     Lcd_Out@x:	
  1253                           ; 1 bytes @ 0x3
  1254                           
  1255  0073                     Lcd_Out2@x:	
  1256                           ; 1 bytes @ 0x3
  1257                           
  1258                           
  1259                           ; 1 bytes @ 0x3
  1260  0073                     	ds	1
  1261  0074                     ??___awdiv:	
  1262  0074                     ??___lwdiv:	
  1263                           ; 1 bytes @ 0x4
  1264                           
  1265  0074                     Lcd_Init@data:	
  1266                           ; 1 bytes @ 0x4
  1267                           
  1268  0074                     Lcd_Out2@buffer:	
  1269                           ; 1 bytes @ 0x4
  1270                           
  1271  0074                     Lcd_Out@buffer:	
  1272                           ; 1 bytes @ 0x4
  1273                           
  1274                           
  1275                           ; 2 bytes @ 0x4
  1276  0074                     	ds	1
  1277  0075                     ??_Lcd_Out2:	
  1278  0075                     ___awdiv@counter:	
  1279                           ; 1 bytes @ 0x5
  1280                           
  1281  0075                     ___lwdiv@quotient:	
  1282                           ; 1 bytes @ 0x5
  1283                           
  1284                           
  1285                           ; 2 bytes @ 0x5
  1286  0075                     	ds	1
  1287  0076                     ??_Lcd_Out:	
  1288  0076                     Lcd_Out2@y:	
  1289                           ; 1 bytes @ 0x6
  1290                           
  1291  0076                     ___awdiv@sign:	
  1292                           ; 1 bytes @ 0x6
  1293                           
  1294                           
  1295                           ; 1 bytes @ 0x6
  1296  0076                     	ds	1
  1297  0077                     Lcd_Out@y:	
  1298  0077                     Lcd_Out2@data:	
  1299                           ; 1 bytes @ 0x7
  1300                           
  1301  0077                     ___lwdiv@counter:	
  1302                           ; 1 bytes @ 0x7
  1303                           
  1304  0077                     ___awdiv@quotient:	
  1305                           ; 1 bytes @ 0x7
  1306                           
  1307                           
  1308                           ; 2 bytes @ 0x7
  1309  0077                     	ds	1
  1310  0078                     ?___lwmod:	
  1311  0078                     Lcd_Out@data:	
  1312                           ; 2 bytes @ 0x8
  1313                           
  1314  0078                     ___lwmod@divisor:	
  1315                           ; 1 bytes @ 0x8
  1316                           
  1317                           
  1318                           ; 2 bytes @ 0x8
  1319  0078                     	ds	1
  1320  0079                     ?___wmul:	
  1321  0079                     ___wmul@multiplier:	
  1322                           ; 2 bytes @ 0x9
  1323                           
  1324                           
  1325                           ; 2 bytes @ 0x9
  1326  0079                     	ds	1
  1327  007A                     ___lwmod@dividend:	
  1328                           
  1329                           ; 2 bytes @ 0xA
  1330  007A                     	ds	1
  1331  007B                     ___wmul@multiplicand:	
  1332                           
  1333                           ; 2 bytes @ 0xB
  1334  007B                     	ds	1
  1335  007C                     ??___lwmod:	
  1336                           
  1337                           ; 1 bytes @ 0xC
  1338  007C                     	ds	1
  1339  007D                     ??___wmul:	
  1340  007D                     ___lwmod@counter:	
  1341                           ; 1 bytes @ 0xD
  1342                           
  1343                           
  1344                           ; 1 bytes @ 0xD
  1345  007D                     	ds	1
  1346                           
  1347                           	psect	cstackBANK0
  1348  004A                     __pcstackBANK0:	
  1349  004A                     ?_sprintf:	
  1350  004A                     sprintf@f:	
  1351                           ; 2 bytes @ 0x0
  1352                           
  1353  004A                     ___wmul@product:	
  1354                           ; 2 bytes @ 0x0
  1355                           
  1356                           
  1357                           ; 2 bytes @ 0x0
  1358  004A                     	ds	2
  1359  004C                     ?_rtc:	
  1360  004C                     rtc@seg:	
  1361                           ; 1 bytes @ 0x2
  1362                           
  1363                           
  1364                           ; 2 bytes @ 0x2
  1365  004C                     	ds	2
  1366  004E                     rtc@min:	
  1367                           
  1368                           ; 2 bytes @ 0x4
  1369  004E                     	ds	2
  1370  0050                     rtc@hr:	
  1371                           
  1372                           ; 2 bytes @ 0x6
  1373  0050                     	ds	2
  1374  0052                     rtc@day:	
  1375                           
  1376                           ; 2 bytes @ 0x8
  1377  0052                     	ds	2
  1378  0054                     rtc@date:	
  1379                           
  1380                           ; 2 bytes @ 0xA
  1381  0054                     	ds	2
  1382  0056                     rtc@month:	
  1383                           
  1384                           ; 2 bytes @ 0xC
  1385  0056                     	ds	2
  1386  0058                     ??_sprintf:	
  1387  0058                     rtc@year:	
  1388                           ; 1 bytes @ 0xE
  1389                           
  1390                           
  1391                           ; 2 bytes @ 0xE
  1392  0058                     	ds	2
  1393  005A                     ??_rtc:	
  1394                           
  1395                           ; 1 bytes @ 0x10
  1396  005A                     	ds	2
  1397  005C                     sprintf@ap:	
  1398                           
  1399                           ; 1 bytes @ 0x12
  1400  005C                     	ds	1
  1401  005D                     sprintf@flag:	
  1402                           
  1403                           ; 1 bytes @ 0x13
  1404  005D                     	ds	1
  1405  005E                     sprintf@prec:	
  1406                           
  1407                           ; 1 bytes @ 0x14
  1408  005E                     	ds	1
  1409  005F                     sprintf@val:	
  1410                           
  1411                           ; 2 bytes @ 0x15
  1412  005F                     	ds	2
  1413  0061                     sprintf@c:	
  1414                           
  1415                           ; 1 bytes @ 0x17
  1416  0061                     	ds	1
  1417  0062                     sprintf@sp:	
  1418                           
  1419                           ; 1 bytes @ 0x18
  1420  0062                     	ds	1
  1421  0063                     ??_menu:	
  1422                           
  1423                           ; 1 bytes @ 0x19
  1424  0063                     	ds	2
  1425  0065                     ?_main:	
  1426  0065                     main@argc:	
  1427                           ; 2 bytes @ 0x1B
  1428                           
  1429                           
  1430                           ; 2 bytes @ 0x1B
  1431  0065                     	ds	2
  1432  0067                     main@argv:	
  1433                           
  1434                           ; 2 bytes @ 0x1D
  1435  0067                     	ds	2
  1436  0069                     ??_main:	
  1437                           
  1438                           ; 1 bytes @ 0x1F
  1439  0069                     	ds	5
  1440                           
  1441                           	psect	maintext
  1442  0D0B                     __pmaintext:	
  1443 ;;
  1444 ;;Main: autosize = 0, tempsize = 5, incstack = 0, save=0
  1445 ;;
  1446 ;; *************** function _main *****************
  1447 ;; Defined at:
  1448 ;;		line 400 in file "main.c"
  1449 ;; Parameters:    Size  Location     Type
  1450 ;;  argc            2   27[BANK0 ] int 
  1451 ;;  argv            2   29[BANK0 ] PTR PTR unsigned char 
  1452 ;; Auto vars:     Size  Location     Type
  1453 ;;		None
  1454 ;; Return value:  Size  Location     Type
  1455 ;;                  2   27[BANK0 ] int 
  1456 ;; Registers used:
  1457 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  1458 ;; Tracked objects:
  1459 ;;		On entry : B3F/0
  1460 ;;		On exit  : 0/0
  1461 ;;		Unchanged: 0/0
  1462 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
  1463 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  1464 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  1465 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  1466 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  1467 ;;Total ram usage:        9 bytes
  1468 ;; Hardware stack levels required when called:    3
  1469 ;; This function calls:
  1470 ;;		_Lcd_Cmd
  1471 ;;		_Lcd_Init
  1472 ;;		_Lcd_Out
  1473 ;;		_Lcd_Out2
  1474 ;;		___wmul
  1475 ;;		_menu
  1476 ;;		_moverservo
  1477 ;;		_rtc
  1478 ;;		_sprintf
  1479 ;; This function is called by:
  1480 ;;		Startup code after reset
  1481 ;; This function uses a non-reentrant model
  1482 ;;
  1483                           
  1484                           
  1485                           ;psect for function _main
  1486  0D0B                     _main:	
  1487                           
  1488                           ;main.c: 401: OSCFRQbits.HFFRQ=0b110;
  1489                           
  1490                           ;incstack = 0
  1491                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  1492  0D0B  0151               	movlb	17	; select bank17
  1493  0D0C  0813               	movf	19,w	;volatile
  1494  0D0D  39F8               	andlw	-8
  1495  0D0E  3806               	iorlw	6
  1496  0D0F  0093               	movwf	19	;volatile
  1497                           
  1498                           ;main.c: 403: PORTA=0;
  1499  0D10  0140               	movlb	0	; select bank0
  1500  0D11  018C               	clrf	12	;volatile
  1501                           
  1502                           ;main.c: 404: ANSELA=0;
  1503  0D12  017E               	movlb	62	; select bank62
  1504  0D13  01B8               	clrf	56	;volatile
  1505                           
  1506                           ;main.c: 405: TRISA=0;
  1507  0D14  0140               	movlb	0	; select bank0
  1508  0D15  0191               	clrf	17	;volatile
  1509                           
  1510                           ;main.c: 407: PORTB=0;
  1511  0D16  018D               	clrf	13	;volatile
  1512                           
  1513                           ;main.c: 408: ANSELB=0;
  1514  0D17  017E               	movlb	62	; select bank62
  1515  0D18  01C3               	clrf	67	;volatile
  1516                           
  1517                           ;main.c: 409: TRISB=0;
  1518  0D19  0140               	movlb	0	; select bank0
  1519  0D1A  0192               	clrf	18	;volatile
  1520                           
  1521                           ;main.c: 412: PORTC=0;
  1522  0D1B  018E               	clrf	14	;volatile
  1523                           
  1524                           ;main.c: 413: PORTD=0;
  1525  0D1C  018F               	clrf	15	;volatile
  1526                           
  1527                           ;main.c: 415: ANSELCbits.ANSC0=0;
  1528  0D1D  017E               	movlb	62	; select bank62
  1529  0D1E  104E               	bcf	78,0	;volatile
  1530                           
  1531                           ;main.c: 416: ANSELCbits.ANSC1=0;
  1532  0D1F  10CE               	bcf	78,1	;volatile
  1533                           
  1534                           ;main.c: 417: ANSELCbits.ANSC2=0;
  1535  0D20  114E               	bcf	78,2	;volatile
  1536                           
  1537                           ;main.c: 418: ANSELCbits.ANSC3=0;
  1538  0D21  11CE               	bcf	78,3	;volatile
  1539                           
  1540                           ;main.c: 419: ANSELCbits.ANSC4=0;
  1541  0D22  124E               	bcf	78,4	;volatile
  1542                           
  1543                           ;main.c: 420: ANSELCbits.ANSC5=0;
  1544  0D23  12CE               	bcf	78,5	;volatile
  1545                           
  1546                           ;main.c: 421: ANSELCbits.ANSC6=0;
  1547  0D24  134E               	bcf	78,6	;volatile
  1548                           
  1549                           ;main.c: 422: ANSELCbits.ANSC7=0;
  1550  0D25  13CE               	bcf	78,7	;volatile
  1551                           
  1552                           ;main.c: 423: ANSELD=0b00000000;
  1553  0D26  01D9               	clrf	89	;volatile
  1554                           
  1555                           ;main.c: 426: SSP1CLKPPS=0x13;
  1556  0D27  3013               	movlw	19
  1557  0D28  017D               	movlb	61	; select bank61
  1558  0D29  00C5               	movwf	69	;volatile
  1559                           
  1560                           ;main.c: 427: SSP1DATPPS=0x14;
  1561  0D2A  3014               	movlw	20
  1562  0D2B  00C6               	movwf	70	;volatile
  1563                           
  1564                           ;main.c: 428: RC3PPS=0x14;
  1565  0D2C  3014               	movlw	20
  1566  0D2D  017E               	movlb	62	; select bank62
  1567  0D2E  00A3               	movwf	35	;volatile
  1568                           
  1569                           ;main.c: 429: RC4PPS=0x15;
  1570  0D2F  3015               	movlw	21
  1571  0D30  00A4               	movwf	36	;volatile
  1572                           
  1573                           ;main.c: 435: SSP1CON1bits.SSPEN=1;
  1574  0D31  0143               	movlb	3	; select bank3
  1575  0D32  1690               	bsf	16,5	;volatile
  1576                           
  1577                           ;main.c: 436: SSP1CON1bits.SSPM=0b1000;
  1578  0D33  0810               	movf	16,w	;volatile
  1579  0D34  39F0               	andlw	-16
  1580  0D35  3808               	iorlw	8
  1581  0D36  0090               	movwf	16	;volatile
  1582                           
  1583                           ;main.c: 437: SSP1ADD=0x13;
  1584  0D37  3013               	movlw	19
  1585  0D38  008D               	movwf	13	;volatile
  1586                           
  1587                           ;main.c: 439: Lcd_Init();
  1588  0D39  3189  21CE  318D   	fcall	_Lcd_Init
  1589                           
  1590                           ;main.c: 440: Lcd_Cmd(1);
  1591  0D3C  3001               	movlw	1
  1592  0D3D  3188  209C  318D   	fcall	_Lcd_Cmd
  1593                           
  1594                           ;main.c: 441: Lcd_Cmd(12);
  1595  0D40  300C               	movlw	12
  1596  0D41  3188  209C  318D   	fcall	_Lcd_Cmd
  1597                           
  1598                           ;main.c: 442: _delay((unsigned long)((1000)*(32000000/4000.0)));
  1599  0D44  3029               	movlw	41
  1600  0D45  0140               	movlb	0	; select bank0
  1601  0D46  00EA               	movwf	??_main+1
  1602  0D47  3096               	movlw	150
  1603  0D48  00E9               	movwf	??_main
  1604  0D49  307F               	movlw	127
  1605  0D4A                     u3617:	
  1606  0D4A  0B89               	decfsz	9,f
  1607  0D4B  2D4A               	goto	u3617
  1608  0D4C  0BE9               	decfsz	??_main,f
  1609  0D4D  2D4A               	goto	u3617
  1610  0D4E  0BEA               	decfsz	??_main+1,f
  1611  0D4F  2D4A               	goto	u3617
  1612                           
  1613                           ;main.c: 444: rtc(0,00,0,5,0,0,0);
  1614  0D50  3000               	movlw	0
  1615  0D51  0140               	movlb	0	; select bank0
  1616  0D52  00CC               	movwf	rtc@seg
  1617  0D53  00CD               	movwf	rtc@seg+1
  1618  0D54  3000               	movlw	0
  1619  0D55  00CE               	movwf	rtc@min
  1620  0D56  00CF               	movwf	rtc@min+1
  1621  0D57  3000               	movlw	0
  1622  0D58  00D0               	movwf	rtc@hr
  1623  0D59  00D1               	movwf	rtc@hr+1
  1624  0D5A  3005               	movlw	5
  1625  0D5B  00D2               	movwf	rtc@day
  1626  0D5C  3000               	movlw	0
  1627  0D5D  00D3               	movwf	rtc@day+1
  1628  0D5E  3000               	movlw	0
  1629  0D5F  00D4               	movwf	rtc@date
  1630  0D60  00D5               	movwf	rtc@date+1
  1631  0D61  3000               	movlw	0
  1632  0D62  00D6               	movwf	rtc@month
  1633  0D63  00D7               	movwf	rtc@month+1
  1634  0D64  3000               	movlw	0
  1635  0D65  00D8               	movwf	rtc@year
  1636  0D66  00D9               	movwf	rtc@year+1
  1637  0D67  318A  2277  318D   	fcall	_rtc
  1638                           
  1639                           ;main.c: 445: moverservo(90);
  1640  0D6A  305A               	movlw	90
  1641  0D6B  00F0               	movwf	moverservo@grados
  1642  0D6C  3000               	movlw	0
  1643  0D6D  00F1               	movwf	moverservo@grados+1
  1644  0D6E  3188  2016  318D   	fcall	_moverservo
  1645  0D71                     l2818:	
  1646                           ;main.c: 446: while(1){
  1647                           
  1648                           
  1649                           ;main.c: 447: SSP1CON2bits.SEN=1;
  1650  0D71  0143               	movlb	3	; select bank3
  1651  0D72  1411               	bsf	17,0	;volatile
  1652  0D73                     l386:	
  1653                           ;main.c: 448: while(SSP1CON2bits.SEN);
  1654                           
  1655  0D73  1811               	btfsc	17,0	;volatile
  1656  0D74  2D73               	goto	l386
  1657                           
  1658                           ;main.c: 449: SSP1BUF=adressRTC;
  1659  0D75  0140               	movlb	0	; select bank0
  1660  0D76  086E               	movf	_adressRTC,w
  1661  0D77  0143               	movlb	3	; select bank3
  1662  0D78  008C               	movwf	12	;volatile
  1663  0D79                     l389:	
  1664                           ;main.c: 450: while(SSP1STATbits.BF);
  1665                           
  1666  0D79  180F               	btfsc	15,0	;volatile
  1667  0D7A  2D79               	goto	l389
  1668  0D7B                     l392:	
  1669                           ;main.c: 451: while(SSP1STATbits.R_nW);
  1670                           
  1671  0D7B  190F               	btfsc	15,2	;volatile
  1672  0D7C  2D7B               	goto	l392
  1673                           
  1674                           ;main.c: 452: SSP1BUF=0x00;
  1675  0D7D  018C               	clrf	12	;volatile
  1676  0D7E                     l395:	
  1677                           ;main.c: 453: while(SSP1STATbits.BF);
  1678                           
  1679  0D7E  180F               	btfsc	15,0	;volatile
  1680  0D7F  2D7E               	goto	l395
  1681  0D80                     l398:	
  1682                           ;main.c: 454: while(SSP1STATbits.R_nW);
  1683                           
  1684  0D80  190F               	btfsc	15,2	;volatile
  1685  0D81  2D80               	goto	l398
  1686                           
  1687                           ;main.c: 455: SSP1CON2bits.RSEN=1;
  1688  0D82  1491               	bsf	17,1	;volatile
  1689  0D83                     l401:	
  1690                           ;main.c: 456: while(SSP1CON2bits.RSEN);
  1691                           
  1692  0D83  1891               	btfsc	17,1	;volatile
  1693  0D84  2D83               	goto	l401
  1694                           
  1695                           ;main.c: 457: SSP1BUF=adressRTC_read;
  1696  0D85  0141               	movlb	1	; select bank1
  1697  0D86  085E               	movf	_adressRTC_read^(0+128),w
  1698  0D87  0143               	movlb	3	; select bank3
  1699  0D88  008C               	movwf	12	;volatile
  1700  0D89                     l404:	
  1701                           ;main.c: 458: while(SSP1STATbits.BF);
  1702                           
  1703  0D89  180F               	btfsc	15,0	;volatile
  1704  0D8A  2D89               	goto	l404
  1705  0D8B                     l407:	
  1706                           ;main.c: 459: while(SSP1STATbits.R_nW);
  1707                           
  1708  0D8B  190F               	btfsc	15,2	;volatile
  1709  0D8C  2D8B               	goto	l407
  1710                           
  1711                           ;main.c: 460: SSP1CON2bits.RCEN=1;
  1712  0D8D  1591               	bsf	17,3	;volatile
  1713  0D8E                     l410:	
  1714                           ;main.c: 461: while(SSP1STATbits.BF==0);
  1715                           
  1716  0D8E  1C0F               	btfss	15,0	;volatile
  1717  0D8F  2D8E               	goto	l410
  1718                           
  1719                           ;main.c: 462: rseg=SSP1BUF;
  1720  0D90  080C               	movf	12,w	;volatile
  1721  0D91  0140               	movlb	0	; select bank0
  1722  0D92  00E9               	movwf	??_main
  1723  0D93  01EA               	clrf	??_main+1
  1724  0D94  0869               	movf	??_main,w
  1725  0D95  00C8               	movwf	_rseg
  1726  0D96  086A               	movf	??_main+1,w
  1727  0D97  00C9               	movwf	_rseg+1
  1728                           
  1729                           ;main.c: 463: SSP1CON2bits.ACKDT=0;
  1730  0D98  0143               	movlb	3	; select bank3
  1731  0D99  1291               	bcf	17,5	;volatile
  1732                           
  1733                           ;main.c: 464: SSP1CON2bits.ACKEN=1;
  1734  0D9A  1611               	bsf	17,4	;volatile
  1735  0D9B                     l413:	
  1736                           ;main.c: 465: while(SSP1CON2bits.ACKEN);
  1737                           
  1738  0D9B  1A11               	btfsc	17,4	;volatile
  1739  0D9C  2D9B               	goto	l413
  1740                           
  1741                           ;main.c: 466: SSP1CON2bits.RCEN=1;
  1742  0D9D  1591               	bsf	17,3	;volatile
  1743  0D9E                     l416:	
  1744                           ;main.c: 467: while(SSP1STATbits.BF==0);
  1745                           
  1746  0D9E  1C0F               	btfss	15,0	;volatile
  1747  0D9F  2D9E               	goto	l416
  1748                           
  1749                           ;main.c: 468: rmin=SSP1BUF;
  1750  0DA0  080C               	movf	12,w	;volatile
  1751  0DA1  0140               	movlb	0	; select bank0
  1752  0DA2  00E9               	movwf	??_main
  1753  0DA3  01EA               	clrf	??_main+1
  1754  0DA4  0869               	movf	??_main,w
  1755  0DA5  00C6               	movwf	_rmin
  1756  0DA6  086A               	movf	??_main+1,w
  1757  0DA7  00C7               	movwf	_rmin+1
  1758                           
  1759                           ;main.c: 469: SSP1CON2bits.ACKDT=0;
  1760  0DA8  0143               	movlb	3	; select bank3
  1761  0DA9  1291               	bcf	17,5	;volatile
  1762                           
  1763                           ;main.c: 470: SSP1CON2bits.ACKEN=1;
  1764  0DAA  1611               	bsf	17,4	;volatile
  1765  0DAB                     l419:	
  1766                           ;main.c: 471: while(SSP1CON2bits.ACKEN);
  1767                           
  1768  0DAB  1A11               	btfsc	17,4	;volatile
  1769  0DAC  2DAB               	goto	l419
  1770                           
  1771                           ;main.c: 472: SSP1CON2bits.RCEN=1;
  1772  0DAD  1591               	bsf	17,3	;volatile
  1773  0DAE                     l422:	
  1774                           ;main.c: 473: while(SSP1STATbits.BF==0);
  1775                           
  1776  0DAE  1C0F               	btfss	15,0	;volatile
  1777  0DAF  2DAE               	goto	l422
  1778                           
  1779                           ;main.c: 474: rhr=SSP1BUF;
  1780  0DB0  080C               	movf	12,w	;volatile
  1781  0DB1  0140               	movlb	0	; select bank0
  1782  0DB2  00E9               	movwf	??_main
  1783  0DB3  01EA               	clrf	??_main+1
  1784  0DB4  0869               	movf	??_main,w
  1785  0DB5  00C4               	movwf	_rhr
  1786  0DB6  086A               	movf	??_main+1,w
  1787  0DB7  00C5               	movwf	_rhr+1
  1788                           
  1789                           ;main.c: 475: SSP1CON2bits.ACKDT=0;
  1790  0DB8  0143               	movlb	3	; select bank3
  1791  0DB9  1291               	bcf	17,5	;volatile
  1792                           
  1793                           ;main.c: 476: SSP1CON2bits.ACKEN=1;
  1794  0DBA  1611               	bsf	17,4	;volatile
  1795  0DBB                     l425:	
  1796                           ;main.c: 477: while(SSP1CON2bits.ACKEN);
  1797                           
  1798  0DBB  1A11               	btfsc	17,4	;volatile
  1799  0DBC  2DBB               	goto	l425
  1800                           
  1801                           ;main.c: 478: SSP1CON2bits.RCEN=1;
  1802  0DBD  1591               	bsf	17,3	;volatile
  1803  0DBE                     l428:	
  1804                           ;main.c: 479: while(SSP1STATbits.BF==0);
  1805                           
  1806  0DBE  1C0F               	btfss	15,0	;volatile
  1807  0DBF  2DBE               	goto	l428
  1808                           
  1809                           ;main.c: 480: rday=SSP1BUF;
  1810  0DC0  080C               	movf	12,w	;volatile
  1811  0DC1  0140               	movlb	0	; select bank0
  1812  0DC2  00E9               	movwf	??_main
  1813  0DC3  01EA               	clrf	??_main+1
  1814  0DC4  0869               	movf	??_main,w
  1815  0DC5  0141               	movlb	1	; select bank1
  1816  0DC6  00BC               	movwf	_rday^(0+128)
  1817  0DC7  0140               	movlb	0	; select bank0
  1818  0DC8  086A               	movf	??_main+1,w
  1819  0DC9  0141               	movlb	1	; select bank1
  1820  0DCA  00BD               	movwf	(_rday+1)^(0+128)
  1821                           
  1822                           ;main.c: 481: SSP1CON2bits.ACKDT=0;
  1823  0DCB  0143               	movlb	3	; select bank3
  1824  0DCC  1291               	bcf	17,5	;volatile
  1825                           
  1826                           ;main.c: 482: SSP1CON2bits.ACKEN=1;
  1827  0DCD  1611               	bsf	17,4	;volatile
  1828  0DCE                     l431:	
  1829                           ;main.c: 483: while(SSP1CON2bits.ACKEN);
  1830                           
  1831  0DCE  1A11               	btfsc	17,4	;volatile
  1832  0DCF  2DCE               	goto	l431
  1833                           
  1834                           ;main.c: 484: SSP1CON2bits.RCEN=1;
  1835  0DD0  1591               	bsf	17,3	;volatile
  1836  0DD1                     l434:	
  1837                           ;main.c: 485: while(SSP1STATbits.BF==0);
  1838                           
  1839  0DD1  1C0F               	btfss	15,0	;volatile
  1840  0DD2  2DD1               	goto	l434
  1841                           
  1842                           ;main.c: 486: rdate=SSP1BUF;
  1843  0DD3  080C               	movf	12,w	;volatile
  1844  0DD4  0140               	movlb	0	; select bank0
  1845  0DD5  00E9               	movwf	??_main
  1846  0DD6  01EA               	clrf	??_main+1
  1847  0DD7  0869               	movf	??_main,w
  1848  0DD8  00C2               	movwf	_rdate
  1849  0DD9  086A               	movf	??_main+1,w
  1850  0DDA  00C3               	movwf	_rdate+1
  1851                           
  1852                           ;main.c: 487: SSP1CON2bits.ACKDT=0;
  1853  0DDB  0143               	movlb	3	; select bank3
  1854  0DDC  1291               	bcf	17,5	;volatile
  1855                           
  1856                           ;main.c: 488: SSP1CON2bits.ACKEN=1;
  1857  0DDD  1611               	bsf	17,4	;volatile
  1858  0DDE                     l437:	
  1859                           ;main.c: 489: while(SSP1CON2bits.ACKEN);
  1860                           
  1861  0DDE  1A11               	btfsc	17,4	;volatile
  1862  0DDF  2DDE               	goto	l437
  1863                           
  1864                           ;main.c: 490: SSP1CON2bits.RCEN=1;
  1865  0DE0  1591               	bsf	17,3	;volatile
  1866  0DE1                     l440:	
  1867                           ;main.c: 491: while(SSP1STATbits.BF==0);
  1868                           
  1869  0DE1  1C0F               	btfss	15,0	;volatile
  1870  0DE2  2DE1               	goto	l440
  1871                           
  1872                           ;main.c: 492: rmonth=SSP1BUF;
  1873  0DE3  080C               	movf	12,w	;volatile
  1874  0DE4  0140               	movlb	0	; select bank0
  1875  0DE5  00E9               	movwf	??_main
  1876  0DE6  01EA               	clrf	??_main+1
  1877  0DE7  0869               	movf	??_main,w
  1878  0DE8  00C0               	movwf	_rmonth
  1879  0DE9  086A               	movf	??_main+1,w
  1880  0DEA  00C1               	movwf	_rmonth+1
  1881                           
  1882                           ;main.c: 493: SSP1CON2bits.ACKDT=0;
  1883  0DEB  0143               	movlb	3	; select bank3
  1884  0DEC  1291               	bcf	17,5	;volatile
  1885                           
  1886                           ;main.c: 494: SSP1CON2bits.ACKEN=1;
  1887  0DED  1611               	bsf	17,4	;volatile
  1888  0DEE                     l443:	
  1889                           ;main.c: 495: while(SSP1CON2bits.ACKEN);
  1890                           
  1891  0DEE  1A11               	btfsc	17,4	;volatile
  1892  0DEF  2DEE               	goto	l443
  1893                           
  1894                           ;main.c: 496: SSP1CON2bits.RCEN=1;
  1895  0DF0  1591               	bsf	17,3	;volatile
  1896  0DF1                     l446:	
  1897                           ;main.c: 497: while(SSP1STATbits.BF==0);
  1898                           
  1899  0DF1  1C0F               	btfss	15,0	;volatile
  1900  0DF2  2DF1               	goto	l446
  1901                           
  1902                           ;main.c: 498: ryear=SSP1BUF;
  1903  0DF3  080C               	movf	12,w	;volatile
  1904  0DF4  0140               	movlb	0	; select bank0
  1905  0DF5  00E9               	movwf	??_main
  1906  0DF6  01EA               	clrf	??_main+1
  1907  0DF7  0869               	movf	??_main,w
  1908  0DF8  0141               	movlb	1	; select bank1
  1909  0DF9  00DC               	movwf	_ryear^(0+128)
  1910  0DFA  0140               	movlb	0	; select bank0
  1911  0DFB  086A               	movf	??_main+1,w
  1912  0DFC  0141               	movlb	1	; select bank1
  1913  0DFD  00DD               	movwf	(_ryear+1)^(0+128)
  1914                           
  1915                           ;main.c: 500: SSP1CON2bits.ACKDT=1;
  1916  0DFE  0143               	movlb	3	; select bank3
  1917  0DFF  1691               	bsf	17,5	;volatile
  1918                           
  1919                           ;main.c: 501: SSP1CON2bits.ACKEN=1;
  1920  0E00  1611               	bsf	17,4	;volatile
  1921  0E01                     l449:	
  1922                           ;main.c: 502: while(SSP1CON2bits.ACKEN);
  1923                           
  1924  0E01  1A11               	btfsc	17,4	;volatile
  1925  0E02  2E01               	goto	l449
  1926                           
  1927                           ;main.c: 504: SSP1CON2bits.PEN=1;
  1928  0E03  1511               	bsf	17,2	;volatile
  1929  0E04                     l452:	
  1930                           ;main.c: 505: while(SSP1CON2bits.PEN);
  1931                           
  1932  0E04  1911               	btfsc	17,2	;volatile
  1933  0E05  2E04               	goto	l452
  1934                           
  1935                           ;main.c: 507: dseg=((0b01110000 & rseg)>>4)*10+(0b00001111 & rseg);
  1936  0E06  300F               	movlw	15
  1937  0E07  0140               	movlb	0	; select bank0
  1938  0E08  0548               	andwf	_rseg,w
  1939  0E09  00E9               	movwf	??_main
  1940  0E0A  3000               	movlw	0
  1941  0E0B  0549               	andwf	_rseg+1,w
  1942  0E0C  00EA               	movwf	??_main+1
  1943  0E0D  0849               	movf	_rseg+1,w
  1944  0E0E  00EC               	movwf	??_main+3
  1945  0E0F  0848               	movf	_rseg,w
  1946  0E10  00EB               	movwf	??_main+2
  1947  0E11  3004               	movlw	4
  1948  0E12  00ED               	movwf	??_main+4
  1949  0E13                     u3445:	
  1950  0E13  0D6C               	rlf	??_main+3,w
  1951  0E14  0CEC               	rrf	??_main+3,f
  1952  0E15  0CEB               	rrf	??_main+2,f
  1953  0E16  0BED               	decfsz	??_main+4,f
  1954  0E17  2E13               	goto	u3445
  1955  0E18  3007               	movlw	7
  1956  0E19  056B               	andwf	??_main+2,w
  1957  0E1A  00F9               	movwf	___wmul@multiplier
  1958  0E1B  3000               	movlw	0
  1959  0E1C  056C               	andwf	??_main+3,w
  1960  0E1D  00FA               	movwf	___wmul@multiplier+1
  1961  0E1E  300A               	movlw	10
  1962  0E1F  00FB               	movwf	___wmul@multiplicand
  1963  0E20  3000               	movlw	0
  1964  0E21  00FC               	movwf	___wmul@multiplicand+1
  1965  0E22  3196  26F1  318D   	fcall	___wmul
  1966  0E25  0140               	movlb	0	; select bank0
  1967  0E26  0869               	movf	??_main,w
  1968  0E27  0779               	addwf	?___wmul,w
  1969  0E28  00BE               	movwf	_dseg
  1970  0E29  086A               	movf	??_main+1,w
  1971  0E2A  3D7A               	addwfc	?___wmul+1,w
  1972  0E2B  00BF               	movwf	_dseg+1
  1973                           
  1974                           ;main.c: 508: dmin=((0b01110000 & rmin)>>4)*10+(0b00001111 & rmin);
  1975  0E2C  300F               	movlw	15
  1976  0E2D  0546               	andwf	_rmin,w
  1977  0E2E  00E9               	movwf	??_main
  1978  0E2F  3000               	movlw	0
  1979  0E30  0547               	andwf	_rmin+1,w
  1980  0E31  00EA               	movwf	??_main+1
  1981  0E32  0847               	movf	_rmin+1,w
  1982  0E33  00EC               	movwf	??_main+3
  1983  0E34  0846               	movf	_rmin,w
  1984  0E35  00EB               	movwf	??_main+2
  1985  0E36  3004               	movlw	4
  1986  0E37  00ED               	movwf	??_main+4
  1987  0E38                     u3455:	
  1988  0E38  0D6C               	rlf	??_main+3,w
  1989  0E39  0CEC               	rrf	??_main+3,f
  1990  0E3A  0CEB               	rrf	??_main+2,f
  1991  0E3B  0BED               	decfsz	??_main+4,f
  1992  0E3C  2E38               	goto	u3455
  1993  0E3D  3007               	movlw	7
  1994  0E3E  056B               	andwf	??_main+2,w
  1995  0E3F  00F9               	movwf	___wmul@multiplier
  1996  0E40  3000               	movlw	0
  1997  0E41  056C               	andwf	??_main+3,w
  1998  0E42  00FA               	movwf	___wmul@multiplier+1
  1999  0E43  300A               	movlw	10
  2000  0E44  00FB               	movwf	___wmul@multiplicand
  2001  0E45  3000               	movlw	0
  2002  0E46  00FC               	movwf	___wmul@multiplicand+1
  2003  0E47  3196  26F1  318D   	fcall	___wmul
  2004  0E4A  0140               	movlb	0	; select bank0
  2005  0E4B  0869               	movf	??_main,w
  2006  0E4C  0779               	addwf	?___wmul,w
  2007  0E4D  0141               	movlb	1	; select bank1
  2008  0E4E  00BA               	movwf	_dmin^(0+128)
  2009  0E4F  0140               	movlb	0	; select bank0
  2010  0E50  086A               	movf	??_main+1,w
  2011  0E51  3D7A               	addwfc	?___wmul+1,w
  2012  0E52  0141               	movlb	1	; select bank1
  2013  0E53  00BB               	movwf	(_dmin+1)^(0+128)
  2014                           
  2015                           ;main.c: 509: dhr=((0b01110000 & rhr)>>4)*10+(0b00001111 & rhr);
  2016  0E54  300F               	movlw	15
  2017  0E55  0140               	movlb	0	; select bank0
  2018  0E56  0544               	andwf	_rhr,w
  2019  0E57  00E9               	movwf	??_main
  2020  0E58  3000               	movlw	0
  2021  0E59  0545               	andwf	_rhr+1,w
  2022  0E5A  00EA               	movwf	??_main+1
  2023  0E5B  0845               	movf	_rhr+1,w
  2024  0E5C  00EC               	movwf	??_main+3
  2025  0E5D  0844               	movf	_rhr,w
  2026  0E5E  00EB               	movwf	??_main+2
  2027  0E5F  3004               	movlw	4
  2028  0E60  00ED               	movwf	??_main+4
  2029  0E61                     u3465:	
  2030  0E61  0D6C               	rlf	??_main+3,w
  2031  0E62  0CEC               	rrf	??_main+3,f
  2032  0E63  0CEB               	rrf	??_main+2,f
  2033  0E64  0BED               	decfsz	??_main+4,f
  2034  0E65  2E61               	goto	u3465
  2035  0E66  3007               	movlw	7
  2036  0E67  056B               	andwf	??_main+2,w
  2037  0E68  00F9               	movwf	___wmul@multiplier
  2038  0E69  3000               	movlw	0
  2039  0E6A  056C               	andwf	??_main+3,w
  2040  0E6B  00FA               	movwf	___wmul@multiplier+1
  2041  0E6C  300A               	movlw	10
  2042  0E6D  00FB               	movwf	___wmul@multiplicand
  2043  0E6E  3000               	movlw	0
  2044  0E6F  00FC               	movwf	___wmul@multiplicand+1
  2045  0E70  3196  26F1  318D   	fcall	___wmul
  2046  0E73  0140               	movlb	0	; select bank0
  2047  0E74  0869               	movf	??_main,w
  2048  0E75  0779               	addwf	?___wmul,w
  2049  0E76  0141               	movlb	1	; select bank1
  2050  0E77  00B8               	movwf	_dhr^(0+128)
  2051  0E78  0140               	movlb	0	; select bank0
  2052  0E79  086A               	movf	??_main+1,w
  2053  0E7A  3D7A               	addwfc	?___wmul+1,w
  2054  0E7B  0141               	movlb	1	; select bank1
  2055  0E7C  00B9               	movwf	(_dhr+1)^(0+128)
  2056                           
  2057                           ;main.c: 510: ddate=((0b01110000 & rdate)>>4)*10+(0b00001111 & rdate);
  2058  0E7D  300F               	movlw	15
  2059  0E7E  0140               	movlb	0	; select bank0
  2060  0E7F  0542               	andwf	_rdate,w
  2061  0E80  00E9               	movwf	??_main
  2062  0E81  3000               	movlw	0
  2063  0E82  0543               	andwf	_rdate+1,w
  2064  0E83  00EA               	movwf	??_main+1
  2065  0E84  0843               	movf	_rdate+1,w
  2066  0E85  00EC               	movwf	??_main+3
  2067  0E86  0842               	movf	_rdate,w
  2068  0E87  00EB               	movwf	??_main+2
  2069  0E88  3004               	movlw	4
  2070  0E89  00ED               	movwf	??_main+4
  2071  0E8A                     u3475:	
  2072  0E8A  0D6C               	rlf	??_main+3,w
  2073  0E8B  0CEC               	rrf	??_main+3,f
  2074  0E8C  0CEB               	rrf	??_main+2,f
  2075  0E8D  0BED               	decfsz	??_main+4,f
  2076  0E8E  2E8A               	goto	u3475
  2077  0E8F  3007               	movlw	7
  2078  0E90  056B               	andwf	??_main+2,w
  2079  0E91  00F9               	movwf	___wmul@multiplier
  2080  0E92  3000               	movlw	0
  2081  0E93  056C               	andwf	??_main+3,w
  2082  0E94  00FA               	movwf	___wmul@multiplier+1
  2083  0E95  300A               	movlw	10
  2084  0E96  00FB               	movwf	___wmul@multiplicand
  2085  0E97  3000               	movlw	0
  2086  0E98  00FC               	movwf	___wmul@multiplicand+1
  2087  0E99  3196  26F1  318D   	fcall	___wmul
  2088  0E9C  0140               	movlb	0	; select bank0
  2089  0E9D  0869               	movf	??_main,w
  2090  0E9E  0779               	addwf	?___wmul,w
  2091  0E9F  0141               	movlb	1	; select bank1
  2092  0EA0  00B4               	movwf	_ddate^(0+128)
  2093  0EA1  0140               	movlb	0	; select bank0
  2094  0EA2  086A               	movf	??_main+1,w
  2095  0EA3  3D7A               	addwfc	?___wmul+1,w
  2096  0EA4  0141               	movlb	1	; select bank1
  2097  0EA5  00B5               	movwf	(_ddate+1)^(0+128)
  2098                           
  2099                           ;main.c: 511: dmonth=((0b01110000 & rmonth)>>4)*10+(0b00001111 & rmonth);
  2100  0EA6  300F               	movlw	15
  2101  0EA7  0140               	movlb	0	; select bank0
  2102  0EA8  0540               	andwf	_rmonth,w
  2103  0EA9  00E9               	movwf	??_main
  2104  0EAA  3000               	movlw	0
  2105  0EAB  0541               	andwf	_rmonth+1,w
  2106  0EAC  00EA               	movwf	??_main+1
  2107  0EAD  0841               	movf	_rmonth+1,w
  2108  0EAE  00EC               	movwf	??_main+3
  2109  0EAF  0840               	movf	_rmonth,w
  2110  0EB0  00EB               	movwf	??_main+2
  2111  0EB1  3004               	movlw	4
  2112  0EB2  00ED               	movwf	??_main+4
  2113  0EB3                     u3485:	
  2114  0EB3  0D6C               	rlf	??_main+3,w
  2115  0EB4  0CEC               	rrf	??_main+3,f
  2116  0EB5  0CEB               	rrf	??_main+2,f
  2117  0EB6  0BED               	decfsz	??_main+4,f
  2118  0EB7  2EB3               	goto	u3485
  2119  0EB8  3007               	movlw	7
  2120  0EB9  056B               	andwf	??_main+2,w
  2121  0EBA  00F9               	movwf	___wmul@multiplier
  2122  0EBB  3000               	movlw	0
  2123  0EBC  056C               	andwf	??_main+3,w
  2124  0EBD  00FA               	movwf	___wmul@multiplier+1
  2125  0EBE  300A               	movlw	10
  2126  0EBF  00FB               	movwf	___wmul@multiplicand
  2127  0EC0  3000               	movlw	0
  2128  0EC1  00FC               	movwf	___wmul@multiplicand+1
  2129  0EC2  3196  26F1  318D   	fcall	___wmul
  2130  0EC5  0140               	movlb	0	; select bank0
  2131  0EC6  0869               	movf	??_main,w
  2132  0EC7  0779               	addwf	?___wmul,w
  2133  0EC8  0141               	movlb	1	; select bank1
  2134  0EC9  00B2               	movwf	_dmonth^(0+128)
  2135  0ECA  0140               	movlb	0	; select bank0
  2136  0ECB  086A               	movf	??_main+1,w
  2137  0ECC  3D7A               	addwfc	?___wmul+1,w
  2138  0ECD  0141               	movlb	1	; select bank1
  2139  0ECE  00B3               	movwf	(_dmonth+1)^(0+128)
  2140                           
  2141                           ;main.c: 512: dyear=((0b11110000 & ryear)>>4)*10+(0b00001111 & ryear);
  2142  0ECF  300F               	movlw	15
  2143  0ED0  055C               	andwf	_ryear^(0+128),w
  2144  0ED1  0140               	movlb	0	; select bank0
  2145  0ED2  00E9               	movwf	??_main
  2146  0ED3  3000               	movlw	0
  2147  0ED4  0141               	movlb	1	; select bank1
  2148  0ED5  055D               	andwf	(_ryear+1)^(0+128),w
  2149  0ED6  0140               	movlb	0	; select bank0
  2150  0ED7  00EA               	movwf	??_main+1
  2151  0ED8  0141               	movlb	1	; select bank1
  2152  0ED9  085D               	movf	(_ryear+1)^(0+128),w
  2153  0EDA  0140               	movlb	0	; select bank0
  2154  0EDB  00EC               	movwf	??_main+3
  2155  0EDC  0141               	movlb	1	; select bank1
  2156  0EDD  085C               	movf	_ryear^(0+128),w
  2157  0EDE  0140               	movlb	0	; select bank0
  2158  0EDF  00EB               	movwf	??_main+2
  2159  0EE0  3004               	movlw	4
  2160  0EE1  00ED               	movwf	??_main+4
  2161  0EE2                     u3495:	
  2162  0EE2  0D6C               	rlf	??_main+3,w
  2163  0EE3  0CEC               	rrf	??_main+3,f
  2164  0EE4  0CEB               	rrf	??_main+2,f
  2165  0EE5  0BED               	decfsz	??_main+4,f
  2166  0EE6  2EE2               	goto	u3495
  2167  0EE7  300F               	movlw	15
  2168  0EE8  056B               	andwf	??_main+2,w
  2169  0EE9  00F9               	movwf	___wmul@multiplier
  2170  0EEA  3000               	movlw	0
  2171  0EEB  056C               	andwf	??_main+3,w
  2172  0EEC  00FA               	movwf	___wmul@multiplier+1
  2173  0EED  300A               	movlw	10
  2174  0EEE  00FB               	movwf	___wmul@multiplicand
  2175  0EEF  3000               	movlw	0
  2176  0EF0  00FC               	movwf	___wmul@multiplicand+1
  2177  0EF1  3196  26F1  318D   	fcall	___wmul
  2178  0EF4  0140               	movlb	0	; select bank0
  2179  0EF5  0869               	movf	??_main,w
  2180  0EF6  0779               	addwf	?___wmul,w
  2181  0EF7  0141               	movlb	1	; select bank1
  2182  0EF8  00B0               	movwf	_dyear^(0+128)
  2183  0EF9  0140               	movlb	0	; select bank0
  2184  0EFA  086A               	movf	??_main+1,w
  2185  0EFB  3D7A               	addwfc	?___wmul+1,w
  2186  0EFC  0141               	movlb	1	; select bank1
  2187  0EFD  00B1               	movwf	(_dyear+1)^(0+128)
  2188                           
  2189                           ;main.c: 514: sprintf(buffer1,"%d:%d:%d  %d/%d",dhr,dmin,dseg,ddate,dmonth);
  2190  0EFE  302C               	movlw	low (STR_35| (0+32768))
  2191  0EFF  0140               	movlb	0	; select bank0
  2192  0F00  00CA               	movwf	sprintf@f
  2193  0F01  3098               	movlw	high (STR_35| (0+32768))
  2194  0F02  00CB               	movwf	sprintf@f+1
  2195  0F03  0141               	movlb	1	; select bank1
  2196  0F04  0839               	movf	(_dhr+1)^(0+128),w
  2197  0F05  0140               	movlb	0	; select bank0
  2198  0F06  00CD               	movwf	?_sprintf+3
  2199  0F07  0141               	movlb	1	; select bank1
  2200  0F08  0838               	movf	_dhr^(0+128),w
  2201  0F09  0140               	movlb	0	; select bank0
  2202  0F0A  00CC               	movwf	?_sprintf+2
  2203  0F0B  0141               	movlb	1	; select bank1
  2204  0F0C  083B               	movf	(_dmin+1)^(0+128),w
  2205  0F0D  0140               	movlb	0	; select bank0
  2206  0F0E  00CF               	movwf	?_sprintf+5
  2207  0F0F  0141               	movlb	1	; select bank1
  2208  0F10  083A               	movf	_dmin^(0+128),w
  2209  0F11  0140               	movlb	0	; select bank0
  2210  0F12  00CE               	movwf	?_sprintf+4
  2211  0F13  083F               	movf	_dseg+1,w
  2212  0F14  00D1               	movwf	?_sprintf+7
  2213  0F15  083E               	movf	_dseg,w
  2214  0F16  00D0               	movwf	?_sprintf+6
  2215  0F17  0141               	movlb	1	; select bank1
  2216  0F18  0835               	movf	(_ddate+1)^(0+128),w
  2217  0F19  0140               	movlb	0	; select bank0
  2218  0F1A  00D3               	movwf	?_sprintf+9
  2219  0F1B  0141               	movlb	1	; select bank1
  2220  0F1C  0834               	movf	_ddate^(0+128),w
  2221  0F1D  0140               	movlb	0	; select bank0
  2222  0F1E  00D2               	movwf	?_sprintf+8
  2223  0F1F  0141               	movlb	1	; select bank1
  2224  0F20  0833               	movf	(_dmonth+1)^(0+128),w
  2225  0F21  0140               	movlb	0	; select bank0
  2226  0F22  00D5               	movwf	?_sprintf+11
  2227  0F23  0141               	movlb	1	; select bank1
  2228  0F24  0832               	movf	_dmonth^(0+128),w
  2229  0F25  0140               	movlb	0	; select bank0
  2230  0F26  00D4               	movwf	?_sprintf+10
  2231  0F27  30CC               	movlw	(low (_buffer1| 0))& (0+255)
  2232  0F28  3180  2037  318D   	fcall	_sprintf
  2233                           
  2234                           ;main.c: 515: Lcd_Out2(1, 0, buffer1);
  2235  0F2B  01F3               	clrf	Lcd_Out2@x
  2236  0F2C  30CC               	movlw	(low (_buffer1| 0))& (0+255)
  2237  0F2D  0140               	movlb	0	; select bank0
  2238  0F2E  00E9               	movwf	??_main
  2239  0F2F  0869               	movf	??_main,w
  2240  0F30  00F4               	movwf	Lcd_Out2@buffer
  2241  0F31  3001               	movlw	1
  2242  0F32  3197  2743  318D   	fcall	_Lcd_Out2
  2243                           
  2244                           ;main.c: 517: LATAbits.LATA1=0;LATAbits.LATA0=1;LATAbits.LATA2=0;
  2245  0F35  0140               	movlb	0	; select bank0
  2246  0F36  1096               	bcf	22,1	;volatile
  2247  0F37  1416               	bsf	22,0	;volatile
  2248  0F38  1116               	bcf	22,2	;volatile
  2249                           
  2250                           ;main.c: 518: menu();
  2251  0F39  3181  2104  318D   	fcall	_menu
  2252                           
  2253                           ;main.c: 520: if(dhr==ihr && dmin==imin && dseg==iseg && ddate==idate && dmonth==imonth)
      +                          {
  2254  0F3C  0140               	movlb	0	; select bank0
  2255  0F3D  0839               	movf	_ihr+1,w
  2256  0F3E  0141               	movlb	1	; select bank1
  2257  0F3F  0639               	xorwf	(_dhr+1)^(0+128),w
  2258  0F40  1D03               	skipz
  2259  0F41  2F46               	goto	u3505
  2260  0F42  0140               	movlb	0	; select bank0
  2261  0F43  0838               	movf	_ihr,w
  2262  0F44  0141               	movlb	1	; select bank1
  2263  0F45  0638               	xorwf	_dhr^(0+128),w
  2264  0F46                     u3505:	
  2265  0F46  1D03               	skipz
  2266  0F47  2FF5               	goto	l2948
  2267  0F48  0140               	movlb	0	; select bank0
  2268  0F49  083B               	movf	_imin+1,w
  2269  0F4A  0141               	movlb	1	; select bank1
  2270  0F4B  063B               	xorwf	(_dmin+1)^(0+128),w
  2271  0F4C  1D03               	skipz
  2272  0F4D  2F52               	goto	u3515
  2273  0F4E  0140               	movlb	0	; select bank0
  2274  0F4F  083A               	movf	_imin,w
  2275  0F50  0141               	movlb	1	; select bank1
  2276  0F51  063A               	xorwf	_dmin^(0+128),w
  2277  0F52                     u3515:	
  2278  0F52  1D03               	skipz
  2279  0F53  2FF5               	goto	l2948
  2280  0F54  0140               	movlb	0	; select bank0
  2281  0F55  083D               	movf	_iseg+1,w
  2282  0F56  063F               	xorwf	_dseg+1,w
  2283  0F57  1D03               	skipz
  2284  0F58  2F5B               	goto	u3525
  2285  0F59  083C               	movf	_iseg,w
  2286  0F5A  063E               	xorwf	_dseg,w
  2287  0F5B                     u3525:	
  2288  0F5B  1D03               	skipz
  2289  0F5C  2FF5               	goto	l2948
  2290  0F5D  0837               	movf	_idate+1,w
  2291  0F5E  0141               	movlb	1	; select bank1
  2292  0F5F  0635               	xorwf	(_ddate+1)^(0+128),w
  2293  0F60  1D03               	skipz
  2294  0F61  2F66               	goto	u3535
  2295  0F62  0140               	movlb	0	; select bank0
  2296  0F63  0836               	movf	_idate,w
  2297  0F64  0141               	movlb	1	; select bank1
  2298  0F65  0634               	xorwf	_ddate^(0+128),w
  2299  0F66                     u3535:	
  2300  0F66  1D03               	skipz
  2301  0F67  2FF5               	goto	l2948
  2302  0F68  0140               	movlb	0	; select bank0
  2303  0F69  0835               	movf	_imonth+1,w
  2304  0F6A  0141               	movlb	1	; select bank1
  2305  0F6B  0633               	xorwf	(_dmonth+1)^(0+128),w
  2306  0F6C  1D03               	skipz
  2307  0F6D  2F72               	goto	u3545
  2308  0F6E  0140               	movlb	0	; select bank0
  2309  0F6F  0834               	movf	_imonth,w
  2310  0F70  0141               	movlb	1	; select bank1
  2311  0F71  0632               	xorwf	_dmonth^(0+128),w
  2312  0F72                     u3545:	
  2313  0F72  1903               	btfsc	3,2
  2314  0F73  2FDD               	goto	l2936
  2315  0F74  2FF5               	goto	l2948
  2316  0F75                     l2894:	
  2317                           ;main.c: 522: while(aux==0){
  2318                           
  2319                           
  2320                           ;main.c: 523: Lcd_Cmd(1);
  2321  0F75  3001               	movlw	1
  2322  0F76  3188  209C  318D   	fcall	_Lcd_Cmd
  2323                           
  2324                           ;main.c: 524: Lcd_Out(1, 0,"   BUM!!!!!!!");
  2325  0F79  01F3               	clrf	Lcd_Out@x
  2326  0F7A  3069               	movlw	low (STR_36| (0+32768))
  2327  0F7B  00F4               	movwf	Lcd_Out@buffer
  2328  0F7C  3098               	movlw	high (STR_36| (0+32768))
  2329  0F7D  00F5               	movwf	Lcd_Out@buffer+1
  2330  0F7E  3001               	movlw	1
  2331  0F7F  3197  2778  318D   	fcall	_Lcd_Out
  2332                           
  2333                           ;main.c: 525: Lcd_Out(2, 0,"TIME OVER :3");
  2334  0F82  01F3               	clrf	Lcd_Out@x
  2335  0F83  30D9               	movlw	low (STR_37| (0+32768))
  2336  0F84  00F4               	movwf	Lcd_Out@buffer
  2337  0F85  3098               	movlw	high (STR_37| (0+32768))
  2338  0F86  00F5               	movwf	Lcd_Out@buffer+1
  2339  0F87  3002               	movlw	2
  2340  0F88  3197  2778  318D   	fcall	_Lcd_Out
  2341                           
  2342                           ;main.c: 527: if(PORTBbits.RB1==1){aux=1;}
  2343  0F8B  0140               	movlb	0	; select bank0
  2344  0F8C  1C8D               	btfss	13,1	;volatile
  2345  0F8D  2F92               	goto	l2904
  2346  0F8E  3001               	movlw	1
  2347  0F8F  00A2               	movwf	_aux
  2348  0F90  3000               	movlw	0
  2349  0F91  00A3               	movwf	_aux+1
  2350  0F92                     l2904:	
  2351                           
  2352                           ;main.c: 530: LATAbits.LATA1=1;LATAbits.LATA0=0;LATAbits.LATA2=0;
  2353  0F92  1496               	bsf	22,1	;volatile
  2354  0F93  1016               	bcf	22,0	;volatile
  2355  0F94  1116               	bcf	22,2	;volatile
  2356                           
  2357                           ;main.c: 531: _delay((unsigned long)((50)*(32000000/4000.0)));
  2358  0F95  3003               	movlw	3
  2359  0F96  0140               	movlb	0	; select bank0
  2360  0F97  00EA               	movwf	??_main+1
  2361  0F98  3008               	movlw	8
  2362  0F99  00E9               	movwf	??_main
  2363  0F9A  3077               	movlw	119
  2364  0F9B                     u3627:	
  2365  0F9B  0B89               	decfsz	9,f
  2366  0F9C  2F9B               	goto	u3627
  2367  0F9D  0BE9               	decfsz	??_main,f
  2368  0F9E  2F9B               	goto	u3627
  2369  0F9F  0BEA               	decfsz	??_main+1,f
  2370  0FA0  2F9B               	goto	u3627
  2371                           
  2372                           ;main.c: 532: LATAbits.LATA1=0;LATAbits.LATA0=1;LATAbits.LATA2=0;
  2373  0FA1  0140               	movlb	0	; select bank0
  2374  0FA2  1096               	bcf	22,1	;volatile
  2375  0FA3  1416               	bsf	22,0	;volatile
  2376  0FA4  1116               	bcf	22,2	;volatile
  2377                           
  2378                           ;main.c: 533: if(PORTBbits.RB1==1){aux=1;}
  2379  0FA5  1C8D               	btfss	13,1	;volatile
  2380  0FA6  2FAB               	goto	l459
  2381  0FA7  3001               	movlw	1
  2382  0FA8  00A2               	movwf	_aux
  2383  0FA9  3000               	movlw	0
  2384  0FAA  00A3               	movwf	_aux+1
  2385  0FAB                     l459:	
  2386                           
  2387                           ;main.c: 534: _delay((unsigned long)((50)*(32000000/4000.0)));
  2388  0FAB  3003               	movlw	3
  2389  0FAC  0140               	movlb	0	; select bank0
  2390  0FAD  00EA               	movwf	??_main+1
  2391  0FAE  3008               	movlw	8
  2392  0FAF  00E9               	movwf	??_main
  2393  0FB0  3077               	movlw	119
  2394  0FB1                     u3637:	
  2395  0FB1  0B89               	decfsz	9,f
  2396  0FB2  2FB1               	goto	u3637
  2397  0FB3  0BE9               	decfsz	??_main,f
  2398  0FB4  2FB1               	goto	u3637
  2399  0FB5  0BEA               	decfsz	??_main+1,f
  2400  0FB6  2FB1               	goto	u3637
  2401                           
  2402                           ;main.c: 535: LATAbits.LATA1=0;LATAbits.LATA0=0;LATAbits.LATA2=1;
  2403  0FB7  0140               	movlb	0	; select bank0
  2404  0FB8  1096               	bcf	22,1	;volatile
  2405  0FB9  1016               	bcf	22,0	;volatile
  2406  0FBA  1516               	bsf	22,2	;volatile
  2407                           
  2408                           ;main.c: 536: if(PORTBbits.RB1==1){aux=1;}
  2409  0FBB  1C8D               	btfss	13,1	;volatile
  2410  0FBC  2FC1               	goto	l460
  2411  0FBD  3001               	movlw	1
  2412  0FBE  00A2               	movwf	_aux
  2413  0FBF  3000               	movlw	0
  2414  0FC0  00A3               	movwf	_aux+1
  2415  0FC1                     l460:	
  2416                           
  2417                           ;main.c: 537: _delay((unsigned long)((50)*(32000000/4000.0)));
  2418  0FC1  3003               	movlw	3
  2419  0FC2  0140               	movlb	0	; select bank0
  2420  0FC3  00EA               	movwf	??_main+1
  2421  0FC4  3008               	movlw	8
  2422  0FC5  00E9               	movwf	??_main
  2423  0FC6  3077               	movlw	119
  2424  0FC7                     u3647:	
  2425  0FC7  0B89               	decfsz	9,f
  2426  0FC8  2FC7               	goto	u3647
  2427  0FC9  0BE9               	decfsz	??_main,f
  2428  0FCA  2FC7               	goto	u3647
  2429  0FCB  0BEA               	decfsz	??_main+1,f
  2430  0FCC  2FC7               	goto	u3647
  2431                           
  2432                           ;main.c: 539: if(auxbum==0){moverservo(0);auxbum=1;}
  2433  0FCD  0141               	movlb	1	; select bank1
  2434  0FCE  0820               	movf	_auxbum^(0+128),w
  2435  0FCF  0421               	iorwf	(_auxbum+1)^(0+128),w
  2436  0FD0  1D03               	btfss	3,2
  2437  0FD1  2FDD               	goto	l2936
  2438  0FD2  3000               	movlw	0
  2439  0FD3  00F0               	movwf	moverservo@grados
  2440  0FD4  00F1               	movwf	moverservo@grados+1
  2441  0FD5  3188  2016  318D   	fcall	_moverservo
  2442  0FD8  3001               	movlw	1
  2443  0FD9  0141               	movlb	1	; select bank1
  2444  0FDA  00A0               	movwf	_auxbum^(0+128)
  2445  0FDB  3000               	movlw	0
  2446  0FDC  00A1               	movwf	(_auxbum^(0+128)+1)
  2447  0FDD                     l2936:	
  2448  0FDD  0140               	movlb	0	; select bank0
  2449  0FDE  0822               	movf	_aux,w
  2450  0FDF  0423               	iorwf	_aux+1,w
  2451  0FE0  1903               	btfsc	3,2
  2452  0FE1  2F75               	goto	l2894
  2453                           
  2454                           ;main.c: 540: }
  2455                           ;main.c: 541: auxbum=0;
  2456  0FE2  0141               	movlb	1	; select bank1
  2457  0FE3  01A0               	clrf	_auxbum^(0+128)
  2458  0FE4  01A1               	clrf	(_auxbum+1)^(0+128)
  2459                           
  2460                           ;main.c: 542: moverservo(90);
  2461  0FE5  305A               	movlw	90
  2462  0FE6  00F0               	movwf	moverservo@grados
  2463  0FE7  3000               	movlw	0
  2464  0FE8  00F1               	movwf	moverservo@grados+1
  2465  0FE9  3188  2016  318D   	fcall	_moverservo
  2466                           
  2467                           ;main.c: 543: aux=0;
  2468  0FEC  0140               	movlb	0	; select bank0
  2469  0FED  01A2               	clrf	_aux
  2470  0FEE  01A3               	clrf	_aux+1
  2471                           
  2472                           ;main.c: 544: Lcd_Cmd(1);
  2473  0FEF  3001               	movlw	1
  2474  0FF0  3188  209C  318D   	fcall	_Lcd_Cmd
  2475                           
  2476                           ;main.c: 545: RB0PPS=0x00;
  2477  0FF3  017E               	movlb	62	; select bank62
  2478  0FF4  0198               	clrf	24	;volatile
  2479  0FF5                     l2948:	
  2480                           
  2481                           ;main.c: 546: }
  2482                           ;main.c: 547: if(dseg==59){Lcd_Cmd(1);}
  2483  0FF5  303B               	movlw	59
  2484  0FF6  0140               	movlb	0	; select bank0
  2485  0FF7  063E               	xorwf	_dseg,w
  2486  0FF8  043F               	iorwf	_dseg+1,w
  2487  0FF9  1D03               	btfss	3,2
  2488  0FFA  2D71               	goto	l2818
  2489  0FFB  3001               	movlw	1
  2490  0FFC  3188  209C  318D   	fcall	_Lcd_Cmd
  2491  0FFF  2D71               	goto	l2818
  2492  1000                     __end_of_main:	
  2493                           ;main.c: 549: }
  2494                           ;main.c: 550: return (0);
  2495                           ;	Return value of _main is never used
  2496                           
  2497                           
  2498                           	psect	text1
  2499  0816                     __ptext1:	
  2500 ;; *************** function _moverservo *****************
  2501 ;; Defined at:
  2502 ;;		line 36 in file "main.c"
  2503 ;; Parameters:    Size  Location     Type
  2504 ;;  grados          2    0[COMMON] int 
  2505 ;; Auto vars:     Size  Location     Type
  2506 ;;		None
  2507 ;; Return value:  Size  Location     Type
  2508 ;;                  1    wreg      void 
  2509 ;; Registers used:
  2510 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  2511 ;; Tracked objects:
  2512 ;;		On entry : 0/0
  2513 ;;		On exit  : 0/0
  2514 ;;		Unchanged: 0/0
  2515 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
  2516 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  2517 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  2518 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  2519 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  2520 ;;Total ram usage:        3 bytes
  2521 ;; Hardware stack levels used:    1
  2522 ;; This function calls:
  2523 ;;		Nothing
  2524 ;; This function is called by:
  2525 ;;		_main
  2526 ;; This function uses a non-reentrant model
  2527 ;;
  2528                           
  2529                           
  2530                           ;psect for function _moverservo
  2531  0816                     _moverservo:	
  2532                           
  2533                           ;main.c: 37: switch(grados){
  2534                           
  2535                           ;incstack = 0
  2536                           ; Regs used in _moverservo: [wreg-fsr0h+status,2+status,0]
  2537  0816  288B               	goto	l2384
  2538  0817                     l2352:	
  2539                           ;main.c: 38: case 0:
  2540                           
  2541                           
  2542                           ;main.c: 39: for(i=0;i<50;i++){
  2543  0817  0140               	movlb	0	; select bank0
  2544  0818  01A0               	clrf	_i
  2545  0819  01A1               	clrf	_i+1
  2546  081A                     L1:	
  2547  081A  0821               	movf	_i+1,w
  2548  081B  3A80               	xorlw	128
  2549  081C  00F2               	movwf	??_moverservo
  2550  081D  3080               	movlw	128
  2551  081E  0272               	subwf	??_moverservo,w
  2552  081F  1D03               	skipz
  2553  0820  2823               	goto	u2625
  2554  0821  3032               	movlw	50
  2555  0822  0220               	subwf	_i,w
  2556  0823                     u2625:	
  2557  0823  1803               	btfsc	3,0
  2558  0824  0008               	return
  2559                           
  2560                           ;main.c: 40: LATAbits.LATA3=1;
  2561  0825  0140               	movlb	0	; select bank0
  2562  0826  1596               	bsf	22,3	;volatile
  2563                           
  2564                           ;main.c: 41: _delay((unsigned long)((600)*(32000000/4000000.0)));
  2565  0827  3007               	movlw	7
  2566  0828  00F2               	movwf	??_moverservo
  2567  0829  303A               	movlw	58
  2568  082A                     u3657:	
  2569  082A  0B89               	decfsz	9,f
  2570  082B  282A               	goto	u3657
  2571  082C  0BF2               	decfsz	??_moverservo,f
  2572  082D  282A               	goto	u3657
  2573  082E  3200               	nop2
  2574                           
  2575                           ;main.c: 42: LATAbits.LATA3=0;
  2576  082F  0140               	movlb	0	; select bank0
  2577  0830  1196               	bcf	22,3	;volatile
  2578                           
  2579                           ;main.c: 43: _delay((unsigned long)((19000)*(32000000/4000000.0)));
  2580  0831  30C6               	movlw	198
  2581  0832  00F2               	movwf	??_moverservo
  2582  0833  3066               	movlw	102
  2583  0834                     u3667:	
  2584  0834  0B89               	decfsz	9,f
  2585  0835  2834               	goto	u3667
  2586  0836  0BF2               	decfsz	??_moverservo,f
  2587  0837  2834               	goto	u3667
  2588  0838  3001               	movlw	1
  2589  0839  0140               	movlb	0	; select bank0
  2590  083A  07A0               	addwf	_i,f
  2591  083B  3000               	movlw	0
  2592  083C  3DA1               	addwfc	_i+1,f
  2593  083D  281A               	goto	L1
  2594  083E                     l2362:	
  2595                           ;main.c: 46: case 90:
  2596                           
  2597                           ;main.c: 44: }
  2598                           ;main.c: 45: break;
  2599                           
  2600                           
  2601                           ;main.c: 47: for(i=0;i<50;i++){
  2602  083E  0140               	movlb	0	; select bank0
  2603  083F  01A0               	clrf	_i
  2604  0840  01A1               	clrf	_i+1
  2605  0841                     L2:	
  2606  0841  0821               	movf	_i+1,w
  2607  0842  3A80               	xorlw	128
  2608  0843  00F2               	movwf	??_moverservo
  2609  0844  3080               	movlw	128
  2610  0845  0272               	subwf	??_moverservo,w
  2611  0846  1D03               	skipz
  2612  0847  284A               	goto	u2645
  2613  0848  3032               	movlw	50
  2614  0849  0220               	subwf	_i,w
  2615  084A                     u2645:	
  2616  084A  1803               	btfsc	3,0
  2617  084B  0008               	return
  2618                           
  2619                           ;main.c: 48: LATAbits.LATA3=1;
  2620  084C  0140               	movlb	0	; select bank0
  2621  084D  1596               	bsf	22,3	;volatile
  2622                           
  2623                           ;main.c: 49: _delay((unsigned long)((1600)*(32000000/4000000.0)));
  2624  084E  3011               	movlw	17
  2625  084F  00F2               	movwf	??_moverservo
  2626  0850  309E               	movlw	158
  2627  0851                     u3677:	
  2628  0851  0B89               	decfsz	9,f
  2629  0852  2851               	goto	u3677
  2630  0853  0BF2               	decfsz	??_moverservo,f
  2631  0854  2851               	goto	u3677
  2632  0855  3200               	nop2
  2633                           
  2634                           ;main.c: 50: LATAbits.LATA3=0;
  2635  0856  0140               	movlb	0	; select bank0
  2636  0857  1196               	bcf	22,3	;volatile
  2637                           
  2638                           ;main.c: 51: _delay((unsigned long)((19000)*(32000000/4000000.0)));
  2639  0858  30C6               	movlw	198
  2640  0859  00F2               	movwf	??_moverservo
  2641  085A  3066               	movlw	102
  2642  085B                     u3687:	
  2643  085B  0B89               	decfsz	9,f
  2644  085C  285B               	goto	u3687
  2645  085D  0BF2               	decfsz	??_moverservo,f
  2646  085E  285B               	goto	u3687
  2647  085F  3001               	movlw	1
  2648  0860  0140               	movlb	0	; select bank0
  2649  0861  07A0               	addwf	_i,f
  2650  0862  3000               	movlw	0
  2651  0863  3DA1               	addwfc	_i+1,f
  2652  0864  2841               	goto	L2
  2653  0865                     l2372:	
  2654                           ;main.c: 56: case 180:
  2655                           
  2656                           ;main.c: 52: }
  2657                           ;main.c: 55: break;
  2658                           
  2659                           
  2660                           ;main.c: 57: for(i=0;i<50;i++){
  2661  0865  0140               	movlb	0	; select bank0
  2662  0866  01A0               	clrf	_i
  2663  0867  01A1               	clrf	_i+1
  2664  0868                     L3:	
  2665  0868  0821               	movf	_i+1,w
  2666  0869  3A80               	xorlw	128
  2667  086A  00F2               	movwf	??_moverservo
  2668  086B  3080               	movlw	128
  2669  086C  0272               	subwf	??_moverservo,w
  2670  086D  1D03               	skipz
  2671  086E  2871               	goto	u2665
  2672  086F  3032               	movlw	50
  2673  0870  0220               	subwf	_i,w
  2674  0871                     u2665:	
  2675  0871  1803               	btfsc	3,0
  2676  0872  0008               	return
  2677                           
  2678                           ;main.c: 58: LATAbits.LATA3=1;
  2679  0873  0140               	movlb	0	; select bank0
  2680  0874  1596               	bsf	22,3	;volatile
  2681                           
  2682                           ;main.c: 59: _delay((unsigned long)((2600)*(32000000/4000000.0)));
  2683  0875  301C               	movlw	28
  2684  0876  00F2               	movwf	??_moverservo
  2685  0877  3002               	movlw	2
  2686  0878                     u3697:	
  2687  0878  0B89               	decfsz	9,f
  2688  0879  2878               	goto	u3697
  2689  087A  0BF2               	decfsz	??_moverservo,f
  2690  087B  2878               	goto	u3697
  2691                           
  2692                           ;main.c: 60: LATAbits.LATA3=0;
  2693  087C  0140               	movlb	0	; select bank0
  2694  087D  1196               	bcf	22,3	;volatile
  2695                           
  2696                           ;main.c: 61: _delay((unsigned long)((19000)*(32000000/4000000.0)));
  2697  087E  30C6               	movlw	198
  2698  087F  00F2               	movwf	??_moverservo
  2699  0880  3066               	movlw	102
  2700  0881                     u3707:	
  2701  0881  0B89               	decfsz	9,f
  2702  0882  2881               	goto	u3707
  2703  0883  0BF2               	decfsz	??_moverservo,f
  2704  0884  2881               	goto	u3707
  2705  0885  3001               	movlw	1
  2706  0886  0140               	movlb	0	; select bank0
  2707  0887  07A0               	addwf	_i,f
  2708  0888  3000               	movlw	0
  2709  0889  3DA1               	addwfc	_i+1,f
  2710  088A  2868               	goto	L3
  2711  088B                     l2384:	
  2712                           ;main.c: 64: }
  2713                           
  2714                           ;main.c: 62: }
  2715                           ;main.c: 63: break;
  2716                           
  2717                           
  2718                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2719                           ; Switch size 1, requested type "space"
  2720                           ; Number of cases is 1, Range of values is 0 to 0
  2721                           ; switch strategies available:
  2722                           ; Name         Instructions Cycles
  2723                           ; simple_byte            4     3 (average)
  2724                           ; direct_byte            8     6 (fixed)
  2725                           ; jumptable            260     6 (fixed)
  2726                           ;	Chosen strategy is simple_byte
  2727  088B  0871               	movf	moverservo@grados+1,w
  2728  088C  3A00               	xorlw	0	; case 0
  2729  088D  1903               	skipnz
  2730  088E  2890               	goto	l3012
  2731  088F  289B               	goto	l207
  2732  0890                     l3012:	
  2733                           
  2734                           ; Switch size 1, requested type "space"
  2735                           ; Number of cases is 3, Range of values is 0 to 180
  2736                           ; switch strategies available:
  2737                           ; Name         Instructions Cycles
  2738                           ; simple_byte           10     6 (average)
  2739                           ; jumptable            260     6 (fixed)
  2740                           ;	Chosen strategy is simple_byte
  2741  0890  0870               	movf	moverservo@grados,w
  2742  0891  3A00               	xorlw	0	; case 0
  2743  0892  1903               	skipnz
  2744  0893  2817               	goto	l2352
  2745  0894  3A5A               	xorlw	90	; case 90
  2746  0895  1903               	skipnz
  2747  0896  283E               	goto	l2362
  2748  0897  3AEE               	xorlw	238	; case 180
  2749  0898  1903               	skipnz
  2750  0899  2865               	goto	l2372
  2751  089A  289B               	goto	l207
  2752  089B                     l207:	
  2753  089B  0008               	return
  2754  089C                     __end_of_moverservo:	
  2755                           
  2756                           	psect	text2
  2757  0104                     __ptext2:	
  2758 ;; *************** function _menu *****************
  2759 ;; Defined at:
  2760 ;;		line 159 in file "main.c"
  2761 ;; Parameters:    Size  Location     Type
  2762 ;;		None
  2763 ;; Auto vars:     Size  Location     Type
  2764 ;;		None
  2765 ;; Return value:  Size  Location     Type
  2766 ;;                  1    wreg      void 
  2767 ;; Registers used:
  2768 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2769 ;; Tracked objects:
  2770 ;;		On entry : 0/0
  2771 ;;		On exit  : 0/0
  2772 ;;		Unchanged: 0/0
  2773 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
  2774 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  2775 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  2776 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  2777 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  2778 ;;Total ram usage:        2 bytes
  2779 ;; Hardware stack levels used:    1
  2780 ;; Hardware stack levels required when called:    2
  2781 ;; This function calls:
  2782 ;;		_Lcd_Cmd
  2783 ;;		_Lcd_Out
  2784 ;;		_Lcd_Out2
  2785 ;;		_rtc
  2786 ;;		_sprintf
  2787 ;; This function is called by:
  2788 ;;		_main
  2789 ;; This function uses a non-reentrant model
  2790 ;;
  2791                           
  2792                           
  2793                           ;psect for function _menu
  2794  0104                     _menu:	
  2795                           
  2796                           ;main.c: 160: if(PORTBbits.RB0==1){
  2797                           
  2798                           ;incstack = 0
  2799                           ; Regs used in _menu: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  2800  0104  0140               	movlb	0	; select bank0
  2801  0105  1C0D               	btfss	13,0	;volatile
  2802  0106  2939               	goto	l2406
  2803                           
  2804                           ;main.c: 161: seleccion=(seleccion + 1);
  2805  0107  0824               	movf	_seleccion,w
  2806  0108  3E01               	addlw	1
  2807  0109  00A4               	movwf	_seleccion
  2808  010A  3000               	movlw	0
  2809  010B  3D25               	addwfc	_seleccion+1,w
  2810  010C  00A5               	movwf	_seleccion+1
  2811                           
  2812                           ;main.c: 162: if(seleccion==2){seleccion=0;}
  2813  010D  3002               	movlw	2
  2814  010E  0624               	xorwf	_seleccion,w
  2815  010F  0425               	iorwf	_seleccion+1,w
  2816  0110  1D03               	btfss	3,2
  2817  0111  2914               	goto	l2396
  2818  0112  01A4               	clrf	_seleccion
  2819  0113  01A5               	clrf	_seleccion+1
  2820  0114                     l2396:	
  2821                           
  2822                           ;main.c: 163: _delay((unsigned long)((100)*(32000000/4000.0)));
  2823  0114  3005               	movlw	5
  2824  0115  0140               	movlb	0	; select bank0
  2825  0116  00E4               	movwf	??_menu+1
  2826  0117  300F               	movlw	15
  2827  0118  00E3               	movwf	??_menu
  2828  0119  30F1               	movlw	241
  2829  011A                     u3717:	
  2830  011A  0B89               	decfsz	9,f
  2831  011B  291A               	goto	u3717
  2832  011C  0BE3               	decfsz	??_menu,f
  2833  011D  291A               	goto	u3717
  2834  011E  0BE4               	decfsz	??_menu+1,f
  2835  011F  291A               	goto	u3717
  2836                           
  2837                           ;main.c: 164: Lcd_Cmd(1);
  2838  0120  3001               	movlw	1
  2839  0121  3188  209C  3181   	fcall	_Lcd_Cmd
  2840                           
  2841                           ;main.c: 166: }
  2842                           ;main.c: 167: switch(seleccion){
  2843  0124  2939               	goto	l2406
  2844  0125                     l2400:	
  2845                           ;main.c: 168: case 0:
  2846                           
  2847                           
  2848                           ;main.c: 169: Lcd_Out(2,0,"  CONFIG HOUR");
  2849  0125  01F3               	clrf	Lcd_Out@x
  2850  0126  30BD               	movlw	low (STR_1| (0+32768))
  2851  0127  00F4               	movwf	Lcd_Out@buffer
  2852  0128  3098               	movlw	high (STR_1| (0+32768))
  2853  0129  00F5               	movwf	Lcd_Out@buffer+1
  2854  012A  3002               	movlw	2
  2855  012B  3197  2778  3181   	fcall	_Lcd_Out
  2856                           
  2857                           ;main.c: 170: break;
  2858  012E  2947               	goto	l295
  2859  012F                     l2402:	
  2860                           ;main.c: 171: case 1:
  2861                           
  2862                           
  2863                           ;main.c: 172: Lcd_Out(2,0,"SEL HOUR BUM!!!");
  2864  012F  01F3               	clrf	Lcd_Out@x
  2865  0130  301C               	movlw	low (STR_2| (0+32768))
  2866  0131  00F4               	movwf	Lcd_Out@buffer
  2867  0132  3098               	movlw	high (STR_2| (0+32768))
  2868  0133  00F5               	movwf	Lcd_Out@buffer+1
  2869  0134  3002               	movlw	2
  2870  0135  3197  2778  3181   	fcall	_Lcd_Out
  2871                           
  2872                           ;main.c: 174: }
  2873                           
  2874                           ;main.c: 173: break;
  2875  0138  2947               	goto	l295
  2876  0139                     l2406:	
  2877                           
  2878                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2879                           ; Switch size 1, requested type "space"
  2880                           ; Number of cases is 1, Range of values is 0 to 0
  2881                           ; switch strategies available:
  2882                           ; Name         Instructions Cycles
  2883                           ; simple_byte            4     3 (average)
  2884                           ; direct_byte            8     6 (fixed)
  2885                           ; jumptable            260     6 (fixed)
  2886                           ;	Chosen strategy is simple_byte
  2887  0139  0140               	movlb	0	; select bank0
  2888  013A  0825               	movf	_seleccion+1,w
  2889  013B  3A00               	xorlw	0	; case 0
  2890  013C  1903               	skipnz
  2891  013D  293F               	goto	l3014
  2892  013E  2947               	goto	l295
  2893  013F                     l3014:	
  2894                           
  2895                           ; Switch size 1, requested type "space"
  2896                           ; Number of cases is 2, Range of values is 0 to 1
  2897                           ; switch strategies available:
  2898                           ; Name         Instructions Cycles
  2899                           ; simple_byte            7     4 (average)
  2900                           ; direct_byte           10     6 (fixed)
  2901                           ; jumptable            260     6 (fixed)
  2902                           ;	Chosen strategy is simple_byte
  2903  013F  0824               	movf	_seleccion,w
  2904  0140  3A00               	xorlw	0	; case 0
  2905  0141  1903               	skipnz
  2906  0142  2925               	goto	l2400
  2907  0143  3A01               	xorlw	1	; case 1
  2908  0144  1903               	skipnz
  2909  0145  292F               	goto	l2402
  2910  0146  2947               	goto	l295
  2911  0147                     l295:	
  2912                           
  2913                           ;main.c: 175: if(PORTBbits.RB1==1){
  2914  0147  0140               	movlb	0	; select bank0
  2915  0148  1C8D               	btfss	13,1	;volatile
  2916  0149  0008               	return
  2917                           
  2918                           ;main.c: 176: inicio=seleccion;
  2919  014A  0825               	movf	_seleccion+1,w
  2920  014B  0141               	movlb	1	; select bank1
  2921  014C  00AF               	movwf	(_inicio+1)^(0+128)
  2922  014D  0140               	movlb	0	; select bank0
  2923  014E  0824               	movf	_seleccion,w
  2924  014F  0141               	movlb	1	; select bank1
  2925  0150  00AE               	movwf	_inicio^(0+128)
  2926                           
  2927                           ;main.c: 177: _delay((unsigned long)((100)*(32000000/4000.0)));
  2928  0151  3005               	movlw	5
  2929  0152  0140               	movlb	0	; select bank0
  2930  0153  00E4               	movwf	??_menu+1
  2931  0154  300F               	movlw	15
  2932  0155  00E3               	movwf	??_menu
  2933  0156  30F1               	movlw	241
  2934  0157                     u3727:	
  2935  0157  0B89               	decfsz	9,f
  2936  0158  2957               	goto	u3727
  2937  0159  0BE3               	decfsz	??_menu,f
  2938  015A  2957               	goto	u3727
  2939  015B  0BE4               	decfsz	??_menu+1,f
  2940  015C  2957               	goto	u3727
  2941                           
  2942                           ;main.c: 179: switch(inicio){
  2943  015D  2FCD               	goto	l2746
  2944  015E                     l299:	
  2945                           ;main.c: 180: case 0:
  2946                           
  2947                           
  2948                           ;main.c: 181: LATAbits.LATA1=0;LATAbits.LATA0=0;LATAbits.LATA2=1;
  2949  015E  0140               	movlb	0	; select bank0
  2950  015F  1096               	bcf	22,1	;volatile
  2951  0160  1016               	bcf	22,0	;volatile
  2952  0161  1516               	bsf	22,2	;volatile
  2953                           
  2954                           ;main.c: 182: Lcd_Cmd(1);
  2955  0162  3001               	movlw	1
  2956  0163  3188  209C  3181   	fcall	_Lcd_Cmd
  2957                           
  2958                           ;main.c: 183: _delay((unsigned long)((100)*(32000000/4000.0)));
  2959  0166  3005               	movlw	5
  2960  0167  0140               	movlb	0	; select bank0
  2961  0168  00E4               	movwf	??_menu+1
  2962  0169  300F               	movlw	15
  2963  016A  00E3               	movwf	??_menu
  2964  016B  30F1               	movlw	241
  2965  016C                     u3737:	
  2966  016C  0B89               	decfsz	9,f
  2967  016D  296C               	goto	u3737
  2968  016E  0BE3               	decfsz	??_menu,f
  2969  016F  296C               	goto	u3737
  2970  0170  0BE4               	decfsz	??_menu+1,f
  2971  0171  296C               	goto	u3737
  2972                           
  2973                           ;main.c: 184: Lcd_Out(1, 0," INICIO CONFIG");
  2974  0172  01F3               	clrf	Lcd_Out@x
  2975  0173  304B               	movlw	low (STR_3| (0+32768))
  2976  0174  00F4               	movwf	Lcd_Out@buffer
  2977  0175  3098               	movlw	high (STR_3| (0+32768))
  2978  0176  00F5               	movwf	Lcd_Out@buffer+1
  2979  0177  3001               	movlw	1
  2980  0178  3197  2778  3181   	fcall	_Lcd_Out
  2981                           
  2982                           ;main.c: 185: Lcd_Out(2, 0,"   DEL RELOJ");
  2983  017B  01F3               	clrf	Lcd_Out@x
  2984  017C  30E6               	movlw	low (STR_4| (0+32768))
  2985  017D  00F4               	movwf	Lcd_Out@buffer
  2986  017E  3098               	movlw	high (STR_4| (0+32768))
  2987  017F  00F5               	movwf	Lcd_Out@buffer+1
  2988  0180  3002               	movlw	2
  2989  0181  3197  2778  3181   	fcall	_Lcd_Out
  2990                           
  2991                           ;main.c: 186: _delay((unsigned long)((500)*(32000000/4000.0)));
  2992  0184  3015               	movlw	21
  2993  0185  0140               	movlb	0	; select bank0
  2994  0186  00E4               	movwf	??_menu+1
  2995  0187  304B               	movlw	75
  2996  0188  00E3               	movwf	??_menu
  2997  0189  30BE               	movlw	190
  2998  018A                     u3747:	
  2999  018A  0B89               	decfsz	9,f
  3000  018B  298A               	goto	u3747
  3001  018C  0BE3               	decfsz	??_menu,f
  3002  018D  298A               	goto	u3747
  3003  018E  0BE4               	decfsz	??_menu+1,f
  3004  018F  298A               	goto	u3747
  3005  0190  0000               	nop
  3006  0191  2C6D               	goto	L4
  3007  0192                     l303:	
  3008                           ;main.c: 190: while(aux2==0){
  3009                           
  3010                           ;main.c: 188: while(aux==0){
  3011                           
  3012                           ;main.c: 187: Lcd_Cmd(1);
  3013                           
  3014                           
  3015                           ;main.c: 191: if(PORTBbits.RB0==1){
  3016  0192  0140               	movlb	0	; select bank0
  3017  0193  1C0D               	btfss	13,0	;volatile
  3018  0194  29B3               	goto	l2430
  3019                           
  3020                           ;main.c: 192: _delay((unsigned long)((100)*(32000000/4000.0)));
  3021  0195  3005               	movlw	5
  3022  0196  0140               	movlb	0	; select bank0
  3023  0197  00E4               	movwf	??_menu+1
  3024  0198  300F               	movlw	15
  3025  0199  00E3               	movwf	??_menu
  3026  019A  30F1               	movlw	241
  3027  019B                     u3757:	
  3028  019B  0B89               	decfsz	9,f
  3029  019C  299B               	goto	u3757
  3030  019D  0BE3               	decfsz	??_menu,f
  3031  019E  299B               	goto	u3757
  3032  019F  0BE4               	decfsz	??_menu+1,f
  3033  01A0  299B               	goto	u3757
  3034                           
  3035                           ;main.c: 193: sseg=sseg+1;
  3036  01A1  0140               	movlb	0	; select bank0
  3037  01A2  0830               	movf	_sseg,w
  3038  01A3  3E01               	addlw	1
  3039  01A4  00B0               	movwf	_sseg
  3040  01A5  3000               	movlw	0
  3041  01A6  3D31               	addwfc	_sseg+1,w
  3042  01A7  00B1               	movwf	_sseg+1
  3043                           
  3044                           ;main.c: 194: if (sseg==59){sseg=0;Lcd_Cmd(1);}
  3045  01A8  303B               	movlw	59
  3046  01A9  0630               	xorwf	_sseg,w
  3047  01AA  0431               	iorwf	_sseg+1,w
  3048  01AB  1D03               	btfss	3,2
  3049  01AC  29B3               	goto	l2430
  3050  01AD  01B0               	clrf	_sseg
  3051  01AE  01B1               	clrf	_sseg+1
  3052  01AF  3001               	movlw	1
  3053  01B0  3188  209C  3181   	fcall	_Lcd_Cmd
  3054  01B3                     l2430:	
  3055                           
  3056                           ;main.c: 196: }
  3057                           ;main.c: 197: if(PORTBbits.RB1==1){_delay((unsigned long)((100)*(32000000/4000.0)));aux2
      +                          =1;}
  3058  01B3  0140               	movlb	0	; select bank0
  3059  01B4  1C8D               	btfss	13,1	;volatile
  3060  01B5  29C7               	goto	l2434
  3061  01B6  3005               	movlw	5
  3062  01B7  0140               	movlb	0	; select bank0
  3063  01B8  00E4               	movwf	??_menu+1
  3064  01B9  300F               	movlw	15
  3065  01BA  00E3               	movwf	??_menu
  3066  01BB  30F1               	movlw	241
  3067  01BC                     u3767:	
  3068  01BC  0B89               	decfsz	9,f
  3069  01BD  29BC               	goto	u3767
  3070  01BE  0BE3               	decfsz	??_menu,f
  3071  01BF  29BC               	goto	u3767
  3072  01C0  0BE4               	decfsz	??_menu+1,f
  3073  01C1  29BC               	goto	u3767
  3074  01C2  3001               	movlw	1
  3075  01C3  0141               	movlb	1	; select bank1
  3076  01C4  00AC               	movwf	_aux2^(0+128)
  3077  01C5  3000               	movlw	0
  3078  01C6  00AD               	movwf	(_aux2^(0+128)+1)
  3079  01C7                     l2434:	
  3080                           
  3081                           ;main.c: 198: Lcd_Out(1, 0,"   CONFIG SEG");
  3082  01C7  01F3               	clrf	Lcd_Out@x
  3083  01C8  3085               	movlw	low (STR_5| (0+32768))
  3084  01C9  00F4               	movwf	Lcd_Out@buffer
  3085  01CA  3098               	movlw	high (STR_5| (0+32768))
  3086  01CB  00F5               	movwf	Lcd_Out@buffer+1
  3087  01CC  3001               	movlw	1
  3088  01CD  3197  2778  3181   	fcall	_Lcd_Out
  3089                           
  3090                           ;main.c: 199: sprintf(buffer1,"%d:%d:%d %d/%d/%d",shr,smin,sseg,sdate,smonth,syear);
  3091  01D0  300A               	movlw	low (STR_6| (0+32768))
  3092  01D1  0140               	movlb	0	; select bank0
  3093  01D2  00CA               	movwf	sprintf@f
  3094  01D3  3098               	movlw	high (STR_6| (0+32768))
  3095  01D4  00CB               	movwf	sprintf@f+1
  3096  01D5  082D               	movf	_shr+1,w
  3097  01D6  00CD               	movwf	?_sprintf+3
  3098  01D7  082C               	movf	_shr,w
  3099  01D8  00CC               	movwf	?_sprintf+2
  3100  01D9  082F               	movf	_smin+1,w
  3101  01DA  00CF               	movwf	?_sprintf+5
  3102  01DB  082E               	movf	_smin,w
  3103  01DC  00CE               	movwf	?_sprintf+4
  3104  01DD  0831               	movf	_sseg+1,w
  3105  01DE  00D1               	movwf	?_sprintf+7
  3106  01DF  0830               	movf	_sseg,w
  3107  01E0  00D0               	movwf	?_sprintf+6
  3108  01E1  082B               	movf	_sdate+1,w
  3109  01E2  00D3               	movwf	?_sprintf+9
  3110  01E3  082A               	movf	_sdate,w
  3111  01E4  00D2               	movwf	?_sprintf+8
  3112  01E5  0829               	movf	_smonth+1,w
  3113  01E6  00D5               	movwf	?_sprintf+11
  3114  01E7  0828               	movf	_smonth,w
  3115  01E8  00D4               	movwf	?_sprintf+10
  3116  01E9  0827               	movf	_syear+1,w
  3117  01EA  00D7               	movwf	?_sprintf+13
  3118  01EB  0826               	movf	_syear,w
  3119  01EC  00D6               	movwf	?_sprintf+12
  3120  01ED  30CC               	movlw	(low (_buffer1| 0))& (0+255)
  3121  01EE  3180  2037  3181   	fcall	_sprintf
  3122                           
  3123                           ;main.c: 200: Lcd_Out2(2, 1, buffer1);
  3124  01F1  01F3               	clrf	Lcd_Out2@x
  3125  01F2  0AF3               	incf	Lcd_Out2@x,f
  3126  01F3  30CC               	movlw	(low (_buffer1| 0))& (0+255)
  3127  01F4  0140               	movlb	0	; select bank0
  3128  01F5  00E3               	movwf	??_menu
  3129  01F6  0863               	movf	??_menu,w
  3130  01F7  00F4               	movwf	Lcd_Out2@buffer
  3131  01F8  3002               	movlw	2
  3132  01F9  3197  2743  3181   	fcall	_Lcd_Out2
  3133  01FC                     l2440:	
  3134  01FC  0141               	movlb	1	; select bank1
  3135  01FD  082C               	movf	_aux2^(0+128),w
  3136  01FE  042D               	iorwf	(_aux2+1)^(0+128),w
  3137  01FF  1903               	btfsc	3,2
  3138  0200  2992               	goto	l303
  3139                           
  3140                           ;main.c: 201: }
  3141                           ;main.c: 203: Lcd_Cmd(1);
  3142  0201  3001               	movlw	1
  3143  0202  3188  209C  3181   	fcall	_Lcd_Cmd
  3144  0205                     l2464:	
  3145                           ;main.c: 204: while(aux3==0){
  3146                           
  3147  0205  0141               	movlb	1	; select bank1
  3148  0206  082A               	movf	_aux3^(0+128),w
  3149  0207  042B               	iorwf	(_aux3+1)^(0+128),w
  3150  0208  1D03               	btfss	3,2
  3151  0209  2A75               	goto	l2466
  3152                           
  3153                           ;main.c: 205: if(PORTBbits.RB0==1){
  3154  020A  0140               	movlb	0	; select bank0
  3155  020B  1C0D               	btfss	13,0	;volatile
  3156  020C  2A2B               	goto	l2454
  3157                           
  3158                           ;main.c: 206: _delay((unsigned long)((100)*(32000000/4000.0)));
  3159  020D  3005               	movlw	5
  3160  020E  0140               	movlb	0	; select bank0
  3161  020F  00E4               	movwf	??_menu+1
  3162  0210  300F               	movlw	15
  3163  0211  00E3               	movwf	??_menu
  3164  0212  30F1               	movlw	241
  3165  0213                     u3777:	
  3166  0213  0B89               	decfsz	9,f
  3167  0214  2A13               	goto	u3777
  3168  0215  0BE3               	decfsz	??_menu,f
  3169  0216  2A13               	goto	u3777
  3170  0217  0BE4               	decfsz	??_menu+1,f
  3171  0218  2A13               	goto	u3777
  3172                           
  3173                           ;main.c: 207: smin=smin+1;
  3174  0219  0140               	movlb	0	; select bank0
  3175  021A  082E               	movf	_smin,w
  3176  021B  3E01               	addlw	1
  3177  021C  00AE               	movwf	_smin
  3178  021D  3000               	movlw	0
  3179  021E  3D2F               	addwfc	_smin+1,w
  3180  021F  00AF               	movwf	_smin+1
  3181                           
  3182                           ;main.c: 208: if (smin==59){smin=0;Lcd_Cmd(1);}
  3183  0220  303B               	movlw	59
  3184  0221  062E               	xorwf	_smin,w
  3185  0222  042F               	iorwf	_smin+1,w
  3186  0223  1D03               	btfss	3,2
  3187  0224  2A2B               	goto	l2454
  3188  0225  01AE               	clrf	_smin
  3189  0226  01AF               	clrf	_smin+1
  3190  0227  3001               	movlw	1
  3191  0228  3188  209C  3181   	fcall	_Lcd_Cmd
  3192  022B                     l2454:	
  3193                           
  3194                           ;main.c: 210: }
  3195                           ;main.c: 211: if(PORTBbits.RB1==1){_delay((unsigned long)((100)*(32000000/4000.0)));aux3
      +                          =1;}
  3196  022B  0140               	movlb	0	; select bank0
  3197  022C  1C8D               	btfss	13,1	;volatile
  3198  022D  2A3F               	goto	l2458
  3199  022E  3005               	movlw	5
  3200  022F  0140               	movlb	0	; select bank0
  3201  0230  00E4               	movwf	??_menu+1
  3202  0231  300F               	movlw	15
  3203  0232  00E3               	movwf	??_menu
  3204  0233  30F1               	movlw	241
  3205  0234                     u3787:	
  3206  0234  0B89               	decfsz	9,f
  3207  0235  2A34               	goto	u3787
  3208  0236  0BE3               	decfsz	??_menu,f
  3209  0237  2A34               	goto	u3787
  3210  0238  0BE4               	decfsz	??_menu+1,f
  3211  0239  2A34               	goto	u3787
  3212  023A  3001               	movlw	1
  3213  023B  0141               	movlb	1	; select bank1
  3214  023C  00AA               	movwf	_aux3^(0+128)
  3215  023D  3000               	movlw	0
  3216  023E  00AB               	movwf	(_aux3^(0+128)+1)
  3217  023F                     l2458:	
  3218                           
  3219                           ;main.c: 212: Lcd_Out(1, 0,"   CONFIG MIN");
  3220  023F  01F3               	clrf	Lcd_Out@x
  3221  0240  3093               	movlw	low (STR_7| (0+32768))
  3222  0241  00F4               	movwf	Lcd_Out@buffer
  3223  0242  3098               	movlw	high (STR_7| (0+32768))
  3224  0243  00F5               	movwf	Lcd_Out@buffer+1
  3225  0244  3001               	movlw	1
  3226  0245  3197  2778  3181   	fcall	_Lcd_Out
  3227                           
  3228                           ;main.c: 213: sprintf(buffer1,"%d:%d:%d %d/%d/%d",shr,smin,sseg,sdate,smonth,syear);
  3229  0248  300A               	movlw	low (STR_6| (0+32768))
  3230  0249  0140               	movlb	0	; select bank0
  3231  024A  00CA               	movwf	sprintf@f
  3232  024B  3098               	movlw	high (STR_6| (0+32768))
  3233  024C  00CB               	movwf	sprintf@f+1
  3234  024D  082D               	movf	_shr+1,w
  3235  024E  00CD               	movwf	?_sprintf+3
  3236  024F  082C               	movf	_shr,w
  3237  0250  00CC               	movwf	?_sprintf+2
  3238  0251  082F               	movf	_smin+1,w
  3239  0252  00CF               	movwf	?_sprintf+5
  3240  0253  082E               	movf	_smin,w
  3241  0254  00CE               	movwf	?_sprintf+4
  3242  0255  0831               	movf	_sseg+1,w
  3243  0256  00D1               	movwf	?_sprintf+7
  3244  0257  0830               	movf	_sseg,w
  3245  0258  00D0               	movwf	?_sprintf+6
  3246  0259  082B               	movf	_sdate+1,w
  3247  025A  00D3               	movwf	?_sprintf+9
  3248  025B  082A               	movf	_sdate,w
  3249  025C  00D2               	movwf	?_sprintf+8
  3250  025D  0829               	movf	_smonth+1,w
  3251  025E  00D5               	movwf	?_sprintf+11
  3252  025F  0828               	movf	_smonth,w
  3253  0260  00D4               	movwf	?_sprintf+10
  3254  0261  0827               	movf	_syear+1,w
  3255  0262  00D7               	movwf	?_sprintf+13
  3256  0263  0826               	movf	_syear,w
  3257  0264  00D6               	movwf	?_sprintf+12
  3258  0265  30CC               	movlw	(low (_buffer1| 0))& (0+255)
  3259  0266  3180  2037  3181   	fcall	_sprintf
  3260                           
  3261                           ;main.c: 214: Lcd_Out2(2, 1, buffer1);
  3262  0269  01F3               	clrf	Lcd_Out2@x
  3263  026A  0AF3               	incf	Lcd_Out2@x,f
  3264  026B  30CC               	movlw	(low (_buffer1| 0))& (0+255)
  3265  026C  0140               	movlb	0	; select bank0
  3266  026D  00E3               	movwf	??_menu
  3267  026E  0863               	movf	??_menu,w
  3268  026F  00F4               	movwf	Lcd_Out2@buffer
  3269  0270  3002               	movlw	2
  3270  0271  3197  2743  3181   	fcall	_Lcd_Out2
  3271  0274  2A05               	goto	l2464
  3272  0275                     l2466:	
  3273                           
  3274                           ;main.c: 215: }
  3275                           ;main.c: 217: Lcd_Cmd(1);
  3276  0275  3001               	movlw	1
  3277  0276  3188  209C  3181   	fcall	_Lcd_Cmd
  3278  0279                     l2488:	
  3279                           ;main.c: 218: while(aux4==0){
  3280                           
  3281  0279  0141               	movlb	1	; select bank1
  3282  027A  0828               	movf	_aux4^(0+128),w
  3283  027B  0429               	iorwf	(_aux4+1)^(0+128),w
  3284  027C  1D03               	btfss	3,2
  3285  027D  2AE9               	goto	l2490
  3286                           
  3287                           ;main.c: 219: if(PORTBbits.RB0==1){
  3288  027E  0140               	movlb	0	; select bank0
  3289  027F  1C0D               	btfss	13,0	;volatile
  3290  0280  2A9F               	goto	l2478
  3291                           
  3292                           ;main.c: 220: _delay((unsigned long)((100)*(32000000/4000.0)));
  3293  0281  3005               	movlw	5
  3294  0282  0140               	movlb	0	; select bank0
  3295  0283  00E4               	movwf	??_menu+1
  3296  0284  300F               	movlw	15
  3297  0285  00E3               	movwf	??_menu
  3298  0286  30F1               	movlw	241
  3299  0287                     u3797:	
  3300  0287  0B89               	decfsz	9,f
  3301  0288  2A87               	goto	u3797
  3302  0289  0BE3               	decfsz	??_menu,f
  3303  028A  2A87               	goto	u3797
  3304  028B  0BE4               	decfsz	??_menu+1,f
  3305  028C  2A87               	goto	u3797
  3306                           
  3307                           ;main.c: 221: shr=shr+1;
  3308  028D  0140               	movlb	0	; select bank0
  3309  028E  082C               	movf	_shr,w
  3310  028F  3E01               	addlw	1
  3311  0290  00AC               	movwf	_shr
  3312  0291  3000               	movlw	0
  3313  0292  3D2D               	addwfc	_shr+1,w
  3314  0293  00AD               	movwf	_shr+1
  3315                           
  3316                           ;main.c: 222: if (shr==23){shr=0;Lcd_Cmd(1);}
  3317  0294  3017               	movlw	23
  3318  0295  062C               	xorwf	_shr,w
  3319  0296  042D               	iorwf	_shr+1,w
  3320  0297  1D03               	btfss	3,2
  3321  0298  2A9F               	goto	l2478
  3322  0299  01AC               	clrf	_shr
  3323  029A  01AD               	clrf	_shr+1
  3324  029B  3001               	movlw	1
  3325  029C  3188  209C  3181   	fcall	_Lcd_Cmd
  3326  029F                     l2478:	
  3327                           
  3328                           ;main.c: 224: }
  3329                           ;main.c: 225: if(PORTBbits.RB1==1){_delay((unsigned long)((100)*(32000000/4000.0)));aux4
      +                          =1;}
  3330  029F  0140               	movlb	0	; select bank0
  3331  02A0  1C8D               	btfss	13,1	;volatile
  3332  02A1  2AB3               	goto	l2482
  3333  02A2  3005               	movlw	5
  3334  02A3  0140               	movlb	0	; select bank0
  3335  02A4  00E4               	movwf	??_menu+1
  3336  02A5  300F               	movlw	15
  3337  02A6  00E3               	movwf	??_menu
  3338  02A7  30F1               	movlw	241
  3339  02A8                     u3807:	
  3340  02A8  0B89               	decfsz	9,f
  3341  02A9  2AA8               	goto	u3807
  3342  02AA  0BE3               	decfsz	??_menu,f
  3343  02AB  2AA8               	goto	u3807
  3344  02AC  0BE4               	decfsz	??_menu+1,f
  3345  02AD  2AA8               	goto	u3807
  3346  02AE  3001               	movlw	1
  3347  02AF  0141               	movlb	1	; select bank1
  3348  02B0  00A8               	movwf	_aux4^(0+128)
  3349  02B1  3000               	movlw	0
  3350  02B2  00A9               	movwf	(_aux4^(0+128)+1)
  3351  02B3                     l2482:	
  3352                           
  3353                           ;main.c: 226: Lcd_Out(1, 0,"   CONFIG HR");
  3354  02B3  01F3               	clrf	Lcd_Out@x
  3355  02B4  3000               	movlw	low (STR_9| (0+32768))
  3356  02B5  00F4               	movwf	Lcd_Out@buffer
  3357  02B6  3099               	movlw	high (STR_9| (0+32768))
  3358  02B7  00F5               	movwf	Lcd_Out@buffer+1
  3359  02B8  3001               	movlw	1
  3360  02B9  3197  2778  3181   	fcall	_Lcd_Out
  3361                           
  3362                           ;main.c: 227: sprintf(buffer1,"%d:%d:%d %d/%d/%d",shr,smin,sseg,sdate,smonth,syear);
  3363  02BC  300A               	movlw	low (STR_6| (0+32768))
  3364  02BD  0140               	movlb	0	; select bank0
  3365  02BE  00CA               	movwf	sprintf@f
  3366  02BF  3098               	movlw	high (STR_6| (0+32768))
  3367  02C0  00CB               	movwf	sprintf@f+1
  3368  02C1  082D               	movf	_shr+1,w
  3369  02C2  00CD               	movwf	?_sprintf+3
  3370  02C3  082C               	movf	_shr,w
  3371  02C4  00CC               	movwf	?_sprintf+2
  3372  02C5  082F               	movf	_smin+1,w
  3373  02C6  00CF               	movwf	?_sprintf+5
  3374  02C7  082E               	movf	_smin,w
  3375  02C8  00CE               	movwf	?_sprintf+4
  3376  02C9  0831               	movf	_sseg+1,w
  3377  02CA  00D1               	movwf	?_sprintf+7
  3378  02CB  0830               	movf	_sseg,w
  3379  02CC  00D0               	movwf	?_sprintf+6
  3380  02CD  082B               	movf	_sdate+1,w
  3381  02CE  00D3               	movwf	?_sprintf+9
  3382  02CF  082A               	movf	_sdate,w
  3383  02D0  00D2               	movwf	?_sprintf+8
  3384  02D1  0829               	movf	_smonth+1,w
  3385  02D2  00D5               	movwf	?_sprintf+11
  3386  02D3  0828               	movf	_smonth,w
  3387  02D4  00D4               	movwf	?_sprintf+10
  3388  02D5  0827               	movf	_syear+1,w
  3389  02D6  00D7               	movwf	?_sprintf+13
  3390  02D7  0826               	movf	_syear,w
  3391  02D8  00D6               	movwf	?_sprintf+12
  3392  02D9  30CC               	movlw	(low (_buffer1| 0))& (0+255)
  3393  02DA  3180  2037  3181   	fcall	_sprintf
  3394                           
  3395                           ;main.c: 228: Lcd_Out2(2, 1, buffer1);
  3396  02DD  01F3               	clrf	Lcd_Out2@x
  3397  02DE  0AF3               	incf	Lcd_Out2@x,f
  3398  02DF  30CC               	movlw	(low (_buffer1| 0))& (0+255)
  3399  02E0  0140               	movlb	0	; select bank0
  3400  02E1  00E3               	movwf	??_menu
  3401  02E2  0863               	movf	??_menu,w
  3402  02E3  00F4               	movwf	Lcd_Out2@buffer
  3403  02E4  3002               	movlw	2
  3404  02E5  3197  2743  3181   	fcall	_Lcd_Out2
  3405  02E8  2A79               	goto	l2488
  3406  02E9                     l2490:	
  3407                           
  3408                           ;main.c: 229: }
  3409                           ;main.c: 231: Lcd_Cmd(1);
  3410  02E9  3001               	movlw	1
  3411  02EA  3188  209C  3181   	fcall	_Lcd_Cmd
  3412  02ED                     l2512:	
  3413                           ;main.c: 232: while(aux5==0){
  3414                           
  3415  02ED  0141               	movlb	1	; select bank1
  3416  02EE  0826               	movf	_aux5^(0+128),w
  3417  02EF  0427               	iorwf	(_aux5+1)^(0+128),w
  3418  02F0  1D03               	btfss	3,2
  3419  02F1  2B5D               	goto	l2514
  3420                           
  3421                           ;main.c: 233: if(PORTBbits.RB0==1){
  3422  02F2  0140               	movlb	0	; select bank0
  3423  02F3  1C0D               	btfss	13,0	;volatile
  3424  02F4  2B13               	goto	l2502
  3425                           
  3426                           ;main.c: 234: _delay((unsigned long)((100)*(32000000/4000.0)));
  3427  02F5  3005               	movlw	5
  3428  02F6  0140               	movlb	0	; select bank0
  3429  02F7  00E4               	movwf	??_menu+1
  3430  02F8  300F               	movlw	15
  3431  02F9  00E3               	movwf	??_menu
  3432  02FA  30F1               	movlw	241
  3433  02FB                     u3817:	
  3434  02FB  0B89               	decfsz	9,f
  3435  02FC  2AFB               	goto	u3817
  3436  02FD  0BE3               	decfsz	??_menu,f
  3437  02FE  2AFB               	goto	u3817
  3438  02FF  0BE4               	decfsz	??_menu+1,f
  3439  0300  2AFB               	goto	u3817
  3440                           
  3441                           ;main.c: 235: sdate=sdate+1;
  3442  0301  0140               	movlb	0	; select bank0
  3443  0302  082A               	movf	_sdate,w
  3444  0303  3E01               	addlw	1
  3445  0304  00AA               	movwf	_sdate
  3446  0305  3000               	movlw	0
  3447  0306  3D2B               	addwfc	_sdate+1,w
  3448  0307  00AB               	movwf	_sdate+1
  3449                           
  3450                           ;main.c: 236: if (sdate==31){sdate=0;Lcd_Cmd(1);}
  3451  0308  301F               	movlw	31
  3452  0309  062A               	xorwf	_sdate,w
  3453  030A  042B               	iorwf	_sdate+1,w
  3454  030B  1D03               	btfss	3,2
  3455  030C  2B13               	goto	l2502
  3456  030D  01AA               	clrf	_sdate
  3457  030E  01AB               	clrf	_sdate+1
  3458  030F  3001               	movlw	1
  3459  0310  3188  209C  3181   	fcall	_Lcd_Cmd
  3460  0313                     l2502:	
  3461                           
  3462                           ;main.c: 238: }
  3463                           ;main.c: 239: if(PORTBbits.RB1==1){_delay((unsigned long)((100)*(32000000/4000.0)));aux5
      +                          =1;}
  3464  0313  0140               	movlb	0	; select bank0
  3465  0314  1C8D               	btfss	13,1	;volatile
  3466  0315  2B27               	goto	l2506
  3467  0316  3005               	movlw	5
  3468  0317  0140               	movlb	0	; select bank0
  3469  0318  00E4               	movwf	??_menu+1
  3470  0319  300F               	movlw	15
  3471  031A  00E3               	movwf	??_menu
  3472  031B  30F1               	movlw	241
  3473  031C                     u3827:	
  3474  031C  0B89               	decfsz	9,f
  3475  031D  2B1C               	goto	u3827
  3476  031E  0BE3               	decfsz	??_menu,f
  3477  031F  2B1C               	goto	u3827
  3478  0320  0BE4               	decfsz	??_menu+1,f
  3479  0321  2B1C               	goto	u3827
  3480  0322  3001               	movlw	1
  3481  0323  0141               	movlb	1	; select bank1
  3482  0324  00A6               	movwf	_aux5^(0+128)
  3483  0325  3000               	movlw	0
  3484  0326  00A7               	movwf	(_aux5^(0+128)+1)
  3485  0327                     l2506:	
  3486                           
  3487                           ;main.c: 240: Lcd_Out(1, 0,"  CONFIG FECHA");
  3488  0327  01F3               	clrf	Lcd_Out@x
  3489  0328  303C               	movlw	low (STR_11| (0+32768))
  3490  0329  00F4               	movwf	Lcd_Out@buffer
  3491  032A  3098               	movlw	high (STR_11| (0+32768))
  3492  032B  00F5               	movwf	Lcd_Out@buffer+1
  3493  032C  3001               	movlw	1
  3494  032D  3197  2778  3181   	fcall	_Lcd_Out
  3495                           
  3496                           ;main.c: 241: sprintf(buffer1,"%d:%d:%d %d/%d/%d",shr,smin,sseg,sdate,smonth,syear);
  3497  0330  300A               	movlw	low (STR_6| (0+32768))
  3498  0331  0140               	movlb	0	; select bank0
  3499  0332  00CA               	movwf	sprintf@f
  3500  0333  3098               	movlw	high (STR_6| (0+32768))
  3501  0334  00CB               	movwf	sprintf@f+1
  3502  0335  082D               	movf	_shr+1,w
  3503  0336  00CD               	movwf	?_sprintf+3
  3504  0337  082C               	movf	_shr,w
  3505  0338  00CC               	movwf	?_sprintf+2
  3506  0339  082F               	movf	_smin+1,w
  3507  033A  00CF               	movwf	?_sprintf+5
  3508  033B  082E               	movf	_smin,w
  3509  033C  00CE               	movwf	?_sprintf+4
  3510  033D  0831               	movf	_sseg+1,w
  3511  033E  00D1               	movwf	?_sprintf+7
  3512  033F  0830               	movf	_sseg,w
  3513  0340  00D0               	movwf	?_sprintf+6
  3514  0341  082B               	movf	_sdate+1,w
  3515  0342  00D3               	movwf	?_sprintf+9
  3516  0343  082A               	movf	_sdate,w
  3517  0344  00D2               	movwf	?_sprintf+8
  3518  0345  0829               	movf	_smonth+1,w
  3519  0346  00D5               	movwf	?_sprintf+11
  3520  0347  0828               	movf	_smonth,w
  3521  0348  00D4               	movwf	?_sprintf+10
  3522  0349  0827               	movf	_syear+1,w
  3523  034A  00D7               	movwf	?_sprintf+13
  3524  034B  0826               	movf	_syear,w
  3525  034C  00D6               	movwf	?_sprintf+12
  3526  034D  30CC               	movlw	(low (_buffer1| 0))& (0+255)
  3527  034E  3180  2037  3181   	fcall	_sprintf
  3528                           
  3529                           ;main.c: 242: Lcd_Out2(2, 1, buffer1);
  3530  0351  01F3               	clrf	Lcd_Out2@x
  3531  0352  0AF3               	incf	Lcd_Out2@x,f
  3532  0353  30CC               	movlw	(low (_buffer1| 0))& (0+255)
  3533  0354  0140               	movlb	0	; select bank0
  3534  0355  00E3               	movwf	??_menu
  3535  0356  0863               	movf	??_menu,w
  3536  0357  00F4               	movwf	Lcd_Out2@buffer
  3537  0358  3002               	movlw	2
  3538  0359  3197  2743  3181   	fcall	_Lcd_Out2
  3539  035C  2AED               	goto	l2512
  3540  035D                     l2514:	
  3541                           
  3542                           ;main.c: 243: }
  3543                           ;main.c: 245: Lcd_Cmd(1);
  3544  035D  3001               	movlw	1
  3545  035E  3188  209C  3181   	fcall	_Lcd_Cmd
  3546  0361                     l2536:	
  3547                           ;main.c: 246: while(aux6==0){
  3548                           
  3549  0361  0141               	movlb	1	; select bank1
  3550  0362  0824               	movf	_aux6^(0+128),w
  3551  0363  0425               	iorwf	(_aux6+1)^(0+128),w
  3552  0364  1D03               	btfss	3,2
  3553  0365  2BD1               	goto	l2538
  3554                           
  3555                           ;main.c: 247: if(PORTBbits.RB0==1){
  3556  0366  0140               	movlb	0	; select bank0
  3557  0367  1C0D               	btfss	13,0	;volatile
  3558  0368  2B87               	goto	l2526
  3559                           
  3560                           ;main.c: 248: _delay((unsigned long)((100)*(32000000/4000.0)));
  3561  0369  3005               	movlw	5
  3562  036A  0140               	movlb	0	; select bank0
  3563  036B  00E4               	movwf	??_menu+1
  3564  036C  300F               	movlw	15
  3565  036D  00E3               	movwf	??_menu
  3566  036E  30F1               	movlw	241
  3567  036F                     u3837:	
  3568  036F  0B89               	decfsz	9,f
  3569  0370  2B6F               	goto	u3837
  3570  0371  0BE3               	decfsz	??_menu,f
  3571  0372  2B6F               	goto	u3837
  3572  0373  0BE4               	decfsz	??_menu+1,f
  3573  0374  2B6F               	goto	u3837
  3574                           
  3575                           ;main.c: 249: smonth=smonth+1;
  3576  0375  0140               	movlb	0	; select bank0
  3577  0376  0828               	movf	_smonth,w
  3578  0377  3E01               	addlw	1
  3579  0378  00A8               	movwf	_smonth
  3580  0379  3000               	movlw	0
  3581  037A  3D29               	addwfc	_smonth+1,w
  3582  037B  00A9               	movwf	_smonth+1
  3583                           
  3584                           ;main.c: 250: if (smonth==12){smonth=0;Lcd_Cmd(1);}
  3585  037C  300C               	movlw	12
  3586  037D  0628               	xorwf	_smonth,w
  3587  037E  0429               	iorwf	_smonth+1,w
  3588  037F  1D03               	btfss	3,2
  3589  0380  2B87               	goto	l2526
  3590  0381  01A8               	clrf	_smonth
  3591  0382  01A9               	clrf	_smonth+1
  3592  0383  3001               	movlw	1
  3593  0384  3188  209C  3181   	fcall	_Lcd_Cmd
  3594  0387                     l2526:	
  3595                           
  3596                           ;main.c: 252: }
  3597                           ;main.c: 253: if(PORTBbits.RB1==1){_delay((unsigned long)((100)*(32000000/4000.0)));aux6
      +                          =1;}
  3598  0387  0140               	movlb	0	; select bank0
  3599  0388  1C8D               	btfss	13,1	;volatile
  3600  0389  2B9B               	goto	l2530
  3601  038A  3005               	movlw	5
  3602  038B  0140               	movlb	0	; select bank0
  3603  038C  00E4               	movwf	??_menu+1
  3604  038D  300F               	movlw	15
  3605  038E  00E3               	movwf	??_menu
  3606  038F  30F1               	movlw	241
  3607  0390                     u3847:	
  3608  0390  0B89               	decfsz	9,f
  3609  0391  2B90               	goto	u3847
  3610  0392  0BE3               	decfsz	??_menu,f
  3611  0393  2B90               	goto	u3847
  3612  0394  0BE4               	decfsz	??_menu+1,f
  3613  0395  2B90               	goto	u3847
  3614  0396  3001               	movlw	1
  3615  0397  0141               	movlb	1	; select bank1
  3616  0398  00A4               	movwf	_aux6^(0+128)
  3617  0399  3000               	movlw	0
  3618  039A  00A5               	movwf	(_aux6^(0+128)+1)
  3619  039B                     l2530:	
  3620                           
  3621                           ;main.c: 254: Lcd_Out(1, 0,"   CONFIG MES");
  3622  039B  01F3               	clrf	Lcd_Out@x
  3623  039C  30CB               	movlw	low (STR_13| (0+32768))
  3624  039D  00F4               	movwf	Lcd_Out@buffer
  3625  039E  3098               	movlw	high (STR_13| (0+32768))
  3626  039F  00F5               	movwf	Lcd_Out@buffer+1
  3627  03A0  3001               	movlw	1
  3628  03A1  3197  2778  3181   	fcall	_Lcd_Out
  3629                           
  3630                           ;main.c: 255: sprintf(buffer1,"%d:%d:%d %d/%d/%d",shr,smin,sseg,sdate,smonth,syear);
  3631  03A4  300A               	movlw	low (STR_6| (0+32768))
  3632  03A5  0140               	movlb	0	; select bank0
  3633  03A6  00CA               	movwf	sprintf@f
  3634  03A7  3098               	movlw	high (STR_6| (0+32768))
  3635  03A8  00CB               	movwf	sprintf@f+1
  3636  03A9  082D               	movf	_shr+1,w
  3637  03AA  00CD               	movwf	?_sprintf+3
  3638  03AB  082C               	movf	_shr,w
  3639  03AC  00CC               	movwf	?_sprintf+2
  3640  03AD  082F               	movf	_smin+1,w
  3641  03AE  00CF               	movwf	?_sprintf+5
  3642  03AF  082E               	movf	_smin,w
  3643  03B0  00CE               	movwf	?_sprintf+4
  3644  03B1  0831               	movf	_sseg+1,w
  3645  03B2  00D1               	movwf	?_sprintf+7
  3646  03B3  0830               	movf	_sseg,w
  3647  03B4  00D0               	movwf	?_sprintf+6
  3648  03B5  082B               	movf	_sdate+1,w
  3649  03B6  00D3               	movwf	?_sprintf+9
  3650  03B7  082A               	movf	_sdate,w
  3651  03B8  00D2               	movwf	?_sprintf+8
  3652  03B9  0829               	movf	_smonth+1,w
  3653  03BA  00D5               	movwf	?_sprintf+11
  3654  03BB  0828               	movf	_smonth,w
  3655  03BC  00D4               	movwf	?_sprintf+10
  3656  03BD  0827               	movf	_syear+1,w
  3657  03BE  00D7               	movwf	?_sprintf+13
  3658  03BF  0826               	movf	_syear,w
  3659  03C0  00D6               	movwf	?_sprintf+12
  3660  03C1  30CC               	movlw	(low (_buffer1| 0))& (0+255)
  3661  03C2  3180  2037  3181   	fcall	_sprintf
  3662                           
  3663                           ;main.c: 256: Lcd_Out2(2, 1, buffer1);
  3664  03C5  01F3               	clrf	Lcd_Out2@x
  3665  03C6  0AF3               	incf	Lcd_Out2@x,f
  3666  03C7  30CC               	movlw	(low (_buffer1| 0))& (0+255)
  3667  03C8  0140               	movlb	0	; select bank0
  3668  03C9  00E3               	movwf	??_menu
  3669  03CA  0863               	movf	??_menu,w
  3670  03CB  00F4               	movwf	Lcd_Out2@buffer
  3671  03CC  3002               	movlw	2
  3672  03CD  3197  2743  3181   	fcall	_Lcd_Out2
  3673  03D0  2B61               	goto	l2536
  3674  03D1                     l2538:	
  3675                           
  3676                           ;main.c: 257: }
  3677                           ;main.c: 259: Lcd_Cmd(1);
  3678  03D1  3001               	movlw	1
  3679  03D2  3188  209C  3181   	fcall	_Lcd_Cmd
  3680  03D5                     l2560:	
  3681                           ;main.c: 260: while(aux7==0){
  3682                           
  3683  03D5  0141               	movlb	1	; select bank1
  3684  03D6  0822               	movf	_aux7^(0+128),w
  3685  03D7  0423               	iorwf	(_aux7+1)^(0+128),w
  3686  03D8  1D03               	btfss	3,2
  3687  03D9  2C45               	goto	l2562
  3688                           
  3689                           ;main.c: 261: if(PORTBbits.RB0==1){
  3690  03DA  0140               	movlb	0	; select bank0
  3691  03DB  1C0D               	btfss	13,0	;volatile
  3692  03DC  2BFB               	goto	l2550
  3693                           
  3694                           ;main.c: 262: _delay((unsigned long)((100)*(32000000/4000.0)));
  3695  03DD  3005               	movlw	5
  3696  03DE  0140               	movlb	0	; select bank0
  3697  03DF  00E4               	movwf	??_menu+1
  3698  03E0  300F               	movlw	15
  3699  03E1  00E3               	movwf	??_menu
  3700  03E2  30F1               	movlw	241
  3701  03E3                     u3857:	
  3702  03E3  0B89               	decfsz	9,f
  3703  03E4  2BE3               	goto	u3857
  3704  03E5  0BE3               	decfsz	??_menu,f
  3705  03E6  2BE3               	goto	u3857
  3706  03E7  0BE4               	decfsz	??_menu+1,f
  3707  03E8  2BE3               	goto	u3857
  3708                           
  3709                           ;main.c: 263: syear=syear+1;
  3710  03E9  0140               	movlb	0	; select bank0
  3711  03EA  0826               	movf	_syear,w
  3712  03EB  3E01               	addlw	1
  3713  03EC  00A6               	movwf	_syear
  3714  03ED  3000               	movlw	0
  3715  03EE  3D27               	addwfc	_syear+1,w
  3716  03EF  00A7               	movwf	_syear+1
  3717                           
  3718                           ;main.c: 264: if (syear==31){syear=0;Lcd_Cmd(1);}
  3719  03F0  301F               	movlw	31
  3720  03F1  0626               	xorwf	_syear,w
  3721  03F2  0427               	iorwf	_syear+1,w
  3722  03F3  1D03               	btfss	3,2
  3723  03F4  2BFB               	goto	l2550
  3724  03F5  01A6               	clrf	_syear
  3725  03F6  01A7               	clrf	_syear+1
  3726  03F7  3001               	movlw	1
  3727  03F8  3188  209C  3181   	fcall	_Lcd_Cmd
  3728  03FB                     l2550:	
  3729                           
  3730                           ;main.c: 266: }
  3731                           ;main.c: 267: if(PORTBbits.RB1==1){_delay((unsigned long)((100)*(32000000/4000.0)));aux7
      +                          =1;}
  3732  03FB  0140               	movlb	0	; select bank0
  3733  03FC  1C8D               	btfss	13,1	;volatile
  3734  03FD  2C0F               	goto	l2554
  3735  03FE  3005               	movlw	5
  3736  03FF  0140               	movlb	0	; select bank0
  3737  0400  00E4               	movwf	??_menu+1
  3738  0401  300F               	movlw	15
  3739  0402  00E3               	movwf	??_menu
  3740  0403  30F1               	movlw	241
  3741  0404                     u3867:	
  3742  0404  0B89               	decfsz	9,f
  3743  0405  2C04               	goto	u3867
  3744  0406  0BE3               	decfsz	??_menu,f
  3745  0407  2C04               	goto	u3867
  3746  0408  0BE4               	decfsz	??_menu+1,f
  3747  0409  2C04               	goto	u3867
  3748  040A  3001               	movlw	1
  3749  040B  0141               	movlb	1	; select bank1
  3750  040C  00A2               	movwf	_aux7^(0+128)
  3751  040D  3000               	movlw	0
  3752  040E  00A3               	movwf	(_aux7^(0+128)+1)
  3753  040F                     l2554:	
  3754                           
  3755                           ;main.c: 268: Lcd_Out(1, 0,"  CONFIG YEAR");
  3756  040F  01F3               	clrf	Lcd_Out@x
  3757  0410  30AF               	movlw	low (STR_15| (0+32768))
  3758  0411  00F4               	movwf	Lcd_Out@buffer
  3759  0412  3098               	movlw	high (STR_15| (0+32768))
  3760  0413  00F5               	movwf	Lcd_Out@buffer+1
  3761  0414  3001               	movlw	1
  3762  0415  3197  2778  3181   	fcall	_Lcd_Out
  3763                           
  3764                           ;main.c: 269: sprintf(buffer1,"%d:%d:%d %d/%d/%d",shr,smin,sseg,sdate,smonth,syear);
  3765  0418  300A               	movlw	low (STR_6| (0+32768))
  3766  0419  0140               	movlb	0	; select bank0
  3767  041A  00CA               	movwf	sprintf@f
  3768  041B  3098               	movlw	high (STR_6| (0+32768))
  3769  041C  00CB               	movwf	sprintf@f+1
  3770  041D  082D               	movf	_shr+1,w
  3771  041E  00CD               	movwf	?_sprintf+3
  3772  041F  082C               	movf	_shr,w
  3773  0420  00CC               	movwf	?_sprintf+2
  3774  0421  082F               	movf	_smin+1,w
  3775  0422  00CF               	movwf	?_sprintf+5
  3776  0423  082E               	movf	_smin,w
  3777  0424  00CE               	movwf	?_sprintf+4
  3778  0425  0831               	movf	_sseg+1,w
  3779  0426  00D1               	movwf	?_sprintf+7
  3780  0427  0830               	movf	_sseg,w
  3781  0428  00D0               	movwf	?_sprintf+6
  3782  0429  082B               	movf	_sdate+1,w
  3783  042A  00D3               	movwf	?_sprintf+9
  3784  042B  082A               	movf	_sdate,w
  3785  042C  00D2               	movwf	?_sprintf+8
  3786  042D  0829               	movf	_smonth+1,w
  3787  042E  00D5               	movwf	?_sprintf+11
  3788  042F  0828               	movf	_smonth,w
  3789  0430  00D4               	movwf	?_sprintf+10
  3790  0431  0827               	movf	_syear+1,w
  3791  0432  00D7               	movwf	?_sprintf+13
  3792  0433  0826               	movf	_syear,w
  3793  0434  00D6               	movwf	?_sprintf+12
  3794  0435  30CC               	movlw	(low (_buffer1| 0))& (0+255)
  3795  0436  3180  2037  3181   	fcall	_sprintf
  3796                           
  3797                           ;main.c: 270: Lcd_Out2(2, 1, buffer1);
  3798  0439  01F3               	clrf	Lcd_Out2@x
  3799  043A  0AF3               	incf	Lcd_Out2@x,f
  3800  043B  30CC               	movlw	(low (_buffer1| 0))& (0+255)
  3801  043C  0140               	movlb	0	; select bank0
  3802  043D  00E3               	movwf	??_menu
  3803  043E  0863               	movf	??_menu,w
  3804  043F  00F4               	movwf	Lcd_Out2@buffer
  3805  0440  3002               	movlw	2
  3806  0441  3197  2743  3181   	fcall	_Lcd_Out2
  3807  0444  2BD5               	goto	l2560
  3808  0445                     l2562:	
  3809                           
  3810                           ;main.c: 271: }
  3811                           ;main.c: 273: Lcd_Cmd(1);
  3812  0445  3001               	movlw	1
  3813  0446  3188  209C  3181   	fcall	_Lcd_Cmd
  3814                           
  3815                           ;main.c: 274: Lcd_Out(1, 0,"     RELOJ");
  3816  0449  01F3               	clrf	Lcd_Out@x
  3817  044A  300D               	movlw	low (STR_17| (0+32768))
  3818  044B  00F4               	movwf	Lcd_Out@buffer
  3819  044C  3099               	movlw	high (STR_17| (0+32768))
  3820  044D  00F5               	movwf	Lcd_Out@buffer+1
  3821  044E  3001               	movlw	1
  3822  044F  3197  2778  3181   	fcall	_Lcd_Out
  3823                           
  3824                           ;main.c: 275: Lcd_Out(2, 0,"  CONFIGURADO");
  3825  0452  01F3               	clrf	Lcd_Out@x
  3826  0453  30A1               	movlw	low (STR_18| (0+32768))
  3827  0454  00F4               	movwf	Lcd_Out@buffer
  3828  0455  3098               	movlw	high (STR_18| (0+32768))
  3829  0456  00F5               	movwf	Lcd_Out@buffer+1
  3830  0457  3002               	movlw	2
  3831  0458  3197  2778  3181   	fcall	_Lcd_Out
  3832                           
  3833                           ;main.c: 276: _delay((unsigned long)((500)*(32000000/4000.0)));
  3834  045B  3015               	movlw	21
  3835  045C  0140               	movlb	0	; select bank0
  3836  045D  00E4               	movwf	??_menu+1
  3837  045E  304B               	movlw	75
  3838  045F  00E3               	movwf	??_menu
  3839  0460  30BE               	movlw	190
  3840  0461                     u3877:	
  3841  0461  0B89               	decfsz	9,f
  3842  0462  2C61               	goto	u3877
  3843  0463  0BE3               	decfsz	??_menu,f
  3844  0464  2C61               	goto	u3877
  3845  0465  0BE4               	decfsz	??_menu+1,f
  3846  0466  2C61               	goto	u3877
  3847  0467  0000               	nop
  3848                           
  3849                           ;main.c: 277: aux=1;
  3850  0468  3001               	movlw	1
  3851  0469  0140               	movlb	0	; select bank0
  3852  046A  00A2               	movwf	_aux
  3853  046B  3000               	movlw	0
  3854  046C  00A3               	movwf	_aux+1
  3855  046D                     L4:	
  3856                           
  3857                           ;main.c: 278: Lcd_Cmd(1);
  3858  046D  3001               	movlw	1
  3859  046E  3188  209C  3181   	fcall	_Lcd_Cmd
  3860  0471  0140               	movlb	0	; select bank0
  3861  0472  0822               	movf	_aux,w
  3862  0473  0423               	iorwf	_aux+1,w
  3863  0474  1903               	btfsc	3,2
  3864  0475  29FC               	goto	l2440
  3865                           
  3866                           ;main.c: 281: }
  3867                           ;main.c: 282: aux=0;aux2=0;aux3=0;aux4=0,aux5=0,aux6=0,aux7=0;
  3868  0476  01A2               	clrf	_aux
  3869  0477  01A3               	clrf	_aux+1
  3870  0478  0141               	movlb	1	; select bank1
  3871  0479  01AC               	clrf	_aux2^(0+128)
  3872  047A  01AD               	clrf	(_aux2+1)^(0+128)
  3873  047B  01AA               	clrf	_aux3^(0+128)
  3874  047C  01AB               	clrf	(_aux3+1)^(0+128)
  3875  047D  01A8               	clrf	_aux4^(0+128)
  3876  047E  01A9               	clrf	(_aux4+1)^(0+128)
  3877  047F  01A6               	clrf	_aux5^(0+128)
  3878  0480  01A7               	clrf	(_aux5+1)^(0+128)
  3879  0481  01A4               	clrf	_aux6^(0+128)
  3880  0482  01A5               	clrf	(_aux6+1)^(0+128)
  3881  0483  01A2               	clrf	_aux7^(0+128)
  3882  0484  01A3               	clrf	(_aux7+1)^(0+128)
  3883                           
  3884                           ;main.c: 283: rtc(sseg,smin,shr,2,sdate,smonth,syear);
  3885  0485  0140               	movlb	0	; select bank0
  3886  0486  0831               	movf	_sseg+1,w
  3887  0487  00CD               	movwf	rtc@seg+1
  3888  0488  0830               	movf	_sseg,w
  3889  0489  00CC               	movwf	rtc@seg
  3890  048A  082F               	movf	_smin+1,w
  3891  048B  00CF               	movwf	rtc@min+1
  3892  048C  082E               	movf	_smin,w
  3893  048D  00CE               	movwf	rtc@min
  3894  048E  082D               	movf	_shr+1,w
  3895  048F  00D1               	movwf	rtc@hr+1
  3896  0490  082C               	movf	_shr,w
  3897  0491  00D0               	movwf	rtc@hr
  3898  0492  3002               	movlw	2
  3899  0493  00D2               	movwf	rtc@day
  3900  0494  3000               	movlw	0
  3901  0495  00D3               	movwf	rtc@day+1
  3902  0496  082B               	movf	_sdate+1,w
  3903  0497  00D5               	movwf	rtc@date+1
  3904  0498  082A               	movf	_sdate,w
  3905  0499  00D4               	movwf	rtc@date
  3906  049A  0829               	movf	_smonth+1,w
  3907  049B  00D7               	movwf	rtc@month+1
  3908  049C  0828               	movf	_smonth,w
  3909  049D  00D6               	movwf	rtc@month
  3910  049E  0827               	movf	_syear+1,w
  3911  049F  00D9               	movwf	rtc@year+1
  3912  04A0  0826               	movf	_syear,w
  3913  04A1  00D8               	movwf	rtc@year
  3914  04A2  318A  2277         	fcall	_rtc
  3915                           
  3916                           ;main.c: 284: break;
  3917  04A4  0008               	return
  3918  04A5                     l340:	
  3919                           ;main.c: 285: case 1:
  3920                           
  3921                           
  3922                           ;main.c: 286: LATAbits.LATA1=0;LATAbits.LATA0=0;LATAbits.LATA2=1;
  3923  04A5  0140               	movlb	0	; select bank0
  3924  04A6  1096               	bcf	22,1	;volatile
  3925  04A7  1016               	bcf	22,0	;volatile
  3926  04A8  1516               	bsf	22,2	;volatile
  3927                           
  3928                           ;main.c: 287: Lcd_Cmd(1);
  3929  04A9  3001               	movlw	1
  3930  04AA  3188  209C  3181   	fcall	_Lcd_Cmd
  3931                           
  3932                           ;main.c: 288: _delay((unsigned long)((100)*(32000000/4000.0)));
  3933  04AD  3005               	movlw	5
  3934  04AE  0140               	movlb	0	; select bank0
  3935  04AF  00E4               	movwf	??_menu+1
  3936  04B0  300F               	movlw	15
  3937  04B1  00E3               	movwf	??_menu
  3938  04B2  30F1               	movlw	241
  3939  04B3                     u3887:	
  3940  04B3  0B89               	decfsz	9,f
  3941  04B4  2CB3               	goto	u3887
  3942  04B5  0BE3               	decfsz	??_menu,f
  3943  04B6  2CB3               	goto	u3887
  3944  04B7  0BE4               	decfsz	??_menu+1,f
  3945  04B8  2CB3               	goto	u3887
  3946                           
  3947                           ;main.c: 289: Lcd_Out(1, 0," INICIO CONFIG");
  3948  04B9  01F3               	clrf	Lcd_Out@x
  3949  04BA  304B               	movlw	low (STR_3| (0+32768))
  3950  04BB  00F4               	movwf	Lcd_Out@buffer
  3951  04BC  3098               	movlw	high (STR_3| (0+32768))
  3952  04BD  00F5               	movwf	Lcd_Out@buffer+1
  3953  04BE  3001               	movlw	1
  3954  04BF  3197  2778  3181   	fcall	_Lcd_Out
  3955                           
  3956                           ;main.c: 290: Lcd_Out(2, 0,"  DE EXPLOSION");
  3957  04C2  01F3               	clrf	Lcd_Out@x
  3958  04C3  305A               	movlw	low (STR_20| (0+32768))
  3959  04C4  00F4               	movwf	Lcd_Out@buffer
  3960  04C5  3098               	movlw	high (STR_20| (0+32768))
  3961  04C6  00F5               	movwf	Lcd_Out@buffer+1
  3962  04C7  3002               	movlw	2
  3963  04C8  3197  2778  3181   	fcall	_Lcd_Out
  3964                           
  3965                           ;main.c: 291: _delay((unsigned long)((500)*(32000000/4000.0)));
  3966  04CB  3015               	movlw	21
  3967  04CC  0140               	movlb	0	; select bank0
  3968  04CD  00E4               	movwf	??_menu+1
  3969  04CE  304B               	movlw	75
  3970  04CF  00E3               	movwf	??_menu
  3971  04D0  30BE               	movlw	190
  3972  04D1                     u3897:	
  3973  04D1  0B89               	decfsz	9,f
  3974  04D2  2CD1               	goto	u3897
  3975  04D3  0BE3               	decfsz	??_menu,f
  3976  04D4  2CD1               	goto	u3897
  3977  04D5  0BE4               	decfsz	??_menu+1,f
  3978  04D6  2CD1               	goto	u3897
  3979  04D7  0000               	nop
  3980  04D8  2FB4               	goto	L5
  3981  04D9                     l344:	
  3982                           ;main.c: 295: while(aux2==0){
  3983                           
  3984                           ;main.c: 293: while(aux==0){
  3985                           
  3986                           ;main.c: 292: Lcd_Cmd(1);
  3987                           
  3988                           
  3989                           ;main.c: 296: if(PORTBbits.RB0==1){
  3990  04D9  0140               	movlb	0	; select bank0
  3991  04DA  1C0D               	btfss	13,0	;volatile
  3992  04DB  2CFA               	goto	l2598
  3993                           
  3994                           ;main.c: 297: _delay((unsigned long)((100)*(32000000/4000.0)));
  3995  04DC  3005               	movlw	5
  3996  04DD  0140               	movlb	0	; select bank0
  3997  04DE  00E4               	movwf	??_menu+1
  3998  04DF  300F               	movlw	15
  3999  04E0  00E3               	movwf	??_menu
  4000  04E1  30F1               	movlw	241
  4001  04E2                     u3907:	
  4002  04E2  0B89               	decfsz	9,f
  4003  04E3  2CE2               	goto	u3907
  4004  04E4  0BE3               	decfsz	??_menu,f
  4005  04E5  2CE2               	goto	u3907
  4006  04E6  0BE4               	decfsz	??_menu+1,f
  4007  04E7  2CE2               	goto	u3907
  4008                           
  4009                           ;main.c: 298: iseg=iseg+1;
  4010  04E8  0140               	movlb	0	; select bank0
  4011  04E9  083C               	movf	_iseg,w
  4012  04EA  3E01               	addlw	1
  4013  04EB  00BC               	movwf	_iseg
  4014  04EC  3000               	movlw	0
  4015  04ED  3D3D               	addwfc	_iseg+1,w
  4016  04EE  00BD               	movwf	_iseg+1
  4017                           
  4018                           ;main.c: 299: if (iseg==59){iseg=0;Lcd_Cmd(1);}
  4019  04EF  303B               	movlw	59
  4020  04F0  063C               	xorwf	_iseg,w
  4021  04F1  043D               	iorwf	_iseg+1,w
  4022  04F2  1D03               	btfss	3,2
  4023  04F3  2CFA               	goto	l2598
  4024  04F4  01BC               	clrf	_iseg
  4025  04F5  01BD               	clrf	_iseg+1
  4026  04F6  3001               	movlw	1
  4027  04F7  3188  209C  3181   	fcall	_Lcd_Cmd
  4028  04FA                     l2598:	
  4029                           
  4030                           ;main.c: 301: }
  4031                           ;main.c: 302: if(PORTBbits.RB1==1){_delay((unsigned long)((100)*(32000000/4000.0)));aux2
      +                          =1;}
  4032  04FA  0140               	movlb	0	; select bank0
  4033  04FB  1C8D               	btfss	13,1	;volatile
  4034  04FC  2D0E               	goto	l2602
  4035  04FD  3005               	movlw	5
  4036  04FE  0140               	movlb	0	; select bank0
  4037  04FF  00E4               	movwf	??_menu+1
  4038  0500  300F               	movlw	15
  4039  0501  00E3               	movwf	??_menu
  4040  0502  30F1               	movlw	241
  4041  0503                     u3917:	
  4042  0503  0B89               	decfsz	9,f
  4043  0504  2D03               	goto	u3917
  4044  0505  0BE3               	decfsz	??_menu,f
  4045  0506  2D03               	goto	u3917
  4046  0507  0BE4               	decfsz	??_menu+1,f
  4047  0508  2D03               	goto	u3917
  4048  0509  3001               	movlw	1
  4049  050A  0141               	movlb	1	; select bank1
  4050  050B  00AC               	movwf	_aux2^(0+128)
  4051  050C  3000               	movlw	0
  4052  050D  00AD               	movwf	(_aux2^(0+128)+1)
  4053  050E                     l2602:	
  4054                           
  4055                           ;main.c: 303: Lcd_Out(1, 0,"   CONFIG SEG");
  4056  050E  01F3               	clrf	Lcd_Out@x
  4057  050F  3085               	movlw	low (STR_5| (0+32768))
  4058  0510  00F4               	movwf	Lcd_Out@buffer
  4059  0511  3098               	movlw	high (STR_5| (0+32768))
  4060  0512  00F5               	movwf	Lcd_Out@buffer+1
  4061  0513  3001               	movlw	1
  4062  0514  3197  2778  3181   	fcall	_Lcd_Out
  4063                           
  4064                           ;main.c: 304: sprintf(buffer1,"%d:%d:%d %d/%d/%d",ihr,imin,iseg,idate,imonth,iyear);
  4065  0517  300A               	movlw	low (STR_6| (0+32768))
  4066  0518  0140               	movlb	0	; select bank0
  4067  0519  00CA               	movwf	sprintf@f
  4068  051A  3098               	movlw	high (STR_6| (0+32768))
  4069  051B  00CB               	movwf	sprintf@f+1
  4070  051C  0839               	movf	_ihr+1,w
  4071  051D  00CD               	movwf	?_sprintf+3
  4072  051E  0838               	movf	_ihr,w
  4073  051F  00CC               	movwf	?_sprintf+2
  4074  0520  083B               	movf	_imin+1,w
  4075  0521  00CF               	movwf	?_sprintf+5
  4076  0522  083A               	movf	_imin,w
  4077  0523  00CE               	movwf	?_sprintf+4
  4078  0524  083D               	movf	_iseg+1,w
  4079  0525  00D1               	movwf	?_sprintf+7
  4080  0526  083C               	movf	_iseg,w
  4081  0527  00D0               	movwf	?_sprintf+6
  4082  0528  0837               	movf	_idate+1,w
  4083  0529  00D3               	movwf	?_sprintf+9
  4084  052A  0836               	movf	_idate,w
  4085  052B  00D2               	movwf	?_sprintf+8
  4086  052C  0835               	movf	_imonth+1,w
  4087  052D  00D5               	movwf	?_sprintf+11
  4088  052E  0834               	movf	_imonth,w
  4089  052F  00D4               	movwf	?_sprintf+10
  4090  0530  0833               	movf	_iyear+1,w
  4091  0531  00D7               	movwf	?_sprintf+13
  4092  0532  0832               	movf	_iyear,w
  4093  0533  00D6               	movwf	?_sprintf+12
  4094  0534  30CC               	movlw	(low (_buffer1| 0))& (0+255)
  4095  0535  3180  2037  3181   	fcall	_sprintf
  4096                           
  4097                           ;main.c: 305: Lcd_Out2(2, 1, buffer1);
  4098  0538  01F3               	clrf	Lcd_Out2@x
  4099  0539  0AF3               	incf	Lcd_Out2@x,f
  4100  053A  30CC               	movlw	(low (_buffer1| 0))& (0+255)
  4101  053B  0140               	movlb	0	; select bank0
  4102  053C  00E3               	movwf	??_menu
  4103  053D  0863               	movf	??_menu,w
  4104  053E  00F4               	movwf	Lcd_Out2@buffer
  4105  053F  3002               	movlw	2
  4106  0540  3197  2743  3181   	fcall	_Lcd_Out2
  4107  0543                     l2608:	
  4108  0543  0141               	movlb	1	; select bank1
  4109  0544  082C               	movf	_aux2^(0+128),w
  4110  0545  042D               	iorwf	(_aux2+1)^(0+128),w
  4111  0546  1903               	btfsc	3,2
  4112  0547  2CD9               	goto	l344
  4113                           
  4114                           ;main.c: 306: }
  4115                           ;main.c: 308: Lcd_Cmd(1);
  4116  0548  3001               	movlw	1
  4117  0549  3188  209C  3181   	fcall	_Lcd_Cmd
  4118  054C                     l2632:	
  4119                           ;main.c: 309: while(aux3==0){
  4120                           
  4121  054C  0141               	movlb	1	; select bank1
  4122  054D  082A               	movf	_aux3^(0+128),w
  4123  054E  042B               	iorwf	(_aux3+1)^(0+128),w
  4124  054F  1D03               	btfss	3,2
  4125  0550  2DBC               	goto	l2634
  4126                           
  4127                           ;main.c: 310: if(PORTBbits.RB0==1){
  4128  0551  0140               	movlb	0	; select bank0
  4129  0552  1C0D               	btfss	13,0	;volatile
  4130  0553  2D72               	goto	l2622
  4131                           
  4132                           ;main.c: 311: _delay((unsigned long)((100)*(32000000/4000.0)));
  4133  0554  3005               	movlw	5
  4134  0555  0140               	movlb	0	; select bank0
  4135  0556  00E4               	movwf	??_menu+1
  4136  0557  300F               	movlw	15
  4137  0558  00E3               	movwf	??_menu
  4138  0559  30F1               	movlw	241
  4139  055A                     u3927:	
  4140  055A  0B89               	decfsz	9,f
  4141  055B  2D5A               	goto	u3927
  4142  055C  0BE3               	decfsz	??_menu,f
  4143  055D  2D5A               	goto	u3927
  4144  055E  0BE4               	decfsz	??_menu+1,f
  4145  055F  2D5A               	goto	u3927
  4146                           
  4147                           ;main.c: 312: imin=imin+1;
  4148  0560  0140               	movlb	0	; select bank0
  4149  0561  083A               	movf	_imin,w
  4150  0562  3E01               	addlw	1
  4151  0563  00BA               	movwf	_imin
  4152  0564  3000               	movlw	0
  4153  0565  3D3B               	addwfc	_imin+1,w
  4154  0566  00BB               	movwf	_imin+1
  4155                           
  4156                           ;main.c: 313: if (imin==59){imin=0;Lcd_Cmd(1);}
  4157  0567  303B               	movlw	59
  4158  0568  063A               	xorwf	_imin,w
  4159  0569  043B               	iorwf	_imin+1,w
  4160  056A  1D03               	btfss	3,2
  4161  056B  2D72               	goto	l2622
  4162  056C  01BA               	clrf	_imin
  4163  056D  01BB               	clrf	_imin+1
  4164  056E  3001               	movlw	1
  4165  056F  3188  209C  3181   	fcall	_Lcd_Cmd
  4166  0572                     l2622:	
  4167                           
  4168                           ;main.c: 315: }
  4169                           ;main.c: 316: if(PORTBbits.RB1==1){_delay((unsigned long)((100)*(32000000/4000.0)));aux3
      +                          =1;}
  4170  0572  0140               	movlb	0	; select bank0
  4171  0573  1C8D               	btfss	13,1	;volatile
  4172  0574  2D86               	goto	l2626
  4173  0575  3005               	movlw	5
  4174  0576  0140               	movlb	0	; select bank0
  4175  0577  00E4               	movwf	??_menu+1
  4176  0578  300F               	movlw	15
  4177  0579  00E3               	movwf	??_menu
  4178  057A  30F1               	movlw	241
  4179  057B                     u3937:	
  4180  057B  0B89               	decfsz	9,f
  4181  057C  2D7B               	goto	u3937
  4182  057D  0BE3               	decfsz	??_menu,f
  4183  057E  2D7B               	goto	u3937
  4184  057F  0BE4               	decfsz	??_menu+1,f
  4185  0580  2D7B               	goto	u3937
  4186  0581  3001               	movlw	1
  4187  0582  0141               	movlb	1	; select bank1
  4188  0583  00AA               	movwf	_aux3^(0+128)
  4189  0584  3000               	movlw	0
  4190  0585  00AB               	movwf	(_aux3^(0+128)+1)
  4191  0586                     l2626:	
  4192                           
  4193                           ;main.c: 317: Lcd_Out(1, 0,"   CONFIG MIN");
  4194  0586  01F3               	clrf	Lcd_Out@x
  4195  0587  3093               	movlw	low (STR_7| (0+32768))
  4196  0588  00F4               	movwf	Lcd_Out@buffer
  4197  0589  3098               	movlw	high (STR_7| (0+32768))
  4198  058A  00F5               	movwf	Lcd_Out@buffer+1
  4199  058B  3001               	movlw	1
  4200  058C  3197  2778  3181   	fcall	_Lcd_Out
  4201                           
  4202                           ;main.c: 318: sprintf(buffer1,"%d:%d:%d %d/%d/%d",ihr,imin,iseg,idate,imonth,iyear);
  4203  058F  300A               	movlw	low (STR_6| (0+32768))
  4204  0590  0140               	movlb	0	; select bank0
  4205  0591  00CA               	movwf	sprintf@f
  4206  0592  3098               	movlw	high (STR_6| (0+32768))
  4207  0593  00CB               	movwf	sprintf@f+1
  4208  0594  0839               	movf	_ihr+1,w
  4209  0595  00CD               	movwf	?_sprintf+3
  4210  0596  0838               	movf	_ihr,w
  4211  0597  00CC               	movwf	?_sprintf+2
  4212  0598  083B               	movf	_imin+1,w
  4213  0599  00CF               	movwf	?_sprintf+5
  4214  059A  083A               	movf	_imin,w
  4215  059B  00CE               	movwf	?_sprintf+4
  4216  059C  083D               	movf	_iseg+1,w
  4217  059D  00D1               	movwf	?_sprintf+7
  4218  059E  083C               	movf	_iseg,w
  4219  059F  00D0               	movwf	?_sprintf+6
  4220  05A0  0837               	movf	_idate+1,w
  4221  05A1  00D3               	movwf	?_sprintf+9
  4222  05A2  0836               	movf	_idate,w
  4223  05A3  00D2               	movwf	?_sprintf+8
  4224  05A4  0835               	movf	_imonth+1,w
  4225  05A5  00D5               	movwf	?_sprintf+11
  4226  05A6  0834               	movf	_imonth,w
  4227  05A7  00D4               	movwf	?_sprintf+10
  4228  05A8  0833               	movf	_iyear+1,w
  4229  05A9  00D7               	movwf	?_sprintf+13
  4230  05AA  0832               	movf	_iyear,w
  4231  05AB  00D6               	movwf	?_sprintf+12
  4232  05AC  30CC               	movlw	(low (_buffer1| 0))& (0+255)
  4233  05AD  3180  2037  3181   	fcall	_sprintf
  4234                           
  4235                           ;main.c: 319: Lcd_Out2(2, 1, buffer1);
  4236  05B0  01F3               	clrf	Lcd_Out2@x
  4237  05B1  0AF3               	incf	Lcd_Out2@x,f
  4238  05B2  30CC               	movlw	(low (_buffer1| 0))& (0+255)
  4239  05B3  0140               	movlb	0	; select bank0
  4240  05B4  00E3               	movwf	??_menu
  4241  05B5  0863               	movf	??_menu,w
  4242  05B6  00F4               	movwf	Lcd_Out2@buffer
  4243  05B7  3002               	movlw	2
  4244  05B8  3197  2743  3181   	fcall	_Lcd_Out2
  4245  05BB  2D4C               	goto	l2632
  4246  05BC                     l2634:	
  4247                           
  4248                           ;main.c: 320: }
  4249                           ;main.c: 322: Lcd_Cmd(1);
  4250  05BC  3001               	movlw	1
  4251  05BD  3188  209C  3181   	fcall	_Lcd_Cmd
  4252  05C0                     l2656:	
  4253                           ;main.c: 323: while(aux4==0){
  4254                           
  4255  05C0  0141               	movlb	1	; select bank1
  4256  05C1  0828               	movf	_aux4^(0+128),w
  4257  05C2  0429               	iorwf	(_aux4+1)^(0+128),w
  4258  05C3  1D03               	btfss	3,2
  4259  05C4  2E30               	goto	l2658
  4260                           
  4261                           ;main.c: 324: if(PORTBbits.RB0==1){
  4262  05C5  0140               	movlb	0	; select bank0
  4263  05C6  1C0D               	btfss	13,0	;volatile
  4264  05C7  2DE6               	goto	l2646
  4265                           
  4266                           ;main.c: 325: _delay((unsigned long)((100)*(32000000/4000.0)));
  4267  05C8  3005               	movlw	5
  4268  05C9  0140               	movlb	0	; select bank0
  4269  05CA  00E4               	movwf	??_menu+1
  4270  05CB  300F               	movlw	15
  4271  05CC  00E3               	movwf	??_menu
  4272  05CD  30F1               	movlw	241
  4273  05CE                     u3947:	
  4274  05CE  0B89               	decfsz	9,f
  4275  05CF  2DCE               	goto	u3947
  4276  05D0  0BE3               	decfsz	??_menu,f
  4277  05D1  2DCE               	goto	u3947
  4278  05D2  0BE4               	decfsz	??_menu+1,f
  4279  05D3  2DCE               	goto	u3947
  4280                           
  4281                           ;main.c: 326: ihr=ihr+1;
  4282  05D4  0140               	movlb	0	; select bank0
  4283  05D5  0838               	movf	_ihr,w
  4284  05D6  3E01               	addlw	1
  4285  05D7  00B8               	movwf	_ihr
  4286  05D8  3000               	movlw	0
  4287  05D9  3D39               	addwfc	_ihr+1,w
  4288  05DA  00B9               	movwf	_ihr+1
  4289                           
  4290                           ;main.c: 327: if (ihr==23){ihr=0;Lcd_Cmd(1);}
  4291  05DB  3017               	movlw	23
  4292  05DC  0638               	xorwf	_ihr,w
  4293  05DD  0439               	iorwf	_ihr+1,w
  4294  05DE  1D03               	btfss	3,2
  4295  05DF  2DE6               	goto	l2646
  4296  05E0  01B8               	clrf	_ihr
  4297  05E1  01B9               	clrf	_ihr+1
  4298  05E2  3001               	movlw	1
  4299  05E3  3188  209C  3181   	fcall	_Lcd_Cmd
  4300  05E6                     l2646:	
  4301                           
  4302                           ;main.c: 329: }
  4303                           ;main.c: 330: if(PORTBbits.RB1==1){_delay((unsigned long)((100)*(32000000/4000.0)));aux4
      +                          =1;}
  4304  05E6  0140               	movlb	0	; select bank0
  4305  05E7  1C8D               	btfss	13,1	;volatile
  4306  05E8  2DFA               	goto	l2650
  4307  05E9  3005               	movlw	5
  4308  05EA  0140               	movlb	0	; select bank0
  4309  05EB  00E4               	movwf	??_menu+1
  4310  05EC  300F               	movlw	15
  4311  05ED  00E3               	movwf	??_menu
  4312  05EE  30F1               	movlw	241
  4313  05EF                     u3957:	
  4314  05EF  0B89               	decfsz	9,f
  4315  05F0  2DEF               	goto	u3957
  4316  05F1  0BE3               	decfsz	??_menu,f
  4317  05F2  2DEF               	goto	u3957
  4318  05F3  0BE4               	decfsz	??_menu+1,f
  4319  05F4  2DEF               	goto	u3957
  4320  05F5  3001               	movlw	1
  4321  05F6  0141               	movlb	1	; select bank1
  4322  05F7  00A8               	movwf	_aux4^(0+128)
  4323  05F8  3000               	movlw	0
  4324  05F9  00A9               	movwf	(_aux4^(0+128)+1)
  4325  05FA                     l2650:	
  4326                           
  4327                           ;main.c: 331: Lcd_Out(1, 0,"   CONFIG HR");
  4328  05FA  01F3               	clrf	Lcd_Out@x
  4329  05FB  3000               	movlw	low (STR_9| (0+32768))
  4330  05FC  00F4               	movwf	Lcd_Out@buffer
  4331  05FD  3099               	movlw	high (STR_9| (0+32768))
  4332  05FE  00F5               	movwf	Lcd_Out@buffer+1
  4333  05FF  3001               	movlw	1
  4334  0600  3197  2778  3181   	fcall	_Lcd_Out
  4335                           
  4336                           ;main.c: 332: sprintf(buffer1,"%d:%d:%d %d/%d/%d",ihr,imin,iseg,idate,imonth,iyear);
  4337  0603  300A               	movlw	low (STR_6| (0+32768))
  4338  0604  0140               	movlb	0	; select bank0
  4339  0605  00CA               	movwf	sprintf@f
  4340  0606  3098               	movlw	high (STR_6| (0+32768))
  4341  0607  00CB               	movwf	sprintf@f+1
  4342  0608  0839               	movf	_ihr+1,w
  4343  0609  00CD               	movwf	?_sprintf+3
  4344  060A  0838               	movf	_ihr,w
  4345  060B  00CC               	movwf	?_sprintf+2
  4346  060C  083B               	movf	_imin+1,w
  4347  060D  00CF               	movwf	?_sprintf+5
  4348  060E  083A               	movf	_imin,w
  4349  060F  00CE               	movwf	?_sprintf+4
  4350  0610  083D               	movf	_iseg+1,w
  4351  0611  00D1               	movwf	?_sprintf+7
  4352  0612  083C               	movf	_iseg,w
  4353  0613  00D0               	movwf	?_sprintf+6
  4354  0614  0837               	movf	_idate+1,w
  4355  0615  00D3               	movwf	?_sprintf+9
  4356  0616  0836               	movf	_idate,w
  4357  0617  00D2               	movwf	?_sprintf+8
  4358  0618  0835               	movf	_imonth+1,w
  4359  0619  00D5               	movwf	?_sprintf+11
  4360  061A  0834               	movf	_imonth,w
  4361  061B  00D4               	movwf	?_sprintf+10
  4362  061C  0833               	movf	_iyear+1,w
  4363  061D  00D7               	movwf	?_sprintf+13
  4364  061E  0832               	movf	_iyear,w
  4365  061F  00D6               	movwf	?_sprintf+12
  4366  0620  30CC               	movlw	(low (_buffer1| 0))& (0+255)
  4367  0621  3180  2037  3181   	fcall	_sprintf
  4368                           
  4369                           ;main.c: 333: Lcd_Out2(2, 1, buffer1);
  4370  0624  01F3               	clrf	Lcd_Out2@x
  4371  0625  0AF3               	incf	Lcd_Out2@x,f
  4372  0626  30CC               	movlw	(low (_buffer1| 0))& (0+255)
  4373  0627  0140               	movlb	0	; select bank0
  4374  0628  00E3               	movwf	??_menu
  4375  0629  0863               	movf	??_menu,w
  4376  062A  00F4               	movwf	Lcd_Out2@buffer
  4377  062B  3002               	movlw	2
  4378  062C  3197  2743  3181   	fcall	_Lcd_Out2
  4379  062F  2DC0               	goto	l2656
  4380  0630                     l2658:	
  4381                           
  4382                           ;main.c: 334: }
  4383                           ;main.c: 336: Lcd_Cmd(1);
  4384  0630  3001               	movlw	1
  4385  0631  3188  209C  3181   	fcall	_Lcd_Cmd
  4386  0634                     l2680:	
  4387                           ;main.c: 337: while(aux5==0){
  4388                           
  4389  0634  0141               	movlb	1	; select bank1
  4390  0635  0826               	movf	_aux5^(0+128),w
  4391  0636  0427               	iorwf	(_aux5+1)^(0+128),w
  4392  0637  1D03               	btfss	3,2
  4393  0638  2EA4               	goto	l2682
  4394                           
  4395                           ;main.c: 338: if(PORTBbits.RB0==1){
  4396  0639  0140               	movlb	0	; select bank0
  4397  063A  1C0D               	btfss	13,0	;volatile
  4398  063B  2E5A               	goto	l2670
  4399                           
  4400                           ;main.c: 339: _delay((unsigned long)((100)*(32000000/4000.0)));
  4401  063C  3005               	movlw	5
  4402  063D  0140               	movlb	0	; select bank0
  4403  063E  00E4               	movwf	??_menu+1
  4404  063F  300F               	movlw	15
  4405  0640  00E3               	movwf	??_menu
  4406  0641  30F1               	movlw	241
  4407  0642                     u3967:	
  4408  0642  0B89               	decfsz	9,f
  4409  0643  2E42               	goto	u3967
  4410  0644  0BE3               	decfsz	??_menu,f
  4411  0645  2E42               	goto	u3967
  4412  0646  0BE4               	decfsz	??_menu+1,f
  4413  0647  2E42               	goto	u3967
  4414                           
  4415                           ;main.c: 340: idate=idate+1;
  4416  0648  0140               	movlb	0	; select bank0
  4417  0649  0836               	movf	_idate,w
  4418  064A  3E01               	addlw	1
  4419  064B  00B6               	movwf	_idate
  4420  064C  3000               	movlw	0
  4421  064D  3D37               	addwfc	_idate+1,w
  4422  064E  00B7               	movwf	_idate+1
  4423                           
  4424                           ;main.c: 341: if (idate==31){idate=0;Lcd_Cmd(1);}
  4425  064F  301F               	movlw	31
  4426  0650  0636               	xorwf	_idate,w
  4427  0651  0437               	iorwf	_idate+1,w
  4428  0652  1D03               	btfss	3,2
  4429  0653  2E5A               	goto	l2670
  4430  0654  01B6               	clrf	_idate
  4431  0655  01B7               	clrf	_idate+1
  4432  0656  3001               	movlw	1
  4433  0657  3188  209C  3181   	fcall	_Lcd_Cmd
  4434  065A                     l2670:	
  4435                           
  4436                           ;main.c: 343: }
  4437                           ;main.c: 344: if(PORTBbits.RB1==1){_delay((unsigned long)((100)*(32000000/4000.0)));aux5
      +                          =1;}
  4438  065A  0140               	movlb	0	; select bank0
  4439  065B  1C8D               	btfss	13,1	;volatile
  4440  065C  2E6E               	goto	l2674
  4441  065D  3005               	movlw	5
  4442  065E  0140               	movlb	0	; select bank0
  4443  065F  00E4               	movwf	??_menu+1
  4444  0660  300F               	movlw	15
  4445  0661  00E3               	movwf	??_menu
  4446  0662  30F1               	movlw	241
  4447  0663                     u3977:	
  4448  0663  0B89               	decfsz	9,f
  4449  0664  2E63               	goto	u3977
  4450  0665  0BE3               	decfsz	??_menu,f
  4451  0666  2E63               	goto	u3977
  4452  0667  0BE4               	decfsz	??_menu+1,f
  4453  0668  2E63               	goto	u3977
  4454  0669  3001               	movlw	1
  4455  066A  0141               	movlb	1	; select bank1
  4456  066B  00A6               	movwf	_aux5^(0+128)
  4457  066C  3000               	movlw	0
  4458  066D  00A7               	movwf	(_aux5^(0+128)+1)
  4459  066E                     l2674:	
  4460                           
  4461                           ;main.c: 345: Lcd_Out(1, 0,"  CONFIG FECHA");
  4462  066E  01F3               	clrf	Lcd_Out@x
  4463  066F  303C               	movlw	low (STR_11| (0+32768))
  4464  0670  00F4               	movwf	Lcd_Out@buffer
  4465  0671  3098               	movlw	high (STR_11| (0+32768))
  4466  0672  00F5               	movwf	Lcd_Out@buffer+1
  4467  0673  3001               	movlw	1
  4468  0674  3197  2778  3181   	fcall	_Lcd_Out
  4469                           
  4470                           ;main.c: 346: sprintf(buffer1,"%d:%d:%d %d/%d/%d",ihr,imin,iseg,idate,imonth,iyear);
  4471  0677  300A               	movlw	low (STR_6| (0+32768))
  4472  0678  0140               	movlb	0	; select bank0
  4473  0679  00CA               	movwf	sprintf@f
  4474  067A  3098               	movlw	high (STR_6| (0+32768))
  4475  067B  00CB               	movwf	sprintf@f+1
  4476  067C  0839               	movf	_ihr+1,w
  4477  067D  00CD               	movwf	?_sprintf+3
  4478  067E  0838               	movf	_ihr,w
  4479  067F  00CC               	movwf	?_sprintf+2
  4480  0680  083B               	movf	_imin+1,w
  4481  0681  00CF               	movwf	?_sprintf+5
  4482  0682  083A               	movf	_imin,w
  4483  0683  00CE               	movwf	?_sprintf+4
  4484  0684  083D               	movf	_iseg+1,w
  4485  0685  00D1               	movwf	?_sprintf+7
  4486  0686  083C               	movf	_iseg,w
  4487  0687  00D0               	movwf	?_sprintf+6
  4488  0688  0837               	movf	_idate+1,w
  4489  0689  00D3               	movwf	?_sprintf+9
  4490  068A  0836               	movf	_idate,w
  4491  068B  00D2               	movwf	?_sprintf+8
  4492  068C  0835               	movf	_imonth+1,w
  4493  068D  00D5               	movwf	?_sprintf+11
  4494  068E  0834               	movf	_imonth,w
  4495  068F  00D4               	movwf	?_sprintf+10
  4496  0690  0833               	movf	_iyear+1,w
  4497  0691  00D7               	movwf	?_sprintf+13
  4498  0692  0832               	movf	_iyear,w
  4499  0693  00D6               	movwf	?_sprintf+12
  4500  0694  30CC               	movlw	(low (_buffer1| 0))& (0+255)
  4501  0695  3180  2037  3181   	fcall	_sprintf
  4502                           
  4503                           ;main.c: 347: Lcd_Out2(2, 1, buffer1);
  4504  0698  01F3               	clrf	Lcd_Out2@x
  4505  0699  0AF3               	incf	Lcd_Out2@x,f
  4506  069A  30CC               	movlw	(low (_buffer1| 0))& (0+255)
  4507  069B  0140               	movlb	0	; select bank0
  4508  069C  00E3               	movwf	??_menu
  4509  069D  0863               	movf	??_menu,w
  4510  069E  00F4               	movwf	Lcd_Out2@buffer
  4511  069F  3002               	movlw	2
  4512  06A0  3197  2743  3181   	fcall	_Lcd_Out2
  4513  06A3  2E34               	goto	l2680
  4514  06A4                     l2682:	
  4515                           
  4516                           ;main.c: 348: }
  4517                           ;main.c: 350: Lcd_Cmd(1);
  4518  06A4  3001               	movlw	1
  4519  06A5  3188  209C  3181   	fcall	_Lcd_Cmd
  4520  06A8                     l2704:	
  4521                           ;main.c: 351: while(aux6==0){
  4522                           
  4523  06A8  0141               	movlb	1	; select bank1
  4524  06A9  0824               	movf	_aux6^(0+128),w
  4525  06AA  0425               	iorwf	(_aux6+1)^(0+128),w
  4526  06AB  1D03               	btfss	3,2
  4527  06AC  2F18               	goto	l2706
  4528                           
  4529                           ;main.c: 352: if(PORTBbits.RB0==1){
  4530  06AD  0140               	movlb	0	; select bank0
  4531  06AE  1C0D               	btfss	13,0	;volatile
  4532  06AF  2ECE               	goto	l2694
  4533                           
  4534                           ;main.c: 353: _delay((unsigned long)((100)*(32000000/4000.0)));
  4535  06B0  3005               	movlw	5
  4536  06B1  0140               	movlb	0	; select bank0
  4537  06B2  00E4               	movwf	??_menu+1
  4538  06B3  300F               	movlw	15
  4539  06B4  00E3               	movwf	??_menu
  4540  06B5  30F1               	movlw	241
  4541  06B6                     u3987:	
  4542  06B6  0B89               	decfsz	9,f
  4543  06B7  2EB6               	goto	u3987
  4544  06B8  0BE3               	decfsz	??_menu,f
  4545  06B9  2EB6               	goto	u3987
  4546  06BA  0BE4               	decfsz	??_menu+1,f
  4547  06BB  2EB6               	goto	u3987
  4548                           
  4549                           ;main.c: 354: imonth=imonth+1;
  4550  06BC  0140               	movlb	0	; select bank0
  4551  06BD  0834               	movf	_imonth,w
  4552  06BE  3E01               	addlw	1
  4553  06BF  00B4               	movwf	_imonth
  4554  06C0  3000               	movlw	0
  4555  06C1  3D35               	addwfc	_imonth+1,w
  4556  06C2  00B5               	movwf	_imonth+1
  4557                           
  4558                           ;main.c: 355: if (imonth==12){imonth=0;Lcd_Cmd(1);}
  4559  06C3  300C               	movlw	12
  4560  06C4  0634               	xorwf	_imonth,w
  4561  06C5  0435               	iorwf	_imonth+1,w
  4562  06C6  1D03               	btfss	3,2
  4563  06C7  2ECE               	goto	l2694
  4564  06C8  01B4               	clrf	_imonth
  4565  06C9  01B5               	clrf	_imonth+1
  4566  06CA  3001               	movlw	1
  4567  06CB  3188  209C  3181   	fcall	_Lcd_Cmd
  4568  06CE                     l2694:	
  4569                           
  4570                           ;main.c: 357: }
  4571                           ;main.c: 358: if(PORTBbits.RB1==1){_delay((unsigned long)((100)*(32000000/4000.0)));aux6
      +                          =1;}
  4572  06CE  0140               	movlb	0	; select bank0
  4573  06CF  1C8D               	btfss	13,1	;volatile
  4574  06D0  2EE2               	goto	l2698
  4575  06D1  3005               	movlw	5
  4576  06D2  0140               	movlb	0	; select bank0
  4577  06D3  00E4               	movwf	??_menu+1
  4578  06D4  300F               	movlw	15
  4579  06D5  00E3               	movwf	??_menu
  4580  06D6  30F1               	movlw	241
  4581  06D7                     u3997:	
  4582  06D7  0B89               	decfsz	9,f
  4583  06D8  2ED7               	goto	u3997
  4584  06D9  0BE3               	decfsz	??_menu,f
  4585  06DA  2ED7               	goto	u3997
  4586  06DB  0BE4               	decfsz	??_menu+1,f
  4587  06DC  2ED7               	goto	u3997
  4588  06DD  3001               	movlw	1
  4589  06DE  0141               	movlb	1	; select bank1
  4590  06DF  00A4               	movwf	_aux6^(0+128)
  4591  06E0  3000               	movlw	0
  4592  06E1  00A5               	movwf	(_aux6^(0+128)+1)
  4593  06E2                     l2698:	
  4594                           
  4595                           ;main.c: 359: Lcd_Out(1, 0,"   CONFIG MES");
  4596  06E2  01F3               	clrf	Lcd_Out@x
  4597  06E3  30CB               	movlw	low (STR_13| (0+32768))
  4598  06E4  00F4               	movwf	Lcd_Out@buffer
  4599  06E5  3098               	movlw	high (STR_13| (0+32768))
  4600  06E6  00F5               	movwf	Lcd_Out@buffer+1
  4601  06E7  3001               	movlw	1
  4602  06E8  3197  2778  3181   	fcall	_Lcd_Out
  4603                           
  4604                           ;main.c: 360: sprintf(buffer1,"%d:%d:%d %d/%d/%d",ihr,imin,iseg,idate,imonth,iyear);
  4605  06EB  300A               	movlw	low (STR_6| (0+32768))
  4606  06EC  0140               	movlb	0	; select bank0
  4607  06ED  00CA               	movwf	sprintf@f
  4608  06EE  3098               	movlw	high (STR_6| (0+32768))
  4609  06EF  00CB               	movwf	sprintf@f+1
  4610  06F0  0839               	movf	_ihr+1,w
  4611  06F1  00CD               	movwf	?_sprintf+3
  4612  06F2  0838               	movf	_ihr,w
  4613  06F3  00CC               	movwf	?_sprintf+2
  4614  06F4  083B               	movf	_imin+1,w
  4615  06F5  00CF               	movwf	?_sprintf+5
  4616  06F6  083A               	movf	_imin,w
  4617  06F7  00CE               	movwf	?_sprintf+4
  4618  06F8  083D               	movf	_iseg+1,w
  4619  06F9  00D1               	movwf	?_sprintf+7
  4620  06FA  083C               	movf	_iseg,w
  4621  06FB  00D0               	movwf	?_sprintf+6
  4622  06FC  0837               	movf	_idate+1,w
  4623  06FD  00D3               	movwf	?_sprintf+9
  4624  06FE  0836               	movf	_idate,w
  4625  06FF  00D2               	movwf	?_sprintf+8
  4626  0700  0835               	movf	_imonth+1,w
  4627  0701  00D5               	movwf	?_sprintf+11
  4628  0702  0834               	movf	_imonth,w
  4629  0703  00D4               	movwf	?_sprintf+10
  4630  0704  0833               	movf	_iyear+1,w
  4631  0705  00D7               	movwf	?_sprintf+13
  4632  0706  0832               	movf	_iyear,w
  4633  0707  00D6               	movwf	?_sprintf+12
  4634  0708  30CC               	movlw	(low (_buffer1| 0))& (0+255)
  4635  0709  3180  2037  3181   	fcall	_sprintf
  4636                           
  4637                           ;main.c: 361: Lcd_Out2(2, 1, buffer1);
  4638  070C  01F3               	clrf	Lcd_Out2@x
  4639  070D  0AF3               	incf	Lcd_Out2@x,f
  4640  070E  30CC               	movlw	(low (_buffer1| 0))& (0+255)
  4641  070F  0140               	movlb	0	; select bank0
  4642  0710  00E3               	movwf	??_menu
  4643  0711  0863               	movf	??_menu,w
  4644  0712  00F4               	movwf	Lcd_Out2@buffer
  4645  0713  3002               	movlw	2
  4646  0714  3197  2743  3181   	fcall	_Lcd_Out2
  4647  0717  2EA8               	goto	l2704
  4648  0718                     l2706:	
  4649                           
  4650                           ;main.c: 362: }
  4651                           ;main.c: 364: Lcd_Cmd(1);
  4652  0718  3001               	movlw	1
  4653  0719  3188  209C  3181   	fcall	_Lcd_Cmd
  4654  071C                     l2728:	
  4655                           ;main.c: 365: while(aux7==0){
  4656                           
  4657  071C  0141               	movlb	1	; select bank1
  4658  071D  0822               	movf	_aux7^(0+128),w
  4659  071E  0423               	iorwf	(_aux7+1)^(0+128),w
  4660  071F  1D03               	btfss	3,2
  4661  0720  2F8C               	goto	l2730
  4662                           
  4663                           ;main.c: 366: if(PORTBbits.RB0==1){
  4664  0721  0140               	movlb	0	; select bank0
  4665  0722  1C0D               	btfss	13,0	;volatile
  4666  0723  2F42               	goto	l2718
  4667                           
  4668                           ;main.c: 367: _delay((unsigned long)((100)*(32000000/4000.0)));
  4669  0724  3005               	movlw	5
  4670  0725  0140               	movlb	0	; select bank0
  4671  0726  00E4               	movwf	??_menu+1
  4672  0727  300F               	movlw	15
  4673  0728  00E3               	movwf	??_menu
  4674  0729  30F1               	movlw	241
  4675  072A                     u4007:	
  4676  072A  0B89               	decfsz	9,f
  4677  072B  2F2A               	goto	u4007
  4678  072C  0BE3               	decfsz	??_menu,f
  4679  072D  2F2A               	goto	u4007
  4680  072E  0BE4               	decfsz	??_menu+1,f
  4681  072F  2F2A               	goto	u4007
  4682                           
  4683                           ;main.c: 368: iyear=iyear+1;
  4684  0730  0140               	movlb	0	; select bank0
  4685  0731  0832               	movf	_iyear,w
  4686  0732  3E01               	addlw	1
  4687  0733  00B2               	movwf	_iyear
  4688  0734  3000               	movlw	0
  4689  0735  3D33               	addwfc	_iyear+1,w
  4690  0736  00B3               	movwf	_iyear+1
  4691                           
  4692                           ;main.c: 369: if (iyear==31){iyear=0;Lcd_Cmd(1);}
  4693  0737  301F               	movlw	31
  4694  0738  0632               	xorwf	_iyear,w
  4695  0739  0433               	iorwf	_iyear+1,w
  4696  073A  1D03               	btfss	3,2
  4697  073B  2F42               	goto	l2718
  4698  073C  01B2               	clrf	_iyear
  4699  073D  01B3               	clrf	_iyear+1
  4700  073E  3001               	movlw	1
  4701  073F  3188  209C  3181   	fcall	_Lcd_Cmd
  4702  0742                     l2718:	
  4703                           
  4704                           ;main.c: 371: }
  4705                           ;main.c: 372: if(PORTBbits.RB1==1){_delay((unsigned long)((100)*(32000000/4000.0)));aux7
      +                          =1;}
  4706  0742  0140               	movlb	0	; select bank0
  4707  0743  1C8D               	btfss	13,1	;volatile
  4708  0744  2F56               	goto	l2722
  4709  0745  3005               	movlw	5
  4710  0746  0140               	movlb	0	; select bank0
  4711  0747  00E4               	movwf	??_menu+1
  4712  0748  300F               	movlw	15
  4713  0749  00E3               	movwf	??_menu
  4714  074A  30F1               	movlw	241
  4715  074B                     u4017:	
  4716  074B  0B89               	decfsz	9,f
  4717  074C  2F4B               	goto	u4017
  4718  074D  0BE3               	decfsz	??_menu,f
  4719  074E  2F4B               	goto	u4017
  4720  074F  0BE4               	decfsz	??_menu+1,f
  4721  0750  2F4B               	goto	u4017
  4722  0751  3001               	movlw	1
  4723  0752  0141               	movlb	1	; select bank1
  4724  0753  00A2               	movwf	_aux7^(0+128)
  4725  0754  3000               	movlw	0
  4726  0755  00A3               	movwf	(_aux7^(0+128)+1)
  4727  0756                     l2722:	
  4728                           
  4729                           ;main.c: 373: Lcd_Out(1, 0,"  CONFIG YEAR");
  4730  0756  01F3               	clrf	Lcd_Out@x
  4731  0757  30AF               	movlw	low (STR_15| (0+32768))
  4732  0758  00F4               	movwf	Lcd_Out@buffer
  4733  0759  3098               	movlw	high (STR_15| (0+32768))
  4734  075A  00F5               	movwf	Lcd_Out@buffer+1
  4735  075B  3001               	movlw	1
  4736  075C  3197  2778  3181   	fcall	_Lcd_Out
  4737                           
  4738                           ;main.c: 374: sprintf(buffer1,"%d:%d:%d %d/%d/%d",ihr,imin,iseg,idate,imonth,iyear);
  4739  075F  300A               	movlw	low (STR_6| (0+32768))
  4740  0760  0140               	movlb	0	; select bank0
  4741  0761  00CA               	movwf	sprintf@f
  4742  0762  3098               	movlw	high (STR_6| (0+32768))
  4743  0763  00CB               	movwf	sprintf@f+1
  4744  0764  0839               	movf	_ihr+1,w
  4745  0765  00CD               	movwf	?_sprintf+3
  4746  0766  0838               	movf	_ihr,w
  4747  0767  00CC               	movwf	?_sprintf+2
  4748  0768  083B               	movf	_imin+1,w
  4749  0769  00CF               	movwf	?_sprintf+5
  4750  076A  083A               	movf	_imin,w
  4751  076B  00CE               	movwf	?_sprintf+4
  4752  076C  083D               	movf	_iseg+1,w
  4753  076D  00D1               	movwf	?_sprintf+7
  4754  076E  083C               	movf	_iseg,w
  4755  076F  00D0               	movwf	?_sprintf+6
  4756  0770  0837               	movf	_idate+1,w
  4757  0771  00D3               	movwf	?_sprintf+9
  4758  0772  0836               	movf	_idate,w
  4759  0773  00D2               	movwf	?_sprintf+8
  4760  0774  0835               	movf	_imonth+1,w
  4761  0775  00D5               	movwf	?_sprintf+11
  4762  0776  0834               	movf	_imonth,w
  4763  0777  00D4               	movwf	?_sprintf+10
  4764  0778  0833               	movf	_iyear+1,w
  4765  0779  00D7               	movwf	?_sprintf+13
  4766  077A  0832               	movf	_iyear,w
  4767  077B  00D6               	movwf	?_sprintf+12
  4768  077C  30CC               	movlw	(low (_buffer1| 0))& (0+255)
  4769  077D  3180  2037  3181   	fcall	_sprintf
  4770                           
  4771                           ;main.c: 375: Lcd_Out2(2, 1, buffer1);
  4772  0780  01F3               	clrf	Lcd_Out2@x
  4773  0781  0AF3               	incf	Lcd_Out2@x,f
  4774  0782  30CC               	movlw	(low (_buffer1| 0))& (0+255)
  4775  0783  0140               	movlb	0	; select bank0
  4776  0784  00E3               	movwf	??_menu
  4777  0785  0863               	movf	??_menu,w
  4778  0786  00F4               	movwf	Lcd_Out2@buffer
  4779  0787  3002               	movlw	2
  4780  0788  3197  2743  3181   	fcall	_Lcd_Out2
  4781  078B  2F1C               	goto	l2728
  4782  078C                     l2730:	
  4783                           
  4784                           ;main.c: 376: }
  4785                           ;main.c: 378: Lcd_Cmd(1);
  4786  078C  3001               	movlw	1
  4787  078D  3188  209C  3181   	fcall	_Lcd_Cmd
  4788                           
  4789                           ;main.c: 379: Lcd_Out(1, 0,"   EXPLOSION");
  4790  0790  01F3               	clrf	Lcd_Out@x
  4791  0791  30F3               	movlw	low (STR_33| (0+32768))
  4792  0792  00F4               	movwf	Lcd_Out@buffer
  4793  0793  3098               	movlw	high (STR_33| (0+32768))
  4794  0794  00F5               	movwf	Lcd_Out@buffer+1
  4795  0795  3001               	movlw	1
  4796  0796  3197  2778  3181   	fcall	_Lcd_Out
  4797                           
  4798                           ;main.c: 380: Lcd_Out(2, 0,"  CONFIGURADA");
  4799  0799  01F3               	clrf	Lcd_Out@x
  4800  079A  3077               	movlw	low (STR_34| (0+32768))
  4801  079B  00F4               	movwf	Lcd_Out@buffer
  4802  079C  3098               	movlw	high (STR_34| (0+32768))
  4803  079D  00F5               	movwf	Lcd_Out@buffer+1
  4804  079E  3002               	movlw	2
  4805  079F  3197  2778  3181   	fcall	_Lcd_Out
  4806                           
  4807                           ;main.c: 381: _delay((unsigned long)((500)*(32000000/4000.0)));
  4808  07A2  3015               	movlw	21
  4809  07A3  0140               	movlb	0	; select bank0
  4810  07A4  00E4               	movwf	??_menu+1
  4811  07A5  304B               	movlw	75
  4812  07A6  00E3               	movwf	??_menu
  4813  07A7  30BE               	movlw	190
  4814  07A8                     u4027:	
  4815  07A8  0B89               	decfsz	9,f
  4816  07A9  2FA8               	goto	u4027
  4817  07AA  0BE3               	decfsz	??_menu,f
  4818  07AB  2FA8               	goto	u4027
  4819  07AC  0BE4               	decfsz	??_menu+1,f
  4820  07AD  2FA8               	goto	u4027
  4821  07AE  0000               	nop
  4822                           
  4823                           ;main.c: 382: aux=1;
  4824  07AF  3001               	movlw	1
  4825  07B0  0140               	movlb	0	; select bank0
  4826  07B1  00A2               	movwf	_aux
  4827  07B2  3000               	movlw	0
  4828  07B3  00A3               	movwf	_aux+1
  4829  07B4                     L5:	
  4830                           
  4831                           ;main.c: 383: Lcd_Cmd(1);
  4832  07B4  3001               	movlw	1
  4833  07B5  3188  209C  3181   	fcall	_Lcd_Cmd
  4834  07B8  0140               	movlb	0	; select bank0
  4835  07B9  0822               	movf	_aux,w
  4836  07BA  0423               	iorwf	_aux+1,w
  4837  07BB  1903               	btfsc	3,2
  4838  07BC  2D43               	goto	l2608
  4839                           
  4840                           ;main.c: 386: }
  4841                           ;main.c: 387: aux=0;aux2=0;aux3=0;aux4=0,aux5=0,aux6=0,aux7=0;
  4842  07BD  01A2               	clrf	_aux
  4843  07BE  01A3               	clrf	_aux+1
  4844  07BF  0141               	movlb	1	; select bank1
  4845  07C0  01AC               	clrf	_aux2^(0+128)
  4846  07C1  01AD               	clrf	(_aux2+1)^(0+128)
  4847  07C2  01AA               	clrf	_aux3^(0+128)
  4848  07C3  01AB               	clrf	(_aux3+1)^(0+128)
  4849  07C4  01A8               	clrf	_aux4^(0+128)
  4850  07C5  01A9               	clrf	(_aux4+1)^(0+128)
  4851  07C6  01A6               	clrf	_aux5^(0+128)
  4852  07C7  01A7               	clrf	(_aux5+1)^(0+128)
  4853  07C8  01A4               	clrf	_aux6^(0+128)
  4854  07C9  01A5               	clrf	(_aux6+1)^(0+128)
  4855  07CA  01A2               	clrf	_aux7^(0+128)
  4856  07CB  01A3               	clrf	(_aux7+1)^(0+128)
  4857                           
  4858                           ;main.c: 389: }
  4859                           
  4860                           ;main.c: 388: break;
  4861  07CC  0008               	return
  4862  07CD                     l2746:	
  4863                           
  4864                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4865                           ; Switch size 1, requested type "space"
  4866                           ; Number of cases is 1, Range of values is 0 to 0
  4867                           ; switch strategies available:
  4868                           ; Name         Instructions Cycles
  4869                           ; simple_byte            4     3 (average)
  4870                           ; direct_byte            8     6 (fixed)
  4871                           ; jumptable            260     6 (fixed)
  4872                           ;	Chosen strategy is simple_byte
  4873  07CD  0141               	movlb	1	; select bank1
  4874  07CE  082F               	movf	(_inicio+1)^(0+128),w
  4875  07CF  3A00               	xorlw	0	; case 0
  4876  07D0  1903               	skipnz
  4877  07D1  2FD3               	goto	l3016
  4878  07D2  2FDC               	goto	l380
  4879  07D3                     l3016:	
  4880                           
  4881                           ; Switch size 1, requested type "space"
  4882                           ; Number of cases is 2, Range of values is 0 to 1
  4883                           ; switch strategies available:
  4884                           ; Name         Instructions Cycles
  4885                           ; simple_byte            7     4 (average)
  4886                           ; direct_byte           10     6 (fixed)
  4887                           ; jumptable            260     6 (fixed)
  4888                           ;	Chosen strategy is simple_byte
  4889  07D3  082E               	movf	_inicio^(0+128),w
  4890  07D4  3A00               	xorlw	0	; case 0
  4891  07D5  1903               	skipnz
  4892  07D6  295E               	goto	l299
  4893  07D7  3A01               	xorlw	1	; case 1
  4894  07D8  1903               	skipnz
  4895  07D9  2CA5               	goto	l340
  4896  07DA  2FDC               	goto	l380
  4897  07DB  0008               	return
  4898  07DC                     l380:	
  4899  07DC  0008               	return
  4900  07DD                     __end_of_menu:	
  4901                           
  4902                           	psect	text3
  4903  0037                     __ptext3:	
  4904 ;; *************** function _sprintf *****************
  4905 ;; Defined at:
  4906 ;;		line 492 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\doprnt.c"
  4907 ;; Parameters:    Size  Location     Type
  4908 ;;  sp              1    wreg     PTR unsigned char 
  4909 ;;		 -> buffer1(16), 
  4910 ;;  f               2    0[BANK0 ] PTR const unsigned char 
  4911 ;;		 -> STR_35(16), STR_32(18), STR_30(18), STR_28(18), 
  4912 ;;		 -> STR_26(18), STR_24(18), STR_22(18), STR_16(18), 
  4913 ;;		 -> STR_14(18), STR_12(18), STR_10(18), STR_8(18), 
  4914 ;;		 -> STR_6(18), 
  4915 ;; Auto vars:     Size  Location     Type
  4916 ;;  sp              1   24[BANK0 ] PTR unsigned char 
  4917 ;;		 -> buffer1(16), 
  4918 ;;  tmpval          4    0        struct .
  4919 ;;  val             2   21[BANK0 ] unsigned int 
  4920 ;;  cp              2    0        PTR const unsigned char 
  4921 ;;  len             2    0        unsigned int 
  4922 ;;  c               1   23[BANK0 ] char 
  4923 ;;  prec            1   20[BANK0 ] char 
  4924 ;;  flag            1   19[BANK0 ] unsigned char 
  4925 ;;  ap              1   18[BANK0 ] PTR void [1]
  4926 ;;		 -> ?_sprintf(2), 
  4927 ;; Return value:  Size  Location     Type
  4928 ;;                  2    0[BANK0 ] int 
  4929 ;; Registers used:
  4930 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4931 ;; Tracked objects:
  4932 ;;		On entry : 0/0
  4933 ;;		On exit  : 0/0
  4934 ;;		Unchanged: 0/0
  4935 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
  4936 ;;      Params:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  4937 ;;      Locals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  4938 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  4939 ;;      Totals:         0      25       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  4940 ;;Total ram usage:       25 bytes
  4941 ;; Hardware stack levels used:    1
  4942 ;; Hardware stack levels required when called:    1
  4943 ;; This function calls:
  4944 ;;		___lwdiv
  4945 ;;		___lwmod
  4946 ;; This function is called by:
  4947 ;;		_menu
  4948 ;;		_main
  4949 ;; This function uses a non-reentrant model
  4950 ;;
  4951                           
  4952                           
  4953                           ;psect for function _sprintf
  4954  0037                     _sprintf:	
  4955                           
  4956                           ;incstack = 0
  4957                           ; Regs used in _sprintf: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4958                           ;sprintf@sp stored from wreg
  4959  0037  0140               	movlb	0	; select bank0
  4960  0038  00E2               	movwf	sprintf@sp
  4961                           
  4962                           ;doprnt.c: 494: va_list ap;
  4963                           ;doprnt.c: 499: signed char c;
  4964                           ;doprnt.c: 506: signed char prec;
  4965                           ;doprnt.c: 508: unsigned char flag;
  4966                           ;doprnt.c: 523: union {
  4967                           ;doprnt.c: 524: unsigned long vd;
  4968                           ;doprnt.c: 525: double integ;
  4969                           ;doprnt.c: 526: } tmpval;
  4970                           ;doprnt.c: 528: unsigned int val;
  4971                           ;doprnt.c: 529: unsigned len;
  4972                           ;doprnt.c: 530: const char * cp;
  4973                           ;doprnt.c: 533: *ap = __va_start();
  4974  0039  304C               	movlw	(low ((?_sprintf| 0+2)))& (0+255)
  4975  003A  00D8               	movwf	??_sprintf
  4976  003B  0858               	movf	??_sprintf,w
  4977  003C  00DC               	movwf	sprintf@ap
  4978  003D                     l2294:	
  4979                           ;doprnt.c: 536: while(c = *f++) {
  4980                           
  4981  003D  084B               	movf	sprintf@f+1,w
  4982  003E  00D9               	movwf	??_sprintf+1
  4983  003F  084A               	movf	sprintf@f,w
  4984  0040  00D8               	movwf	??_sprintf
  4985  0041  0ACA               	incf	sprintf@f,f
  4986  0042  1903               	skipnz
  4987  0043  0ACB               	incf	sprintf@f+1,f
  4988  0044  0858               	movf	??_sprintf,w
  4989  0045  0084               	movwf	4
  4990  0046  0859               	movf	??_sprintf+1,w
  4991  0047  0085               	movwf	5
  4992  0048  0800               	movf	0,w	;code access
  4993  0049  00DA               	movwf	??_sprintf+2
  4994  004A  085A               	movf	??_sprintf+2,w
  4995  004B  00E1               	movwf	sprintf@c
  4996  004C  0861               	movf	sprintf@c,w
  4997  004D  1903               	btfsc	3,2
  4998  004E  28FF               	goto	l2296
  4999                           
  5000                           ;doprnt.c: 538: if(c != '%')
  5001  004F  3025               	movlw	37
  5002  0050  0661               	xorwf	sprintf@c,w
  5003  0051  1903               	btfsc	3,2
  5004  0052  285F               	goto	l2250
  5005                           
  5006                           ;doprnt.c: 540: {
  5007                           ;doprnt.c: 541: ((*sp++ = (c)));
  5008  0053  0861               	movf	sprintf@c,w
  5009  0054  00D8               	movwf	??_sprintf
  5010  0055  0862               	movf	sprintf@sp,w
  5011  0056  0086               	movwf	6
  5012  0057  0187               	clrf	7
  5013  0058  0858               	movf	??_sprintf,w
  5014  0059  0081               	movwf	1
  5015  005A  3001               	movlw	1
  5016  005B  00D8               	movwf	??_sprintf
  5017  005C  0858               	movf	??_sprintf,w
  5018  005D  07E2               	addwf	sprintf@sp,f
  5019                           
  5020                           ;doprnt.c: 542: continue;
  5021  005E  283D               	goto	l2294
  5022  005F                     l2250:	
  5023                           
  5024                           ;doprnt.c: 543: }
  5025                           ;doprnt.c: 548: flag = 0;
  5026  005F  01DD               	clrf	sprintf@flag
  5027                           
  5028                           ;doprnt.c: 822: }
  5029                           
  5030                           ;doprnt.c: 813: continue;
  5031                           
  5032                           ;doprnt.c: 802: default:
  5033                           
  5034                           ;doprnt.c: 698: case 'i':
  5035                           ;doprnt.c: 699: break;
  5036                           
  5037                           ;doprnt.c: 697: case 'd':
  5038                           
  5039                           ;doprnt.c: 638: goto alldone;
  5040                           
  5041                           ;doprnt.c: 637: case 0:
  5042                           
  5043                           ;doprnt.c: 635: switch(c = *f++) {
  5044  0060  084B               	movf	sprintf@f+1,w
  5045  0061  00D9               	movwf	??_sprintf+1
  5046  0062  084A               	movf	sprintf@f,w
  5047  0063  00D8               	movwf	??_sprintf
  5048  0064  0ACA               	incf	sprintf@f,f
  5049  0065  1903               	skipnz
  5050  0066  0ACB               	incf	sprintf@f+1,f
  5051  0067  0858               	movf	??_sprintf,w
  5052  0068  0084               	movwf	4
  5053  0069  0859               	movf	??_sprintf+1,w
  5054  006A  0085               	movwf	5
  5055  006B  0800               	movf	0,w	;code access
  5056  006C  00E1               	movwf	sprintf@c
  5057                           
  5058                           ; Switch size 1, requested type "space"
  5059                           ; Number of cases is 3, Range of values is 0 to 105
  5060                           ; switch strategies available:
  5061                           ; Name         Instructions Cycles
  5062                           ; simple_byte           10     6 (average)
  5063                           ; direct_byte          218     6 (fixed)
  5064                           ; jumptable            260     6 (fixed)
  5065                           ;	Chosen strategy is simple_byte
  5066  006D  3A00               	xorlw	0	; case 0
  5067  006E  1903               	skipnz
  5068  006F  28FF               	goto	l2296
  5069  0070  3A64               	xorlw	100	; case 100
  5070  0071  1903               	skipnz
  5071  0072  2877               	goto	l2256
  5072  0073  3A0D               	xorlw	13	; case 105
  5073  0074  1903               	skipnz
  5074  0075  2877               	goto	l2256
  5075  0076  283D               	goto	l2294
  5076  0077                     l2256:	
  5077                           
  5078                           ;doprnt.c: 1253: {
  5079                           ;doprnt.c: 1259: val = (int)(*(int *)__va_arg((*(int **)ap), (int)0));
  5080  0077  085C               	movf	sprintf@ap,w
  5081  0078  0086               	movwf	6
  5082  0079  0187               	clrf	7
  5083  007A  3F40               	moviw [0]fsr1
  5084  007B  00DF               	movwf	sprintf@val
  5085  007C  3F41               	moviw [1]fsr1
  5086  007D  00E0               	movwf	sprintf@val+1
  5087  007E  3002               	movlw	2
  5088  007F  00D8               	movwf	??_sprintf
  5089  0080  0858               	movf	??_sprintf,w
  5090  0081  07DC               	addwf	sprintf@ap,f
  5091                           
  5092                           ;doprnt.c: 1261: if((int)val < 0) {
  5093  0082  1FE0               	btfss	sprintf@val+1,7
  5094  0083  288D               	goto	l2266
  5095                           
  5096                           ;doprnt.c: 1262: flag |= 0x03;
  5097  0084  3003               	movlw	3
  5098  0085  00D8               	movwf	??_sprintf
  5099  0086  0858               	movf	??_sprintf,w
  5100  0087  04DD               	iorwf	sprintf@flag,f
  5101                           
  5102                           ;doprnt.c: 1263: val = -val;
  5103  0088  09DF               	comf	sprintf@val,f
  5104  0089  09E0               	comf	sprintf@val+1,f
  5105  008A  0ADF               	incf	sprintf@val,f
  5106  008B  1903               	skipnz
  5107  008C  0AE0               	incf	sprintf@val+1,f
  5108  008D                     l2266:	
  5109                           
  5110                           ;doprnt.c: 1264: }
  5111                           ;doprnt.c: 1266: }
  5112                           ;doprnt.c: 1305: for(c = 1 ; c != sizeof dpowers/sizeof dpowers[0] ; c++)
  5113  008D  01E1               	clrf	sprintf@c
  5114  008E  0AE1               	incf	sprintf@c,f
  5115  008F  3005               	movlw	5
  5116  0090  0661               	xorwf	sprintf@c,w
  5117  0091  1903               	btfsc	3,2
  5118  0092  28B2               	goto	l2278
  5119  0093                     l2272:	
  5120                           
  5121                           ;doprnt.c: 1306: if(val < dpowers[c])
  5122  0093  0861               	movf	sprintf@c,w
  5123  0094  00D8               	movwf	??_sprintf
  5124  0095  01D9               	clrf	??_sprintf+1
  5125  0096  35D8               	lslf	??_sprintf,f
  5126  0097  0DD9               	rlf	??_sprintf+1,f
  5127  0098  3000               	movlw	low (_dpowers| (0+32768))
  5128  0099  0758               	addwf	??_sprintf,w
  5129  009A  0084               	movwf	4
  5130  009B  3098               	movlw	high (_dpowers| (0+32768))
  5131  009C  3D59               	addwfc	??_sprintf+1,w
  5132  009D  0085               	movwf	5
  5133  009E  3F00               	moviw [0]fsr0
  5134  009F  00DA               	movwf	??_sprintf+2
  5135  00A0  3F01               	moviw [1]fsr0
  5136  00A1  00DB               	movwf	??_sprintf+3
  5137  00A2  085B               	movf	??_sprintf+3,w
  5138  00A3  0260               	subwf	sprintf@val+1,w
  5139  00A4  1D03               	skipz
  5140  00A5  28A8               	goto	u2555
  5141  00A6  085A               	movf	??_sprintf+2,w
  5142  00A7  025F               	subwf	sprintf@val,w
  5143  00A8                     u2555:	
  5144  00A8  1C03               	btfss	3,0
  5145  00A9  28B2               	goto	l2278
  5146                           
  5147                           ;doprnt.c: 1307: break;
  5148  00AA  3001               	movlw	1
  5149  00AB  00D8               	movwf	??_sprintf
  5150  00AC  0858               	movf	??_sprintf,w
  5151  00AD  07E1               	addwf	sprintf@c,f
  5152  00AE  3005               	movlw	5
  5153  00AF  0661               	xorwf	sprintf@c,w
  5154  00B0  1D03               	btfss	3,2
  5155  00B1  2893               	goto	l2272
  5156  00B2                     l2278:	
  5157                           
  5158                           ;doprnt.c: 1422: {
  5159                           ;doprnt.c: 1438: if(flag & 0x03)
  5160  00B2  085D               	movf	sprintf@flag,w
  5161  00B3  3903               	andlw	3
  5162  00B4  1903               	btfsc	3,2
  5163  00B5  28C1               	goto	l2284
  5164                           
  5165                           ;doprnt.c: 1439: ((*sp++ = ('-')));
  5166  00B6  302D               	movlw	45
  5167  00B7  00D8               	movwf	??_sprintf
  5168  00B8  0862               	movf	sprintf@sp,w
  5169  00B9  0086               	movwf	6
  5170  00BA  0187               	clrf	7
  5171  00BB  0858               	movf	??_sprintf,w
  5172  00BC  0081               	movwf	1
  5173  00BD  3001               	movlw	1
  5174  00BE  00D8               	movwf	??_sprintf
  5175  00BF  0858               	movf	??_sprintf,w
  5176  00C0  07E2               	addwf	sprintf@sp,f
  5177  00C1                     l2284:	
  5178                           
  5179                           ;doprnt.c: 1469: }
  5180                           ;doprnt.c: 1472: prec = c;
  5181  00C1  0861               	movf	sprintf@c,w
  5182  00C2  00D8               	movwf	??_sprintf
  5183  00C3  0858               	movf	??_sprintf,w
  5184  00C4  00DE               	movwf	sprintf@prec
  5185  00C5                     l2292:	
  5186                           ;doprnt.c: 1474: while(prec--) {
  5187                           
  5188  00C5  30FF               	movlw	255
  5189  00C6  00D8               	movwf	??_sprintf
  5190  00C7  0858               	movf	??_sprintf,w
  5191  00C8  07DE               	addwf	sprintf@prec,f
  5192  00C9  0A5E               	incf	sprintf@prec,w
  5193  00CA  1903               	btfsc	3,2
  5194  00CB  283D               	goto	l2294
  5195                           
  5196                           ;doprnt.c: 1478: {
  5197                           ;doprnt.c: 1489: c = (val / dpowers[prec]) % 10 + '0';
  5198  00CC  300A               	movlw	10
  5199  00CD  00F8               	movwf	___lwmod@divisor
  5200  00CE  3000               	movlw	0
  5201  00CF  00F9               	movwf	___lwmod@divisor+1
  5202  00D0  085E               	movf	sprintf@prec,w
  5203  00D1  00D8               	movwf	??_sprintf
  5204  00D2  01D9               	clrf	??_sprintf+1
  5205  00D3  35D8               	lslf	??_sprintf,f
  5206  00D4  0DD9               	rlf	??_sprintf+1,f
  5207  00D5  3000               	movlw	low (_dpowers| (0+32768))
  5208  00D6  0758               	addwf	??_sprintf,w
  5209  00D7  0084               	movwf	4
  5210  00D8  3098               	movlw	high (_dpowers| (0+32768))
  5211  00D9  3D59               	addwfc	??_sprintf+1,w
  5212  00DA  0085               	movwf	5
  5213  00DB  3F00               	moviw [0]fsr0
  5214  00DC  00F0               	movwf	___lwdiv@divisor
  5215  00DD  3F01               	moviw [1]fsr0
  5216  00DE  00F1               	movwf	___lwdiv@divisor+1
  5217  00DF  0860               	movf	sprintf@val+1,w
  5218  00E0  00F3               	movwf	___lwdiv@dividend+1
  5219  00E1  085F               	movf	sprintf@val,w
  5220  00E2  00F2               	movwf	___lwdiv@dividend
  5221  00E3  3197  270F  3180   	fcall	___lwdiv
  5222  00E6  0871               	movf	?___lwdiv+1,w
  5223  00E7  00FB               	movwf	___lwmod@dividend+1
  5224  00E8  0870               	movf	?___lwdiv,w
  5225  00E9  00FA               	movwf	___lwmod@dividend
  5226  00EA  3180  200B  3180   	fcall	___lwmod
  5227  00ED  0878               	movf	?___lwmod,w
  5228  00EE  3E30               	addlw	48
  5229  00EF  0140               	movlb	0	; select bank0
  5230  00F0  00DA               	movwf	??_sprintf+2
  5231  00F1  085A               	movf	??_sprintf+2,w
  5232  00F2  00E1               	movwf	sprintf@c
  5233                           
  5234                           ;doprnt.c: 1523: }
  5235                           ;doprnt.c: 1524: ((*sp++ = (c)));
  5236  00F3  0861               	movf	sprintf@c,w
  5237  00F4  00D8               	movwf	??_sprintf
  5238  00F5  0862               	movf	sprintf@sp,w
  5239  00F6  0086               	movwf	6
  5240  00F7  0187               	clrf	7
  5241  00F8  0858               	movf	??_sprintf,w
  5242  00F9  0081               	movwf	1
  5243  00FA  3001               	movlw	1
  5244  00FB  00D8               	movwf	??_sprintf
  5245  00FC  0858               	movf	??_sprintf,w
  5246  00FD  07E2               	addwf	sprintf@sp,f
  5247  00FE  28C5               	goto	l2292
  5248  00FF                     l2296:	
  5249                           ;doprnt.c: 1525: }
  5250                           ;doprnt.c: 1533: }
  5251                           ;doprnt.c: 1535: alldone:
  5252                           
  5253                           
  5254                           ;doprnt.c: 1538: *sp = 0;
  5255  00FF  0862               	movf	sprintf@sp,w
  5256  0100  0086               	movwf	6
  5257  0101  0187               	clrf	7
  5258  0102  0181               	clrf	1
  5259  0103  0008               	return
  5260  0104                     __end_of_sprintf:	
  5261                           ;doprnt.c: 1540: return 0;
  5262                           ;	Return value of _sprintf is never used
  5263                           
  5264                           
  5265                           	psect	text4
  5266  000B                     __ptext4:	
  5267 ;; *************** function ___lwmod *****************
  5268 ;; Defined at:
  5269 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\lwmod.c"
  5270 ;; Parameters:    Size  Location     Type
  5271 ;;  divisor         2    8[COMMON] unsigned int 
  5272 ;;  dividend        2   10[COMMON] unsigned int 
  5273 ;; Auto vars:     Size  Location     Type
  5274 ;;  counter         1   13[COMMON] unsigned char 
  5275 ;; Return value:  Size  Location     Type
  5276 ;;                  2    8[COMMON] unsigned int 
  5277 ;; Registers used:
  5278 ;;		wreg, status,2, status,0
  5279 ;; Tracked objects:
  5280 ;;		On entry : 0/0
  5281 ;;		On exit  : 0/0
  5282 ;;		Unchanged: 0/0
  5283 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
  5284 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  5285 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  5286 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  5287 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  5288 ;;Total ram usage:        6 bytes
  5289 ;; Hardware stack levels used:    1
  5290 ;; This function calls:
  5291 ;;		Nothing
  5292 ;; This function is called by:
  5293 ;;		_sprintf
  5294 ;; This function uses a non-reentrant model
  5295 ;;
  5296                           
  5297                           
  5298                           ;psect for function ___lwmod
  5299  000B                     ___lwmod:	
  5300                           
  5301                           ;incstack = 0
  5302                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  5303  000B  0878               	movf	___lwmod@divisor,w
  5304  000C  0479               	iorwf	___lwmod@divisor+1,w
  5305  000D  1903               	btfsc	3,2
  5306  000E  2832               	goto	l2132
  5307  000F  01FD               	clrf	___lwmod@counter
  5308  0010  0AFD               	incf	___lwmod@counter,f
  5309  0011                     l2122:	
  5310  0011  1BF9               	btfsc	___lwmod@divisor+1,7
  5311  0012  281D               	goto	l2124
  5312  0013  3001               	movlw	1
  5313  0014                     u2175:	
  5314  0014  35F8               	lslf	___lwmod@divisor,f
  5315  0015  0DF9               	rlf	___lwmod@divisor+1,f
  5316  0016  0B89               	decfsz	9,f
  5317  0017  2814               	goto	u2175
  5318  0018  3001               	movlw	1
  5319  0019  00FC               	movwf	??___lwmod
  5320  001A  087C               	movf	??___lwmod,w
  5321  001B  07FD               	addwf	___lwmod@counter,f
  5322  001C  2811               	goto	l2122
  5323  001D                     l2124:	
  5324  001D  0879               	movf	___lwmod@divisor+1,w
  5325  001E  027B               	subwf	___lwmod@dividend+1,w
  5326  001F  1D03               	skipz
  5327  0020  2823               	goto	u2195
  5328  0021  0878               	movf	___lwmod@divisor,w
  5329  0022  027A               	subwf	___lwmod@dividend,w
  5330  0023                     u2195:	
  5331  0023  1C03               	skipc
  5332  0024  2829               	goto	l2128
  5333  0025  0878               	movf	___lwmod@divisor,w
  5334  0026  02FA               	subwf	___lwmod@dividend,f
  5335  0027  0879               	movf	___lwmod@divisor+1,w
  5336  0028  3BFB               	subwfb	___lwmod@dividend+1,f
  5337  0029                     l2128:	
  5338  0029  3001               	movlw	1
  5339  002A                     u2205:	
  5340  002A  36F9               	lsrf	___lwmod@divisor+1,f
  5341  002B  0CF8               	rrf	___lwmod@divisor,f
  5342  002C  0B89               	decfsz	9,f
  5343  002D  282A               	goto	u2205
  5344  002E  3001               	movlw	1
  5345  002F  02FD               	subwf	___lwmod@counter,f
  5346  0030  1D03               	btfss	3,2
  5347  0031  281D               	goto	l2124
  5348  0032                     l2132:	
  5349  0032  087B               	movf	___lwmod@dividend+1,w
  5350  0033  00F9               	movwf	?___lwmod+1
  5351  0034  087A               	movf	___lwmod@dividend,w
  5352  0035  00F8               	movwf	?___lwmod
  5353  0036  0008               	return
  5354  0037                     __end_of___lwmod:	
  5355                           
  5356                           	psect	text5
  5357  170F                     __ptext5:	
  5358 ;; *************** function ___lwdiv *****************
  5359 ;; Defined at:
  5360 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\lwdiv.c"
  5361 ;; Parameters:    Size  Location     Type
  5362 ;;  divisor         2    0[COMMON] unsigned int 
  5363 ;;  dividend        2    2[COMMON] unsigned int 
  5364 ;; Auto vars:     Size  Location     Type
  5365 ;;  quotient        2    5[COMMON] unsigned int 
  5366 ;;  counter         1    7[COMMON] unsigned char 
  5367 ;; Return value:  Size  Location     Type
  5368 ;;                  2    0[COMMON] unsigned int 
  5369 ;; Registers used:
  5370 ;;		wreg, status,2, status,0
  5371 ;; Tracked objects:
  5372 ;;		On entry : 0/0
  5373 ;;		On exit  : 0/0
  5374 ;;		Unchanged: 0/0
  5375 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
  5376 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  5377 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  5378 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  5379 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  5380 ;;Total ram usage:        8 bytes
  5381 ;; Hardware stack levels used:    1
  5382 ;; This function calls:
  5383 ;;		Nothing
  5384 ;; This function is called by:
  5385 ;;		_sprintf
  5386 ;; This function uses a non-reentrant model
  5387 ;;
  5388                           
  5389                           
  5390                           ;psect for function ___lwdiv
  5391  170F                     ___lwdiv:	
  5392                           
  5393                           ;incstack = 0
  5394                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  5395  170F  01F5               	clrf	___lwdiv@quotient
  5396  1710  01F6               	clrf	___lwdiv@quotient+1
  5397  1711  0870               	movf	___lwdiv@divisor,w
  5398  1712  0471               	iorwf	___lwdiv@divisor+1,w
  5399  1713  1903               	btfsc	3,2
  5400  1714  2F3E               	goto	l2110
  5401  1715  01F7               	clrf	___lwdiv@counter
  5402  1716  0AF7               	incf	___lwdiv@counter,f
  5403  1717                     l2098:	
  5404  1717  1BF1               	btfsc	___lwdiv@divisor+1,7
  5405  1718  2F23               	goto	l2100
  5406  1719  3001               	movlw	1
  5407  171A                     u2105:	
  5408  171A  35F0               	lslf	___lwdiv@divisor,f
  5409  171B  0DF1               	rlf	___lwdiv@divisor+1,f
  5410  171C  0B89               	decfsz	9,f
  5411  171D  2F1A               	goto	u2105
  5412  171E  3001               	movlw	1
  5413  171F  00F4               	movwf	??___lwdiv
  5414  1720  0874               	movf	??___lwdiv,w
  5415  1721  07F7               	addwf	___lwdiv@counter,f
  5416  1722  2F17               	goto	l2098
  5417  1723                     l2100:	
  5418  1723  3001               	movlw	1
  5419  1724                     u2125:	
  5420  1724  35F5               	lslf	___lwdiv@quotient,f
  5421  1725  0DF6               	rlf	___lwdiv@quotient+1,f
  5422  1726  0B89               	decfsz	9,f
  5423  1727  2F24               	goto	u2125
  5424  1728  0871               	movf	___lwdiv@divisor+1,w
  5425  1729  0273               	subwf	___lwdiv@dividend+1,w
  5426  172A  1D03               	skipz
  5427  172B  2F2E               	goto	u2135
  5428  172C  0870               	movf	___lwdiv@divisor,w
  5429  172D  0272               	subwf	___lwdiv@dividend,w
  5430  172E                     u2135:	
  5431  172E  1C03               	skipc
  5432  172F  2F35               	goto	l2106
  5433  1730  0870               	movf	___lwdiv@divisor,w
  5434  1731  02F2               	subwf	___lwdiv@dividend,f
  5435  1732  0871               	movf	___lwdiv@divisor+1,w
  5436  1733  3BF3               	subwfb	___lwdiv@dividend+1,f
  5437  1734  1475               	bsf	___lwdiv@quotient,0
  5438  1735                     l2106:	
  5439  1735  3001               	movlw	1
  5440  1736                     u2145:	
  5441  1736  36F1               	lsrf	___lwdiv@divisor+1,f
  5442  1737  0CF0               	rrf	___lwdiv@divisor,f
  5443  1738  0B89               	decfsz	9,f
  5444  1739  2F36               	goto	u2145
  5445  173A  3001               	movlw	1
  5446  173B  02F7               	subwf	___lwdiv@counter,f
  5447  173C  1D03               	btfss	3,2
  5448  173D  2F23               	goto	l2100
  5449  173E                     l2110:	
  5450  173E  0876               	movf	___lwdiv@quotient+1,w
  5451  173F  00F1               	movwf	?___lwdiv+1
  5452  1740  0875               	movf	___lwdiv@quotient,w
  5453  1741  00F0               	movwf	?___lwdiv
  5454  1742  0008               	return
  5455  1743                     __end_of___lwdiv:	
  5456                           
  5457                           	psect	text6
  5458  0A77                     __ptext6:	
  5459 ;; *************** function _rtc *****************
  5460 ;; Defined at:
  5461 ;;		line 68 in file "main.c"
  5462 ;; Parameters:    Size  Location     Type
  5463 ;;  seg             2    2[BANK0 ] int 
  5464 ;;  min             2    4[BANK0 ] int 
  5465 ;;  hr              2    6[BANK0 ] int 
  5466 ;;  day             2    8[BANK0 ] int 
  5467 ;;  date            2   10[BANK0 ] int 
  5468 ;;  month           2   12[BANK0 ] int 
  5469 ;;  year            2   14[BANK0 ] int 
  5470 ;; Auto vars:     Size  Location     Type
  5471 ;;		None
  5472 ;; Return value:  Size  Location     Type
  5473 ;;                  1    wreg      void 
  5474 ;; Registers used:
  5475 ;;		wreg, status,2, status,0, pclath, cstack
  5476 ;; Tracked objects:
  5477 ;;		On entry : 0/0
  5478 ;;		On exit  : 0/0
  5479 ;;		Unchanged: 0/0
  5480 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
  5481 ;;      Params:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  5482 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  5483 ;;      Temps:          0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  5484 ;;      Totals:         0      20       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  5485 ;;Total ram usage:       20 bytes
  5486 ;; Hardware stack levels used:    1
  5487 ;; Hardware stack levels required when called:    1
  5488 ;; This function calls:
  5489 ;;		___awdiv
  5490 ;;		___wmul
  5491 ;; This function is called by:
  5492 ;;		_menu
  5493 ;;		_main
  5494 ;; This function uses a non-reentrant model
  5495 ;;
  5496                           
  5497                           
  5498                           ;psect for function _rtc
  5499  0A77                     _rtc:	
  5500                           
  5501                           ;main.c: 71: if(seg<10){
  5502                           
  5503                           ;incstack = 0
  5504                           ; Regs used in _rtc: [wreg+status,2+status,0+pclath+cstack]
  5505  0A77  0140               	movlb	0	; select bank0
  5506  0A78  084D               	movf	rtc@seg+1,w
  5507  0A79  3A80               	xorlw	128
  5508  0A7A  00DA               	movwf	??_rtc
  5509  0A7B  3080               	movlw	128
  5510  0A7C  025A               	subwf	??_rtc,w
  5511  0A7D  1D03               	skipz
  5512  0A7E  2A81               	goto	u2245
  5513  0A7F  300A               	movlw	10
  5514  0A80  024C               	subwf	rtc@seg,w
  5515  0A81                     u2245:	
  5516  0A81  1803               	skipnc
  5517  0A82  2A8C               	goto	l2184
  5518                           
  5519                           ;main.c: 72: cseg=0b0000000+seg;
  5520  0A83  0140               	movlb	0	; select bank0
  5521  0A84  084D               	movf	rtc@seg+1,w
  5522  0A85  0141               	movlb	1	; select bank1
  5523  0A86  00CB               	movwf	(_cseg+1)^(0+128)
  5524  0A87  0140               	movlb	0	; select bank0
  5525  0A88  084C               	movf	rtc@seg,w
  5526  0A89  0141               	movlb	1	; select bank1
  5527  0A8A  00CA               	movwf	_cseg^(0+128)
  5528                           
  5529                           ;main.c: 73: }else{
  5530  0A8B  2AD3               	goto	l2186
  5531  0A8C                     l2184:	
  5532                           
  5533                           ;main.c: 74: cseg=((seg/10)<<4)+(seg-((seg/10)*10));
  5534  0A8C  300A               	movlw	10
  5535  0A8D  00F0               	movwf	___awdiv@divisor
  5536  0A8E  3000               	movlw	0
  5537  0A8F  00F1               	movwf	___awdiv@divisor+1
  5538  0A90  0140               	movlb	0	; select bank0
  5539  0A91  084D               	movf	rtc@seg+1,w
  5540  0A92  00F3               	movwf	___awdiv@dividend+1
  5541  0A93  084C               	movf	rtc@seg,w
  5542  0A94  00F2               	movwf	___awdiv@dividend
  5543  0A95  3197  27AF  318A   	fcall	___awdiv
  5544  0A98  0871               	movf	?___awdiv+1,w
  5545  0A99  00FA               	movwf	___wmul@multiplier+1
  5546  0A9A  0870               	movf	?___awdiv,w
  5547  0A9B  00F9               	movwf	___wmul@multiplier
  5548  0A9C  300A               	movlw	10
  5549  0A9D  00FB               	movwf	___wmul@multiplicand
  5550  0A9E  3000               	movlw	0
  5551  0A9F  00FC               	movwf	___wmul@multiplicand+1
  5552  0AA0  3196  26F1  318A   	fcall	___wmul
  5553  0AA3  0979               	comf	?___wmul,w
  5554  0AA4  0140               	movlb	0	; select bank0
  5555  0AA5  00DA               	movwf	??_rtc
  5556  0AA6  097A               	comf	?___wmul+1,w
  5557  0AA7  00DB               	movwf	??_rtc+1
  5558  0AA8  0ADA               	incf	??_rtc,f
  5559  0AA9  1903               	skipnz
  5560  0AAA  0ADB               	incf	??_rtc+1,f
  5561  0AAB  300A               	movlw	10
  5562  0AAC  00F0               	movwf	___awdiv@divisor
  5563  0AAD  3000               	movlw	0
  5564  0AAE  00F1               	movwf	___awdiv@divisor+1
  5565  0AAF  084D               	movf	rtc@seg+1,w
  5566  0AB0  00F3               	movwf	___awdiv@dividend+1
  5567  0AB1  084C               	movf	rtc@seg,w
  5568  0AB2  00F2               	movwf	___awdiv@dividend
  5569  0AB3  3197  27AF  318A   	fcall	___awdiv
  5570  0AB6  0870               	movf	?___awdiv,w
  5571  0AB7  0140               	movlb	0	; select bank0
  5572  0AB8  00DC               	movwf	??_rtc+2
  5573  0AB9  0871               	movf	?___awdiv+1,w
  5574  0ABA  00DD               	movwf	??_rtc+3
  5575  0ABB  0EDC               	swapf	??_rtc+2,f
  5576  0ABC  0EDD               	swapf	??_rtc+3,f
  5577  0ABD  30F0               	movlw	240
  5578  0ABE  05DD               	andwf	??_rtc+3,f
  5579  0ABF  085C               	movf	??_rtc+2,w
  5580  0AC0  390F               	andlw	15
  5581  0AC1  04DD               	iorwf	??_rtc+3,f
  5582  0AC2  30F0               	movlw	240
  5583  0AC3  05DC               	andwf	??_rtc+2,f
  5584  0AC4  085A               	movf	??_rtc,w
  5585  0AC5  075C               	addwf	??_rtc+2,w
  5586  0AC6  00DE               	movwf	??_rtc+4
  5587  0AC7  085B               	movf	??_rtc+1,w
  5588  0AC8  3D5D               	addwfc	??_rtc+3,w
  5589  0AC9  00DF               	movwf	??_rtc+5
  5590  0ACA  084C               	movf	rtc@seg,w
  5591  0ACB  075E               	addwf	??_rtc+4,w
  5592  0ACC  0141               	movlb	1	; select bank1
  5593  0ACD  00CA               	movwf	_cseg^(0+128)
  5594  0ACE  0140               	movlb	0	; select bank0
  5595  0ACF  084D               	movf	rtc@seg+1,w
  5596  0AD0  3D5F               	addwfc	??_rtc+5,w
  5597  0AD1  0141               	movlb	1	; select bank1
  5598  0AD2  00CB               	movwf	(_cseg+1)^(0+128)
  5599  0AD3                     l2186:	
  5600                           
  5601                           ;main.c: 78: }
  5602                           ;main.c: 80: if(min<10){
  5603  0AD3  0140               	movlb	0	; select bank0
  5604  0AD4  084F               	movf	rtc@min+1,w
  5605  0AD5  3A80               	xorlw	128
  5606  0AD6  00DA               	movwf	??_rtc
  5607  0AD7  3080               	movlw	128
  5608  0AD8  025A               	subwf	??_rtc,w
  5609  0AD9  1D03               	skipz
  5610  0ADA  2ADD               	goto	u2255
  5611  0ADB  300A               	movlw	10
  5612  0ADC  024E               	subwf	rtc@min,w
  5613  0ADD                     u2255:	
  5614  0ADD  1803               	skipnc
  5615  0ADE  2AE8               	goto	l2190
  5616                           
  5617                           ;main.c: 81: cmin=min;
  5618  0ADF  0140               	movlb	0	; select bank0
  5619  0AE0  084F               	movf	rtc@min+1,w
  5620  0AE1  0141               	movlb	1	; select bank1
  5621  0AE2  00C9               	movwf	(_cmin+1)^(0+128)
  5622  0AE3  0140               	movlb	0	; select bank0
  5623  0AE4  084E               	movf	rtc@min,w
  5624  0AE5  0141               	movlb	1	; select bank1
  5625  0AE6  00C8               	movwf	_cmin^(0+128)
  5626                           
  5627                           ;main.c: 82: }else{
  5628  0AE7  2B2F               	goto	l2192
  5629  0AE8                     l2190:	
  5630                           
  5631                           ;main.c: 83: cmin=((min/10)<<4)+(min-((min/10)*10));
  5632  0AE8  300A               	movlw	10
  5633  0AE9  00F0               	movwf	___awdiv@divisor
  5634  0AEA  3000               	movlw	0
  5635  0AEB  00F1               	movwf	___awdiv@divisor+1
  5636  0AEC  0140               	movlb	0	; select bank0
  5637  0AED  084F               	movf	rtc@min+1,w
  5638  0AEE  00F3               	movwf	___awdiv@dividend+1
  5639  0AEF  084E               	movf	rtc@min,w
  5640  0AF0  00F2               	movwf	___awdiv@dividend
  5641  0AF1  3197  27AF  318A   	fcall	___awdiv
  5642  0AF4  0871               	movf	?___awdiv+1,w
  5643  0AF5  00FA               	movwf	___wmul@multiplier+1
  5644  0AF6  0870               	movf	?___awdiv,w
  5645  0AF7  00F9               	movwf	___wmul@multiplier
  5646  0AF8  300A               	movlw	10
  5647  0AF9  00FB               	movwf	___wmul@multiplicand
  5648  0AFA  3000               	movlw	0
  5649  0AFB  00FC               	movwf	___wmul@multiplicand+1
  5650  0AFC  3196  26F1  318A   	fcall	___wmul
  5651  0AFF  0979               	comf	?___wmul,w
  5652  0B00  0140               	movlb	0	; select bank0
  5653  0B01  00DA               	movwf	??_rtc
  5654  0B02  097A               	comf	?___wmul+1,w
  5655  0B03  00DB               	movwf	??_rtc+1
  5656  0B04  0ADA               	incf	??_rtc,f
  5657  0B05  1903               	skipnz
  5658  0B06  0ADB               	incf	??_rtc+1,f
  5659  0B07  300A               	movlw	10
  5660  0B08  00F0               	movwf	___awdiv@divisor
  5661  0B09  3000               	movlw	0
  5662  0B0A  00F1               	movwf	___awdiv@divisor+1
  5663  0B0B  084F               	movf	rtc@min+1,w
  5664  0B0C  00F3               	movwf	___awdiv@dividend+1
  5665  0B0D  084E               	movf	rtc@min,w
  5666  0B0E  00F2               	movwf	___awdiv@dividend
  5667  0B0F  3197  27AF  318A   	fcall	___awdiv
  5668  0B12  0870               	movf	?___awdiv,w
  5669  0B13  0140               	movlb	0	; select bank0
  5670  0B14  00DC               	movwf	??_rtc+2
  5671  0B15  0871               	movf	?___awdiv+1,w
  5672  0B16  00DD               	movwf	??_rtc+3
  5673  0B17  0EDC               	swapf	??_rtc+2,f
  5674  0B18  0EDD               	swapf	??_rtc+3,f
  5675  0B19  30F0               	movlw	240
  5676  0B1A  05DD               	andwf	??_rtc+3,f
  5677  0B1B  085C               	movf	??_rtc+2,w
  5678  0B1C  390F               	andlw	15
  5679  0B1D  04DD               	iorwf	??_rtc+3,f
  5680  0B1E  30F0               	movlw	240
  5681  0B1F  05DC               	andwf	??_rtc+2,f
  5682  0B20  085A               	movf	??_rtc,w
  5683  0B21  075C               	addwf	??_rtc+2,w
  5684  0B22  00DE               	movwf	??_rtc+4
  5685  0B23  085B               	movf	??_rtc+1,w
  5686  0B24  3D5D               	addwfc	??_rtc+3,w
  5687  0B25  00DF               	movwf	??_rtc+5
  5688  0B26  084E               	movf	rtc@min,w
  5689  0B27  075E               	addwf	??_rtc+4,w
  5690  0B28  0141               	movlb	1	; select bank1
  5691  0B29  00C8               	movwf	_cmin^(0+128)
  5692  0B2A  0140               	movlb	0	; select bank0
  5693  0B2B  084F               	movf	rtc@min+1,w
  5694  0B2C  3D5F               	addwfc	??_rtc+5,w
  5695  0B2D  0141               	movlb	1	; select bank1
  5696  0B2E  00C9               	movwf	(_cmin+1)^(0+128)
  5697  0B2F                     l2192:	
  5698                           
  5699                           ;main.c: 84: }
  5700                           ;main.c: 86: if(hr<10){
  5701  0B2F  0140               	movlb	0	; select bank0
  5702  0B30  0851               	movf	rtc@hr+1,w
  5703  0B31  3A80               	xorlw	128
  5704  0B32  00DA               	movwf	??_rtc
  5705  0B33  3080               	movlw	128
  5706  0B34  025A               	subwf	??_rtc,w
  5707  0B35  1D03               	skipz
  5708  0B36  2B39               	goto	u2265
  5709  0B37  300A               	movlw	10
  5710  0B38  0250               	subwf	rtc@hr,w
  5711  0B39                     u2265:	
  5712  0B39  1803               	skipnc
  5713  0B3A  2B44               	goto	l2196
  5714                           
  5715                           ;main.c: 87: chr=0b00000000+hr;
  5716  0B3B  0140               	movlb	0	; select bank0
  5717  0B3C  0851               	movf	rtc@hr+1,w
  5718  0B3D  0141               	movlb	1	; select bank1
  5719  0B3E  00C7               	movwf	(_chr+1)^(0+128)
  5720  0B3F  0140               	movlb	0	; select bank0
  5721  0B40  0850               	movf	rtc@hr,w
  5722  0B41  0141               	movlb	1	; select bank1
  5723  0B42  00C6               	movwf	_chr^(0+128)
  5724                           
  5725                           ;main.c: 89: }else{
  5726  0B43  2B8B               	goto	l2198
  5727  0B44                     l2196:	
  5728                           
  5729                           ;main.c: 90: chr=((hr/10)<<4)+(hr-((hr/10)*10));
  5730  0B44  300A               	movlw	10
  5731  0B45  00F0               	movwf	___awdiv@divisor
  5732  0B46  3000               	movlw	0
  5733  0B47  00F1               	movwf	___awdiv@divisor+1
  5734  0B48  0140               	movlb	0	; select bank0
  5735  0B49  0851               	movf	rtc@hr+1,w
  5736  0B4A  00F3               	movwf	___awdiv@dividend+1
  5737  0B4B  0850               	movf	rtc@hr,w
  5738  0B4C  00F2               	movwf	___awdiv@dividend
  5739  0B4D  3197  27AF  318A   	fcall	___awdiv
  5740  0B50  0871               	movf	?___awdiv+1,w
  5741  0B51  00FA               	movwf	___wmul@multiplier+1
  5742  0B52  0870               	movf	?___awdiv,w
  5743  0B53  00F9               	movwf	___wmul@multiplier
  5744  0B54  300A               	movlw	10
  5745  0B55  00FB               	movwf	___wmul@multiplicand
  5746  0B56  3000               	movlw	0
  5747  0B57  00FC               	movwf	___wmul@multiplicand+1
  5748  0B58  3196  26F1  318A   	fcall	___wmul
  5749  0B5B  0979               	comf	?___wmul,w
  5750  0B5C  0140               	movlb	0	; select bank0
  5751  0B5D  00DA               	movwf	??_rtc
  5752  0B5E  097A               	comf	?___wmul+1,w
  5753  0B5F  00DB               	movwf	??_rtc+1
  5754  0B60  0ADA               	incf	??_rtc,f
  5755  0B61  1903               	skipnz
  5756  0B62  0ADB               	incf	??_rtc+1,f
  5757  0B63  300A               	movlw	10
  5758  0B64  00F0               	movwf	___awdiv@divisor
  5759  0B65  3000               	movlw	0
  5760  0B66  00F1               	movwf	___awdiv@divisor+1
  5761  0B67  0851               	movf	rtc@hr+1,w
  5762  0B68  00F3               	movwf	___awdiv@dividend+1
  5763  0B69  0850               	movf	rtc@hr,w
  5764  0B6A  00F2               	movwf	___awdiv@dividend
  5765  0B6B  3197  27AF  318A   	fcall	___awdiv
  5766  0B6E  0870               	movf	?___awdiv,w
  5767  0B6F  0140               	movlb	0	; select bank0
  5768  0B70  00DC               	movwf	??_rtc+2
  5769  0B71  0871               	movf	?___awdiv+1,w
  5770  0B72  00DD               	movwf	??_rtc+3
  5771  0B73  0EDC               	swapf	??_rtc+2,f
  5772  0B74  0EDD               	swapf	??_rtc+3,f
  5773  0B75  30F0               	movlw	240
  5774  0B76  05DD               	andwf	??_rtc+3,f
  5775  0B77  085C               	movf	??_rtc+2,w
  5776  0B78  390F               	andlw	15
  5777  0B79  04DD               	iorwf	??_rtc+3,f
  5778  0B7A  30F0               	movlw	240
  5779  0B7B  05DC               	andwf	??_rtc+2,f
  5780  0B7C  085A               	movf	??_rtc,w
  5781  0B7D  075C               	addwf	??_rtc+2,w
  5782  0B7E  00DE               	movwf	??_rtc+4
  5783  0B7F  085B               	movf	??_rtc+1,w
  5784  0B80  3D5D               	addwfc	??_rtc+3,w
  5785  0B81  00DF               	movwf	??_rtc+5
  5786  0B82  0850               	movf	rtc@hr,w
  5787  0B83  075E               	addwf	??_rtc+4,w
  5788  0B84  0141               	movlb	1	; select bank1
  5789  0B85  00C6               	movwf	_chr^(0+128)
  5790  0B86  0140               	movlb	0	; select bank0
  5791  0B87  0851               	movf	rtc@hr+1,w
  5792  0B88  3D5F               	addwfc	??_rtc+5,w
  5793  0B89  0141               	movlb	1	; select bank1
  5794  0B8A  00C7               	movwf	(_chr+1)^(0+128)
  5795  0B8B                     l2198:	
  5796                           
  5797                           ;main.c: 91: }
  5798                           ;main.c: 93: cday=day;
  5799  0B8B  0140               	movlb	0	; select bank0
  5800  0B8C  0853               	movf	rtc@day+1,w
  5801  0B8D  0141               	movlb	1	; select bank1
  5802  0B8E  00C5               	movwf	(_cday+1)^(0+128)
  5803  0B8F  0140               	movlb	0	; select bank0
  5804  0B90  0852               	movf	rtc@day,w
  5805  0B91  0141               	movlb	1	; select bank1
  5806  0B92  00C4               	movwf	_cday^(0+128)
  5807                           
  5808                           ;main.c: 95: if(date<10){
  5809  0B93  0140               	movlb	0	; select bank0
  5810  0B94  0855               	movf	rtc@date+1,w
  5811  0B95  3A80               	xorlw	128
  5812  0B96  00DA               	movwf	??_rtc
  5813  0B97  3080               	movlw	128
  5814  0B98  025A               	subwf	??_rtc,w
  5815  0B99  1D03               	skipz
  5816  0B9A  2B9D               	goto	u2275
  5817  0B9B  300A               	movlw	10
  5818  0B9C  0254               	subwf	rtc@date,w
  5819  0B9D                     u2275:	
  5820  0B9D  1803               	skipnc
  5821  0B9E  2BA8               	goto	l2204
  5822                           
  5823                           ;main.c: 96: cdate=date;
  5824  0B9F  0140               	movlb	0	; select bank0
  5825  0BA0  0855               	movf	rtc@date+1,w
  5826  0BA1  0141               	movlb	1	; select bank1
  5827  0BA2  00C3               	movwf	(_cdate+1)^(0+128)
  5828  0BA3  0140               	movlb	0	; select bank0
  5829  0BA4  0854               	movf	rtc@date,w
  5830  0BA5  0141               	movlb	1	; select bank1
  5831  0BA6  00C2               	movwf	_cdate^(0+128)
  5832                           
  5833                           ;main.c: 97: }else{
  5834  0BA7  2BEF               	goto	l2206
  5835  0BA8                     l2204:	
  5836                           
  5837                           ;main.c: 98: cdate=((date/10)<<4)+(date-((date/10)*10));
  5838  0BA8  300A               	movlw	10
  5839  0BA9  00F0               	movwf	___awdiv@divisor
  5840  0BAA  3000               	movlw	0
  5841  0BAB  00F1               	movwf	___awdiv@divisor+1
  5842  0BAC  0140               	movlb	0	; select bank0
  5843  0BAD  0855               	movf	rtc@date+1,w
  5844  0BAE  00F3               	movwf	___awdiv@dividend+1
  5845  0BAF  0854               	movf	rtc@date,w
  5846  0BB0  00F2               	movwf	___awdiv@dividend
  5847  0BB1  3197  27AF  318A   	fcall	___awdiv
  5848  0BB4  0871               	movf	?___awdiv+1,w
  5849  0BB5  00FA               	movwf	___wmul@multiplier+1
  5850  0BB6  0870               	movf	?___awdiv,w
  5851  0BB7  00F9               	movwf	___wmul@multiplier
  5852  0BB8  300A               	movlw	10
  5853  0BB9  00FB               	movwf	___wmul@multiplicand
  5854  0BBA  3000               	movlw	0
  5855  0BBB  00FC               	movwf	___wmul@multiplicand+1
  5856  0BBC  3196  26F1  318A   	fcall	___wmul
  5857  0BBF  0979               	comf	?___wmul,w
  5858  0BC0  0140               	movlb	0	; select bank0
  5859  0BC1  00DA               	movwf	??_rtc
  5860  0BC2  097A               	comf	?___wmul+1,w
  5861  0BC3  00DB               	movwf	??_rtc+1
  5862  0BC4  0ADA               	incf	??_rtc,f
  5863  0BC5  1903               	skipnz
  5864  0BC6  0ADB               	incf	??_rtc+1,f
  5865  0BC7  300A               	movlw	10
  5866  0BC8  00F0               	movwf	___awdiv@divisor
  5867  0BC9  3000               	movlw	0
  5868  0BCA  00F1               	movwf	___awdiv@divisor+1
  5869  0BCB  0855               	movf	rtc@date+1,w
  5870  0BCC  00F3               	movwf	___awdiv@dividend+1
  5871  0BCD  0854               	movf	rtc@date,w
  5872  0BCE  00F2               	movwf	___awdiv@dividend
  5873  0BCF  3197  27AF  318A   	fcall	___awdiv
  5874  0BD2  0870               	movf	?___awdiv,w
  5875  0BD3  0140               	movlb	0	; select bank0
  5876  0BD4  00DC               	movwf	??_rtc+2
  5877  0BD5  0871               	movf	?___awdiv+1,w
  5878  0BD6  00DD               	movwf	??_rtc+3
  5879  0BD7  0EDC               	swapf	??_rtc+2,f
  5880  0BD8  0EDD               	swapf	??_rtc+3,f
  5881  0BD9  30F0               	movlw	240
  5882  0BDA  05DD               	andwf	??_rtc+3,f
  5883  0BDB  085C               	movf	??_rtc+2,w
  5884  0BDC  390F               	andlw	15
  5885  0BDD  04DD               	iorwf	??_rtc+3,f
  5886  0BDE  30F0               	movlw	240
  5887  0BDF  05DC               	andwf	??_rtc+2,f
  5888  0BE0  085A               	movf	??_rtc,w
  5889  0BE1  075C               	addwf	??_rtc+2,w
  5890  0BE2  00DE               	movwf	??_rtc+4
  5891  0BE3  085B               	movf	??_rtc+1,w
  5892  0BE4  3D5D               	addwfc	??_rtc+3,w
  5893  0BE5  00DF               	movwf	??_rtc+5
  5894  0BE6  0854               	movf	rtc@date,w
  5895  0BE7  075E               	addwf	??_rtc+4,w
  5896  0BE8  0141               	movlb	1	; select bank1
  5897  0BE9  00C2               	movwf	_cdate^(0+128)
  5898  0BEA  0140               	movlb	0	; select bank0
  5899  0BEB  0855               	movf	rtc@date+1,w
  5900  0BEC  3D5F               	addwfc	??_rtc+5,w
  5901  0BED  0141               	movlb	1	; select bank1
  5902  0BEE  00C3               	movwf	(_cdate+1)^(0+128)
  5903  0BEF                     l2206:	
  5904                           
  5905                           ;main.c: 99: }
  5906                           ;main.c: 102: if(month<10){
  5907  0BEF  0140               	movlb	0	; select bank0
  5908  0BF0  0857               	movf	rtc@month+1,w
  5909  0BF1  3A80               	xorlw	128
  5910  0BF2  00DA               	movwf	??_rtc
  5911  0BF3  3080               	movlw	128
  5912  0BF4  025A               	subwf	??_rtc,w
  5913  0BF5  1D03               	skipz
  5914  0BF6  2BF9               	goto	u2285
  5915  0BF7  300A               	movlw	10
  5916  0BF8  0256               	subwf	rtc@month,w
  5917  0BF9                     u2285:	
  5918  0BF9  1803               	skipnc
  5919  0BFA  2C04               	goto	l2210
  5920                           
  5921                           ;main.c: 103: cmonth=month;
  5922  0BFB  0140               	movlb	0	; select bank0
  5923  0BFC  0857               	movf	rtc@month+1,w
  5924  0BFD  0141               	movlb	1	; select bank1
  5925  0BFE  00C1               	movwf	(_cmonth+1)^(0+128)
  5926  0BFF  0140               	movlb	0	; select bank0
  5927  0C00  0856               	movf	rtc@month,w
  5928  0C01  0141               	movlb	1	; select bank1
  5929  0C02  00C0               	movwf	_cmonth^(0+128)
  5930                           
  5931                           ;main.c: 104: }else{
  5932  0C03  2C4B               	goto	l2212
  5933  0C04                     l2210:	
  5934                           
  5935                           ;main.c: 105: cmonth=((month/10)<<4)+(month-((month/10)*10));
  5936  0C04  300A               	movlw	10
  5937  0C05  00F0               	movwf	___awdiv@divisor
  5938  0C06  3000               	movlw	0
  5939  0C07  00F1               	movwf	___awdiv@divisor+1
  5940  0C08  0140               	movlb	0	; select bank0
  5941  0C09  0857               	movf	rtc@month+1,w
  5942  0C0A  00F3               	movwf	___awdiv@dividend+1
  5943  0C0B  0856               	movf	rtc@month,w
  5944  0C0C  00F2               	movwf	___awdiv@dividend
  5945  0C0D  3197  27AF  318A   	fcall	___awdiv
  5946  0C10  0871               	movf	?___awdiv+1,w
  5947  0C11  00FA               	movwf	___wmul@multiplier+1
  5948  0C12  0870               	movf	?___awdiv,w
  5949  0C13  00F9               	movwf	___wmul@multiplier
  5950  0C14  300A               	movlw	10
  5951  0C15  00FB               	movwf	___wmul@multiplicand
  5952  0C16  3000               	movlw	0
  5953  0C17  00FC               	movwf	___wmul@multiplicand+1
  5954  0C18  3196  26F1  318A   	fcall	___wmul
  5955  0C1B  0979               	comf	?___wmul,w
  5956  0C1C  0140               	movlb	0	; select bank0
  5957  0C1D  00DA               	movwf	??_rtc
  5958  0C1E  097A               	comf	?___wmul+1,w
  5959  0C1F  00DB               	movwf	??_rtc+1
  5960  0C20  0ADA               	incf	??_rtc,f
  5961  0C21  1903               	skipnz
  5962  0C22  0ADB               	incf	??_rtc+1,f
  5963  0C23  300A               	movlw	10
  5964  0C24  00F0               	movwf	___awdiv@divisor
  5965  0C25  3000               	movlw	0
  5966  0C26  00F1               	movwf	___awdiv@divisor+1
  5967  0C27  0857               	movf	rtc@month+1,w
  5968  0C28  00F3               	movwf	___awdiv@dividend+1
  5969  0C29  0856               	movf	rtc@month,w
  5970  0C2A  00F2               	movwf	___awdiv@dividend
  5971  0C2B  3197  27AF  318A   	fcall	___awdiv
  5972  0C2E  0870               	movf	?___awdiv,w
  5973  0C2F  0140               	movlb	0	; select bank0
  5974  0C30  00DC               	movwf	??_rtc+2
  5975  0C31  0871               	movf	?___awdiv+1,w
  5976  0C32  00DD               	movwf	??_rtc+3
  5977  0C33  0EDC               	swapf	??_rtc+2,f
  5978  0C34  0EDD               	swapf	??_rtc+3,f
  5979  0C35  30F0               	movlw	240
  5980  0C36  05DD               	andwf	??_rtc+3,f
  5981  0C37  085C               	movf	??_rtc+2,w
  5982  0C38  390F               	andlw	15
  5983  0C39  04DD               	iorwf	??_rtc+3,f
  5984  0C3A  30F0               	movlw	240
  5985  0C3B  05DC               	andwf	??_rtc+2,f
  5986  0C3C  085A               	movf	??_rtc,w
  5987  0C3D  075C               	addwf	??_rtc+2,w
  5988  0C3E  00DE               	movwf	??_rtc+4
  5989  0C3F  085B               	movf	??_rtc+1,w
  5990  0C40  3D5D               	addwfc	??_rtc+3,w
  5991  0C41  00DF               	movwf	??_rtc+5
  5992  0C42  0856               	movf	rtc@month,w
  5993  0C43  075E               	addwf	??_rtc+4,w
  5994  0C44  0141               	movlb	1	; select bank1
  5995  0C45  00C0               	movwf	_cmonth^(0+128)
  5996  0C46  0140               	movlb	0	; select bank0
  5997  0C47  0857               	movf	rtc@month+1,w
  5998  0C48  3D5F               	addwfc	??_rtc+5,w
  5999  0C49  0141               	movlb	1	; select bank1
  6000  0C4A  00C1               	movwf	(_cmonth+1)^(0+128)
  6001  0C4B                     l2212:	
  6002                           
  6003                           ;main.c: 106: }
  6004                           ;main.c: 108: if(year<10){
  6005  0C4B  0140               	movlb	0	; select bank0
  6006  0C4C  0859               	movf	rtc@year+1,w
  6007  0C4D  3A80               	xorlw	128
  6008  0C4E  00DA               	movwf	??_rtc
  6009  0C4F  3080               	movlw	128
  6010  0C50  025A               	subwf	??_rtc,w
  6011  0C51  1D03               	skipz
  6012  0C52  2C55               	goto	u2295
  6013  0C53  300A               	movlw	10
  6014  0C54  0258               	subwf	rtc@year,w
  6015  0C55                     u2295:	
  6016  0C55  1803               	skipnc
  6017  0C56  2C60               	goto	l2216
  6018                           
  6019                           ;main.c: 109: cyear=year;
  6020  0C57  0140               	movlb	0	; select bank0
  6021  0C58  0859               	movf	rtc@year+1,w
  6022  0C59  0141               	movlb	1	; select bank1
  6023  0C5A  00BF               	movwf	(_cyear+1)^(0+128)
  6024  0C5B  0140               	movlb	0	; select bank0
  6025  0C5C  0858               	movf	rtc@year,w
  6026  0C5D  0141               	movlb	1	; select bank1
  6027  0C5E  00BE               	movwf	_cyear^(0+128)
  6028                           
  6029                           ;main.c: 110: }else{
  6030  0C5F  2CA7               	goto	l2218
  6031  0C60                     l2216:	
  6032                           
  6033                           ;main.c: 111: cyear=((year/10)<<4)+(year-((year/10)*10));
  6034  0C60  300A               	movlw	10
  6035  0C61  00F0               	movwf	___awdiv@divisor
  6036  0C62  3000               	movlw	0
  6037  0C63  00F1               	movwf	___awdiv@divisor+1
  6038  0C64  0140               	movlb	0	; select bank0
  6039  0C65  0859               	movf	rtc@year+1,w
  6040  0C66  00F3               	movwf	___awdiv@dividend+1
  6041  0C67  0858               	movf	rtc@year,w
  6042  0C68  00F2               	movwf	___awdiv@dividend
  6043  0C69  3197  27AF  318A   	fcall	___awdiv
  6044  0C6C  0871               	movf	?___awdiv+1,w
  6045  0C6D  00FA               	movwf	___wmul@multiplier+1
  6046  0C6E  0870               	movf	?___awdiv,w
  6047  0C6F  00F9               	movwf	___wmul@multiplier
  6048  0C70  300A               	movlw	10
  6049  0C71  00FB               	movwf	___wmul@multiplicand
  6050  0C72  3000               	movlw	0
  6051  0C73  00FC               	movwf	___wmul@multiplicand+1
  6052  0C74  3196  26F1  318A   	fcall	___wmul
  6053  0C77  0979               	comf	?___wmul,w
  6054  0C78  0140               	movlb	0	; select bank0
  6055  0C79  00DA               	movwf	??_rtc
  6056  0C7A  097A               	comf	?___wmul+1,w
  6057  0C7B  00DB               	movwf	??_rtc+1
  6058  0C7C  0ADA               	incf	??_rtc,f
  6059  0C7D  1903               	skipnz
  6060  0C7E  0ADB               	incf	??_rtc+1,f
  6061  0C7F  300A               	movlw	10
  6062  0C80  00F0               	movwf	___awdiv@divisor
  6063  0C81  3000               	movlw	0
  6064  0C82  00F1               	movwf	___awdiv@divisor+1
  6065  0C83  0859               	movf	rtc@year+1,w
  6066  0C84  00F3               	movwf	___awdiv@dividend+1
  6067  0C85  0858               	movf	rtc@year,w
  6068  0C86  00F2               	movwf	___awdiv@dividend
  6069  0C87  3197  27AF  318A   	fcall	___awdiv
  6070  0C8A  0870               	movf	?___awdiv,w
  6071  0C8B  0140               	movlb	0	; select bank0
  6072  0C8C  00DC               	movwf	??_rtc+2
  6073  0C8D  0871               	movf	?___awdiv+1,w
  6074  0C8E  00DD               	movwf	??_rtc+3
  6075  0C8F  0EDC               	swapf	??_rtc+2,f
  6076  0C90  0EDD               	swapf	??_rtc+3,f
  6077  0C91  30F0               	movlw	240
  6078  0C92  05DD               	andwf	??_rtc+3,f
  6079  0C93  085C               	movf	??_rtc+2,w
  6080  0C94  390F               	andlw	15
  6081  0C95  04DD               	iorwf	??_rtc+3,f
  6082  0C96  30F0               	movlw	240
  6083  0C97  05DC               	andwf	??_rtc+2,f
  6084  0C98  085A               	movf	??_rtc,w
  6085  0C99  075C               	addwf	??_rtc+2,w
  6086  0C9A  00DE               	movwf	??_rtc+4
  6087  0C9B  085B               	movf	??_rtc+1,w
  6088  0C9C  3D5D               	addwfc	??_rtc+3,w
  6089  0C9D  00DF               	movwf	??_rtc+5
  6090  0C9E  0858               	movf	rtc@year,w
  6091  0C9F  075E               	addwf	??_rtc+4,w
  6092  0CA0  0141               	movlb	1	; select bank1
  6093  0CA1  00BE               	movwf	_cyear^(0+128)
  6094  0CA2  0140               	movlb	0	; select bank0
  6095  0CA3  0859               	movf	rtc@year+1,w
  6096  0CA4  3D5F               	addwfc	??_rtc+5,w
  6097  0CA5  0141               	movlb	1	; select bank1
  6098  0CA6  00BF               	movwf	(_cyear+1)^(0+128)
  6099  0CA7                     l2218:	
  6100                           
  6101                           ;main.c: 112: }
  6102                           ;main.c: 116: SSP1CON2bits.SEN=1;
  6103  0CA7  0143               	movlb	3	; select bank3
  6104  0CA8  1411               	bsf	17,0	;volatile
  6105  0CA9                     l222:	
  6106                           ;main.c: 117: while(SSP1CON2bits.SEN);
  6107                           
  6108  0CA9  1811               	btfsc	17,0	;volatile
  6109  0CAA  2CA9               	goto	l222
  6110                           
  6111                           ;main.c: 118: SSP1BUF=adressRTC;
  6112  0CAB  0140               	movlb	0	; select bank0
  6113  0CAC  086E               	movf	_adressRTC,w
  6114  0CAD  0143               	movlb	3	; select bank3
  6115  0CAE  008C               	movwf	12	;volatile
  6116  0CAF                     l225:	
  6117                           ;main.c: 119: while(SSP1STATbits.BF);
  6118                           
  6119  0CAF  180F               	btfsc	15,0	;volatile
  6120  0CB0  2CAF               	goto	l225
  6121  0CB1                     l228:	
  6122                           ;main.c: 120: while(SSP1STATbits.R_nW);
  6123                           
  6124  0CB1  190F               	btfsc	15,2	;volatile
  6125  0CB2  2CB1               	goto	l228
  6126                           
  6127                           ;main.c: 124: SSP1BUF=0x00;
  6128  0CB3  018C               	clrf	12	;volatile
  6129  0CB4                     l231:	
  6130                           ;main.c: 125: while(SSP1STATbits.BF);
  6131                           
  6132  0CB4  180F               	btfsc	15,0	;volatile
  6133  0CB5  2CB4               	goto	l231
  6134  0CB6                     l234:	
  6135                           ;main.c: 126: while(SSP1STATbits.R_nW);
  6136                           
  6137  0CB6  190F               	btfsc	15,2	;volatile
  6138  0CB7  2CB6               	goto	l234
  6139                           
  6140                           ;main.c: 127: SSP1BUF=cseg;
  6141  0CB8  0141               	movlb	1	; select bank1
  6142  0CB9  084A               	movf	_cseg^(0+128),w
  6143  0CBA  0143               	movlb	3	; select bank3
  6144  0CBB  008C               	movwf	12	;volatile
  6145  0CBC                     l237:	
  6146                           ;main.c: 128: while(SSP1STATbits.BF);
  6147                           
  6148  0CBC  180F               	btfsc	15,0	;volatile
  6149  0CBD  2CBC               	goto	l237
  6150  0CBE                     l240:	
  6151                           ;main.c: 129: while(SSP1STATbits.R_nW);
  6152                           
  6153  0CBE  190F               	btfsc	15,2	;volatile
  6154  0CBF  2CBE               	goto	l240
  6155                           
  6156                           ;main.c: 130: SSP1BUF=cmin;
  6157  0CC0  0141               	movlb	1	; select bank1
  6158  0CC1  0848               	movf	_cmin^(0+128),w
  6159  0CC2  0143               	movlb	3	; select bank3
  6160  0CC3  008C               	movwf	12	;volatile
  6161  0CC4                     l243:	
  6162                           ;main.c: 131: while(SSP1STATbits.BF);
  6163                           
  6164  0CC4  180F               	btfsc	15,0	;volatile
  6165  0CC5  2CC4               	goto	l243
  6166  0CC6                     l246:	
  6167                           ;main.c: 132: while(SSP1STATbits.R_nW);
  6168                           
  6169  0CC6  190F               	btfsc	15,2	;volatile
  6170  0CC7  2CC6               	goto	l246
  6171                           
  6172                           ;main.c: 133: SSP1BUF=chr;
  6173  0CC8  0141               	movlb	1	; select bank1
  6174  0CC9  0846               	movf	_chr^(0+128),w
  6175  0CCA  0143               	movlb	3	; select bank3
  6176  0CCB  008C               	movwf	12	;volatile
  6177  0CCC                     l249:	
  6178                           ;main.c: 134: while(SSP1STATbits.BF);
  6179                           
  6180  0CCC  180F               	btfsc	15,0	;volatile
  6181  0CCD  2CCC               	goto	l249
  6182  0CCE                     l252:	
  6183                           ;main.c: 135: while(SSP1STATbits.R_nW);
  6184                           
  6185  0CCE  190F               	btfsc	15,2	;volatile
  6186  0CCF  2CCE               	goto	l252
  6187                           
  6188                           ;main.c: 136: SSP1BUF=cday;
  6189  0CD0  0141               	movlb	1	; select bank1
  6190  0CD1  0844               	movf	_cday^(0+128),w
  6191  0CD2  0143               	movlb	3	; select bank3
  6192  0CD3  008C               	movwf	12	;volatile
  6193  0CD4                     l255:	
  6194                           ;main.c: 137: while(SSP1STATbits.BF);
  6195                           
  6196  0CD4  180F               	btfsc	15,0	;volatile
  6197  0CD5  2CD4               	goto	l255
  6198  0CD6                     l258:	
  6199                           ;main.c: 138: while(SSP1STATbits.R_nW);
  6200                           
  6201  0CD6  190F               	btfsc	15,2	;volatile
  6202  0CD7  2CD6               	goto	l258
  6203                           
  6204                           ;main.c: 139: SSP1BUF=cdate;
  6205  0CD8  0141               	movlb	1	; select bank1
  6206  0CD9  0842               	movf	_cdate^(0+128),w
  6207  0CDA  0143               	movlb	3	; select bank3
  6208  0CDB  008C               	movwf	12	;volatile
  6209  0CDC                     l261:	
  6210                           ;main.c: 140: while(SSP1STATbits.BF);
  6211                           
  6212  0CDC  180F               	btfsc	15,0	;volatile
  6213  0CDD  2CDC               	goto	l261
  6214  0CDE                     l264:	
  6215                           ;main.c: 141: while(SSP1STATbits.R_nW);
  6216                           
  6217  0CDE  190F               	btfsc	15,2	;volatile
  6218  0CDF  2CDE               	goto	l264
  6219                           
  6220                           ;main.c: 142: SSP1BUF=cmonth;
  6221  0CE0  0141               	movlb	1	; select bank1
  6222  0CE1  0840               	movf	_cmonth^(0+128),w
  6223  0CE2  0143               	movlb	3	; select bank3
  6224  0CE3  008C               	movwf	12	;volatile
  6225  0CE4                     l267:	
  6226                           ;main.c: 143: while(SSP1STATbits.BF);
  6227                           
  6228  0CE4  180F               	btfsc	15,0	;volatile
  6229  0CE5  2CE4               	goto	l267
  6230  0CE6                     l270:	
  6231                           ;main.c: 144: while(SSP1STATbits.R_nW);
  6232                           
  6233  0CE6  190F               	btfsc	15,2	;volatile
  6234  0CE7  2CE6               	goto	l270
  6235                           
  6236                           ;main.c: 145: SSP1BUF=cyear;
  6237  0CE8  0141               	movlb	1	; select bank1
  6238  0CE9  083E               	movf	_cyear^(0+128),w
  6239  0CEA  0143               	movlb	3	; select bank3
  6240  0CEB  008C               	movwf	12	;volatile
  6241  0CEC                     l273:	
  6242                           ;main.c: 146: while(SSP1STATbits.BF);
  6243                           
  6244  0CEC  180F               	btfsc	15,0	;volatile
  6245  0CED  2CEC               	goto	l273
  6246  0CEE                     l276:	
  6247                           ;main.c: 147: while(SSP1STATbits.R_nW);
  6248                           
  6249  0CEE  190F               	btfsc	15,2	;volatile
  6250  0CEF  2CEE               	goto	l276
  6251                           
  6252                           ;main.c: 148: SSP1BUF=0b00010000;
  6253  0CF0  3010               	movlw	16
  6254  0CF1  008C               	movwf	12	;volatile
  6255  0CF2                     l279:	
  6256                           ;main.c: 149: while(SSP1STATbits.BF);
  6257                           
  6258  0CF2  180F               	btfsc	15,0	;volatile
  6259  0CF3  2CF2               	goto	l279
  6260  0CF4                     l282:	
  6261                           ;main.c: 150: while(SSP1STATbits.R_nW);
  6262                           
  6263  0CF4  190F               	btfsc	15,2	;volatile
  6264  0CF5  2CF4               	goto	l282
  6265                           
  6266                           ;main.c: 151: SSP1CON2bits.PEN=1;
  6267  0CF6  1511               	bsf	17,2	;volatile
  6268  0CF7                     l285:	
  6269                           ;main.c: 152: while(SSP1CON2bits.PEN);
  6270                           
  6271  0CF7  1911               	btfsc	17,2	;volatile
  6272  0CF8  2CF7               	goto	l285
  6273                           
  6274                           ;main.c: 155: LATAbits.LATA1=1;LATAbits.LATA0=0;LATAbits.LATA2=0;
  6275  0CF9  0140               	movlb	0	; select bank0
  6276  0CFA  1496               	bsf	22,1	;volatile
  6277  0CFB  1016               	bcf	22,0	;volatile
  6278  0CFC  1116               	bcf	22,2	;volatile
  6279                           
  6280                           ;main.c: 156: _delay((unsigned long)((500)*(32000000/4000.0)));
  6281  0CFD  3015               	movlw	21
  6282  0CFE  0140               	movlb	0	; select bank0
  6283  0CFF  00DB               	movwf	??_rtc+1
  6284  0D00  304B               	movlw	75
  6285  0D01  00DA               	movwf	??_rtc
  6286  0D02  30BE               	movlw	190
  6287  0D03                     u4037:	
  6288  0D03  0B89               	decfsz	9,f
  6289  0D04  2D03               	goto	u4037
  6290  0D05  0BDA               	decfsz	??_rtc,f
  6291  0D06  2D03               	goto	u4037
  6292  0D07  0BDB               	decfsz	??_rtc+1,f
  6293  0D08  2D03               	goto	u4037
  6294  0D09  0000               	nop
  6295  0D0A  0008               	return
  6296  0D0B                     __end_of_rtc:	
  6297                           
  6298                           	psect	text7
  6299  16F1                     __ptext7:	
  6300 ;; *************** function ___wmul *****************
  6301 ;; Defined at:
  6302 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\Umul16.c"
  6303 ;; Parameters:    Size  Location     Type
  6304 ;;  multiplier      2    9[COMMON] unsigned int 
  6305 ;;  multiplicand    2   11[COMMON] unsigned int 
  6306 ;; Auto vars:     Size  Location     Type
  6307 ;;  product         2    0[BANK0 ] unsigned int 
  6308 ;; Return value:  Size  Location     Type
  6309 ;;                  2    9[COMMON] unsigned int 
  6310 ;; Registers used:
  6311 ;;		wreg, status,2, status,0
  6312 ;; Tracked objects:
  6313 ;;		On entry : 0/0
  6314 ;;		On exit  : 0/0
  6315 ;;		Unchanged: 0/0
  6316 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
  6317 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  6318 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  6319 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  6320 ;;      Totals:         4       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  6321 ;;Total ram usage:        6 bytes
  6322 ;; Hardware stack levels used:    1
  6323 ;; This function calls:
  6324 ;;		Nothing
  6325 ;; This function is called by:
  6326 ;;		_rtc
  6327 ;;		_main
  6328 ;; This function uses a non-reentrant model
  6329 ;;
  6330                           
  6331                           
  6332                           ;psect for function ___wmul
  6333  16F1                     ___wmul:	
  6334                           
  6335                           ;incstack = 0
  6336                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  6337  16F1  0140               	movlb	0	; select bank0
  6338  16F2  01CA               	clrf	___wmul@product
  6339  16F3  01CB               	clrf	___wmul@product+1
  6340  16F4                     l2032:	
  6341  16F4  1C79               	btfss	___wmul@multiplier,0
  6342  16F5  2EFB               	goto	l576
  6343  16F6  087B               	movf	___wmul@multiplicand,w
  6344  16F7  0140               	movlb	0	; select bank0
  6345  16F8  07CA               	addwf	___wmul@product,f
  6346  16F9  087C               	movf	___wmul@multiplicand+1,w
  6347  16FA  3DCB               	addwfc	___wmul@product+1,f
  6348  16FB                     l576:	
  6349  16FB  3001               	movlw	1
  6350  16FC                     u1965:	
  6351  16FC  35FB               	lslf	___wmul@multiplicand,f
  6352  16FD  0DFC               	rlf	___wmul@multiplicand+1,f
  6353  16FE  0B89               	decfsz	9,f
  6354  16FF  2EFC               	goto	u1965
  6355  1700  3001               	movlw	1
  6356  1701                     u1975:	
  6357  1701  36FA               	lsrf	___wmul@multiplier+1,f
  6358  1702  0CF9               	rrf	___wmul@multiplier,f
  6359  1703  0B89               	decfsz	9,f
  6360  1704  2F01               	goto	u1975
  6361  1705  0879               	movf	___wmul@multiplier,w
  6362  1706  047A               	iorwf	___wmul@multiplier+1,w
  6363  1707  1D03               	btfss	3,2
  6364  1708  2EF4               	goto	l2032
  6365  1709  0140               	movlb	0	; select bank0
  6366  170A  084B               	movf	___wmul@product+1,w
  6367  170B  00FA               	movwf	?___wmul+1
  6368  170C  084A               	movf	___wmul@product,w
  6369  170D  00F9               	movwf	?___wmul
  6370  170E  0008               	return
  6371  170F                     __end_of___wmul:	
  6372                           
  6373                           	psect	text8
  6374  17AF                     __ptext8:	
  6375 ;; *************** function ___awdiv *****************
  6376 ;; Defined at:
  6377 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\awdiv.c"
  6378 ;; Parameters:    Size  Location     Type
  6379 ;;  divisor         2    0[COMMON] int 
  6380 ;;  dividend        2    2[COMMON] int 
  6381 ;; Auto vars:     Size  Location     Type
  6382 ;;  quotient        2    7[COMMON] int 
  6383 ;;  sign            1    6[COMMON] unsigned char 
  6384 ;;  counter         1    5[COMMON] unsigned char 
  6385 ;; Return value:  Size  Location     Type
  6386 ;;                  2    0[COMMON] int 
  6387 ;; Registers used:
  6388 ;;		wreg, status,2, status,0
  6389 ;; Tracked objects:
  6390 ;;		On entry : 0/0
  6391 ;;		On exit  : 0/0
  6392 ;;		Unchanged: 0/0
  6393 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
  6394 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  6395 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  6396 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  6397 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  6398 ;;Total ram usage:        9 bytes
  6399 ;; Hardware stack levels used:    1
  6400 ;; This function calls:
  6401 ;;		Nothing
  6402 ;; This function is called by:
  6403 ;;		_rtc
  6404 ;; This function uses a non-reentrant model
  6405 ;;
  6406                           
  6407                           
  6408                           ;psect for function ___awdiv
  6409  17AF                     ___awdiv:	
  6410                           
  6411                           ;incstack = 0
  6412                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  6413  17AF  01F6               	clrf	___awdiv@sign
  6414  17B0  1FF1               	btfss	___awdiv@divisor+1,7
  6415  17B1  2FB9               	goto	l2052
  6416  17B2  09F0               	comf	___awdiv@divisor,f
  6417  17B3  09F1               	comf	___awdiv@divisor+1,f
  6418  17B4  0AF0               	incf	___awdiv@divisor,f
  6419  17B5  1903               	skipnz
  6420  17B6  0AF1               	incf	___awdiv@divisor+1,f
  6421  17B7  01F6               	clrf	___awdiv@sign
  6422  17B8  0AF6               	incf	___awdiv@sign,f
  6423  17B9                     l2052:	
  6424  17B9  1FF3               	btfss	___awdiv@dividend+1,7
  6425  17BA  2FC4               	goto	l2058
  6426  17BB  09F2               	comf	___awdiv@dividend,f
  6427  17BC  09F3               	comf	___awdiv@dividend+1,f
  6428  17BD  0AF2               	incf	___awdiv@dividend,f
  6429  17BE  1903               	skipnz
  6430  17BF  0AF3               	incf	___awdiv@dividend+1,f
  6431  17C0  3001               	movlw	1
  6432  17C1  00F4               	movwf	??___awdiv
  6433  17C2  0874               	movf	??___awdiv,w
  6434  17C3  06F6               	xorwf	___awdiv@sign,f
  6435  17C4                     l2058:	
  6436  17C4  01F7               	clrf	___awdiv@quotient
  6437  17C5  01F8               	clrf	___awdiv@quotient+1
  6438  17C6  0870               	movf	___awdiv@divisor,w
  6439  17C7  0471               	iorwf	___awdiv@divisor+1,w
  6440  17C8  1903               	btfsc	3,2
  6441  17C9  2FF3               	goto	l2080
  6442  17CA  01F5               	clrf	___awdiv@counter
  6443  17CB  0AF5               	incf	___awdiv@counter,f
  6444  17CC                     l2068:	
  6445  17CC  1BF1               	btfsc	___awdiv@divisor+1,7
  6446  17CD  2FD8               	goto	l2070
  6447  17CE  3001               	movlw	1
  6448  17CF                     u2025:	
  6449  17CF  35F0               	lslf	___awdiv@divisor,f
  6450  17D0  0DF1               	rlf	___awdiv@divisor+1,f
  6451  17D1  0B89               	decfsz	9,f
  6452  17D2  2FCF               	goto	u2025
  6453  17D3  3001               	movlw	1
  6454  17D4  00F4               	movwf	??___awdiv
  6455  17D5  0874               	movf	??___awdiv,w
  6456  17D6  07F5               	addwf	___awdiv@counter,f
  6457  17D7  2FCC               	goto	l2068
  6458  17D8                     l2070:	
  6459  17D8  3001               	movlw	1
  6460  17D9                     u2045:	
  6461  17D9  35F7               	lslf	___awdiv@quotient,f
  6462  17DA  0DF8               	rlf	___awdiv@quotient+1,f
  6463  17DB  0B89               	decfsz	9,f
  6464  17DC  2FD9               	goto	u2045
  6465  17DD  0871               	movf	___awdiv@divisor+1,w
  6466  17DE  0273               	subwf	___awdiv@dividend+1,w
  6467  17DF  1D03               	skipz
  6468  17E0  2FE3               	goto	u2055
  6469  17E1  0870               	movf	___awdiv@divisor,w
  6470  17E2  0272               	subwf	___awdiv@dividend,w
  6471  17E3                     u2055:	
  6472  17E3  1C03               	skipc
  6473  17E4  2FEA               	goto	l2076
  6474  17E5  0870               	movf	___awdiv@divisor,w
  6475  17E6  02F2               	subwf	___awdiv@dividend,f
  6476  17E7  0871               	movf	___awdiv@divisor+1,w
  6477  17E8  3BF3               	subwfb	___awdiv@dividend+1,f
  6478  17E9  1477               	bsf	___awdiv@quotient,0
  6479  17EA                     l2076:	
  6480  17EA  3001               	movlw	1
  6481  17EB                     u2065:	
  6482  17EB  36F1               	lsrf	___awdiv@divisor+1,f
  6483  17EC  0CF0               	rrf	___awdiv@divisor,f
  6484  17ED  0B89               	decfsz	9,f
  6485  17EE  2FEB               	goto	u2065
  6486  17EF  3001               	movlw	1
  6487  17F0  02F5               	subwf	___awdiv@counter,f
  6488  17F1  1D03               	btfss	3,2
  6489  17F2  2FD8               	goto	l2070
  6490  17F3                     l2080:	
  6491  17F3  0876               	movf	___awdiv@sign,w
  6492  17F4  1903               	btfsc	3,2
  6493  17F5  2FFB               	goto	l2084
  6494  17F6  09F7               	comf	___awdiv@quotient,f
  6495  17F7  09F8               	comf	___awdiv@quotient+1,f
  6496  17F8  0AF7               	incf	___awdiv@quotient,f
  6497  17F9  1903               	skipnz
  6498  17FA  0AF8               	incf	___awdiv@quotient+1,f
  6499  17FB                     l2084:	
  6500  17FB  0878               	movf	___awdiv@quotient+1,w
  6501  17FC  00F1               	movwf	?___awdiv+1
  6502  17FD  0877               	movf	___awdiv@quotient,w
  6503  17FE  00F0               	movwf	?___awdiv
  6504  17FF  0008               	return
  6505  1800                     __end_of___awdiv:	
  6506                           
  6507                           	psect	text9
  6508  1743                     __ptext9:	
  6509 ;; *************** function _Lcd_Out2 *****************
  6510 ;; Defined at:
  6511 ;;		line 115 in file "flex_lcd.h"
  6512 ;; Parameters:    Size  Location     Type
  6513 ;;  y               1    wreg     unsigned char 
  6514 ;;  x               1    3[COMMON] unsigned char 
  6515 ;;  buffer          1    4[COMMON] PTR unsigned char 
  6516 ;;		 -> buffer1(16), 
  6517 ;; Auto vars:     Size  Location     Type
  6518 ;;  y               1    6[COMMON] unsigned char 
  6519 ;;  data            1    7[COMMON] unsigned char 
  6520 ;; Return value:  Size  Location     Type
  6521 ;;                  1    wreg      void 
  6522 ;; Registers used:
  6523 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6524 ;; Tracked objects:
  6525 ;;		On entry : 0/0
  6526 ;;		On exit  : 0/0
  6527 ;;		Unchanged: 0/0
  6528 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
  6529 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  6530 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  6531 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  6532 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  6533 ;;Total ram usage:        5 bytes
  6534 ;; Hardware stack levels used:    1
  6535 ;; Hardware stack levels required when called:    1
  6536 ;; This function calls:
  6537 ;;		_Lcd_Chr_CP
  6538 ;;		_Lcd_Cmd
  6539 ;; This function is called by:
  6540 ;;		_menu
  6541 ;;		_main
  6542 ;; This function uses a non-reentrant model
  6543 ;;
  6544                           
  6545                           
  6546                           ;psect for function _Lcd_Out2
  6547  1743                     _Lcd_Out2:	
  6548                           
  6549                           ;incstack = 0
  6550                           ; Regs used in _Lcd_Out2: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  6551                           ;Lcd_Out2@y stored from wreg
  6552  1743  00F6               	movwf	Lcd_Out2@y
  6553                           
  6554                           ;flex_lcd.h: 117: unsigned char data;
  6555                           ;flex_lcd.h: 118: switch (y)
  6556  1744  2F54               	goto	l2170
  6557  1745                     l2160:	
  6558                           ;flex_lcd.h: 119: {
  6559                           ;flex_lcd.h: 120: case 1: data = 128 + x; break;
  6560                           
  6561  1745  0873               	movf	Lcd_Out2@x,w
  6562  1746  3E80               	addlw	128
  6563  1747  2F50               	goto	L8
  6564  1748                     l2162:	
  6565                           ;flex_lcd.h: 121: case 2: data = 192 + x; break;
  6566                           
  6567  1748  0873               	movf	Lcd_Out2@x,w
  6568  1749  3EC0               	addlw	192
  6569  174A  2F50               	goto	L8
  6570  174B                     l2164:	
  6571                           ;flex_lcd.h: 122: case 3: data = 148 + x; break;
  6572                           
  6573  174B  0873               	movf	Lcd_Out2@x,w
  6574  174C  3E94               	addlw	148
  6575  174D  2F50               	goto	L8
  6576  174E                     l2166:	
  6577                           ;flex_lcd.h: 123: case 4: data = 212 + x; break;
  6578                           
  6579  174E  0873               	movf	Lcd_Out2@x,w
  6580  174F  3ED4               	addlw	212
  6581  1750                     L8:	
  6582  1750  00F5               	movwf	??_Lcd_Out2
  6583  1751  0875               	movf	??_Lcd_Out2,w
  6584  1752  00F7               	movwf	Lcd_Out2@data
  6585                           
  6586                           ;flex_lcd.h: 125: }
  6587                           
  6588                           ;flex_lcd.h: 124: default: break;
  6589  1753  2F62               	goto	l2172
  6590  1754                     l2170:	
  6591  1754  0876               	movf	Lcd_Out2@y,w
  6592                           
  6593                           ; Switch size 1, requested type "space"
  6594                           ; Number of cases is 4, Range of values is 1 to 4
  6595                           ; switch strategies available:
  6596                           ; Name         Instructions Cycles
  6597                           ; simple_byte           13     7 (average)
  6598                           ; direct_byte           17     9 (fixed)
  6599                           ; jumptable            263     9 (fixed)
  6600                           ;	Chosen strategy is simple_byte
  6601  1755  3A01               	xorlw	1	; case 1
  6602  1756  1903               	skipnz
  6603  1757  2F45               	goto	l2160
  6604  1758  3A03               	xorlw	3	; case 2
  6605  1759  1903               	skipnz
  6606  175A  2F48               	goto	l2162
  6607  175B  3A01               	xorlw	1	; case 3
  6608  175C  1903               	skipnz
  6609  175D  2F4B               	goto	l2164
  6610  175E  3A07               	xorlw	7	; case 4
  6611  175F  1903               	skipnz
  6612  1760  2F4E               	goto	l2166
  6613  1761  2F62               	goto	l2172
  6614  1762                     l2172:	
  6615                           
  6616                           ;flex_lcd.h: 126: Lcd_Cmd(data);
  6617  1762  0877               	movf	Lcd_Out2@data,w
  6618  1763  3188  209C  3197   	fcall	_Lcd_Cmd
  6619  1766                     l2178:	
  6620                           ;flex_lcd.h: 127: while(*buffer)
  6621                           
  6622  1766  0874               	movf	Lcd_Out2@buffer,w
  6623  1767  0086               	movwf	6
  6624  1768  0187               	clrf	7
  6625  1769  0801               	movf	1,w
  6626  176A  1903               	btfsc	3,2
  6627  176B  0008               	return
  6628                           
  6629                           ;flex_lcd.h: 128: {
  6630                           ;flex_lcd.h: 129: Lcd_Chr_CP(*buffer);
  6631  176C  0874               	movf	Lcd_Out2@buffer,w
  6632  176D  0086               	movwf	6
  6633  176E  0187               	clrf	7
  6634  176F  0801               	movf	1,w
  6635  1770  3189  2133  3197   	fcall	_Lcd_Chr_CP
  6636                           
  6637                           ;flex_lcd.h: 130: buffer++;
  6638  1773  3001               	movlw	1
  6639  1774  00F5               	movwf	??_Lcd_Out2
  6640  1775  0875               	movf	??_Lcd_Out2,w
  6641  1776  07F4               	addwf	Lcd_Out2@buffer,f
  6642  1777  2F66               	goto	l2178
  6643  1778                     __end_of_Lcd_Out2:	
  6644                           ;flex_lcd.h: 131: }
  6645                           ;flex_lcd.h: 132: return;
  6646                           
  6647                           
  6648                           	psect	text10
  6649  1778                     __ptext10:	
  6650 ;; *************** function _Lcd_Out *****************
  6651 ;; Defined at:
  6652 ;;		line 94 in file "flex_lcd.h"
  6653 ;; Parameters:    Size  Location     Type
  6654 ;;  y               1    wreg     unsigned char 
  6655 ;;  x               1    3[COMMON] unsigned char 
  6656 ;;  buffer          2    4[COMMON] PTR const unsigned char 
  6657 ;;		 -> STR_37(13), STR_36(14), STR_34(14), STR_33(13), 
  6658 ;;		 -> STR_31(14), STR_29(14), STR_27(15), STR_25(13), 
  6659 ;;		 -> STR_23(14), STR_21(14), STR_20(15), STR_19(15), 
  6660 ;;		 -> STR_18(14), STR_17(11), STR_15(14), STR_13(14), 
  6661 ;;		 -> STR_11(15), STR_9(13), STR_7(14), STR_5(14), 
  6662 ;;		 -> STR_4(13), STR_3(15), STR_2(16), STR_1(14), 
  6663 ;; Auto vars:     Size  Location     Type
  6664 ;;  y               1    7[COMMON] unsigned char 
  6665 ;;  data            1    8[COMMON] unsigned char 
  6666 ;; Return value:  Size  Location     Type
  6667 ;;                  1    wreg      void 
  6668 ;; Registers used:
  6669 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  6670 ;; Tracked objects:
  6671 ;;		On entry : 0/0
  6672 ;;		On exit  : 0/0
  6673 ;;		Unchanged: 0/0
  6674 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
  6675 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  6676 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  6677 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  6678 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  6679 ;;Total ram usage:        6 bytes
  6680 ;; Hardware stack levels used:    1
  6681 ;; Hardware stack levels required when called:    1
  6682 ;; This function calls:
  6683 ;;		_Lcd_Chr_CP
  6684 ;;		_Lcd_Cmd
  6685 ;; This function is called by:
  6686 ;;		_menu
  6687 ;;		_main
  6688 ;; This function uses a non-reentrant model
  6689 ;;
  6690                           
  6691                           
  6692                           ;psect for function _Lcd_Out
  6693  1778                     _Lcd_Out:	
  6694                           
  6695                           ;incstack = 0
  6696                           ; Regs used in _Lcd_Out: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  6697                           ;Lcd_Out@y stored from wreg
  6698  1778  00F7               	movwf	Lcd_Out@y
  6699                           
  6700                           ;flex_lcd.h: 96: unsigned char data;
  6701                           ;flex_lcd.h: 97: switch (y)
  6702  1779  2F89               	goto	l2148
  6703  177A                     l2138:	
  6704                           ;flex_lcd.h: 98: {
  6705                           ;flex_lcd.h: 99: case 1: data = 128 + x; break;
  6706                           
  6707  177A  0873               	movf	Lcd_Out@x,w
  6708  177B  3E80               	addlw	128
  6709  177C  2F85               	goto	L11
  6710  177D                     l2140:	
  6711                           ;flex_lcd.h: 100: case 2: data = 192 + x; break;
  6712                           
  6713  177D  0873               	movf	Lcd_Out@x,w
  6714  177E  3EC0               	addlw	192
  6715  177F  2F85               	goto	L11
  6716  1780                     l2142:	
  6717                           ;flex_lcd.h: 101: case 3: data = 148 + x; break;
  6718                           
  6719  1780  0873               	movf	Lcd_Out@x,w
  6720  1781  3E94               	addlw	148
  6721  1782  2F85               	goto	L11
  6722  1783                     l2144:	
  6723                           ;flex_lcd.h: 102: case 4: data = 212 + x; break;
  6724                           
  6725  1783  0873               	movf	Lcd_Out@x,w
  6726  1784  3ED4               	addlw	212
  6727  1785                     L11:	
  6728  1785  00F6               	movwf	??_Lcd_Out
  6729  1786  0876               	movf	??_Lcd_Out,w
  6730  1787  00F8               	movwf	Lcd_Out@data
  6731                           
  6732                           ;flex_lcd.h: 104: }
  6733                           
  6734                           ;flex_lcd.h: 103: default: break;
  6735  1788  2F97               	goto	l2150
  6736  1789                     l2148:	
  6737  1789  0877               	movf	Lcd_Out@y,w
  6738                           
  6739                           ; Switch size 1, requested type "space"
  6740                           ; Number of cases is 4, Range of values is 1 to 4
  6741                           ; switch strategies available:
  6742                           ; Name         Instructions Cycles
  6743                           ; simple_byte           13     7 (average)
  6744                           ; direct_byte           17     9 (fixed)
  6745                           ; jumptable            263     9 (fixed)
  6746                           ;	Chosen strategy is simple_byte
  6747  178A  3A01               	xorlw	1	; case 1
  6748  178B  1903               	skipnz
  6749  178C  2F7A               	goto	l2138
  6750  178D  3A03               	xorlw	3	; case 2
  6751  178E  1903               	skipnz
  6752  178F  2F7D               	goto	l2140
  6753  1790  3A01               	xorlw	1	; case 3
  6754  1791  1903               	skipnz
  6755  1792  2F80               	goto	l2142
  6756  1793  3A07               	xorlw	7	; case 4
  6757  1794  1903               	skipnz
  6758  1795  2F83               	goto	l2144
  6759  1796  2F97               	goto	l2150
  6760  1797                     l2150:	
  6761                           
  6762                           ;flex_lcd.h: 105: Lcd_Cmd(data);
  6763  1797  0878               	movf	Lcd_Out@data,w
  6764  1798  3188  209C  3197   	fcall	_Lcd_Cmd
  6765  179B                     l2156:	
  6766                           ;flex_lcd.h: 106: while(*buffer)
  6767                           
  6768  179B  0874               	movf	Lcd_Out@buffer,w
  6769  179C  0084               	movwf	4
  6770  179D  0875               	movf	Lcd_Out@buffer+1,w
  6771  179E  0085               	movwf	5
  6772  179F  0012               	moviw fsr0++
  6773  17A0  1903               	btfsc	3,2
  6774  17A1  0008               	return
  6775                           
  6776                           ;flex_lcd.h: 107: {
  6777                           ;flex_lcd.h: 108: Lcd_Chr_CP(*buffer);
  6778  17A2  0874               	movf	Lcd_Out@buffer,w
  6779  17A3  0084               	movwf	4
  6780  17A4  0875               	movf	Lcd_Out@buffer+1,w
  6781  17A5  0085               	movwf	5
  6782  17A6  0800               	movf	0,w	;code access
  6783  17A7  3189  2133  3197   	fcall	_Lcd_Chr_CP
  6784                           
  6785                           ;flex_lcd.h: 109: buffer++;
  6786  17AA  3001               	movlw	1
  6787  17AB  07F4               	addwf	Lcd_Out@buffer,f
  6788  17AC  3000               	movlw	0
  6789  17AD  3DF5               	addwfc	Lcd_Out@buffer+1,f
  6790  17AE  2F9B               	goto	l2156
  6791  17AF                     __end_of_Lcd_Out:	
  6792                           ;flex_lcd.h: 110: }
  6793                           ;flex_lcd.h: 111: return;
  6794                           
  6795                           
  6796                           	psect	text11
  6797  0933                     __ptext11:	
  6798 ;; *************** function _Lcd_Chr_CP *****************
  6799 ;; Defined at:
  6800 ;;		line 136 in file "flex_lcd.h"
  6801 ;; Parameters:    Size  Location     Type
  6802 ;;  data            1    wreg     unsigned char 
  6803 ;; Auto vars:     Size  Location     Type
  6804 ;;  data            1    2[COMMON] unsigned char 
  6805 ;; Return value:  Size  Location     Type
  6806 ;;                  1    wreg      void 
  6807 ;; Registers used:
  6808 ;;		wreg, status,2, status,0
  6809 ;; Tracked objects:
  6810 ;;		On entry : 0/0
  6811 ;;		On exit  : 0/0
  6812 ;;		Unchanged: 0/0
  6813 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
  6814 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  6815 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  6816 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  6817 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  6818 ;;Total ram usage:        3 bytes
  6819 ;; Hardware stack levels used:    1
  6820 ;; This function calls:
  6821 ;;		Nothing
  6822 ;; This function is called by:
  6823 ;;		_Lcd_Out
  6824 ;;		_Lcd_Out2
  6825 ;; This function uses a non-reentrant model
  6826 ;;
  6827                           
  6828                           
  6829                           ;psect for function _Lcd_Chr_CP
  6830  0933                     _Lcd_Chr_CP:	
  6831                           
  6832                           ;incstack = 0
  6833                           ; Regs used in _Lcd_Chr_CP: [wreg+status,2+status,0]
  6834                           ;Lcd_Chr_CP@data stored from wreg
  6835  0933  00F2               	movwf	Lcd_Chr_CP@data
  6836                           
  6837                           ;flex_lcd.h: 137: PORTDbits.RD3 = 0; PORTDbits.RD2 = 1;
  6838  0934  0140               	movlb	0	; select bank0
  6839  0935  118F               	bcf	15,3	;volatile
  6840  0936  150F               	bsf	15,2	;volatile
  6841                           
  6842                           ;flex_lcd.h: 138: PORTCbits.RC1 = (data & 0b10000000)>>7; PORTCbits.RC2 = (data & 0b0100
      +                          0000)>>6;
  6843  0937  0872               	movf	Lcd_Chr_CP@data,w
  6844  0938  00F0               	movwf	??_Lcd_Chr_CP
  6845  0939  3007               	movlw	7
  6846  093A                     u1885:	
  6847  093A  36F0               	lsrf	??_Lcd_Chr_CP,f
  6848  093B  0B89               	decfsz	9,f
  6849  093C  293A               	goto	u1885
  6850  093D  0870               	movf	??_Lcd_Chr_CP,w
  6851  093E  3901               	andlw	1
  6852  093F  00F1               	movwf	??_Lcd_Chr_CP+1
  6853  0940  0DF1               	rlf	??_Lcd_Chr_CP+1,f
  6854  0941  080E               	movf	14,w	;volatile
  6855  0942  0671               	xorwf	??_Lcd_Chr_CP+1,w
  6856  0943  39FD               	andlw	-3
  6857  0944  0671               	xorwf	??_Lcd_Chr_CP+1,w
  6858  0945  008E               	movwf	14	;volatile
  6859  0946  0872               	movf	Lcd_Chr_CP@data,w
  6860  0947  00F0               	movwf	??_Lcd_Chr_CP
  6861  0948  3006               	movlw	6
  6862  0949                     u1895:	
  6863  0949  36F0               	lsrf	??_Lcd_Chr_CP,f
  6864  094A  0B89               	decfsz	9,f
  6865  094B  2949               	goto	u1895
  6866  094C  0870               	movf	??_Lcd_Chr_CP,w
  6867  094D  3901               	andlw	1
  6868  094E  00F1               	movwf	??_Lcd_Chr_CP+1
  6869  094F  0DF1               	rlf	??_Lcd_Chr_CP+1,f
  6870  0950  0DF1               	rlf	??_Lcd_Chr_CP+1,f
  6871  0951  080E               	movf	14,w	;volatile
  6872  0952  0671               	xorwf	??_Lcd_Chr_CP+1,w
  6873  0953  39FB               	andlw	-5
  6874  0954  0671               	xorwf	??_Lcd_Chr_CP+1,w
  6875  0955  008E               	movwf	14	;volatile
  6876                           
  6877                           ;flex_lcd.h: 139: PORTDbits.RD0 = (data & 0b00100000)>>5; PORTDbits.RD1 = (data & 0b0001
      +                          0000)>>4;
  6878  0956  0872               	movf	Lcd_Chr_CP@data,w
  6879  0957  00F0               	movwf	??_Lcd_Chr_CP
  6880  0958  3005               	movlw	5
  6881  0959                     u1905:	
  6882  0959  36F0               	lsrf	??_Lcd_Chr_CP,f
  6883  095A  0B89               	decfsz	9,f
  6884  095B  2959               	goto	u1905
  6885  095C  3001               	movlw	1
  6886  095D  0570               	andwf	??_Lcd_Chr_CP,w
  6887  095E  00F1               	movwf	??_Lcd_Chr_CP+1
  6888  095F  080F               	movf	15,w	;volatile
  6889  0960  0671               	xorwf	??_Lcd_Chr_CP+1,w
  6890  0961  39FE               	andlw	-2
  6891  0962  0671               	xorwf	??_Lcd_Chr_CP+1,w
  6892  0963  008F               	movwf	15	;volatile
  6893  0964  0872               	movf	Lcd_Chr_CP@data,w
  6894  0965  00F0               	movwf	??_Lcd_Chr_CP
  6895  0966  3004               	movlw	4
  6896  0967                     u1915:	
  6897  0967  36F0               	lsrf	??_Lcd_Chr_CP,f
  6898  0968  0B89               	decfsz	9,f
  6899  0969  2967               	goto	u1915
  6900  096A  0870               	movf	??_Lcd_Chr_CP,w
  6901  096B  3901               	andlw	1
  6902  096C  00F1               	movwf	??_Lcd_Chr_CP+1
  6903  096D  0DF1               	rlf	??_Lcd_Chr_CP+1,f
  6904  096E  080F               	movf	15,w	;volatile
  6905  096F  0671               	xorwf	??_Lcd_Chr_CP+1,w
  6906  0970  39FD               	andlw	-3
  6907  0971  0671               	xorwf	??_Lcd_Chr_CP+1,w
  6908  0972  008F               	movwf	15	;volatile
  6909                           
  6910                           ;flex_lcd.h: 140: _delay(10);
  6911  0973  3003               	movlw	3
  6912  0974                     u4047:	
  6913  0974  0B89               	decfsz	9,f
  6914  0975  2974               	goto	u4047
  6915  0976  0000               	nop
  6916                           
  6917                           ;flex_lcd.h: 141: PORTDbits.RD3 = 1; _delay((unsigned long)((5)*(32000000/4000000.0))); 
      +                          PORTDbits.RD3 = 0;
  6918  0977  0140               	movlb	0	; select bank0
  6919  0978  158F               	bsf	15,3	;volatile
  6920  0979  300D               	movlw	13
  6921  097A                     u4057:	
  6922  097A  0B89               	decfsz	9,f
  6923  097B  297A               	goto	u4057
  6924  097C  0000               	nop
  6925  097D  0140               	movlb	0	; select bank0
  6926  097E  118F               	bcf	15,3	;volatile
  6927                           
  6928                           ;flex_lcd.h: 142: PORTCbits.RC1 = (data & 0b00001000)>>3; PORTCbits.RC2 = (data & 0b0000
      +                          0100)>>2;
  6929  097F  0872               	movf	Lcd_Chr_CP@data,w
  6930  0980  00F0               	movwf	??_Lcd_Chr_CP
  6931  0981  3003               	movlw	3
  6932  0982                     u1925:	
  6933  0982  36F0               	lsrf	??_Lcd_Chr_CP,f
  6934  0983  0B89               	decfsz	9,f
  6935  0984  2982               	goto	u1925
  6936  0985  0870               	movf	??_Lcd_Chr_CP,w
  6937  0986  3901               	andlw	1
  6938  0987  00F1               	movwf	??_Lcd_Chr_CP+1
  6939  0988  0DF1               	rlf	??_Lcd_Chr_CP+1,f
  6940  0989  080E               	movf	14,w	;volatile
  6941  098A  0671               	xorwf	??_Lcd_Chr_CP+1,w
  6942  098B  39FD               	andlw	-3
  6943  098C  0671               	xorwf	??_Lcd_Chr_CP+1,w
  6944  098D  008E               	movwf	14	;volatile
  6945  098E  0872               	movf	Lcd_Chr_CP@data,w
  6946  098F  00F0               	movwf	??_Lcd_Chr_CP
  6947  0990  3002               	movlw	2
  6948  0991                     u1935:	
  6949  0991  36F0               	lsrf	??_Lcd_Chr_CP,f
  6950  0992  0B89               	decfsz	9,f
  6951  0993  2991               	goto	u1935
  6952  0994  0870               	movf	??_Lcd_Chr_CP,w
  6953  0995  3901               	andlw	1
  6954  0996  00F1               	movwf	??_Lcd_Chr_CP+1
  6955  0997  0DF1               	rlf	??_Lcd_Chr_CP+1,f
  6956  0998  0DF1               	rlf	??_Lcd_Chr_CP+1,f
  6957  0999  080E               	movf	14,w	;volatile
  6958  099A  0671               	xorwf	??_Lcd_Chr_CP+1,w
  6959  099B  39FB               	andlw	-5
  6960  099C  0671               	xorwf	??_Lcd_Chr_CP+1,w
  6961  099D  008E               	movwf	14	;volatile
  6962                           
  6963                           ;flex_lcd.h: 143: PORTDbits.RD0 = (data & 0b00000010)>>1; PORTDbits.RD1 = (data & 0b0000
      +                          0001);
  6964  099E  0872               	movf	Lcd_Chr_CP@data,w
  6965  099F  00F0               	movwf	??_Lcd_Chr_CP
  6966  09A0  3001               	movlw	1
  6967  09A1                     u1945:	
  6968  09A1  36F0               	lsrf	??_Lcd_Chr_CP,f
  6969  09A2  0B89               	decfsz	9,f
  6970  09A3  29A1               	goto	u1945
  6971  09A4  3001               	movlw	1
  6972  09A5  0570               	andwf	??_Lcd_Chr_CP,w
  6973  09A6  00F1               	movwf	??_Lcd_Chr_CP+1
  6974  09A7  080F               	movf	15,w	;volatile
  6975  09A8  0671               	xorwf	??_Lcd_Chr_CP+1,w
  6976  09A9  39FE               	andlw	-2
  6977  09AA  0671               	xorwf	??_Lcd_Chr_CP+1,w
  6978  09AB  008F               	movwf	15	;volatile
  6979  09AC  0872               	movf	Lcd_Chr_CP@data,w
  6980  09AD  3901               	andlw	1
  6981  09AE  00F0               	movwf	??_Lcd_Chr_CP
  6982  09AF  0DF0               	rlf	??_Lcd_Chr_CP,f
  6983  09B0  080F               	movf	15,w	;volatile
  6984  09B1  0670               	xorwf	??_Lcd_Chr_CP,w
  6985  09B2  39FD               	andlw	-3
  6986  09B3  0670               	xorwf	??_Lcd_Chr_CP,w
  6987  09B4  008F               	movwf	15	;volatile
  6988                           
  6989                           ;flex_lcd.h: 144: _delay(10);
  6990  09B5  3003               	movlw	3
  6991  09B6                     u4067:	
  6992  09B6  0B89               	decfsz	9,f
  6993  09B7  29B6               	goto	u4067
  6994  09B8  0000               	nop
  6995                           
  6996                           ;flex_lcd.h: 145: PORTDbits.RD3 = 1; _delay((unsigned long)((5)*(32000000/4000000.0))); 
      +                          PORTDbits.RD3 = 0;
  6997  09B9  0140               	movlb	0	; select bank0
  6998  09BA  158F               	bsf	15,3	;volatile
  6999  09BB  300D               	movlw	13
  7000  09BC                     u4077:	
  7001  09BC  0B89               	decfsz	9,f
  7002  09BD  29BC               	goto	u4077
  7003  09BE  0000               	nop
  7004  09BF  0140               	movlb	0	; select bank0
  7005  09C0  118F               	bcf	15,3	;volatile
  7006                           
  7007                           ;flex_lcd.h: 146: _delay((unsigned long)((5)*(32000000/4000000.0))); _delay((unsigned lo
      +                          ng)((5500)*(32000000/4000000.0)));
  7008  09C1  300D               	movlw	13
  7009  09C2                     u4087:	
  7010  09C2  0B89               	decfsz	9,f
  7011  09C3  29C2               	goto	u4087
  7012  09C4  0000               	nop
  7013  09C5  303A               	movlw	58
  7014  09C6  00F0               	movwf	??_Lcd_Chr_CP
  7015  09C7  3023               	movlw	35
  7016  09C8                     u4097:	
  7017  09C8  0B89               	decfsz	9,f
  7018  09C9  29C8               	goto	u4097
  7019  09CA  0BF0               	decfsz	??_Lcd_Chr_CP,f
  7020  09CB  29C8               	goto	u4097
  7021  09CC  0000               	nop
  7022  09CD  0008               	return
  7023  09CE                     __end_of_Lcd_Chr_CP:	
  7024                           
  7025                           	psect	text12
  7026  09CE                     __ptext12:	
  7027 ;; *************** function _Lcd_Init *****************
  7028 ;; Defined at:
  7029 ;;		line 52 in file "flex_lcd.h"
  7030 ;; Parameters:    Size  Location     Type
  7031 ;;		None
  7032 ;; Auto vars:     Size  Location     Type
  7033 ;;  data            1    4[COMMON] unsigned char 
  7034 ;; Return value:  Size  Location     Type
  7035 ;;                  1    wreg      void 
  7036 ;; Registers used:
  7037 ;;		wreg, status,2, status,0, pclath, cstack
  7038 ;; Tracked objects:
  7039 ;;		On entry : 0/0
  7040 ;;		On exit  : 0/0
  7041 ;;		Unchanged: 0/0
  7042 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
  7043 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  7044 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  7045 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  7046 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  7047 ;;Total ram usage:        2 bytes
  7048 ;; Hardware stack levels used:    1
  7049 ;; Hardware stack levels required when called:    1
  7050 ;; This function calls:
  7051 ;;		_Lcd_Cmd
  7052 ;; This function is called by:
  7053 ;;		_main
  7054 ;; This function uses a non-reentrant model
  7055 ;;
  7056                           
  7057                           
  7058                           ;psect for function _Lcd_Init
  7059  09CE                     _Lcd_Init:	
  7060                           
  7061                           ;flex_lcd.h: 53: unsigned char data;
  7062                           ;flex_lcd.h: 54: TRISCbits.TRISC1 = 0;
  7063                           
  7064                           ;incstack = 0
  7065                           ; Regs used in _Lcd_Init: [wreg+status,2+status,0+pclath+cstack]
  7066  09CE  0140               	movlb	0	; select bank0
  7067  09CF  1093               	bcf	19,1	;volatile
  7068                           
  7069                           ;flex_lcd.h: 55: TRISCbits.TRISC2 = 0;
  7070  09D0  1113               	bcf	19,2	;volatile
  7071                           
  7072                           ;flex_lcd.h: 56: TRISDbits.TRISD0 = 0;
  7073  09D1  1014               	bcf	20,0	;volatile
  7074                           
  7075                           ;flex_lcd.h: 57: TRISDbits.TRISD1 = 0;
  7076  09D2  1094               	bcf	20,1	;volatile
  7077                           
  7078                           ;flex_lcd.h: 58: TRISDbits.TRISD3 = 0;
  7079  09D3  1194               	bcf	20,3	;volatile
  7080                           
  7081                           ;flex_lcd.h: 59: TRISDbits.TRISD2 = 0;
  7082  09D4  1114               	bcf	20,2	;volatile
  7083                           
  7084                           ;flex_lcd.h: 60: PORTCbits.RC1 = 0;
  7085  09D5  108E               	bcf	14,1	;volatile
  7086                           
  7087                           ;flex_lcd.h: 61: PORTCbits.RC2 = 0;
  7088  09D6  110E               	bcf	14,2	;volatile
  7089                           
  7090                           ;flex_lcd.h: 62: PORTDbits.RD0 = 0;
  7091  09D7  100F               	bcf	15,0	;volatile
  7092                           
  7093                           ;flex_lcd.h: 63: PORTDbits.RD1 = 0;
  7094  09D8  108F               	bcf	15,1	;volatile
  7095                           
  7096                           ;flex_lcd.h: 64: PORTDbits.RD3 = 0;
  7097  09D9  118F               	bcf	15,3	;volatile
  7098                           
  7099                           ;flex_lcd.h: 65: PORTDbits.RD2 = 0;
  7100  09DA  110F               	bcf	15,2	;volatile
  7101                           
  7102                           ;flex_lcd.h: 66: _delay((unsigned long)((5500)*(32000000/4000000.0)));
  7103  09DB  303A               	movlw	58
  7104  09DC  00F3               	movwf	??_Lcd_Init
  7105  09DD  3023               	movlw	35
  7106  09DE                     u4107:	
  7107  09DE  0B89               	decfsz	9,f
  7108  09DF  29DE               	goto	u4107
  7109  09E0  0BF3               	decfsz	??_Lcd_Init,f
  7110  09E1  29DE               	goto	u4107
  7111  09E2  0000               	nop
  7112                           
  7113                           ;flex_lcd.h: 67: _delay((unsigned long)((5500)*(32000000/4000000.0)));
  7114  09E3  303A               	movlw	58
  7115  09E4  00F3               	movwf	??_Lcd_Init
  7116  09E5  3023               	movlw	35
  7117  09E6                     u4117:	
  7118  09E6  0B89               	decfsz	9,f
  7119  09E7  29E6               	goto	u4117
  7120  09E8  0BF3               	decfsz	??_Lcd_Init,f
  7121  09E9  29E6               	goto	u4117
  7122  09EA  0000               	nop
  7123                           
  7124                           ;flex_lcd.h: 68: _delay((unsigned long)((5500)*(32000000/4000000.0)));
  7125  09EB  303A               	movlw	58
  7126  09EC  00F3               	movwf	??_Lcd_Init
  7127  09ED  3023               	movlw	35
  7128  09EE                     u4127:	
  7129  09EE  0B89               	decfsz	9,f
  7130  09EF  29EE               	goto	u4127
  7131  09F0  0BF3               	decfsz	??_Lcd_Init,f
  7132  09F1  29EE               	goto	u4127
  7133  09F2  0000               	nop
  7134                           
  7135                           ;flex_lcd.h: 69: _delay((unsigned long)((5500)*(32000000/4000000.0)));
  7136  09F3  303A               	movlw	58
  7137  09F4  00F3               	movwf	??_Lcd_Init
  7138  09F5  3023               	movlw	35
  7139  09F6                     u4137:	
  7140  09F6  0B89               	decfsz	9,f
  7141  09F7  29F6               	goto	u4137
  7142  09F8  0BF3               	decfsz	??_Lcd_Init,f
  7143  09F9  29F6               	goto	u4137
  7144  09FA  0000               	nop
  7145                           
  7146                           ;flex_lcd.h: 70: _delay((unsigned long)((5500)*(32000000/4000000.0)));
  7147  09FB  303A               	movlw	58
  7148  09FC  00F3               	movwf	??_Lcd_Init
  7149  09FD  3023               	movlw	35
  7150  09FE                     u4147:	
  7151  09FE  0B89               	decfsz	9,f
  7152  09FF  29FE               	goto	u4147
  7153  0A00  0BF3               	decfsz	??_Lcd_Init,f
  7154  0A01  29FE               	goto	u4147
  7155  0A02  0000               	nop
  7156                           
  7157                           ;flex_lcd.h: 71: _delay((unsigned long)((5500)*(32000000/4000000.0)));
  7158  0A03  303A               	movlw	58
  7159  0A04  00F3               	movwf	??_Lcd_Init
  7160  0A05  3023               	movlw	35
  7161  0A06                     u4157:	
  7162  0A06  0B89               	decfsz	9,f
  7163  0A07  2A06               	goto	u4157
  7164  0A08  0BF3               	decfsz	??_Lcd_Init,f
  7165  0A09  2A06               	goto	u4157
  7166  0A0A  0000               	nop
  7167                           
  7168                           ;flex_lcd.h: 72: for(data = 1; data < 4; data ++)
  7169  0A0B  01F4               	clrf	Lcd_Init@data
  7170  0A0C  0AF4               	incf	Lcd_Init@data,f
  7171  0A0D  3004               	movlw	4
  7172  0A0E  0274               	subwf	Lcd_Init@data,w
  7173  0A0F  1803               	btfsc	3,0
  7174  0A10  2A39               	goto	l66
  7175  0A11                     l65:	
  7176                           
  7177                           ;flex_lcd.h: 73: {
  7178                           ;flex_lcd.h: 74: PORTCbits.RC1 = 0; PORTCbits.RC2 = 0; PORTDbits.RD0 = 1; PORTDbits.RD1 
      +                          = 1; PORTDbits.RD3 = 0;
  7179  0A11  0140               	movlb	0	; select bank0
  7180  0A12  108E               	bcf	14,1	;volatile
  7181  0A13  110E               	bcf	14,2	;volatile
  7182  0A14  140F               	bsf	15,0	;volatile
  7183  0A15  148F               	bsf	15,1	;volatile
  7184  0A16  118F               	bcf	15,3	;volatile
  7185                           
  7186                           ;flex_lcd.h: 75: PORTDbits.RD2 = 0; PORTCbits.RC1 = 0; PORTCbits.RC2 = 0; PORTDbits.RD0 
      +                          = 1; PORTDbits.RD1 = 1;
  7187  0A17  110F               	bcf	15,2	;volatile
  7188  0A18  108E               	bcf	14,1	;volatile
  7189  0A19  110E               	bcf	14,2	;volatile
  7190  0A1A  140F               	bsf	15,0	;volatile
  7191  0A1B  148F               	bsf	15,1	;volatile
  7192                           
  7193                           ;flex_lcd.h: 76: PORTDbits.RD3 = 1; PORTDbits.RD2 = 0;
  7194  0A1C  158F               	bsf	15,3	;volatile
  7195  0A1D  110F               	bcf	15,2	;volatile
  7196                           
  7197                           ;flex_lcd.h: 77: _delay((unsigned long)((5)*(32000000/4000000.0)));
  7198  0A1E  300D               	movlw	13
  7199  0A1F                     u4167:	
  7200  0A1F  0B89               	decfsz	9,f
  7201  0A20  2A1F               	goto	u4167
  7202  0A21  0000               	nop
  7203                           
  7204                           ;flex_lcd.h: 78: PORTCbits.RC1 = 0; PORTCbits.RC2 = 0; PORTDbits.RD0 = 1; PORTDbits.RD1 
      +                          = 1; PORTDbits.RD3 = 0;
  7205  0A22  0140               	movlb	0	; select bank0
  7206  0A23  108E               	bcf	14,1	;volatile
  7207  0A24  110E               	bcf	14,2	;volatile
  7208  0A25  140F               	bsf	15,0	;volatile
  7209  0A26  148F               	bsf	15,1	;volatile
  7210  0A27  118F               	bcf	15,3	;volatile
  7211                           
  7212                           ;flex_lcd.h: 79: PORTDbits.RD2 = 0;
  7213  0A28  110F               	bcf	15,2	;volatile
  7214                           
  7215                           ;flex_lcd.h: 80: _delay((unsigned long)((5500)*(32000000/4000000.0)));
  7216  0A29  303A               	movlw	58
  7217  0A2A  00F3               	movwf	??_Lcd_Init
  7218  0A2B  3023               	movlw	35
  7219  0A2C                     u4177:	
  7220  0A2C  0B89               	decfsz	9,f
  7221  0A2D  2A2C               	goto	u4177
  7222  0A2E  0BF3               	decfsz	??_Lcd_Init,f
  7223  0A2F  2A2C               	goto	u4177
  7224  0A30  0000               	nop
  7225  0A31  3001               	movlw	1
  7226  0A32  00F3               	movwf	??_Lcd_Init
  7227  0A33  0873               	movf	??_Lcd_Init,w
  7228  0A34  07F4               	addwf	Lcd_Init@data,f
  7229  0A35  3004               	movlw	4
  7230  0A36  0274               	subwf	Lcd_Init@data,w
  7231  0A37  1C03               	skipc
  7232  0A38  2A11               	goto	l65
  7233  0A39                     l66:	
  7234                           
  7235                           ;flex_lcd.h: 81: }
  7236                           ;flex_lcd.h: 82: PORTCbits.RC1 = 0; PORTCbits.RC2 = 0; PORTDbits.RD0 = 1; PORTDbits.RD1 
      +                          = 0; PORTDbits.RD3 = 0; PORTDbits.RD2 = 0;
  7237  0A39  0140               	movlb	0	; select bank0
  7238  0A3A  108E               	bcf	14,1	;volatile
  7239  0A3B  110E               	bcf	14,2	;volatile
  7240  0A3C  140F               	bsf	15,0	;volatile
  7241  0A3D  108F               	bcf	15,1	;volatile
  7242  0A3E  118F               	bcf	15,3	;volatile
  7243  0A3F  110F               	bcf	15,2	;volatile
  7244                           
  7245                           ;flex_lcd.h: 83: PORTCbits.RC1 = 0; PORTCbits.RC2 = 0; PORTDbits.RD0 = 1; PORTDbits.RD1 
      +                          = 0; PORTDbits.RD3 = 1; PORTDbits.RD2 = 0;
  7246  0A40  108E               	bcf	14,1	;volatile
  7247  0A41  110E               	bcf	14,2	;volatile
  7248  0A42  140F               	bsf	15,0	;volatile
  7249  0A43  108F               	bcf	15,1	;volatile
  7250  0A44  158F               	bsf	15,3	;volatile
  7251  0A45  110F               	bcf	15,2	;volatile
  7252                           
  7253                           ;flex_lcd.h: 84: _delay((unsigned long)((5)*(32000000/4000000.0)));
  7254  0A46  300D               	movlw	13
  7255  0A47                     u4187:	
  7256  0A47  0B89               	decfsz	9,f
  7257  0A48  2A47               	goto	u4187
  7258  0A49  0000               	nop
  7259                           
  7260                           ;flex_lcd.h: 85: PORTCbits.RC1 = 0; PORTCbits.RC2 = 0; PORTDbits.RD0 = 1; PORTDbits.RD1 
      +                          = 0; PORTDbits.RD3 = 0; PORTDbits.RD2 = 0;
  7261  0A4A  0140               	movlb	0	; select bank0
  7262  0A4B  108E               	bcf	14,1	;volatile
  7263  0A4C  110E               	bcf	14,2	;volatile
  7264  0A4D  140F               	bsf	15,0	;volatile
  7265  0A4E  108F               	bcf	15,1	;volatile
  7266  0A4F  118F               	bcf	15,3	;volatile
  7267  0A50  110F               	bcf	15,2	;volatile
  7268                           
  7269                           ;flex_lcd.h: 86: _delay((unsigned long)((5500)*(32000000/4000000.0)));
  7270  0A51  303A               	movlw	58
  7271  0A52  00F3               	movwf	??_Lcd_Init
  7272  0A53  3023               	movlw	35
  7273  0A54                     u4197:	
  7274  0A54  0B89               	decfsz	9,f
  7275  0A55  2A54               	goto	u4197
  7276  0A56  0BF3               	decfsz	??_Lcd_Init,f
  7277  0A57  2A54               	goto	u4197
  7278  0A58  0000               	nop
  7279                           
  7280                           ;flex_lcd.h: 87: data = 40; Lcd_Cmd(data);
  7281  0A59  3028               	movlw	40
  7282  0A5A  00F3               	movwf	??_Lcd_Init
  7283  0A5B  0873               	movf	??_Lcd_Init,w
  7284  0A5C  00F4               	movwf	Lcd_Init@data
  7285  0A5D  0874               	movf	Lcd_Init@data,w
  7286  0A5E  3188  209C  3189   	fcall	_Lcd_Cmd
  7287                           
  7288                           ;flex_lcd.h: 88: data = 16; Lcd_Cmd(data);
  7289  0A61  3010               	movlw	16
  7290  0A62  00F3               	movwf	??_Lcd_Init
  7291  0A63  0873               	movf	??_Lcd_Init,w
  7292  0A64  00F4               	movwf	Lcd_Init@data
  7293  0A65  0874               	movf	Lcd_Init@data,w
  7294  0A66  3188  209C  3189   	fcall	_Lcd_Cmd
  7295                           
  7296                           ;flex_lcd.h: 89: data = 1; Lcd_Cmd(data);
  7297  0A69  01F4               	clrf	Lcd_Init@data
  7298  0A6A  0AF4               	incf	Lcd_Init@data,f
  7299  0A6B  0874               	movf	Lcd_Init@data,w
  7300  0A6C  3188  209C  3189   	fcall	_Lcd_Cmd
  7301                           
  7302                           ;flex_lcd.h: 90: data = 15; Lcd_Cmd(data);
  7303  0A6F  300F               	movlw	15
  7304  0A70  00F3               	movwf	??_Lcd_Init
  7305  0A71  0873               	movf	??_Lcd_Init,w
  7306  0A72  00F4               	movwf	Lcd_Init@data
  7307  0A73  0874               	movf	Lcd_Init@data,w
  7308  0A74  3188  209C         	fcall	_Lcd_Cmd
  7309  0A76  0008               	return
  7310  0A77                     __end_of_Lcd_Init:	
  7311                           
  7312                           	psect	text13
  7313  089C                     __ptext13:	
  7314 ;; *************** function _Lcd_Cmd *****************
  7315 ;; Defined at:
  7316 ;;		line 150 in file "flex_lcd.h"
  7317 ;; Parameters:    Size  Location     Type
  7318 ;;  data            1    wreg     unsigned char 
  7319 ;; Auto vars:     Size  Location     Type
  7320 ;;  data            1    2[COMMON] unsigned char 
  7321 ;; Return value:  Size  Location     Type
  7322 ;;                  1    wreg      void 
  7323 ;; Registers used:
  7324 ;;		wreg, status,2, status,0
  7325 ;; Tracked objects:
  7326 ;;		On entry : 0/0
  7327 ;;		On exit  : 0/0
  7328 ;;		Unchanged: 0/0
  7329 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
  7330 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  7331 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  7332 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  7333 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  7334 ;;Total ram usage:        3 bytes
  7335 ;; Hardware stack levels used:    1
  7336 ;; This function calls:
  7337 ;;		Nothing
  7338 ;; This function is called by:
  7339 ;;		_Lcd_Init
  7340 ;;		_Lcd_Out
  7341 ;;		_Lcd_Out2
  7342 ;;		_menu
  7343 ;;		_main
  7344 ;; This function uses a non-reentrant model
  7345 ;;
  7346                           
  7347                           
  7348                           ;psect for function _Lcd_Cmd
  7349  089C                     _Lcd_Cmd:	
  7350                           
  7351                           ;incstack = 0
  7352                           ; Regs used in _Lcd_Cmd: [wreg+status,2+status,0]
  7353                           ;Lcd_Cmd@data stored from wreg
  7354  089C  00F2               	movwf	Lcd_Cmd@data
  7355                           
  7356                           ;flex_lcd.h: 151: PORTDbits.RD3 = 0; PORTDbits.RD2 = 0;
  7357  089D  0140               	movlb	0	; select bank0
  7358  089E  118F               	bcf	15,3	;volatile
  7359  089F  110F               	bcf	15,2	;volatile
  7360                           
  7361                           ;flex_lcd.h: 152: PORTCbits.RC1 = (data & 0b10000000)>>7; PORTCbits.RC2 = (data & 0b0100
      +                          0000)>>6;
  7362  08A0  0872               	movf	Lcd_Cmd@data,w
  7363  08A1  00F0               	movwf	??_Lcd_Cmd
  7364  08A2  3007               	movlw	7
  7365  08A3                     u1815:	
  7366  08A3  36F0               	lsrf	??_Lcd_Cmd,f
  7367  08A4  0B89               	decfsz	9,f
  7368  08A5  28A3               	goto	u1815
  7369  08A6  0870               	movf	??_Lcd_Cmd,w
  7370  08A7  3901               	andlw	1
  7371  08A8  00F1               	movwf	??_Lcd_Cmd+1
  7372  08A9  0DF1               	rlf	??_Lcd_Cmd+1,f
  7373  08AA  080E               	movf	14,w	;volatile
  7374  08AB  0671               	xorwf	??_Lcd_Cmd+1,w
  7375  08AC  39FD               	andlw	-3
  7376  08AD  0671               	xorwf	??_Lcd_Cmd+1,w
  7377  08AE  008E               	movwf	14	;volatile
  7378  08AF  0872               	movf	Lcd_Cmd@data,w
  7379  08B0  00F0               	movwf	??_Lcd_Cmd
  7380  08B1  3006               	movlw	6
  7381  08B2                     u1825:	
  7382  08B2  36F0               	lsrf	??_Lcd_Cmd,f
  7383  08B3  0B89               	decfsz	9,f
  7384  08B4  28B2               	goto	u1825
  7385  08B5  0870               	movf	??_Lcd_Cmd,w
  7386  08B6  3901               	andlw	1
  7387  08B7  00F1               	movwf	??_Lcd_Cmd+1
  7388  08B8  0DF1               	rlf	??_Lcd_Cmd+1,f
  7389  08B9  0DF1               	rlf	??_Lcd_Cmd+1,f
  7390  08BA  080E               	movf	14,w	;volatile
  7391  08BB  0671               	xorwf	??_Lcd_Cmd+1,w
  7392  08BC  39FB               	andlw	-5
  7393  08BD  0671               	xorwf	??_Lcd_Cmd+1,w
  7394  08BE  008E               	movwf	14	;volatile
  7395                           
  7396                           ;flex_lcd.h: 153: PORTDbits.RD0 = (data & 0b00100000)>>5; PORTDbits.RD1 = (data & 0b0001
      +                          0000)>>4;
  7397  08BF  0872               	movf	Lcd_Cmd@data,w
  7398  08C0  00F0               	movwf	??_Lcd_Cmd
  7399  08C1  3005               	movlw	5
  7400  08C2                     u1835:	
  7401  08C2  36F0               	lsrf	??_Lcd_Cmd,f
  7402  08C3  0B89               	decfsz	9,f
  7403  08C4  28C2               	goto	u1835
  7404  08C5  3001               	movlw	1
  7405  08C6  0570               	andwf	??_Lcd_Cmd,w
  7406  08C7  00F1               	movwf	??_Lcd_Cmd+1
  7407  08C8  080F               	movf	15,w	;volatile
  7408  08C9  0671               	xorwf	??_Lcd_Cmd+1,w
  7409  08CA  39FE               	andlw	-2
  7410  08CB  0671               	xorwf	??_Lcd_Cmd+1,w
  7411  08CC  008F               	movwf	15	;volatile
  7412  08CD  0872               	movf	Lcd_Cmd@data,w
  7413  08CE  00F0               	movwf	??_Lcd_Cmd
  7414  08CF  3004               	movlw	4
  7415  08D0                     u1845:	
  7416  08D0  36F0               	lsrf	??_Lcd_Cmd,f
  7417  08D1  0B89               	decfsz	9,f
  7418  08D2  28D0               	goto	u1845
  7419  08D3  0870               	movf	??_Lcd_Cmd,w
  7420  08D4  3901               	andlw	1
  7421  08D5  00F1               	movwf	??_Lcd_Cmd+1
  7422  08D6  0DF1               	rlf	??_Lcd_Cmd+1,f
  7423  08D7  080F               	movf	15,w	;volatile
  7424  08D8  0671               	xorwf	??_Lcd_Cmd+1,w
  7425  08D9  39FD               	andlw	-3
  7426  08DA  0671               	xorwf	??_Lcd_Cmd+1,w
  7427  08DB  008F               	movwf	15	;volatile
  7428                           
  7429                           ;flex_lcd.h: 154: _delay(10);
  7430  08DC  3003               	movlw	3
  7431  08DD                     u4207:	
  7432  08DD  0B89               	decfsz	9,f
  7433  08DE  28DD               	goto	u4207
  7434  08DF  0000               	nop
  7435                           
  7436                           ;flex_lcd.h: 155: PORTDbits.RD3 = 1; _delay((unsigned long)((5)*(32000000/4000000.0))); 
      +                          PORTDbits.RD3 = 0;
  7437  08E0  0140               	movlb	0	; select bank0
  7438  08E1  158F               	bsf	15,3	;volatile
  7439  08E2  300D               	movlw	13
  7440  08E3                     u4217:	
  7441  08E3  0B89               	decfsz	9,f
  7442  08E4  28E3               	goto	u4217
  7443  08E5  0000               	nop
  7444  08E6  0140               	movlb	0	; select bank0
  7445  08E7  118F               	bcf	15,3	;volatile
  7446                           
  7447                           ;flex_lcd.h: 156: PORTCbits.RC1 = (data & 0b00001000)>>3; PORTCbits.RC2 = (data & 0b0000
      +                          0100)>>2;
  7448  08E8  0872               	movf	Lcd_Cmd@data,w
  7449  08E9  00F0               	movwf	??_Lcd_Cmd
  7450  08EA  3003               	movlw	3
  7451  08EB                     u1855:	
  7452  08EB  36F0               	lsrf	??_Lcd_Cmd,f
  7453  08EC  0B89               	decfsz	9,f
  7454  08ED  28EB               	goto	u1855
  7455  08EE  0870               	movf	??_Lcd_Cmd,w
  7456  08EF  3901               	andlw	1
  7457  08F0  00F1               	movwf	??_Lcd_Cmd+1
  7458  08F1  0DF1               	rlf	??_Lcd_Cmd+1,f
  7459  08F2  080E               	movf	14,w	;volatile
  7460  08F3  0671               	xorwf	??_Lcd_Cmd+1,w
  7461  08F4  39FD               	andlw	-3
  7462  08F5  0671               	xorwf	??_Lcd_Cmd+1,w
  7463  08F6  008E               	movwf	14	;volatile
  7464  08F7  0872               	movf	Lcd_Cmd@data,w
  7465  08F8  00F0               	movwf	??_Lcd_Cmd
  7466  08F9  3002               	movlw	2
  7467  08FA                     u1865:	
  7468  08FA  36F0               	lsrf	??_Lcd_Cmd,f
  7469  08FB  0B89               	decfsz	9,f
  7470  08FC  28FA               	goto	u1865
  7471  08FD  0870               	movf	??_Lcd_Cmd,w
  7472  08FE  3901               	andlw	1
  7473  08FF  00F1               	movwf	??_Lcd_Cmd+1
  7474  0900  0DF1               	rlf	??_Lcd_Cmd+1,f
  7475  0901  0DF1               	rlf	??_Lcd_Cmd+1,f
  7476  0902  080E               	movf	14,w	;volatile
  7477  0903  0671               	xorwf	??_Lcd_Cmd+1,w
  7478  0904  39FB               	andlw	-5
  7479  0905  0671               	xorwf	??_Lcd_Cmd+1,w
  7480  0906  008E               	movwf	14	;volatile
  7481                           
  7482                           ;flex_lcd.h: 157: PORTDbits.RD0 = (data & 0b00000010)>>1; PORTDbits.RD1 = (data & 0b0000
      +                          0001);
  7483  0907  0872               	movf	Lcd_Cmd@data,w
  7484  0908  00F0               	movwf	??_Lcd_Cmd
  7485  0909  3001               	movlw	1
  7486  090A                     u1875:	
  7487  090A  36F0               	lsrf	??_Lcd_Cmd,f
  7488  090B  0B89               	decfsz	9,f
  7489  090C  290A               	goto	u1875
  7490  090D  3001               	movlw	1
  7491  090E  0570               	andwf	??_Lcd_Cmd,w
  7492  090F  00F1               	movwf	??_Lcd_Cmd+1
  7493  0910  080F               	movf	15,w	;volatile
  7494  0911  0671               	xorwf	??_Lcd_Cmd+1,w
  7495  0912  39FE               	andlw	-2
  7496  0913  0671               	xorwf	??_Lcd_Cmd+1,w
  7497  0914  008F               	movwf	15	;volatile
  7498  0915  0872               	movf	Lcd_Cmd@data,w
  7499  0916  3901               	andlw	1
  7500  0917  00F0               	movwf	??_Lcd_Cmd
  7501  0918  0DF0               	rlf	??_Lcd_Cmd,f
  7502  0919  080F               	movf	15,w	;volatile
  7503  091A  0670               	xorwf	??_Lcd_Cmd,w
  7504  091B  39FD               	andlw	-3
  7505  091C  0670               	xorwf	??_Lcd_Cmd,w
  7506  091D  008F               	movwf	15	;volatile
  7507                           
  7508                           ;flex_lcd.h: 158: _delay(10);
  7509  091E  3003               	movlw	3
  7510  091F                     u4227:	
  7511  091F  0B89               	decfsz	9,f
  7512  0920  291F               	goto	u4227
  7513  0921  0000               	nop
  7514                           
  7515                           ;flex_lcd.h: 159: PORTDbits.RD3 = 1; _delay((unsigned long)((5)*(32000000/4000000.0))); 
      +                          PORTDbits.RD3 = 0;
  7516  0922  0140               	movlb	0	; select bank0
  7517  0923  158F               	bsf	15,3	;volatile
  7518  0924  300D               	movlw	13
  7519  0925                     u4237:	
  7520  0925  0B89               	decfsz	9,f
  7521  0926  2925               	goto	u4237
  7522  0927  0000               	nop
  7523  0928  0140               	movlb	0	; select bank0
  7524  0929  118F               	bcf	15,3	;volatile
  7525                           
  7526                           ;flex_lcd.h: 160: _delay((unsigned long)((5500)*(32000000/4000000.0)));
  7527  092A  303A               	movlw	58
  7528  092B  00F0               	movwf	??_Lcd_Cmd
  7529  092C  3023               	movlw	35
  7530  092D                     u4247:	
  7531  092D  0B89               	decfsz	9,f
  7532  092E  292D               	goto	u4247
  7533  092F  0BF0               	decfsz	??_Lcd_Cmd,f
  7534  0930  292D               	goto	u4247
  7535  0931  0000               	nop
  7536  0932  0008               	return
  7537  0933                     __end_of_Lcd_Cmd:	
  7538  007E                     btemp	set	126	;btemp
  7539  007E                     wtemp0	set	126


Data Sizes:
    Strings     270
    Constant    10
    Data        4
    BSS         104
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     36      80
    BANK1            80      0      64
    BANK2            80      0       0
    BANK3            80      0       0
    BANK4            80      0       0
    BANK5            80      0       0
    BANK6            80      0       0
    BANK7            80      0       0
    BANK8            80      0       0
    BANK9            80      0       0
    BANK10           80      0       0
    BANK11           80      0       0
    BANK12           80      0       0
    BANK13           80      0       0
    BANK14           80      0       0
    BANK15           80      0       0
    BANK16           80      0       0
    BANK17           80      0       0
    BANK18           80      0       0
    BANK19           80      0       0
    BANK20           80      0       0
    BANK21           80      0       0
    BANK22           80      0       0
    BANK23           80      0       0
    BANK24           80      0       0
    BANK25           80      0       0
    BANK26           80      0       0
    BANK27           80      0       0
    BANK28           80      0       0
    BANK29           80      0       0
    BANK30           80      0       0
    BANK31           80      0       0
    BANK32           80      0       0
    BANK33           80      0       0
    BANK34           80      0       0
    BANK35           80      0       0
    BANK36           80      0       0
    BANK37           80      0       0
    BANK38           80      0       0
    BANK39           80      0       0
    BANK40           80      0       0
    BANK41           80      0       0
    BANK42           80      0       0
    BANK43           80      0       0
    BANK44           80      0       0
    BANK45           80      0       0
    BANK46           80      0       0
    BANK47           80      0       0
    BANK48           80      0       0
    BANK49           80      0       0
    BANK50           80      0       0

Pointer List with Targets:

    sprintf@f	PTR const unsigned char  size(2) Largest target is 18
		 -> STR_35(CODE[16]), STR_32(CODE[18]), STR_30(CODE[18]), STR_28(CODE[18]), 
		 -> STR_26(CODE[18]), STR_24(CODE[18]), STR_22(CODE[18]), STR_16(CODE[18]), 
		 -> STR_14(CODE[18]), STR_12(CODE[18]), STR_10(CODE[18]), STR_8(CODE[18]), 
		 -> STR_6(CODE[18]), 

    sprintf@sp	PTR unsigned char  size(1) Largest target is 16
		 -> buffer1(BANK1[16]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    Lcd_Out2@buffer	PTR unsigned char  size(1) Largest target is 16
		 -> buffer1(BANK1[16]), 

    Lcd_Out@buffer	PTR const unsigned char  size(2) Largest target is 16
		 -> STR_37(CODE[13]), STR_36(CODE[14]), STR_34(CODE[14]), STR_33(CODE[13]), 
		 -> STR_31(CODE[14]), STR_29(CODE[14]), STR_27(CODE[15]), STR_25(CODE[13]), 
		 -> STR_23(CODE[14]), STR_21(CODE[14]), STR_20(CODE[15]), STR_19(CODE[15]), 
		 -> STR_18(CODE[14]), STR_17(CODE[11]), STR_15(CODE[14]), STR_13(CODE[14]), 
		 -> STR_11(CODE[15]), STR_9(CODE[13]), STR_7(CODE[14]), STR_5(CODE[14]), 
		 -> STR_4(CODE[13]), STR_3(CODE[15]), STR_2(CODE[16]), STR_1(CODE[14]), 


Critical Paths under _main in COMMON

    _sprintf->___lwmod
    ___lwmod->___lwdiv
    _rtc->___wmul
    ___wmul->___awdiv
    _Lcd_Out2->_Lcd_Chr_CP
    _Lcd_Out2->_Lcd_Cmd
    _Lcd_Out->_Lcd_Chr_CP
    _Lcd_Out->_Lcd_Cmd
    _Lcd_Init->_Lcd_Cmd

Critical Paths under _main in BANK0

    _main->_menu
    _menu->_sprintf
    _rtc->___wmul

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _main in BANK16

    None.

Critical Paths under _main in BANK17

    None.

Critical Paths under _main in BANK18

    None.

Critical Paths under _main in BANK19

    None.

Critical Paths under _main in BANK20

    None.

Critical Paths under _main in BANK21

    None.

Critical Paths under _main in BANK22

    None.

Critical Paths under _main in BANK23

    None.

Critical Paths under _main in BANK24

    None.

Critical Paths under _main in BANK25

    None.

Critical Paths under _main in BANK26

    None.

Critical Paths under _main in BANK27

    None.

Critical Paths under _main in BANK28

    None.

Critical Paths under _main in BANK29

    None.

Critical Paths under _main in BANK30

    None.

Critical Paths under _main in BANK31

    None.

Critical Paths under _main in BANK32

    None.

Critical Paths under _main in BANK33

    None.

Critical Paths under _main in BANK34

    None.

Critical Paths under _main in BANK35

    None.

Critical Paths under _main in BANK36

    None.

Critical Paths under _main in BANK37

    None.

Critical Paths under _main in BANK38

    None.

Critical Paths under _main in BANK39

    None.

Critical Paths under _main in BANK40

    None.

Critical Paths under _main in BANK41

    None.

Critical Paths under _main in BANK42

    None.

Critical Paths under _main in BANK43

    None.

Critical Paths under _main in BANK44

    None.

Critical Paths under _main in BANK45

    None.

Critical Paths under _main in BANK46

    None.

Critical Paths under _main in BANK47

    None.

Critical Paths under _main in BANK48

    None.

Critical Paths under _main in BANK49

    None.

Critical Paths under _main in BANK50

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 9     5      4   28748
                                             27 BANK0      9     5      4
                            _Lcd_Cmd
                           _Lcd_Init
                            _Lcd_Out
                           _Lcd_Out2
                             ___wmul
                               _menu
                         _moverservo
                                _rtc
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _moverservo                                           3     1      2     214
                                              0 COMMON     3     1      2
 ---------------------------------------------------------------------------------
 (1) _menu                                                 2     2      0   13296
                                             25 BANK0      2     2      0
                            _Lcd_Cmd
                            _Lcd_Out
                           _Lcd_Out2
                                _rtc
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             33    19     14    2276
                                              0 BANK0     25    11     14
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (2) ___lwmod                                              6     2      4     287
                                              8 COMMON     6     2      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              8     4      4     290
                                              0 COMMON     8     4      4
 ---------------------------------------------------------------------------------
 (1) _rtc                                                 20     6     14    5042
                                              2 BANK0     20     6     14
                            ___awdiv
                             ___wmul
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4    1628
                                              9 COMMON     4     0      4
                                              0 BANK0      2     2      0
                            ___awdiv (ARG)
 ---------------------------------------------------------------------------------
 (2) ___awdiv                                              9     5      4    1836
                                              0 COMMON     9     5      4
 ---------------------------------------------------------------------------------
 (2) _Lcd_Out2                                             5     3      2    2197
                                              3 COMMON     5     3      2
                         _Lcd_Chr_CP
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (2) _Lcd_Out                                              6     3      3    3605
                                              3 COMMON     6     3      3
                         _Lcd_Chr_CP
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (3) _Lcd_Chr_CP                                           3     3      0     176
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (1) _Lcd_Init                                             2     2      0     314
                                              3 COMMON     2     2      0
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (3) _Lcd_Cmd                                              3     3      0     176
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Lcd_Cmd
   _Lcd_Init
     _Lcd_Cmd
   _Lcd_Out
     _Lcd_Chr_CP
     _Lcd_Cmd
   _Lcd_Out2
     _Lcd_Chr_CP
     _Lcd_Cmd
   ___wmul
     ___awdiv (ARG)
   _menu
     _Lcd_Cmd
     _Lcd_Out
       _Lcd_Chr_CP
       _Lcd_Cmd
     _Lcd_Out2
       _Lcd_Chr_CP
       _Lcd_Cmd
     _rtc
       ___awdiv
       ___wmul
         ___awdiv (ARG)
     _sprintf
       ___lwdiv
       ___lwmod
         ___lwdiv (ARG)
   _moverservo
   _rtc
     ___awdiv
     ___wmul
       ___awdiv (ARG)
   _sprintf
     ___lwdiv
     ___lwmod
       ___lwdiv (ARG)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             FF0      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      E       E       2      100.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     24      50       5      100.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BANK1               50      0      40       7       80.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BITBANK2            50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BANK2               50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BITBANK3            50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BANK3               50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITBANK4            50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BANK4               50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITBANK5            50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BANK5               50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITBANK6            50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BANK6               50      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITBANK7            50      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BANK7               50      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITBANK8            50      0       0      20        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BANK8               50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BITBANK9            50      0       0      22        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BANK9               50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BITBANK10           50      0       0      24        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BANK10              50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BITBANK11           50      0       0      26        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BANK11              50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
ABS                  0      0      9E      28        0.0%
BITBANK12           50      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BANK12              50      0       0      30        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITBANK13           50      0       0      31        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BANK13              50      0       0      32        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%
BITBANK14           50      0       0      33        0.0%
BITSFR32             0      0       0      33        0.0%
SFR32                0      0       0      33        0.0%
BANK14              50      0       0      34        0.0%
BITSFR33             0      0       0      34        0.0%
SFR33                0      0       0      34        0.0%
BITBANK15           50      0       0      35        0.0%
BITSFR34             0      0       0      35        0.0%
SFR34                0      0       0      35        0.0%
BANK15              50      0       0      36        0.0%
BITSFR35             0      0       0      36        0.0%
SFR35                0      0       0      36        0.0%
BITBANK16           50      0       0      37        0.0%
BITSFR36             0      0       0      37        0.0%
SFR36                0      0       0      37        0.0%
BANK16              50      0       0      38        0.0%
BITSFR37             0      0       0      38        0.0%
SFR37                0      0       0      38        0.0%
BITBANK17           50      0       0      39        0.0%
BITSFR38             0      0       0      39        0.0%
SFR38                0      0       0      39        0.0%
BANK17              50      0       0      40        0.0%
BITSFR39             0      0       0      40        0.0%
SFR39                0      0       0      40        0.0%
BITBANK18           50      0       0      41        0.0%
BITSFR40             0      0       0      41        0.0%
SFR40                0      0       0      41        0.0%
BANK18              50      0       0      42        0.0%
BITSFR41             0      0       0      42        0.0%
SFR41                0      0       0      42        0.0%
BITBANK19           50      0       0      43        0.0%
BITSFR42             0      0       0      43        0.0%
SFR42                0      0       0      43        0.0%
BANK19              50      0       0      44        0.0%
BITSFR43             0      0       0      44        0.0%
SFR43                0      0       0      44        0.0%
BITBANK20           50      0       0      45        0.0%
BITSFR44             0      0       0      45        0.0%
SFR44                0      0       0      45        0.0%
BANK20              50      0       0      46        0.0%
BITSFR45             0      0       0      46        0.0%
SFR45                0      0       0      46        0.0%
BITBANK21           50      0       0      47        0.0%
BITSFR46             0      0       0      47        0.0%
SFR46                0      0       0      47        0.0%
BANK21              50      0       0      48        0.0%
BITSFR47             0      0       0      48        0.0%
SFR47                0      0       0      48        0.0%
BITBANK22           50      0       0      49        0.0%
BITSFR48             0      0       0      49        0.0%
SFR48                0      0       0      49        0.0%
BANK22              50      0       0      50        0.0%
BITSFR49             0      0       0      50        0.0%
SFR49                0      0       0      50        0.0%
BITBANK23           50      0       0      51        0.0%
BITSFR50             0      0       0      51        0.0%
SFR50                0      0       0      51        0.0%
BANK23              50      0       0      52        0.0%
BITSFR51             0      0       0      52        0.0%
SFR51                0      0       0      52        0.0%
BITBANK24           50      0       0      53        0.0%
BITSFR52             0      0       0      53        0.0%
SFR52                0      0       0      53        0.0%
BANK24              50      0       0      54        0.0%
BITSFR53             0      0       0      54        0.0%
SFR53                0      0       0      54        0.0%
BITBANK25           50      0       0      55        0.0%
BITSFR54             0      0       0      55        0.0%
SFR54                0      0       0      55        0.0%
BANK25              50      0       0      56        0.0%
BITSFR55             0      0       0      56        0.0%
SFR55                0      0       0      56        0.0%
BITBANK26           50      0       0      57        0.0%
BITSFR56             0      0       0      57        0.0%
SFR56                0      0       0      57        0.0%
BANK26              50      0       0      58        0.0%
BITSFR57             0      0       0      58        0.0%
SFR57                0      0       0      58        0.0%
BITSFR58             0      0       0      59        0.0%
SFR58                0      0       0      59        0.0%
DATA                 0      0      9E      59        0.0%
BITBANK27           50      0       0      60        0.0%
BITSFR59             0      0       0      60        0.0%
SFR59                0      0       0      60        0.0%
BANK27              50      0       0      61        0.0%
BITSFR60             0      0       0      61        0.0%
SFR60                0      0       0      61        0.0%
BITBANK28           50      0       0      62        0.0%
BITSFR61             0      0       0      62        0.0%
SFR61                0      0       0      62        0.0%
BANK28              50      0       0      63        0.0%
BITSFR62             0      0       0      63        0.0%
SFR62                0      0       0      63        0.0%
BITBANK29           50      0       0      64        0.0%
BITSFR63             0      0       0      64        0.0%
SFR63                0      0       0      64        0.0%
BANK29              50      0       0      65        0.0%
BITBANK30           50      0       0      66        0.0%
BANK30              50      0       0      67        0.0%
BITBANK31           50      0       0      68        0.0%
BANK31              50      0       0      69        0.0%
BITBANK32           50      0       0      70        0.0%
BANK32              50      0       0      71        0.0%
BITBANK33           50      0       0      72        0.0%
BANK33              50      0       0      73        0.0%
BITBANK34           50      0       0      74        0.0%
BANK34              50      0       0      75        0.0%
BITBANK35           50      0       0      76        0.0%
BANK35              50      0       0      77        0.0%
BITBANK36           50      0       0      78        0.0%
BANK36              50      0       0      79        0.0%
BITBANK37           50      0       0      80        0.0%
BANK37              50      0       0      81        0.0%
BITBANK38           50      0       0      82        0.0%
BANK38              50      0       0      83        0.0%
BITBANK39           50      0       0      84        0.0%
BANK39              50      0       0      85        0.0%
BITBANK40           50      0       0      86        0.0%
BANK40              50      0       0      87        0.0%
BITBANK41           50      0       0      88        0.0%
BANK41              50      0       0      89        0.0%
BITBANK42           50      0       0      90        0.0%
BANK42              50      0       0      91        0.0%
BITBANK43           50      0       0      92        0.0%
BANK43              50      0       0      93        0.0%
BITBANK44           50      0       0      94        0.0%
BANK44              50      0       0      95        0.0%
BITBANK45           50      0       0      96        0.0%
BANK45              50      0       0      97        0.0%
BITBANK46           50      0       0      98        0.0%
BANK46              50      0       0      99        0.0%
BITBANK47           50      0       0     100        0.0%
BANK47              50      0       0     101        0.0%
BITBANK48           50      0       0     102        0.0%
BANK48              50      0       0     103        0.0%
BITBANK49           50      0       0     104        0.0%
BANK49              50      0       0     105        0.0%
BITBANK50           50      0       0     106        0.0%
BANK50              50      0       0     107        0.0%


Microchip Technology PIC Macro Assembler V1.45 build -152302408 
Symbol Table                                                                                   Mon Nov 26 15:20:53 2018

                      _i 0020              __CFG_CP$OFF 0000                       l65 0A11  
                     l66 0A39             ___awdiv@sign 0076      ___wmul@multiplicand 007B  
         _adressRTC_read 00DE              __CFG_LVP$ON 0000                      l222 0CA9  
                    l231 0CB4                      l303 0192                      l207 089B  
                    l240 0CBE                      l225 0CAF                      l401 0D83  
                    l234 0CB6                      l410 0D8E                      l243 0CC4  
                    l252 0CCE                      l228 0CB1                      l340 04A5  
                    l404 0D89                      l261 0CDC                      l237 0CBC  
                    l413 0D9B                      l270 0CE6                      l246 0CC6  
                    l422 0DAE                      l255 0CD4                      l431 0DCE  
                    l407 0D8B                      l264 0CDE                      l344 04D9  
                    l440 0DE1                      l416 0D9E                      l273 0CEC  
                    l249 0CCC                      l425 0DBB                      l282 0CF4  
                    l258 0CD6                      l434 0DD1                      l267 0CE4  
                    l443 0DEE                      l419 0DAB                      l276 0CEE  
                    l380 07DC                      l460 0FC1                      l452 0E04  
                    l428 0DBE                      l285 0CF7                      l437 0DDE  
                    l446 0DF1                      l279 0CF2                      l295 0147  
                    l392 0D7B                      l449 0E01                      l386 0D73  
                    l299 015E                      l459 0FAB                      l395 0D7E  
                    l389 0D79                      l398 0D80                      l576 16FB  
           __CFG_CPD$OFF 0000                      _chr 00C6                      _dhr 00B8  
                    _ihr 0038                      _aux 0022                      _rhr 0044  
                    _shr 002C                      _rtc 0A77             __CFG_BORV$LO 0000  
                    wreg 0009             __CFG_ZCD$OFF 0000                     l2100 1723  
                   l2110 173E                     l2032 16F4                     l2210 0C04  
                   l2106 1735                     l2122 0011                     l2140 177D  
                   l2052 17B9                     l2212 0C4B                     l2204 0BA8  
                   l2124 001D                     l2132 0032                     l3012 0890  
                   l2142 1780                     l2150 1797                     l2070 17D8  
                   l2206 0BEF                     l3014 013F                     l2144 1783  
                   l2160 1745                     l2080 17F3                     l2216 0C60  
                   l2128 0029                     l3016 07D3                     l2400 0125  
                   l2138 177A                     l2162 1748                     l2170 1754  
                   l2058 17C4                     l2218 0CA7                     l2250 005F  
                   l2402 012F                     l2156 179B                     l2148 1789  
                   l2164 174B                     l2172 1762                     l2084 17FB  
                   l2076 17EA                     l2068 17CC                     l2166 174E  
                   l2190 0AE8                     l2502 0313                     l2430 01B3  
                   l2406 0139                     l2192 0B2F                     l2184 0A8C  
                   l2272 0093                     l2256 0077                     l2512 02ED  
                   l2440 01FC                     l2352 0817                     l2178 1766  
                   l2186 0AD3                     l2098 1717                     l2266 008D  
                   l2602 050E                     l2530 039B                     l2514 035D  
                   l2506 0327                     l2434 01C7                     l2362 083E  
                   l2196 0B44                     l2292 00C5                     l2284 00C1  
                   l2372 0865                     l2198 0B8B                     l2278 00B2  
                   l2294 003D                     l2622 0572                     l2550 03FB  
                   l2526 0387                     l2454 022B                     l2296 00FF  
                   l2704 06A8                     l2632 054C                     l2608 0543  
                   l2560 03D5                     l2536 0361                     l2464 0205  
                   l2384 088B                     l2730 078C                     l2722 0756  
                   l2706 0718                     l2650 05FA                     l2634 05BC  
                   l2626 0586                     l2562 0445                     l2554 040F  
                   l2538 03D1                     l2490 02E9                     l2482 02B3  
                   l2466 0275                     l2458 023F                     l2396 0114  
                   l2718 0742                     l2670 065A                     l2646 05E6  
                   l2478 029F                     l2728 071C                     l2680 0634  
                   l2656 05C0                     l2488 0279                     l2904 0F92  
                   l2682 06A4                     l2674 066E                     l2658 0630  
                   l2746 07CD                     l2818 0D71                     l2694 06CE  
                   l2598 04FA                     l2936 0FDD                     l2698 06E2  
                   l2948 0FF5                     l2894 0F75                     ?_rtc 004C  
                   STR_1 18BD                     STR_2 181C                     STR_3 184B  
                   STR_4 18E6                     STR_5 1885                     STR_6 180A  
                   STR_7 1893                     STR_8 180A                     STR_9 1900  
                   u2025 17CF                     u2105 171A                     u2045 17D9  
                   u2125 1724                     u2205 002A                     u2055 17E3  
                   u2135 172E                     u2065 17EB                     u2145 1736  
                   u2245 0A81                     u2255 0ADD                     u2175 0014  
                   u4007 072A                     u2265 0B39                     u4017 074B  
                   u4107 09DE                     u2275 0B9D                     u2195 0023  
                   u4027 07A8                     u4117 09E6                     u4037 0D03  
                   u2285 0BF9                     u4207 08DD                     u1815 08A3  
                   u4127 09EE                     u4047 0974                     u2295 0C55  
                   u4217 08E3                     u1825 08B2                     u4137 09F6  
                   u4057 097A                     u1905 0959                     u2625 0823  
                   u3505 0F46                     u4227 091F                     u1835 08C2  
                   u4147 09FE                     u4067 09B6                     u1915 0967  
                   u2555 00A8                     u3515 0F52                     u4237 0925  
                   u1845 08D0                     u4157 0A06                     u4077 09BC  
                   u1925 0982                     u2645 084A                     u3525 0F5B  
                   u3445 0E13                     u4247 092D                     u1855 08EB  
                   u4167 0A1F                     u4087 09C2                     u1935 0991  
                   u3535 0F66                     u3455 0E38                     u1865 08FA  
                   u4177 0A2C                     u4097 09C8                     u1945 09A1  
                   u2665 0871                     u3545 0F72                     u3465 0E61  
                   u3617 0D4A                     u1875 090A                     u4187 0A47  
                   u3707 0881                     u3627 0F9B                     u3475 0E8A  
                   u4197 0A54                     u1885 093A                     u1965 16FC  
                   u3717 011A                     u3637 0FB1                     u3485 0EB3  
                   u1895 0949                     u1975 1701                     u3807 02A8  
                   u3727 0157                     u3647 0FC7                     u3495 0EE2  
                   u3817 02FB                     u3737 016C                     u3657 082A  
                   u3907 04E2                     u3827 031C                     u3747 018A  
                   u3667 0834                     u3917 0503                     u3837 036F  
                   u3757 019B                     u3677 0851                     u3927 055A  
                   u3847 0390                     u3767 01BC                     u3687 085B  
                   u3937 057B                     u3857 03E3                     u3777 0213  
                   u3697 0878                     u3947 05CE                     u3867 0404  
                   u3787 0234                     u3957 05EF                     u3877 0461  
                   u3797 0287                     u3967 0642                     u3887 04B3  
                   u3977 0663                     u3897 04D1                     u3987 06B6  
                   u3997 06D7             __CFG_WRT$OFF 0000            __CFG_FCMEN$ON 0000  
       moverservo@grados 0070                     _cday 00C4                     _dday 00B6  
                   _aux2 00AC                     _aux3 00AA                     _aux4 00A8  
                   _aux5 00A6                     _aux6 00A4                     _aux7 00A2  
                   _cmin 00C8                     _dmin 00BA                     _cseg 00CA  
                   _dseg 003E                     _main 0D0B                     _imin 003A  
                   _iseg 003C                     _menu 0104                     _rday 00BC  
                   _rmin 0046                     _smin 002E                     _rseg 0048  
                   _sseg 0030                     fsr0h 0005                     fsr1h 0007  
                   indf0 0000                     fsr0l 0004                     indf1 0001  
                   fsr1l 0006                     btemp 007E            __CFG_BOREN$ON 0000  
                   start 0002          __end_of_Lcd_Cmd 0933          __end_of_Lcd_Out 17AF  
          __CFG_CSWEN$ON 0000            __CFG_MCLRE$ON 0000               _Lcd_Chr_CP 0933  
                  ??_rtc 005A           Lcd_Out2@buffer 0074                    ?_main 0065  
                  ?_menu 0070          __end_of___awdiv 1800                    STR_10 180A  
                  STR_11 183C                    STR_12 180A                    STR_20 185A  
                  STR_21 1885                    STR_13 18CB                    STR_30 180A  
                  STR_22 180A                    STR_14 180A                    STR_23 1893  
                  STR_31 18AF                    STR_15 18AF                    STR_32 180A  
                  STR_24 180A                    STR_16 180A                    STR_25 1900  
                  STR_17 190D                    STR_33 18F3            __CFG_WDTE$OFF 0000  
                  STR_26 180A                    STR_18 18A1                    STR_34 1877  
                  STR_27 183C                    STR_19 184B                    STR_35 182C  
                  STR_28 180A                    STR_36 1869                    STR_29 18CB  
                  STR_37 18D9          ___awdiv@divisor 0070          __end_of___lwdiv 1743  
        __end_of___lwmod 0037          ___awdiv@counter 0075                    _PORTA 000C  
                  _PORTB 000D                    _PORTC 000E                    _PORTD 000F  
                  _TRISA 0011                    _TRISB 0012            __CFG_PWRTE$ON 0000  
                  _cdate 00C2                    _ddate 00B4                    _idate 0036  
        __end_of_dpowers 180A                    _cyear 00BE                    _dyear 00B0  
                  _rdate 0042                    _iyear 0032                    _sdate 002A  
                  _ryear 00DC                    _syear 0026                    rtc@hr 0050  
                  status 0003                    wtemp0 007E          __end_of_sprintf 0104  
       __end_of_Lcd_Init 0A77         __end_of_Lcd_Out2 1778          __initialization 07DD  
           __end_of_main 1000             __end_of_menu 07DD                   ??_main 0069  
                 ??_menu 0063         ___awdiv@dividend 0072                   _ANSELA 1F38  
                 _ANSELB 1F43                   _ANSELD 1F59                   _RB0PPS 1F18  
                 _RC3PPS 1F23                   _RC4PPS 1F24           __CFG_WDTCCS$SC 0000  
              ??_Lcd_Cmd 0070                ??_Lcd_Out 0076              ?_Lcd_Chr_CP 0070  
                 ___wmul 16F1                ??___awdiv 0074           __CFG_STVREN$ON 0000  
              ??___lwdiv 0074                ??___lwmod 007C                   _cmonth 00C0  
                 _dmonth 00B2                   _auxbum 00A0                   _inicio 00AE  
                 _imonth 0034         ___awdiv@quotient 0077                   _rmonth 0040  
                 _smonth 0028                   rtc@day 0052                   rtc@min 004E  
                 rtc@seg 004C                ??_sprintf 0058  __end_of__initialization 07FD  
         __pcstackCOMMON 0070             __pidataBANK0 0814             __pidataBANK1 0812  
              ?_Lcd_Init 0070                ?_Lcd_Out2 0073      __size_of_Lcd_Chr_CP 009B  
             __pbssBANK0 0020               __pbssBANK1 00A0               __pmaintext 0D0B  
                ?___wmul 0079          __CFG_PPS1WAY$ON 0000      __CFG_RSTOSC$HFINT32 0000  
             ??_Lcd_Init 0073                  _SSP1ADD 018D               ??_Lcd_Out2 0075  
                _SSP1BUF 018C                  _Lcd_Cmd 089C                  _Lcd_Out 1778  
   __CFG_SCANE$available 0000                  ___awdiv 17AF          __size_of___wmul 001E  
                ___lwdiv 170F                  ___lwmod 000B                  __ptext1 0816  
                __ptext2 0104                  __ptext3 0037                  __ptext4 000B  
                __ptext5 170F                  __ptext6 0A77                  __ptext7 16F1  
                __ptext8 17AF                  __ptext9 1743                  _buffer1 00CC  
                _dpowers 1800             __size_of_rtc 0294                  _sprintf 0037  
                clrloop0 0006     end_of_initialization 07FD                  rtc@date 0054  
                rtc@year 0058             ??_Lcd_Chr_CP 0070                Lcd_Out2@x 0073  
              Lcd_Out2@y 0076               _moverservo 0816    __CFG_WDTCPS$WDTCPS_31 0000  
              _PORTBbits 000D                _PORTCbits 000E                _PORTDbits 000F  
              _TRISCbits 0013                _TRISDbits 0014         __CFG_FEXTOSC$OFF 0000  
     __end_of_Lcd_Chr_CP 09CE           __end_of___wmul 170F      start_initialization 07DD  
            __end_of_rtc 0D0B            Lcd_Out@buffer 0074        __size_of_Lcd_Init 00A9  
      __size_of_Lcd_Out2 0035         __CFG_LPBOREN$OFF 0000                 ??___wmul 007D  
            ?_moverservo 0070              __pdataBANK0 006E              __pdataBANK1 00DE  
              ___latbits 0004            __pcstackBANK0 004A                 ?_Lcd_Cmd 0070  
            sprintf@flag 005D                 ?_Lcd_Out 0073              sprintf@prec 005E  
              _adressRTC 006E         ___lwdiv@dividend 0072                 ?___awdiv 0070  
               ?___lwdiv 0070                 ?___lwmod 0078         ___lwdiv@quotient 0075  
               ?_sprintf 004A      __size_of_moverservo 0086           ___wmul@product 004A  
               _LATAbits 0016                clear_ram0 0005                _seleccion 0024  
               Lcd_Out@x 0073                 Lcd_Out@y 0077             Lcd_Init@data 0074  
      ___wmul@multiplier 0079             Lcd_Out2@data 0077                 _Lcd_Init 09CE  
               _Lcd_Out2 1743         __size_of_Lcd_Cmd 0097         __size_of_Lcd_Out 0037  
       __size_of___awdiv 0051         __size_of___lwdiv 0034         __size_of___lwmod 002C  
             _ANSELCbits 1F4E               sprintf@val 005F           Lcd_Chr_CP@data 0072  
        ___lwdiv@divisor 0070          ___lwdiv@counter 0077                 __ptext10 1778  
               __ptext11 0933                 __ptext12 09CE                 __ptext13 089C  
           _SSP1CON1bits 0190             _SSP1CON2bits 0191         __size_of_sprintf 00CD  
            Lcd_Cmd@data 0072            __size_of_main 02F5            __size_of_menu 06D9  
   __CFG_WDTCWS$WDTCWS_7 0000             ??_moverservo 0072                 main@argc 0065  
               main@argv 0067             _SSP1STATbits 018F              Lcd_Out@data 0078  
         __pstringtext10 1893           __pstringtext11 18A1           __pstringtext20 0000  
         __pstringtext12 18AF           __pstringtext13 18BD           __pstringtext14 18CB  
         __pstringtext15 18D9           __pstringtext16 18E6           __pstringtext17 18F3  
         __pstringtext18 1900           __pstringtext19 190D                sprintf@ap 005C  
              sprintf@sp 0062       __end_of_moverservo 089C         ___lwmod@dividend 007A  
      __CFG_CLKOUTEN$OFF 0000                 rtc@month 0056               _OSCFRQbits 0893  
          __pstringtext1 1800            __pstringtext2 181C            __pstringtext3 182C  
          __pstringtext4 183C            __pstringtext5 184B            __pstringtext6 185A  
          __pstringtext7 1869            __pstringtext8 1877            __pstringtext9 1885  
               sprintf@c 0061                 sprintf@f 004A               _SSP1DATPPS 1EC6  
             _SSP1CLKPPS 1EC5          ___lwmod@divisor 0078          ___lwmod@counter 007D  
