

Microchip Technology PIC LITE Macro Assembler V1.45 build -152302408 
                                                                                               Thu Nov 15 12:16:39 2018

Microchip Technology Omniscient Code Generator v1.45 (Free mode) build 201711160504
     1                           	processor	16F18877
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	idataBANK0,global,class=CODE,delta=2
     5                           	psect	stringtext1,global,class=STRCODE,delta=2
     6                           	psect	stringtext2,global,class=STRCODE,delta=2
     7                           	psect	stringtext3,global,class=STRCODE,delta=2
     8                           	psect	stringtext4,global,class=STRCODE,delta=2
     9                           	psect	stringtext5,global,class=STRCODE,delta=2
    10                           	psect	stringtext6,global,class=STRCODE,delta=2
    11                           	psect	stringtext7,global,class=STRCODE,delta=2
    12                           	psect	stringtext8,global,class=STRCODE,delta=2
    13                           	psect	stringtext9,global,class=STRCODE,delta=2
    14                           	psect	stringtext10,global,class=STRCODE,delta=2
    15                           	psect	cinit,global,class=CODE,merge=1,delta=2
    16                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    17                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
    18                           	psect	clrtext,global,class=CODE,delta=2
    19                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    20                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    21                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    22                           	psect	text1,local,class=CODE,merge=1,delta=2
    23                           	psect	text2,local,class=CODE,merge=1,delta=2,group=2
    24                           	psect	text3,local,class=CODE,merge=1,delta=2,group=2
    25                           	psect	text4,local,class=CODE,merge=1,delta=2
    26                           	psect	text5,local,class=CODE,merge=1,delta=2,group=2
    27                           	psect	text6,local,class=CODE,merge=1,delta=2,group=2
    28                           	psect	text7,local,class=CODE,merge=1,delta=2
    29                           	psect	text8,local,class=CODE,merge=1,delta=2
    30                           	psect	text9,local,class=CODE,merge=1,delta=2
    31                           	psect	text10,local,class=CODE,merge=1,delta=2
    32                           	psect	text11,local,class=CODE,merge=1,delta=2
    33                           	dabs	1,0x7E,2
    34  0000                     
    35                           ; Version 1.45
    36                           ; Generated 16/11/2017 GMT
    37                           ; 
    38                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    39                           ; All rights reserved.
    40                           ; 
    41                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    42                           ; 
    43                           ; Redistribution and use in source and binary forms, with or without modification, are
    44                           ; permitted provided that the following conditions are met:
    45                           ; 
    46                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    47                           ;        conditions and the following disclaimer.
    48                           ; 
    49                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    50                           ;        of conditions and the following disclaimer in the documentation and/or other
    51                           ;        materials provided with the distribution.
    52                           ; 
    53                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    54                           ;        software without specific prior written permission.
    55                           ; 
    56                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    57                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    58                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    59                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    60                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    61                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    62                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    63                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    64                           ; 
    65                           ; 
    66                           ; Code-generator required, PIC16F18877 Definitions
    67                           ; 
    68                           ; SFR Addresses
    69  0000                     	;# 
    70  0001                     	;# 
    71  0002                     	;# 
    72  0003                     	;# 
    73  0004                     	;# 
    74  0005                     	;# 
    75  0006                     	;# 
    76  0007                     	;# 
    77  0008                     	;# 
    78  0009                     	;# 
    79  000A                     	;# 
    80  000B                     	;# 
    81  000C                     	;# 
    82  000D                     	;# 
    83  000E                     	;# 
    84  000F                     	;# 
    85  0010                     	;# 
    86  0011                     	;# 
    87  0012                     	;# 
    88  0013                     	;# 
    89  0014                     	;# 
    90  0015                     	;# 
    91  0016                     	;# 
    92  0017                     	;# 
    93  0018                     	;# 
    94  0019                     	;# 
    95  001A                     	;# 
    96  001C                     	;# 
    97  001C                     	;# 
    98  001D                     	;# 
    99  001D                     	;# 
   100  001E                     	;# 
   101  001F                     	;# 
   102  008C                     	;# 
   103  008C                     	;# 
   104  008D                     	;# 
   105  008E                     	;# 
   106  008E                     	;# 
   107  008F                     	;# 
   108  0090                     	;# 
   109  0090                     	;# 
   110  0091                     	;# 
   111  0093                     	;# 
   112  0094                     	;# 
   113  0095                     	;# 
   114  0096                     	;# 
   115  0097                     	;# 
   116  0098                     	;# 
   117  0099                     	;# 
   118  009A                     	;# 
   119  009B                     	;# 
   120  009C                     	;# 
   121  009D                     	;# 
   122  009E                     	;# 
   123  010C                     	;# 
   124  010D                     	;# 
   125  010E                     	;# 
   126  010E                     	;# 
   127  010F                     	;# 
   128  0110                     	;# 
   129  0110                     	;# 
   130  0111                     	;# 
   131  0112                     	;# 
   132  0112                     	;# 
   133  0113                     	;# 
   134  0114                     	;# 
   135  0114                     	;# 
   136  0115                     	;# 
   137  0116                     	;# 
   138  0116                     	;# 
   139  0117                     	;# 
   140  0119                     	;# 
   141  0119                     	;# 
   142  0119                     	;# 
   143  011A                     	;# 
   144  011A                     	;# 
   145  011A                     	;# 
   146  011B                     	;# 
   147  011B                     	;# 
   148  011B                     	;# 
   149  011B                     	;# 
   150  011B                     	;# 
   151  011C                     	;# 
   152  011C                     	;# 
   153  011C                     	;# 
   154  011D                     	;# 
   155  011D                     	;# 
   156  011D                     	;# 
   157  011E                     	;# 
   158  011E                     	;# 
   159  011E                     	;# 
   160  011F                     	;# 
   161  011F                     	;# 
   162  011F                     	;# 
   163  011F                     	;# 
   164  011F                     	;# 
   165  018C                     	;# 
   166  018D                     	;# 
   167  018E                     	;# 
   168  018F                     	;# 
   169  0190                     	;# 
   170  0191                     	;# 
   171  0192                     	;# 
   172  0196                     	;# 
   173  0197                     	;# 
   174  0198                     	;# 
   175  0199                     	;# 
   176  019A                     	;# 
   177  019B                     	;# 
   178  019C                     	;# 
   179  020C                     	;# 
   180  020C                     	;# 
   181  020D                     	;# 
   182  020E                     	;# 
   183  020F                     	;# 
   184  020F                     	;# 
   185  0210                     	;# 
   186  0210                     	;# 
   187  0211                     	;# 
   188  0211                     	;# 
   189  0212                     	;# 
   190  0212                     	;# 
   191  0213                     	;# 
   192  0214                     	;# 
   193  0215                     	;# 
   194  0215                     	;# 
   195  0216                     	;# 
   196  0216                     	;# 
   197  0217                     	;# 
   198  0217                     	;# 
   199  0218                     	;# 
   200  0218                     	;# 
   201  0219                     	;# 
   202  021A                     	;# 
   203  021B                     	;# 
   204  021B                     	;# 
   205  021C                     	;# 
   206  021C                     	;# 
   207  021D                     	;# 
   208  021D                     	;# 
   209  021E                     	;# 
   210  021F                     	;# 
   211  028C                     	;# 
   212  028C                     	;# 
   213  028D                     	;# 
   214  028D                     	;# 
   215  028E                     	;# 
   216  028F                     	;# 
   217  0290                     	;# 
   218  0290                     	;# 
   219  0291                     	;# 
   220  0292                     	;# 
   221  0292                     	;# 
   222  0293                     	;# 
   223  0293                     	;# 
   224  0294                     	;# 
   225  0295                     	;# 
   226  0296                     	;# 
   227  0296                     	;# 
   228  0297                     	;# 
   229  0298                     	;# 
   230  0298                     	;# 
   231  0299                     	;# 
   232  0299                     	;# 
   233  029A                     	;# 
   234  029B                     	;# 
   235  029C                     	;# 
   236  029C                     	;# 
   237  029D                     	;# 
   238  030C                     	;# 
   239  030C                     	;# 
   240  030D                     	;# 
   241  030E                     	;# 
   242  030F                     	;# 
   243  0310                     	;# 
   244  0310                     	;# 
   245  0311                     	;# 
   246  0312                     	;# 
   247  0313                     	;# 
   248  0314                     	;# 
   249  0314                     	;# 
   250  0315                     	;# 
   251  0316                     	;# 
   252  0317                     	;# 
   253  0318                     	;# 
   254  0318                     	;# 
   255  0319                     	;# 
   256  031A                     	;# 
   257  031B                     	;# 
   258  031C                     	;# 
   259  031C                     	;# 
   260  031D                     	;# 
   261  031E                     	;# 
   262  031F                     	;# 
   263  038C                     	;# 
   264  038D                     	;# 
   265  038E                     	;# 
   266  0390                     	;# 
   267  0391                     	;# 
   268  0392                     	;# 
   269  040C                     	;# 
   270  040D                     	;# 
   271  040E                     	;# 
   272  040F                     	;# 
   273  0410                     	;# 
   274  0411                     	;# 
   275  0416                     	;# 
   276  0416                     	;# 
   277  0417                     	;# 
   278  0418                     	;# 
   279  0418                     	;# 
   280  0419                     	;# 
   281  041A                     	;# 
   282  041A                     	;# 
   283  041B                     	;# 
   284  041C                     	;# 
   285  041C                     	;# 
   286  041D                     	;# 
   287  041E                     	;# 
   288  041F                     	;# 
   289  048C                     	;# 
   290  048C                     	;# 
   291  048D                     	;# 
   292  048E                     	;# 
   293  048F                     	;# 
   294  048F                     	;# 
   295  0490                     	;# 
   296  0491                     	;# 
   297  0492                     	;# 
   298  0492                     	;# 
   299  0493                     	;# 
   300  0494                     	;# 
   301  0495                     	;# 
   302  0495                     	;# 
   303  0496                     	;# 
   304  0497                     	;# 
   305  0498                     	;# 
   306  0499                     	;# 
   307  049A                     	;# 
   308  049B                     	;# 
   309  049C                     	;# 
   310  049D                     	;# 
   311  050C                     	;# 
   312  050C                     	;# 
   313  050D                     	;# 
   314  050E                     	;# 
   315  050F                     	;# 
   316  050F                     	;# 
   317  0510                     	;# 
   318  0511                     	;# 
   319  0512                     	;# 
   320  0512                     	;# 
   321  0513                     	;# 
   322  0514                     	;# 
   323  0515                     	;# 
   324  0515                     	;# 
   325  0516                     	;# 
   326  0517                     	;# 
   327  0518                     	;# 
   328  0519                     	;# 
   329  051A                     	;# 
   330  051B                     	;# 
   331  051C                     	;# 
   332  051D                     	;# 
   333  058C                     	;# 
   334  058C                     	;# 
   335  058D                     	;# 
   336  058E                     	;# 
   337  058F                     	;# 
   338  058F                     	;# 
   339  0590                     	;# 
   340  0591                     	;# 
   341  0592                     	;# 
   342  0593                     	;# 
   343  060C                     	;# 
   344  060D                     	;# 
   345  060E                     	;# 
   346  060F                     	;# 
   347  0610                     	;# 
   348  0611                     	;# 
   349  0612                     	;# 
   350  0613                     	;# 
   351  0614                     	;# 
   352  0616                     	;# 
   353  0617                     	;# 
   354  0618                     	;# 
   355  0619                     	;# 
   356  061A                     	;# 
   357  061B                     	;# 
   358  061C                     	;# 
   359  061D                     	;# 
   360  061E                     	;# 
   361  068C                     	;# 
   362  068D                     	;# 
   363  068E                     	;# 
   364  068F                     	;# 
   365  0690                     	;# 
   366  0691                     	;# 
   367  0692                     	;# 
   368  0693                     	;# 
   369  0694                     	;# 
   370  070C                     	;# 
   371  070D                     	;# 
   372  070E                     	;# 
   373  070F                     	;# 
   374  0710                     	;# 
   375  0711                     	;# 
   376  0712                     	;# 
   377  0713                     	;# 
   378  0714                     	;# 
   379  0716                     	;# 
   380  0717                     	;# 
   381  0718                     	;# 
   382  0719                     	;# 
   383  071A                     	;# 
   384  071B                     	;# 
   385  071C                     	;# 
   386  071D                     	;# 
   387  071E                     	;# 
   388  0796                     	;# 
   389  0797                     	;# 
   390  0798                     	;# 
   391  0799                     	;# 
   392  079A                     	;# 
   393  079B                     	;# 
   394  080C                     	;# 
   395  080D                     	;# 
   396  080E                     	;# 
   397  080F                     	;# 
   398  0810                     	;# 
   399  0811                     	;# 
   400  0812                     	;# 
   401  0813                     	;# 
   402  0814                     	;# 
   403  081A                     	;# 
   404  081B                     	;# 
   405  081C                     	;# 
   406  081D                     	;# 
   407  081E                     	;# 
   408  081F                     	;# 
   409  088C                     	;# 
   410  088D                     	;# 
   411  088E                     	;# 
   412  088F                     	;# 
   413  0890                     	;# 
   414  0891                     	;# 
   415  0892                     	;# 
   416  0893                     	;# 
   417  0895                     	;# 
   418  0896                     	;# 
   419  0897                     	;# 
   420  0898                     	;# 
   421  0899                     	;# 
   422  089A                     	;# 
   423  089B                     	;# 
   424  090C                     	;# 
   425  090E                     	;# 
   426  090F                     	;# 
   427  091F                     	;# 
   428  098F                     	;# 
   429  098F                     	;# 
   430  0990                     	;# 
   431  0991                     	;# 
   432  0992                     	;# 
   433  0993                     	;# 
   434  0994                     	;# 
   435  0995                     	;# 
   436  0996                     	;# 
   437  0997                     	;# 
   438  1E0F                     	;# 
   439  1E10                     	;# 
   440  1E11                     	;# 
   441  1E12                     	;# 
   442  1E13                     	;# 
   443  1E14                     	;# 
   444  1E15                     	;# 
   445  1E16                     	;# 
   446  1E17                     	;# 
   447  1E18                     	;# 
   448  1E19                     	;# 
   449  1E1A                     	;# 
   450  1E1B                     	;# 
   451  1E1C                     	;# 
   452  1E1D                     	;# 
   453  1E1E                     	;# 
   454  1E1F                     	;# 
   455  1E20                     	;# 
   456  1E21                     	;# 
   457  1E22                     	;# 
   458  1E23                     	;# 
   459  1E24                     	;# 
   460  1E25                     	;# 
   461  1E26                     	;# 
   462  1E27                     	;# 
   463  1E28                     	;# 
   464  1E29                     	;# 
   465  1E2A                     	;# 
   466  1E2B                     	;# 
   467  1E2C                     	;# 
   468  1E2D                     	;# 
   469  1E2E                     	;# 
   470  1E2F                     	;# 
   471  1E30                     	;# 
   472  1E31                     	;# 
   473  1E32                     	;# 
   474  1E33                     	;# 
   475  1E34                     	;# 
   476  1E35                     	;# 
   477  1E36                     	;# 
   478  1E37                     	;# 
   479  1E8F                     	;# 
   480  1E90                     	;# 
   481  1E91                     	;# 
   482  1E92                     	;# 
   483  1E93                     	;# 
   484  1E94                     	;# 
   485  1E95                     	;# 
   486  1E96                     	;# 
   487  1E97                     	;# 
   488  1E9C                     	;# 
   489  1E9D                     	;# 
   490  1E9E                     	;# 
   491  1EA1                     	;# 
   492  1EA2                     	;# 
   493  1EA3                     	;# 
   494  1EA4                     	;# 
   495  1EA5                     	;# 
   496  1EA9                     	;# 
   497  1EAA                     	;# 
   498  1EAB                     	;# 
   499  1EAC                     	;# 
   500  1EB1                     	;# 
   501  1EB2                     	;# 
   502  1EB3                     	;# 
   503  1EB8                     	;# 
   504  1EB9                     	;# 
   505  1EBA                     	;# 
   506  1EBB                     	;# 
   507  1EBC                     	;# 
   508  1EBD                     	;# 
   509  1EBE                     	;# 
   510  1EC3                     	;# 
   511  1EC5                     	;# 
   512  1EC6                     	;# 
   513  1EC7                     	;# 
   514  1EC8                     	;# 
   515  1EC9                     	;# 
   516  1ECA                     	;# 
   517  1ECB                     	;# 
   518  1ECC                     	;# 
   519  1F10                     	;# 
   520  1F11                     	;# 
   521  1F12                     	;# 
   522  1F13                     	;# 
   523  1F14                     	;# 
   524  1F15                     	;# 
   525  1F16                     	;# 
   526  1F17                     	;# 
   527  1F18                     	;# 
   528  1F19                     	;# 
   529  1F1A                     	;# 
   530  1F1B                     	;# 
   531  1F1C                     	;# 
   532  1F1D                     	;# 
   533  1F1E                     	;# 
   534  1F1F                     	;# 
   535  1F20                     	;# 
   536  1F21                     	;# 
   537  1F22                     	;# 
   538  1F23                     	;# 
   539  1F24                     	;# 
   540  1F25                     	;# 
   541  1F26                     	;# 
   542  1F27                     	;# 
   543  1F28                     	;# 
   544  1F29                     	;# 
   545  1F2A                     	;# 
   546  1F2B                     	;# 
   547  1F2C                     	;# 
   548  1F2D                     	;# 
   549  1F2E                     	;# 
   550  1F2F                     	;# 
   551  1F30                     	;# 
   552  1F31                     	;# 
   553  1F32                     	;# 
   554  1F38                     	;# 
   555  1F39                     	;# 
   556  1F3A                     	;# 
   557  1F3B                     	;# 
   558  1F3C                     	;# 
   559  1F3D                     	;# 
   560  1F3E                     	;# 
   561  1F3F                     	;# 
   562  1F40                     	;# 
   563  1F41                     	;# 
   564  1F43                     	;# 
   565  1F44                     	;# 
   566  1F45                     	;# 
   567  1F46                     	;# 
   568  1F47                     	;# 
   569  1F48                     	;# 
   570  1F49                     	;# 
   571  1F4A                     	;# 
   572  1F4B                     	;# 
   573  1F4C                     	;# 
   574  1F4E                     	;# 
   575  1F4F                     	;# 
   576  1F50                     	;# 
   577  1F51                     	;# 
   578  1F52                     	;# 
   579  1F53                     	;# 
   580  1F54                     	;# 
   581  1F55                     	;# 
   582  1F56                     	;# 
   583  1F57                     	;# 
   584  1F59                     	;# 
   585  1F5A                     	;# 
   586  1F5B                     	;# 
   587  1F5C                     	;# 
   588  1F5D                     	;# 
   589  1F61                     	;# 
   590  1F62                     	;# 
   591  1F64                     	;# 
   592  1F65                     	;# 
   593  1F66                     	;# 
   594  1F67                     	;# 
   595  1F68                     	;# 
   596  1F69                     	;# 
   597  1F6A                     	;# 
   598  1F6B                     	;# 
   599  1F6C                     	;# 
   600  1F6D                     	;# 
   601  1FE4                     	;# 
   602  1FE5                     	;# 
   603  1FE6                     	;# 
   604  1FE7                     	;# 
   605  1FE8                     	;# 
   606  1FE9                     	;# 
   607  1FEA                     	;# 
   608  1FEB                     	;# 
   609  1FED                     	;# 
   610  1FEE                     	;# 
   611  1FEF                     	;# 
   612                           
   613                           	psect	idataBANK0
   614  0F38                     __pidataBANK0:	
   615                           
   616                           ;initializer for _adressRTC_read
   617  0F38  34D1               	retlw	209
   618  0F39  3400               	retlw	0
   619                           
   620                           ;initializer for _adressRTC
   621  0F3A  34D0               	retlw	208
   622  0F3B  3400               	retlw	0
   623                           
   624                           	psect	stringtext1
   625  1000                     __pstringtext1:	
   626  1000                     _dpowers:	
   627  1000  3401               	retlw	1
   628  1001  3400               	retlw	0
   629  1002  340A               	retlw	10
   630  1003  3400               	retlw	0
   631  1004  3464               	retlw	100
   632  1005  3400               	retlw	0
   633  1006  34E8               	retlw	232
   634  1007  3403               	retlw	3
   635  1008  3410               	retlw	16
   636  1009  3427               	retlw	39
   637  100A                     __end_of_dpowers:	
   638  0012                     _TRISBbits	set	18
   639  000F                     _PORTD	set	15
   640  000E                     _PORTC	set	14
   641  0011                     _TRISA	set	17
   642  000C                     _PORTA	set	12
   643  0016                     _LATAbits	set	22
   644  000F                     _PORTDbits	set	15
   645  000E                     _PORTCbits	set	14
   646  0014                     _TRISDbits	set	20
   647  0013                     _TRISCbits	set	19
   648  0197                     _SSP2ADD	set	407
   649  019A                     _SSP2CON1bits	set	410
   650  0199                     _SSP2STATbits	set	409
   651  0196                     _SSP2BUF	set	406
   652  019B                     _SSP2CON2bits	set	411
   653  0893                     _OSCFRQbits	set	2195
   654  1EC9                     _SSP2DATPPS	set	7881
   655  1EC8                     _SSP2CLKPPS	set	7880
   656  1F44                     _WPUBbits	set	8004
   657  1F43                     _ANSELB	set	8003
   658  1F59                     _ANSELD	set	8025
   659  1F4E                     _ANSELCbits	set	8014
   660  1F38                     _ANSELA	set	7992
   661  100A                     STR_10:	
   662  100A  3420               	retlw	32	;' '
   663  100B  3420               	retlw	32	;' '
   664  100C  3420               	retlw	32	;' '
   665  100D  3425               	retlw	37	;'%'
   666  100E  3464               	retlw	100	;'d'
   667  100F  343A               	retlw	58	;':'
   668  1010  3425               	retlw	37	;'%'
   669  1011  3464               	retlw	100	;'d'
   670  1012  343A               	retlw	58	;':'
   671  1013  3425               	retlw	37	;'%'
   672  1014  3464               	retlw	100	;'d'
   673  1015  3400               	retlw	0
   674                           
   675                           	psect	stringtext2
   676  1016                     __pstringtext2:	
   677  1016                     STR_7:	
   678  1016  346D               	retlw	109	;'m'
   679  1017  3469               	retlw	105	;'i'
   680  1018  346E               	retlw	110	;'n'
   681  1019  3420               	retlw	32	;' '
   682  101A  346C               	retlw	108	;'l'
   683  101B  3465               	retlw	101	;'e'
   684  101C  3469               	retlw	105	;'i'
   685  101D  3464               	retlw	100	;'d'
   686  101E  346F               	retlw	111	;'o'
   687  101F  3473               	retlw	115	;'s'
   688  1020  3400               	retlw	0
   689                           
   690                           	psect	stringtext3
   691  1021                     __pstringtext3:	
   692  1021                     STR_11:	
   693  1021  3452               	retlw	82	;'R'
   694  1022  3445               	retlw	69	;'E'
   695  1023  3441               	retlw	65	;'A'
   696  1024  3444               	retlw	68	;'D'
   697  1025  3420               	retlw	32	;' '
   698  1026  3444               	retlw	68	;'D'
   699  1027  344F               	retlw	79	;'O'
   700  1028  344E               	retlw	78	;'N'
   701  1029  3445               	retlw	69	;'E'
   702  102A  3400               	retlw	0
   703                           
   704                           	psect	stringtext4
   705  102B                     __pstringtext4:	
   706  102B                     STR_2:	
   707  102B  3443               	retlw	67	;'C'
   708  102C  344F               	retlw	79	;'O'
   709  102D  344E               	retlw	78	;'N'
   710  102E  3446               	retlw	70	;'F'
   711  102F  3420               	retlw	32	;' '
   712  1030  3444               	retlw	68	;'D'
   713  1031  344F               	retlw	79	;'O'
   714  1032  344E               	retlw	78	;'N'
   715  1033  3445               	retlw	69	;'E'
   716  1034  3400               	retlw	0
   717                           
   718                           	psect	stringtext5
   719  1035                     __pstringtext5:	
   720  1035                     STR_8:	
   721  1035  3468               	retlw	104	;'h'
   722  1036  3472               	retlw	114	;'r'
   723  1037  3420               	retlw	32	;' '
   724  1038  346C               	retlw	108	;'l'
   725  1039  3465               	retlw	101	;'e'
   726  103A  3469               	retlw	105	;'i'
   727  103B  3464               	retlw	100	;'d'
   728  103C  346F               	retlw	111	;'o'
   729  103D  3473               	retlw	115	;'s'
   730  103E  3400               	retlw	0
   731                           
   732                           	psect	stringtext6
   733  103F                     __pstringtext6:	
   734  103F                     STR_5:	
   735  103F  3477               	retlw	119	;'w'
   736  1040  3468               	retlw	104	;'h'
   737  1041  3469               	retlw	105	;'i'
   738  1042  346C               	retlw	108	;'l'
   739  1043  3465               	retlw	101	;'e'
   740  1044  3420               	retlw	32	;' '
   741  1045  3442               	retlw	66	;'B'
   742  1046  3446               	retlw	70	;'F'
   743  1047  3400               	retlw	0
   744                           
   745                           	psect	stringtext7
   746  1048                     __pstringtext7:	
   747  1048                     STR_6:	
   748  1048  3473               	retlw	115	;'s'
   749  1049  3420               	retlw	32	;' '
   750  104A  346C               	retlw	108	;'l'
   751  104B  3465               	retlw	101	;'e'
   752  104C  3469               	retlw	105	;'i'
   753  104D  3464               	retlw	100	;'d'
   754  104E  346F               	retlw	111	;'o'
   755  104F  3473               	retlw	115	;'s'
   756  1050  3400               	retlw	0
   757                           
   758                           	psect	stringtext8
   759  1051                     __pstringtext8:	
   760  1051                     STR_4:	
   761  1051  3452               	retlw	82	;'R'
   762  1052  3445               	retlw	69	;'E'
   763  1053  3453               	retlw	83	;'S'
   764  1054  3454               	retlw	84	;'T'
   765  1055  3441               	retlw	65	;'A'
   766  1056  3452               	retlw	82	;'R'
   767  1057  3400               	retlw	0
   768                           
   769                           	psect	stringtext9
   770  1058                     __pstringtext9:	
   771  1058                     STR_9:	
   772  1058  3453               	retlw	83	;'S'
   773  1059  3454               	retlw	84	;'T'
   774  105A  344F               	retlw	79	;'O'
   775  105B  3450               	retlw	80	;'P'
   776  105C  3400               	retlw	0
   777                           
   778                           	psect	stringtext10
   779  0000                     __pstringtext10:	
   780  1053                     
   781                           ; #config settings
   782  0000                     
   783                           	psect	cinit
   784  07E6                     start_initialization:	
   785  07E6                     __initialization:	
   786                           
   787                           ; Initialize objects allocated to BANK0
   788  07E6  318F  2738  3187   	fcall	__pidataBANK0	;fetch initializer
   789  07E9  00E9               	movwf	__pdataBANK0& (0+127)
   790  07EA  318F  2739  3187   	fcall	__pidataBANK0+1	;fetch initializer
   791  07ED  00EA               	movwf	(__pdataBANK0+1)& (0+127)
   792  07EE  318F  273A  3187   	fcall	__pidataBANK0+2	;fetch initializer
   793  07F1  00EB               	movwf	(__pdataBANK0+2)& (0+127)
   794  07F2  318F  273B  3187   	fcall	__pidataBANK0+3	;fetch initializer
   795  07F5  00EC               	movwf	(__pdataBANK0+3)& (0+127)
   796                           
   797                           ; Clear objects allocated to BANK0
   798  07F6  3020               	movlw	low __pbssBANK0
   799  07F7  0084               	movwf	4
   800  07F8  3000               	movlw	high __pbssBANK0
   801  07F9  0085               	movwf	5
   802  07FA  302A               	movlw	42
   803  07FB  318F  273C         	fcall	clear_ram0
   804  07FD                     end_of_initialization:	
   805                           ;End of C runtime variable initialization code
   806                           
   807  07FD                     __end_of__initialization:	
   808  07FD  0140               	movlb	0
   809  07FE  3183  2B2C         	ljmp	_main	;jump to C main() function
   810                           
   811                           	psect	bssBANK0
   812  0020                     __pbssBANK0:	
   813  0020                     _dhr:	
   814  0020                     	ds	2
   815  0022                     _dmin:	
   816  0022                     	ds	2
   817  0024                     _dseg:	
   818  0024                     	ds	2
   819  0026                     _cyear:	
   820  0026                     	ds	2
   821  0028                     _cmonth:	
   822  0028                     	ds	2
   823  002A                     _cdate:	
   824  002A                     	ds	2
   825  002C                     _cday:	
   826  002C                     	ds	2
   827  002E                     _chr:	
   828  002E                     	ds	2
   829  0030                     _cmin:	
   830  0030                     	ds	2
   831  0032                     _cseg:	
   832  0032                     	ds	2
   833  0034                     _buffer1:	
   834  0034                     	ds	16
   835  0044                     _rhr:	
   836  0044                     	ds	2
   837  0046                     _rmin:	
   838  0046                     	ds	2
   839  0048                     _rseg:	
   840  0048                     	ds	2
   841                           
   842                           	psect	dataBANK0
   843  0069                     __pdataBANK0:	
   844  0069                     _adressRTC_read:	
   845  0069                     	ds	2
   846  006B                     _adressRTC:	
   847  006B                     	ds	2
   848                           
   849                           	psect	clrtext
   850  0F3C                     clear_ram0:	
   851                           ;	Called with FSR0 containing the base address, and
   852                           ;	WREG with the size to clear
   853                           
   854  0F3C  0064               	clrwdt	;clear the watchdog before getting into this loop
   855  0F3D                     clrloop0:	
   856  0F3D  0180               	clrf	0	;clear RAM location pointed to by FSR
   857  0F3E  3101               	addfsr 0,1
   858  0F3F  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
   859  0F40  2F3D               	goto	clrloop0	;have we reached the end yet?
   860  0F41  3400               	retlw	0	;all done for this memory range, return
   861                           
   862                           	psect	cstackCOMMON
   863  0070                     __pcstackCOMMON:	
   864  0070                     ?_Lcd_Cmd:	
   865  0070                     ??_Lcd_Cmd:	
   866                           ; 1 bytes @ 0x0
   867                           
   868  0070                     ?_Lcd_Chr_CP:	
   869                           ; 1 bytes @ 0x0
   870                           
   871  0070                     ??_Lcd_Chr_CP:	
   872                           ; 1 bytes @ 0x0
   873                           
   874  0070                     ?_Lcd_Init:	
   875                           ; 1 bytes @ 0x0
   876                           
   877  0070                     ?___awdiv:	
   878                           ; 1 bytes @ 0x0
   879                           
   880  0070                     ?___lwdiv:	
   881                           ; 2 bytes @ 0x0
   882                           
   883  0070                     ___awdiv@divisor:	
   884                           ; 2 bytes @ 0x0
   885                           
   886  0070                     ___lwdiv@divisor:	
   887                           ; 2 bytes @ 0x0
   888                           
   889                           
   890                           ; 2 bytes @ 0x0
   891  0070                     	ds	2
   892  0072                     Lcd_Chr_CP@data:	
   893  0072                     Lcd_Cmd@data:	
   894                           ; 1 bytes @ 0x2
   895                           
   896  0072                     ___awdiv@dividend:	
   897                           ; 1 bytes @ 0x2
   898                           
   899  0072                     ___lwdiv@dividend:	
   900                           ; 2 bytes @ 0x2
   901                           
   902                           
   903                           ; 2 bytes @ 0x2
   904  0072                     	ds	1
   905  0073                     ??_Lcd_Init:	
   906  0073                     ?_Lcd_Out:	
   907                           ; 1 bytes @ 0x3
   908                           
   909  0073                     ?_Lcd_Out2:	
   910                           ; 1 bytes @ 0x3
   911                           
   912  0073                     Lcd_Out@x:	
   913                           ; 1 bytes @ 0x3
   914                           
   915  0073                     Lcd_Out2@x:	
   916                           ; 1 bytes @ 0x3
   917                           
   918                           
   919                           ; 1 bytes @ 0x3
   920  0073                     	ds	1
   921  0074                     ??___awdiv:	
   922  0074                     ??___lwdiv:	
   923                           ; 1 bytes @ 0x4
   924                           
   925  0074                     Lcd_Init@data:	
   926                           ; 1 bytes @ 0x4
   927                           
   928  0074                     Lcd_Out2@buffer:	
   929                           ; 1 bytes @ 0x4
   930                           
   931  0074                     Lcd_Out@buffer:	
   932                           ; 1 bytes @ 0x4
   933                           
   934                           
   935                           ; 2 bytes @ 0x4
   936  0074                     	ds	1
   937  0075                     ??_Lcd_Out2:	
   938  0075                     ___awdiv@counter:	
   939                           ; 1 bytes @ 0x5
   940                           
   941  0075                     ___lwdiv@quotient:	
   942                           ; 1 bytes @ 0x5
   943                           
   944                           
   945                           ; 2 bytes @ 0x5
   946  0075                     	ds	1
   947  0076                     ??_Lcd_Out:	
   948  0076                     Lcd_Out2@y:	
   949                           ; 1 bytes @ 0x6
   950                           
   951  0076                     ___awdiv@sign:	
   952                           ; 1 bytes @ 0x6
   953                           
   954                           
   955                           ; 1 bytes @ 0x6
   956  0076                     	ds	1
   957  0077                     Lcd_Out@y:	
   958  0077                     Lcd_Out2@data:	
   959                           ; 1 bytes @ 0x7
   960                           
   961  0077                     ___lwdiv@counter:	
   962                           ; 1 bytes @ 0x7
   963                           
   964  0077                     ___awdiv@quotient:	
   965                           ; 1 bytes @ 0x7
   966                           
   967                           
   968                           ; 2 bytes @ 0x7
   969  0077                     	ds	1
   970  0078                     ?___lwmod:	
   971  0078                     Lcd_Out@data:	
   972                           ; 2 bytes @ 0x8
   973                           
   974  0078                     ___lwmod@divisor:	
   975                           ; 1 bytes @ 0x8
   976                           
   977                           
   978                           ; 2 bytes @ 0x8
   979  0078                     	ds	1
   980  0079                     ?___wmul:	
   981  0079                     ___wmul@multiplier:	
   982                           ; 2 bytes @ 0x9
   983                           
   984                           
   985                           ; 2 bytes @ 0x9
   986  0079                     	ds	1
   987  007A                     ___lwmod@dividend:	
   988                           
   989                           ; 2 bytes @ 0xA
   990  007A                     	ds	1
   991  007B                     ___wmul@multiplicand:	
   992                           
   993                           ; 2 bytes @ 0xB
   994  007B                     	ds	1
   995  007C                     ??___lwmod:	
   996                           
   997                           ; 1 bytes @ 0xC
   998  007C                     	ds	1
   999  007D                     ??___wmul:	
  1000  007D                     ___lwmod@counter:	
  1001                           ; 1 bytes @ 0xD
  1002                           
  1003                           
  1004                           ; 1 bytes @ 0xD
  1005  007D                     	ds	1
  1006                           
  1007                           	psect	cstackBANK0
  1008  004A                     __pcstackBANK0:	
  1009  004A                     ?_sprintf:	
  1010  004A                     sprintf@f:	
  1011                           ; 2 bytes @ 0x0
  1012                           
  1013  004A                     ___wmul@product:	
  1014                           ; 2 bytes @ 0x0
  1015                           
  1016                           
  1017                           ; 2 bytes @ 0x0
  1018  004A                     	ds	2
  1019  004C                     ?_crtc:	
  1020  004C                     crtc@seg:	
  1021                           ; 1 bytes @ 0x2
  1022                           
  1023                           
  1024                           ; 2 bytes @ 0x2
  1025  004C                     	ds	2
  1026  004E                     crtc@min:	
  1027                           
  1028                           ; 2 bytes @ 0x4
  1029  004E                     	ds	2
  1030  0050                     crtc@hr:	
  1031                           
  1032                           ; 2 bytes @ 0x6
  1033  0050                     	ds	2
  1034  0052                     ??_sprintf:	
  1035  0052                     crtc@day:	
  1036                           ; 1 bytes @ 0x8
  1037                           
  1038                           
  1039                           ; 2 bytes @ 0x8
  1040  0052                     	ds	2
  1041  0054                     crtc@date:	
  1042                           
  1043                           ; 2 bytes @ 0xA
  1044  0054                     	ds	2
  1045  0056                     sprintf@ap:	
  1046  0056                     crtc@month:	
  1047                           ; 1 bytes @ 0xC
  1048                           
  1049                           
  1050                           ; 2 bytes @ 0xC
  1051  0056                     	ds	1
  1052  0057                     sprintf@flag:	
  1053                           
  1054                           ; 1 bytes @ 0xD
  1055  0057                     	ds	1
  1056  0058                     sprintf@prec:	
  1057  0058                     crtc@year:	
  1058                           ; 1 bytes @ 0xE
  1059                           
  1060                           
  1061                           ; 2 bytes @ 0xE
  1062  0058                     	ds	1
  1063  0059                     sprintf@val:	
  1064                           
  1065                           ; 2 bytes @ 0xF
  1066  0059                     	ds	1
  1067  005A                     ??_crtc:	
  1068                           
  1069                           ; 1 bytes @ 0x10
  1070  005A                     	ds	1
  1071  005B                     sprintf@sp:	
  1072                           
  1073                           ; 1 bytes @ 0x11
  1074  005B                     	ds	1
  1075  005C                     sprintf@c:	
  1076                           
  1077                           ; 1 bytes @ 0x12
  1078  005C                     	ds	4
  1079  0060                     ?_main:	
  1080  0060                     main@argc:	
  1081                           ; 2 bytes @ 0x16
  1082                           
  1083                           
  1084                           ; 2 bytes @ 0x16
  1085  0060                     	ds	2
  1086  0062                     main@argv:	
  1087                           
  1088                           ; 2 bytes @ 0x18
  1089  0062                     	ds	2
  1090  0064                     ??_main:	
  1091                           
  1092                           ; 1 bytes @ 0x1A
  1093  0064                     	ds	5
  1094                           
  1095                           	psect	maintext
  1096  032C                     __pmaintext:	
  1097 ;;
  1098 ;;Main: autosize = 0, tempsize = 5, incstack = 0, save=0
  1099 ;;
  1100 ;; *************** function _main *****************
  1101 ;; Defined at:
  1102 ;;		line 121 in file "main.c"
  1103 ;; Parameters:    Size  Location     Type
  1104 ;;  argc            2   22[BANK0 ] int 
  1105 ;;  argv            2   24[BANK0 ] PTR PTR unsigned char 
  1106 ;; Auto vars:     Size  Location     Type
  1107 ;;		None
  1108 ;; Return value:  Size  Location     Type
  1109 ;;                  2   22[BANK0 ] int 
  1110 ;; Registers used:
  1111 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  1112 ;; Tracked objects:
  1113 ;;		On entry : B3F/0
  1114 ;;		On exit  : 0/0
  1115 ;;		Unchanged: 0/0
  1116 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
  1117 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  1118 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  1119 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  1120 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  1121 ;;Total ram usage:        9 bytes
  1122 ;; Hardware stack levels required when called:    3
  1123 ;; This function calls:
  1124 ;;		_Lcd_Cmd
  1125 ;;		_Lcd_Init
  1126 ;;		_Lcd_Out
  1127 ;;		_Lcd_Out2
  1128 ;;		___wmul
  1129 ;;		_crtc
  1130 ;;		_sprintf
  1131 ;; This function is called by:
  1132 ;;		Startup code after reset
  1133 ;; This function uses a non-reentrant model
  1134 ;;
  1135                           
  1136                           
  1137                           ;psect for function _main
  1138  032C                     _main:	
  1139                           
  1140                           ;main.c: 122: OSCFRQbits.HFFRQ=0b110;
  1141                           
  1142                           ;incstack = 0
  1143                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  1144  032C  0151               	movlb	17	; select bank17
  1145  032D  0813               	movf	19,w	;volatile
  1146  032E  39F8               	andlw	-8
  1147  032F  3806               	iorlw	6
  1148  0330  0093               	movwf	19	;volatile
  1149                           
  1150                           ;main.c: 124: PORTA=0;
  1151  0331  0140               	movlb	0	; select bank0
  1152  0332  018C               	clrf	12	;volatile
  1153                           
  1154                           ;main.c: 125: ANSELA=0;
  1155  0333  017E               	movlb	62	; select bank62
  1156  0334  01B8               	clrf	56	;volatile
  1157                           
  1158                           ;main.c: 126: TRISA=0;
  1159  0335  0140               	movlb	0	; select bank0
  1160  0336  0191               	clrf	17	;volatile
  1161                           
  1162                           ;main.c: 129: PORTC=0;
  1163  0337  018E               	clrf	14	;volatile
  1164                           
  1165                           ;main.c: 130: PORTD=0;
  1166  0338  018F               	clrf	15	;volatile
  1167                           
  1168                           ;main.c: 132: ANSELCbits.ANSC0=0;
  1169  0339  017E               	movlb	62	; select bank62
  1170  033A  104E               	bcf	78,0	;volatile
  1171                           
  1172                           ;main.c: 133: ANSELCbits.ANSC1=0;
  1173  033B  10CE               	bcf	78,1	;volatile
  1174                           
  1175                           ;main.c: 134: ANSELCbits.ANSC2=0;
  1176  033C  114E               	bcf	78,2	;volatile
  1177                           
  1178                           ;main.c: 137: ANSELCbits.ANSC5=0;
  1179  033D  12CE               	bcf	78,5	;volatile
  1180                           
  1181                           ;main.c: 138: ANSELCbits.ANSC6=0;
  1182  033E  134E               	bcf	78,6	;volatile
  1183                           
  1184                           ;main.c: 139: ANSELCbits.ANSC7=0;
  1185  033F  13CE               	bcf	78,7	;volatile
  1186                           
  1187                           ;main.c: 140: ANSELD=0b00000000;
  1188  0340  01D9               	clrf	89	;volatile
  1189                           
  1190                           ;main.c: 150: SSP2CLKPPS=0x09;
  1191  0341  3009               	movlw	9
  1192  0342  017D               	movlb	61	; select bank61
  1193  0343  00C8               	movwf	72	;volatile
  1194                           
  1195                           ;main.c: 151: SSP2DATPPS=0x0A;
  1196  0344  300A               	movlw	10
  1197  0345  00C9               	movwf	73	;volatile
  1198                           
  1199                           ;main.c: 152: ANSELB=0;
  1200  0346  017E               	movlb	62	; select bank62
  1201  0347  01C3               	clrf	67	;volatile
  1202                           
  1203                           ;main.c: 153: TRISBbits.TRISB1=1;
  1204  0348  0140               	movlb	0	; select bank0
  1205  0349  1492               	bsf	18,1	;volatile
  1206                           
  1207                           ;main.c: 154: TRISBbits.TRISB2=1;
  1208  034A  1512               	bsf	18,2	;volatile
  1209                           
  1210                           ;main.c: 155: WPUBbits.WPUB1=1;
  1211  034B  017E               	movlb	62	; select bank62
  1212  034C  14C4               	bsf	68,1	;volatile
  1213                           
  1214                           ;main.c: 156: WPUBbits.WPUB2=1;
  1215  034D  1544               	bsf	68,2	;volatile
  1216                           
  1217                           ;main.c: 158: SSP2CON1bits.SSPEN=1;
  1218  034E  0143               	movlb	3	; select bank3
  1219  034F  169A               	bsf	26,5	;volatile
  1220                           
  1221                           ;main.c: 160: SSP2CON1bits.SSPM3=1 ;
  1222  0350  159A               	bsf	26,3	;volatile
  1223                           
  1224                           ;main.c: 161: SSP2CON1bits.SSPM2=0;
  1225  0351  111A               	bcf	26,2	;volatile
  1226                           
  1227                           ;main.c: 162: SSP2CON1bits.SSPM1=0;
  1228  0352  109A               	bcf	26,1	;volatile
  1229                           
  1230                           ;main.c: 163: SSP2CON1bits.SSPM0=0;
  1231  0353  101A               	bcf	26,0	;volatile
  1232                           
  1233                           ;main.c: 164: SSP2ADD=0x13;
  1234  0354  3013               	movlw	19
  1235  0355  0097               	movwf	23	;volatile
  1236                           
  1237                           ;main.c: 166: Lcd_Init();
  1238  0356  3181  21B6  3183   	fcall	_Lcd_Init
  1239                           
  1240                           ;main.c: 167: Lcd_Cmd(1);
  1241  0359  3001               	movlw	1
  1242  035A  3180  2084  3183   	fcall	_Lcd_Cmd
  1243                           
  1244                           ;main.c: 168: Lcd_Cmd(12);
  1245  035D  300C               	movlw	12
  1246  035E  3180  2084  3183   	fcall	_Lcd_Cmd
  1247                           
  1248                           ;main.c: 169: _delay((unsigned long)((1000)*(32000000/4000.0)));
  1249  0361  3029               	movlw	41
  1250  0362  0140               	movlb	0	; select bank0
  1251  0363  00E5               	movwf	??_main+1
  1252  0364  3096               	movlw	150
  1253  0365  00E4               	movwf	??_main
  1254  0366  307F               	movlw	127
  1255  0367                     u2037:	
  1256  0367  0B89               	decfsz	9,f
  1257  0368  2B67               	goto	u2037
  1258  0369  0BE4               	decfsz	??_main,f
  1259  036A  2B67               	goto	u2037
  1260  036B  0BE5               	decfsz	??_main+1,f
  1261  036C  2B67               	goto	u2037
  1262                           
  1263                           ;main.c: 171: crtc(0,02,20,2,13,11,18);
  1264  036D  3000               	movlw	0
  1265  036E  0140               	movlb	0	; select bank0
  1266  036F  00CC               	movwf	crtc@seg
  1267  0370  00CD               	movwf	crtc@seg+1
  1268  0371  3002               	movlw	2
  1269  0372  00CE               	movwf	crtc@min
  1270  0373  3000               	movlw	0
  1271  0374  00CF               	movwf	crtc@min+1
  1272  0375  3014               	movlw	20
  1273  0376  00D0               	movwf	crtc@hr
  1274  0377  3000               	movlw	0
  1275  0378  00D1               	movwf	crtc@hr+1
  1276  0379  3002               	movlw	2
  1277  037A  00D2               	movwf	crtc@day
  1278  037B  3000               	movlw	0
  1279  037C  00D3               	movwf	crtc@day+1
  1280  037D  300D               	movlw	13
  1281  037E  00D4               	movwf	crtc@date
  1282  037F  3000               	movlw	0
  1283  0380  00D5               	movwf	crtc@date+1
  1284  0381  300B               	movlw	11
  1285  0382  00D6               	movwf	crtc@month
  1286  0383  3000               	movlw	0
  1287  0384  00D7               	movwf	crtc@month+1
  1288  0385  3012               	movlw	18
  1289  0386  00D8               	movwf	crtc@year
  1290  0387  3000               	movlw	0
  1291  0388  00D9               	movwf	crtc@year+1
  1292  0389  3185  2555  3183   	fcall	_crtc
  1293  038C                     l1724:	
  1294                           ;main.c: 173: while(1){
  1295                           
  1296                           
  1297                           ;main.c: 174: SSP2CON2bits.SEN=1;
  1298  038C  0143               	movlb	3	; select bank3
  1299  038D  141B               	bsf	27,0	;volatile
  1300  038E                     l212:	
  1301                           ;main.c: 175: while(SSP2CON2bits.SEN);
  1302                           
  1303  038E  181B               	btfsc	27,0	;volatile
  1304  038F  2B8E               	goto	l212
  1305                           
  1306                           ;main.c: 176: SSP2BUF=adressRTC;
  1307  0390  0140               	movlb	0	; select bank0
  1308  0391  086B               	movf	_adressRTC,w
  1309  0392  0143               	movlb	3	; select bank3
  1310  0393  0096               	movwf	22	;volatile
  1311  0394                     l215:	
  1312                           ;main.c: 177: while(SSP2STATbits.BF);
  1313                           
  1314  0394  1819               	btfsc	25,0	;volatile
  1315  0395  2B94               	goto	l215
  1316  0396                     l218:	
  1317                           ;main.c: 178: while(SSP2STATbits.R_nW);
  1318                           
  1319  0396  1919               	btfsc	25,2	;volatile
  1320  0397  2B96               	goto	l218
  1321                           
  1322                           ;main.c: 180: Lcd_Cmd(1);
  1323  0398  3001               	movlw	1
  1324  0399  3180  2084  3183   	fcall	_Lcd_Cmd
  1325                           
  1326                           ;main.c: 181: Lcd_Out(2, 0, "STAR");
  1327  039C  01F3               	clrf	Lcd_Out@x
  1328  039D  3053               	movlw	low ((STR_4+2)| (0+32768))
  1329  039E  00F4               	movwf	Lcd_Out@buffer
  1330  039F  3090               	movlw	high ((STR_4+2)| (0+32768))
  1331  03A0  00F5               	movwf	Lcd_Out@buffer+1
  1332  03A1  3002               	movlw	2
  1333  03A2  318F  27C9  3183   	fcall	_Lcd_Out
  1334                           
  1335                           ;main.c: 182: _delay((unsigned long)((1000)*(32000000/4000.0)));
  1336  03A5  3029               	movlw	41
  1337  03A6  0140               	movlb	0	; select bank0
  1338  03A7  00E5               	movwf	??_main+1
  1339  03A8  3096               	movlw	150
  1340  03A9  00E4               	movwf	??_main
  1341  03AA  307F               	movlw	127
  1342  03AB                     u2047:	
  1343  03AB  0B89               	decfsz	9,f
  1344  03AC  2BAB               	goto	u2047
  1345  03AD  0BE4               	decfsz	??_main,f
  1346  03AE  2BAB               	goto	u2047
  1347  03AF  0BE5               	decfsz	??_main+1,f
  1348  03B0  2BAB               	goto	u2047
  1349                           
  1350                           ;main.c: 184: SSP2BUF=0x00;
  1351  03B1  0143               	movlb	3	; select bank3
  1352  03B2  0196               	clrf	22	;volatile
  1353  03B3                     l221:	
  1354                           ;main.c: 185: while(SSP2STATbits.BF);
  1355                           
  1356  03B3  1819               	btfsc	25,0	;volatile
  1357  03B4  2BB3               	goto	l221
  1358  03B5                     l224:	
  1359                           ;main.c: 186: while(SSP2STATbits.R_nW);
  1360                           
  1361  03B5  1919               	btfsc	25,2	;volatile
  1362  03B6  2BB5               	goto	l224
  1363                           
  1364                           ;main.c: 187: SSP2CON2bits.RSEN=1;
  1365  03B7  149B               	bsf	27,1	;volatile
  1366  03B8                     l227:	
  1367                           ;main.c: 188: while(SSP2CON2bits.RSEN);
  1368                           
  1369  03B8  189B               	btfsc	27,1	;volatile
  1370  03B9  2BB8               	goto	l227
  1371                           
  1372                           ;main.c: 189: SSP2BUF=adressRTC_read;
  1373  03BA  0140               	movlb	0	; select bank0
  1374  03BB  0869               	movf	_adressRTC_read,w
  1375  03BC  0143               	movlb	3	; select bank3
  1376  03BD  0096               	movwf	22	;volatile
  1377  03BE                     l230:	
  1378                           ;main.c: 190: while(SSP2STATbits.BF);
  1379                           
  1380  03BE  1819               	btfsc	25,0	;volatile
  1381  03BF  2BBE               	goto	l230
  1382  03C0                     l233:	
  1383                           ;main.c: 191: while(SSP2STATbits.R_nW);
  1384                           
  1385  03C0  1919               	btfsc	25,2	;volatile
  1386  03C1  2BC0               	goto	l233
  1387                           
  1388                           ;main.c: 193: Lcd_Cmd(1);
  1389  03C2  3001               	movlw	1
  1390  03C3  3180  2084  3183   	fcall	_Lcd_Cmd
  1391                           
  1392                           ;main.c: 194: Lcd_Out(2, 0, "RESTAR");
  1393  03C6  01F3               	clrf	Lcd_Out@x
  1394  03C7  3051               	movlw	low (STR_4| (0+32768))
  1395  03C8  00F4               	movwf	Lcd_Out@buffer
  1396  03C9  3090               	movlw	high (STR_4| (0+32768))
  1397  03CA  00F5               	movwf	Lcd_Out@buffer+1
  1398  03CB  3002               	movlw	2
  1399  03CC  318F  27C9  3183   	fcall	_Lcd_Out
  1400                           
  1401                           ;main.c: 195: _delay((unsigned long)((1000)*(32000000/4000.0)));
  1402  03CF  3029               	movlw	41
  1403  03D0  0140               	movlb	0	; select bank0
  1404  03D1  00E5               	movwf	??_main+1
  1405  03D2  3096               	movlw	150
  1406  03D3  00E4               	movwf	??_main
  1407  03D4  307F               	movlw	127
  1408  03D5                     u2057:	
  1409  03D5  0B89               	decfsz	9,f
  1410  03D6  2BD5               	goto	u2057
  1411  03D7  0BE4               	decfsz	??_main,f
  1412  03D8  2BD5               	goto	u2057
  1413  03D9  0BE5               	decfsz	??_main+1,f
  1414  03DA  2BD5               	goto	u2057
  1415                           
  1416                           ;main.c: 197: SSP2CON2bits.RCEN=1;
  1417  03DB  0143               	movlb	3	; select bank3
  1418  03DC  159B               	bsf	27,3	;volatile
  1419  03DD                     l236:	
  1420                           ;main.c: 198: while(SSP2STATbits.BF==0);
  1421                           
  1422  03DD  1C19               	btfss	25,0	;volatile
  1423  03DE  2BDD               	goto	l236
  1424                           
  1425                           ;main.c: 200: Lcd_Cmd(1);
  1426  03DF  3001               	movlw	1
  1427  03E0  3180  2084  3183   	fcall	_Lcd_Cmd
  1428                           
  1429                           ;main.c: 201: Lcd_Out(2, 0, "while BF");
  1430  03E3  01F3               	clrf	Lcd_Out@x
  1431  03E4  303F               	movlw	low (STR_5| (0+32768))
  1432  03E5  00F4               	movwf	Lcd_Out@buffer
  1433  03E6  3090               	movlw	high (STR_5| (0+32768))
  1434  03E7  00F5               	movwf	Lcd_Out@buffer+1
  1435  03E8  3002               	movlw	2
  1436  03E9  318F  27C9  3183   	fcall	_Lcd_Out
  1437                           
  1438                           ;main.c: 202: _delay((unsigned long)((1000)*(32000000/4000.0)));
  1439  03EC  3029               	movlw	41
  1440  03ED  0140               	movlb	0	; select bank0
  1441  03EE  00E5               	movwf	??_main+1
  1442  03EF  3096               	movlw	150
  1443  03F0  00E4               	movwf	??_main
  1444  03F1  307F               	movlw	127
  1445  03F2                     u2067:	
  1446  03F2  0B89               	decfsz	9,f
  1447  03F3  2BF2               	goto	u2067
  1448  03F4  0BE4               	decfsz	??_main,f
  1449  03F5  2BF2               	goto	u2067
  1450  03F6  0BE5               	decfsz	??_main+1,f
  1451  03F7  2BF2               	goto	u2067
  1452                           
  1453                           ;main.c: 204: rseg=SSP2BUF;
  1454  03F8  0143               	movlb	3	; select bank3
  1455  03F9  0816               	movf	22,w	;volatile
  1456  03FA  0140               	movlb	0	; select bank0
  1457  03FB  00E4               	movwf	??_main
  1458  03FC  01E5               	clrf	??_main+1
  1459  03FD  0864               	movf	??_main,w
  1460  03FE  00C8               	movwf	_rseg
  1461  03FF  0865               	movf	??_main+1,w
  1462  0400  00C9               	movwf	_rseg+1
  1463                           
  1464                           ;main.c: 205: SSP2CON2bits.ACKDT=0;
  1465  0401  0143               	movlb	3	; select bank3
  1466  0402  129B               	bcf	27,5	;volatile
  1467                           
  1468                           ;main.c: 206: SSP2CON2bits.ACKEN=1;
  1469  0403  161B               	bsf	27,4	;volatile
  1470  0404                     l239:	
  1471                           ;main.c: 207: while(SSP2CON2bits.ACKEN);
  1472                           
  1473  0404  1A1B               	btfsc	27,4	;volatile
  1474  0405  2C04               	goto	l239
  1475                           
  1476                           ;main.c: 209: Lcd_Cmd(1);
  1477  0406  3001               	movlw	1
  1478  0407  3180  2084  3183   	fcall	_Lcd_Cmd
  1479                           
  1480                           ;main.c: 210: Lcd_Out(2, 0, "s leidos");
  1481  040A  01F3               	clrf	Lcd_Out@x
  1482  040B  3048               	movlw	low (STR_6| (0+32768))
  1483  040C  00F4               	movwf	Lcd_Out@buffer
  1484  040D  3090               	movlw	high (STR_6| (0+32768))
  1485  040E  00F5               	movwf	Lcd_Out@buffer+1
  1486  040F  3002               	movlw	2
  1487  0410  318F  27C9  3183   	fcall	_Lcd_Out
  1488                           
  1489                           ;main.c: 211: _delay((unsigned long)((1000)*(32000000/4000.0)));
  1490  0413  3029               	movlw	41
  1491  0414  0140               	movlb	0	; select bank0
  1492  0415  00E5               	movwf	??_main+1
  1493  0416  3096               	movlw	150
  1494  0417  00E4               	movwf	??_main
  1495  0418  307F               	movlw	127
  1496  0419                     u2077:	
  1497  0419  0B89               	decfsz	9,f
  1498  041A  2C19               	goto	u2077
  1499  041B  0BE4               	decfsz	??_main,f
  1500  041C  2C19               	goto	u2077
  1501  041D  0BE5               	decfsz	??_main+1,f
  1502  041E  2C19               	goto	u2077
  1503                           
  1504                           ;main.c: 213: SSP2CON2bits.RCEN=1;
  1505  041F  0143               	movlb	3	; select bank3
  1506  0420  159B               	bsf	27,3	;volatile
  1507  0421                     l242:	
  1508                           ;main.c: 214: while(SSP2STATbits.BF==0);
  1509                           
  1510  0421  1C19               	btfss	25,0	;volatile
  1511  0422  2C21               	goto	l242
  1512                           
  1513                           ;main.c: 215: rmin=SSP2BUF;
  1514  0423  0816               	movf	22,w	;volatile
  1515  0424  0140               	movlb	0	; select bank0
  1516  0425  00E4               	movwf	??_main
  1517  0426  01E5               	clrf	??_main+1
  1518  0427  0864               	movf	??_main,w
  1519  0428  00C6               	movwf	_rmin
  1520  0429  0865               	movf	??_main+1,w
  1521  042A  00C7               	movwf	_rmin+1
  1522                           
  1523                           ;main.c: 216: SSP2CON2bits.ACKDT=0;
  1524  042B  0143               	movlb	3	; select bank3
  1525  042C  129B               	bcf	27,5	;volatile
  1526                           
  1527                           ;main.c: 217: SSP2CON2bits.ACKEN=1;
  1528  042D  161B               	bsf	27,4	;volatile
  1529  042E                     l245:	
  1530                           ;main.c: 218: while(SSP2CON2bits.ACKEN);
  1531                           
  1532  042E  1A1B               	btfsc	27,4	;volatile
  1533  042F  2C2E               	goto	l245
  1534                           
  1535                           ;main.c: 220: Lcd_Cmd(1);
  1536  0430  3001               	movlw	1
  1537  0431  3180  2084  3183   	fcall	_Lcd_Cmd
  1538                           
  1539                           ;main.c: 221: Lcd_Out(2, 0, "min leidos");
  1540  0434  01F3               	clrf	Lcd_Out@x
  1541  0435  3016               	movlw	low (STR_7| (0+32768))
  1542  0436  00F4               	movwf	Lcd_Out@buffer
  1543  0437  3090               	movlw	high (STR_7| (0+32768))
  1544  0438  00F5               	movwf	Lcd_Out@buffer+1
  1545  0439  3002               	movlw	2
  1546  043A  318F  27C9  3183   	fcall	_Lcd_Out
  1547                           
  1548                           ;main.c: 222: _delay((unsigned long)((1000)*(32000000/4000.0)));
  1549  043D  3029               	movlw	41
  1550  043E  0140               	movlb	0	; select bank0
  1551  043F  00E5               	movwf	??_main+1
  1552  0440  3096               	movlw	150
  1553  0441  00E4               	movwf	??_main
  1554  0442  307F               	movlw	127
  1555  0443                     u2087:	
  1556  0443  0B89               	decfsz	9,f
  1557  0444  2C43               	goto	u2087
  1558  0445  0BE4               	decfsz	??_main,f
  1559  0446  2C43               	goto	u2087
  1560  0447  0BE5               	decfsz	??_main+1,f
  1561  0448  2C43               	goto	u2087
  1562                           
  1563                           ;main.c: 224: SSP2CON2bits.RCEN=1;
  1564  0449  0143               	movlb	3	; select bank3
  1565  044A  159B               	bsf	27,3	;volatile
  1566  044B                     l248:	
  1567                           ;main.c: 225: while(SSP2STATbits.BF==0);
  1568                           
  1569  044B  1C19               	btfss	25,0	;volatile
  1570  044C  2C4B               	goto	l248
  1571                           
  1572                           ;main.c: 226: rhr=SSP2BUF;
  1573  044D  0816               	movf	22,w	;volatile
  1574  044E  0140               	movlb	0	; select bank0
  1575  044F  00E4               	movwf	??_main
  1576  0450  01E5               	clrf	??_main+1
  1577  0451  0864               	movf	??_main,w
  1578  0452  00C4               	movwf	_rhr
  1579  0453  0865               	movf	??_main+1,w
  1580  0454  00C5               	movwf	_rhr+1
  1581                           
  1582                           ;main.c: 227: SSP2CON2bits.ACKDT=1;
  1583  0455  0143               	movlb	3	; select bank3
  1584  0456  169B               	bsf	27,5	;volatile
  1585                           
  1586                           ;main.c: 228: SSP2CON2bits.ACKEN=1;
  1587  0457  161B               	bsf	27,4	;volatile
  1588  0458                     l251:	
  1589                           ;main.c: 229: while(SSP2CON2bits.ACKEN);
  1590                           
  1591  0458  1A1B               	btfsc	27,4	;volatile
  1592  0459  2C58               	goto	l251
  1593                           
  1594                           ;main.c: 231: Lcd_Cmd(1);
  1595  045A  3001               	movlw	1
  1596  045B  3180  2084  3183   	fcall	_Lcd_Cmd
  1597                           
  1598                           ;main.c: 232: Lcd_Out(2, 0, "hr leidos");
  1599  045E  01F3               	clrf	Lcd_Out@x
  1600  045F  3035               	movlw	low (STR_8| (0+32768))
  1601  0460  00F4               	movwf	Lcd_Out@buffer
  1602  0461  3090               	movlw	high (STR_8| (0+32768))
  1603  0462  00F5               	movwf	Lcd_Out@buffer+1
  1604  0463  3002               	movlw	2
  1605  0464  318F  27C9  3183   	fcall	_Lcd_Out
  1606                           
  1607                           ;main.c: 233: _delay((unsigned long)((1000)*(32000000/4000.0)));
  1608  0467  3029               	movlw	41
  1609  0468  0140               	movlb	0	; select bank0
  1610  0469  00E5               	movwf	??_main+1
  1611  046A  3096               	movlw	150
  1612  046B  00E4               	movwf	??_main
  1613  046C  307F               	movlw	127
  1614  046D                     u2097:	
  1615  046D  0B89               	decfsz	9,f
  1616  046E  2C6D               	goto	u2097
  1617  046F  0BE4               	decfsz	??_main,f
  1618  0470  2C6D               	goto	u2097
  1619  0471  0BE5               	decfsz	??_main+1,f
  1620  0472  2C6D               	goto	u2097
  1621                           
  1622                           ;main.c: 235: SSP2CON2bits.PEN=1;
  1623  0473  0143               	movlb	3	; select bank3
  1624  0474  151B               	bsf	27,2	;volatile
  1625  0475                     l254:	
  1626                           ;main.c: 236: while(SSP2CON2bits.PEN);
  1627                           
  1628  0475  191B               	btfsc	27,2	;volatile
  1629  0476  2C75               	goto	l254
  1630                           
  1631                           ;main.c: 238: Lcd_Cmd(1);
  1632  0477  3001               	movlw	1
  1633  0478  3180  2084  3183   	fcall	_Lcd_Cmd
  1634                           
  1635                           ;main.c: 239: Lcd_Out(2, 0, "STOP");
  1636  047B  01F3               	clrf	Lcd_Out@x
  1637  047C  3058               	movlw	low (STR_9| (0+32768))
  1638  047D  00F4               	movwf	Lcd_Out@buffer
  1639  047E  3090               	movlw	high (STR_9| (0+32768))
  1640  047F  00F5               	movwf	Lcd_Out@buffer+1
  1641  0480  3002               	movlw	2
  1642  0481  318F  27C9  3183   	fcall	_Lcd_Out
  1643                           
  1644                           ;main.c: 240: _delay((unsigned long)((1000)*(32000000/4000.0)));
  1645  0484  3029               	movlw	41
  1646  0485  0140               	movlb	0	; select bank0
  1647  0486  00E5               	movwf	??_main+1
  1648  0487  3096               	movlw	150
  1649  0488  00E4               	movwf	??_main
  1650  0489  307F               	movlw	127
  1651  048A                     u2107:	
  1652  048A  0B89               	decfsz	9,f
  1653  048B  2C8A               	goto	u2107
  1654  048C  0BE4               	decfsz	??_main,f
  1655  048D  2C8A               	goto	u2107
  1656  048E  0BE5               	decfsz	??_main+1,f
  1657  048F  2C8A               	goto	u2107
  1658                           
  1659                           ;main.c: 242: dseg=((0b01110000 & rseg)>>4)*10+(0b00001111 & rseg);
  1660  0490  300F               	movlw	15
  1661  0491  0140               	movlb	0	; select bank0
  1662  0492  0548               	andwf	_rseg,w
  1663  0493  00E4               	movwf	??_main
  1664  0494  3000               	movlw	0
  1665  0495  0549               	andwf	_rseg+1,w
  1666  0496  00E5               	movwf	??_main+1
  1667  0497  0849               	movf	_rseg+1,w
  1668  0498  00E7               	movwf	??_main+3
  1669  0499  0848               	movf	_rseg,w
  1670  049A  00E6               	movwf	??_main+2
  1671  049B  3004               	movlw	4
  1672  049C  00E8               	movwf	??_main+4
  1673  049D                     u1995:	
  1674  049D  0D67               	rlf	??_main+3,w
  1675  049E  0CE7               	rrf	??_main+3,f
  1676  049F  0CE6               	rrf	??_main+2,f
  1677  04A0  0BE8               	decfsz	??_main+4,f
  1678  04A1  2C9D               	goto	u1995
  1679  04A2  3007               	movlw	7
  1680  04A3  0566               	andwf	??_main+2,w
  1681  04A4  00F9               	movwf	___wmul@multiplier
  1682  04A5  3000               	movlw	0
  1683  04A6  0567               	andwf	??_main+3,w
  1684  04A7  00FA               	movwf	___wmul@multiplier+1
  1685  04A8  300A               	movlw	10
  1686  04A9  00FB               	movwf	___wmul@multiplicand
  1687  04AA  3000               	movlw	0
  1688  04AB  00FC               	movwf	___wmul@multiplicand+1
  1689  04AC  318F  2742  3183   	fcall	___wmul
  1690  04AF  0140               	movlb	0	; select bank0
  1691  04B0  0864               	movf	??_main,w
  1692  04B1  0779               	addwf	?___wmul,w
  1693  04B2  00A4               	movwf	_dseg
  1694  04B3  0865               	movf	??_main+1,w
  1695  04B4  3D7A               	addwfc	?___wmul+1,w
  1696  04B5  00A5               	movwf	_dseg+1
  1697                           
  1698                           ;main.c: 243: dmin=((0b01110000 & rmin)>>4)*10+(0b00001111 & rmin);
  1699  04B6  300F               	movlw	15
  1700  04B7  0546               	andwf	_rmin,w
  1701  04B8  00E4               	movwf	??_main
  1702  04B9  3000               	movlw	0
  1703  04BA  0547               	andwf	_rmin+1,w
  1704  04BB  00E5               	movwf	??_main+1
  1705  04BC  0847               	movf	_rmin+1,w
  1706  04BD  00E7               	movwf	??_main+3
  1707  04BE  0846               	movf	_rmin,w
  1708  04BF  00E6               	movwf	??_main+2
  1709  04C0  3004               	movlw	4
  1710  04C1  00E8               	movwf	??_main+4
  1711  04C2                     u2005:	
  1712  04C2  0D67               	rlf	??_main+3,w
  1713  04C3  0CE7               	rrf	??_main+3,f
  1714  04C4  0CE6               	rrf	??_main+2,f
  1715  04C5  0BE8               	decfsz	??_main+4,f
  1716  04C6  2CC2               	goto	u2005
  1717  04C7  3007               	movlw	7
  1718  04C8  0566               	andwf	??_main+2,w
  1719  04C9  00F9               	movwf	___wmul@multiplier
  1720  04CA  3000               	movlw	0
  1721  04CB  0567               	andwf	??_main+3,w
  1722  04CC  00FA               	movwf	___wmul@multiplier+1
  1723  04CD  300A               	movlw	10
  1724  04CE  00FB               	movwf	___wmul@multiplicand
  1725  04CF  3000               	movlw	0
  1726  04D0  00FC               	movwf	___wmul@multiplicand+1
  1727  04D1  318F  2742  3183   	fcall	___wmul
  1728  04D4  0140               	movlb	0	; select bank0
  1729  04D5  0864               	movf	??_main,w
  1730  04D6  0779               	addwf	?___wmul,w
  1731  04D7  00A2               	movwf	_dmin
  1732  04D8  0865               	movf	??_main+1,w
  1733  04D9  3D7A               	addwfc	?___wmul+1,w
  1734  04DA  00A3               	movwf	_dmin+1
  1735                           
  1736                           ;main.c: 244: dhr=((0b01110000 & rhr)>>4)*10+(0b00001111 & rhr);
  1737  04DB  300F               	movlw	15
  1738  04DC  0544               	andwf	_rhr,w
  1739  04DD  00E4               	movwf	??_main
  1740  04DE  3000               	movlw	0
  1741  04DF  0545               	andwf	_rhr+1,w
  1742  04E0  00E5               	movwf	??_main+1
  1743  04E1  0845               	movf	_rhr+1,w
  1744  04E2  00E7               	movwf	??_main+3
  1745  04E3  0844               	movf	_rhr,w
  1746  04E4  00E6               	movwf	??_main+2
  1747  04E5  3004               	movlw	4
  1748  04E6  00E8               	movwf	??_main+4
  1749  04E7                     u2015:	
  1750  04E7  0D67               	rlf	??_main+3,w
  1751  04E8  0CE7               	rrf	??_main+3,f
  1752  04E9  0CE6               	rrf	??_main+2,f
  1753  04EA  0BE8               	decfsz	??_main+4,f
  1754  04EB  2CE7               	goto	u2015
  1755  04EC  3007               	movlw	7
  1756  04ED  0566               	andwf	??_main+2,w
  1757  04EE  00F9               	movwf	___wmul@multiplier
  1758  04EF  3000               	movlw	0
  1759  04F0  0567               	andwf	??_main+3,w
  1760  04F1  00FA               	movwf	___wmul@multiplier+1
  1761  04F2  300A               	movlw	10
  1762  04F3  00FB               	movwf	___wmul@multiplicand
  1763  04F4  3000               	movlw	0
  1764  04F5  00FC               	movwf	___wmul@multiplicand+1
  1765  04F6  318F  2742  3183   	fcall	___wmul
  1766  04F9  0140               	movlb	0	; select bank0
  1767  04FA  0864               	movf	??_main,w
  1768  04FB  0779               	addwf	?___wmul,w
  1769  04FC  00A0               	movwf	_dhr
  1770  04FD  0865               	movf	??_main+1,w
  1771  04FE  3D7A               	addwfc	?___wmul+1,w
  1772  04FF  00A1               	movwf	_dhr+1
  1773                           
  1774                           ;main.c: 245: if(dseg==9){LATAbits.LATA0=LATAbits.LATA0+1;}
  1775  0500  3009               	movlw	9
  1776  0501  0624               	xorwf	_dseg,w
  1777  0502  0425               	iorwf	_dseg+1,w
  1778  0503  1D03               	btfss	3,2
  1779  0504  2D0E               	goto	l1810
  1780  0505  0816               	movf	22,w	;volatile
  1781  0506  3901               	andlw	1
  1782  0507  3E01               	addlw	1
  1783  0508  00E4               	movwf	??_main
  1784  0509  0816               	movf	22,w	;volatile
  1785  050A  0664               	xorwf	??_main,w
  1786  050B  39FE               	andlw	-2
  1787  050C  0664               	xorwf	??_main,w
  1788  050D  0096               	movwf	22	;volatile
  1789  050E                     l1810:	
  1790                           
  1791                           ;main.c: 246: sprintf(buffer1,"   %d:%d:%d",dhr,dmin,dseg);
  1792  050E  300A               	movlw	low (STR_10| (0+32768))
  1793  050F  00CA               	movwf	sprintf@f
  1794  0510  3090               	movlw	high (STR_10| (0+32768))
  1795  0511  00CB               	movwf	sprintf@f+1
  1796  0512  0821               	movf	_dhr+1,w
  1797  0513  00CD               	movwf	?_sprintf+3
  1798  0514  0820               	movf	_dhr,w
  1799  0515  00CC               	movwf	?_sprintf+2
  1800  0516  0823               	movf	_dmin+1,w
  1801  0517  00CF               	movwf	?_sprintf+5
  1802  0518  0822               	movf	_dmin,w
  1803  0519  00CE               	movwf	?_sprintf+4
  1804  051A  0825               	movf	_dseg+1,w
  1805  051B  00D1               	movwf	?_sprintf+7
  1806  051C  0824               	movf	_dseg,w
  1807  051D  00D0               	movwf	?_sprintf+6
  1808  051E  3034               	movlw	(low (_buffer1| 0))& (0+255)
  1809  051F  3182  225F  3183   	fcall	_sprintf
  1810                           
  1811                           ;main.c: 247: Lcd_Out2(1, 1, buffer1);
  1812  0522  01F3               	clrf	Lcd_Out2@x
  1813  0523  0AF3               	incf	Lcd_Out2@x,f
  1814  0524  3034               	movlw	(low (_buffer1| 0))& (0+255)
  1815  0525  0140               	movlb	0	; select bank0
  1816  0526  00E4               	movwf	??_main
  1817  0527  0864               	movf	??_main,w
  1818  0528  00F4               	movwf	Lcd_Out2@buffer
  1819  0529  3001               	movlw	1
  1820  052A  318F  2794  3183   	fcall	_Lcd_Out2
  1821                           
  1822                           ;main.c: 248: _delay((unsigned long)((2000)*(32000000/4000.0)));
  1823  052D  3052               	movlw	82
  1824  052E  0140               	movlb	0	; select bank0
  1825  052F  00E5               	movwf	??_main+1
  1826  0530  302B               	movlw	43
  1827  0531  00E4               	movwf	??_main
  1828  0532  3000               	movlw	0
  1829  0533                     u2117:	
  1830  0533  0B89               	decfsz	9,f
  1831  0534  2D33               	goto	u2117
  1832  0535  0BE4               	decfsz	??_main,f
  1833  0536  2D33               	goto	u2117
  1834  0537  0BE5               	decfsz	??_main+1,f
  1835  0538  2D33               	goto	u2117
  1836  0539  0000               	nop
  1837                           
  1838                           ;main.c: 250: Lcd_Cmd(1);
  1839  053A  3001               	movlw	1
  1840  053B  3180  2084  3183   	fcall	_Lcd_Cmd
  1841                           
  1842                           ;main.c: 251: Lcd_Out(2, 0, "READ DONE");
  1843  053E  01F3               	clrf	Lcd_Out@x
  1844  053F  3021               	movlw	low (STR_11| (0+32768))
  1845  0540  00F4               	movwf	Lcd_Out@buffer
  1846  0541  3090               	movlw	high (STR_11| (0+32768))
  1847  0542  00F5               	movwf	Lcd_Out@buffer+1
  1848  0543  3002               	movlw	2
  1849  0544  318F  27C9  3183   	fcall	_Lcd_Out
  1850                           
  1851                           ;main.c: 252: _delay((unsigned long)((1500)*(32000000/4000.0)));
  1852  0547  303D               	movlw	61
  1853  0548  0140               	movlb	0	; select bank0
  1854  0549  00E5               	movwf	??_main+1
  1855  054A  30E1               	movlw	225
  1856  054B  00E4               	movwf	??_main
  1857  054C  303F               	movlw	63
  1858  054D                     u2127:	
  1859  054D  0B89               	decfsz	9,f
  1860  054E  2D4D               	goto	u2127
  1861  054F  0BE4               	decfsz	??_main,f
  1862  0550  2D4D               	goto	u2127
  1863  0551  0BE5               	decfsz	??_main+1,f
  1864  0552  2D4D               	goto	u2127
  1865  0553  3200               	nop2
  1866  0554  2B8C               	goto	l1724
  1867  0555                     __end_of_main:	
  1868                           ;main.c: 255: }
  1869                           ;main.c: 256: return (0);
  1870                           ;	Return value of _main is never used
  1871                           
  1872                           
  1873                           	psect	text1
  1874  025F                     __ptext1:	
  1875 ;; *************** function _sprintf *****************
  1876 ;; Defined at:
  1877 ;;		line 492 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\doprnt.c"
  1878 ;; Parameters:    Size  Location     Type
  1879 ;;  sp              1    wreg     PTR unsigned char 
  1880 ;;		 -> buffer1(16), 
  1881 ;;  f               2    0[BANK0 ] PTR const unsigned char 
  1882 ;;		 -> STR_10(12), 
  1883 ;; Auto vars:     Size  Location     Type
  1884 ;;  sp              1   17[BANK0 ] PTR unsigned char 
  1885 ;;		 -> buffer1(16), 
  1886 ;;  tmpval          4    0        struct .
  1887 ;;  val             2   15[BANK0 ] unsigned int 
  1888 ;;  cp              2    0        PTR const unsigned char 
  1889 ;;  len             2    0        unsigned int 
  1890 ;;  c               1   18[BANK0 ] char 
  1891 ;;  prec            1   14[BANK0 ] char 
  1892 ;;  flag            1   13[BANK0 ] unsigned char 
  1893 ;;  ap              1   12[BANK0 ] PTR void [1]
  1894 ;;		 -> ?_sprintf(2), 
  1895 ;; Return value:  Size  Location     Type
  1896 ;;                  2    0[BANK0 ] int 
  1897 ;; Registers used:
  1898 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  1899 ;; Tracked objects:
  1900 ;;		On entry : 0/0
  1901 ;;		On exit  : 0/0
  1902 ;;		Unchanged: 0/0
  1903 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
  1904 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  1905 ;;      Locals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  1906 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  1907 ;;      Totals:         0      19       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  1908 ;;Total ram usage:       19 bytes
  1909 ;; Hardware stack levels used:    1
  1910 ;; Hardware stack levels required when called:    1
  1911 ;; This function calls:
  1912 ;;		___lwdiv
  1913 ;;		___lwmod
  1914 ;; This function is called by:
  1915 ;;		_main
  1916 ;; This function uses a non-reentrant model
  1917 ;;
  1918                           
  1919                           
  1920                           ;psect for function _sprintf
  1921  025F                     _sprintf:	
  1922                           
  1923                           ;incstack = 0
  1924                           ; Regs used in _sprintf: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  1925                           ;sprintf@sp stored from wreg
  1926  025F  0140               	movlb	0	; select bank0
  1927  0260  00DB               	movwf	sprintf@sp
  1928                           
  1929                           ;doprnt.c: 494: va_list ap;
  1930                           ;doprnt.c: 499: signed char c;
  1931                           ;doprnt.c: 506: signed char prec;
  1932                           ;doprnt.c: 508: unsigned char flag;
  1933                           ;doprnt.c: 523: union {
  1934                           ;doprnt.c: 524: unsigned long vd;
  1935                           ;doprnt.c: 525: double integ;
  1936                           ;doprnt.c: 526: } tmpval;
  1937                           ;doprnt.c: 528: unsigned int val;
  1938                           ;doprnt.c: 529: unsigned len;
  1939                           ;doprnt.c: 530: const char * cp;
  1940                           ;doprnt.c: 533: *ap = __va_start();
  1941  0261  304C               	movlw	(low ((?_sprintf| 0+2)))& (0+255)
  1942  0262  00D2               	movwf	??_sprintf
  1943  0263  0852               	movf	??_sprintf,w
  1944  0264  00D6               	movwf	sprintf@ap
  1945  0265                     l1656:	
  1946                           ;doprnt.c: 536: while(c = *f++) {
  1947                           
  1948  0265  084B               	movf	sprintf@f+1,w
  1949  0266  00D3               	movwf	??_sprintf+1
  1950  0267  084A               	movf	sprintf@f,w
  1951  0268  00D2               	movwf	??_sprintf
  1952  0269  0ACA               	incf	sprintf@f,f
  1953  026A  1903               	skipnz
  1954  026B  0ACB               	incf	sprintf@f+1,f
  1955  026C  0852               	movf	??_sprintf,w
  1956  026D  0084               	movwf	4
  1957  026E  0853               	movf	??_sprintf+1,w
  1958  026F  0085               	movwf	5
  1959  0270  0800               	movf	0,w	;code access
  1960  0271  00D4               	movwf	??_sprintf+2
  1961  0272  0854               	movf	??_sprintf+2,w
  1962  0273  00DC               	movwf	sprintf@c
  1963  0274  085C               	movf	sprintf@c,w
  1964  0275  1903               	btfsc	3,2
  1965  0276  2B27               	goto	l1658
  1966                           
  1967                           ;doprnt.c: 538: if(c != '%')
  1968  0277  3025               	movlw	37
  1969  0278  065C               	xorwf	sprintf@c,w
  1970  0279  1903               	btfsc	3,2
  1971  027A  2A87               	goto	l1612
  1972                           
  1973                           ;doprnt.c: 540: {
  1974                           ;doprnt.c: 541: ((*sp++ = (c)));
  1975  027B  085C               	movf	sprintf@c,w
  1976  027C  00D2               	movwf	??_sprintf
  1977  027D  085B               	movf	sprintf@sp,w
  1978  027E  0086               	movwf	6
  1979  027F  0187               	clrf	7
  1980  0280  0852               	movf	??_sprintf,w
  1981  0281  0081               	movwf	1
  1982  0282  3001               	movlw	1
  1983  0283  00D2               	movwf	??_sprintf
  1984  0284  0852               	movf	??_sprintf,w
  1985  0285  07DB               	addwf	sprintf@sp,f
  1986                           
  1987                           ;doprnt.c: 542: continue;
  1988  0286  2A65               	goto	l1656
  1989  0287                     l1612:	
  1990                           
  1991                           ;doprnt.c: 543: }
  1992                           ;doprnt.c: 548: flag = 0;
  1993  0287  01D7               	clrf	sprintf@flag
  1994                           
  1995                           ;doprnt.c: 822: }
  1996                           
  1997                           ;doprnt.c: 813: continue;
  1998                           
  1999                           ;doprnt.c: 802: default:
  2000                           
  2001                           ;doprnt.c: 698: case 'i':
  2002                           ;doprnt.c: 699: break;
  2003                           
  2004                           ;doprnt.c: 697: case 'd':
  2005                           
  2006                           ;doprnt.c: 638: goto alldone;
  2007                           
  2008                           ;doprnt.c: 637: case 0:
  2009                           
  2010                           ;doprnt.c: 635: switch(c = *f++) {
  2011  0288  084B               	movf	sprintf@f+1,w
  2012  0289  00D3               	movwf	??_sprintf+1
  2013  028A  084A               	movf	sprintf@f,w
  2014  028B  00D2               	movwf	??_sprintf
  2015  028C  0ACA               	incf	sprintf@f,f
  2016  028D  1903               	skipnz
  2017  028E  0ACB               	incf	sprintf@f+1,f
  2018  028F  0852               	movf	??_sprintf,w
  2019  0290  0084               	movwf	4
  2020  0291  0853               	movf	??_sprintf+1,w
  2021  0292  0085               	movwf	5
  2022  0293  0800               	movf	0,w	;code access
  2023  0294  00DC               	movwf	sprintf@c
  2024                           
  2025                           ; Switch size 1, requested type "space"
  2026                           ; Number of cases is 3, Range of values is 0 to 105
  2027                           ; switch strategies available:
  2028                           ; Name         Instructions Cycles
  2029                           ; simple_byte           10     6 (average)
  2030                           ; direct_byte          218     6 (fixed)
  2031                           ; jumptable            260     6 (fixed)
  2032                           ;	Chosen strategy is simple_byte
  2033  0295  3A00               	xorlw	0	; case 0
  2034  0296  1903               	skipnz
  2035  0297  2B27               	goto	l1658
  2036  0298  3A64               	xorlw	100	; case 100
  2037  0299  1903               	skipnz
  2038  029A  2A9F               	goto	l1618
  2039  029B  3A0D               	xorlw	13	; case 105
  2040  029C  1903               	skipnz
  2041  029D  2A9F               	goto	l1618
  2042  029E  2A65               	goto	l1656
  2043  029F                     l1618:	
  2044                           
  2045                           ;doprnt.c: 1253: {
  2046                           ;doprnt.c: 1259: val = (int)(*(int *)__va_arg((*(int **)ap), (int)0));
  2047  029F  0856               	movf	sprintf@ap,w
  2048  02A0  0086               	movwf	6
  2049  02A1  0187               	clrf	7
  2050  02A2  3F40               	moviw [0]fsr1
  2051  02A3  00D9               	movwf	sprintf@val
  2052  02A4  3F41               	moviw [1]fsr1
  2053  02A5  00DA               	movwf	sprintf@val+1
  2054  02A6  3002               	movlw	2
  2055  02A7  00D2               	movwf	??_sprintf
  2056  02A8  0852               	movf	??_sprintf,w
  2057  02A9  07D6               	addwf	sprintf@ap,f
  2058                           
  2059                           ;doprnt.c: 1261: if((int)val < 0) {
  2060  02AA  1FDA               	btfss	sprintf@val+1,7
  2061  02AB  2AB5               	goto	l1628
  2062                           
  2063                           ;doprnt.c: 1262: flag |= 0x03;
  2064  02AC  3003               	movlw	3
  2065  02AD  00D2               	movwf	??_sprintf
  2066  02AE  0852               	movf	??_sprintf,w
  2067  02AF  04D7               	iorwf	sprintf@flag,f
  2068                           
  2069                           ;doprnt.c: 1263: val = -val;
  2070  02B0  09D9               	comf	sprintf@val,f
  2071  02B1  09DA               	comf	sprintf@val+1,f
  2072  02B2  0AD9               	incf	sprintf@val,f
  2073  02B3  1903               	skipnz
  2074  02B4  0ADA               	incf	sprintf@val+1,f
  2075  02B5                     l1628:	
  2076                           
  2077                           ;doprnt.c: 1264: }
  2078                           ;doprnt.c: 1266: }
  2079                           ;doprnt.c: 1305: for(c = 1 ; c != sizeof dpowers/sizeof dpowers[0] ; c++)
  2080  02B5  01DC               	clrf	sprintf@c
  2081  02B6  0ADC               	incf	sprintf@c,f
  2082  02B7  3005               	movlw	5
  2083  02B8  065C               	xorwf	sprintf@c,w
  2084  02B9  1903               	btfsc	3,2
  2085  02BA  2ADA               	goto	l1640
  2086  02BB                     l1634:	
  2087                           
  2088                           ;doprnt.c: 1306: if(val < dpowers[c])
  2089  02BB  085C               	movf	sprintf@c,w
  2090  02BC  00D2               	movwf	??_sprintf
  2091  02BD  01D3               	clrf	??_sprintf+1
  2092  02BE  35D2               	lslf	??_sprintf,f
  2093  02BF  0DD3               	rlf	??_sprintf+1,f
  2094  02C0  3000               	movlw	low (_dpowers| (0+32768))
  2095  02C1  0752               	addwf	??_sprintf,w
  2096  02C2  0084               	movwf	4
  2097  02C3  3090               	movlw	high (_dpowers| (0+32768))
  2098  02C4  3D53               	addwfc	??_sprintf+1,w
  2099  02C5  0085               	movwf	5
  2100  02C6  3F00               	moviw [0]fsr0
  2101  02C7  00D4               	movwf	??_sprintf+2
  2102  02C8  3F01               	moviw [1]fsr0
  2103  02C9  00D5               	movwf	??_sprintf+3
  2104  02CA  0855               	movf	??_sprintf+3,w
  2105  02CB  025A               	subwf	sprintf@val+1,w
  2106  02CC  1D03               	skipz
  2107  02CD  2AD0               	goto	u1795
  2108  02CE  0854               	movf	??_sprintf+2,w
  2109  02CF  0259               	subwf	sprintf@val,w
  2110  02D0                     u1795:	
  2111  02D0  1C03               	btfss	3,0
  2112  02D1  2ADA               	goto	l1640
  2113                           
  2114                           ;doprnt.c: 1307: break;
  2115  02D2  3001               	movlw	1
  2116  02D3  00D2               	movwf	??_sprintf
  2117  02D4  0852               	movf	??_sprintf,w
  2118  02D5  07DC               	addwf	sprintf@c,f
  2119  02D6  3005               	movlw	5
  2120  02D7  065C               	xorwf	sprintf@c,w
  2121  02D8  1D03               	btfss	3,2
  2122  02D9  2ABB               	goto	l1634
  2123  02DA                     l1640:	
  2124                           
  2125                           ;doprnt.c: 1422: {
  2126                           ;doprnt.c: 1438: if(flag & 0x03)
  2127  02DA  0857               	movf	sprintf@flag,w
  2128  02DB  3903               	andlw	3
  2129  02DC  1903               	btfsc	3,2
  2130  02DD  2AE9               	goto	l1646
  2131                           
  2132                           ;doprnt.c: 1439: ((*sp++ = ('-')));
  2133  02DE  302D               	movlw	45
  2134  02DF  00D2               	movwf	??_sprintf
  2135  02E0  085B               	movf	sprintf@sp,w
  2136  02E1  0086               	movwf	6
  2137  02E2  0187               	clrf	7
  2138  02E3  0852               	movf	??_sprintf,w
  2139  02E4  0081               	movwf	1
  2140  02E5  3001               	movlw	1
  2141  02E6  00D2               	movwf	??_sprintf
  2142  02E7  0852               	movf	??_sprintf,w
  2143  02E8  07DB               	addwf	sprintf@sp,f
  2144  02E9                     l1646:	
  2145                           
  2146                           ;doprnt.c: 1469: }
  2147                           ;doprnt.c: 1472: prec = c;
  2148  02E9  085C               	movf	sprintf@c,w
  2149  02EA  00D2               	movwf	??_sprintf
  2150  02EB  0852               	movf	??_sprintf,w
  2151  02EC  00D8               	movwf	sprintf@prec
  2152  02ED                     l1654:	
  2153                           ;doprnt.c: 1474: while(prec--) {
  2154                           
  2155  02ED  30FF               	movlw	255
  2156  02EE  00D2               	movwf	??_sprintf
  2157  02EF  0852               	movf	??_sprintf,w
  2158  02F0  07D8               	addwf	sprintf@prec,f
  2159  02F1  0A58               	incf	sprintf@prec,w
  2160  02F2  1903               	btfsc	3,2
  2161  02F3  2A65               	goto	l1656
  2162                           
  2163                           ;doprnt.c: 1478: {
  2164                           ;doprnt.c: 1489: c = (val / dpowers[prec]) % 10 + '0';
  2165  02F4  300A               	movlw	10
  2166  02F5  00F8               	movwf	___lwmod@divisor
  2167  02F6  3000               	movlw	0
  2168  02F7  00F9               	movwf	___lwmod@divisor+1
  2169  02F8  0858               	movf	sprintf@prec,w
  2170  02F9  00D2               	movwf	??_sprintf
  2171  02FA  01D3               	clrf	??_sprintf+1
  2172  02FB  35D2               	lslf	??_sprintf,f
  2173  02FC  0DD3               	rlf	??_sprintf+1,f
  2174  02FD  3000               	movlw	low (_dpowers| (0+32768))
  2175  02FE  0752               	addwf	??_sprintf,w
  2176  02FF  0084               	movwf	4
  2177  0300  3090               	movlw	high (_dpowers| (0+32768))
  2178  0301  3D53               	addwfc	??_sprintf+1,w
  2179  0302  0085               	movwf	5
  2180  0303  3F00               	moviw [0]fsr0
  2181  0304  00F0               	movwf	___lwdiv@divisor
  2182  0305  3F01               	moviw [1]fsr0
  2183  0306  00F1               	movwf	___lwdiv@divisor+1
  2184  0307  085A               	movf	sprintf@val+1,w
  2185  0308  00F3               	movwf	___lwdiv@dividend+1
  2186  0309  0859               	movf	sprintf@val,w
  2187  030A  00F2               	movwf	___lwdiv@dividend
  2188  030B  318F  2760  3182   	fcall	___lwdiv
  2189  030E  0871               	movf	?___lwdiv+1,w
  2190  030F  00FB               	movwf	___lwmod@dividend+1
  2191  0310  0870               	movf	?___lwdiv,w
  2192  0311  00FA               	movwf	___lwmod@dividend
  2193  0312  3180  2007  3182   	fcall	___lwmod
  2194  0315  0878               	movf	?___lwmod,w
  2195  0316  3E30               	addlw	48
  2196  0317  0140               	movlb	0	; select bank0
  2197  0318  00D4               	movwf	??_sprintf+2
  2198  0319  0854               	movf	??_sprintf+2,w
  2199  031A  00DC               	movwf	sprintf@c
  2200                           
  2201                           ;doprnt.c: 1523: }
  2202                           ;doprnt.c: 1524: ((*sp++ = (c)));
  2203  031B  085C               	movf	sprintf@c,w
  2204  031C  00D2               	movwf	??_sprintf
  2205  031D  085B               	movf	sprintf@sp,w
  2206  031E  0086               	movwf	6
  2207  031F  0187               	clrf	7
  2208  0320  0852               	movf	??_sprintf,w
  2209  0321  0081               	movwf	1
  2210  0322  3001               	movlw	1
  2211  0323  00D2               	movwf	??_sprintf
  2212  0324  0852               	movf	??_sprintf,w
  2213  0325  07DB               	addwf	sprintf@sp,f
  2214  0326  2AED               	goto	l1654
  2215  0327                     l1658:	
  2216                           ;doprnt.c: 1525: }
  2217                           ;doprnt.c: 1533: }
  2218                           ;doprnt.c: 1535: alldone:
  2219                           
  2220                           
  2221                           ;doprnt.c: 1538: *sp = 0;
  2222  0327  085B               	movf	sprintf@sp,w
  2223  0328  0086               	movwf	6
  2224  0329  0187               	clrf	7
  2225  032A  0181               	clrf	1
  2226  032B  0008               	return
  2227  032C                     __end_of_sprintf:	
  2228                           ;doprnt.c: 1540: return 0;
  2229                           ;	Return value of _sprintf is never used
  2230                           
  2231                           
  2232                           	psect	text2
  2233  0007                     __ptext2:	
  2234 ;; *************** function ___lwmod *****************
  2235 ;; Defined at:
  2236 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\lwmod.c"
  2237 ;; Parameters:    Size  Location     Type
  2238 ;;  divisor         2    8[COMMON] unsigned int 
  2239 ;;  dividend        2   10[COMMON] unsigned int 
  2240 ;; Auto vars:     Size  Location     Type
  2241 ;;  counter         1   13[COMMON] unsigned char 
  2242 ;; Return value:  Size  Location     Type
  2243 ;;                  2    8[COMMON] unsigned int 
  2244 ;; Registers used:
  2245 ;;		wreg, status,2, status,0
  2246 ;; Tracked objects:
  2247 ;;		On entry : 0/0
  2248 ;;		On exit  : 0/0
  2249 ;;		Unchanged: 0/0
  2250 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
  2251 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  2252 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  2253 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  2254 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  2255 ;;Total ram usage:        6 bytes
  2256 ;; Hardware stack levels used:    1
  2257 ;; This function calls:
  2258 ;;		Nothing
  2259 ;; This function is called by:
  2260 ;;		_sprintf
  2261 ;; This function uses a non-reentrant model
  2262 ;;
  2263                           
  2264                           
  2265                           ;psect for function ___lwmod
  2266  0007                     ___lwmod:	
  2267                           
  2268                           ;incstack = 0
  2269                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  2270  0007  0878               	movf	___lwmod@divisor,w
  2271  0008  0479               	iorwf	___lwmod@divisor+1,w
  2272  0009  1903               	btfsc	3,2
  2273  000A  282E               	goto	l1456
  2274  000B  01FD               	clrf	___lwmod@counter
  2275  000C  0AFD               	incf	___lwmod@counter,f
  2276  000D                     l1446:	
  2277  000D  1BF9               	btfsc	___lwmod@divisor+1,7
  2278  000E  2819               	goto	l1448
  2279  000F  3001               	movlw	1
  2280  0010                     u1395:	
  2281  0010  35F8               	lslf	___lwmod@divisor,f
  2282  0011  0DF9               	rlf	___lwmod@divisor+1,f
  2283  0012  0B89               	decfsz	9,f
  2284  0013  2810               	goto	u1395
  2285  0014  3001               	movlw	1
  2286  0015  00FC               	movwf	??___lwmod
  2287  0016  087C               	movf	??___lwmod,w
  2288  0017  07FD               	addwf	___lwmod@counter,f
  2289  0018  280D               	goto	l1446
  2290  0019                     l1448:	
  2291  0019  0879               	movf	___lwmod@divisor+1,w
  2292  001A  027B               	subwf	___lwmod@dividend+1,w
  2293  001B  1D03               	skipz
  2294  001C  281F               	goto	u1415
  2295  001D  0878               	movf	___lwmod@divisor,w
  2296  001E  027A               	subwf	___lwmod@dividend,w
  2297  001F                     u1415:	
  2298  001F  1C03               	skipc
  2299  0020  2825               	goto	l1452
  2300  0021  0878               	movf	___lwmod@divisor,w
  2301  0022  02FA               	subwf	___lwmod@dividend,f
  2302  0023  0879               	movf	___lwmod@divisor+1,w
  2303  0024  3BFB               	subwfb	___lwmod@dividend+1,f
  2304  0025                     l1452:	
  2305  0025  3001               	movlw	1
  2306  0026                     u1425:	
  2307  0026  36F9               	lsrf	___lwmod@divisor+1,f
  2308  0027  0CF8               	rrf	___lwmod@divisor,f
  2309  0028  0B89               	decfsz	9,f
  2310  0029  2826               	goto	u1425
  2311  002A  3001               	movlw	1
  2312  002B  02FD               	subwf	___lwmod@counter,f
  2313  002C  1D03               	btfss	3,2
  2314  002D  2819               	goto	l1448
  2315  002E                     l1456:	
  2316  002E  087B               	movf	___lwmod@dividend+1,w
  2317  002F  00F9               	movwf	?___lwmod+1
  2318  0030  087A               	movf	___lwmod@dividend,w
  2319  0031  00F8               	movwf	?___lwmod
  2320  0032  0008               	return
  2321  0033                     __end_of___lwmod:	
  2322                           
  2323                           	psect	text3
  2324  0F60                     __ptext3:	
  2325 ;; *************** function ___lwdiv *****************
  2326 ;; Defined at:
  2327 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\lwdiv.c"
  2328 ;; Parameters:    Size  Location     Type
  2329 ;;  divisor         2    0[COMMON] unsigned int 
  2330 ;;  dividend        2    2[COMMON] unsigned int 
  2331 ;; Auto vars:     Size  Location     Type
  2332 ;;  quotient        2    5[COMMON] unsigned int 
  2333 ;;  counter         1    7[COMMON] unsigned char 
  2334 ;; Return value:  Size  Location     Type
  2335 ;;                  2    0[COMMON] unsigned int 
  2336 ;; Registers used:
  2337 ;;		wreg, status,2, status,0
  2338 ;; Tracked objects:
  2339 ;;		On entry : 0/0
  2340 ;;		On exit  : 0/0
  2341 ;;		Unchanged: 0/0
  2342 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
  2343 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  2344 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  2345 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  2346 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  2347 ;;Total ram usage:        8 bytes
  2348 ;; Hardware stack levels used:    1
  2349 ;; This function calls:
  2350 ;;		Nothing
  2351 ;; This function is called by:
  2352 ;;		_sprintf
  2353 ;; This function uses a non-reentrant model
  2354 ;;
  2355                           
  2356                           
  2357                           ;psect for function ___lwdiv
  2358  0F60                     ___lwdiv:	
  2359                           
  2360                           ;incstack = 0
  2361                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  2362  0F60  01F5               	clrf	___lwdiv@quotient
  2363  0F61  01F6               	clrf	___lwdiv@quotient+1
  2364  0F62  0870               	movf	___lwdiv@divisor,w
  2365  0F63  0471               	iorwf	___lwdiv@divisor+1,w
  2366  0F64  1903               	btfsc	3,2
  2367  0F65  2F8F               	goto	l1434
  2368  0F66  01F7               	clrf	___lwdiv@counter
  2369  0F67  0AF7               	incf	___lwdiv@counter,f
  2370  0F68                     l1422:	
  2371  0F68  1BF1               	btfsc	___lwdiv@divisor+1,7
  2372  0F69  2F74               	goto	l1424
  2373  0F6A  3001               	movlw	1
  2374  0F6B                     u1325:	
  2375  0F6B  35F0               	lslf	___lwdiv@divisor,f
  2376  0F6C  0DF1               	rlf	___lwdiv@divisor+1,f
  2377  0F6D  0B89               	decfsz	9,f
  2378  0F6E  2F6B               	goto	u1325
  2379  0F6F  3001               	movlw	1
  2380  0F70  00F4               	movwf	??___lwdiv
  2381  0F71  0874               	movf	??___lwdiv,w
  2382  0F72  07F7               	addwf	___lwdiv@counter,f
  2383  0F73  2F68               	goto	l1422
  2384  0F74                     l1424:	
  2385  0F74  3001               	movlw	1
  2386  0F75                     u1345:	
  2387  0F75  35F5               	lslf	___lwdiv@quotient,f
  2388  0F76  0DF6               	rlf	___lwdiv@quotient+1,f
  2389  0F77  0B89               	decfsz	9,f
  2390  0F78  2F75               	goto	u1345
  2391  0F79  0871               	movf	___lwdiv@divisor+1,w
  2392  0F7A  0273               	subwf	___lwdiv@dividend+1,w
  2393  0F7B  1D03               	skipz
  2394  0F7C  2F7F               	goto	u1355
  2395  0F7D  0870               	movf	___lwdiv@divisor,w
  2396  0F7E  0272               	subwf	___lwdiv@dividend,w
  2397  0F7F                     u1355:	
  2398  0F7F  1C03               	skipc
  2399  0F80  2F86               	goto	l1430
  2400  0F81  0870               	movf	___lwdiv@divisor,w
  2401  0F82  02F2               	subwf	___lwdiv@dividend,f
  2402  0F83  0871               	movf	___lwdiv@divisor+1,w
  2403  0F84  3BF3               	subwfb	___lwdiv@dividend+1,f
  2404  0F85  1475               	bsf	___lwdiv@quotient,0
  2405  0F86                     l1430:	
  2406  0F86  3001               	movlw	1
  2407  0F87                     u1365:	
  2408  0F87  36F1               	lsrf	___lwdiv@divisor+1,f
  2409  0F88  0CF0               	rrf	___lwdiv@divisor,f
  2410  0F89  0B89               	decfsz	9,f
  2411  0F8A  2F87               	goto	u1365
  2412  0F8B  3001               	movlw	1
  2413  0F8C  02F7               	subwf	___lwdiv@counter,f
  2414  0F8D  1D03               	btfss	3,2
  2415  0F8E  2F74               	goto	l1424
  2416  0F8F                     l1434:	
  2417  0F8F  0876               	movf	___lwdiv@quotient+1,w
  2418  0F90  00F1               	movwf	?___lwdiv+1
  2419  0F91  0875               	movf	___lwdiv@quotient,w
  2420  0F92  00F0               	movwf	?___lwdiv
  2421  0F93  0008               	return
  2422  0F94                     __end_of___lwdiv:	
  2423                           
  2424                           	psect	text4
  2425  0555                     __ptext4:	
  2426 ;; *************** function _crtc *****************
  2427 ;; Defined at:
  2428 ;;		line 24 in file "main.c"
  2429 ;; Parameters:    Size  Location     Type
  2430 ;;  seg             2    2[BANK0 ] int 
  2431 ;;  min             2    4[BANK0 ] int 
  2432 ;;  hr              2    6[BANK0 ] int 
  2433 ;;  day             2    8[BANK0 ] int 
  2434 ;;  date            2   10[BANK0 ] int 
  2435 ;;  month           2   12[BANK0 ] int 
  2436 ;;  year            2   14[BANK0 ] int 
  2437 ;; Auto vars:     Size  Location     Type
  2438 ;;		None
  2439 ;; Return value:  Size  Location     Type
  2440 ;;                  1    wreg      void 
  2441 ;; Registers used:
  2442 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2443 ;; Tracked objects:
  2444 ;;		On entry : 0/0
  2445 ;;		On exit  : 0/0
  2446 ;;		Unchanged: 0/0
  2447 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
  2448 ;;      Params:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  2449 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  2450 ;;      Temps:          0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  2451 ;;      Totals:         0      20       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  2452 ;;Total ram usage:       20 bytes
  2453 ;; Hardware stack levels used:    1
  2454 ;; Hardware stack levels required when called:    2
  2455 ;; This function calls:
  2456 ;;		_Lcd_Cmd
  2457 ;;		_Lcd_Out
  2458 ;;		___awdiv
  2459 ;;		___wmul
  2460 ;; This function is called by:
  2461 ;;		_main
  2462 ;; This function uses a non-reentrant model
  2463 ;;
  2464                           
  2465                           
  2466                           ;psect for function _crtc
  2467  0555                     _crtc:	
  2468                           
  2469                           ;main.c: 27: if(seg<10){
  2470                           
  2471                           ;incstack = 0
  2472                           ; Regs used in _crtc: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2473  0555  0140               	movlb	0	; select bank0
  2474  0556  084D               	movf	crtc@seg+1,w
  2475  0557  3A80               	xorlw	128
  2476  0558  00DA               	movwf	??_crtc
  2477  0559  3080               	movlw	128
  2478  055A  025A               	subwf	??_crtc,w
  2479  055B  1D03               	skipz
  2480  055C  2D5F               	goto	u1475
  2481  055D  300A               	movlw	10
  2482  055E  024C               	subwf	crtc@seg,w
  2483  055F                     u1475:	
  2484  055F  1803               	skipnc
  2485  0560  2D67               	goto	l1536
  2486                           
  2487                           ;main.c: 28: cseg=0b0000000+seg;
  2488  0561  0140               	movlb	0	; select bank0
  2489  0562  084D               	movf	crtc@seg+1,w
  2490  0563  00B3               	movwf	_cseg+1
  2491  0564  084C               	movf	crtc@seg,w
  2492  0565  00B2               	movwf	_cseg
  2493                           
  2494                           ;main.c: 29: }else{
  2495  0566  2DAB               	goto	l1538
  2496  0567                     l1536:	
  2497                           
  2498                           ;main.c: 30: cseg=((seg/10)<<4)+(seg-((seg/10)*10));
  2499  0567  300A               	movlw	10
  2500  0568  00F0               	movwf	___awdiv@divisor
  2501  0569  3000               	movlw	0
  2502  056A  00F1               	movwf	___awdiv@divisor+1
  2503  056B  0140               	movlb	0	; select bank0
  2504  056C  084D               	movf	crtc@seg+1,w
  2505  056D  00F3               	movwf	___awdiv@dividend+1
  2506  056E  084C               	movf	crtc@seg,w
  2507  056F  00F2               	movwf	___awdiv@dividend
  2508  0570  3180  2033  3185   	fcall	___awdiv
  2509  0573  0871               	movf	?___awdiv+1,w
  2510  0574  00FA               	movwf	___wmul@multiplier+1
  2511  0575  0870               	movf	?___awdiv,w
  2512  0576  00F9               	movwf	___wmul@multiplier
  2513  0577  300A               	movlw	10
  2514  0578  00FB               	movwf	___wmul@multiplicand
  2515  0579  3000               	movlw	0
  2516  057A  00FC               	movwf	___wmul@multiplicand+1
  2517  057B  318F  2742  3185   	fcall	___wmul
  2518  057E  0979               	comf	?___wmul,w
  2519  057F  0140               	movlb	0	; select bank0
  2520  0580  00DA               	movwf	??_crtc
  2521  0581  097A               	comf	?___wmul+1,w
  2522  0582  00DB               	movwf	??_crtc+1
  2523  0583  0ADA               	incf	??_crtc,f
  2524  0584  1903               	skipnz
  2525  0585  0ADB               	incf	??_crtc+1,f
  2526  0586  300A               	movlw	10
  2527  0587  00F0               	movwf	___awdiv@divisor
  2528  0588  3000               	movlw	0
  2529  0589  00F1               	movwf	___awdiv@divisor+1
  2530  058A  084D               	movf	crtc@seg+1,w
  2531  058B  00F3               	movwf	___awdiv@dividend+1
  2532  058C  084C               	movf	crtc@seg,w
  2533  058D  00F2               	movwf	___awdiv@dividend
  2534  058E  3180  2033  3185   	fcall	___awdiv
  2535  0591  0870               	movf	?___awdiv,w
  2536  0592  0140               	movlb	0	; select bank0
  2537  0593  00DC               	movwf	??_crtc+2
  2538  0594  0871               	movf	?___awdiv+1,w
  2539  0595  00DD               	movwf	??_crtc+3
  2540  0596  0EDC               	swapf	??_crtc+2,f
  2541  0597  0EDD               	swapf	??_crtc+3,f
  2542  0598  30F0               	movlw	240
  2543  0599  05DD               	andwf	??_crtc+3,f
  2544  059A  085C               	movf	??_crtc+2,w
  2545  059B  390F               	andlw	15
  2546  059C  04DD               	iorwf	??_crtc+3,f
  2547  059D  30F0               	movlw	240
  2548  059E  05DC               	andwf	??_crtc+2,f
  2549  059F  085A               	movf	??_crtc,w
  2550  05A0  075C               	addwf	??_crtc+2,w
  2551  05A1  00DE               	movwf	??_crtc+4
  2552  05A2  085B               	movf	??_crtc+1,w
  2553  05A3  3D5D               	addwfc	??_crtc+3,w
  2554  05A4  00DF               	movwf	??_crtc+5
  2555  05A5  084C               	movf	crtc@seg,w
  2556  05A6  075E               	addwf	??_crtc+4,w
  2557  05A7  00B2               	movwf	_cseg
  2558  05A8  084D               	movf	crtc@seg+1,w
  2559  05A9  3D5F               	addwfc	??_crtc+5,w
  2560  05AA  00B3               	movwf	_cseg+1
  2561  05AB                     l1538:	
  2562                           
  2563                           ;main.c: 34: }
  2564                           ;main.c: 36: if(min<10){
  2565  05AB  084F               	movf	crtc@min+1,w
  2566  05AC  3A80               	xorlw	128
  2567  05AD  00DA               	movwf	??_crtc
  2568  05AE  3080               	movlw	128
  2569  05AF  025A               	subwf	??_crtc,w
  2570  05B0  1D03               	skipz
  2571  05B1  2DB4               	goto	u1485
  2572  05B2  300A               	movlw	10
  2573  05B3  024E               	subwf	crtc@min,w
  2574  05B4                     u1485:	
  2575  05B4  1803               	skipnc
  2576  05B5  2DBC               	goto	l1542
  2577                           
  2578                           ;main.c: 37: cmin=min;
  2579  05B6  0140               	movlb	0	; select bank0
  2580  05B7  084F               	movf	crtc@min+1,w
  2581  05B8  00B1               	movwf	_cmin+1
  2582  05B9  084E               	movf	crtc@min,w
  2583  05BA  00B0               	movwf	_cmin
  2584                           
  2585                           ;main.c: 38: }else{
  2586  05BB  2E00               	goto	l1544
  2587  05BC                     l1542:	
  2588                           
  2589                           ;main.c: 39: cmin=((min/10)<<4)+(min-((min/10)*10));
  2590  05BC  300A               	movlw	10
  2591  05BD  00F0               	movwf	___awdiv@divisor
  2592  05BE  3000               	movlw	0
  2593  05BF  00F1               	movwf	___awdiv@divisor+1
  2594  05C0  0140               	movlb	0	; select bank0
  2595  05C1  084F               	movf	crtc@min+1,w
  2596  05C2  00F3               	movwf	___awdiv@dividend+1
  2597  05C3  084E               	movf	crtc@min,w
  2598  05C4  00F2               	movwf	___awdiv@dividend
  2599  05C5  3180  2033  3185   	fcall	___awdiv
  2600  05C8  0871               	movf	?___awdiv+1,w
  2601  05C9  00FA               	movwf	___wmul@multiplier+1
  2602  05CA  0870               	movf	?___awdiv,w
  2603  05CB  00F9               	movwf	___wmul@multiplier
  2604  05CC  300A               	movlw	10
  2605  05CD  00FB               	movwf	___wmul@multiplicand
  2606  05CE  3000               	movlw	0
  2607  05CF  00FC               	movwf	___wmul@multiplicand+1
  2608  05D0  318F  2742  3185   	fcall	___wmul
  2609  05D3  0979               	comf	?___wmul,w
  2610  05D4  0140               	movlb	0	; select bank0
  2611  05D5  00DA               	movwf	??_crtc
  2612  05D6  097A               	comf	?___wmul+1,w
  2613  05D7  00DB               	movwf	??_crtc+1
  2614  05D8  0ADA               	incf	??_crtc,f
  2615  05D9  1903               	skipnz
  2616  05DA  0ADB               	incf	??_crtc+1,f
  2617  05DB  300A               	movlw	10
  2618  05DC  00F0               	movwf	___awdiv@divisor
  2619  05DD  3000               	movlw	0
  2620  05DE  00F1               	movwf	___awdiv@divisor+1
  2621  05DF  084F               	movf	crtc@min+1,w
  2622  05E0  00F3               	movwf	___awdiv@dividend+1
  2623  05E1  084E               	movf	crtc@min,w
  2624  05E2  00F2               	movwf	___awdiv@dividend
  2625  05E3  3180  2033  3185   	fcall	___awdiv
  2626  05E6  0870               	movf	?___awdiv,w
  2627  05E7  0140               	movlb	0	; select bank0
  2628  05E8  00DC               	movwf	??_crtc+2
  2629  05E9  0871               	movf	?___awdiv+1,w
  2630  05EA  00DD               	movwf	??_crtc+3
  2631  05EB  0EDC               	swapf	??_crtc+2,f
  2632  05EC  0EDD               	swapf	??_crtc+3,f
  2633  05ED  30F0               	movlw	240
  2634  05EE  05DD               	andwf	??_crtc+3,f
  2635  05EF  085C               	movf	??_crtc+2,w
  2636  05F0  390F               	andlw	15
  2637  05F1  04DD               	iorwf	??_crtc+3,f
  2638  05F2  30F0               	movlw	240
  2639  05F3  05DC               	andwf	??_crtc+2,f
  2640  05F4  085A               	movf	??_crtc,w
  2641  05F5  075C               	addwf	??_crtc+2,w
  2642  05F6  00DE               	movwf	??_crtc+4
  2643  05F7  085B               	movf	??_crtc+1,w
  2644  05F8  3D5D               	addwfc	??_crtc+3,w
  2645  05F9  00DF               	movwf	??_crtc+5
  2646  05FA  084E               	movf	crtc@min,w
  2647  05FB  075E               	addwf	??_crtc+4,w
  2648  05FC  00B0               	movwf	_cmin
  2649  05FD  084F               	movf	crtc@min+1,w
  2650  05FE  3D5F               	addwfc	??_crtc+5,w
  2651  05FF  00B1               	movwf	_cmin+1
  2652  0600                     l1544:	
  2653                           
  2654                           ;main.c: 40: }
  2655                           ;main.c: 42: if(hr<10){
  2656  0600  0851               	movf	crtc@hr+1,w
  2657  0601  3A80               	xorlw	128
  2658  0602  00DA               	movwf	??_crtc
  2659  0603  3080               	movlw	128
  2660  0604  025A               	subwf	??_crtc,w
  2661  0605  1D03               	skipz
  2662  0606  2E09               	goto	u1495
  2663  0607  300A               	movlw	10
  2664  0608  0250               	subwf	crtc@hr,w
  2665  0609                     u1495:	
  2666  0609  1803               	skipnc
  2667  060A  2E11               	goto	l1548
  2668                           
  2669                           ;main.c: 43: chr=0b00000000+hr;
  2670  060B  0140               	movlb	0	; select bank0
  2671  060C  0851               	movf	crtc@hr+1,w
  2672  060D  00AF               	movwf	_chr+1
  2673  060E  0850               	movf	crtc@hr,w
  2674  060F  00AE               	movwf	_chr
  2675                           
  2676                           ;main.c: 45: }else{
  2677  0610  2E55               	goto	l1550
  2678  0611                     l1548:	
  2679                           
  2680                           ;main.c: 46: chr=((hr/10)<<4)+(hr-((hr/10)*10));
  2681  0611  300A               	movlw	10
  2682  0612  00F0               	movwf	___awdiv@divisor
  2683  0613  3000               	movlw	0
  2684  0614  00F1               	movwf	___awdiv@divisor+1
  2685  0615  0140               	movlb	0	; select bank0
  2686  0616  0851               	movf	crtc@hr+1,w
  2687  0617  00F3               	movwf	___awdiv@dividend+1
  2688  0618  0850               	movf	crtc@hr,w
  2689  0619  00F2               	movwf	___awdiv@dividend
  2690  061A  3180  2033  3185   	fcall	___awdiv
  2691  061D  0871               	movf	?___awdiv+1,w
  2692  061E  00FA               	movwf	___wmul@multiplier+1
  2693  061F  0870               	movf	?___awdiv,w
  2694  0620  00F9               	movwf	___wmul@multiplier
  2695  0621  300A               	movlw	10
  2696  0622  00FB               	movwf	___wmul@multiplicand
  2697  0623  3000               	movlw	0
  2698  0624  00FC               	movwf	___wmul@multiplicand+1
  2699  0625  318F  2742  3185   	fcall	___wmul
  2700  0628  0979               	comf	?___wmul,w
  2701  0629  0140               	movlb	0	; select bank0
  2702  062A  00DA               	movwf	??_crtc
  2703  062B  097A               	comf	?___wmul+1,w
  2704  062C  00DB               	movwf	??_crtc+1
  2705  062D  0ADA               	incf	??_crtc,f
  2706  062E  1903               	skipnz
  2707  062F  0ADB               	incf	??_crtc+1,f
  2708  0630  300A               	movlw	10
  2709  0631  00F0               	movwf	___awdiv@divisor
  2710  0632  3000               	movlw	0
  2711  0633  00F1               	movwf	___awdiv@divisor+1
  2712  0634  0851               	movf	crtc@hr+1,w
  2713  0635  00F3               	movwf	___awdiv@dividend+1
  2714  0636  0850               	movf	crtc@hr,w
  2715  0637  00F2               	movwf	___awdiv@dividend
  2716  0638  3180  2033  3185   	fcall	___awdiv
  2717  063B  0870               	movf	?___awdiv,w
  2718  063C  0140               	movlb	0	; select bank0
  2719  063D  00DC               	movwf	??_crtc+2
  2720  063E  0871               	movf	?___awdiv+1,w
  2721  063F  00DD               	movwf	??_crtc+3
  2722  0640  0EDC               	swapf	??_crtc+2,f
  2723  0641  0EDD               	swapf	??_crtc+3,f
  2724  0642  30F0               	movlw	240
  2725  0643  05DD               	andwf	??_crtc+3,f
  2726  0644  085C               	movf	??_crtc+2,w
  2727  0645  390F               	andlw	15
  2728  0646  04DD               	iorwf	??_crtc+3,f
  2729  0647  30F0               	movlw	240
  2730  0648  05DC               	andwf	??_crtc+2,f
  2731  0649  085A               	movf	??_crtc,w
  2732  064A  075C               	addwf	??_crtc+2,w
  2733  064B  00DE               	movwf	??_crtc+4
  2734  064C  085B               	movf	??_crtc+1,w
  2735  064D  3D5D               	addwfc	??_crtc+3,w
  2736  064E  00DF               	movwf	??_crtc+5
  2737  064F  0850               	movf	crtc@hr,w
  2738  0650  075E               	addwf	??_crtc+4,w
  2739  0651  00AE               	movwf	_chr
  2740  0652  0851               	movf	crtc@hr+1,w
  2741  0653  3D5F               	addwfc	??_crtc+5,w
  2742  0654  00AF               	movwf	_chr+1
  2743  0655                     l1550:	
  2744                           
  2745                           ;main.c: 47: }
  2746                           ;main.c: 49: cday=day;
  2747  0655  0853               	movf	crtc@day+1,w
  2748  0656  00AD               	movwf	_cday+1
  2749  0657  0852               	movf	crtc@day,w
  2750  0658  00AC               	movwf	_cday
  2751                           
  2752                           ;main.c: 51: if(date<10){
  2753  0659  0855               	movf	crtc@date+1,w
  2754  065A  3A80               	xorlw	128
  2755  065B  00DA               	movwf	??_crtc
  2756  065C  3080               	movlw	128
  2757  065D  025A               	subwf	??_crtc,w
  2758  065E  1D03               	skipz
  2759  065F  2E62               	goto	u1505
  2760  0660  300A               	movlw	10
  2761  0661  0254               	subwf	crtc@date,w
  2762  0662                     u1505:	
  2763  0662  1803               	skipnc
  2764  0663  2E6A               	goto	l1556
  2765                           
  2766                           ;main.c: 52: cdate=date;
  2767  0664  0140               	movlb	0	; select bank0
  2768  0665  0855               	movf	crtc@date+1,w
  2769  0666  00AB               	movwf	_cdate+1
  2770  0667  0854               	movf	crtc@date,w
  2771  0668  00AA               	movwf	_cdate
  2772                           
  2773                           ;main.c: 53: }else{
  2774  0669  2EAE               	goto	l1558
  2775  066A                     l1556:	
  2776                           
  2777                           ;main.c: 54: cdate=((date/10)<<4)+(date-((date/10)*10));
  2778  066A  300A               	movlw	10
  2779  066B  00F0               	movwf	___awdiv@divisor
  2780  066C  3000               	movlw	0
  2781  066D  00F1               	movwf	___awdiv@divisor+1
  2782  066E  0140               	movlb	0	; select bank0
  2783  066F  0855               	movf	crtc@date+1,w
  2784  0670  00F3               	movwf	___awdiv@dividend+1
  2785  0671  0854               	movf	crtc@date,w
  2786  0672  00F2               	movwf	___awdiv@dividend
  2787  0673  3180  2033  3185   	fcall	___awdiv
  2788  0676  0871               	movf	?___awdiv+1,w
  2789  0677  00FA               	movwf	___wmul@multiplier+1
  2790  0678  0870               	movf	?___awdiv,w
  2791  0679  00F9               	movwf	___wmul@multiplier
  2792  067A  300A               	movlw	10
  2793  067B  00FB               	movwf	___wmul@multiplicand
  2794  067C  3000               	movlw	0
  2795  067D  00FC               	movwf	___wmul@multiplicand+1
  2796  067E  318F  2742  3185   	fcall	___wmul
  2797  0681  0979               	comf	?___wmul,w
  2798  0682  0140               	movlb	0	; select bank0
  2799  0683  00DA               	movwf	??_crtc
  2800  0684  097A               	comf	?___wmul+1,w
  2801  0685  00DB               	movwf	??_crtc+1
  2802  0686  0ADA               	incf	??_crtc,f
  2803  0687  1903               	skipnz
  2804  0688  0ADB               	incf	??_crtc+1,f
  2805  0689  300A               	movlw	10
  2806  068A  00F0               	movwf	___awdiv@divisor
  2807  068B  3000               	movlw	0
  2808  068C  00F1               	movwf	___awdiv@divisor+1
  2809  068D  0855               	movf	crtc@date+1,w
  2810  068E  00F3               	movwf	___awdiv@dividend+1
  2811  068F  0854               	movf	crtc@date,w
  2812  0690  00F2               	movwf	___awdiv@dividend
  2813  0691  3180  2033  3185   	fcall	___awdiv
  2814  0694  0870               	movf	?___awdiv,w
  2815  0695  0140               	movlb	0	; select bank0
  2816  0696  00DC               	movwf	??_crtc+2
  2817  0697  0871               	movf	?___awdiv+1,w
  2818  0698  00DD               	movwf	??_crtc+3
  2819  0699  0EDC               	swapf	??_crtc+2,f
  2820  069A  0EDD               	swapf	??_crtc+3,f
  2821  069B  30F0               	movlw	240
  2822  069C  05DD               	andwf	??_crtc+3,f
  2823  069D  085C               	movf	??_crtc+2,w
  2824  069E  390F               	andlw	15
  2825  069F  04DD               	iorwf	??_crtc+3,f
  2826  06A0  30F0               	movlw	240
  2827  06A1  05DC               	andwf	??_crtc+2,f
  2828  06A2  085A               	movf	??_crtc,w
  2829  06A3  075C               	addwf	??_crtc+2,w
  2830  06A4  00DE               	movwf	??_crtc+4
  2831  06A5  085B               	movf	??_crtc+1,w
  2832  06A6  3D5D               	addwfc	??_crtc+3,w
  2833  06A7  00DF               	movwf	??_crtc+5
  2834  06A8  0854               	movf	crtc@date,w
  2835  06A9  075E               	addwf	??_crtc+4,w
  2836  06AA  00AA               	movwf	_cdate
  2837  06AB  0855               	movf	crtc@date+1,w
  2838  06AC  3D5F               	addwfc	??_crtc+5,w
  2839  06AD  00AB               	movwf	_cdate+1
  2840  06AE                     l1558:	
  2841                           
  2842                           ;main.c: 55: }
  2843                           ;main.c: 58: if(month<10){
  2844  06AE  0857               	movf	crtc@month+1,w
  2845  06AF  3A80               	xorlw	128
  2846  06B0  00DA               	movwf	??_crtc
  2847  06B1  3080               	movlw	128
  2848  06B2  025A               	subwf	??_crtc,w
  2849  06B3  1D03               	skipz
  2850  06B4  2EB7               	goto	u1515
  2851  06B5  300A               	movlw	10
  2852  06B6  0256               	subwf	crtc@month,w
  2853  06B7                     u1515:	
  2854  06B7  1803               	skipnc
  2855  06B8  2EBF               	goto	l1562
  2856                           
  2857                           ;main.c: 59: cmonth=month;
  2858  06B9  0140               	movlb	0	; select bank0
  2859  06BA  0857               	movf	crtc@month+1,w
  2860  06BB  00A9               	movwf	_cmonth+1
  2861  06BC  0856               	movf	crtc@month,w
  2862  06BD  00A8               	movwf	_cmonth
  2863                           
  2864                           ;main.c: 60: }else{
  2865  06BE  2F03               	goto	l1564
  2866  06BF                     l1562:	
  2867                           
  2868                           ;main.c: 61: cmonth=((month/10)<<4)+(month-((month/10)*10));
  2869  06BF  300A               	movlw	10
  2870  06C0  00F0               	movwf	___awdiv@divisor
  2871  06C1  3000               	movlw	0
  2872  06C2  00F1               	movwf	___awdiv@divisor+1
  2873  06C3  0140               	movlb	0	; select bank0
  2874  06C4  0857               	movf	crtc@month+1,w
  2875  06C5  00F3               	movwf	___awdiv@dividend+1
  2876  06C6  0856               	movf	crtc@month,w
  2877  06C7  00F2               	movwf	___awdiv@dividend
  2878  06C8  3180  2033  3185   	fcall	___awdiv
  2879  06CB  0871               	movf	?___awdiv+1,w
  2880  06CC  00FA               	movwf	___wmul@multiplier+1
  2881  06CD  0870               	movf	?___awdiv,w
  2882  06CE  00F9               	movwf	___wmul@multiplier
  2883  06CF  300A               	movlw	10
  2884  06D0  00FB               	movwf	___wmul@multiplicand
  2885  06D1  3000               	movlw	0
  2886  06D2  00FC               	movwf	___wmul@multiplicand+1
  2887  06D3  318F  2742  3185   	fcall	___wmul
  2888  06D6  0979               	comf	?___wmul,w
  2889  06D7  0140               	movlb	0	; select bank0
  2890  06D8  00DA               	movwf	??_crtc
  2891  06D9  097A               	comf	?___wmul+1,w
  2892  06DA  00DB               	movwf	??_crtc+1
  2893  06DB  0ADA               	incf	??_crtc,f
  2894  06DC  1903               	skipnz
  2895  06DD  0ADB               	incf	??_crtc+1,f
  2896  06DE  300A               	movlw	10
  2897  06DF  00F0               	movwf	___awdiv@divisor
  2898  06E0  3000               	movlw	0
  2899  06E1  00F1               	movwf	___awdiv@divisor+1
  2900  06E2  0857               	movf	crtc@month+1,w
  2901  06E3  00F3               	movwf	___awdiv@dividend+1
  2902  06E4  0856               	movf	crtc@month,w
  2903  06E5  00F2               	movwf	___awdiv@dividend
  2904  06E6  3180  2033  3185   	fcall	___awdiv
  2905  06E9  0870               	movf	?___awdiv,w
  2906  06EA  0140               	movlb	0	; select bank0
  2907  06EB  00DC               	movwf	??_crtc+2
  2908  06EC  0871               	movf	?___awdiv+1,w
  2909  06ED  00DD               	movwf	??_crtc+3
  2910  06EE  0EDC               	swapf	??_crtc+2,f
  2911  06EF  0EDD               	swapf	??_crtc+3,f
  2912  06F0  30F0               	movlw	240
  2913  06F1  05DD               	andwf	??_crtc+3,f
  2914  06F2  085C               	movf	??_crtc+2,w
  2915  06F3  390F               	andlw	15
  2916  06F4  04DD               	iorwf	??_crtc+3,f
  2917  06F5  30F0               	movlw	240
  2918  06F6  05DC               	andwf	??_crtc+2,f
  2919  06F7  085A               	movf	??_crtc,w
  2920  06F8  075C               	addwf	??_crtc+2,w
  2921  06F9  00DE               	movwf	??_crtc+4
  2922  06FA  085B               	movf	??_crtc+1,w
  2923  06FB  3D5D               	addwfc	??_crtc+3,w
  2924  06FC  00DF               	movwf	??_crtc+5
  2925  06FD  0856               	movf	crtc@month,w
  2926  06FE  075E               	addwf	??_crtc+4,w
  2927  06FF  00A8               	movwf	_cmonth
  2928  0700  0857               	movf	crtc@month+1,w
  2929  0701  3D5F               	addwfc	??_crtc+5,w
  2930  0702  00A9               	movwf	_cmonth+1
  2931  0703                     l1564:	
  2932                           
  2933                           ;main.c: 62: }
  2934                           ;main.c: 64: if(year<10){
  2935  0703  0859               	movf	crtc@year+1,w
  2936  0704  3A80               	xorlw	128
  2937  0705  00DA               	movwf	??_crtc
  2938  0706  3080               	movlw	128
  2939  0707  025A               	subwf	??_crtc,w
  2940  0708  1D03               	skipz
  2941  0709  2F0C               	goto	u1525
  2942  070A  300A               	movlw	10
  2943  070B  0258               	subwf	crtc@year,w
  2944  070C                     u1525:	
  2945  070C  1803               	skipnc
  2946  070D  2F14               	goto	l1568
  2947                           
  2948                           ;main.c: 65: cyear=year;
  2949  070E  0140               	movlb	0	; select bank0
  2950  070F  0859               	movf	crtc@year+1,w
  2951  0710  00A7               	movwf	_cyear+1
  2952  0711  0858               	movf	crtc@year,w
  2953  0712  00A6               	movwf	_cyear
  2954                           
  2955                           ;main.c: 66: }else{
  2956  0713  2F58               	goto	l1570
  2957  0714                     l1568:	
  2958                           
  2959                           ;main.c: 67: cyear=((year/10)<<4)+(year-((year/10)*10));
  2960  0714  300A               	movlw	10
  2961  0715  00F0               	movwf	___awdiv@divisor
  2962  0716  3000               	movlw	0
  2963  0717  00F1               	movwf	___awdiv@divisor+1
  2964  0718  0140               	movlb	0	; select bank0
  2965  0719  0859               	movf	crtc@year+1,w
  2966  071A  00F3               	movwf	___awdiv@dividend+1
  2967  071B  0858               	movf	crtc@year,w
  2968  071C  00F2               	movwf	___awdiv@dividend
  2969  071D  3180  2033  3185   	fcall	___awdiv
  2970  0720  0871               	movf	?___awdiv+1,w
  2971  0721  00FA               	movwf	___wmul@multiplier+1
  2972  0722  0870               	movf	?___awdiv,w
  2973  0723  00F9               	movwf	___wmul@multiplier
  2974  0724  300A               	movlw	10
  2975  0725  00FB               	movwf	___wmul@multiplicand
  2976  0726  3000               	movlw	0
  2977  0727  00FC               	movwf	___wmul@multiplicand+1
  2978  0728  318F  2742  3185   	fcall	___wmul
  2979  072B  0979               	comf	?___wmul,w
  2980  072C  0140               	movlb	0	; select bank0
  2981  072D  00DA               	movwf	??_crtc
  2982  072E  097A               	comf	?___wmul+1,w
  2983  072F  00DB               	movwf	??_crtc+1
  2984  0730  0ADA               	incf	??_crtc,f
  2985  0731  1903               	skipnz
  2986  0732  0ADB               	incf	??_crtc+1,f
  2987  0733  300A               	movlw	10
  2988  0734  00F0               	movwf	___awdiv@divisor
  2989  0735  3000               	movlw	0
  2990  0736  00F1               	movwf	___awdiv@divisor+1
  2991  0737  0859               	movf	crtc@year+1,w
  2992  0738  00F3               	movwf	___awdiv@dividend+1
  2993  0739  0858               	movf	crtc@year,w
  2994  073A  00F2               	movwf	___awdiv@dividend
  2995  073B  3180  2033  3185   	fcall	___awdiv
  2996  073E  0870               	movf	?___awdiv,w
  2997  073F  0140               	movlb	0	; select bank0
  2998  0740  00DC               	movwf	??_crtc+2
  2999  0741  0871               	movf	?___awdiv+1,w
  3000  0742  00DD               	movwf	??_crtc+3
  3001  0743  0EDC               	swapf	??_crtc+2,f
  3002  0744  0EDD               	swapf	??_crtc+3,f
  3003  0745  30F0               	movlw	240
  3004  0746  05DD               	andwf	??_crtc+3,f
  3005  0747  085C               	movf	??_crtc+2,w
  3006  0748  390F               	andlw	15
  3007  0749  04DD               	iorwf	??_crtc+3,f
  3008  074A  30F0               	movlw	240
  3009  074B  05DC               	andwf	??_crtc+2,f
  3010  074C  085A               	movf	??_crtc,w
  3011  074D  075C               	addwf	??_crtc+2,w
  3012  074E  00DE               	movwf	??_crtc+4
  3013  074F  085B               	movf	??_crtc+1,w
  3014  0750  3D5D               	addwfc	??_crtc+3,w
  3015  0751  00DF               	movwf	??_crtc+5
  3016  0752  0858               	movf	crtc@year,w
  3017  0753  075E               	addwf	??_crtc+4,w
  3018  0754  00A6               	movwf	_cyear
  3019  0755  0859               	movf	crtc@year+1,w
  3020  0756  3D5F               	addwfc	??_crtc+5,w
  3021  0757  00A7               	movwf	_cyear+1
  3022  0758                     l1570:	
  3023                           
  3024                           ;main.c: 68: }
  3025                           ;main.c: 72: SSP2CON2bits.SEN=1;
  3026  0758  0143               	movlb	3	; select bank3
  3027  0759  141B               	bsf	27,0	;volatile
  3028                           
  3029                           ;main.c: 74: Lcd_Cmd(1);
  3030  075A  3001               	movlw	1
  3031  075B  3180  2084  3185   	fcall	_Lcd_Cmd
  3032                           
  3033                           ;main.c: 75: Lcd_Out(2, 0, "STAR");
  3034  075E  01F3               	clrf	Lcd_Out@x
  3035  075F  3053               	movlw	low ((STR_4+2)| (0+32768))
  3036  0760  00F4               	movwf	Lcd_Out@buffer
  3037  0761  3090               	movlw	high ((STR_4+2)| (0+32768))
  3038  0762  00F5               	movwf	Lcd_Out@buffer+1
  3039  0763  3002               	movlw	2
  3040  0764  318F  27C9  3185   	fcall	_Lcd_Out
  3041                           
  3042                           ;main.c: 76: LATAbits.LATA2=1;
  3043  0767  0140               	movlb	0	; select bank0
  3044  0768  1516               	bsf	22,2	;volatile
  3045                           
  3046                           ;main.c: 77: _delay((unsigned long)((1000)*(32000000/4000.0)));
  3047  0769  3029               	movlw	41
  3048  076A  0140               	movlb	0	; select bank0
  3049  076B  00DB               	movwf	??_crtc+1
  3050  076C  3096               	movlw	150
  3051  076D  00DA               	movwf	??_crtc
  3052  076E  307F               	movlw	127
  3053  076F                     u2137:	
  3054  076F  0B89               	decfsz	9,f
  3055  0770  2F6F               	goto	u2137
  3056  0771  0BDA               	decfsz	??_crtc,f
  3057  0772  2F6F               	goto	u2137
  3058  0773  0BDB               	decfsz	??_crtc+1,f
  3059  0774  2F6F               	goto	u2137
  3060  0775                     l138:	
  3061                           ;main.c: 80: while(SSP2CON2bits.SEN);
  3062                           
  3063  0775  0143               	movlb	3	; select bank3
  3064  0776  181B               	btfsc	27,0	;volatile
  3065  0777  2F75               	goto	l138
  3066                           
  3067                           ;main.c: 81: SSP2BUF=adressRTC;
  3068  0778  0140               	movlb	0	; select bank0
  3069  0779  086B               	movf	_adressRTC,w
  3070  077A  0143               	movlb	3	; select bank3
  3071  077B  0096               	movwf	22	;volatile
  3072  077C                     l141:	
  3073                           ;main.c: 83: while(SSP2STATbits.BF);
  3074                           
  3075  077C  1819               	btfsc	25,0	;volatile
  3076  077D  2F7C               	goto	l141
  3077  077E                     l144:	
  3078                           ;main.c: 84: while(SSP2STATbits.R_nW);
  3079                           
  3080  077E  1919               	btfsc	25,2	;volatile
  3081  077F  2F7E               	goto	l144
  3082                           
  3083                           ;main.c: 86: if(SSP2CON2bits.ACKSTAT==0){LATAbits.LATA1=1;LATAbits.LATA2=0;}else{LATAbit
      +                          s.LATA2=1;}
  3084  0780  1B1B               	btfsc	27,6	;volatile
  3085  0781  2F86               	goto	l147
  3086  0782  0140               	movlb	0	; select bank0
  3087  0783  1496               	bsf	22,1	;volatile
  3088  0784  1116               	bcf	22,2	;volatile
  3089  0785  2F88               	goto	l1582
  3090  0786                     l147:	
  3091  0786  0140               	movlb	0	; select bank0
  3092  0787  1516               	bsf	22,2	;volatile
  3093  0788                     l1582:	
  3094                           
  3095                           ;main.c: 88: SSP2BUF=0x00;
  3096  0788  0143               	movlb	3	; select bank3
  3097  0789  0196               	clrf	22	;volatile
  3098  078A                     l149:	
  3099                           ;main.c: 89: while(SSP2STATbits.BF);
  3100                           
  3101  078A  1819               	btfsc	25,0	;volatile
  3102  078B  2F8A               	goto	l149
  3103  078C                     l152:	
  3104                           ;main.c: 90: while(SSP2STATbits.R_nW);
  3105                           
  3106  078C  1919               	btfsc	25,2	;volatile
  3107  078D  2F8C               	goto	l152
  3108                           
  3109                           ;main.c: 91: SSP2BUF=cseg;
  3110  078E  0140               	movlb	0	; select bank0
  3111  078F  0832               	movf	_cseg,w
  3112  0790  0143               	movlb	3	; select bank3
  3113  0791  0096               	movwf	22	;volatile
  3114  0792                     l155:	
  3115                           ;main.c: 92: while(SSP2STATbits.BF);
  3116                           
  3117  0792  1819               	btfsc	25,0	;volatile
  3118  0793  2F92               	goto	l155
  3119  0794                     l158:	
  3120                           ;main.c: 93: while(SSP2STATbits.R_nW);
  3121                           
  3122  0794  1919               	btfsc	25,2	;volatile
  3123  0795  2F94               	goto	l158
  3124                           
  3125                           ;main.c: 94: SSP2BUF=cmin;
  3126  0796  0140               	movlb	0	; select bank0
  3127  0797  0830               	movf	_cmin,w
  3128  0798  0143               	movlb	3	; select bank3
  3129  0799  0096               	movwf	22	;volatile
  3130  079A                     l161:	
  3131                           ;main.c: 95: while(SSP2STATbits.BF);
  3132                           
  3133  079A  1819               	btfsc	25,0	;volatile
  3134  079B  2F9A               	goto	l161
  3135  079C                     l164:	
  3136                           ;main.c: 96: while(SSP2STATbits.R_nW);
  3137                           
  3138  079C  1919               	btfsc	25,2	;volatile
  3139  079D  2F9C               	goto	l164
  3140                           
  3141                           ;main.c: 97: SSP2BUF=chr;
  3142  079E  0140               	movlb	0	; select bank0
  3143  079F  082E               	movf	_chr,w
  3144  07A0  0143               	movlb	3	; select bank3
  3145  07A1  0096               	movwf	22	;volatile
  3146  07A2                     l167:	
  3147                           ;main.c: 98: while(SSP2STATbits.BF);
  3148                           
  3149  07A2  1819               	btfsc	25,0	;volatile
  3150  07A3  2FA2               	goto	l167
  3151  07A4                     l170:	
  3152                           ;main.c: 99: while(SSP2STATbits.R_nW);
  3153                           
  3154  07A4  1919               	btfsc	25,2	;volatile
  3155  07A5  2FA4               	goto	l170
  3156                           
  3157                           ;main.c: 100: SSP2BUF=cday;
  3158  07A6  0140               	movlb	0	; select bank0
  3159  07A7  082C               	movf	_cday,w
  3160  07A8  0143               	movlb	3	; select bank3
  3161  07A9  0096               	movwf	22	;volatile
  3162  07AA                     l173:	
  3163                           ;main.c: 101: while(SSP2STATbits.BF);
  3164                           
  3165  07AA  1819               	btfsc	25,0	;volatile
  3166  07AB  2FAA               	goto	l173
  3167  07AC                     l176:	
  3168                           ;main.c: 102: while(SSP2STATbits.R_nW);
  3169                           
  3170  07AC  1919               	btfsc	25,2	;volatile
  3171  07AD  2FAC               	goto	l176
  3172                           
  3173                           ;main.c: 103: SSP2BUF=cdate;
  3174  07AE  0140               	movlb	0	; select bank0
  3175  07AF  082A               	movf	_cdate,w
  3176  07B0  0143               	movlb	3	; select bank3
  3177  07B1  0096               	movwf	22	;volatile
  3178  07B2                     l179:	
  3179                           ;main.c: 104: while(SSP2STATbits.BF);
  3180                           
  3181  07B2  1819               	btfsc	25,0	;volatile
  3182  07B3  2FB2               	goto	l179
  3183  07B4                     l182:	
  3184                           ;main.c: 105: while(SSP2STATbits.R_nW);
  3185                           
  3186  07B4  1919               	btfsc	25,2	;volatile
  3187  07B5  2FB4               	goto	l182
  3188                           
  3189                           ;main.c: 106: SSP2BUF=cmonth;
  3190  07B6  0140               	movlb	0	; select bank0
  3191  07B7  0828               	movf	_cmonth,w
  3192  07B8  0143               	movlb	3	; select bank3
  3193  07B9  0096               	movwf	22	;volatile
  3194  07BA                     l185:	
  3195                           ;main.c: 107: while(SSP2STATbits.BF);
  3196                           
  3197  07BA  1819               	btfsc	25,0	;volatile
  3198  07BB  2FBA               	goto	l185
  3199  07BC                     l188:	
  3200                           ;main.c: 108: while(SSP2STATbits.R_nW);
  3201                           
  3202  07BC  1919               	btfsc	25,2	;volatile
  3203  07BD  2FBC               	goto	l188
  3204                           
  3205                           ;main.c: 109: SSP2BUF=cyear;
  3206  07BE  0140               	movlb	0	; select bank0
  3207  07BF  0826               	movf	_cyear,w
  3208  07C0  0143               	movlb	3	; select bank3
  3209  07C1  0096               	movwf	22	;volatile
  3210  07C2                     l191:	
  3211                           ;main.c: 110: while(SSP2STATbits.BF);
  3212                           
  3213  07C2  1819               	btfsc	25,0	;volatile
  3214  07C3  2FC2               	goto	l191
  3215  07C4                     l194:	
  3216                           ;main.c: 111: while(SSP2STATbits.R_nW);
  3217                           
  3218  07C4  1919               	btfsc	25,2	;volatile
  3219  07C5  2FC4               	goto	l194
  3220                           
  3221                           ;main.c: 112: SSP2BUF=0b00010000;
  3222  07C6  3010               	movlw	16
  3223  07C7  0096               	movwf	22	;volatile
  3224  07C8                     l197:	
  3225                           ;main.c: 113: while(SSP2STATbits.BF);
  3226                           
  3227  07C8  1819               	btfsc	25,0	;volatile
  3228  07C9  2FC8               	goto	l197
  3229  07CA                     l200:	
  3230                           ;main.c: 114: while(SSP2STATbits.R_nW);
  3231                           
  3232  07CA  1919               	btfsc	25,2	;volatile
  3233  07CB  2FCA               	goto	l200
  3234                           
  3235                           ;main.c: 115: SSP2CON2bits.PEN=1;
  3236  07CC  151B               	bsf	27,2	;volatile
  3237  07CD                     l203:	
  3238                           ;main.c: 116: while(SSP2CON2bits.PEN);
  3239                           
  3240  07CD  191B               	btfsc	27,2	;volatile
  3241  07CE  2FCD               	goto	l203
  3242                           
  3243                           ;main.c: 118: Lcd_Out(2, 0, "CONF DONE");
  3244  07CF  01F3               	clrf	Lcd_Out@x
  3245  07D0  302B               	movlw	low (STR_2| (0+32768))
  3246  07D1  00F4               	movwf	Lcd_Out@buffer
  3247  07D2  3090               	movlw	high (STR_2| (0+32768))
  3248  07D3  00F5               	movwf	Lcd_Out@buffer+1
  3249  07D4  3002               	movlw	2
  3250  07D5  318F  27C9  3185   	fcall	_Lcd_Out
  3251                           
  3252                           ;main.c: 119: _delay((unsigned long)((1500)*(32000000/4000.0)));
  3253  07D8  303D               	movlw	61
  3254  07D9  0140               	movlb	0	; select bank0
  3255  07DA  00DB               	movwf	??_crtc+1
  3256  07DB  30E1               	movlw	225
  3257  07DC  00DA               	movwf	??_crtc
  3258  07DD  303F               	movlw	63
  3259  07DE                     u2147:	
  3260  07DE  0B89               	decfsz	9,f
  3261  07DF  2FDE               	goto	u2147
  3262  07E0  0BDA               	decfsz	??_crtc,f
  3263  07E1  2FDE               	goto	u2147
  3264  07E2  0BDB               	decfsz	??_crtc+1,f
  3265  07E3  2FDE               	goto	u2147
  3266  07E4  3200               	nop2
  3267  07E5  0008               	return
  3268  07E6                     __end_of_crtc:	
  3269                           
  3270                           	psect	text5
  3271  0F42                     __ptext5:	
  3272 ;; *************** function ___wmul *****************
  3273 ;; Defined at:
  3274 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\Umul16.c"
  3275 ;; Parameters:    Size  Location     Type
  3276 ;;  multiplier      2    9[COMMON] unsigned int 
  3277 ;;  multiplicand    2   11[COMMON] unsigned int 
  3278 ;; Auto vars:     Size  Location     Type
  3279 ;;  product         2    0[BANK0 ] unsigned int 
  3280 ;; Return value:  Size  Location     Type
  3281 ;;                  2    9[COMMON] unsigned int 
  3282 ;; Registers used:
  3283 ;;		wreg, status,2, status,0
  3284 ;; Tracked objects:
  3285 ;;		On entry : 0/0
  3286 ;;		On exit  : 0/0
  3287 ;;		Unchanged: 0/0
  3288 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
  3289 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  3290 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  3291 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  3292 ;;      Totals:         4       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  3293 ;;Total ram usage:        6 bytes
  3294 ;; Hardware stack levels used:    1
  3295 ;; This function calls:
  3296 ;;		Nothing
  3297 ;; This function is called by:
  3298 ;;		_crtc
  3299 ;;		_main
  3300 ;; This function uses a non-reentrant model
  3301 ;;
  3302                           
  3303                           
  3304                           ;psect for function ___wmul
  3305  0F42                     ___wmul:	
  3306                           
  3307                           ;incstack = 0
  3308                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  3309  0F42  0140               	movlb	0	; select bank0
  3310  0F43  01CA               	clrf	___wmul@product
  3311  0F44  01CB               	clrf	___wmul@product+1
  3312  0F45                     l1356:	
  3313  0F45  1C79               	btfss	___wmul@multiplier,0
  3314  0F46  2F4C               	goto	l370
  3315  0F47  087B               	movf	___wmul@multiplicand,w
  3316  0F48  0140               	movlb	0	; select bank0
  3317  0F49  07CA               	addwf	___wmul@product,f
  3318  0F4A  087C               	movf	___wmul@multiplicand+1,w
  3319  0F4B  3DCB               	addwfc	___wmul@product+1,f
  3320  0F4C                     l370:	
  3321  0F4C  3001               	movlw	1
  3322  0F4D                     u1185:	
  3323  0F4D  35FB               	lslf	___wmul@multiplicand,f
  3324  0F4E  0DFC               	rlf	___wmul@multiplicand+1,f
  3325  0F4F  0B89               	decfsz	9,f
  3326  0F50  2F4D               	goto	u1185
  3327  0F51  3001               	movlw	1
  3328  0F52                     u1195:	
  3329  0F52  36FA               	lsrf	___wmul@multiplier+1,f
  3330  0F53  0CF9               	rrf	___wmul@multiplier,f
  3331  0F54  0B89               	decfsz	9,f
  3332  0F55  2F52               	goto	u1195
  3333  0F56  0879               	movf	___wmul@multiplier,w
  3334  0F57  047A               	iorwf	___wmul@multiplier+1,w
  3335  0F58  1D03               	btfss	3,2
  3336  0F59  2F45               	goto	l1356
  3337  0F5A  0140               	movlb	0	; select bank0
  3338  0F5B  084B               	movf	___wmul@product+1,w
  3339  0F5C  00FA               	movwf	?___wmul+1
  3340  0F5D  084A               	movf	___wmul@product,w
  3341  0F5E  00F9               	movwf	?___wmul
  3342  0F5F  0008               	return
  3343  0F60                     __end_of___wmul:	
  3344                           
  3345                           	psect	text6
  3346  0033                     __ptext6:	
  3347 ;; *************** function ___awdiv *****************
  3348 ;; Defined at:
  3349 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\awdiv.c"
  3350 ;; Parameters:    Size  Location     Type
  3351 ;;  divisor         2    0[COMMON] int 
  3352 ;;  dividend        2    2[COMMON] int 
  3353 ;; Auto vars:     Size  Location     Type
  3354 ;;  quotient        2    7[COMMON] int 
  3355 ;;  sign            1    6[COMMON] unsigned char 
  3356 ;;  counter         1    5[COMMON] unsigned char 
  3357 ;; Return value:  Size  Location     Type
  3358 ;;                  2    0[COMMON] int 
  3359 ;; Registers used:
  3360 ;;		wreg, status,2, status,0
  3361 ;; Tracked objects:
  3362 ;;		On entry : 0/0
  3363 ;;		On exit  : 0/0
  3364 ;;		Unchanged: 0/0
  3365 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
  3366 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  3367 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  3368 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  3369 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  3370 ;;Total ram usage:        9 bytes
  3371 ;; Hardware stack levels used:    1
  3372 ;; This function calls:
  3373 ;;		Nothing
  3374 ;; This function is called by:
  3375 ;;		_crtc
  3376 ;; This function uses a non-reentrant model
  3377 ;;
  3378                           
  3379                           
  3380                           ;psect for function ___awdiv
  3381  0033                     ___awdiv:	
  3382                           
  3383                           ;incstack = 0
  3384                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  3385  0033  01F6               	clrf	___awdiv@sign
  3386  0034  1FF1               	btfss	___awdiv@divisor+1,7
  3387  0035  283D               	goto	l1376
  3388  0036  09F0               	comf	___awdiv@divisor,f
  3389  0037  09F1               	comf	___awdiv@divisor+1,f
  3390  0038  0AF0               	incf	___awdiv@divisor,f
  3391  0039  1903               	skipnz
  3392  003A  0AF1               	incf	___awdiv@divisor+1,f
  3393  003B  01F6               	clrf	___awdiv@sign
  3394  003C  0AF6               	incf	___awdiv@sign,f
  3395  003D                     l1376:	
  3396  003D  1FF3               	btfss	___awdiv@dividend+1,7
  3397  003E  2848               	goto	l1382
  3398  003F  09F2               	comf	___awdiv@dividend,f
  3399  0040  09F3               	comf	___awdiv@dividend+1,f
  3400  0041  0AF2               	incf	___awdiv@dividend,f
  3401  0042  1903               	skipnz
  3402  0043  0AF3               	incf	___awdiv@dividend+1,f
  3403  0044  3001               	movlw	1
  3404  0045  00F4               	movwf	??___awdiv
  3405  0046  0874               	movf	??___awdiv,w
  3406  0047  06F6               	xorwf	___awdiv@sign,f
  3407  0048                     l1382:	
  3408  0048  01F7               	clrf	___awdiv@quotient
  3409  0049  01F8               	clrf	___awdiv@quotient+1
  3410  004A  0870               	movf	___awdiv@divisor,w
  3411  004B  0471               	iorwf	___awdiv@divisor+1,w
  3412  004C  1903               	btfsc	3,2
  3413  004D  2877               	goto	l1404
  3414  004E  01F5               	clrf	___awdiv@counter
  3415  004F  0AF5               	incf	___awdiv@counter,f
  3416  0050                     l1392:	
  3417  0050  1BF1               	btfsc	___awdiv@divisor+1,7
  3418  0051  285C               	goto	l1394
  3419  0052  3001               	movlw	1
  3420  0053                     u1245:	
  3421  0053  35F0               	lslf	___awdiv@divisor,f
  3422  0054  0DF1               	rlf	___awdiv@divisor+1,f
  3423  0055  0B89               	decfsz	9,f
  3424  0056  2853               	goto	u1245
  3425  0057  3001               	movlw	1
  3426  0058  00F4               	movwf	??___awdiv
  3427  0059  0874               	movf	??___awdiv,w
  3428  005A  07F5               	addwf	___awdiv@counter,f
  3429  005B  2850               	goto	l1392
  3430  005C                     l1394:	
  3431  005C  3001               	movlw	1
  3432  005D                     u1265:	
  3433  005D  35F7               	lslf	___awdiv@quotient,f
  3434  005E  0DF8               	rlf	___awdiv@quotient+1,f
  3435  005F  0B89               	decfsz	9,f
  3436  0060  285D               	goto	u1265
  3437  0061  0871               	movf	___awdiv@divisor+1,w
  3438  0062  0273               	subwf	___awdiv@dividend+1,w
  3439  0063  1D03               	skipz
  3440  0064  2867               	goto	u1275
  3441  0065  0870               	movf	___awdiv@divisor,w
  3442  0066  0272               	subwf	___awdiv@dividend,w
  3443  0067                     u1275:	
  3444  0067  1C03               	skipc
  3445  0068  286E               	goto	l1400
  3446  0069  0870               	movf	___awdiv@divisor,w
  3447  006A  02F2               	subwf	___awdiv@dividend,f
  3448  006B  0871               	movf	___awdiv@divisor+1,w
  3449  006C  3BF3               	subwfb	___awdiv@dividend+1,f
  3450  006D  1477               	bsf	___awdiv@quotient,0
  3451  006E                     l1400:	
  3452  006E  3001               	movlw	1
  3453  006F                     u1285:	
  3454  006F  36F1               	lsrf	___awdiv@divisor+1,f
  3455  0070  0CF0               	rrf	___awdiv@divisor,f
  3456  0071  0B89               	decfsz	9,f
  3457  0072  286F               	goto	u1285
  3458  0073  3001               	movlw	1
  3459  0074  02F5               	subwf	___awdiv@counter,f
  3460  0075  1D03               	btfss	3,2
  3461  0076  285C               	goto	l1394
  3462  0077                     l1404:	
  3463  0077  0876               	movf	___awdiv@sign,w
  3464  0078  1903               	btfsc	3,2
  3465  0079  287F               	goto	l1408
  3466  007A  09F7               	comf	___awdiv@quotient,f
  3467  007B  09F8               	comf	___awdiv@quotient+1,f
  3468  007C  0AF7               	incf	___awdiv@quotient,f
  3469  007D  1903               	skipnz
  3470  007E  0AF8               	incf	___awdiv@quotient+1,f
  3471  007F                     l1408:	
  3472  007F  0878               	movf	___awdiv@quotient+1,w
  3473  0080  00F1               	movwf	?___awdiv+1
  3474  0081  0877               	movf	___awdiv@quotient,w
  3475  0082  00F0               	movwf	?___awdiv
  3476  0083  0008               	return
  3477  0084                     __end_of___awdiv:	
  3478                           
  3479                           	psect	text7
  3480  0FC9                     __ptext7:	
  3481 ;; *************** function _Lcd_Out *****************
  3482 ;; Defined at:
  3483 ;;		line 94 in file "flex_lcd.h"
  3484 ;; Parameters:    Size  Location     Type
  3485 ;;  y               1    wreg     unsigned char 
  3486 ;;  x               1    3[COMMON] unsigned char 
  3487 ;;  buffer          2    4[COMMON] PTR const unsigned char 
  3488 ;;		 -> STR_11(10), STR_9(5), STR_8(10), STR_7(11), 
  3489 ;;		 -> STR_6(9), STR_5(9), STR_4(7), STR_3(5), 
  3490 ;;		 -> STR_2(10), STR_1(5), 
  3491 ;; Auto vars:     Size  Location     Type
  3492 ;;  y               1    7[COMMON] unsigned char 
  3493 ;;  data            1    8[COMMON] unsigned char 
  3494 ;; Return value:  Size  Location     Type
  3495 ;;                  1    wreg      void 
  3496 ;; Registers used:
  3497 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  3498 ;; Tracked objects:
  3499 ;;		On entry : 0/0
  3500 ;;		On exit  : 0/0
  3501 ;;		Unchanged: 0/0
  3502 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
  3503 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  3504 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  3505 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  3506 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  3507 ;;Total ram usage:        6 bytes
  3508 ;; Hardware stack levels used:    1
  3509 ;; Hardware stack levels required when called:    1
  3510 ;; This function calls:
  3511 ;;		_Lcd_Chr_CP
  3512 ;;		_Lcd_Cmd
  3513 ;; This function is called by:
  3514 ;;		_crtc
  3515 ;;		_main
  3516 ;; This function uses a non-reentrant model
  3517 ;;
  3518                           
  3519                           
  3520                           ;psect for function _Lcd_Out
  3521  0FC9                     _Lcd_Out:	
  3522                           
  3523                           ;incstack = 0
  3524                           ; Regs used in _Lcd_Out: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  3525                           ;Lcd_Out@y stored from wreg
  3526  0FC9  00F7               	movwf	Lcd_Out@y
  3527                           
  3528                           ;flex_lcd.h: 96: unsigned char data;
  3529                           ;flex_lcd.h: 97: switch (y)
  3530  0FCA  2FDA               	goto	l1344
  3531  0FCB                     l1334:	
  3532                           ;flex_lcd.h: 98: {
  3533                           ;flex_lcd.h: 99: case 1: data = 128 + x; break;
  3534                           
  3535  0FCB  0873               	movf	Lcd_Out@x,w
  3536  0FCC  3E80               	addlw	128
  3537  0FCD  2FD6               	goto	L3
  3538  0FCE                     l1336:	
  3539                           ;flex_lcd.h: 100: case 2: data = 192 + x; break;
  3540                           
  3541  0FCE  0873               	movf	Lcd_Out@x,w
  3542  0FCF  3EC0               	addlw	192
  3543  0FD0  2FD6               	goto	L3
  3544  0FD1                     l1338:	
  3545                           ;flex_lcd.h: 101: case 3: data = 148 + x; break;
  3546                           
  3547  0FD1  0873               	movf	Lcd_Out@x,w
  3548  0FD2  3E94               	addlw	148
  3549  0FD3  2FD6               	goto	L3
  3550  0FD4                     l1340:	
  3551                           ;flex_lcd.h: 102: case 4: data = 212 + x; break;
  3552                           
  3553  0FD4  0873               	movf	Lcd_Out@x,w
  3554  0FD5  3ED4               	addlw	212
  3555  0FD6                     L3:	
  3556  0FD6  00F6               	movwf	??_Lcd_Out
  3557  0FD7  0876               	movf	??_Lcd_Out,w
  3558  0FD8  00F8               	movwf	Lcd_Out@data
  3559                           
  3560                           ;flex_lcd.h: 104: }
  3561                           
  3562                           ;flex_lcd.h: 103: default: break;
  3563  0FD9  2FE8               	goto	l1346
  3564  0FDA                     l1344:	
  3565  0FDA  0877               	movf	Lcd_Out@y,w
  3566                           
  3567                           ; Switch size 1, requested type "space"
  3568                           ; Number of cases is 4, Range of values is 1 to 4
  3569                           ; switch strategies available:
  3570                           ; Name         Instructions Cycles
  3571                           ; simple_byte           13     7 (average)
  3572                           ; direct_byte           17     9 (fixed)
  3573                           ; jumptable            263     9 (fixed)
  3574                           ;	Chosen strategy is simple_byte
  3575  0FDB  3A01               	xorlw	1	; case 1
  3576  0FDC  1903               	skipnz
  3577  0FDD  2FCB               	goto	l1334
  3578  0FDE  3A03               	xorlw	3	; case 2
  3579  0FDF  1903               	skipnz
  3580  0FE0  2FCE               	goto	l1336
  3581  0FE1  3A01               	xorlw	1	; case 3
  3582  0FE2  1903               	skipnz
  3583  0FE3  2FD1               	goto	l1338
  3584  0FE4  3A07               	xorlw	7	; case 4
  3585  0FE5  1903               	skipnz
  3586  0FE6  2FD4               	goto	l1340
  3587  0FE7  2FE8               	goto	l1346
  3588  0FE8                     l1346:	
  3589                           
  3590                           ;flex_lcd.h: 105: Lcd_Cmd(data);
  3591  0FE8  0878               	movf	Lcd_Out@data,w
  3592  0FE9  3180  2084  318F   	fcall	_Lcd_Cmd
  3593  0FEC                     l1352:	
  3594                           ;flex_lcd.h: 106: while(*buffer)
  3595                           
  3596  0FEC  0874               	movf	Lcd_Out@buffer,w
  3597  0FED  0084               	movwf	4
  3598  0FEE  0875               	movf	Lcd_Out@buffer+1,w
  3599  0FEF  0085               	movwf	5
  3600  0FF0  0012               	moviw fsr0++
  3601  0FF1  1903               	btfsc	3,2
  3602  0FF2  0008               	return
  3603                           
  3604                           ;flex_lcd.h: 107: {
  3605                           ;flex_lcd.h: 108: Lcd_Chr_CP(*buffer);
  3606  0FF3  0874               	movf	Lcd_Out@buffer,w
  3607  0FF4  0084               	movwf	4
  3608  0FF5  0875               	movf	Lcd_Out@buffer+1,w
  3609  0FF6  0085               	movwf	5
  3610  0FF7  0800               	movf	0,w	;code access
  3611  0FF8  3181  211B  318F   	fcall	_Lcd_Chr_CP
  3612                           
  3613                           ;flex_lcd.h: 109: buffer++;
  3614  0FFB  3001               	movlw	1
  3615  0FFC  07F4               	addwf	Lcd_Out@buffer,f
  3616  0FFD  3000               	movlw	0
  3617  0FFE  3DF5               	addwfc	Lcd_Out@buffer+1,f
  3618  0FFF  2FEC               	goto	l1352
  3619  1000                     __end_of_Lcd_Out:	
  3620                           ;flex_lcd.h: 110: }
  3621                           ;flex_lcd.h: 111: return;
  3622                           
  3623                           
  3624                           	psect	text8
  3625  0F94                     __ptext8:	
  3626 ;; *************** function _Lcd_Out2 *****************
  3627 ;; Defined at:
  3628 ;;		line 115 in file "flex_lcd.h"
  3629 ;; Parameters:    Size  Location     Type
  3630 ;;  y               1    wreg     unsigned char 
  3631 ;;  x               1    3[COMMON] unsigned char 
  3632 ;;  buffer          1    4[COMMON] PTR unsigned char 
  3633 ;;		 -> buffer1(16), 
  3634 ;; Auto vars:     Size  Location     Type
  3635 ;;  y               1    6[COMMON] unsigned char 
  3636 ;;  data            1    7[COMMON] unsigned char 
  3637 ;; Return value:  Size  Location     Type
  3638 ;;                  1    wreg      void 
  3639 ;; Registers used:
  3640 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3641 ;; Tracked objects:
  3642 ;;		On entry : 0/0
  3643 ;;		On exit  : 0/0
  3644 ;;		Unchanged: 0/0
  3645 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
  3646 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  3647 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  3648 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  3649 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  3650 ;;Total ram usage:        5 bytes
  3651 ;; Hardware stack levels used:    1
  3652 ;; Hardware stack levels required when called:    1
  3653 ;; This function calls:
  3654 ;;		_Lcd_Chr_CP
  3655 ;;		_Lcd_Cmd
  3656 ;; This function is called by:
  3657 ;;		_main
  3658 ;; This function uses a non-reentrant model
  3659 ;;
  3660                           
  3661                           
  3662                           ;psect for function _Lcd_Out2
  3663  0F94                     _Lcd_Out2:	
  3664                           
  3665                           ;incstack = 0
  3666                           ; Regs used in _Lcd_Out2: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  3667                           ;Lcd_Out2@y stored from wreg
  3668  0F94  00F6               	movwf	Lcd_Out2@y
  3669                           
  3670                           ;flex_lcd.h: 117: unsigned char data;
  3671                           ;flex_lcd.h: 118: switch (y)
  3672  0F95  2FA5               	goto	l1522
  3673  0F96                     l1512:	
  3674                           ;flex_lcd.h: 119: {
  3675                           ;flex_lcd.h: 120: case 1: data = 128 + x; break;
  3676                           
  3677  0F96  0873               	movf	Lcd_Out2@x,w
  3678  0F97  3E80               	addlw	128
  3679  0F98  2FA1               	goto	L6
  3680  0F99                     l1514:	
  3681                           ;flex_lcd.h: 121: case 2: data = 192 + x; break;
  3682                           
  3683  0F99  0873               	movf	Lcd_Out2@x,w
  3684  0F9A  3EC0               	addlw	192
  3685  0F9B  2FA1               	goto	L6
  3686  0F9C                     l1516:	
  3687                           ;flex_lcd.h: 122: case 3: data = 148 + x; break;
  3688                           
  3689  0F9C  0873               	movf	Lcd_Out2@x,w
  3690  0F9D  3E94               	addlw	148
  3691  0F9E  2FA1               	goto	L6
  3692  0F9F                     l1518:	
  3693                           ;flex_lcd.h: 123: case 4: data = 212 + x; break;
  3694                           
  3695  0F9F  0873               	movf	Lcd_Out2@x,w
  3696  0FA0  3ED4               	addlw	212
  3697  0FA1                     L6:	
  3698  0FA1  00F5               	movwf	??_Lcd_Out2
  3699  0FA2  0875               	movf	??_Lcd_Out2,w
  3700  0FA3  00F7               	movwf	Lcd_Out2@data
  3701                           
  3702                           ;flex_lcd.h: 125: }
  3703                           
  3704                           ;flex_lcd.h: 124: default: break;
  3705  0FA4  2FB3               	goto	l1524
  3706  0FA5                     l1522:	
  3707  0FA5  0876               	movf	Lcd_Out2@y,w
  3708                           
  3709                           ; Switch size 1, requested type "space"
  3710                           ; Number of cases is 4, Range of values is 1 to 4
  3711                           ; switch strategies available:
  3712                           ; Name         Instructions Cycles
  3713                           ; simple_byte           13     7 (average)
  3714                           ; direct_byte           17     9 (fixed)
  3715                           ; jumptable            263     9 (fixed)
  3716                           ;	Chosen strategy is simple_byte
  3717  0FA6  3A01               	xorlw	1	; case 1
  3718  0FA7  1903               	skipnz
  3719  0FA8  2F96               	goto	l1512
  3720  0FA9  3A03               	xorlw	3	; case 2
  3721  0FAA  1903               	skipnz
  3722  0FAB  2F99               	goto	l1514
  3723  0FAC  3A01               	xorlw	1	; case 3
  3724  0FAD  1903               	skipnz
  3725  0FAE  2F9C               	goto	l1516
  3726  0FAF  3A07               	xorlw	7	; case 4
  3727  0FB0  1903               	skipnz
  3728  0FB1  2F9F               	goto	l1518
  3729  0FB2  2FB3               	goto	l1524
  3730  0FB3                     l1524:	
  3731                           
  3732                           ;flex_lcd.h: 126: Lcd_Cmd(data);
  3733  0FB3  0877               	movf	Lcd_Out2@data,w
  3734  0FB4  3180  2084  318F   	fcall	_Lcd_Cmd
  3735  0FB7                     l1530:	
  3736                           ;flex_lcd.h: 127: while(*buffer)
  3737                           
  3738  0FB7  0874               	movf	Lcd_Out2@buffer,w
  3739  0FB8  0086               	movwf	6
  3740  0FB9  0187               	clrf	7
  3741  0FBA  0801               	movf	1,w
  3742  0FBB  1903               	btfsc	3,2
  3743  0FBC  0008               	return
  3744                           
  3745                           ;flex_lcd.h: 128: {
  3746                           ;flex_lcd.h: 129: Lcd_Chr_CP(*buffer);
  3747  0FBD  0874               	movf	Lcd_Out2@buffer,w
  3748  0FBE  0086               	movwf	6
  3749  0FBF  0187               	clrf	7
  3750  0FC0  0801               	movf	1,w
  3751  0FC1  3181  211B  318F   	fcall	_Lcd_Chr_CP
  3752                           
  3753                           ;flex_lcd.h: 130: buffer++;
  3754  0FC4  3001               	movlw	1
  3755  0FC5  00F5               	movwf	??_Lcd_Out2
  3756  0FC6  0875               	movf	??_Lcd_Out2,w
  3757  0FC7  07F4               	addwf	Lcd_Out2@buffer,f
  3758  0FC8  2FB7               	goto	l1530
  3759  0FC9                     __end_of_Lcd_Out2:	
  3760                           ;flex_lcd.h: 131: }
  3761                           ;flex_lcd.h: 132: return;
  3762                           
  3763                           
  3764                           	psect	text9
  3765  011B                     __ptext9:	
  3766 ;; *************** function _Lcd_Chr_CP *****************
  3767 ;; Defined at:
  3768 ;;		line 136 in file "flex_lcd.h"
  3769 ;; Parameters:    Size  Location     Type
  3770 ;;  data            1    wreg     unsigned char 
  3771 ;; Auto vars:     Size  Location     Type
  3772 ;;  data            1    2[COMMON] unsigned char 
  3773 ;; Return value:  Size  Location     Type
  3774 ;;                  1    wreg      void 
  3775 ;; Registers used:
  3776 ;;		wreg, status,2, status,0
  3777 ;; Tracked objects:
  3778 ;;		On entry : 0/0
  3779 ;;		On exit  : 0/0
  3780 ;;		Unchanged: 0/0
  3781 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
  3782 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  3783 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  3784 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  3785 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  3786 ;;Total ram usage:        3 bytes
  3787 ;; Hardware stack levels used:    1
  3788 ;; This function calls:
  3789 ;;		Nothing
  3790 ;; This function is called by:
  3791 ;;		_Lcd_Out
  3792 ;;		_Lcd_Out2
  3793 ;; This function uses a non-reentrant model
  3794 ;;
  3795                           
  3796                           
  3797                           ;psect for function _Lcd_Chr_CP
  3798  011B                     _Lcd_Chr_CP:	
  3799                           
  3800                           ;incstack = 0
  3801                           ; Regs used in _Lcd_Chr_CP: [wreg+status,2+status,0]
  3802                           ;Lcd_Chr_CP@data stored from wreg
  3803  011B  00F2               	movwf	Lcd_Chr_CP@data
  3804                           
  3805                           ;flex_lcd.h: 137: PORTDbits.RD3 = 0; PORTDbits.RD2 = 1;
  3806  011C  0140               	movlb	0	; select bank0
  3807  011D  118F               	bcf	15,3	;volatile
  3808  011E  150F               	bsf	15,2	;volatile
  3809                           
  3810                           ;flex_lcd.h: 138: PORTCbits.RC1 = (data & 0b10000000)>>7; PORTCbits.RC2 = (data & 0b0100
      +                          0000)>>6;
  3811  011F  0872               	movf	Lcd_Chr_CP@data,w
  3812  0120  00F0               	movwf	??_Lcd_Chr_CP
  3813  0121  3007               	movlw	7
  3814  0122                     u1095:	
  3815  0122  36F0               	lsrf	??_Lcd_Chr_CP,f
  3816  0123  0B89               	decfsz	9,f
  3817  0124  2922               	goto	u1095
  3818  0125  0870               	movf	??_Lcd_Chr_CP,w
  3819  0126  3901               	andlw	1
  3820  0127  00F1               	movwf	??_Lcd_Chr_CP+1
  3821  0128  0DF1               	rlf	??_Lcd_Chr_CP+1,f
  3822  0129  080E               	movf	14,w	;volatile
  3823  012A  0671               	xorwf	??_Lcd_Chr_CP+1,w
  3824  012B  39FD               	andlw	-3
  3825  012C  0671               	xorwf	??_Lcd_Chr_CP+1,w
  3826  012D  008E               	movwf	14	;volatile
  3827  012E  0872               	movf	Lcd_Chr_CP@data,w
  3828  012F  00F0               	movwf	??_Lcd_Chr_CP
  3829  0130  3006               	movlw	6
  3830  0131                     u1105:	
  3831  0131  36F0               	lsrf	??_Lcd_Chr_CP,f
  3832  0132  0B89               	decfsz	9,f
  3833  0133  2931               	goto	u1105
  3834  0134  0870               	movf	??_Lcd_Chr_CP,w
  3835  0135  3901               	andlw	1
  3836  0136  00F1               	movwf	??_Lcd_Chr_CP+1
  3837  0137  0DF1               	rlf	??_Lcd_Chr_CP+1,f
  3838  0138  0DF1               	rlf	??_Lcd_Chr_CP+1,f
  3839  0139  080E               	movf	14,w	;volatile
  3840  013A  0671               	xorwf	??_Lcd_Chr_CP+1,w
  3841  013B  39FB               	andlw	-5
  3842  013C  0671               	xorwf	??_Lcd_Chr_CP+1,w
  3843  013D  008E               	movwf	14	;volatile
  3844                           
  3845                           ;flex_lcd.h: 139: PORTDbits.RD0 = (data & 0b00100000)>>5; PORTDbits.RD1 = (data & 0b0001
      +                          0000)>>4;
  3846  013E  0872               	movf	Lcd_Chr_CP@data,w
  3847  013F  00F0               	movwf	??_Lcd_Chr_CP
  3848  0140  3005               	movlw	5
  3849  0141                     u1115:	
  3850  0141  36F0               	lsrf	??_Lcd_Chr_CP,f
  3851  0142  0B89               	decfsz	9,f
  3852  0143  2941               	goto	u1115
  3853  0144  3001               	movlw	1
  3854  0145  0570               	andwf	??_Lcd_Chr_CP,w
  3855  0146  00F1               	movwf	??_Lcd_Chr_CP+1
  3856  0147  080F               	movf	15,w	;volatile
  3857  0148  0671               	xorwf	??_Lcd_Chr_CP+1,w
  3858  0149  39FE               	andlw	-2
  3859  014A  0671               	xorwf	??_Lcd_Chr_CP+1,w
  3860  014B  008F               	movwf	15	;volatile
  3861  014C  0872               	movf	Lcd_Chr_CP@data,w
  3862  014D  00F0               	movwf	??_Lcd_Chr_CP
  3863  014E  3004               	movlw	4
  3864  014F                     u1125:	
  3865  014F  36F0               	lsrf	??_Lcd_Chr_CP,f
  3866  0150  0B89               	decfsz	9,f
  3867  0151  294F               	goto	u1125
  3868  0152  0870               	movf	??_Lcd_Chr_CP,w
  3869  0153  3901               	andlw	1
  3870  0154  00F1               	movwf	??_Lcd_Chr_CP+1
  3871  0155  0DF1               	rlf	??_Lcd_Chr_CP+1,f
  3872  0156  080F               	movf	15,w	;volatile
  3873  0157  0671               	xorwf	??_Lcd_Chr_CP+1,w
  3874  0158  39FD               	andlw	-3
  3875  0159  0671               	xorwf	??_Lcd_Chr_CP+1,w
  3876  015A  008F               	movwf	15	;volatile
  3877                           
  3878                           ;flex_lcd.h: 140: _delay(10);
  3879  015B  3003               	movlw	3
  3880  015C                     u2157:	
  3881  015C  0B89               	decfsz	9,f
  3882  015D  295C               	goto	u2157
  3883  015E  0000               	nop
  3884                           
  3885                           ;flex_lcd.h: 141: PORTDbits.RD3 = 1; _delay((unsigned long)((5)*(32000000/4000000.0))); 
      +                          PORTDbits.RD3 = 0;
  3886  015F  0140               	movlb	0	; select bank0
  3887  0160  158F               	bsf	15,3	;volatile
  3888  0161  300D               	movlw	13
  3889  0162                     u2167:	
  3890  0162  0B89               	decfsz	9,f
  3891  0163  2962               	goto	u2167
  3892  0164  0000               	nop
  3893  0165  0140               	movlb	0	; select bank0
  3894  0166  118F               	bcf	15,3	;volatile
  3895                           
  3896                           ;flex_lcd.h: 142: PORTCbits.RC1 = (data & 0b00001000)>>3; PORTCbits.RC2 = (data & 0b0000
      +                          0100)>>2;
  3897  0167  0872               	movf	Lcd_Chr_CP@data,w
  3898  0168  00F0               	movwf	??_Lcd_Chr_CP
  3899  0169  3003               	movlw	3
  3900  016A                     u1135:	
  3901  016A  36F0               	lsrf	??_Lcd_Chr_CP,f
  3902  016B  0B89               	decfsz	9,f
  3903  016C  296A               	goto	u1135
  3904  016D  0870               	movf	??_Lcd_Chr_CP,w
  3905  016E  3901               	andlw	1
  3906  016F  00F1               	movwf	??_Lcd_Chr_CP+1
  3907  0170  0DF1               	rlf	??_Lcd_Chr_CP+1,f
  3908  0171  080E               	movf	14,w	;volatile
  3909  0172  0671               	xorwf	??_Lcd_Chr_CP+1,w
  3910  0173  39FD               	andlw	-3
  3911  0174  0671               	xorwf	??_Lcd_Chr_CP+1,w
  3912  0175  008E               	movwf	14	;volatile
  3913  0176  0872               	movf	Lcd_Chr_CP@data,w
  3914  0177  00F0               	movwf	??_Lcd_Chr_CP
  3915  0178  3002               	movlw	2
  3916  0179                     u1145:	
  3917  0179  36F0               	lsrf	??_Lcd_Chr_CP,f
  3918  017A  0B89               	decfsz	9,f
  3919  017B  2979               	goto	u1145
  3920  017C  0870               	movf	??_Lcd_Chr_CP,w
  3921  017D  3901               	andlw	1
  3922  017E  00F1               	movwf	??_Lcd_Chr_CP+1
  3923  017F  0DF1               	rlf	??_Lcd_Chr_CP+1,f
  3924  0180  0DF1               	rlf	??_Lcd_Chr_CP+1,f
  3925  0181  080E               	movf	14,w	;volatile
  3926  0182  0671               	xorwf	??_Lcd_Chr_CP+1,w
  3927  0183  39FB               	andlw	-5
  3928  0184  0671               	xorwf	??_Lcd_Chr_CP+1,w
  3929  0185  008E               	movwf	14	;volatile
  3930                           
  3931                           ;flex_lcd.h: 143: PORTDbits.RD0 = (data & 0b00000010)>>1; PORTDbits.RD1 = (data & 0b0000
      +                          0001);
  3932  0186  0872               	movf	Lcd_Chr_CP@data,w
  3933  0187  00F0               	movwf	??_Lcd_Chr_CP
  3934  0188  3001               	movlw	1
  3935  0189                     u1155:	
  3936  0189  36F0               	lsrf	??_Lcd_Chr_CP,f
  3937  018A  0B89               	decfsz	9,f
  3938  018B  2989               	goto	u1155
  3939  018C  3001               	movlw	1
  3940  018D  0570               	andwf	??_Lcd_Chr_CP,w
  3941  018E  00F1               	movwf	??_Lcd_Chr_CP+1
  3942  018F  080F               	movf	15,w	;volatile
  3943  0190  0671               	xorwf	??_Lcd_Chr_CP+1,w
  3944  0191  39FE               	andlw	-2
  3945  0192  0671               	xorwf	??_Lcd_Chr_CP+1,w
  3946  0193  008F               	movwf	15	;volatile
  3947  0194  0872               	movf	Lcd_Chr_CP@data,w
  3948  0195  3901               	andlw	1
  3949  0196  00F0               	movwf	??_Lcd_Chr_CP
  3950  0197  0DF0               	rlf	??_Lcd_Chr_CP,f
  3951  0198  080F               	movf	15,w	;volatile
  3952  0199  0670               	xorwf	??_Lcd_Chr_CP,w
  3953  019A  39FD               	andlw	-3
  3954  019B  0670               	xorwf	??_Lcd_Chr_CP,w
  3955  019C  008F               	movwf	15	;volatile
  3956                           
  3957                           ;flex_lcd.h: 144: _delay(10);
  3958  019D  3003               	movlw	3
  3959  019E                     u2177:	
  3960  019E  0B89               	decfsz	9,f
  3961  019F  299E               	goto	u2177
  3962  01A0  0000               	nop
  3963                           
  3964                           ;flex_lcd.h: 145: PORTDbits.RD3 = 1; _delay((unsigned long)((5)*(32000000/4000000.0))); 
      +                          PORTDbits.RD3 = 0;
  3965  01A1  0140               	movlb	0	; select bank0
  3966  01A2  158F               	bsf	15,3	;volatile
  3967  01A3  300D               	movlw	13
  3968  01A4                     u2187:	
  3969  01A4  0B89               	decfsz	9,f
  3970  01A5  29A4               	goto	u2187
  3971  01A6  0000               	nop
  3972  01A7  0140               	movlb	0	; select bank0
  3973  01A8  118F               	bcf	15,3	;volatile
  3974                           
  3975                           ;flex_lcd.h: 146: _delay((unsigned long)((5)*(32000000/4000000.0))); _delay((unsigned lo
      +                          ng)((5500)*(32000000/4000000.0)));
  3976  01A9  300D               	movlw	13
  3977  01AA                     u2197:	
  3978  01AA  0B89               	decfsz	9,f
  3979  01AB  29AA               	goto	u2197
  3980  01AC  0000               	nop
  3981  01AD  303A               	movlw	58
  3982  01AE  00F0               	movwf	??_Lcd_Chr_CP
  3983  01AF  3023               	movlw	35
  3984  01B0                     u2207:	
  3985  01B0  0B89               	decfsz	9,f
  3986  01B1  29B0               	goto	u2207
  3987  01B2  0BF0               	decfsz	??_Lcd_Chr_CP,f
  3988  01B3  29B0               	goto	u2207
  3989  01B4  0000               	nop
  3990  01B5  0008               	return
  3991  01B6                     __end_of_Lcd_Chr_CP:	
  3992                           
  3993                           	psect	text10
  3994  01B6                     __ptext10:	
  3995 ;; *************** function _Lcd_Init *****************
  3996 ;; Defined at:
  3997 ;;		line 52 in file "flex_lcd.h"
  3998 ;; Parameters:    Size  Location     Type
  3999 ;;		None
  4000 ;; Auto vars:     Size  Location     Type
  4001 ;;  data            1    4[COMMON] unsigned char 
  4002 ;; Return value:  Size  Location     Type
  4003 ;;                  1    wreg      void 
  4004 ;; Registers used:
  4005 ;;		wreg, status,2, status,0, pclath, cstack
  4006 ;; Tracked objects:
  4007 ;;		On entry : 0/0
  4008 ;;		On exit  : 0/0
  4009 ;;		Unchanged: 0/0
  4010 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
  4011 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  4012 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  4013 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  4014 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  4015 ;;Total ram usage:        2 bytes
  4016 ;; Hardware stack levels used:    1
  4017 ;; Hardware stack levels required when called:    1
  4018 ;; This function calls:
  4019 ;;		_Lcd_Cmd
  4020 ;; This function is called by:
  4021 ;;		_main
  4022 ;; This function uses a non-reentrant model
  4023 ;;
  4024                           
  4025                           
  4026                           ;psect for function _Lcd_Init
  4027  01B6                     _Lcd_Init:	
  4028                           
  4029                           ;flex_lcd.h: 53: unsigned char data;
  4030                           ;flex_lcd.h: 54: TRISCbits.TRISC1 = 0;
  4031                           
  4032                           ;incstack = 0
  4033                           ; Regs used in _Lcd_Init: [wreg+status,2+status,0+pclath+cstack]
  4034  01B6  0140               	movlb	0	; select bank0
  4035  01B7  1093               	bcf	19,1	;volatile
  4036                           
  4037                           ;flex_lcd.h: 55: TRISCbits.TRISC2 = 0;
  4038  01B8  1113               	bcf	19,2	;volatile
  4039                           
  4040                           ;flex_lcd.h: 56: TRISDbits.TRISD0 = 0;
  4041  01B9  1014               	bcf	20,0	;volatile
  4042                           
  4043                           ;flex_lcd.h: 57: TRISDbits.TRISD1 = 0;
  4044  01BA  1094               	bcf	20,1	;volatile
  4045                           
  4046                           ;flex_lcd.h: 58: TRISDbits.TRISD3 = 0;
  4047  01BB  1194               	bcf	20,3	;volatile
  4048                           
  4049                           ;flex_lcd.h: 59: TRISDbits.TRISD2 = 0;
  4050  01BC  1114               	bcf	20,2	;volatile
  4051                           
  4052                           ;flex_lcd.h: 60: PORTCbits.RC1 = 0;
  4053  01BD  108E               	bcf	14,1	;volatile
  4054                           
  4055                           ;flex_lcd.h: 61: PORTCbits.RC2 = 0;
  4056  01BE  110E               	bcf	14,2	;volatile
  4057                           
  4058                           ;flex_lcd.h: 62: PORTDbits.RD0 = 0;
  4059  01BF  100F               	bcf	15,0	;volatile
  4060                           
  4061                           ;flex_lcd.h: 63: PORTDbits.RD1 = 0;
  4062  01C0  108F               	bcf	15,1	;volatile
  4063                           
  4064                           ;flex_lcd.h: 64: PORTDbits.RD3 = 0;
  4065  01C1  118F               	bcf	15,3	;volatile
  4066                           
  4067                           ;flex_lcd.h: 65: PORTDbits.RD2 = 0;
  4068  01C2  110F               	bcf	15,2	;volatile
  4069                           
  4070                           ;flex_lcd.h: 66: _delay((unsigned long)((5500)*(32000000/4000000.0)));
  4071  01C3  303A               	movlw	58
  4072  01C4  00F3               	movwf	??_Lcd_Init
  4073  01C5  3023               	movlw	35
  4074  01C6                     u2217:	
  4075  01C6  0B89               	decfsz	9,f
  4076  01C7  29C6               	goto	u2217
  4077  01C8  0BF3               	decfsz	??_Lcd_Init,f
  4078  01C9  29C6               	goto	u2217
  4079  01CA  0000               	nop
  4080                           
  4081                           ;flex_lcd.h: 67: _delay((unsigned long)((5500)*(32000000/4000000.0)));
  4082  01CB  303A               	movlw	58
  4083  01CC  00F3               	movwf	??_Lcd_Init
  4084  01CD  3023               	movlw	35
  4085  01CE                     u2227:	
  4086  01CE  0B89               	decfsz	9,f
  4087  01CF  29CE               	goto	u2227
  4088  01D0  0BF3               	decfsz	??_Lcd_Init,f
  4089  01D1  29CE               	goto	u2227
  4090  01D2  0000               	nop
  4091                           
  4092                           ;flex_lcd.h: 68: _delay((unsigned long)((5500)*(32000000/4000000.0)));
  4093  01D3  303A               	movlw	58
  4094  01D4  00F3               	movwf	??_Lcd_Init
  4095  01D5  3023               	movlw	35
  4096  01D6                     u2237:	
  4097  01D6  0B89               	decfsz	9,f
  4098  01D7  29D6               	goto	u2237
  4099  01D8  0BF3               	decfsz	??_Lcd_Init,f
  4100  01D9  29D6               	goto	u2237
  4101  01DA  0000               	nop
  4102                           
  4103                           ;flex_lcd.h: 69: _delay((unsigned long)((5500)*(32000000/4000000.0)));
  4104  01DB  303A               	movlw	58
  4105  01DC  00F3               	movwf	??_Lcd_Init
  4106  01DD  3023               	movlw	35
  4107  01DE                     u2247:	
  4108  01DE  0B89               	decfsz	9,f
  4109  01DF  29DE               	goto	u2247
  4110  01E0  0BF3               	decfsz	??_Lcd_Init,f
  4111  01E1  29DE               	goto	u2247
  4112  01E2  0000               	nop
  4113                           
  4114                           ;flex_lcd.h: 70: _delay((unsigned long)((5500)*(32000000/4000000.0)));
  4115  01E3  303A               	movlw	58
  4116  01E4  00F3               	movwf	??_Lcd_Init
  4117  01E5  3023               	movlw	35
  4118  01E6                     u2257:	
  4119  01E6  0B89               	decfsz	9,f
  4120  01E7  29E6               	goto	u2257
  4121  01E8  0BF3               	decfsz	??_Lcd_Init,f
  4122  01E9  29E6               	goto	u2257
  4123  01EA  0000               	nop
  4124                           
  4125                           ;flex_lcd.h: 71: _delay((unsigned long)((5500)*(32000000/4000000.0)));
  4126  01EB  303A               	movlw	58
  4127  01EC  00F3               	movwf	??_Lcd_Init
  4128  01ED  3023               	movlw	35
  4129  01EE                     u2267:	
  4130  01EE  0B89               	decfsz	9,f
  4131  01EF  29EE               	goto	u2267
  4132  01F0  0BF3               	decfsz	??_Lcd_Init,f
  4133  01F1  29EE               	goto	u2267
  4134  01F2  0000               	nop
  4135                           
  4136                           ;flex_lcd.h: 72: for(data = 1; data < 4; data ++)
  4137  01F3  01F4               	clrf	Lcd_Init@data
  4138  01F4  0AF4               	incf	Lcd_Init@data,f
  4139  01F5  3004               	movlw	4
  4140  01F6  0274               	subwf	Lcd_Init@data,w
  4141  01F7  1803               	btfsc	3,0
  4142  01F8  2A21               	goto	l58
  4143  01F9                     l57:	
  4144                           
  4145                           ;flex_lcd.h: 73: {
  4146                           ;flex_lcd.h: 74: PORTCbits.RC1 = 0; PORTCbits.RC2 = 0; PORTDbits.RD0 = 1; PORTDbits.RD1 
      +                          = 1; PORTDbits.RD3 = 0;
  4147  01F9  0140               	movlb	0	; select bank0
  4148  01FA  108E               	bcf	14,1	;volatile
  4149  01FB  110E               	bcf	14,2	;volatile
  4150  01FC  140F               	bsf	15,0	;volatile
  4151  01FD  148F               	bsf	15,1	;volatile
  4152  01FE  118F               	bcf	15,3	;volatile
  4153                           
  4154                           ;flex_lcd.h: 75: PORTDbits.RD2 = 0; PORTCbits.RC1 = 0; PORTCbits.RC2 = 0; PORTDbits.RD0 
      +                          = 1; PORTDbits.RD1 = 1;
  4155  01FF  110F               	bcf	15,2	;volatile
  4156  0200  108E               	bcf	14,1	;volatile
  4157  0201  110E               	bcf	14,2	;volatile
  4158  0202  140F               	bsf	15,0	;volatile
  4159  0203  148F               	bsf	15,1	;volatile
  4160                           
  4161                           ;flex_lcd.h: 76: PORTDbits.RD3 = 1; PORTDbits.RD2 = 0;
  4162  0204  158F               	bsf	15,3	;volatile
  4163  0205  110F               	bcf	15,2	;volatile
  4164                           
  4165                           ;flex_lcd.h: 77: _delay((unsigned long)((5)*(32000000/4000000.0)));
  4166  0206  300D               	movlw	13
  4167  0207                     u2277:	
  4168  0207  0B89               	decfsz	9,f
  4169  0208  2A07               	goto	u2277
  4170  0209  0000               	nop
  4171                           
  4172                           ;flex_lcd.h: 78: PORTCbits.RC1 = 0; PORTCbits.RC2 = 0; PORTDbits.RD0 = 1; PORTDbits.RD1 
      +                          = 1; PORTDbits.RD3 = 0;
  4173  020A  0140               	movlb	0	; select bank0
  4174  020B  108E               	bcf	14,1	;volatile
  4175  020C  110E               	bcf	14,2	;volatile
  4176  020D  140F               	bsf	15,0	;volatile
  4177  020E  148F               	bsf	15,1	;volatile
  4178  020F  118F               	bcf	15,3	;volatile
  4179                           
  4180                           ;flex_lcd.h: 79: PORTDbits.RD2 = 0;
  4181  0210  110F               	bcf	15,2	;volatile
  4182                           
  4183                           ;flex_lcd.h: 80: _delay((unsigned long)((5500)*(32000000/4000000.0)));
  4184  0211  303A               	movlw	58
  4185  0212  00F3               	movwf	??_Lcd_Init
  4186  0213  3023               	movlw	35
  4187  0214                     u2287:	
  4188  0214  0B89               	decfsz	9,f
  4189  0215  2A14               	goto	u2287
  4190  0216  0BF3               	decfsz	??_Lcd_Init,f
  4191  0217  2A14               	goto	u2287
  4192  0218  0000               	nop
  4193  0219  3001               	movlw	1
  4194  021A  00F3               	movwf	??_Lcd_Init
  4195  021B  0873               	movf	??_Lcd_Init,w
  4196  021C  07F4               	addwf	Lcd_Init@data,f
  4197  021D  3004               	movlw	4
  4198  021E  0274               	subwf	Lcd_Init@data,w
  4199  021F  1C03               	skipc
  4200  0220  29F9               	goto	l57
  4201  0221                     l58:	
  4202                           
  4203                           ;flex_lcd.h: 81: }
  4204                           ;flex_lcd.h: 82: PORTCbits.RC1 = 0; PORTCbits.RC2 = 0; PORTDbits.RD0 = 1; PORTDbits.RD1 
      +                          = 0; PORTDbits.RD3 = 0; PORTDbits.RD2 = 0;
  4205  0221  0140               	movlb	0	; select bank0
  4206  0222  108E               	bcf	14,1	;volatile
  4207  0223  110E               	bcf	14,2	;volatile
  4208  0224  140F               	bsf	15,0	;volatile
  4209  0225  108F               	bcf	15,1	;volatile
  4210  0226  118F               	bcf	15,3	;volatile
  4211  0227  110F               	bcf	15,2	;volatile
  4212                           
  4213                           ;flex_lcd.h: 83: PORTCbits.RC1 = 0; PORTCbits.RC2 = 0; PORTDbits.RD0 = 1; PORTDbits.RD1 
      +                          = 0; PORTDbits.RD3 = 1; PORTDbits.RD2 = 0;
  4214  0228  108E               	bcf	14,1	;volatile
  4215  0229  110E               	bcf	14,2	;volatile
  4216  022A  140F               	bsf	15,0	;volatile
  4217  022B  108F               	bcf	15,1	;volatile
  4218  022C  158F               	bsf	15,3	;volatile
  4219  022D  110F               	bcf	15,2	;volatile
  4220                           
  4221                           ;flex_lcd.h: 84: _delay((unsigned long)((5)*(32000000/4000000.0)));
  4222  022E  300D               	movlw	13
  4223  022F                     u2297:	
  4224  022F  0B89               	decfsz	9,f
  4225  0230  2A2F               	goto	u2297
  4226  0231  0000               	nop
  4227                           
  4228                           ;flex_lcd.h: 85: PORTCbits.RC1 = 0; PORTCbits.RC2 = 0; PORTDbits.RD0 = 1; PORTDbits.RD1 
      +                          = 0; PORTDbits.RD3 = 0; PORTDbits.RD2 = 0;
  4229  0232  0140               	movlb	0	; select bank0
  4230  0233  108E               	bcf	14,1	;volatile
  4231  0234  110E               	bcf	14,2	;volatile
  4232  0235  140F               	bsf	15,0	;volatile
  4233  0236  108F               	bcf	15,1	;volatile
  4234  0237  118F               	bcf	15,3	;volatile
  4235  0238  110F               	bcf	15,2	;volatile
  4236                           
  4237                           ;flex_lcd.h: 86: _delay((unsigned long)((5500)*(32000000/4000000.0)));
  4238  0239  303A               	movlw	58
  4239  023A  00F3               	movwf	??_Lcd_Init
  4240  023B  3023               	movlw	35
  4241  023C                     u2307:	
  4242  023C  0B89               	decfsz	9,f
  4243  023D  2A3C               	goto	u2307
  4244  023E  0BF3               	decfsz	??_Lcd_Init,f
  4245  023F  2A3C               	goto	u2307
  4246  0240  0000               	nop
  4247                           
  4248                           ;flex_lcd.h: 87: data = 40; Lcd_Cmd(data);
  4249  0241  3028               	movlw	40
  4250  0242  00F3               	movwf	??_Lcd_Init
  4251  0243  0873               	movf	??_Lcd_Init,w
  4252  0244  00F4               	movwf	Lcd_Init@data
  4253  0245  0874               	movf	Lcd_Init@data,w
  4254  0246  3180  2084  3181   	fcall	_Lcd_Cmd
  4255                           
  4256                           ;flex_lcd.h: 88: data = 16; Lcd_Cmd(data);
  4257  0249  3010               	movlw	16
  4258  024A  00F3               	movwf	??_Lcd_Init
  4259  024B  0873               	movf	??_Lcd_Init,w
  4260  024C  00F4               	movwf	Lcd_Init@data
  4261  024D  0874               	movf	Lcd_Init@data,w
  4262  024E  3180  2084  3181   	fcall	_Lcd_Cmd
  4263                           
  4264                           ;flex_lcd.h: 89: data = 1; Lcd_Cmd(data);
  4265  0251  01F4               	clrf	Lcd_Init@data
  4266  0252  0AF4               	incf	Lcd_Init@data,f
  4267  0253  0874               	movf	Lcd_Init@data,w
  4268  0254  3180  2084  3181   	fcall	_Lcd_Cmd
  4269                           
  4270                           ;flex_lcd.h: 90: data = 15; Lcd_Cmd(data);
  4271  0257  300F               	movlw	15
  4272  0258  00F3               	movwf	??_Lcd_Init
  4273  0259  0873               	movf	??_Lcd_Init,w
  4274  025A  00F4               	movwf	Lcd_Init@data
  4275  025B  0874               	movf	Lcd_Init@data,w
  4276  025C  3180  2084         	fcall	_Lcd_Cmd
  4277  025E  0008               	return
  4278  025F                     __end_of_Lcd_Init:	
  4279                           
  4280                           	psect	text11
  4281  0084                     __ptext11:	
  4282 ;; *************** function _Lcd_Cmd *****************
  4283 ;; Defined at:
  4284 ;;		line 150 in file "flex_lcd.h"
  4285 ;; Parameters:    Size  Location     Type
  4286 ;;  data            1    wreg     unsigned char 
  4287 ;; Auto vars:     Size  Location     Type
  4288 ;;  data            1    2[COMMON] unsigned char 
  4289 ;; Return value:  Size  Location     Type
  4290 ;;                  1    wreg      void 
  4291 ;; Registers used:
  4292 ;;		wreg, status,2, status,0
  4293 ;; Tracked objects:
  4294 ;;		On entry : 0/0
  4295 ;;		On exit  : 0/0
  4296 ;;		Unchanged: 0/0
  4297 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
  4298 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  4299 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  4300 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  4301 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  4302 ;;Total ram usage:        3 bytes
  4303 ;; Hardware stack levels used:    1
  4304 ;; This function calls:
  4305 ;;		Nothing
  4306 ;; This function is called by:
  4307 ;;		_Lcd_Init
  4308 ;;		_Lcd_Out
  4309 ;;		_Lcd_Out2
  4310 ;;		_crtc
  4311 ;;		_main
  4312 ;; This function uses a non-reentrant model
  4313 ;;
  4314                           
  4315                           
  4316                           ;psect for function _Lcd_Cmd
  4317  0084                     _Lcd_Cmd:	
  4318                           
  4319                           ;incstack = 0
  4320                           ; Regs used in _Lcd_Cmd: [wreg+status,2+status,0]
  4321                           ;Lcd_Cmd@data stored from wreg
  4322  0084  00F2               	movwf	Lcd_Cmd@data
  4323                           
  4324                           ;flex_lcd.h: 151: PORTDbits.RD3 = 0; PORTDbits.RD2 = 0;
  4325  0085  0140               	movlb	0	; select bank0
  4326  0086  118F               	bcf	15,3	;volatile
  4327  0087  110F               	bcf	15,2	;volatile
  4328                           
  4329                           ;flex_lcd.h: 152: PORTCbits.RC1 = (data & 0b10000000)>>7; PORTCbits.RC2 = (data & 0b0100
      +                          0000)>>6;
  4330  0088  0872               	movf	Lcd_Cmd@data,w
  4331  0089  00F0               	movwf	??_Lcd_Cmd
  4332  008A  3007               	movlw	7
  4333  008B                     u1025:	
  4334  008B  36F0               	lsrf	??_Lcd_Cmd,f
  4335  008C  0B89               	decfsz	9,f
  4336  008D  288B               	goto	u1025
  4337  008E  0870               	movf	??_Lcd_Cmd,w
  4338  008F  3901               	andlw	1
  4339  0090  00F1               	movwf	??_Lcd_Cmd+1
  4340  0091  0DF1               	rlf	??_Lcd_Cmd+1,f
  4341  0092  080E               	movf	14,w	;volatile
  4342  0093  0671               	xorwf	??_Lcd_Cmd+1,w
  4343  0094  39FD               	andlw	-3
  4344  0095  0671               	xorwf	??_Lcd_Cmd+1,w
  4345  0096  008E               	movwf	14	;volatile
  4346  0097  0872               	movf	Lcd_Cmd@data,w
  4347  0098  00F0               	movwf	??_Lcd_Cmd
  4348  0099  3006               	movlw	6
  4349  009A                     u1035:	
  4350  009A  36F0               	lsrf	??_Lcd_Cmd,f
  4351  009B  0B89               	decfsz	9,f
  4352  009C  289A               	goto	u1035
  4353  009D  0870               	movf	??_Lcd_Cmd,w
  4354  009E  3901               	andlw	1
  4355  009F  00F1               	movwf	??_Lcd_Cmd+1
  4356  00A0  0DF1               	rlf	??_Lcd_Cmd+1,f
  4357  00A1  0DF1               	rlf	??_Lcd_Cmd+1,f
  4358  00A2  080E               	movf	14,w	;volatile
  4359  00A3  0671               	xorwf	??_Lcd_Cmd+1,w
  4360  00A4  39FB               	andlw	-5
  4361  00A5  0671               	xorwf	??_Lcd_Cmd+1,w
  4362  00A6  008E               	movwf	14	;volatile
  4363                           
  4364                           ;flex_lcd.h: 153: PORTDbits.RD0 = (data & 0b00100000)>>5; PORTDbits.RD1 = (data & 0b0001
      +                          0000)>>4;
  4365  00A7  0872               	movf	Lcd_Cmd@data,w
  4366  00A8  00F0               	movwf	??_Lcd_Cmd
  4367  00A9  3005               	movlw	5
  4368  00AA                     u1045:	
  4369  00AA  36F0               	lsrf	??_Lcd_Cmd,f
  4370  00AB  0B89               	decfsz	9,f
  4371  00AC  28AA               	goto	u1045
  4372  00AD  3001               	movlw	1
  4373  00AE  0570               	andwf	??_Lcd_Cmd,w
  4374  00AF  00F1               	movwf	??_Lcd_Cmd+1
  4375  00B0  080F               	movf	15,w	;volatile
  4376  00B1  0671               	xorwf	??_Lcd_Cmd+1,w
  4377  00B2  39FE               	andlw	-2
  4378  00B3  0671               	xorwf	??_Lcd_Cmd+1,w
  4379  00B4  008F               	movwf	15	;volatile
  4380  00B5  0872               	movf	Lcd_Cmd@data,w
  4381  00B6  00F0               	movwf	??_Lcd_Cmd
  4382  00B7  3004               	movlw	4
  4383  00B8                     u1055:	
  4384  00B8  36F0               	lsrf	??_Lcd_Cmd,f
  4385  00B9  0B89               	decfsz	9,f
  4386  00BA  28B8               	goto	u1055
  4387  00BB  0870               	movf	??_Lcd_Cmd,w
  4388  00BC  3901               	andlw	1
  4389  00BD  00F1               	movwf	??_Lcd_Cmd+1
  4390  00BE  0DF1               	rlf	??_Lcd_Cmd+1,f
  4391  00BF  080F               	movf	15,w	;volatile
  4392  00C0  0671               	xorwf	??_Lcd_Cmd+1,w
  4393  00C1  39FD               	andlw	-3
  4394  00C2  0671               	xorwf	??_Lcd_Cmd+1,w
  4395  00C3  008F               	movwf	15	;volatile
  4396                           
  4397                           ;flex_lcd.h: 154: _delay(10);
  4398  00C4  3003               	movlw	3
  4399  00C5                     u2317:	
  4400  00C5  0B89               	decfsz	9,f
  4401  00C6  28C5               	goto	u2317
  4402  00C7  0000               	nop
  4403                           
  4404                           ;flex_lcd.h: 155: PORTDbits.RD3 = 1; _delay((unsigned long)((5)*(32000000/4000000.0))); 
      +                          PORTDbits.RD3 = 0;
  4405  00C8  0140               	movlb	0	; select bank0
  4406  00C9  158F               	bsf	15,3	;volatile
  4407  00CA  300D               	movlw	13
  4408  00CB                     u2327:	
  4409  00CB  0B89               	decfsz	9,f
  4410  00CC  28CB               	goto	u2327
  4411  00CD  0000               	nop
  4412  00CE  0140               	movlb	0	; select bank0
  4413  00CF  118F               	bcf	15,3	;volatile
  4414                           
  4415                           ;flex_lcd.h: 156: PORTCbits.RC1 = (data & 0b00001000)>>3; PORTCbits.RC2 = (data & 0b0000
      +                          0100)>>2;
  4416  00D0  0872               	movf	Lcd_Cmd@data,w
  4417  00D1  00F0               	movwf	??_Lcd_Cmd
  4418  00D2  3003               	movlw	3
  4419  00D3                     u1065:	
  4420  00D3  36F0               	lsrf	??_Lcd_Cmd,f
  4421  00D4  0B89               	decfsz	9,f
  4422  00D5  28D3               	goto	u1065
  4423  00D6  0870               	movf	??_Lcd_Cmd,w
  4424  00D7  3901               	andlw	1
  4425  00D8  00F1               	movwf	??_Lcd_Cmd+1
  4426  00D9  0DF1               	rlf	??_Lcd_Cmd+1,f
  4427  00DA  080E               	movf	14,w	;volatile
  4428  00DB  0671               	xorwf	??_Lcd_Cmd+1,w
  4429  00DC  39FD               	andlw	-3
  4430  00DD  0671               	xorwf	??_Lcd_Cmd+1,w
  4431  00DE  008E               	movwf	14	;volatile
  4432  00DF  0872               	movf	Lcd_Cmd@data,w
  4433  00E0  00F0               	movwf	??_Lcd_Cmd
  4434  00E1  3002               	movlw	2
  4435  00E2                     u1075:	
  4436  00E2  36F0               	lsrf	??_Lcd_Cmd,f
  4437  00E3  0B89               	decfsz	9,f
  4438  00E4  28E2               	goto	u1075
  4439  00E5  0870               	movf	??_Lcd_Cmd,w
  4440  00E6  3901               	andlw	1
  4441  00E7  00F1               	movwf	??_Lcd_Cmd+1
  4442  00E8  0DF1               	rlf	??_Lcd_Cmd+1,f
  4443  00E9  0DF1               	rlf	??_Lcd_Cmd+1,f
  4444  00EA  080E               	movf	14,w	;volatile
  4445  00EB  0671               	xorwf	??_Lcd_Cmd+1,w
  4446  00EC  39FB               	andlw	-5
  4447  00ED  0671               	xorwf	??_Lcd_Cmd+1,w
  4448  00EE  008E               	movwf	14	;volatile
  4449                           
  4450                           ;flex_lcd.h: 157: PORTDbits.RD0 = (data & 0b00000010)>>1; PORTDbits.RD1 = (data & 0b0000
      +                          0001);
  4451  00EF  0872               	movf	Lcd_Cmd@data,w
  4452  00F0  00F0               	movwf	??_Lcd_Cmd
  4453  00F1  3001               	movlw	1
  4454  00F2                     u1085:	
  4455  00F2  36F0               	lsrf	??_Lcd_Cmd,f
  4456  00F3  0B89               	decfsz	9,f
  4457  00F4  28F2               	goto	u1085
  4458  00F5  3001               	movlw	1
  4459  00F6  0570               	andwf	??_Lcd_Cmd,w
  4460  00F7  00F1               	movwf	??_Lcd_Cmd+1
  4461  00F8  080F               	movf	15,w	;volatile
  4462  00F9  0671               	xorwf	??_Lcd_Cmd+1,w
  4463  00FA  39FE               	andlw	-2
  4464  00FB  0671               	xorwf	??_Lcd_Cmd+1,w
  4465  00FC  008F               	movwf	15	;volatile
  4466  00FD  0872               	movf	Lcd_Cmd@data,w
  4467  00FE  3901               	andlw	1
  4468  00FF  00F0               	movwf	??_Lcd_Cmd
  4469  0100  0DF0               	rlf	??_Lcd_Cmd,f
  4470  0101  080F               	movf	15,w	;volatile
  4471  0102  0670               	xorwf	??_Lcd_Cmd,w
  4472  0103  39FD               	andlw	-3
  4473  0104  0670               	xorwf	??_Lcd_Cmd,w
  4474  0105  008F               	movwf	15	;volatile
  4475                           
  4476                           ;flex_lcd.h: 158: _delay(10);
  4477  0106  3003               	movlw	3
  4478  0107                     u2337:	
  4479  0107  0B89               	decfsz	9,f
  4480  0108  2907               	goto	u2337
  4481  0109  0000               	nop
  4482                           
  4483                           ;flex_lcd.h: 159: PORTDbits.RD3 = 1; _delay((unsigned long)((5)*(32000000/4000000.0))); 
      +                          PORTDbits.RD3 = 0;
  4484  010A  0140               	movlb	0	; select bank0
  4485  010B  158F               	bsf	15,3	;volatile
  4486  010C  300D               	movlw	13
  4487  010D                     u2347:	
  4488  010D  0B89               	decfsz	9,f
  4489  010E  290D               	goto	u2347
  4490  010F  0000               	nop
  4491  0110  0140               	movlb	0	; select bank0
  4492  0111  118F               	bcf	15,3	;volatile
  4493                           
  4494                           ;flex_lcd.h: 160: _delay((unsigned long)((5500)*(32000000/4000000.0)));
  4495  0112  303A               	movlw	58
  4496  0113  00F0               	movwf	??_Lcd_Cmd
  4497  0114  3023               	movlw	35
  4498  0115                     u2357:	
  4499  0115  0B89               	decfsz	9,f
  4500  0116  2915               	goto	u2357
  4501  0117  0BF0               	decfsz	??_Lcd_Cmd,f
  4502  0118  2915               	goto	u2357
  4503  0119  0000               	nop
  4504  011A  0008               	return
  4505  011B                     __end_of_Lcd_Cmd:	
  4506  007E                     btemp	set	126	;btemp
  4507  007E                     wtemp0	set	126


Data Sizes:
    Strings     83
    Constant    10
    Data        4
    BSS         42
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     31      77
    BANK1            80      0       0
    BANK2            80      0       0
    BANK3            80      0       0
    BANK4            80      0       0
    BANK5            80      0       0
    BANK6            80      0       0
    BANK7            80      0       0
    BANK8            80      0       0
    BANK9            80      0       0
    BANK10           80      0       0
    BANK11           80      0       0
    BANK12           80      0       0
    BANK13           80      0       0
    BANK14           80      0       0
    BANK15           80      0       0
    BANK16           80      0       0
    BANK17           80      0       0
    BANK18           80      0       0
    BANK19           80      0       0
    BANK20           80      0       0
    BANK21           80      0       0
    BANK22           80      0       0
    BANK23           80      0       0
    BANK24           80      0       0
    BANK25           80      0       0
    BANK26           80      0       0
    BANK27           80      0       0
    BANK28           80      0       0
    BANK29           80      0       0
    BANK30           80      0       0
    BANK31           80      0       0
    BANK32           80      0       0
    BANK33           80      0       0
    BANK34           80      0       0
    BANK35           80      0       0
    BANK36           80      0       0
    BANK37           80      0       0
    BANK38           80      0       0
    BANK39           80      0       0
    BANK40           80      0       0
    BANK41           80      0       0
    BANK42           80      0       0
    BANK43           80      0       0
    BANK44           80      0       0
    BANK45           80      0       0
    BANK46           80      0       0
    BANK47           80      0       0
    BANK48           80      0       0
    BANK49           80      0       0
    BANK50           80      0       0

Pointer List with Targets:

    sprintf@f	PTR const unsigned char  size(2) Largest target is 12
		 -> STR_10(CODE[12]), 

    sprintf@sp	PTR unsigned char  size(1) Largest target is 16
		 -> buffer1(BANK0[16]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    Lcd_Out2@buffer	PTR unsigned char  size(1) Largest target is 16
		 -> buffer1(BANK0[16]), 

    Lcd_Out@buffer	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_11(CODE[10]), STR_9(CODE[5]), STR_8(CODE[10]), STR_7(CODE[11]), 
		 -> STR_6(CODE[9]), STR_5(CODE[9]), STR_4(CODE[7]), STR_3(CODE[5]), 
		 -> STR_2(CODE[10]), STR_1(CODE[5]), 


Critical Paths under _main in COMMON

    _sprintf->___lwmod
    ___lwmod->___lwdiv
    _crtc->___wmul
    ___wmul->___awdiv
    _Lcd_Out->_Lcd_Chr_CP
    _Lcd_Out->_Lcd_Cmd
    _Lcd_Out2->_Lcd_Chr_CP
    _Lcd_Out2->_Lcd_Cmd
    _Lcd_Init->_Lcd_Cmd

Critical Paths under _main in BANK0

    _main->_crtc
    _crtc->___wmul

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _main in BANK16

    None.

Critical Paths under _main in BANK17

    None.

Critical Paths under _main in BANK18

    None.

Critical Paths under _main in BANK19

    None.

Critical Paths under _main in BANK20

    None.

Critical Paths under _main in BANK21

    None.

Critical Paths under _main in BANK22

    None.

Critical Paths under _main in BANK23

    None.

Critical Paths under _main in BANK24

    None.

Critical Paths under _main in BANK25

    None.

Critical Paths under _main in BANK26

    None.

Critical Paths under _main in BANK27

    None.

Critical Paths under _main in BANK28

    None.

Critical Paths under _main in BANK29

    None.

Critical Paths under _main in BANK30

    None.

Critical Paths under _main in BANK31

    None.

Critical Paths under _main in BANK32

    None.

Critical Paths under _main in BANK33

    None.

Critical Paths under _main in BANK34

    None.

Critical Paths under _main in BANK35

    None.

Critical Paths under _main in BANK36

    None.

Critical Paths under _main in BANK37

    None.

Critical Paths under _main in BANK38

    None.

Critical Paths under _main in BANK39

    None.

Critical Paths under _main in BANK40

    None.

Critical Paths under _main in BANK41

    None.

Critical Paths under _main in BANK42

    None.

Critical Paths under _main in BANK43

    None.

Critical Paths under _main in BANK44

    None.

Critical Paths under _main in BANK45

    None.

Critical Paths under _main in BANK46

    None.

Critical Paths under _main in BANK47

    None.

Critical Paths under _main in BANK48

    None.

Critical Paths under _main in BANK49

    None.

Critical Paths under _main in BANK50

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 9     5      4   11555
                                             22 BANK0      9     5      4
                            _Lcd_Cmd
                           _Lcd_Init
                            _Lcd_Out
                           _Lcd_Out2
                             ___wmul
                               _crtc
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             27    19      8    1148
                                              0 BANK0     19    11      8
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (2) ___lwmod                                              6     2      4     287
                                              8 COMMON     6     2      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              8     4      4     290
                                              0 COMMON     8     4      4
 ---------------------------------------------------------------------------------
 (1) _crtc                                                20     6     14    6199
                                              2 BANK0     20     6     14
                            _Lcd_Cmd
                            _Lcd_Out
                            ___awdiv
                             ___wmul
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4    1244
                                              9 COMMON     4     0      4
                                              0 BANK0      2     2      0
                            ___awdiv (ARG)
 ---------------------------------------------------------------------------------
 (2) ___awdiv                                              9     5      4    1836
                                              0 COMMON     9     5      4
 ---------------------------------------------------------------------------------
 (2) _Lcd_Out                                              6     3      3    1813
                                              3 COMMON     6     3      3
                         _Lcd_Chr_CP
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (1) _Lcd_Out2                                             5     3      2     661
                                              3 COMMON     5     3      2
                         _Lcd_Chr_CP
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (3) _Lcd_Chr_CP                                           3     3      0     176
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (1) _Lcd_Init                                             2     2      0     314
                                              3 COMMON     2     2      0
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (3) _Lcd_Cmd                                              3     3      0     176
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Lcd_Cmd
   _Lcd_Init
     _Lcd_Cmd
   _Lcd_Out
     _Lcd_Chr_CP
     _Lcd_Cmd
   _Lcd_Out2
     _Lcd_Chr_CP
     _Lcd_Cmd
   ___wmul
     ___awdiv (ARG)
   _crtc
     _Lcd_Cmd
     _Lcd_Out
       _Lcd_Chr_CP
       _Lcd_Cmd
     ___awdiv
     ___wmul
       ___awdiv (ARG)
   _sprintf
     ___lwdiv
     ___lwmod
       ___lwdiv (ARG)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             FF0      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      E       E       2      100.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     1F      4D       5       96.3%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BITBANK2            50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BANK2               50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BITBANK3            50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BANK3               50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITBANK4            50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BANK4               50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITBANK5            50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BANK5               50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITBANK6            50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BANK6               50      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITBANK7            50      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BANK7               50      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITBANK8            50      0       0      20        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BANK8               50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BITBANK9            50      0       0      22        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BANK9               50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BITBANK10           50      0       0      24        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BANK10              50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BITBANK11           50      0       0      26        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BANK11              50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
ABS                  0      0      5B      28        0.0%
BITBANK12           50      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BANK12              50      0       0      30        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITBANK13           50      0       0      31        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BANK13              50      0       0      32        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%
BITBANK14           50      0       0      33        0.0%
BITSFR32             0      0       0      33        0.0%
SFR32                0      0       0      33        0.0%
BANK14              50      0       0      34        0.0%
BITSFR33             0      0       0      34        0.0%
SFR33                0      0       0      34        0.0%
BITBANK15           50      0       0      35        0.0%
BITSFR34             0      0       0      35        0.0%
SFR34                0      0       0      35        0.0%
BANK15              50      0       0      36        0.0%
BITSFR35             0      0       0      36        0.0%
SFR35                0      0       0      36        0.0%
BITBANK16           50      0       0      37        0.0%
BITSFR36             0      0       0      37        0.0%
SFR36                0      0       0      37        0.0%
BANK16              50      0       0      38        0.0%
BITSFR37             0      0       0      38        0.0%
SFR37                0      0       0      38        0.0%
BITBANK17           50      0       0      39        0.0%
BITSFR38             0      0       0      39        0.0%
SFR38                0      0       0      39        0.0%
BANK17              50      0       0      40        0.0%
BITSFR39             0      0       0      40        0.0%
SFR39                0      0       0      40        0.0%
BITBANK18           50      0       0      41        0.0%
BITSFR40             0      0       0      41        0.0%
SFR40                0      0       0      41        0.0%
BANK18              50      0       0      42        0.0%
BITSFR41             0      0       0      42        0.0%
SFR41                0      0       0      42        0.0%
BITBANK19           50      0       0      43        0.0%
BITSFR42             0      0       0      43        0.0%
SFR42                0      0       0      43        0.0%
BANK19              50      0       0      44        0.0%
BITSFR43             0      0       0      44        0.0%
SFR43                0      0       0      44        0.0%
BITBANK20           50      0       0      45        0.0%
BITSFR44             0      0       0      45        0.0%
SFR44                0      0       0      45        0.0%
BANK20              50      0       0      46        0.0%
BITSFR45             0      0       0      46        0.0%
SFR45                0      0       0      46        0.0%
BITBANK21           50      0       0      47        0.0%
BITSFR46             0      0       0      47        0.0%
SFR46                0      0       0      47        0.0%
BANK21              50      0       0      48        0.0%
BITSFR47             0      0       0      48        0.0%
SFR47                0      0       0      48        0.0%
BITBANK22           50      0       0      49        0.0%
BITSFR48             0      0       0      49        0.0%
SFR48                0      0       0      49        0.0%
BANK22              50      0       0      50        0.0%
BITSFR49             0      0       0      50        0.0%
SFR49                0      0       0      50        0.0%
BITBANK23           50      0       0      51        0.0%
BITSFR50             0      0       0      51        0.0%
SFR50                0      0       0      51        0.0%
BANK23              50      0       0      52        0.0%
BITSFR51             0      0       0      52        0.0%
SFR51                0      0       0      52        0.0%
BITBANK24           50      0       0      53        0.0%
BITSFR52             0      0       0      53        0.0%
SFR52                0      0       0      53        0.0%
BANK24              50      0       0      54        0.0%
BITSFR53             0      0       0      54        0.0%
SFR53                0      0       0      54        0.0%
BITBANK25           50      0       0      55        0.0%
BITSFR54             0      0       0      55        0.0%
SFR54                0      0       0      55        0.0%
BANK25              50      0       0      56        0.0%
BITSFR55             0      0       0      56        0.0%
SFR55                0      0       0      56        0.0%
BITBANK26           50      0       0      57        0.0%
BITSFR56             0      0       0      57        0.0%
SFR56                0      0       0      57        0.0%
BANK26              50      0       0      58        0.0%
BITSFR57             0      0       0      58        0.0%
SFR57                0      0       0      58        0.0%
BITSFR58             0      0       0      59        0.0%
SFR58                0      0       0      59        0.0%
DATA                 0      0      5B      59        0.0%
BITBANK27           50      0       0      60        0.0%
BITSFR59             0      0       0      60        0.0%
SFR59                0      0       0      60        0.0%
BANK27              50      0       0      61        0.0%
BITSFR60             0      0       0      61        0.0%
SFR60                0      0       0      61        0.0%
BITBANK28           50      0       0      62        0.0%
BITSFR61             0      0       0      62        0.0%
SFR61                0      0       0      62        0.0%
BANK28              50      0       0      63        0.0%
BITSFR62             0      0       0      63        0.0%
SFR62                0      0       0      63        0.0%
BITBANK29           50      0       0      64        0.0%
BITSFR63             0      0       0      64        0.0%
SFR63                0      0       0      64        0.0%
BANK29              50      0       0      65        0.0%
BITBANK30           50      0       0      66        0.0%
BANK30              50      0       0      67        0.0%
BITBANK31           50      0       0      68        0.0%
BANK31              50      0       0      69        0.0%
BITBANK32           50      0       0      70        0.0%
BANK32              50      0       0      71        0.0%
BITBANK33           50      0       0      72        0.0%
BANK33              50      0       0      73        0.0%
BITBANK34           50      0       0      74        0.0%
BANK34              50      0       0      75        0.0%
BITBANK35           50      0       0      76        0.0%
BANK35              50      0       0      77        0.0%
BITBANK36           50      0       0      78        0.0%
BANK36              50      0       0      79        0.0%
BITBANK37           50      0       0      80        0.0%
BANK37              50      0       0      81        0.0%
BITBANK38           50      0       0      82        0.0%
BANK38              50      0       0      83        0.0%
BITBANK39           50      0       0      84        0.0%
BANK39              50      0       0      85        0.0%
BITBANK40           50      0       0      86        0.0%
BANK40              50      0       0      87        0.0%
BITBANK41           50      0       0      88        0.0%
BANK41              50      0       0      89        0.0%
BITBANK42           50      0       0      90        0.0%
BANK42              50      0       0      91        0.0%
BITBANK43           50      0       0      92        0.0%
BANK43              50      0       0      93        0.0%
BITBANK44           50      0       0      94        0.0%
BANK44              50      0       0      95        0.0%
BITBANK45           50      0       0      96        0.0%
BANK45              50      0       0      97        0.0%
BITBANK46           50      0       0      98        0.0%
BANK46              50      0       0      99        0.0%
BITBANK47           50      0       0     100        0.0%
BANK47              50      0       0     101        0.0%
BITBANK48           50      0       0     102        0.0%
BANK48              50      0       0     103        0.0%
BITBANK49           50      0       0     104        0.0%
BANK49              50      0       0     105        0.0%
BITBANK50           50      0       0     106        0.0%
BANK50              50      0       0     107        0.0%


Microchip Technology PIC Macro Assembler V1.45 build -152302408 
Symbol Table                                                                                   Thu Nov 15 12:16:39 2018

            __CFG_CP$OFF 0000                       l57 01F9                       l58 0221  
           ___awdiv@sign 0076      ___wmul@multiplicand 007B           _adressRTC_read 0069  
            __CFG_LVP$ON 0000                      l200 07CA                      l203 07CD  
                    l212 038E                      l141 077C                      l221 03B3  
                    l230 03BE                      l215 0394                      l152 078C  
                    l144 077E                      l224 03B5                      l161 079A  
                    l233 03C0                      l170 07A4                      l138 0775  
                    l242 0421                      l218 0396                      l155 0792  
                    l147 0786                      l251 0458                      l227 03B8  
                    l164 079C                      l236 03DD                      l173 07AA  
                    l149 078A                      l245 042E                      l182 07B4  
                    l158 0794                      l254 0475                      l191 07C2  
                    l167 07A2                      l239 0404                      l176 07AC  
                    l248 044B                      l185 07BA                      l370 0F4C  
                    l194 07C4                      l179 07B2                      l188 07BC  
                    l197 07C8             __CFG_CPD$OFF 0000                      _chr 002E  
                    _dhr 0020                      _rhr 0044             __CFG_BORV$LO 0000  
                    wreg 0009             __CFG_ZCD$OFF 0000                     l1400 006E  
                   l1340 0FD4                     l1404 0077                     l1334 0FCB  
                   l1430 0F86                     l1422 0F68                     l1512 0F96  
                   l1352 0FEC                     l1336 0FCE                     l1344 0FDA  
                   l1408 007F                     l1424 0F74                     l1530 0FB7  
                   l1514 0F99                     l1522 0FA5                     l1338 0FD1  
                   l1346 0FE8                     l1434 0F8F                     l1516 0F9C  
                   l1524 0FB3                     l1356 0F45                     l1452 0025  
                   l1612 0287                     l1518 0F9F                     l1382 0048  
                   l1550 0655                     l1542 05BC                     l1446 000D  
                   l1392 0050                     l1376 003D                     l1544 0600  
                   l1536 0567                     l1448 0019                     l1456 002E  
                   l1640 02DA                     l1394 005C                     l1570 0758  
                   l1562 06BF                     l1538 05AB                     l1634 02BB  
                   l1618 029F                     l1810 050E                     l1564 0703  
                   l1556 066A                     l1548 0611                     l1628 02B5  
                   l1724 038C                     l1582 0788                     l1558 06AE  
                   l1654 02ED                     l1646 02E9                     l1568 0714  
                   l1656 0265                     l1658 0327                     STR_1 1053  
                   STR_2 102B                     STR_3 1053                     STR_4 1051  
                   STR_5 103F                     STR_6 1048                     STR_7 1016  
                   STR_8 1035                     STR_9 1058                     u1025 008B  
                   u1105 0131                     u1035 009A                     u1115 0141  
                   u1045 00AA                     u1125 014F                     u2005 04C2  
                   u1055 00B8                     u1135 016A                     u2015 04E7  
                   u1065 00D3                     u1145 0179                     u1075 00E2  
                   u1155 0189                     u2107 048A                     u1085 00F2  
                   u1245 0053                     u1325 0F6B                     u2117 0533  
                   u2037 0367                     u2207 01B0                     u1095 0122  
                   u1415 001F                     u2127 054D                     u2047 03AB  
                   u2217 01C6                     u1265 005D                     u1185 0F4D  
                   u2137 076F                     u1505 0662                     u1345 0F75  
                   u1425 0026                     u2057 03D5                     u2307 023C  
                   u2227 01CE                     u1275 0067                     u1195 0F52  
                   u2147 07DE                     u1515 06B7                     u1355 0F7F  
                   u2067 03F2                     u2317 00C5                     u2237 01D6  
                   u2157 015C                     u1285 006F                     u1525 070C  
                   u1365 0F87                     u2077 0419                     u2327 00CB  
                   u2247 01DE                     u2167 0162                     u2087 0443  
                   u2337 0107                     u2257 01E6                     u2177 019E  
                   u2097 046D                     u2347 010D                     u2267 01EE  
                   u2187 01A4                     u1475 055F                     u1395 0010  
                   u2357 0115                     u2277 0207                     u2197 01AA  
                   u1485 05B4                     u2287 0214                     u1495 0609  
                   u2297 022F                     u1795 02D0                     u1995 049D  
           __CFG_WRT$OFF 0000            __CFG_FCMEN$ON 0000                     _cday 002C  
                   _cmin 0030                     _dmin 0022                     _cseg 0032  
                   _dseg 0024                     _crtc 0555                     _main 032C  
                   _rmin 0046                     _rseg 0048                     fsr0h 0005  
                   fsr1h 0007                     indf0 0000                     fsr0l 0004  
                   indf1 0001                     fsr1l 0006                     btemp 007E  
          __CFG_BOREN$ON 0000                     start 0002          __end_of_Lcd_Cmd 011B  
        __end_of_Lcd_Out 1000            __CFG_CSWEN$ON 0000            __CFG_MCLRE$ON 0000  
             _Lcd_Chr_CP 011B           Lcd_Out2@buffer 0074                    ?_crtc 004C  
                  ?_main 0060          __end_of___awdiv 0084                    STR_10 100A  
                  STR_11 1021            __CFG_WDTE$OFF 0000          ___awdiv@divisor 0070  
        __end_of___lwdiv 0F94          __end_of___lwmod 0033          ___awdiv@counter 0075  
                  _PORTA 000C                    _PORTC 000E                    _PORTD 000F  
                  _TRISA 0011            __CFG_PWRTE$ON 0000                    _cdate 002A  
        __end_of_dpowers 100A                    _cyear 0026                    status 0003  
                  wtemp0 007E          __end_of_sprintf 032C         __end_of_Lcd_Init 025F  
       __end_of_Lcd_Out2 0FC9          __initialization 07E6             __end_of_crtc 07E6  
           __end_of_main 0555                   ??_crtc 005A                   ??_main 0064  
       ___awdiv@dividend 0072                   _ANSELA 1F38                   _ANSELB 1F43  
                 _ANSELD 1F59           __CFG_WDTCCS$SC 0000                ??_Lcd_Cmd 0070  
              ??_Lcd_Out 0076              ?_Lcd_Chr_CP 0070                   ___wmul 0F42  
              ??___awdiv 0074           __CFG_STVREN$ON 0000                ??___lwdiv 0074  
              ??___lwmod 007C                   _cmonth 0028         ___awdiv@quotient 0077  
                 crtc@hr 0050                ??_sprintf 0052  __end_of__initialization 07FD  
         __pcstackCOMMON 0070             __pidataBANK0 0F38                ?_Lcd_Init 0070  
              ?_Lcd_Out2 0073      __size_of_Lcd_Chr_CP 009B               __pbssBANK0 0020  
             __pmaintext 032C                  ?___wmul 0079          __CFG_PPS1WAY$ON 0000  
    __CFG_RSTOSC$HFINT32 0000               ??_Lcd_Init 0073               ??_Lcd_Out2 0075  
                _SSP2ADD 0197                  _SSP2BUF 0196                  _Lcd_Cmd 0084  
                _Lcd_Out 0FC9     __CFG_SCANE$available 0000                  ___awdiv 0033  
        __size_of___wmul 001E                  ___lwdiv 0F60                  ___lwmod 0007  
                __ptext1 025F                  __ptext2 0007                  __ptext3 0F60  
                __ptext4 0555                  __ptext5 0F42                  __ptext6 0033  
                __ptext7 0FC9                  __ptext8 0F94                  __ptext9 011B  
                _buffer1 0034                  _dpowers 1000                  crtc@day 0052  
                crtc@min 004E                  crtc@seg 004C                  _sprintf 025F  
                clrloop0 0F3D     end_of_initialization 07FD             ??_Lcd_Chr_CP 0070  
              Lcd_Out2@x 0073                Lcd_Out2@y 0076    __CFG_WDTCPS$WDTCPS_31 0000  
              _PORTCbits 000E                _PORTDbits 000F                _TRISBbits 0012  
              _TRISCbits 0013                _TRISDbits 0014         __CFG_FEXTOSC$OFF 0000  
     __end_of_Lcd_Chr_CP 01B6           __end_of___wmul 0F60      start_initialization 07E6  
          Lcd_Out@buffer 0074        __size_of_Lcd_Init 00A9        __size_of_Lcd_Out2 0035  
       __CFG_LPBOREN$OFF 0000                 ??___wmul 007D              __pdataBANK0 0069  
              ___latbits 0004            __pcstackBANK0 004A                 ?_Lcd_Cmd 0070  
            sprintf@flag 0057                 ?_Lcd_Out 0073              sprintf@prec 0058  
              _adressRTC 006B         ___lwdiv@dividend 0072                 ?___awdiv 0070  
               ?___lwdiv 0070                 ?___lwmod 0078         ___lwdiv@quotient 0075  
               ?_sprintf 004A           ___wmul@product 004A                 _LATAbits 0016  
              clear_ram0 0F3C                 Lcd_Out@x 0073                 Lcd_Out@y 0077  
           Lcd_Init@data 0074        ___wmul@multiplier 0079                 _WPUBbits 1F44  
              crtc@month 0056             Lcd_Out2@data 0077                 _Lcd_Init 01B6  
               _Lcd_Out2 0F94         __size_of_Lcd_Cmd 0097         __size_of_Lcd_Out 0037  
       __size_of___awdiv 0051         __size_of___lwdiv 0034         __size_of___lwmod 002C  
             _ANSELCbits 1F4E               sprintf@val 0059           Lcd_Chr_CP@data 0072  
        ___lwdiv@divisor 0070          ___lwdiv@counter 0077                 __ptext10 01B6  
               __ptext11 0084             _SSP2CON1bits 019A             _SSP2CON2bits 019B  
       __size_of_sprintf 00CD              Lcd_Cmd@data 0072            __size_of_crtc 0291  
          __size_of_main 0229     __CFG_WDTCWS$WDTCWS_7 0000                 crtc@date 0054  
               main@argc 0060                 main@argv 0062                 crtc@year 0058  
           _SSP2STATbits 0199              Lcd_Out@data 0078           __pstringtext10 0000  
              sprintf@ap 0056                sprintf@sp 005B         ___lwmod@dividend 007A  
      __CFG_CLKOUTEN$OFF 0000               _OSCFRQbits 0893            __pstringtext1 1000  
          __pstringtext2 1016            __pstringtext3 1021            __pstringtext4 102B  
          __pstringtext5 1035            __pstringtext6 103F            __pstringtext7 1048  
          __pstringtext8 1051            __pstringtext9 1058                 sprintf@c 005C  
               sprintf@f 004A               _SSP2DATPPS 1EC9               _SSP2CLKPPS 1EC8  
        ___lwmod@divisor 0078          ___lwmod@counter 007D  
