

Microchip Technology PIC LITE Macro Assembler V1.45 build -152302408 
                                                                                               Thu Oct 04 12:50:29 2018

Microchip Technology Omniscient Code Generator v1.45 (Free mode) build 201711160504
     1                           	processor	16F18877
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	idataBANK1,global,class=CODE,delta=2
     5                           	psect	stringtext1,global,class=STRCODE,delta=2
     6                           	psect	stringtext2,global,class=STRCODE,delta=2
     7                           	psect	stringtext3,global,class=STRCODE,delta=2
     8                           	psect	stringtext4,global,class=STRCODE,delta=2
     9                           	psect	stringtext5,global,class=STRCODE,delta=2
    10                           	psect	stringtext6,global,class=STRCODE,delta=2
    11                           	psect	cinit,global,class=CODE,merge=1,delta=2
    12                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    13                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1
    14                           	psect	clrtext,global,class=CODE,delta=2
    15                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    16                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    17                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    18                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    19                           	psect	text1,local,class=CODE,merge=1,delta=2
    20                           	psect	text2,local,class=CODE,merge=1,delta=2
    21                           	psect	text3,local,class=CODE,merge=1,delta=2,group=2
    22                           	psect	text4,local,class=CODE,merge=1,delta=2
    23                           	psect	text5,local,class=CODE,merge=1,delta=2,group=2
    24                           	psect	text6,local,class=CODE,merge=1,delta=2,group=2
    25                           	psect	text7,local,class=CODE,merge=1,delta=2,group=2
    26                           	psect	text8,local,class=CODE,merge=1,delta=2,group=2
    27                           	psect	text9,local,class=CODE,merge=1,delta=2,group=2
    28                           	psect	text10,local,class=CODE,merge=1,delta=2,group=2
    29                           	psect	text11,local,class=CODE,merge=1,delta=2,group=2
    30                           	psect	text12,local,class=CODE,merge=1,delta=2,group=2
    31                           	psect	text13,local,class=CODE,merge=1,delta=2,group=2
    32                           	psect	text14,local,class=CODE,merge=1,delta=2,group=2
    33                           	psect	text15,local,class=CODE,merge=1,delta=2,group=2
    34                           	psect	text16,local,class=CODE,merge=1,delta=2,group=2
    35                           	psect	text17,local,class=CODE,merge=1,delta=2,group=2
    36                           	psect	text18,local,class=CODE,merge=1,delta=2,group=2
    37                           	psect	text19,local,class=CODE,merge=1,delta=2,group=2
    38                           	psect	text20,local,class=CODE,merge=1,delta=2,group=2
    39                           	psect	text21,local,class=CODE,merge=1,delta=2,group=2
    40                           	psect	text22,local,class=CODE,merge=1,delta=2,group=2
    41                           	psect	text23,local,class=CODE,merge=1,delta=2
    42                           	psect	text24,local,class=CODE,merge=1,delta=2
    43                           	psect	text25,local,class=CODE,merge=1,delta=2
    44                           	psect	text26,local,class=CODE,merge=1,delta=2
    45                           	psect	text27,local,class=CODE,merge=1,delta=2
    46                           	psect	intentry,global,class=CODE,delta=2
    47                           	psect	text29,local,class=CODE,merge=1,delta=2
    48                           	psect	text30,local,class=CODE,merge=1,delta=2
    49                           	psect	text31,local,class=CODE,merge=1,delta=2
    50                           	dabs	1,0x7E,2
    51  0000                     
    52                           ; Version 1.45
    53                           ; Generated 16/11/2017 GMT
    54                           ; 
    55                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    56                           ; All rights reserved.
    57                           ; 
    58                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    59                           ; 
    60                           ; Redistribution and use in source and binary forms, with or without modification, are
    61                           ; permitted provided that the following conditions are met:
    62                           ; 
    63                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    64                           ;        conditions and the following disclaimer.
    65                           ; 
    66                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    67                           ;        of conditions and the following disclaimer in the documentation and/or other
    68                           ;        materials provided with the distribution.
    69                           ; 
    70                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    71                           ;        software without specific prior written permission.
    72                           ; 
    73                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    74                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    75                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    76                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    77                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    78                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    79                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    80                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    81                           ; 
    82                           ; 
    83                           ; Code-generator required, PIC16F18877 Definitions
    84                           ; 
    85                           ; SFR Addresses
    86  0000                     	;# 
    87  0001                     	;# 
    88  0002                     	;# 
    89  0003                     	;# 
    90  0004                     	;# 
    91  0005                     	;# 
    92  0006                     	;# 
    93  0007                     	;# 
    94  0008                     	;# 
    95  0009                     	;# 
    96  000A                     	;# 
    97  000B                     	;# 
    98  000C                     	;# 
    99  000D                     	;# 
   100  000E                     	;# 
   101  000F                     	;# 
   102  0010                     	;# 
   103  0011                     	;# 
   104  0012                     	;# 
   105  0013                     	;# 
   106  0014                     	;# 
   107  0015                     	;# 
   108  0016                     	;# 
   109  0017                     	;# 
   110  0018                     	;# 
   111  0019                     	;# 
   112  001A                     	;# 
   113  001C                     	;# 
   114  001C                     	;# 
   115  001D                     	;# 
   116  001D                     	;# 
   117  001E                     	;# 
   118  001F                     	;# 
   119  008C                     	;# 
   120  008C                     	;# 
   121  008D                     	;# 
   122  008E                     	;# 
   123  008E                     	;# 
   124  008F                     	;# 
   125  0090                     	;# 
   126  0090                     	;# 
   127  0091                     	;# 
   128  0093                     	;# 
   129  0094                     	;# 
   130  0095                     	;# 
   131  0096                     	;# 
   132  0097                     	;# 
   133  0098                     	;# 
   134  0099                     	;# 
   135  009A                     	;# 
   136  009B                     	;# 
   137  009C                     	;# 
   138  009D                     	;# 
   139  009E                     	;# 
   140  010C                     	;# 
   141  010D                     	;# 
   142  010E                     	;# 
   143  010E                     	;# 
   144  010F                     	;# 
   145  0110                     	;# 
   146  0110                     	;# 
   147  0111                     	;# 
   148  0112                     	;# 
   149  0112                     	;# 
   150  0113                     	;# 
   151  0114                     	;# 
   152  0114                     	;# 
   153  0115                     	;# 
   154  0116                     	;# 
   155  0116                     	;# 
   156  0117                     	;# 
   157  0119                     	;# 
   158  0119                     	;# 
   159  0119                     	;# 
   160  011A                     	;# 
   161  011A                     	;# 
   162  011A                     	;# 
   163  011B                     	;# 
   164  011B                     	;# 
   165  011B                     	;# 
   166  011B                     	;# 
   167  011B                     	;# 
   168  011C                     	;# 
   169  011C                     	;# 
   170  011C                     	;# 
   171  011D                     	;# 
   172  011D                     	;# 
   173  011D                     	;# 
   174  011E                     	;# 
   175  011E                     	;# 
   176  011E                     	;# 
   177  011F                     	;# 
   178  011F                     	;# 
   179  011F                     	;# 
   180  011F                     	;# 
   181  011F                     	;# 
   182  018C                     	;# 
   183  018D                     	;# 
   184  018E                     	;# 
   185  018F                     	;# 
   186  0190                     	;# 
   187  0191                     	;# 
   188  0192                     	;# 
   189  0196                     	;# 
   190  0197                     	;# 
   191  0198                     	;# 
   192  0199                     	;# 
   193  019A                     	;# 
   194  019B                     	;# 
   195  019C                     	;# 
   196  020C                     	;# 
   197  020C                     	;# 
   198  020D                     	;# 
   199  020E                     	;# 
   200  020F                     	;# 
   201  020F                     	;# 
   202  0210                     	;# 
   203  0210                     	;# 
   204  0211                     	;# 
   205  0211                     	;# 
   206  0212                     	;# 
   207  0212                     	;# 
   208  0213                     	;# 
   209  0214                     	;# 
   210  0215                     	;# 
   211  0215                     	;# 
   212  0216                     	;# 
   213  0216                     	;# 
   214  0217                     	;# 
   215  0217                     	;# 
   216  0218                     	;# 
   217  0218                     	;# 
   218  0219                     	;# 
   219  021A                     	;# 
   220  021B                     	;# 
   221  021B                     	;# 
   222  021C                     	;# 
   223  021C                     	;# 
   224  021D                     	;# 
   225  021D                     	;# 
   226  021E                     	;# 
   227  021F                     	;# 
   228  028C                     	;# 
   229  028C                     	;# 
   230  028D                     	;# 
   231  028D                     	;# 
   232  028E                     	;# 
   233  028F                     	;# 
   234  0290                     	;# 
   235  0290                     	;# 
   236  0291                     	;# 
   237  0292                     	;# 
   238  0292                     	;# 
   239  0293                     	;# 
   240  0293                     	;# 
   241  0294                     	;# 
   242  0295                     	;# 
   243  0296                     	;# 
   244  0296                     	;# 
   245  0297                     	;# 
   246  0298                     	;# 
   247  0298                     	;# 
   248  0299                     	;# 
   249  0299                     	;# 
   250  029A                     	;# 
   251  029B                     	;# 
   252  029C                     	;# 
   253  029C                     	;# 
   254  029D                     	;# 
   255  030C                     	;# 
   256  030C                     	;# 
   257  030D                     	;# 
   258  030E                     	;# 
   259  030F                     	;# 
   260  0310                     	;# 
   261  0310                     	;# 
   262  0311                     	;# 
   263  0312                     	;# 
   264  0313                     	;# 
   265  0314                     	;# 
   266  0314                     	;# 
   267  0315                     	;# 
   268  0316                     	;# 
   269  0317                     	;# 
   270  0318                     	;# 
   271  0318                     	;# 
   272  0319                     	;# 
   273  031A                     	;# 
   274  031B                     	;# 
   275  031C                     	;# 
   276  031C                     	;# 
   277  031D                     	;# 
   278  031E                     	;# 
   279  031F                     	;# 
   280  038C                     	;# 
   281  038D                     	;# 
   282  038E                     	;# 
   283  0390                     	;# 
   284  0391                     	;# 
   285  0392                     	;# 
   286  040C                     	;# 
   287  040D                     	;# 
   288  040E                     	;# 
   289  040F                     	;# 
   290  0410                     	;# 
   291  0411                     	;# 
   292  0416                     	;# 
   293  0416                     	;# 
   294  0417                     	;# 
   295  0418                     	;# 
   296  0418                     	;# 
   297  0419                     	;# 
   298  041A                     	;# 
   299  041A                     	;# 
   300  041B                     	;# 
   301  041C                     	;# 
   302  041C                     	;# 
   303  041D                     	;# 
   304  041E                     	;# 
   305  041F                     	;# 
   306  048C                     	;# 
   307  048C                     	;# 
   308  048D                     	;# 
   309  048E                     	;# 
   310  048F                     	;# 
   311  048F                     	;# 
   312  0490                     	;# 
   313  0491                     	;# 
   314  0492                     	;# 
   315  0492                     	;# 
   316  0493                     	;# 
   317  0494                     	;# 
   318  0495                     	;# 
   319  0495                     	;# 
   320  0496                     	;# 
   321  0497                     	;# 
   322  0498                     	;# 
   323  0499                     	;# 
   324  049A                     	;# 
   325  049B                     	;# 
   326  049C                     	;# 
   327  049D                     	;# 
   328  050C                     	;# 
   329  050C                     	;# 
   330  050D                     	;# 
   331  050E                     	;# 
   332  050F                     	;# 
   333  050F                     	;# 
   334  0510                     	;# 
   335  0511                     	;# 
   336  0512                     	;# 
   337  0512                     	;# 
   338  0513                     	;# 
   339  0514                     	;# 
   340  0515                     	;# 
   341  0515                     	;# 
   342  0516                     	;# 
   343  0517                     	;# 
   344  0518                     	;# 
   345  0519                     	;# 
   346  051A                     	;# 
   347  051B                     	;# 
   348  051C                     	;# 
   349  051D                     	;# 
   350  058C                     	;# 
   351  058C                     	;# 
   352  058D                     	;# 
   353  058E                     	;# 
   354  058F                     	;# 
   355  058F                     	;# 
   356  0590                     	;# 
   357  0591                     	;# 
   358  0592                     	;# 
   359  0593                     	;# 
   360  060C                     	;# 
   361  060D                     	;# 
   362  060E                     	;# 
   363  060F                     	;# 
   364  0610                     	;# 
   365  0611                     	;# 
   366  0612                     	;# 
   367  0613                     	;# 
   368  0614                     	;# 
   369  0616                     	;# 
   370  0617                     	;# 
   371  0618                     	;# 
   372  0619                     	;# 
   373  061A                     	;# 
   374  061B                     	;# 
   375  061C                     	;# 
   376  061D                     	;# 
   377  061E                     	;# 
   378  068C                     	;# 
   379  068D                     	;# 
   380  068E                     	;# 
   381  068F                     	;# 
   382  0690                     	;# 
   383  0691                     	;# 
   384  0692                     	;# 
   385  0693                     	;# 
   386  0694                     	;# 
   387  070C                     	;# 
   388  070D                     	;# 
   389  070E                     	;# 
   390  070F                     	;# 
   391  0710                     	;# 
   392  0711                     	;# 
   393  0712                     	;# 
   394  0713                     	;# 
   395  0714                     	;# 
   396  0716                     	;# 
   397  0717                     	;# 
   398  0718                     	;# 
   399  0719                     	;# 
   400  071A                     	;# 
   401  071B                     	;# 
   402  071C                     	;# 
   403  071D                     	;# 
   404  071E                     	;# 
   405  0796                     	;# 
   406  0797                     	;# 
   407  0798                     	;# 
   408  0799                     	;# 
   409  079A                     	;# 
   410  079B                     	;# 
   411  080C                     	;# 
   412  080D                     	;# 
   413  080E                     	;# 
   414  080F                     	;# 
   415  0810                     	;# 
   416  0811                     	;# 
   417  0812                     	;# 
   418  0813                     	;# 
   419  0814                     	;# 
   420  081A                     	;# 
   421  081B                     	;# 
   422  081C                     	;# 
   423  081D                     	;# 
   424  081E                     	;# 
   425  081F                     	;# 
   426  088C                     	;# 
   427  088D                     	;# 
   428  088E                     	;# 
   429  088F                     	;# 
   430  0890                     	;# 
   431  0891                     	;# 
   432  0892                     	;# 
   433  0893                     	;# 
   434  0895                     	;# 
   435  0896                     	;# 
   436  0897                     	;# 
   437  0898                     	;# 
   438  0899                     	;# 
   439  089A                     	;# 
   440  089B                     	;# 
   441  090C                     	;# 
   442  090E                     	;# 
   443  090F                     	;# 
   444  091F                     	;# 
   445  098F                     	;# 
   446  098F                     	;# 
   447  0990                     	;# 
   448  0991                     	;# 
   449  0992                     	;# 
   450  0993                     	;# 
   451  0994                     	;# 
   452  0995                     	;# 
   453  0996                     	;# 
   454  0997                     	;# 
   455  1E0F                     	;# 
   456  1E10                     	;# 
   457  1E11                     	;# 
   458  1E12                     	;# 
   459  1E13                     	;# 
   460  1E14                     	;# 
   461  1E15                     	;# 
   462  1E16                     	;# 
   463  1E17                     	;# 
   464  1E18                     	;# 
   465  1E19                     	;# 
   466  1E1A                     	;# 
   467  1E1B                     	;# 
   468  1E1C                     	;# 
   469  1E1D                     	;# 
   470  1E1E                     	;# 
   471  1E1F                     	;# 
   472  1E20                     	;# 
   473  1E21                     	;# 
   474  1E22                     	;# 
   475  1E23                     	;# 
   476  1E24                     	;# 
   477  1E25                     	;# 
   478  1E26                     	;# 
   479  1E27                     	;# 
   480  1E28                     	;# 
   481  1E29                     	;# 
   482  1E2A                     	;# 
   483  1E2B                     	;# 
   484  1E2C                     	;# 
   485  1E2D                     	;# 
   486  1E2E                     	;# 
   487  1E2F                     	;# 
   488  1E30                     	;# 
   489  1E31                     	;# 
   490  1E32                     	;# 
   491  1E33                     	;# 
   492  1E34                     	;# 
   493  1E35                     	;# 
   494  1E36                     	;# 
   495  1E37                     	;# 
   496  1E8F                     	;# 
   497  1E90                     	;# 
   498  1E91                     	;# 
   499  1E92                     	;# 
   500  1E93                     	;# 
   501  1E94                     	;# 
   502  1E95                     	;# 
   503  1E96                     	;# 
   504  1E97                     	;# 
   505  1E9C                     	;# 
   506  1E9D                     	;# 
   507  1E9E                     	;# 
   508  1EA1                     	;# 
   509  1EA2                     	;# 
   510  1EA3                     	;# 
   511  1EA4                     	;# 
   512  1EA5                     	;# 
   513  1EA9                     	;# 
   514  1EAA                     	;# 
   515  1EAB                     	;# 
   516  1EAC                     	;# 
   517  1EB1                     	;# 
   518  1EB2                     	;# 
   519  1EB3                     	;# 
   520  1EB8                     	;# 
   521  1EB9                     	;# 
   522  1EBA                     	;# 
   523  1EBB                     	;# 
   524  1EBC                     	;# 
   525  1EBD                     	;# 
   526  1EBE                     	;# 
   527  1EC3                     	;# 
   528  1EC5                     	;# 
   529  1EC6                     	;# 
   530  1EC7                     	;# 
   531  1EC8                     	;# 
   532  1EC9                     	;# 
   533  1ECA                     	;# 
   534  1ECB                     	;# 
   535  1ECC                     	;# 
   536  1F10                     	;# 
   537  1F11                     	;# 
   538  1F12                     	;# 
   539  1F13                     	;# 
   540  1F14                     	;# 
   541  1F15                     	;# 
   542  1F16                     	;# 
   543  1F17                     	;# 
   544  1F18                     	;# 
   545  1F19                     	;# 
   546  1F1A                     	;# 
   547  1F1B                     	;# 
   548  1F1C                     	;# 
   549  1F1D                     	;# 
   550  1F1E                     	;# 
   551  1F1F                     	;# 
   552  1F20                     	;# 
   553  1F21                     	;# 
   554  1F22                     	;# 
   555  1F23                     	;# 
   556  1F24                     	;# 
   557  1F25                     	;# 
   558  1F26                     	;# 
   559  1F27                     	;# 
   560  1F28                     	;# 
   561  1F29                     	;# 
   562  1F2A                     	;# 
   563  1F2B                     	;# 
   564  1F2C                     	;# 
   565  1F2D                     	;# 
   566  1F2E                     	;# 
   567  1F2F                     	;# 
   568  1F30                     	;# 
   569  1F31                     	;# 
   570  1F32                     	;# 
   571  1F38                     	;# 
   572  1F39                     	;# 
   573  1F3A                     	;# 
   574  1F3B                     	;# 
   575  1F3C                     	;# 
   576  1F3D                     	;# 
   577  1F3E                     	;# 
   578  1F3F                     	;# 
   579  1F40                     	;# 
   580  1F41                     	;# 
   581  1F43                     	;# 
   582  1F44                     	;# 
   583  1F45                     	;# 
   584  1F46                     	;# 
   585  1F47                     	;# 
   586  1F48                     	;# 
   587  1F49                     	;# 
   588  1F4A                     	;# 
   589  1F4B                     	;# 
   590  1F4C                     	;# 
   591  1F4E                     	;# 
   592  1F4F                     	;# 
   593  1F50                     	;# 
   594  1F51                     	;# 
   595  1F52                     	;# 
   596  1F53                     	;# 
   597  1F54                     	;# 
   598  1F55                     	;# 
   599  1F56                     	;# 
   600  1F57                     	;# 
   601  1F59                     	;# 
   602  1F5A                     	;# 
   603  1F5B                     	;# 
   604  1F5C                     	;# 
   605  1F5D                     	;# 
   606  1F61                     	;# 
   607  1F62                     	;# 
   608  1F64                     	;# 
   609  1F65                     	;# 
   610  1F66                     	;# 
   611  1F67                     	;# 
   612  1F68                     	;# 
   613  1F69                     	;# 
   614  1F6A                     	;# 
   615  1F6B                     	;# 
   616  1F6C                     	;# 
   617  1F6D                     	;# 
   618  1FE4                     	;# 
   619  1FE5                     	;# 
   620  1FE6                     	;# 
   621  1FE7                     	;# 
   622  1FE8                     	;# 
   623  1FE9                     	;# 
   624  1FEA                     	;# 
   625  1FEB                     	;# 
   626  1FED                     	;# 
   627  1FEE                     	;# 
   628  1FEF                     	;# 
   629                           
   630                           	psect	idataBANK1
   631  0002                     __pidataBANK1:	
   632                           
   633                           ;initializer for _calibracion
   634  0002  3401               	retlw	1
   635  0003  3400               	retlw	0
   636                           
   637                           	psect	stringtext1
   638  1836                     __pstringtext1:	
   639  1836                     _dpowers:	
   640  1836  3401               	retlw	1
   641  1837  3400               	retlw	0
   642  1838  3400               	retlw	0
   643  1839  3400               	retlw	0
   644  183A  340A               	retlw	10
   645  183B  3400               	retlw	0
   646  183C  3400               	retlw	0
   647  183D  3400               	retlw	0
   648  183E  3464               	retlw	100
   649  183F  3400               	retlw	0
   650  1840  3400               	retlw	0
   651  1841  3400               	retlw	0
   652  1842  34E8               	retlw	232
   653  1843  3403               	retlw	3
   654  1844  3400               	retlw	0
   655  1845  3400               	retlw	0
   656  1846  3410               	retlw	16
   657  1847  3427               	retlw	39
   658  1848  3400               	retlw	0
   659  1849  3400               	retlw	0
   660  184A  34A0               	retlw	160
   661  184B  3486               	retlw	134
   662  184C  3401               	retlw	1
   663  184D  3400               	retlw	0
   664  184E  3440               	retlw	64
   665  184F  3442               	retlw	66
   666  1850  340F               	retlw	15
   667  1851  3400               	retlw	0
   668  1852  3480               	retlw	128
   669  1853  3496               	retlw	150
   670  1854  3498               	retlw	152
   671  1855  3400               	retlw	0
   672  1856  3400               	retlw	0
   673  1857  34E1               	retlw	225
   674  1858  34F5               	retlw	245
   675  1859  3405               	retlw	5
   676  185A  3400               	retlw	0
   677  185B  34CA               	retlw	202
   678  185C  349A               	retlw	154
   679  185D  343B               	retlw	59
   680  185E                     __end_of_dpowers:	
   681                           
   682                           	psect	stringtext2
   683  185E                     __pstringtext2:	
   684  185E                     __powers_:	
   685  185E  3400               	retlw	0
   686  185F  3480               	retlw	128
   687  1860  343F               	retlw	63
   688  1861  3400               	retlw	0
   689  1862  3420               	retlw	32
   690  1863  3441               	retlw	65
   691  1864  3400               	retlw	0
   692  1865  34C8               	retlw	200
   693  1866  3442               	retlw	66
   694  1867  3400               	retlw	0
   695  1868  347A               	retlw	122
   696  1869  3444               	retlw	68
   697  186A  3440               	retlw	64
   698  186B  341C               	retlw	28
   699  186C  3446               	retlw	70
   700  186D  3450               	retlw	80
   701  186E  34C3               	retlw	195
   702  186F  3447               	retlw	71
   703  1870  3424               	retlw	36
   704  1871  3474               	retlw	116
   705  1872  3449               	retlw	73
   706  1873  3497               	retlw	151
   707  1874  3418               	retlw	24
   708  1875  344B               	retlw	75
   709  1876  34BC               	retlw	188
   710  1877  34BE               	retlw	190
   711  1878  344C               	retlw	76
   712  1879  346B               	retlw	107
   713  187A  346E               	retlw	110
   714  187B  344E               	retlw	78
   715  187C  3403               	retlw	3
   716  187D  3415               	retlw	21
   717  187E  3450               	retlw	80
   718  187F  3479               	retlw	121
   719  1880  34AD               	retlw	173
   720  1881  3460               	retlw	96
   721  1882  34F3               	retlw	243
   722  1883  3449               	retlw	73
   723  1884  3471               	retlw	113
   724  1885                     __end_of__powers_:	
   725                           
   726                           	psect	stringtext3
   727  1800                     __pstringtext3:	
   728  1800                     __npowers_:	
   729  1800  3400               	retlw	0
   730  1801  3480               	retlw	128
   731  1802  343F               	retlw	63
   732  1803  34CD               	retlw	205
   733  1804  34CC               	retlw	204
   734  1805  343D               	retlw	61
   735  1806  34D7               	retlw	215
   736  1807  3423               	retlw	35
   737  1808  343C               	retlw	60
   738  1809  3412               	retlw	18
   739  180A  3483               	retlw	131
   740  180B  343A               	retlw	58
   741  180C  34B7               	retlw	183
   742  180D  34D1               	retlw	209
   743  180E  3438               	retlw	56
   744  180F  34C6               	retlw	198
   745  1810  3427               	retlw	39
   746  1811  3437               	retlw	55
   747  1812  3438               	retlw	56
   748  1813  3486               	retlw	134
   749  1814  3435               	retlw	53
   750  1815  34C0               	retlw	192
   751  1816  34D6               	retlw	214
   752  1817  3433               	retlw	51
   753  1818  34CC               	retlw	204
   754  1819  342B               	retlw	43
   755  181A  3432               	retlw	50
   756  181B  3470               	retlw	112
   757  181C  3489               	retlw	137
   758  181D  3430               	retlw	48
   759  181E  34E7               	retlw	231
   760  181F  34DB               	retlw	219
   761  1820  342E               	retlw	46
   762  1821  34E5               	retlw	229
   763  1822  343C               	retlw	60
   764  1823  341E               	retlw	30
   765  1824  3442               	retlw	66
   766  1825  34A2               	retlw	162
   767  1826  340D               	retlw	13
   768  1827                     __end_of__npowers_:	
   769  000C                     _PORTAbits	set	12
   770  0016                     _LATAbits	set	22
   771  000B                     _INTCONbits	set	11
   772  0011                     _TRISAbits	set	17
   773  000C                     _PORTA	set	12
   774  0012                     _TRISB	set	18
   775  000D                     _PORTB	set	13
   776  000F                     _PORTD	set	15
   777  000E                     _PORTC	set	14
   778  0017                     _LATBbits	set	23
   779  000F                     _PORTDbits	set	15
   780  000E                     _PORTCbits	set	14
   781  0014                     _TRISDbits	set	20
   782  0013                     _TRISCbits	set	19
   783  020C                     _TMR1	set	524
   784  0211                     _T1CLKbits	set	529
   785  020E                     _T1CONbits	set	526
   786  071A                     _PIE4bits	set	1818
   787  0710                     _PIR4bits	set	1808
   788  0893                     _OSCFRQbits	set	2195
   789  1F38                     _ANSELA	set	7992
   790  1F43                     _ANSELB	set	8003
   791  1F59                     _ANSELD	set	8025
   792  1F4E                     _ANSELC	set	8014
   793  1827                     STR_1:	
   794  1827  3420               	retlw	32	;' '
   795  1828  3420               	retlw	32	;' '
   796  1829  3449               	retlw	73	;'I'
   797  182A  346E               	retlw	110	;'n'
   798  182B  3474               	retlw	116	;'t'
   799  182C  3465               	retlw	101	;'e'
   800  182D  3472               	retlw	114	;'r'
   801  182E  3472               	retlw	114	;'r'
   802  182F  3475               	retlw	117	;'u'
   803  1830  3470               	retlw	112	;'p'
   804  1831  3474               	retlw	116	;'t'
   805  1832  3469               	retlw	105	;'i'
   806  1833  346F               	retlw	111	;'o'
   807  1834  346E               	retlw	110	;'n'
   808  1835  3400               	retlw	0
   809                           
   810                           	psect	stringtext4
   811  1885                     __pstringtext4:	
   812  1885                     STR_3:	
   813  1885  3446               	retlw	70	;'F'
   814  1886  3475               	retlw	117	;'u'
   815  1887  3465               	retlw	101	;'e'
   816  1888  3472               	retlw	114	;'r'
   817  1889  3461               	retlw	97	;'a'
   818  188A  3420               	retlw	32	;' '
   819  188B  3464               	retlw	100	;'d'
   820  188C  3465               	retlw	101	;'e'
   821  188D  3420               	retlw	32	;' '
   822  188E  3472               	retlw	114	;'r'
   823  188F  3461               	retlw	97	;'a'
   824  1890  346E               	retlw	110	;'n'
   825  1891  3467               	retlw	103	;'g'
   826  1892  346F               	retlw	111	;'o'
   827  1893  3400               	retlw	0
   828                           
   829                           	psect	stringtext5
   830  1894                     __pstringtext5:	
   831  1894                     STR_2:	
   832  1894  3444               	retlw	68	;'D'
   833  1895  3469               	retlw	105	;'i'
   834  1896  3473               	retlw	115	;'s'
   835  1897  3474               	retlw	116	;'t'
   836  1898  3461               	retlw	97	;'a'
   837  1899  346E               	retlw	110	;'n'
   838  189A  3463               	retlw	99	;'c'
   839  189B  3469               	retlw	105	;'i'
   840  189C  3461               	retlw	97	;'a'
   841  189D  343D               	retlw	61	;'='
   842  189E  3425               	retlw	37	;'%'
   843  189F  3431               	retlw	49	;'1'
   844  18A0  3466               	retlw	102	;'f'
   845  18A1  3400               	retlw	0
   846                           
   847                           	psect	stringtext6
   848  0000                     __pstringtext6:	
   849                           
   850                           ; #config settings
   851  0000                     
   852                           	psect	cinit
   853  002F                     start_initialization:	
   854  002F                     __initialization:	
   855                           
   856                           ; Initialize objects allocated to BANK1
   857  002F  0141               	movlb	1	; select bank1
   858  0030  3180  2002  3180   	fcall	__pidataBANK1	;fetch initializer
   859  0033  00D9               	movwf	__pdataBANK1& (0+127)
   860  0034  3180  2003  3180   	fcall	__pidataBANK1+1	;fetch initializer
   861  0037  00DA               	movwf	(__pdataBANK1+1)& (0+127)
   862                           
   863                           ; Clear objects allocated to BANK1
   864  0038  30C3               	movlw	low __pbssBANK1
   865  0039  0084               	movwf	4
   866  003A  3000               	movlw	high __pbssBANK1
   867  003B  0085               	movwf	5
   868  003C  3016               	movlw	22
   869  003D  3187  27F9         	fcall	clear_ram0
   870  003F                     end_of_initialization:	
   871                           ;End of C runtime variable initialization code
   872                           
   873  003F                     __end_of__initialization:	
   874  003F  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
   875  0040  0140               	movlb	0
   876  0041  318D  2D4E         	ljmp	_main	;jump to C main() function
   877                           
   878                           	psect	bssBANK1
   879  00C3                     __pbssBANK1:	
   880  00C3                     _distancia:	
   881  00C3                     	ds	3
   882  00C6                     _buffer1:	
   883  00C6                     	ds	16
   884  00D6                     _tiempo:	
   885  00D6                     	ds	3
   886                           
   887                           	psect	dataBANK1
   888  00D9                     __pdataBANK1:	
   889  00D9                     _calibracion:	
   890  00D9                     	ds	2
   891                           
   892                           	psect	clrtext
   893  07F9                     clear_ram0:	
   894                           ;	Called with FSR0 containing the base address, and
   895                           ;	WREG with the size to clear
   896                           
   897  07F9  0064               	clrwdt	;clear the watchdog before getting into this loop
   898  07FA                     clrloop0:	
   899  07FA  0180               	clrf	0	;clear RAM location pointed to by FSR
   900  07FB  3101               	addfsr 0,1
   901  07FC  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
   902  07FD  2FFA               	goto	clrloop0	;have we reached the end yet?
   903  07FE  3400               	retlw	0	;all done for this memory range, return
   904                           
   905                           	psect	cstackBANK1
   906  00A0                     __pcstackBANK1:	
   907  00A0                     ??_sprintf:	
   908                           
   909                           ; 1 bytes @ 0x0
   910  00A0                     	ds	6
   911  00A6                     _sprintf$1007:	
   912                           
   913                           ; 3 bytes @ 0x6
   914  00A6                     	ds	3
   915  00A9                     sprintf@ap:	
   916                           
   917                           ; 1 bytes @ 0x9
   918  00A9                     	ds	1
   919  00AA                     sprintf@flag:	
   920                           
   921                           ; 2 bytes @ 0xA
   922  00AA                     	ds	2
   923  00AC                     sprintf@val:	
   924                           
   925                           ; 4 bytes @ 0xC
   926  00AC                     	ds	4
   927  00B0                     sprintf@prec:	
   928                           
   929                           ; 2 bytes @ 0x10
   930  00B0                     	ds	2
   931  00B2                     sprintf@width:	
   932                           
   933                           ; 2 bytes @ 0x12
   934  00B2                     	ds	2
   935  00B4                     sprintf@tmpval:	
   936                           
   937                           ; 4 bytes @ 0x14
   938  00B4                     	ds	4
   939  00B8                     sprintf@exp:	
   940                           
   941                           ; 2 bytes @ 0x18
   942  00B8                     	ds	2
   943  00BA                     sprintf@sp:	
   944                           
   945                           ; 1 bytes @ 0x1A
   946  00BA                     	ds	1
   947  00BB                     sprintf@fval:	
   948                           
   949                           ; 3 bytes @ 0x1B
   950  00BB                     	ds	3
   951  00BE                     sprintf@c:	
   952                           
   953                           ; 1 bytes @ 0x1E
   954  00BE                     	ds	1
   955  00BF                     ?_main:	
   956  00BF                     main@argc:	
   957                           ; 2 bytes @ 0x1F
   958                           
   959                           
   960                           ; 2 bytes @ 0x1F
   961  00BF                     	ds	2
   962  00C1                     main@argv:	
   963                           
   964                           ; 2 bytes @ 0x21
   965  00C1                     	ds	2
   966                           
   967                           	psect	cstackCOMMON
   968  0070                     __pcstackCOMMON:	
   969  0070                     ?_isdigit:	
   970  0070                     ?_Lcd_Cmd:	
   971                           ; 1 bit 
   972                           
   973  0070                     ?_Lcd_Chr_CP:	
   974                           ; 1 bytes @ 0x0
   975                           
   976  0070                     ?_Lcd_Init:	
   977                           ; 1 bytes @ 0x0
   978                           
   979  0070                     ?_interrupcion:	
   980                           ; 1 bytes @ 0x0
   981                           
   982  0070                     ?i1_Lcd_Chr_CP:	
   983                           ; 1 bytes @ 0x0
   984                           
   985  0070                     ??i1_Lcd_Chr_CP:	
   986                           ; 1 bytes @ 0x0
   987                           
   988  0070                     ?i1_Lcd_Cmd:	
   989                           ; 1 bytes @ 0x0
   990                           
   991  0070                     ??i1_Lcd_Cmd:	
   992                           ; 1 bytes @ 0x0
   993                           
   994                           
   995                           ; 1 bytes @ 0x0
   996  0070                     	ds	2
   997  0072                     i1Lcd_Chr_CP@data:	
   998  0072                     i1Lcd_Cmd@data:	
   999                           ; 1 bytes @ 0x2
  1000                           
  1001                           
  1002                           ; 1 bytes @ 0x2
  1003  0072                     	ds	1
  1004  0073                     ?i1_Lcd_Out:	
  1005  0073                     i1Lcd_Out@x:	
  1006                           ; 1 bytes @ 0x3
  1007                           
  1008                           
  1009                           ; 1 bytes @ 0x3
  1010  0073                     	ds	1
  1011  0074                     i1Lcd_Out@buffer:	
  1012                           
  1013                           ; 2 bytes @ 0x4
  1014  0074                     	ds	2
  1015  0076                     ??i1_Lcd_Out:	
  1016                           
  1017                           ; 1 bytes @ 0x6
  1018  0076                     	ds	1
  1019  0077                     i1Lcd_Out@y:	
  1020                           
  1021                           ; 1 bytes @ 0x7
  1022  0077                     	ds	1
  1023  0078                     i1Lcd_Out@data:	
  1024                           
  1025                           ; 1 bytes @ 0x8
  1026  0078                     	ds	1
  1027  0079                     ??_interrupcion:	
  1028                           
  1029                           ; 1 bytes @ 0x9
  1030  0079                     	ds	3
  1031                           
  1032                           	psect	cstackBANK0
  1033  0020                     __pcstackBANK0:	
  1034  0020                     ?___ftge:	
  1035  0020                     ??_Lcd_Cmd:	
  1036                           ; 1 bit 
  1037                           
  1038  0020                     ??_Lcd_Chr_CP:	
  1039                           ; 1 bytes @ 0x0
  1040                           
  1041  0020                     ??_isdigit:	
  1042                           ; 1 bytes @ 0x0
  1043                           
  1044  0020                     ?___awmod:	
  1045                           ; 1 bytes @ 0x0
  1046                           
  1047  0020                     ?___ftpack:	
  1048                           ; 2 bytes @ 0x0
  1049                           
  1050  0020                     ?__tdiv_to_l_:	
  1051                           ; 3 bytes @ 0x0
  1052                           
  1053  0020                     ?__div_to_l_:	
  1054                           ; 4 bytes @ 0x0
  1055                           
  1056  0020                     ?___lldiv:	
  1057                           ; 4 bytes @ 0x0
  1058                           
  1059  0020                     ?___llmod:	
  1060                           ; 4 bytes @ 0x0
  1061                           
  1062  0020                     _isdigit$791:	
  1063                           ; 4 bytes @ 0x0
  1064                           
  1065  0020                     ___awmod@divisor:	
  1066                           ; 1 bytes @ 0x0
  1067                           
  1068  0020                     __div_to_l_@f1:	
  1069                           ; 2 bytes @ 0x0
  1070                           
  1071  0020                     ___ftpack@arg:	
  1072                           ; 3 bytes @ 0x0
  1073                           
  1074  0020                     __tdiv_to_l_@f1:	
  1075                           ; 3 bytes @ 0x0
  1076                           
  1077  0020                     ___ftge@ff1:	
  1078                           ; 3 bytes @ 0x0
  1079                           
  1080  0020                     ___lldiv@divisor:	
  1081                           ; 3 bytes @ 0x0
  1082                           
  1083  0020                     ___llmod@divisor:	
  1084                           ; 4 bytes @ 0x0
  1085                           
  1086                           
  1087                           ; 4 bytes @ 0x0
  1088  0020                     	ds	1
  1089  0021                     isdigit@c:	
  1090                           
  1091                           ; 1 bytes @ 0x1
  1092  0021                     	ds	1
  1093  0022                     Lcd_Chr_CP@data:	
  1094  0022                     Lcd_Cmd@data:	
  1095                           ; 1 bytes @ 0x2
  1096                           
  1097  0022                     ___awmod@dividend:	
  1098                           ; 1 bytes @ 0x2
  1099                           
  1100                           
  1101                           ; 2 bytes @ 0x2
  1102  0022                     	ds	1
  1103  0023                     ??_Lcd_Init:	
  1104  0023                     ?_Lcd_Out:	
  1105                           ; 1 bytes @ 0x3
  1106                           
  1107  0023                     ?_Lcd_Out2:	
  1108                           ; 1 bytes @ 0x3
  1109                           
  1110  0023                     Lcd_Out@x:	
  1111                           ; 1 bytes @ 0x3
  1112                           
  1113  0023                     Lcd_Out2@x:	
  1114                           ; 1 bytes @ 0x3
  1115                           
  1116  0023                     ___ftpack@exp:	
  1117                           ; 1 bytes @ 0x3
  1118                           
  1119  0023                     __div_to_l_@f2:	
  1120                           ; 1 bytes @ 0x3
  1121                           
  1122  0023                     __tdiv_to_l_@f2:	
  1123                           ; 3 bytes @ 0x3
  1124                           
  1125  0023                     ___ftge@ff2:	
  1126                           ; 3 bytes @ 0x3
  1127                           
  1128                           
  1129                           ; 3 bytes @ 0x3
  1130  0023                     	ds	1
  1131  0024                     ??___awmod:	
  1132  0024                     Lcd_Init@data:	
  1133                           ; 1 bytes @ 0x4
  1134                           
  1135  0024                     Lcd_Out2@buffer:	
  1136                           ; 1 bytes @ 0x4
  1137                           
  1138  0024                     ___ftpack@sign:	
  1139                           ; 1 bytes @ 0x4
  1140                           
  1141  0024                     Lcd_Out@buffer:	
  1142                           ; 1 bytes @ 0x4
  1143                           
  1144  0024                     ___lldiv@dividend:	
  1145                           ; 2 bytes @ 0x4
  1146                           
  1147  0024                     ___llmod@dividend:	
  1148                           ; 4 bytes @ 0x4
  1149                           
  1150                           
  1151                           ; 4 bytes @ 0x4
  1152  0024                     	ds	1
  1153  0025                     ??___ftpack:	
  1154  0025                     ??_Lcd_Out2:	
  1155                           ; 1 bytes @ 0x5
  1156                           
  1157  0025                     ___awmod@counter:	
  1158                           ; 1 bytes @ 0x5
  1159                           
  1160                           
  1161                           ; 1 bytes @ 0x5
  1162  0025                     	ds	1
  1163  0026                     ??__tdiv_to_l_:	
  1164  0026                     ??__div_to_l_:	
  1165                           ; 1 bytes @ 0x6
  1166                           
  1167  0026                     ??_Lcd_Out:	
  1168                           ; 1 bytes @ 0x6
  1169                           
  1170  0026                     ??___ftge:	
  1171                           ; 1 bytes @ 0x6
  1172                           
  1173  0026                     Lcd_Out2@y:	
  1174                           ; 1 bytes @ 0x6
  1175                           
  1176  0026                     ___awmod@sign:	
  1177                           ; 1 bytes @ 0x6
  1178                           
  1179                           
  1180                           ; 1 bytes @ 0x6
  1181  0026                     	ds	1
  1182  0027                     ?___awdiv:	
  1183  0027                     Lcd_Out@y:	
  1184                           ; 2 bytes @ 0x7
  1185                           
  1186  0027                     Lcd_Out2@data:	
  1187                           ; 1 bytes @ 0x7
  1188                           
  1189  0027                     ___awdiv@divisor:	
  1190                           ; 1 bytes @ 0x7
  1191                           
  1192                           
  1193                           ; 2 bytes @ 0x7
  1194  0027                     	ds	1
  1195  0028                     ??___lldiv:	
  1196  0028                     ??___llmod:	
  1197                           ; 1 bytes @ 0x8
  1198                           
  1199  0028                     ?___awtoft:	
  1200                           ; 1 bytes @ 0x8
  1201                           
  1202  0028                     ?___lltoft:	
  1203                           ; 3 bytes @ 0x8
  1204                           
  1205  0028                     ?___lwtoft:	
  1206                           ; 3 bytes @ 0x8
  1207                           
  1208  0028                     Lcd_Out@data:	
  1209                           ; 3 bytes @ 0x8
  1210                           
  1211  0028                     ___awtoft@c:	
  1212                           ; 1 bytes @ 0x8
  1213                           
  1214  0028                     ___lwtoft@c:	
  1215                           ; 2 bytes @ 0x8
  1216                           
  1217  0028                     ___lltoft@c:	
  1218                           ; 2 bytes @ 0x8
  1219                           
  1220                           
  1221                           ; 4 bytes @ 0x8
  1222  0028                     	ds	1
  1223  0029                     ___llmod@counter:	
  1224  0029                     ___awdiv@dividend:	
  1225                           ; 1 bytes @ 0x9
  1226                           
  1227  0029                     ___lldiv@quotient:	
  1228                           ; 2 bytes @ 0x9
  1229                           
  1230                           
  1231                           ; 4 bytes @ 0x9
  1232  0029                     	ds	1
  1233  002A                     __tdiv_to_l_@quot:	
  1234                           
  1235                           ; 4 bytes @ 0xA
  1236  002A                     	ds	1
  1237  002B                     ??___awdiv:	
  1238  002B                     ??___awtoft:	
  1239                           ; 1 bytes @ 0xB
  1240                           
  1241  002B                     ??___lwtoft:	
  1242                           ; 1 bytes @ 0xB
  1243                           
  1244                           
  1245                           ; 1 bytes @ 0xB
  1246  002B                     	ds	1
  1247  002C                     ??___lltoft:	
  1248  002C                     ___awdiv@counter:	
  1249                           ; 1 bytes @ 0xC
  1250                           
  1251                           
  1252                           ; 1 bytes @ 0xC
  1253  002C                     	ds	1
  1254  002D                     ___awdiv@sign:	
  1255  002D                     ___awtoft@sign:	
  1256                           ; 1 bytes @ 0xD
  1257                           
  1258  002D                     ___lldiv@counter:	
  1259                           ; 1 bytes @ 0xD
  1260                           
  1261  002D                     ___lltoft@exp:	
  1262                           ; 1 bytes @ 0xD
  1263                           
  1264                           
  1265                           ; 1 bytes @ 0xD
  1266  002D                     	ds	1
  1267  002E                     ?___ftneg:	
  1268  002E                     __tdiv_to_l_@cntr:	
  1269                           ; 3 bytes @ 0xE
  1270                           
  1271  002E                     ___awdiv@quotient:	
  1272                           ; 1 bytes @ 0xE
  1273                           
  1274  002E                     ___ftneg@f1:	
  1275                           ; 2 bytes @ 0xE
  1276                           
  1277  002E                     __div_to_l_@quot:	
  1278                           ; 3 bytes @ 0xE
  1279                           
  1280                           
  1281                           ; 4 bytes @ 0xE
  1282  002E                     	ds	1
  1283  002F                     __tdiv_to_l_@exp1:	
  1284                           
  1285                           ; 1 bytes @ 0xF
  1286  002F                     	ds	1
  1287  0030                     ?___wmul:	
  1288  0030                     ___wmul@multiplier:	
  1289                           ; 2 bytes @ 0x10
  1290                           
  1291                           
  1292                           ; 2 bytes @ 0x10
  1293  0030                     	ds	1
  1294  0031                     ??___ftneg:	
  1295                           
  1296                           ; 1 bytes @ 0x11
  1297  0031                     	ds	1
  1298  0032                     __div_to_l_@cntr:	
  1299  0032                     ___wmul@multiplicand:	
  1300                           ; 1 bytes @ 0x12
  1301                           
  1302                           
  1303                           ; 2 bytes @ 0x12
  1304  0032                     	ds	1
  1305  0033                     __div_to_l_@exp1:	
  1306                           
  1307                           ; 1 bytes @ 0x13
  1308  0033                     	ds	1
  1309  0034                     ??___wmul:	
  1310  0034                     ___wmul@product:	
  1311                           ; 1 bytes @ 0x14
  1312                           
  1313                           
  1314                           ; 2 bytes @ 0x14
  1315  0034                     	ds	2
  1316  0036                     ?___ftmul:	
  1317  0036                     ___ftmul@f1:	
  1318                           ; 3 bytes @ 0x16
  1319                           
  1320                           
  1321                           ; 3 bytes @ 0x16
  1322  0036                     	ds	3
  1323  0039                     ___ftmul@f2:	
  1324                           
  1325                           ; 3 bytes @ 0x19
  1326  0039                     	ds	3
  1327  003C                     ??___ftmul:	
  1328                           
  1329                           ; 1 bytes @ 0x1C
  1330  003C                     	ds	4
  1331  0040                     ___ftmul@exp:	
  1332                           
  1333                           ; 1 bytes @ 0x20
  1334  0040                     	ds	1
  1335  0041                     ___ftmul@f3_as_product:	
  1336                           
  1337                           ; 3 bytes @ 0x21
  1338  0041                     	ds	3
  1339  0044                     ___ftmul@cntr:	
  1340                           
  1341                           ; 1 bytes @ 0x24
  1342  0044                     	ds	1
  1343  0045                     ___ftmul@sign:	
  1344                           
  1345                           ; 1 bytes @ 0x25
  1346  0045                     	ds	1
  1347  0046                     ?_fround:	
  1348  0046                     ?_scale:	
  1349                           ; 3 bytes @ 0x26
  1350                           
  1351  0046                     ?___ftdiv:	
  1352                           ; 3 bytes @ 0x26
  1353                           
  1354  0046                     ___ftdiv@f2:	
  1355                           ; 3 bytes @ 0x26
  1356                           
  1357                           
  1358                           ; 3 bytes @ 0x26
  1359  0046                     	ds	3
  1360  0049                     ??_fround:	
  1361  0049                     ??_scale:	
  1362                           ; 1 bytes @ 0x29
  1363                           
  1364  0049                     ___ftdiv@f1:	
  1365                           ; 1 bytes @ 0x29
  1366                           
  1367                           
  1368                           ; 3 bytes @ 0x29
  1369  0049                     	ds	2
  1370  004B                     _scale$1006:	
  1371                           
  1372                           ; 3 bytes @ 0x2B
  1373  004B                     	ds	1
  1374  004C                     ??___ftdiv:	
  1375                           
  1376                           ; 1 bytes @ 0x2C
  1377  004C                     	ds	1
  1378  004D                     _fround$1005:	
  1379                           
  1380                           ; 3 bytes @ 0x2D
  1381  004D                     	ds	1
  1382  004E                     scale@scl:	
  1383                           
  1384                           ; 1 bytes @ 0x2E
  1385  004E                     	ds	1
  1386  004F                     ?___fttol:	
  1387  004F                     ___fttol@f1:	
  1388                           ; 4 bytes @ 0x2F
  1389                           
  1390                           
  1391                           ; 3 bytes @ 0x2F
  1392  004F                     	ds	1
  1393  0050                     ___ftdiv@cntr:	
  1394  0050                     _fround$1004:	
  1395                           ; 1 bytes @ 0x30
  1396                           
  1397                           
  1398                           ; 3 bytes @ 0x30
  1399  0050                     	ds	1
  1400  0051                     ___ftdiv@f3:	
  1401                           
  1402                           ; 3 bytes @ 0x31
  1403  0051                     	ds	2
  1404  0053                     ??___fttol:	
  1405  0053                     fround@prec:	
  1406                           ; 1 bytes @ 0x33
  1407                           
  1408                           
  1409                           ; 1 bytes @ 0x33
  1410  0053                     	ds	1
  1411  0054                     ___ftdiv@exp:	
  1412                           
  1413                           ; 1 bytes @ 0x34
  1414  0054                     	ds	1
  1415  0055                     ___ftdiv@sign:	
  1416                           
  1417                           ; 1 bytes @ 0x35
  1418  0055                     	ds	1
  1419  0056                     ?___ftadd:	
  1420  0056                     ___ftadd@f1:	
  1421                           ; 3 bytes @ 0x36
  1422                           
  1423                           
  1424                           ; 3 bytes @ 0x36
  1425  0056                     	ds	1
  1426  0057                     ___fttol@sign1:	
  1427                           
  1428                           ; 1 bytes @ 0x37
  1429  0057                     	ds	1
  1430  0058                     ___fttol@lval:	
  1431                           
  1432                           ; 4 bytes @ 0x38
  1433  0058                     	ds	1
  1434  0059                     ___ftadd@f2:	
  1435                           
  1436                           ; 3 bytes @ 0x39
  1437  0059                     	ds	3
  1438  005C                     ??___ftadd:	
  1439  005C                     ___fttol@exp1:	
  1440                           ; 1 bytes @ 0x3C
  1441                           
  1442                           
  1443                           ; 1 bytes @ 0x3C
  1444  005C                     	ds	4
  1445  0060                     ___ftadd@sign:	
  1446                           
  1447                           ; 1 bytes @ 0x40
  1448  0060                     	ds	1
  1449  0061                     ___ftadd@exp2:	
  1450                           
  1451                           ; 1 bytes @ 0x41
  1452  0061                     	ds	1
  1453  0062                     ___ftadd@exp1:	
  1454                           
  1455                           ; 1 bytes @ 0x42
  1456  0062                     	ds	1
  1457  0063                     ?___ftsub:	
  1458  0063                     ___ftsub@f2:	
  1459                           ; 3 bytes @ 0x43
  1460                           
  1461                           
  1462                           ; 3 bytes @ 0x43
  1463  0063                     	ds	3
  1464  0066                     ___ftsub@f1:	
  1465                           
  1466                           ; 3 bytes @ 0x46
  1467  0066                     	ds	3
  1468  0069                     ??___ftsub:	
  1469  0069                     ?_sprintf:	
  1470                           ; 1 bytes @ 0x49
  1471                           
  1472  0069                     sprintf@f:	
  1473                           ; 2 bytes @ 0x49
  1474                           
  1475                           
  1476                           ; 2 bytes @ 0x49
  1477  0069                     	ds	5
  1478  006E                     ??_main:	
  1479                           
  1480                           ; 1 bytes @ 0x4E
  1481  006E                     	ds	2
  1482                           
  1483                           	psect	maintext
  1484  0D4E                     __pmaintext:	
  1485 ;;
  1486 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  1487 ;;
  1488 ;; *************** function _main *****************
  1489 ;; Defined at:
  1490 ;;		line 38 in file "main.c"
  1491 ;; Parameters:    Size  Location     Type
  1492 ;;  argc            2   31[BANK1 ] int 
  1493 ;;  argv            2   33[BANK1 ] PTR PTR unsigned char 
  1494 ;; Auto vars:     Size  Location     Type
  1495 ;;		None
  1496 ;; Return value:  Size  Location     Type
  1497 ;;                  2   31[BANK1 ] int 
  1498 ;; Registers used:
  1499 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  1500 ;; Tracked objects:
  1501 ;;		On entry : B3F/0
  1502 ;;		On exit  : 0/0
  1503 ;;		Unchanged: 0/0
  1504 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
  1505 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  1506 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  1507 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  1508 ;;      Totals:         0       2       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  1509 ;;Total ram usage:        6 bytes
  1510 ;; Hardware stack levels required when called:    7
  1511 ;; This function calls:
  1512 ;;		_Lcd_Cmd
  1513 ;;		_Lcd_Init
  1514 ;;		_Lcd_Out
  1515 ;;		_Lcd_Out2
  1516 ;;		___awtoft
  1517 ;;		___ftadd
  1518 ;;		___ftdiv
  1519 ;;		___ftge
  1520 ;;		___ftmul
  1521 ;;		___ftneg
  1522 ;;		___lwtoft
  1523 ;;		_sprintf
  1524 ;; This function is called by:
  1525 ;;		Startup code after reset
  1526 ;; This function uses a non-reentrant model
  1527 ;;
  1528                           
  1529                           
  1530                           ;psect for function _main
  1531  0D4E                     _main:	
  1532                           
  1533                           ;main.c: 39: OSCFRQbits.HFFRQ=0b110;
  1534                           
  1535                           ;incstack = 0
  1536                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  1537  0D4E  0151               	movlb	17	; select bank17
  1538  0D4F  0813               	movf	19,w	;volatile
  1539  0D50  39F8               	andlw	-8
  1540  0D51  3806               	iorlw	6
  1541  0D52  0093               	movwf	19	;volatile
  1542                           
  1543                           ;main.c: 41: PORTC=0;
  1544  0D53  0140               	movlb	0	; select bank0
  1545  0D54  018E               	clrf	14	;volatile
  1546                           
  1547                           ;main.c: 42: PORTD=0;
  1548  0D55  018F               	clrf	15	;volatile
  1549                           
  1550                           ;main.c: 43: ANSELC=0b00000000;
  1551  0D56  017E               	movlb	62	; select bank62
  1552  0D57  01CE               	clrf	78	;volatile
  1553                           
  1554                           ;main.c: 44: ANSELD=0b00000000;
  1555  0D58  01D9               	clrf	89	;volatile
  1556                           
  1557                           ;main.c: 46: PORTB=0;
  1558  0D59  0140               	movlb	0	; select bank0
  1559  0D5A  018D               	clrf	13	;volatile
  1560                           
  1561                           ;main.c: 47: ANSELB=0;
  1562  0D5B  017E               	movlb	62	; select bank62
  1563  0D5C  01C3               	clrf	67	;volatile
  1564                           
  1565                           ;main.c: 48: TRISB=0;
  1566  0D5D  0140               	movlb	0	; select bank0
  1567  0D5E  0192               	clrf	18	;volatile
  1568                           
  1569                           ;main.c: 51: PORTA=0;
  1570  0D5F  018C               	clrf	12	;volatile
  1571                           
  1572                           ;main.c: 52: ANSELA=0;
  1573  0D60  017E               	movlb	62	; select bank62
  1574  0D61  01B8               	clrf	56	;volatile
  1575                           
  1576                           ;main.c: 53: TRISAbits.TRISA0=0;
  1577  0D62  0140               	movlb	0	; select bank0
  1578  0D63  1011               	bcf	17,0	;volatile
  1579                           
  1580                           ;main.c: 54: TRISAbits.TRISA1=1;
  1581  0D64  1491               	bsf	17,1	;volatile
  1582                           
  1583                           ;main.c: 57: PIR4bits.TMR1IF=0;
  1584  0D65  014E               	movlb	14	; select bank14
  1585  0D66  1010               	bcf	16,0	;volatile
  1586                           
  1587                           ;main.c: 58: PIE4bits.TMR1IE=1;
  1588  0D67  141A               	bsf	26,0	;volatile
  1589                           
  1590                           ;main.c: 59: INTCONbits.GIE=1;
  1591  0D68  178B               	bsf	11,7	;volatile
  1592                           
  1593                           ;main.c: 60: INTCONbits.PEIE=1;
  1594  0D69  170B               	bsf	11,6	;volatile
  1595                           
  1596                           ;main.c: 61: PIE4bits.TMR1IE=1;
  1597  0D6A  141A               	bsf	26,0	;volatile
  1598                           
  1599                           ;main.c: 63: T1CONbits.CKPS=0b10;
  1600  0D6B  0144               	movlb	4	; select bank4
  1601  0D6C  080E               	movf	14,w	;volatile
  1602  0D6D  39CF               	andlw	-49
  1603  0D6E  3820               	iorlw	32
  1604  0D6F  008E               	movwf	14	;volatile
  1605                           
  1606                           ;main.c: 64: T1CLKbits.CS=0b0001;
  1607  0D70  0811               	movf	17,w	;volatile
  1608  0D71  39F0               	andlw	-16
  1609  0D72  3801               	iorlw	1
  1610  0D73  0091               	movwf	17	;volatile
  1611                           
  1612                           ;main.c: 65: T1CONbits.nSYNC=1;
  1613  0D74  150E               	bsf	14,2	;volatile
  1614                           
  1615                           ;main.c: 71: Lcd_Init();
  1616  0D75  3189  2124  318D   	fcall	_Lcd_Init
  1617                           
  1618                           ;main.c: 72: Lcd_Cmd(1);
  1619  0D78  3001               	movlw	1
  1620  0D79  3196  263F  318D   	fcall	_Lcd_Cmd
  1621                           
  1622                           ;main.c: 73: Lcd_Cmd(12);
  1623  0D7C  300C               	movlw	12
  1624  0D7D  3196  263F  318D   	fcall	_Lcd_Cmd
  1625                           
  1626                           ;main.c: 74: _delay((unsigned long)((100)*(32000000/4000.0)));
  1627  0D80  3005               	movlw	5
  1628  0D81  0140               	movlb	0	; select bank0
  1629  0D82  00EF               	movwf	??_main+1
  1630  0D83  300F               	movlw	15
  1631  0D84  00EE               	movwf	??_main
  1632  0D85  30F1               	movlw	241
  1633  0D86                     u4257:	
  1634  0D86  0B89               	decfsz	9,f
  1635  0D87  2D86               	goto	u4257
  1636  0D88  0BEE               	decfsz	??_main,f
  1637  0D89  2D86               	goto	u4257
  1638  0D8A  0BEF               	decfsz	??_main+1,f
  1639  0D8B  2D86               	goto	u4257
  1640  0D8C                     l2968:	
  1641                           ;main.c: 76: while(1){
  1642                           
  1643                           
  1644                           ;main.c: 79: TMR1=0;
  1645  0D8C  0144               	movlb	4	; select bank4
  1646  0D8D  018C               	clrf	12	;volatile
  1647  0D8E  018D               	clrf	13	;volatile
  1648                           
  1649                           ;main.c: 80: LATAbits.LATA0=1;
  1650  0D8F  0140               	movlb	0	; select bank0
  1651  0D90  1416               	bsf	22,0	;volatile
  1652                           
  1653                           ;main.c: 81: _delay((unsigned long)((10)*(32000000/4000000.0)));
  1654  0D91  301A               	movlw	26
  1655  0D92                     u4267:	
  1656  0D92  0B89               	decfsz	9,f
  1657  0D93  2D92               	goto	u4267
  1658  0D94  3200               	nop2
  1659                           
  1660                           ;main.c: 82: LATAbits.LATA0=0;
  1661  0D95  0140               	movlb	0	; select bank0
  1662  0D96  1016               	bcf	22,0	;volatile
  1663  0D97                     l112:	
  1664                           ;main.c: 83: while(PORTAbits.RA1==0);
  1665                           
  1666  0D97  1C8C               	btfss	12,1	;volatile
  1667  0D98  2D97               	goto	l112
  1668                           
  1669                           ;main.c: 84: T1CONbits.ON=1;
  1670  0D99  0144               	movlb	4	; select bank4
  1671  0D9A  140E               	bsf	14,0	;volatile
  1672  0D9B                     l115:	
  1673                           ;main.c: 85: while(PORTAbits.RA1);
  1674                           
  1675  0D9B  0140               	movlb	0	; select bank0
  1676  0D9C  188C               	btfsc	12,1	;volatile
  1677  0D9D  2D9B               	goto	l115
  1678                           
  1679                           ;main.c: 86: T1CONbits.ON=0;
  1680  0D9E  0144               	movlb	4	; select bank4
  1681  0D9F  100E               	bcf	14,0	;volatile
  1682                           
  1683                           ;main.c: 91: tiempo=((((double)TMR1))/2000000);
  1684  0DA0  3024               	movlw	36
  1685  0DA1  0140               	movlb	0	; select bank0
  1686  0DA2  00C6               	movwf	___ftdiv@f2
  1687  0DA3  30F4               	movlw	244
  1688  0DA4  00C7               	movwf	___ftdiv@f2+1
  1689  0DA5  3049               	movlw	73
  1690  0DA6  00C8               	movwf	___ftdiv@f2+2
  1691  0DA7  0144               	movlb	4	; select bank4
  1692  0DA8  080D               	movf	13,w	;volatile
  1693  0DA9  0140               	movlb	0	; select bank0
  1694  0DAA  00A9               	movwf	___lwtoft@c+1
  1695  0DAB  0144               	movlb	4	; select bank4
  1696  0DAC  080C               	movf	12,w	;volatile
  1697  0DAD  0140               	movlb	0	; select bank0
  1698  0DAE  00A8               	movwf	___lwtoft@c
  1699  0DAF  3188  2001  318D   	fcall	___lwtoft
  1700  0DB2  0140               	movlb	0	; select bank0
  1701  0DB3  0828               	movf	?___lwtoft,w
  1702  0DB4  00C9               	movwf	___ftdiv@f1
  1703  0DB5  0829               	movf	?___lwtoft+1,w
  1704  0DB6  00CA               	movwf	___ftdiv@f1+1
  1705  0DB7  082A               	movf	?___lwtoft+2,w
  1706  0DB8  00CB               	movwf	___ftdiv@f1+2
  1707  0DB9  3188  207B  318D   	fcall	___ftdiv
  1708  0DBC  0140               	movlb	0	; select bank0
  1709  0DBD  0846               	movf	?___ftdiv,w
  1710  0DBE  0141               	movlb	1	; select bank1
  1711  0DBF  00D6               	movwf	_tiempo^(0+128)
  1712  0DC0  0140               	movlb	0	; select bank0
  1713  0DC1  0847               	movf	?___ftdiv+1,w
  1714  0DC2  0141               	movlb	1	; select bank1
  1715  0DC3  00D7               	movwf	(_tiempo+1)^(0+128)
  1716  0DC4  0140               	movlb	0	; select bank0
  1717  0DC5  0848               	movf	?___ftdiv+2,w
  1718  0DC6  0141               	movlb	1	; select bank1
  1719  0DC7  00D8               	movwf	(_tiempo+2)^(0+128)
  1720                           
  1721                           ;main.c: 92: distancia=((34000*tiempo)/2)-calibracion;
  1722  0DC8  085A               	movf	(_calibracion+1)^(0+128),w
  1723  0DC9  0140               	movlb	0	; select bank0
  1724  0DCA  00A9               	movwf	___awtoft@c+1
  1725  0DCB  0141               	movlb	1	; select bank1
  1726  0DCC  0859               	movf	_calibracion^(0+128),w
  1727  0DCD  0140               	movlb	0	; select bank0
  1728  0DCE  00A8               	movwf	___awtoft@c
  1729  0DCF  3192  22C4  318D   	fcall	___awtoft
  1730  0DD2  0140               	movlb	0	; select bank0
  1731  0DD3  0828               	movf	?___awtoft,w
  1732  0DD4  00AE               	movwf	___ftneg@f1
  1733  0DD5  0829               	movf	?___awtoft+1,w
  1734  0DD6  00AF               	movwf	___ftneg@f1+1
  1735  0DD7  082A               	movf	?___awtoft+2,w
  1736  0DD8  00B0               	movwf	___ftneg@f1+2
  1737  0DD9  3192  2272  318D   	fcall	___ftneg
  1738  0DDC  0140               	movlb	0	; select bank0
  1739  0DDD  082E               	movf	?___ftneg,w
  1740  0DDE  00D6               	movwf	___ftadd@f1
  1741  0DDF  082F               	movf	?___ftneg+1,w
  1742  0DE0  00D7               	movwf	___ftadd@f1+1
  1743  0DE1  0830               	movf	?___ftneg+2,w
  1744  0DE2  00D8               	movwf	___ftadd@f1+2
  1745  0DE3  3000               	movlw	0
  1746  0DE4  00C6               	movwf	___ftdiv@f2
  1747  0DE5  3000               	movlw	0
  1748  0DE6  00C7               	movwf	___ftdiv@f2+1
  1749  0DE7  3040               	movlw	64
  1750  0DE8  00C8               	movwf	___ftdiv@f2+2
  1751  0DE9  30D0               	movlw	208
  1752  0DEA  00B6               	movwf	___ftmul@f1
  1753  0DEB  3004               	movlw	4
  1754  0DEC  00B7               	movwf	___ftmul@f1+1
  1755  0DED  3047               	movlw	71
  1756  0DEE  00B8               	movwf	___ftmul@f1+2
  1757  0DEF  0141               	movlb	1	; select bank1
  1758  0DF0  0856               	movf	_tiempo^(0+128),w
  1759  0DF1  0140               	movlb	0	; select bank0
  1760  0DF2  00B9               	movwf	___ftmul@f2
  1761  0DF3  0141               	movlb	1	; select bank1
  1762  0DF4  0857               	movf	(_tiempo+1)^(0+128),w
  1763  0DF5  0140               	movlb	0	; select bank0
  1764  0DF6  00BA               	movwf	___ftmul@f2+1
  1765  0DF7  0141               	movlb	1	; select bank1
  1766  0DF8  0858               	movf	(_tiempo+2)^(0+128),w
  1767  0DF9  0140               	movlb	0	; select bank0
  1768  0DFA  00BB               	movwf	___ftmul@f2+2
  1769  0DFB  3189  21D1  318D   	fcall	___ftmul
  1770  0DFE  0140               	movlb	0	; select bank0
  1771  0DFF  0836               	movf	?___ftmul,w
  1772  0E00  00C9               	movwf	___ftdiv@f1
  1773  0E01  0837               	movf	?___ftmul+1,w
  1774  0E02  00CA               	movwf	___ftdiv@f1+1
  1775  0E03  0838               	movf	?___ftmul+2,w
  1776  0E04  00CB               	movwf	___ftdiv@f1+2
  1777  0E05  3188  207B  318D   	fcall	___ftdiv
  1778  0E08  0140               	movlb	0	; select bank0
  1779  0E09  0846               	movf	?___ftdiv,w
  1780  0E0A  00D9               	movwf	___ftadd@f2
  1781  0E0B  0847               	movf	?___ftdiv+1,w
  1782  0E0C  00DA               	movwf	___ftadd@f2+1
  1783  0E0D  0848               	movf	?___ftdiv+2,w
  1784  0E0E  00DB               	movwf	___ftadd@f2+2
  1785  0E0F  318B  233B  318D   	fcall	___ftadd
  1786  0E12  0140               	movlb	0	; select bank0
  1787  0E13  0856               	movf	?___ftadd,w
  1788  0E14  0141               	movlb	1	; select bank1
  1789  0E15  00C3               	movwf	_distancia^(0+128)
  1790  0E16  0140               	movlb	0	; select bank0
  1791  0E17  0857               	movf	?___ftadd+1,w
  1792  0E18  0141               	movlb	1	; select bank1
  1793  0E19  00C4               	movwf	(_distancia+1)^(0+128)
  1794  0E1A  0140               	movlb	0	; select bank0
  1795  0E1B  0858               	movf	?___ftadd+2,w
  1796  0E1C  0141               	movlb	1	; select bank1
  1797  0E1D  00C5               	movwf	(_distancia+2)^(0+128)
  1798                           
  1799                           ;main.c: 94: if(distancia>3 && distancia<400){
  1800  0E1E  3000               	movlw	0
  1801  0E1F  0140               	movlb	0	; select bank0
  1802  0E20  00A0               	movwf	___ftge@ff1
  1803  0E21  3040               	movlw	64
  1804  0E22  00A1               	movwf	___ftge@ff1+1
  1805  0E23  3040               	movlw	64
  1806  0E24  00A2               	movwf	___ftge@ff1+2
  1807  0E25  0141               	movlb	1	; select bank1
  1808  0E26  0843               	movf	_distancia^(0+128),w
  1809  0E27  0140               	movlb	0	; select bank0
  1810  0E28  00A3               	movwf	___ftge@ff2
  1811  0E29  0141               	movlb	1	; select bank1
  1812  0E2A  0844               	movf	(_distancia+1)^(0+128),w
  1813  0E2B  0140               	movlb	0	; select bank0
  1814  0E2C  00A4               	movwf	___ftge@ff2+1
  1815  0E2D  0141               	movlb	1	; select bank1
  1816  0E2E  0845               	movf	(_distancia+2)^(0+128),w
  1817  0E2F  0140               	movlb	0	; select bank0
  1818  0E30  00A5               	movwf	___ftge@ff2+2
  1819  0E31  3193  23BB  318D   	fcall	___ftge
  1820  0E34  1803               	btfsc	3,0
  1821  0E35  2E70               	goto	l118
  1822  0E36  0141               	movlb	1	; select bank1
  1823  0E37  0843               	movf	_distancia^(0+128),w
  1824  0E38  0140               	movlb	0	; select bank0
  1825  0E39  00A0               	movwf	___ftge@ff1
  1826  0E3A  0141               	movlb	1	; select bank1
  1827  0E3B  0844               	movf	(_distancia+1)^(0+128),w
  1828  0E3C  0140               	movlb	0	; select bank0
  1829  0E3D  00A1               	movwf	___ftge@ff1+1
  1830  0E3E  0141               	movlb	1	; select bank1
  1831  0E3F  0845               	movf	(_distancia+2)^(0+128),w
  1832  0E40  0140               	movlb	0	; select bank0
  1833  0E41  00A2               	movwf	___ftge@ff1+2
  1834  0E42  3000               	movlw	0
  1835  0E43  00A3               	movwf	___ftge@ff2
  1836  0E44  30C8               	movlw	200
  1837  0E45  00A4               	movwf	___ftge@ff2+1
  1838  0E46  3043               	movlw	67
  1839  0E47  00A5               	movwf	___ftge@ff2+2
  1840  0E48  3193  23BB  318D   	fcall	___ftge
  1841  0E4B  1803               	btfsc	3,0
  1842  0E4C  2E70               	goto	l118
  1843                           
  1844                           ;main.c: 95: LATBbits.LATB7=1;
  1845  0E4D  0140               	movlb	0	; select bank0
  1846  0E4E  1797               	bsf	23,7	;volatile
  1847                           
  1848                           ;main.c: 96: LATBbits.LATB6=0;
  1849  0E4F  1317               	bcf	23,6	;volatile
  1850                           
  1851                           ;main.c: 97: LATBbits.LATB5=0;
  1852  0E50  1297               	bcf	23,5	;volatile
  1853                           
  1854                           ;main.c: 98: sprintf(buffer1,"Distancia=%1f",distancia);
  1855  0E51  3094               	movlw	low (STR_2| (0+32768))
  1856  0E52  00E9               	movwf	sprintf@f
  1857  0E53  3098               	movlw	high (STR_2| (0+32768))
  1858  0E54  00EA               	movwf	sprintf@f+1
  1859  0E55  0141               	movlb	1	; select bank1
  1860  0E56  0843               	movf	_distancia^(0+128),w
  1861  0E57  0140               	movlb	0	; select bank0
  1862  0E58  00EB               	movwf	?_sprintf+2
  1863  0E59  0141               	movlb	1	; select bank1
  1864  0E5A  0844               	movf	(_distancia+1)^(0+128),w
  1865  0E5B  0140               	movlb	0	; select bank0
  1866  0E5C  00EC               	movwf	?_sprintf+3
  1867  0E5D  0141               	movlb	1	; select bank1
  1868  0E5E  0845               	movf	(_distancia+2)^(0+128),w
  1869  0E5F  0140               	movlb	0	; select bank0
  1870  0E60  00ED               	movwf	?_sprintf+4
  1871  0E61  30C6               	movlw	(low (_buffer1| 0))& (0+255)
  1872  0E62  3180  2043  318D   	fcall	_sprintf
  1873                           
  1874                           ;main.c: 99: Lcd_Out2(1,0,buffer1);
  1875  0E65  0140               	movlb	0	; select bank0
  1876  0E66  01A3               	clrf	Lcd_Out2@x
  1877  0E67  30C6               	movlw	(low (_buffer1| 0))& (0+255)
  1878  0E68  00EE               	movwf	??_main
  1879  0E69  086E               	movf	??_main,w
  1880  0E6A  00A4               	movwf	Lcd_Out2@buffer
  1881  0E6B  3001               	movlw	1
  1882  0E6C  3193  2347  318D   	fcall	_Lcd_Out2
  1883                           
  1884                           ;main.c: 101: }else{
  1885  0E6F  2E8D               	goto	l2990
  1886  0E70                     l118:	
  1887                           
  1888                           ;main.c: 102: LATBbits.LATB7=0;
  1889  0E70  0140               	movlb	0	; select bank0
  1890  0E71  1397               	bcf	23,7	;volatile
  1891                           
  1892                           ;main.c: 103: LATBbits.LATB6=1;
  1893  0E72  1717               	bsf	23,6	;volatile
  1894                           
  1895                           ;main.c: 104: LATBbits.LATB5=0;
  1896  0E73  1297               	bcf	23,5	;volatile
  1897                           
  1898                           ;main.c: 105: Lcd_Out(1,0,"Fuera de rango");
  1899  0E74  01A3               	clrf	Lcd_Out@x
  1900  0E75  3085               	movlw	low (STR_3| (0+32768))
  1901  0E76  00A4               	movwf	Lcd_Out@buffer
  1902  0E77  3098               	movlw	high (STR_3| (0+32768))
  1903  0E78  00A5               	movwf	Lcd_Out@buffer+1
  1904  0E79  3001               	movlw	1
  1905  0E7A  3193  2380  318D   	fcall	_Lcd_Out
  1906                           
  1907                           ;main.c: 106: _delay((unsigned long)((1000)*(32000000/4000.0)));
  1908  0E7D  3029               	movlw	41
  1909  0E7E  0140               	movlb	0	; select bank0
  1910  0E7F  00EF               	movwf	??_main+1
  1911  0E80  3096               	movlw	150
  1912  0E81  00EE               	movwf	??_main
  1913  0E82  307F               	movlw	127
  1914  0E83                     u4277:	
  1915  0E83  0B89               	decfsz	9,f
  1916  0E84  2E83               	goto	u4277
  1917  0E85  0BEE               	decfsz	??_main,f
  1918  0E86  2E83               	goto	u4277
  1919  0E87  0BEF               	decfsz	??_main+1,f
  1920  0E88  2E83               	goto	u4277
  1921                           
  1922                           ;main.c: 107: Lcd_Cmd(1);
  1923  0E89  3001               	movlw	1
  1924  0E8A  3196  263F  318D   	fcall	_Lcd_Cmd
  1925  0E8D                     l2990:	
  1926                           
  1927                           ;main.c: 108: }
  1928                           ;main.c: 109: _delay((unsigned long)((1000)*(32000000/4000.0)));
  1929  0E8D  3029               	movlw	41
  1930  0E8E  0140               	movlb	0	; select bank0
  1931  0E8F  00EF               	movwf	??_main+1
  1932  0E90  3096               	movlw	150
  1933  0E91  00EE               	movwf	??_main
  1934  0E92  307F               	movlw	127
  1935  0E93                     u4287:	
  1936  0E93  0B89               	decfsz	9,f
  1937  0E94  2E93               	goto	u4287
  1938  0E95  0BEE               	decfsz	??_main,f
  1939  0E96  2E93               	goto	u4287
  1940  0E97  0BEF               	decfsz	??_main+1,f
  1941  0E98  2E93               	goto	u4287
  1942  0E99  2D8C               	goto	l2968
  1943  0E9A                     __end_of_main:	
  1944                           ;main.c: 110: }
  1945                           ;main.c: 111: return (0);
  1946                           ;	Return value of _main is never used
  1947                           
  1948                           
  1949                           	psect	text1
  1950  0043                     __ptext1:	
  1951 ;; *************** function _sprintf *****************
  1952 ;; Defined at:
  1953 ;;		line 492 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\doprnt.c"
  1954 ;; Parameters:    Size  Location     Type
  1955 ;;  sp              1    wreg     PTR unsigned char 
  1956 ;;		 -> buffer1(16), 
  1957 ;;  f               2   73[BANK0 ] PTR const unsigned char 
  1958 ;;		 -> STR_2(14), 
  1959 ;; Auto vars:     Size  Location     Type
  1960 ;;  sp              1   26[BANK1 ] PTR unsigned char 
  1961 ;;		 -> buffer1(16), 
  1962 ;;  tmpval          4   20[BANK1 ] struct .
  1963 ;;  val             4   12[BANK1 ] unsigned long 
  1964 ;;  fval            3   27[BANK1 ] unsigned long 
  1965 ;;  exp             2   24[BANK1 ] int 
  1966 ;;  width           2   18[BANK1 ] int 
  1967 ;;  prec            2   16[BANK1 ] int 
  1968 ;;  flag            2   10[BANK1 ] unsigned short 
  1969 ;;  cp              2    0        PTR const unsigned char 
  1970 ;;  len             2    0        unsigned int 
  1971 ;;  c               1   30[BANK1 ] char 
  1972 ;;  ap              1    9[BANK1 ] PTR void [1]
  1973 ;;		 -> ?_sprintf(2), 
  1974 ;;  d               1    0        unsigned char 
  1975 ;; Return value:  Size  Location     Type
  1976 ;;                  2   73[BANK0 ] int 
  1977 ;; Registers used:
  1978 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  1979 ;; Tracked objects:
  1980 ;;		On entry : 0/0
  1981 ;;		On exit  : 0/0
  1982 ;;		Unchanged: 0/0
  1983 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
  1984 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  1985 ;;      Locals:         0       0      25       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  1986 ;;      Temps:          0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  1987 ;;      Totals:         0       5      31       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  1988 ;;Total ram usage:       36 bytes
  1989 ;; Hardware stack levels used:    1
  1990 ;; Hardware stack levels required when called:    6
  1991 ;; This function calls:
  1992 ;;		___awdiv
  1993 ;;		___ftadd
  1994 ;;		___ftge
  1995 ;;		___ftmul
  1996 ;;		___ftneg
  1997 ;;		___ftsub
  1998 ;;		___fttol
  1999 ;;		___lldiv
  2000 ;;		___llmod
  2001 ;;		___lltoft
  2002 ;;		___wmul
  2003 ;;		__div_to_l_
  2004 ;;		__tdiv_to_l_
  2005 ;;		_fround
  2006 ;;		_isdigit
  2007 ;;		_scale
  2008 ;; This function is called by:
  2009 ;;		_main
  2010 ;; This function uses a non-reentrant model
  2011 ;;
  2012                           
  2013                           
  2014                           ;psect for function _sprintf
  2015  0043                     _sprintf:	
  2016                           
  2017                           ;incstack = 0
  2018                           ; Regs used in _sprintf: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  2019                           ;sprintf@sp stored from wreg
  2020  0043  0141               	movlb	1	; select bank1
  2021  0044  00BA               	movwf	sprintf@sp^(0+128)
  2022                           
  2023                           ;doprnt.c: 494: va_list ap;
  2024                           ;doprnt.c: 499: signed char c;
  2025                           ;doprnt.c: 501: int width;
  2026                           ;doprnt.c: 504: int prec;
  2027                           ;doprnt.c: 508: unsigned short flag;
  2028                           ;doprnt.c: 515: char d;
  2029                           ;doprnt.c: 516: double fval;
  2030                           ;doprnt.c: 517: int exp;
  2031                           ;doprnt.c: 523: union {
  2032                           ;doprnt.c: 524: unsigned long vd;
  2033                           ;doprnt.c: 525: double integ;
  2034                           ;doprnt.c: 526: } tmpval;
  2035                           ;doprnt.c: 528: unsigned long val;
  2036                           ;doprnt.c: 529: unsigned len;
  2037                           ;doprnt.c: 530: const char * cp;
  2038                           ;doprnt.c: 533: *ap = __va_start();
  2039  0045  306B               	movlw	(low ((?_sprintf| 0+2)))& (0+255)
  2040  0046  00A0               	movwf	??_sprintf^(0+128)
  2041  0047  0820               	movf	??_sprintf^(0+128),w
  2042  0048  00A9               	movwf	sprintf@ap^(0+128)
  2043  0049                     l2820:	
  2044                           ;doprnt.c: 536: while(c = *f++) {
  2045                           
  2046  0049  0140               	movlb	0	; select bank0
  2047  004A  086A               	movf	sprintf@f+1,w
  2048  004B  0141               	movlb	1	; select bank1
  2049  004C  00A1               	movwf	(??_sprintf^(0+128)+1)
  2050  004D  0140               	movlb	0	; select bank0
  2051  004E  0869               	movf	sprintf@f,w
  2052  004F  0141               	movlb	1	; select bank1
  2053  0050  00A0               	movwf	??_sprintf^(0+128)
  2054  0051  0140               	movlb	0	; select bank0
  2055  0052  0AE9               	incf	sprintf@f,f
  2056  0053  1903               	skipnz
  2057  0054  0AEA               	incf	sprintf@f+1,f
  2058  0055  0141               	movlb	1	; select bank1
  2059  0056  0820               	movf	??_sprintf^(0+128),w
  2060  0057  0084               	movwf	4
  2061  0058  0821               	movf	(??_sprintf+1)^(0+128),w
  2062  0059  0085               	movwf	5
  2063  005A  0800               	movf	0,w	;code access
  2064  005B  00A2               	movwf	(??_sprintf+2)^(0+128)
  2065  005C  0822               	movf	(??_sprintf+2)^(0+128),w
  2066  005D  00BE               	movwf	sprintf@c^(0+128)
  2067  005E  083E               	movf	sprintf@c^(0+128),w
  2068  005F  1903               	btfsc	3,2
  2069  0060  2DAD               	goto	l2822
  2070                           
  2071                           ;doprnt.c: 538: if(c != '%')
  2072  0061  3025               	movlw	37
  2073  0062  063E               	xorwf	sprintf@c^(0+128),w
  2074  0063  1903               	btfsc	3,2
  2075  0064  2867               	goto	l2620
  2076                           
  2077                           ;doprnt.c: 540: {
  2078                           ;doprnt.c: 541: ((*sp++ = (c)));
  2079  0065  083E               	movf	sprintf@c^(0+128),w
  2080  0066  2DA2               	goto	L5
  2081  0067                     l2620:	
  2082                           ;doprnt.c: 542: continue;
  2083                           
  2084                           
  2085                           ;doprnt.c: 543: }
  2086                           ;doprnt.c: 546: width = 0;
  2087  0067  01B2               	clrf	sprintf@width^(0+128)
  2088  0068  01B3               	clrf	(sprintf@width+1)^(0+128)
  2089                           
  2090                           ;doprnt.c: 548: flag = 0;
  2091  0069  01AA               	clrf	sprintf@flag^(0+128)
  2092  006A  01AB               	clrf	(sprintf@flag+1)^(0+128)
  2093                           
  2094                           ;doprnt.c: 597: if(isdigit((unsigned)*f)) {
  2095  006B  0140               	movlb	0	; select bank0
  2096  006C  0869               	movf	sprintf@f,w
  2097  006D  0084               	movwf	4
  2098  006E  086A               	movf	sprintf@f+1,w
  2099  006F  0085               	movwf	5
  2100  0070  0800               	movf	0,w	;code access
  2101  0071  3192  227B  3180   	fcall	_isdigit
  2102  0074  1C03               	btfss	3,0
  2103  0075  28B4               	goto	l2636
  2104                           
  2105                           ;doprnt.c: 598: width = 0;
  2106  0076  0141               	movlb	1	; select bank1
  2107  0077  01B2               	clrf	sprintf@width^(0+128)
  2108  0078  01B3               	clrf	(sprintf@width+1)^(0+128)
  2109  0079                     l2626:	
  2110                           ;doprnt.c: 599: do {
  2111                           
  2112                           
  2113                           ;doprnt.c: 600: width *= 10;
  2114  0079  300A               	movlw	10
  2115  007A  0140               	movlb	0	; select bank0
  2116  007B  00B0               	movwf	___wmul@multiplier
  2117  007C  3000               	movlw	0
  2118  007D  00B1               	movwf	___wmul@multiplier+1
  2119  007E  0141               	movlb	1	; select bank1
  2120  007F  0833               	movf	(sprintf@width+1)^(0+128),w
  2121  0080  0140               	movlb	0	; select bank0
  2122  0081  00B3               	movwf	___wmul@multiplicand+1
  2123  0082  0141               	movlb	1	; select bank1
  2124  0083  0832               	movf	sprintf@width^(0+128),w
  2125  0084  0140               	movlb	0	; select bank0
  2126  0085  00B2               	movwf	___wmul@multiplicand
  2127  0086  3192  228A  3180   	fcall	___wmul
  2128  0089  0140               	movlb	0	; select bank0
  2129  008A  0831               	movf	?___wmul+1,w
  2130  008B  0141               	movlb	1	; select bank1
  2131  008C  00B3               	movwf	(sprintf@width+1)^(0+128)
  2132  008D  0140               	movlb	0	; select bank0
  2133  008E  0830               	movf	?___wmul,w
  2134  008F  0141               	movlb	1	; select bank1
  2135  0090  00B2               	movwf	sprintf@width^(0+128)
  2136                           
  2137                           ;doprnt.c: 601: width += *f++ - '0';
  2138  0091  0140               	movlb	0	; select bank0
  2139  0092  0869               	movf	sprintf@f,w
  2140  0093  0084               	movwf	4
  2141  0094  086A               	movf	sprintf@f+1,w
  2142  0095  0085               	movwf	5
  2143  0096  0800               	movf	0,w	;code access
  2144  0097  3ED0               	addlw	208
  2145  0098  0141               	movlb	1	; select bank1
  2146  0099  00A0               	movwf	??_sprintf^(0+128)
  2147  009A  30FF               	movlw	255
  2148  009B  1803               	skipnc
  2149  009C  3000               	movlw	0
  2150  009D  00A1               	movwf	(??_sprintf^(0+128)+1)
  2151  009E  0820               	movf	??_sprintf^(0+128),w
  2152  009F  07B2               	addwf	sprintf@width^(0+128),f
  2153  00A0  0821               	movf	(??_sprintf+1)^(0+128),w
  2154  00A1  3DB3               	addwfc	(sprintf@width+1)^(0+128),f
  2155  00A2  3001               	movlw	1
  2156  00A3  0140               	movlb	0	; select bank0
  2157  00A4  07E9               	addwf	sprintf@f,f
  2158  00A5  3000               	movlw	0
  2159  00A6  3DEA               	addwfc	sprintf@f+1,f
  2160                           
  2161                           ;doprnt.c: 602: } while(isdigit((unsigned)*f));
  2162  00A7  0869               	movf	sprintf@f,w
  2163  00A8  0084               	movwf	4
  2164  00A9  086A               	movf	sprintf@f+1,w
  2165  00AA  0085               	movwf	5
  2166  00AB  0800               	movf	0,w	;code access
  2167  00AC  3192  227B  3180   	fcall	_isdigit
  2168  00AF  1C03               	btfss	3,0
  2169  00B0  28B4               	goto	l2636
  2170  00B1  2879               	goto	l2626
  2171  00B2                     l166:	
  2172                           ;doprnt.c: 662: case 'f':
  2173                           
  2174                           ;doprnt.c: 638: goto alldone;
  2175                           
  2176                           ;doprnt.c: 637: case 0:
  2177                           
  2178                           ;doprnt.c: 608: }
  2179                           ;doprnt.c: 635: switch(c = *f++) {
  2180                           
  2181                           
  2182                           ;doprnt.c: 663: flag |= 0x400;
  2183  00B2  152B               	bsf	(sprintf@flag^(0+128)+1),2
  2184                           
  2185                           ;doprnt.c: 664: break;
  2186  00B3  28CE               	goto	l2638
  2187  00B4                     l2636:	
  2188                           ;doprnt.c: 822: }
  2189                           
  2190                           ;doprnt.c: 813: continue;
  2191                           
  2192                           ;doprnt.c: 802: default:
  2193                           
  2194  00B4  0140               	movlb	0	; select bank0
  2195  00B5  086A               	movf	sprintf@f+1,w
  2196  00B6  0141               	movlb	1	; select bank1
  2197  00B7  00A1               	movwf	(??_sprintf^(0+128)+1)
  2198  00B8  0140               	movlb	0	; select bank0
  2199  00B9  0869               	movf	sprintf@f,w
  2200  00BA  0141               	movlb	1	; select bank1
  2201  00BB  00A0               	movwf	??_sprintf^(0+128)
  2202  00BC  0140               	movlb	0	; select bank0
  2203  00BD  0AE9               	incf	sprintf@f,f
  2204  00BE  1903               	skipnz
  2205  00BF  0AEA               	incf	sprintf@f+1,f
  2206  00C0  0141               	movlb	1	; select bank1
  2207  00C1  0820               	movf	??_sprintf^(0+128),w
  2208  00C2  0084               	movwf	4
  2209  00C3  0821               	movf	(??_sprintf+1)^(0+128),w
  2210  00C4  0085               	movwf	5
  2211  00C5  0800               	movf	0,w	;code access
  2212  00C6  00BE               	movwf	sprintf@c^(0+128)
  2213                           
  2214                           ; Switch size 1, requested type "space"
  2215                           ; Number of cases is 2, Range of values is 0 to 102
  2216                           ; switch strategies available:
  2217                           ; Name         Instructions Cycles
  2218                           ; simple_byte            7     4 (average)
  2219                           ; direct_byte          212     6 (fixed)
  2220                           ; jumptable            260     6 (fixed)
  2221                           ;	Chosen strategy is simple_byte
  2222  00C7  3A00               	xorlw	0	; case 0
  2223  00C8  1903               	skipnz
  2224  00C9  2DAD               	goto	l2822
  2225  00CA  3A66               	xorlw	102	; case 102
  2226  00CB  1903               	skipnz
  2227  00CC  28B2               	goto	l166
  2228  00CD  2849               	goto	l2820
  2229  00CE                     l2638:	
  2230                           
  2231                           ;doprnt.c: 825: if(flag & (0x700)) {
  2232  00CE  3000               	movlw	0
  2233  00CF  052A               	andwf	sprintf@flag^(0+128),w
  2234  00D0  00A0               	movwf	??_sprintf^(0+128)
  2235  00D1  3007               	movlw	7
  2236  00D2  052B               	andwf	(sprintf@flag+1)^(0+128),w
  2237  00D3  00A1               	movwf	(??_sprintf+1)^(0+128)
  2238  00D4  0820               	movf	??_sprintf^(0+128),w
  2239  00D5  0421               	iorwf	(??_sprintf^(0+128)+1),w
  2240  00D6  1903               	btfsc	3,2
  2241  00D7  2D4F               	goto	l2796
  2242                           
  2243                           ;doprnt.c: 829: prec = 6;
  2244  00D8  3006               	movlw	6
  2245  00D9  00B0               	movwf	sprintf@prec^(0+128)
  2246  00DA  3000               	movlw	0
  2247  00DB  00B1               	movwf	(sprintf@prec^(0+128)+1)
  2248                           
  2249                           ;doprnt.c: 830: fval = (*(double *)__va_arg((*(double **)ap), (double)0));
  2250  00DC  0829               	movf	sprintf@ap^(0+128),w
  2251  00DD  0086               	movwf	6
  2252  00DE  0187               	clrf	7
  2253  00DF  3F40               	moviw [0]fsr1
  2254  00E0  00BB               	movwf	sprintf@fval^(0+128)
  2255  00E1  3F41               	moviw [1]fsr1
  2256  00E2  00BC               	movwf	(sprintf@fval+1)^(0+128)
  2257  00E3  3F42               	moviw [2]fsr1
  2258  00E4  00BD               	movwf	(sprintf@fval+2)^(0+128)
  2259  00E5  3003               	movlw	3
  2260  00E6  00A0               	movwf	??_sprintf^(0+128)
  2261  00E7  0820               	movf	??_sprintf^(0+128),w
  2262  00E8  07A9               	addwf	sprintf@ap^(0+128),f
  2263                           
  2264                           ;doprnt.c: 831: if(fval < 0.0) {
  2265  00E9  083B               	movf	sprintf@fval^(0+128),w
  2266  00EA  0140               	movlb	0	; select bank0
  2267  00EB  00A0               	movwf	___ftge@ff1
  2268  00EC  0141               	movlb	1	; select bank1
  2269  00ED  083C               	movf	(sprintf@fval+1)^(0+128),w
  2270  00EE  0140               	movlb	0	; select bank0
  2271  00EF  00A1               	movwf	___ftge@ff1+1
  2272  00F0  0141               	movlb	1	; select bank1
  2273  00F1  083D               	movf	(sprintf@fval+2)^(0+128),w
  2274  00F2  0140               	movlb	0	; select bank0
  2275  00F3  00A2               	movwf	___ftge@ff1+2
  2276  00F4  3000               	movlw	0
  2277  00F5  00A3               	movwf	___ftge@ff2
  2278  00F6  3000               	movlw	0
  2279  00F7  00A4               	movwf	___ftge@ff2+1
  2280  00F8  3000               	movlw	0
  2281  00F9  00A5               	movwf	___ftge@ff2+2
  2282  00FA  3193  23BB  3180   	fcall	___ftge
  2283  00FD  1803               	btfsc	3,0
  2284  00FE  291E               	goto	l2652
  2285                           
  2286                           ;doprnt.c: 832: fval = -fval;
  2287  00FF  0141               	movlb	1	; select bank1
  2288  0100  083B               	movf	sprintf@fval^(0+128),w
  2289  0101  0140               	movlb	0	; select bank0
  2290  0102  00AE               	movwf	___ftneg@f1
  2291  0103  0141               	movlb	1	; select bank1
  2292  0104  083C               	movf	(sprintf@fval+1)^(0+128),w
  2293  0105  0140               	movlb	0	; select bank0
  2294  0106  00AF               	movwf	___ftneg@f1+1
  2295  0107  0141               	movlb	1	; select bank1
  2296  0108  083D               	movf	(sprintf@fval+2)^(0+128),w
  2297  0109  0140               	movlb	0	; select bank0
  2298  010A  00B0               	movwf	___ftneg@f1+2
  2299  010B  3192  2272  3180   	fcall	___ftneg
  2300  010E  0140               	movlb	0	; select bank0
  2301  010F  082E               	movf	?___ftneg,w
  2302  0110  0141               	movlb	1	; select bank1
  2303  0111  00BB               	movwf	sprintf@fval^(0+128)
  2304  0112  0140               	movlb	0	; select bank0
  2305  0113  082F               	movf	?___ftneg+1,w
  2306  0114  0141               	movlb	1	; select bank1
  2307  0115  00BC               	movwf	(sprintf@fval+1)^(0+128)
  2308  0116  0140               	movlb	0	; select bank0
  2309  0117  0830               	movf	?___ftneg+2,w
  2310  0118  0141               	movlb	1	; select bank1
  2311  0119  00BD               	movwf	(sprintf@fval+2)^(0+128)
  2312                           
  2313                           ;doprnt.c: 833: flag |= 0x03;
  2314  011A  3003               	movlw	3
  2315  011B  04AA               	iorwf	sprintf@flag^(0+128),f
  2316  011C  3000               	movlw	0
  2317  011D  04AB               	iorwf	(sprintf@flag+1)^(0+128),f
  2318  011E                     l2652:	
  2319                           
  2320                           ;doprnt.c: 834: }
  2321                           ;doprnt.c: 835: exp = 0;
  2322  011E  0141               	movlb	1	; select bank1
  2323  011F  01B8               	clrf	sprintf@exp^(0+128)
  2324  0120  01B9               	clrf	(sprintf@exp+1)^(0+128)
  2325                           
  2326                           ;doprnt.c: 836: if( fval!=0) {
  2327  0121  083D               	movf	(sprintf@fval+2)^(0+128),w
  2328  0122  043C               	iorwf	(sprintf@fval+1)^(0+128),w
  2329  0123  043B               	iorwf	sprintf@fval^(0+128),w
  2330  0124  1903               	skipnz
  2331  0125  29EC               	goto	l171
  2332                           
  2333                           ;doprnt.c: 837: (void)(*(&exp) = ((*(unsigned long *)&fval >> 15) & 255) - 126);
  2334  0126  30BB               	movlw	low (sprintf@fval| 0)
  2335  0127  0086               	movwf	6
  2336  0128  0187               	clrf	7
  2337  0129  3F40               	moviw [0]fsr1
  2338  012A  00A0               	movwf	??_sprintf^(0+128)
  2339  012B  3F41               	moviw [1]fsr1
  2340  012C  00A1               	movwf	(??_sprintf^(0+128)+1)
  2341  012D  3F42               	moviw [2]fsr1
  2342  012E  00A2               	movwf	(??_sprintf^(0+128)+2)
  2343  012F  3F43               	moviw [3]fsr1
  2344  0130  00A3               	movwf	(??_sprintf^(0+128)+3)
  2345  0131  300F               	movlw	15
  2346  0132                     u3815:	
  2347  0132  36A3               	lsrf	(??_sprintf^(0+128)+3),f
  2348  0133  0CA2               	rrf	(??_sprintf^(0+128)+2),f
  2349  0134  0CA1               	rrf	(??_sprintf^(0+128)+1),f
  2350  0135  0CA0               	rrf	??_sprintf^(0+128),f
  2351  0136  0B89               	decfsz	9,f
  2352  0137  2932               	goto	u3815
  2353  0138  30FF               	movlw	255
  2354  0139  0520               	andwf	??_sprintf^(0+128),w
  2355  013A  00A4               	movwf	(??_sprintf+4)^(0+128)
  2356  013B  3000               	movlw	0
  2357  013C  0521               	andwf	(??_sprintf+1)^(0+128),w
  2358  013D  00A5               	movwf	(??_sprintf+5)^(0+128)
  2359  013E  0824               	movf	(??_sprintf+4)^(0+128),w
  2360  013F  3E82               	addlw	130
  2361  0140  00B8               	movwf	sprintf@exp^(0+128)
  2362  0141  30FF               	movlw	255
  2363  0142  3D25               	addwfc	(??_sprintf+5)^(0+128),w
  2364  0143  00B9               	movwf	(sprintf@exp+1)^(0+128)
  2365                           
  2366                           ;doprnt.c: 838: exp--;
  2367  0144  30FF               	movlw	255
  2368  0145  07B8               	addwf	sprintf@exp^(0+128),f
  2369  0146  30FF               	movlw	255
  2370  0147  3DB9               	addwfc	(sprintf@exp+1)^(0+128),f
  2371                           
  2372                           ;doprnt.c: 839: exp *= 3;
  2373  0148  3003               	movlw	3
  2374  0149  0140               	movlb	0	; select bank0
  2375  014A  00B0               	movwf	___wmul@multiplier
  2376  014B  3000               	movlw	0
  2377  014C  00B1               	movwf	___wmul@multiplier+1
  2378  014D  0141               	movlb	1	; select bank1
  2379  014E  0839               	movf	(sprintf@exp+1)^(0+128),w
  2380  014F  0140               	movlb	0	; select bank0
  2381  0150  00B3               	movwf	___wmul@multiplicand+1
  2382  0151  0141               	movlb	1	; select bank1
  2383  0152  0838               	movf	sprintf@exp^(0+128),w
  2384  0153  0140               	movlb	0	; select bank0
  2385  0154  00B2               	movwf	___wmul@multiplicand
  2386  0155  3192  228A  3180   	fcall	___wmul
  2387  0158  0140               	movlb	0	; select bank0
  2388  0159  0831               	movf	?___wmul+1,w
  2389  015A  0141               	movlb	1	; select bank1
  2390  015B  00B9               	movwf	(sprintf@exp+1)^(0+128)
  2391  015C  0140               	movlb	0	; select bank0
  2392  015D  0830               	movf	?___wmul,w
  2393  015E  0141               	movlb	1	; select bank1
  2394  015F  00B8               	movwf	sprintf@exp^(0+128)
  2395                           
  2396                           ;doprnt.c: 840: exp /= 10;
  2397  0160  300A               	movlw	10
  2398  0161  0140               	movlb	0	; select bank0
  2399  0162  00A7               	movwf	___awdiv@divisor
  2400  0163  3000               	movlw	0
  2401  0164  00A8               	movwf	___awdiv@divisor+1
  2402  0165  0141               	movlb	1	; select bank1
  2403  0166  0839               	movf	(sprintf@exp+1)^(0+128),w
  2404  0167  0140               	movlb	0	; select bank0
  2405  0168  00AA               	movwf	___awdiv@dividend+1
  2406  0169  0141               	movlb	1	; select bank1
  2407  016A  0838               	movf	sprintf@exp^(0+128),w
  2408  016B  0140               	movlb	0	; select bank0
  2409  016C  00A9               	movwf	___awdiv@dividend
  2410  016D  3194  2480  3180   	fcall	___awdiv
  2411  0170  0140               	movlb	0	; select bank0
  2412  0171  0828               	movf	?___awdiv+1,w
  2413  0172  0141               	movlb	1	; select bank1
  2414  0173  00B9               	movwf	(sprintf@exp+1)^(0+128)
  2415  0174  0140               	movlb	0	; select bank0
  2416  0175  0827               	movf	?___awdiv,w
  2417  0176  0141               	movlb	1	; select bank1
  2418  0177  00B8               	movwf	sprintf@exp^(0+128)
  2419                           
  2420                           ;doprnt.c: 841: if(exp < 0)
  2421  0178  1FB9               	btfss	(sprintf@exp+1)^(0+128),7
  2422  0179  297E               	goto	l2668
  2423                           
  2424                           ;doprnt.c: 842: exp--;
  2425  017A  30FF               	movlw	255
  2426  017B  07B8               	addwf	sprintf@exp^(0+128),f
  2427  017C  30FF               	movlw	255
  2428  017D  3DB9               	addwfc	(sprintf@exp+1)^(0+128),f
  2429  017E                     l2668:	
  2430                           
  2431                           ;doprnt.c: 846: tmpval.integ = scale(-exp);
  2432  017E  0338               	decf	sprintf@exp^(0+128),w
  2433  017F  3AFF               	xorlw	255
  2434  0180  3185  25B3  3180   	fcall	_scale
  2435  0183  0140               	movlb	0	; select bank0
  2436  0184  0846               	movf	?_scale,w
  2437  0185  0141               	movlb	1	; select bank1
  2438  0186  00B4               	movwf	sprintf@tmpval^(0+128)
  2439  0187  0140               	movlb	0	; select bank0
  2440  0188  0847               	movf	?_scale+1,w
  2441  0189  0141               	movlb	1	; select bank1
  2442  018A  00B5               	movwf	(sprintf@tmpval+1)^(0+128)
  2443  018B  0140               	movlb	0	; select bank0
  2444  018C  0848               	movf	?_scale+2,w
  2445  018D  0141               	movlb	1	; select bank1
  2446  018E  00B6               	movwf	(sprintf@tmpval+2)^(0+128)
  2447                           
  2448                           ;doprnt.c: 847: tmpval.integ *= fval;
  2449  018F  083B               	movf	sprintf@fval^(0+128),w
  2450  0190  0140               	movlb	0	; select bank0
  2451  0191  00B6               	movwf	___ftmul@f1
  2452  0192  0141               	movlb	1	; select bank1
  2453  0193  083C               	movf	(sprintf@fval+1)^(0+128),w
  2454  0194  0140               	movlb	0	; select bank0
  2455  0195  00B7               	movwf	___ftmul@f1+1
  2456  0196  0141               	movlb	1	; select bank1
  2457  0197  083D               	movf	(sprintf@fval+2)^(0+128),w
  2458  0198  0140               	movlb	0	; select bank0
  2459  0199  00B8               	movwf	___ftmul@f1+2
  2460  019A  0141               	movlb	1	; select bank1
  2461  019B  0834               	movf	sprintf@tmpval^(0+128),w
  2462  019C  0140               	movlb	0	; select bank0
  2463  019D  00B9               	movwf	___ftmul@f2
  2464  019E  0141               	movlb	1	; select bank1
  2465  019F  0835               	movf	(sprintf@tmpval+1)^(0+128),w
  2466  01A0  0140               	movlb	0	; select bank0
  2467  01A1  00BA               	movwf	___ftmul@f2+1
  2468  01A2  0141               	movlb	1	; select bank1
  2469  01A3  0836               	movf	(sprintf@tmpval+2)^(0+128),w
  2470  01A4  0140               	movlb	0	; select bank0
  2471  01A5  00BB               	movwf	___ftmul@f2+2
  2472  01A6  3189  21D1  3180   	fcall	___ftmul
  2473  01A9  0140               	movlb	0	; select bank0
  2474  01AA  0836               	movf	?___ftmul,w
  2475  01AB  0141               	movlb	1	; select bank1
  2476  01AC  00B4               	movwf	sprintf@tmpval^(0+128)
  2477  01AD  0140               	movlb	0	; select bank0
  2478  01AE  0837               	movf	?___ftmul+1,w
  2479  01AF  0141               	movlb	1	; select bank1
  2480  01B0  00B5               	movwf	(sprintf@tmpval+1)^(0+128)
  2481  01B1  0140               	movlb	0	; select bank0
  2482  01B2  0838               	movf	?___ftmul+2,w
  2483  01B3  0141               	movlb	1	; select bank1
  2484  01B4  00B6               	movwf	(sprintf@tmpval+2)^(0+128)
  2485                           
  2486                           ;doprnt.c: 848: if(tmpval.integ < 1.0)
  2487  01B5  0834               	movf	sprintf@tmpval^(0+128),w
  2488  01B6  0140               	movlb	0	; select bank0
  2489  01B7  00A0               	movwf	___ftge@ff1
  2490  01B8  0141               	movlb	1	; select bank1
  2491  01B9  0835               	movf	(sprintf@tmpval+1)^(0+128),w
  2492  01BA  0140               	movlb	0	; select bank0
  2493  01BB  00A1               	movwf	___ftge@ff1+1
  2494  01BC  0141               	movlb	1	; select bank1
  2495  01BD  0836               	movf	(sprintf@tmpval+2)^(0+128),w
  2496  01BE  0140               	movlb	0	; select bank0
  2497  01BF  00A2               	movwf	___ftge@ff1+2
  2498  01C0  3000               	movlw	0
  2499  01C1  00A3               	movwf	___ftge@ff2
  2500  01C2  3080               	movlw	128
  2501  01C3  00A4               	movwf	___ftge@ff2+1
  2502  01C4  303F               	movlw	63
  2503  01C5  00A5               	movwf	___ftge@ff2+2
  2504  01C6  3193  23BB  3180   	fcall	___ftge
  2505  01C9  1803               	btfsc	3,0
  2506  01CA  29D0               	goto	l2676
  2507                           
  2508                           ;doprnt.c: 849: exp--;
  2509  01CB  30FF               	movlw	255
  2510  01CC  0141               	movlb	1	; select bank1
  2511  01CD  07B8               	addwf	sprintf@exp^(0+128),f
  2512  01CE  30FF               	movlw	255
  2513  01CF  29EB               	goto	L1
  2514  01D0                     l2676:	
  2515                           
  2516                           ;doprnt.c: 850: else if(tmpval.integ >= 10.0)
  2517  01D0  0141               	movlb	1	; select bank1
  2518  01D1  0834               	movf	sprintf@tmpval^(0+128),w
  2519  01D2  0140               	movlb	0	; select bank0
  2520  01D3  00A0               	movwf	___ftge@ff1
  2521  01D4  0141               	movlb	1	; select bank1
  2522  01D5  0835               	movf	(sprintf@tmpval+1)^(0+128),w
  2523  01D6  0140               	movlb	0	; select bank0
  2524  01D7  00A1               	movwf	___ftge@ff1+1
  2525  01D8  0141               	movlb	1	; select bank1
  2526  01D9  0836               	movf	(sprintf@tmpval+2)^(0+128),w
  2527  01DA  0140               	movlb	0	; select bank0
  2528  01DB  00A2               	movwf	___ftge@ff1+2
  2529  01DC  3000               	movlw	0
  2530  01DD  00A3               	movwf	___ftge@ff2
  2531  01DE  3020               	movlw	32
  2532  01DF  00A4               	movwf	___ftge@ff2+1
  2533  01E0  3041               	movlw	65
  2534  01E1  00A5               	movwf	___ftge@ff2+2
  2535  01E2  3193  23BB  3180   	fcall	___ftge
  2536  01E5  1C03               	btfss	3,0
  2537  01E6  29EC               	goto	l171
  2538                           
  2539                           ;doprnt.c: 851: exp++;
  2540  01E7  3001               	movlw	1
  2541  01E8  0141               	movlb	1	; select bank1
  2542  01E9  07B8               	addwf	sprintf@exp^(0+128),f
  2543  01EA  3000               	movlw	0
  2544  01EB                     L1:	
  2545  01EB  3DB9               	addwfc	(sprintf@exp+1)^(0+128),f
  2546  01EC                     l171:	
  2547                           
  2548                           ;doprnt.c: 852: }
  2549                           ;doprnt.c: 1112: if(prec <= 12)
  2550  01EC  0141               	movlb	1	; select bank1
  2551  01ED  0831               	movf	(sprintf@prec+1)^(0+128),w
  2552  01EE  3A80               	xorlw	128
  2553  01EF  00A0               	movwf	??_sprintf^(0+128)
  2554  01F0  3080               	movlw	128
  2555  01F1  0220               	subwf	??_sprintf^(0+128),w
  2556  01F2  1D03               	skipz
  2557  01F3  29F6               	goto	u3855
  2558  01F4  300D               	movlw	13
  2559  01F5  0230               	subwf	sprintf@prec^(0+128),w
  2560  01F6                     u3855:	
  2561  01F6  1803               	skipnc
  2562  01F7  2A1F               	goto	l2682
  2563                           
  2564                           ;doprnt.c: 1113: fval += fround(prec);
  2565  01F8  0141               	movlb	1	; select bank1
  2566  01F9  0830               	movf	sprintf@prec^(0+128),w
  2567  01FA  318E  269A  3180   	fcall	_fround
  2568  01FD  0140               	movlb	0	; select bank0
  2569  01FE  0846               	movf	?_fround,w
  2570  01FF  00D6               	movwf	___ftadd@f1
  2571  0200  0847               	movf	?_fround+1,w
  2572  0201  00D7               	movwf	___ftadd@f1+1
  2573  0202  0848               	movf	?_fround+2,w
  2574  0203  00D8               	movwf	___ftadd@f1+2
  2575  0204  0141               	movlb	1	; select bank1
  2576  0205  083B               	movf	sprintf@fval^(0+128),w
  2577  0206  0140               	movlb	0	; select bank0
  2578  0207  00D9               	movwf	___ftadd@f2
  2579  0208  0141               	movlb	1	; select bank1
  2580  0209  083C               	movf	(sprintf@fval+1)^(0+128),w
  2581  020A  0140               	movlb	0	; select bank0
  2582  020B  00DA               	movwf	___ftadd@f2+1
  2583  020C  0141               	movlb	1	; select bank1
  2584  020D  083D               	movf	(sprintf@fval+2)^(0+128),w
  2585  020E  0140               	movlb	0	; select bank0
  2586  020F  00DB               	movwf	___ftadd@f2+2
  2587  0210  318B  233B  3180   	fcall	___ftadd
  2588  0213  0140               	movlb	0	; select bank0
  2589  0214  0856               	movf	?___ftadd,w
  2590  0215  0141               	movlb	1	; select bank1
  2591  0216  00BB               	movwf	sprintf@fval^(0+128)
  2592  0217  0140               	movlb	0	; select bank0
  2593  0218  0857               	movf	?___ftadd+1,w
  2594  0219  0141               	movlb	1	; select bank1
  2595  021A  00BC               	movwf	(sprintf@fval+1)^(0+128)
  2596  021B  0140               	movlb	0	; select bank0
  2597  021C  0858               	movf	?___ftadd+2,w
  2598  021D  0141               	movlb	1	; select bank1
  2599  021E  00BD               	movwf	(sprintf@fval+2)^(0+128)
  2600  021F                     l2682:	
  2601                           
  2602                           ;doprnt.c: 1116: if((exp > 9)||(fval != 0 && (unsigned long)fval == 0 && exp > 1)) {
  2603  021F  0141               	movlb	1	; select bank1
  2604  0220  0839               	movf	(sprintf@exp+1)^(0+128),w
  2605  0221  3A80               	xorlw	128
  2606  0222  00A0               	movwf	??_sprintf^(0+128)
  2607  0223  3080               	movlw	128
  2608  0224  0220               	subwf	??_sprintf^(0+128),w
  2609  0225  1D03               	skipz
  2610  0226  2A29               	goto	u3865
  2611  0227  300A               	movlw	10
  2612  0228  0238               	subwf	sprintf@exp^(0+128),w
  2613  0229                     u3865:	
  2614  0229  1803               	skipnc
  2615  022A  2A52               	goto	l2690
  2616  022B  0141               	movlb	1	; select bank1
  2617  022C  083D               	movf	(sprintf@fval+2)^(0+128),w
  2618  022D  043C               	iorwf	(sprintf@fval+1)^(0+128),w
  2619  022E  043B               	iorwf	sprintf@fval^(0+128),w
  2620  022F  1903               	skipnz
  2621  0230  2AB1               	goto	l2704
  2622  0231  083B               	movf	sprintf@fval^(0+128),w
  2623  0232  0140               	movlb	0	; select bank0
  2624  0233  00CF               	movwf	___fttol@f1
  2625  0234  0141               	movlb	1	; select bank1
  2626  0235  083C               	movf	(sprintf@fval+1)^(0+128),w
  2627  0236  0140               	movlb	0	; select bank0
  2628  0237  00D0               	movwf	___fttol@f1+1
  2629  0238  0141               	movlb	1	; select bank1
  2630  0239  083D               	movf	(sprintf@fval+2)^(0+128),w
  2631  023A  0140               	movlb	0	; select bank0
  2632  023B  00D1               	movwf	___fttol@f1+2
  2633  023C  3195  2525  3180   	fcall	___fttol
  2634  023F  0140               	movlb	0	; select bank0
  2635  0240  0852               	movf	?___fttol+3,w
  2636  0241  0451               	iorwf	?___fttol+2,w
  2637  0242  0450               	iorwf	?___fttol+1,w
  2638  0243  044F               	iorwf	?___fttol,w
  2639  0244  1D03               	skipz
  2640  0245  2AB1               	goto	l2704
  2641  0246  0141               	movlb	1	; select bank1
  2642  0247  0839               	movf	(sprintf@exp+1)^(0+128),w
  2643  0248  3A80               	xorlw	128
  2644  0249  00A0               	movwf	??_sprintf^(0+128)
  2645  024A  3080               	movlw	128
  2646  024B  0220               	subwf	??_sprintf^(0+128),w
  2647  024C  1D03               	skipz
  2648  024D  2A50               	goto	u3895
  2649  024E  3002               	movlw	2
  2650  024F  0238               	subwf	sprintf@exp^(0+128),w
  2651  0250                     u3895:	
  2652  0250  1C03               	skipc
  2653  0251  2AB1               	goto	l2704
  2654  0252                     l2690:	
  2655                           
  2656                           ;doprnt.c: 1120: if(tmpval.integ < 4.294967296){
  2657  0252  0141               	movlb	1	; select bank1
  2658  0253  0834               	movf	sprintf@tmpval^(0+128),w
  2659  0254  0140               	movlb	0	; select bank0
  2660  0255  00A0               	movwf	___ftge@ff1
  2661  0256  0141               	movlb	1	; select bank1
  2662  0257  0835               	movf	(sprintf@tmpval+1)^(0+128),w
  2663  0258  0140               	movlb	0	; select bank0
  2664  0259  00A1               	movwf	___ftge@ff1+1
  2665  025A  0141               	movlb	1	; select bank1
  2666  025B  0836               	movf	(sprintf@tmpval+2)^(0+128),w
  2667  025C  0140               	movlb	0	; select bank0
  2668  025D  00A2               	movwf	___ftge@ff1+2
  2669  025E  3070               	movlw	112
  2670  025F  00A3               	movwf	___ftge@ff2
  2671  0260  3089               	movlw	137
  2672  0261  00A4               	movwf	___ftge@ff2+1
  2673  0262  3040               	movlw	64
  2674  0263  00A5               	movwf	___ftge@ff2+2
  2675  0264  3193  23BB  3180   	fcall	___ftge
  2676  0267  1803               	btfsc	3,0
  2677  0268  2A6B               	goto	l2694
  2678                           
  2679                           ;doprnt.c: 1121: exp -= (sizeof dpowers/sizeof dpowers[0])-1;
  2680  0269  30F7               	movlw	247
  2681  026A  2A6C               	goto	L2
  2682  026B                     l2694:	
  2683                           ;doprnt.c: 1122: }else{
  2684                           
  2685                           
  2686                           ;doprnt.c: 1123: exp -= (sizeof dpowers/sizeof dpowers[0])-2;
  2687  026B  30F8               	movlw	248
  2688  026C                     L2:	
  2689  026C  0141               	movlb	1	; select bank1
  2690  026D  07B8               	addwf	sprintf@exp^(0+128),f
  2691  026E  30FF               	movlw	255
  2692  026F  3DB9               	addwfc	(sprintf@exp+1)^(0+128),f
  2693                           
  2694                           ;doprnt.c: 1124: }
  2695                           ;doprnt.c: 1125: tmpval.integ = scale(exp);
  2696  0270  0838               	movf	sprintf@exp^(0+128),w
  2697  0271  3185  25B3  3180   	fcall	_scale
  2698  0274  0140               	movlb	0	; select bank0
  2699  0275  0846               	movf	?_scale,w
  2700  0276  0141               	movlb	1	; select bank1
  2701  0277  00B4               	movwf	sprintf@tmpval^(0+128)
  2702  0278  0140               	movlb	0	; select bank0
  2703  0279  0847               	movf	?_scale+1,w
  2704  027A  0141               	movlb	1	; select bank1
  2705  027B  00B5               	movwf	(sprintf@tmpval+1)^(0+128)
  2706  027C  0140               	movlb	0	; select bank0
  2707  027D  0848               	movf	?_scale+2,w
  2708  027E  0141               	movlb	1	; select bank1
  2709  027F  00B6               	movwf	(sprintf@tmpval+2)^(0+128)
  2710                           
  2711                           ;doprnt.c: 1126: val = ((sizeof(double)== 3) ? _tdiv_to_l_(fval,tmpval.integ) : _div_to_
      +                          l_(fval,tmpval.integ));
  2712  0280  083B               	movf	sprintf@fval^(0+128),w
  2713  0281  0140               	movlb	0	; select bank0
  2714  0282  00A0               	movwf	__tdiv_to_l_@f1
  2715  0283  0141               	movlb	1	; select bank1
  2716  0284  083C               	movf	(sprintf@fval+1)^(0+128),w
  2717  0285  0140               	movlb	0	; select bank0
  2718  0286  00A1               	movwf	__tdiv_to_l_@f1+1
  2719  0287  0141               	movlb	1	; select bank1
  2720  0288  083D               	movf	(sprintf@fval+2)^(0+128),w
  2721  0289  0140               	movlb	0	; select bank0
  2722  028A  00A2               	movwf	__tdiv_to_l_@f1+2
  2723  028B  0141               	movlb	1	; select bank1
  2724  028C  0834               	movf	sprintf@tmpval^(0+128),w
  2725  028D  0140               	movlb	0	; select bank0
  2726  028E  00A3               	movwf	__tdiv_to_l_@f2
  2727  028F  0141               	movlb	1	; select bank1
  2728  0290  0835               	movf	(sprintf@tmpval+1)^(0+128),w
  2729  0291  0140               	movlb	0	; select bank0
  2730  0292  00A4               	movwf	__tdiv_to_l_@f2+1
  2731  0293  0141               	movlb	1	; select bank1
  2732  0294  0836               	movf	(sprintf@tmpval+2)^(0+128),w
  2733  0295  0140               	movlb	0	; select bank0
  2734  0296  00A5               	movwf	__tdiv_to_l_@f2+2
  2735  0297  318A  2285  3180   	fcall	__tdiv_to_l_
  2736  029A  0140               	movlb	0	; select bank0
  2737  029B  0823               	movf	?__tdiv_to_l_+3,w
  2738  029C  0141               	movlb	1	; select bank1
  2739  029D  00AF               	movwf	(sprintf@val+3)^(0+128)
  2740  029E  0140               	movlb	0	; select bank0
  2741  029F  0822               	movf	?__tdiv_to_l_+2,w
  2742  02A0  0141               	movlb	1	; select bank1
  2743  02A1  00AE               	movwf	(sprintf@val+2)^(0+128)
  2744  02A2  0140               	movlb	0	; select bank0
  2745  02A3  0821               	movf	?__tdiv_to_l_+1,w
  2746  02A4  0141               	movlb	1	; select bank1
  2747  02A5  00AD               	movwf	(sprintf@val+1)^(0+128)
  2748  02A6  0140               	movlb	0	; select bank0
  2749  02A7  0820               	movf	?__tdiv_to_l_,w
  2750  02A8  0141               	movlb	1	; select bank1
  2751  02A9  00AC               	movwf	sprintf@val^(0+128)
  2752                           
  2753                           ;doprnt.c: 1129: fval = 0.0;
  2754  02AA  3000               	movlw	0
  2755  02AB  00BB               	movwf	sprintf@fval^(0+128)
  2756  02AC  3000               	movlw	0
  2757  02AD  00BC               	movwf	(sprintf@fval+1)^(0+128)
  2758  02AE  3000               	movlw	0
  2759  02AF  00BD               	movwf	(sprintf@fval+2)^(0+128)
  2760                           
  2761                           ;doprnt.c: 1130: } else {
  2762  02B0  2B06               	goto	l2708
  2763  02B1                     l2704:	
  2764                           
  2765                           ;doprnt.c: 1131: val = (unsigned long)fval;
  2766  02B1  0141               	movlb	1	; select bank1
  2767  02B2  083B               	movf	sprintf@fval^(0+128),w
  2768  02B3  0140               	movlb	0	; select bank0
  2769  02B4  00CF               	movwf	___fttol@f1
  2770  02B5  0141               	movlb	1	; select bank1
  2771  02B6  083C               	movf	(sprintf@fval+1)^(0+128),w
  2772  02B7  0140               	movlb	0	; select bank0
  2773  02B8  00D0               	movwf	___fttol@f1+1
  2774  02B9  0141               	movlb	1	; select bank1
  2775  02BA  083D               	movf	(sprintf@fval+2)^(0+128),w
  2776  02BB  0140               	movlb	0	; select bank0
  2777  02BC  00D1               	movwf	___fttol@f1+2
  2778  02BD  3195  2525  3180   	fcall	___fttol
  2779  02C0  0140               	movlb	0	; select bank0
  2780  02C1  0852               	movf	?___fttol+3,w
  2781  02C2  0141               	movlb	1	; select bank1
  2782  02C3  00AF               	movwf	(sprintf@val+3)^(0+128)
  2783  02C4  0140               	movlb	0	; select bank0
  2784  02C5  0851               	movf	?___fttol+2,w
  2785  02C6  0141               	movlb	1	; select bank1
  2786  02C7  00AE               	movwf	(sprintf@val+2)^(0+128)
  2787  02C8  0140               	movlb	0	; select bank0
  2788  02C9  0850               	movf	?___fttol+1,w
  2789  02CA  0141               	movlb	1	; select bank1
  2790  02CB  00AD               	movwf	(sprintf@val+1)^(0+128)
  2791  02CC  0140               	movlb	0	; select bank0
  2792  02CD  084F               	movf	?___fttol,w
  2793  02CE  0141               	movlb	1	; select bank1
  2794  02CF  00AC               	movwf	sprintf@val^(0+128)
  2795                           
  2796                           ;doprnt.c: 1132: fval -= (double)val;
  2797  02D0  082F               	movf	(sprintf@val+3)^(0+128),w
  2798  02D1  0140               	movlb	0	; select bank0
  2799  02D2  00AB               	movwf	___lltoft@c+3
  2800  02D3  0141               	movlb	1	; select bank1
  2801  02D4  082E               	movf	(sprintf@val+2)^(0+128),w
  2802  02D5  0140               	movlb	0	; select bank0
  2803  02D6  00AA               	movwf	___lltoft@c+2
  2804  02D7  0141               	movlb	1	; select bank1
  2805  02D8  082D               	movf	(sprintf@val+1)^(0+128),w
  2806  02D9  0140               	movlb	0	; select bank0
  2807  02DA  00A9               	movwf	___lltoft@c+1
  2808  02DB  0141               	movlb	1	; select bank1
  2809  02DC  082C               	movf	sprintf@val^(0+128),w
  2810  02DD  0140               	movlb	0	; select bank0
  2811  02DE  00A8               	movwf	___lltoft@c
  2812  02DF  3192  22E6  3180   	fcall	___lltoft
  2813  02E2  0140               	movlb	0	; select bank0
  2814  02E3  0828               	movf	?___lltoft,w
  2815  02E4  00E3               	movwf	___ftsub@f2
  2816  02E5  0829               	movf	?___lltoft+1,w
  2817  02E6  00E4               	movwf	___ftsub@f2+1
  2818  02E7  082A               	movf	?___lltoft+2,w
  2819  02E8  00E5               	movwf	___ftsub@f2+2
  2820  02E9  0141               	movlb	1	; select bank1
  2821  02EA  083B               	movf	sprintf@fval^(0+128),w
  2822  02EB  0140               	movlb	0	; select bank0
  2823  02EC  00E6               	movwf	___ftsub@f1
  2824  02ED  0141               	movlb	1	; select bank1
  2825  02EE  083C               	movf	(sprintf@fval+1)^(0+128),w
  2826  02EF  0140               	movlb	0	; select bank0
  2827  02F0  00E7               	movwf	___ftsub@f1+1
  2828  02F1  0141               	movlb	1	; select bank1
  2829  02F2  083D               	movf	(sprintf@fval+2)^(0+128),w
  2830  02F3  0140               	movlb	0	; select bank0
  2831  02F4  00E8               	movwf	___ftsub@f1+2
  2832  02F5  3192  22A6  3180   	fcall	___ftsub
  2833  02F8  0140               	movlb	0	; select bank0
  2834  02F9  0863               	movf	?___ftsub,w
  2835  02FA  0141               	movlb	1	; select bank1
  2836  02FB  00BB               	movwf	sprintf@fval^(0+128)
  2837  02FC  0140               	movlb	0	; select bank0
  2838  02FD  0864               	movf	?___ftsub+1,w
  2839  02FE  0141               	movlb	1	; select bank1
  2840  02FF  00BC               	movwf	(sprintf@fval+1)^(0+128)
  2841  0300  0140               	movlb	0	; select bank0
  2842  0301  0865               	movf	?___ftsub+2,w
  2843  0302  0141               	movlb	1	; select bank1
  2844  0303  00BD               	movwf	(sprintf@fval+2)^(0+128)
  2845                           
  2846                           ;doprnt.c: 1133: exp = 0;
  2847  0304  01B8               	clrf	sprintf@exp^(0+128)
  2848  0305  01B9               	clrf	(sprintf@exp+1)^(0+128)
  2849  0306                     l2708:	
  2850                           
  2851                           ;doprnt.c: 1134: }
  2852                           ;doprnt.c: 1136: for(c = 1 ; c != (sizeof dpowers/sizeof dpowers[0]) ; c++)
  2853  0306  01BE               	clrf	sprintf@c^(0+128)
  2854  0307  0ABE               	incf	sprintf@c^(0+128),f
  2855  0308  300A               	movlw	10
  2856  0309  063E               	xorwf	sprintf@c^(0+128),w
  2857  030A  1903               	btfsc	3,2
  2858  030B  2B39               	goto	l2720
  2859  030C                     l2714:	
  2860                           
  2861                           ;doprnt.c: 1137: if(val < dpowers[c])
  2862  030C  083E               	movf	sprintf@c^(0+128),w
  2863  030D  00A0               	movwf	??_sprintf^(0+128)
  2864  030E  01A1               	clrf	(??_sprintf^(0+128)+1)
  2865  030F  35A0               	lslf	??_sprintf^(0+128),f
  2866  0310  0DA1               	rlf	(??_sprintf^(0+128)+1),f
  2867  0311  35A0               	lslf	??_sprintf^(0+128),f
  2868  0312  0DA1               	rlf	(??_sprintf^(0+128)+1),f
  2869  0313  3036               	movlw	low (_dpowers| (0+32768))
  2870  0314  0720               	addwf	??_sprintf^(0+128),w
  2871  0315  0084               	movwf	4
  2872  0316  3098               	movlw	high (_dpowers| (0+32768))
  2873  0317  3D21               	addwfc	(??_sprintf+1)^(0+128),w
  2874  0318  0085               	movwf	5
  2875  0319  3F00               	moviw [0]fsr0
  2876  031A  00A2               	movwf	(??_sprintf+2)^(0+128)
  2877  031B  3F01               	moviw [1]fsr0
  2878  031C  00A3               	movwf	((??_sprintf+2)^(0+128)+1)
  2879  031D  3F02               	moviw [2]fsr0
  2880  031E  00A4               	movwf	((??_sprintf+2)^(0+128)+2)
  2881  031F  3F03               	moviw [3]fsr0
  2882  0320  00A5               	movwf	((??_sprintf+2)^(0+128)+3)
  2883  0321  0825               	movf	(??_sprintf+5)^(0+128),w
  2884  0322  022F               	subwf	(sprintf@val+3)^(0+128),w
  2885  0323  1D03               	skipz
  2886  0324  2B2F               	goto	u3925
  2887  0325  0824               	movf	(??_sprintf+4)^(0+128),w
  2888  0326  022E               	subwf	(sprintf@val+2)^(0+128),w
  2889  0327  1D03               	skipz
  2890  0328  2B2F               	goto	u3925
  2891  0329  0823               	movf	(??_sprintf+3)^(0+128),w
  2892  032A  022D               	subwf	(sprintf@val+1)^(0+128),w
  2893  032B  1D03               	skipz
  2894  032C  2B2F               	goto	u3925
  2895  032D  0822               	movf	(??_sprintf+2)^(0+128),w
  2896  032E  022C               	subwf	sprintf@val^(0+128),w
  2897  032F                     u3925:	
  2898  032F  1C03               	btfss	3,0
  2899  0330  2B39               	goto	l2720
  2900                           
  2901                           ;doprnt.c: 1138: break;
  2902  0331  3001               	movlw	1
  2903  0332  00A0               	movwf	??_sprintf^(0+128)
  2904  0333  0820               	movf	??_sprintf^(0+128),w
  2905  0334  07BE               	addwf	sprintf@c^(0+128),f
  2906  0335  300A               	movlw	10
  2907  0336  063E               	xorwf	sprintf@c^(0+128),w
  2908  0337  1D03               	btfss	3,2
  2909  0338  2B0C               	goto	l2714
  2910  0339                     l2720:	
  2911                           
  2912                           ;doprnt.c: 1142: width -= prec + c + exp;
  2913  0339  083E               	movf	sprintf@c^(0+128),w
  2914  033A  00A0               	movwf	??_sprintf^(0+128)
  2915  033B  01A1               	clrf	(??_sprintf^(0+128)+1)
  2916  033C  1BA0               	btfsc	??_sprintf^(0+128),7
  2917  033D  03A1               	decf	(??_sprintf^(0+128)+1),f
  2918  033E  0830               	movf	sprintf@prec^(0+128),w
  2919  033F  0720               	addwf	??_sprintf^(0+128),w
  2920  0340  00A2               	movwf	(??_sprintf+2)^(0+128)
  2921  0341  0831               	movf	(sprintf@prec+1)^(0+128),w
  2922  0342  3D21               	addwfc	(??_sprintf+1)^(0+128),w
  2923  0343  00A3               	movwf	(??_sprintf+3)^(0+128)
  2924  0344  0838               	movf	sprintf@exp^(0+128),w
  2925  0345  0722               	addwf	(??_sprintf+2)^(0+128),w
  2926  0346  00A4               	movwf	(??_sprintf+4)^(0+128)
  2927  0347  0839               	movf	(sprintf@exp+1)^(0+128),w
  2928  0348  3D23               	addwfc	(??_sprintf+3)^(0+128),w
  2929  0349  00A5               	movwf	(??_sprintf+5)^(0+128)
  2930  034A  0824               	movf	(??_sprintf+4)^(0+128),w
  2931  034B  02B2               	subwf	sprintf@width^(0+128),f
  2932  034C  0825               	movf	(??_sprintf+5)^(0+128),w
  2933  034D  3BB3               	subwfb	(sprintf@width+1)^(0+128),f
  2934                           
  2935                           ;doprnt.c: 1143: if(
  2936                           ;doprnt.c: 1147: prec)
  2937  034E  0830               	movf	sprintf@prec^(0+128),w
  2938  034F  0431               	iorwf	(sprintf@prec+1)^(0+128),w
  2939  0350  1903               	btfsc	3,2
  2940  0351  2B56               	goto	l2724
  2941                           
  2942                           ;doprnt.c: 1148: width--;
  2943  0352  30FF               	movlw	255
  2944  0353  07B2               	addwf	sprintf@width^(0+128),f
  2945  0354  30FF               	movlw	255
  2946  0355  3DB3               	addwfc	(sprintf@width+1)^(0+128),f
  2947  0356                     l2724:	
  2948                           
  2949                           ;doprnt.c: 1149: if(flag & 0x03)
  2950  0356  3003               	movlw	3
  2951  0357  052A               	andwf	sprintf@flag^(0+128),w
  2952  0358  00A0               	movwf	??_sprintf^(0+128)
  2953  0359  3000               	movlw	0
  2954  035A  052B               	andwf	(sprintf@flag+1)^(0+128),w
  2955  035B  00A1               	movwf	(??_sprintf+1)^(0+128)
  2956  035C  0820               	movf	??_sprintf^(0+128),w
  2957  035D  0421               	iorwf	(??_sprintf^(0+128)+1),w
  2958  035E  1903               	btfsc	3,2
  2959  035F  2B64               	goto	l2734
  2960  0360                     l2732:	
  2961                           
  2962                           ;doprnt.c: 1182: width--;
  2963  0360  30FF               	movlw	255
  2964  0361  07B2               	addwf	sprintf@width^(0+128),f
  2965  0362  30FF               	movlw	255
  2966  0363  3DB3               	addwfc	(sprintf@width+1)^(0+128),f
  2967  0364                     l2734:	
  2968  0364  0833               	movf	(sprintf@width+1)^(0+128),w
  2969  0365  3A80               	xorlw	128
  2970  0366  00A0               	movwf	??_sprintf^(0+128)
  2971  0367  3080               	movlw	128
  2972  0368  0220               	subwf	??_sprintf^(0+128),w
  2973  0369  1D03               	skipz
  2974  036A  2B6D               	goto	u3965
  2975  036B  3001               	movlw	1
  2976  036C  0232               	subwf	sprintf@width^(0+128),w
  2977  036D                     u3965:	
  2978  036D  1C03               	btfss	3,0
  2979  036E  2B7C               	goto	l2736
  2980                           
  2981                           ;doprnt.c: 1181: ((*sp++ = (' ')));
  2982                           
  2983                           ;doprnt.c: 1175: {
  2984                           ;doprnt.c: 1180: while(width > 0) {
  2985                           
  2986                           ;doprnt.c: 1150: width--;
  2987  036F  3020               	movlw	32
  2988  0370  0141               	movlb	1	; select bank1
  2989  0371  00A0               	movwf	??_sprintf^(0+128)
  2990  0372  083A               	movf	sprintf@sp^(0+128),w
  2991  0373  0086               	movwf	6
  2992  0374  0187               	clrf	7
  2993  0375  0820               	movf	??_sprintf^(0+128),w
  2994  0376  0081               	movwf	1
  2995  0377  3001               	movlw	1
  2996  0378  00A0               	movwf	??_sprintf^(0+128)
  2997  0379  0820               	movf	??_sprintf^(0+128),w
  2998  037A  07BA               	addwf	sprintf@sp^(0+128),f
  2999  037B  2B60               	goto	l2732
  3000  037C                     l2736:	
  3001                           
  3002                           ;doprnt.c: 1183: }
  3003                           ;doprnt.c: 1188: if(flag & 0x03)
  3004  037C  3003               	movlw	3
  3005  037D  0141               	movlb	1	; select bank1
  3006  037E  052A               	andwf	sprintf@flag^(0+128),w
  3007  037F  00A0               	movwf	??_sprintf^(0+128)
  3008  0380  3000               	movlw	0
  3009  0381  052B               	andwf	(sprintf@flag+1)^(0+128),w
  3010  0382  00A1               	movwf	(??_sprintf+1)^(0+128)
  3011  0383  0820               	movf	??_sprintf^(0+128),w
  3012  0384  0421               	iorwf	(??_sprintf^(0+128)+1),w
  3013  0385  1903               	btfsc	3,2
  3014  0386  2B92               	goto	l2750
  3015                           
  3016                           ;doprnt.c: 1190: ((*sp++ = ('-')));
  3017  0387  302D               	movlw	45
  3018  0388                     L6:	
  3019  0388  00A0               	movwf	??_sprintf^(0+128)
  3020  0389  083A               	movf	sprintf@sp^(0+128),w
  3021  038A  0086               	movwf	6
  3022  038B  0187               	clrf	7
  3023  038C  0820               	movf	??_sprintf^(0+128),w
  3024  038D  0081               	movwf	1
  3025  038E  3001               	movlw	1
  3026  038F  00A0               	movwf	??_sprintf^(0+128)
  3027  0390  0820               	movf	??_sprintf^(0+128),w
  3028  0391  07BA               	addwf	sprintf@sp^(0+128),f
  3029  0392                     l2750:	
  3030  0392  30FF               	movlw	255
  3031  0393  00A0               	movwf	??_sprintf^(0+128)
  3032  0394  0820               	movf	??_sprintf^(0+128),w
  3033  0395  07BE               	addwf	sprintf@c^(0+128),f
  3034  0396  0A3E               	incf	sprintf@c^(0+128),w
  3035  0397  1903               	btfsc	3,2
  3036  0398  2C11               	goto	l2758
  3037                           
  3038                           ;doprnt.c: 1200: {
  3039                           ;doprnt.c: 1201: tmpval.vd = val/dpowers[c];
  3040                           
  3041                           ;doprnt.c: 1195: }
  3042                           ;doprnt.c: 1196: while(c--) {
  3043  0399  083E               	movf	sprintf@c^(0+128),w
  3044  039A  00A0               	movwf	??_sprintf^(0+128)
  3045  039B  01A1               	clrf	(??_sprintf^(0+128)+1)
  3046  039C  35A0               	lslf	??_sprintf^(0+128),f
  3047  039D  0DA1               	rlf	(??_sprintf^(0+128)+1),f
  3048  039E  35A0               	lslf	??_sprintf^(0+128),f
  3049  039F  0DA1               	rlf	(??_sprintf^(0+128)+1),f
  3050  03A0  3036               	movlw	low (_dpowers| (0+32768))
  3051  03A1  0720               	addwf	??_sprintf^(0+128),w
  3052  03A2  0084               	movwf	4
  3053  03A3  3098               	movlw	high (_dpowers| (0+32768))
  3054  03A4  3D21               	addwfc	(??_sprintf+1)^(0+128),w
  3055  03A5  0085               	movwf	5
  3056  03A6  3F00               	moviw [0]fsr0
  3057  03A7  0140               	movlb	0	; select bank0
  3058  03A8  00A0               	movwf	___lldiv@divisor
  3059  03A9  3F01               	moviw [1]fsr0
  3060  03AA  00A1               	movwf	___lldiv@divisor+1
  3061  03AB  3F02               	moviw [2]fsr0
  3062  03AC  00A2               	movwf	___lldiv@divisor+2
  3063  03AD  3F03               	moviw [3]fsr0
  3064  03AE  00A3               	movwf	___lldiv@divisor+3
  3065  03AF  0141               	movlb	1	; select bank1
  3066  03B0  082F               	movf	(sprintf@val+3)^(0+128),w
  3067  03B1  0140               	movlb	0	; select bank0
  3068  03B2  00A7               	movwf	___lldiv@dividend+3
  3069  03B3  0141               	movlb	1	; select bank1
  3070  03B4  082E               	movf	(sprintf@val+2)^(0+128),w
  3071  03B5  0140               	movlb	0	; select bank0
  3072  03B6  00A6               	movwf	___lldiv@dividend+2
  3073  03B7  0141               	movlb	1	; select bank1
  3074  03B8  082D               	movf	(sprintf@val+1)^(0+128),w
  3075  03B9  0140               	movlb	0	; select bank0
  3076  03BA  00A5               	movwf	___lldiv@dividend+1
  3077  03BB  0141               	movlb	1	; select bank1
  3078  03BC  082C               	movf	sprintf@val^(0+128),w
  3079  03BD  0140               	movlb	0	; select bank0
  3080  03BE  00A4               	movwf	___lldiv@dividend
  3081  03BF  3194  24D2  3180   	fcall	___lldiv
  3082  03C2  0140               	movlb	0	; select bank0
  3083  03C3  0823               	movf	?___lldiv+3,w
  3084  03C4  0141               	movlb	1	; select bank1
  3085  03C5  00B7               	movwf	(sprintf@tmpval+3)^(0+128)
  3086  03C6  0140               	movlb	0	; select bank0
  3087  03C7  0822               	movf	?___lldiv+2,w
  3088  03C8  0141               	movlb	1	; select bank1
  3089  03C9  00B6               	movwf	(sprintf@tmpval+2)^(0+128)
  3090  03CA  0140               	movlb	0	; select bank0
  3091  03CB  0821               	movf	?___lldiv+1,w
  3092  03CC  0141               	movlb	1	; select bank1
  3093  03CD  00B5               	movwf	(sprintf@tmpval+1)^(0+128)
  3094  03CE  0140               	movlb	0	; select bank0
  3095  03CF  0820               	movf	?___lldiv,w
  3096  03D0  0141               	movlb	1	; select bank1
  3097  03D1  00B4               	movwf	sprintf@tmpval^(0+128)
  3098                           
  3099                           ;doprnt.c: 1202: tmpval.vd %= 10;
  3100  03D2  3000               	movlw	0
  3101  03D3  0140               	movlb	0	; select bank0
  3102  03D4  00A3               	movwf	___llmod@divisor+3
  3103  03D5  3000               	movlw	0
  3104  03D6  00A2               	movwf	___llmod@divisor+2
  3105  03D7  3000               	movlw	0
  3106  03D8  00A1               	movwf	___llmod@divisor+1
  3107  03D9  300A               	movlw	10
  3108  03DA  00A0               	movwf	___llmod@divisor
  3109  03DB  0141               	movlb	1	; select bank1
  3110  03DC  0837               	movf	(sprintf@tmpval+3)^(0+128),w
  3111  03DD  0140               	movlb	0	; select bank0
  3112  03DE  00A7               	movwf	___llmod@dividend+3
  3113  03DF  0141               	movlb	1	; select bank1
  3114  03E0  0836               	movf	(sprintf@tmpval+2)^(0+128),w
  3115  03E1  0140               	movlb	0	; select bank0
  3116  03E2  00A6               	movwf	___llmod@dividend+2
  3117  03E3  0141               	movlb	1	; select bank1
  3118  03E4  0835               	movf	(sprintf@tmpval+1)^(0+128),w
  3119  03E5  0140               	movlb	0	; select bank0
  3120  03E6  00A5               	movwf	___llmod@dividend+1
  3121  03E7  0141               	movlb	1	; select bank1
  3122  03E8  0834               	movf	sprintf@tmpval^(0+128),w
  3123  03E9  0140               	movlb	0	; select bank0
  3124  03EA  00A4               	movwf	___llmod@dividend
  3125  03EB  3193  23F7  3180   	fcall	___llmod
  3126  03EE  0140               	movlb	0	; select bank0
  3127  03EF  0823               	movf	?___llmod+3,w
  3128  03F0  0141               	movlb	1	; select bank1
  3129  03F1  00B7               	movwf	(sprintf@tmpval+3)^(0+128)
  3130  03F2  0140               	movlb	0	; select bank0
  3131  03F3  0822               	movf	?___llmod+2,w
  3132  03F4  0141               	movlb	1	; select bank1
  3133  03F5  00B6               	movwf	(sprintf@tmpval+2)^(0+128)
  3134  03F6  0140               	movlb	0	; select bank0
  3135  03F7  0821               	movf	?___llmod+1,w
  3136  03F8  0141               	movlb	1	; select bank1
  3137  03F9  00B5               	movwf	(sprintf@tmpval+1)^(0+128)
  3138  03FA  0140               	movlb	0	; select bank0
  3139  03FB  0820               	movf	?___llmod,w
  3140  03FC  0141               	movlb	1	; select bank1
  3141  03FD  00B4               	movwf	sprintf@tmpval^(0+128)
  3142                           
  3143                           ;doprnt.c: 1203: ((*sp++ = ('0' + tmpval.vd)));
  3144  03FE  0834               	movf	sprintf@tmpval^(0+128),w
  3145  03FF  3E30               	addlw	48
  3146  0400  2B88               	goto	L6
  3147  0401                     l2752:	
  3148                           ;doprnt.c: 1204: }
  3149                           ;doprnt.c: 1206: }
  3150                           ;doprnt.c: 1207: while(exp > 0) {
  3151                           
  3152                           
  3153                           ;doprnt.c: 1208: ((*sp++ = ('0')));
  3154  0401  3030               	movlw	48
  3155  0402  0141               	movlb	1	; select bank1
  3156  0403  00A0               	movwf	??_sprintf^(0+128)
  3157  0404  083A               	movf	sprintf@sp^(0+128),w
  3158  0405  0086               	movwf	6
  3159  0406  0187               	clrf	7
  3160  0407  0820               	movf	??_sprintf^(0+128),w
  3161  0408  0081               	movwf	1
  3162  0409  3001               	movlw	1
  3163  040A  00A0               	movwf	??_sprintf^(0+128)
  3164  040B  0820               	movf	??_sprintf^(0+128),w
  3165  040C  07BA               	addwf	sprintf@sp^(0+128),f
  3166                           
  3167                           ;doprnt.c: 1209: exp--;
  3168  040D  30FF               	movlw	255
  3169  040E  07B8               	addwf	sprintf@exp^(0+128),f
  3170  040F  30FF               	movlw	255
  3171  0410  3DB9               	addwfc	(sprintf@exp+1)^(0+128),f
  3172  0411                     l2758:	
  3173  0411  0839               	movf	(sprintf@exp+1)^(0+128),w
  3174  0412  3A80               	xorlw	128
  3175  0413  00A0               	movwf	??_sprintf^(0+128)
  3176  0414  3080               	movlw	128
  3177  0415  0220               	subwf	??_sprintf^(0+128),w
  3178  0416  1D03               	skipz
  3179  0417  2C1A               	goto	u3995
  3180  0418  3001               	movlw	1
  3181  0419  0238               	subwf	sprintf@exp^(0+128),w
  3182  041A                     u3995:	
  3183  041A  1803               	skipnc
  3184  041B  2C01               	goto	l2752
  3185                           
  3186                           ;doprnt.c: 1210: }
  3187                           ;doprnt.c: 1211: if(prec > (int)((sizeof dpowers/sizeof dpowers[0])-2))
  3188  041C  0141               	movlb	1	; select bank1
  3189  041D  0831               	movf	(sprintf@prec+1)^(0+128),w
  3190  041E  3A80               	xorlw	128
  3191  041F  00A0               	movwf	??_sprintf^(0+128)
  3192  0420  3080               	movlw	128
  3193  0421  0220               	subwf	??_sprintf^(0+128),w
  3194  0422  1D03               	skipz
  3195  0423  2C26               	goto	u4005
  3196  0424  3009               	movlw	9
  3197  0425  0230               	subwf	sprintf@prec^(0+128),w
  3198  0426                     u4005:	
  3199  0426  1C03               	skipc
  3200  0427  2C2B               	goto	l2764
  3201                           
  3202                           ;doprnt.c: 1212: c = (sizeof dpowers/sizeof dpowers[0])-2;
  3203  0428  3008               	movlw	8
  3204  0429  0141               	movlb	1	; select bank1
  3205  042A  2C2D               	goto	L3
  3206  042B                     l2764:	
  3207                           
  3208                           ;doprnt.c: 1213: else
  3209                           ;doprnt.c: 1214: c = prec;
  3210  042B  0141               	movlb	1	; select bank1
  3211  042C  0830               	movf	sprintf@prec^(0+128),w
  3212  042D                     L3:	
  3213  042D  00A0               	movwf	??_sprintf^(0+128)
  3214  042E  0820               	movf	??_sprintf^(0+128),w
  3215  042F  00BE               	movwf	sprintf@c^(0+128)
  3216                           
  3217                           ;doprnt.c: 1215: prec -= c;
  3218  0430  083E               	movf	sprintf@c^(0+128),w
  3219  0431  00A0               	movwf	??_sprintf^(0+128)
  3220  0432  01A1               	clrf	(??_sprintf^(0+128)+1)
  3221  0433  1BA0               	btfsc	??_sprintf^(0+128),7
  3222  0434  03A1               	decf	(??_sprintf^(0+128)+1),f
  3223  0435  0820               	movf	??_sprintf^(0+128),w
  3224  0436  02B0               	subwf	sprintf@prec^(0+128),f
  3225  0437  0821               	movf	(??_sprintf+1)^(0+128),w
  3226  0438  3BB1               	subwfb	(sprintf@prec+1)^(0+128),f
  3227                           
  3228                           ;doprnt.c: 1219: if(c)
  3229  0439  083E               	movf	sprintf@c^(0+128),w
  3230  043A  1903               	btfsc	3,2
  3231  043B  2C47               	goto	l2772
  3232                           
  3233                           ;doprnt.c: 1221: ((*sp++ = ('.')));
  3234  043C  302E               	movlw	46
  3235  043D  00A0               	movwf	??_sprintf^(0+128)
  3236  043E  083A               	movf	sprintf@sp^(0+128),w
  3237  043F  0086               	movwf	6
  3238  0440  0187               	clrf	7
  3239  0441  0820               	movf	??_sprintf^(0+128),w
  3240  0442  0081               	movwf	1
  3241  0443  3001               	movlw	1
  3242  0444  00A0               	movwf	??_sprintf^(0+128)
  3243  0445  0820               	movf	??_sprintf^(0+128),w
  3244  0446  07BA               	addwf	sprintf@sp^(0+128),f
  3245  0447                     l2772:	
  3246                           
  3247                           ;doprnt.c: 1227: val = (long)(fval * scale(c));
  3248  0447  083E               	movf	sprintf@c^(0+128),w
  3249  0448  3185  25B3  3180   	fcall	_scale
  3250  044B  0140               	movlb	0	; select bank0
  3251  044C  0846               	movf	?_scale,w
  3252  044D  0141               	movlb	1	; select bank1
  3253  044E  00A6               	movwf	_sprintf$1007^(0+128)
  3254  044F  0140               	movlb	0	; select bank0
  3255  0450  0847               	movf	?_scale+1,w
  3256  0451  0141               	movlb	1	; select bank1
  3257  0452  00A7               	movwf	(_sprintf$1007+1)^(0+128)
  3258  0453  0140               	movlb	0	; select bank0
  3259  0454  0848               	movf	?_scale+2,w
  3260  0455  0141               	movlb	1	; select bank1
  3261  0456  00A8               	movwf	(_sprintf$1007+2)^(0+128)
  3262                           
  3263                           ;doprnt.c: 1227: val = (long)(fval * scale(c));
  3264  0457  0826               	movf	_sprintf$1007^(0+128),w
  3265  0458  0140               	movlb	0	; select bank0
  3266  0459  00B9               	movwf	___ftmul@f2
  3267  045A  0141               	movlb	1	; select bank1
  3268  045B  0827               	movf	(_sprintf$1007+1)^(0+128),w
  3269  045C  0140               	movlb	0	; select bank0
  3270  045D  00BA               	movwf	___ftmul@f2+1
  3271  045E  0141               	movlb	1	; select bank1
  3272  045F  0828               	movf	(_sprintf$1007+2)^(0+128),w
  3273  0460  0140               	movlb	0	; select bank0
  3274  0461  00BB               	movwf	___ftmul@f2+2
  3275  0462  0141               	movlb	1	; select bank1
  3276  0463  083B               	movf	sprintf@fval^(0+128),w
  3277  0464  0140               	movlb	0	; select bank0
  3278  0465  00B6               	movwf	___ftmul@f1
  3279  0466  0141               	movlb	1	; select bank1
  3280  0467  083C               	movf	(sprintf@fval+1)^(0+128),w
  3281  0468  0140               	movlb	0	; select bank0
  3282  0469  00B7               	movwf	___ftmul@f1+1
  3283  046A  0141               	movlb	1	; select bank1
  3284  046B  083D               	movf	(sprintf@fval+2)^(0+128),w
  3285  046C  0140               	movlb	0	; select bank0
  3286  046D  00B8               	movwf	___ftmul@f1+2
  3287  046E  3189  21D1  3180   	fcall	___ftmul
  3288  0471  0140               	movlb	0	; select bank0
  3289  0472  0836               	movf	?___ftmul,w
  3290  0473  00CF               	movwf	___fttol@f1
  3291  0474  0837               	movf	?___ftmul+1,w
  3292  0475  00D0               	movwf	___fttol@f1+1
  3293  0476  0838               	movf	?___ftmul+2,w
  3294  0477  00D1               	movwf	___fttol@f1+2
  3295  0478  3195  2525  3180   	fcall	___fttol
  3296  047B  0140               	movlb	0	; select bank0
  3297  047C  0852               	movf	?___fttol+3,w
  3298  047D  0141               	movlb	1	; select bank1
  3299  047E  00AF               	movwf	(sprintf@val+3)^(0+128)
  3300  047F  0140               	movlb	0	; select bank0
  3301  0480  0851               	movf	?___fttol+2,w
  3302  0481  0141               	movlb	1	; select bank1
  3303  0482  00AE               	movwf	(sprintf@val+2)^(0+128)
  3304  0483  0140               	movlb	0	; select bank0
  3305  0484  0850               	movf	?___fttol+1,w
  3306  0485  0141               	movlb	1	; select bank1
  3307  0486  00AD               	movwf	(sprintf@val+1)^(0+128)
  3308  0487  0140               	movlb	0	; select bank0
  3309  0488  084F               	movf	?___fttol,w
  3310  0489                     L4:	
  3311  0489  0141               	movlb	1	; select bank1
  3312  048A  00AC               	movwf	sprintf@val^(0+128)
  3313  048B  30FF               	movlw	255
  3314  048C  00A0               	movwf	??_sprintf^(0+128)
  3315  048D  0820               	movf	??_sprintf^(0+128),w
  3316  048E  07BE               	addwf	sprintf@c^(0+128),f
  3317  048F  0A3E               	incf	sprintf@c^(0+128),w
  3318  0490  1903               	btfsc	3,2
  3319  0491  2D4A               	goto	l2794
  3320                           
  3321                           ;doprnt.c: 1229: tmpval.vd = val/dpowers[c];
  3322                           
  3323                           ;doprnt.c: 1228: while(c--) {
  3324  0492  083E               	movf	sprintf@c^(0+128),w
  3325  0493  00A0               	movwf	??_sprintf^(0+128)
  3326  0494  01A1               	clrf	(??_sprintf^(0+128)+1)
  3327  0495  35A0               	lslf	??_sprintf^(0+128),f
  3328  0496  0DA1               	rlf	(??_sprintf^(0+128)+1),f
  3329  0497  35A0               	lslf	??_sprintf^(0+128),f
  3330  0498  0DA1               	rlf	(??_sprintf^(0+128)+1),f
  3331  0499  3036               	movlw	low (_dpowers| (0+32768))
  3332  049A  0720               	addwf	??_sprintf^(0+128),w
  3333  049B  0084               	movwf	4
  3334  049C  3098               	movlw	high (_dpowers| (0+32768))
  3335  049D  3D21               	addwfc	(??_sprintf+1)^(0+128),w
  3336  049E  0085               	movwf	5
  3337  049F  3F00               	moviw [0]fsr0
  3338  04A0  0140               	movlb	0	; select bank0
  3339  04A1  00A0               	movwf	___lldiv@divisor
  3340  04A2  3F01               	moviw [1]fsr0
  3341  04A3  00A1               	movwf	___lldiv@divisor+1
  3342  04A4  3F02               	moviw [2]fsr0
  3343  04A5  00A2               	movwf	___lldiv@divisor+2
  3344  04A6  3F03               	moviw [3]fsr0
  3345  04A7  00A3               	movwf	___lldiv@divisor+3
  3346  04A8  0141               	movlb	1	; select bank1
  3347  04A9  082F               	movf	(sprintf@val+3)^(0+128),w
  3348  04AA  0140               	movlb	0	; select bank0
  3349  04AB  00A7               	movwf	___lldiv@dividend+3
  3350  04AC  0141               	movlb	1	; select bank1
  3351  04AD  082E               	movf	(sprintf@val+2)^(0+128),w
  3352  04AE  0140               	movlb	0	; select bank0
  3353  04AF  00A6               	movwf	___lldiv@dividend+2
  3354  04B0  0141               	movlb	1	; select bank1
  3355  04B1  082D               	movf	(sprintf@val+1)^(0+128),w
  3356  04B2  0140               	movlb	0	; select bank0
  3357  04B3  00A5               	movwf	___lldiv@dividend+1
  3358  04B4  0141               	movlb	1	; select bank1
  3359  04B5  082C               	movf	sprintf@val^(0+128),w
  3360  04B6  0140               	movlb	0	; select bank0
  3361  04B7  00A4               	movwf	___lldiv@dividend
  3362  04B8  3194  24D2  3180   	fcall	___lldiv
  3363  04BB  0140               	movlb	0	; select bank0
  3364  04BC  0823               	movf	?___lldiv+3,w
  3365  04BD  0141               	movlb	1	; select bank1
  3366  04BE  00B7               	movwf	(sprintf@tmpval+3)^(0+128)
  3367  04BF  0140               	movlb	0	; select bank0
  3368  04C0  0822               	movf	?___lldiv+2,w
  3369  04C1  0141               	movlb	1	; select bank1
  3370  04C2  00B6               	movwf	(sprintf@tmpval+2)^(0+128)
  3371  04C3  0140               	movlb	0	; select bank0
  3372  04C4  0821               	movf	?___lldiv+1,w
  3373  04C5  0141               	movlb	1	; select bank1
  3374  04C6  00B5               	movwf	(sprintf@tmpval+1)^(0+128)
  3375  04C7  0140               	movlb	0	; select bank0
  3376  04C8  0820               	movf	?___lldiv,w
  3377  04C9  0141               	movlb	1	; select bank1
  3378  04CA  00B4               	movwf	sprintf@tmpval^(0+128)
  3379                           
  3380                           ;doprnt.c: 1230: tmpval.vd %= 10;
  3381  04CB  3000               	movlw	0
  3382  04CC  0140               	movlb	0	; select bank0
  3383  04CD  00A3               	movwf	___llmod@divisor+3
  3384  04CE  3000               	movlw	0
  3385  04CF  00A2               	movwf	___llmod@divisor+2
  3386  04D0  3000               	movlw	0
  3387  04D1  00A1               	movwf	___llmod@divisor+1
  3388  04D2  300A               	movlw	10
  3389  04D3  00A0               	movwf	___llmod@divisor
  3390  04D4  0141               	movlb	1	; select bank1
  3391  04D5  0837               	movf	(sprintf@tmpval+3)^(0+128),w
  3392  04D6  0140               	movlb	0	; select bank0
  3393  04D7  00A7               	movwf	___llmod@dividend+3
  3394  04D8  0141               	movlb	1	; select bank1
  3395  04D9  0836               	movf	(sprintf@tmpval+2)^(0+128),w
  3396  04DA  0140               	movlb	0	; select bank0
  3397  04DB  00A6               	movwf	___llmod@dividend+2
  3398  04DC  0141               	movlb	1	; select bank1
  3399  04DD  0835               	movf	(sprintf@tmpval+1)^(0+128),w
  3400  04DE  0140               	movlb	0	; select bank0
  3401  04DF  00A5               	movwf	___llmod@dividend+1
  3402  04E0  0141               	movlb	1	; select bank1
  3403  04E1  0834               	movf	sprintf@tmpval^(0+128),w
  3404  04E2  0140               	movlb	0	; select bank0
  3405  04E3  00A4               	movwf	___llmod@dividend
  3406  04E4  3193  23F7  3180   	fcall	___llmod
  3407  04E7  0140               	movlb	0	; select bank0
  3408  04E8  0823               	movf	?___llmod+3,w
  3409  04E9  0141               	movlb	1	; select bank1
  3410  04EA  00B7               	movwf	(sprintf@tmpval+3)^(0+128)
  3411  04EB  0140               	movlb	0	; select bank0
  3412  04EC  0822               	movf	?___llmod+2,w
  3413  04ED  0141               	movlb	1	; select bank1
  3414  04EE  00B6               	movwf	(sprintf@tmpval+2)^(0+128)
  3415  04EF  0140               	movlb	0	; select bank0
  3416  04F0  0821               	movf	?___llmod+1,w
  3417  04F1  0141               	movlb	1	; select bank1
  3418  04F2  00B5               	movwf	(sprintf@tmpval+1)^(0+128)
  3419  04F3  0140               	movlb	0	; select bank0
  3420  04F4  0820               	movf	?___llmod,w
  3421  04F5  0141               	movlb	1	; select bank1
  3422  04F6  00B4               	movwf	sprintf@tmpval^(0+128)
  3423                           
  3424                           ;doprnt.c: 1231: ((*sp++ = ('0' + tmpval.vd)));
  3425  04F7  0834               	movf	sprintf@tmpval^(0+128),w
  3426  04F8  3E30               	addlw	48
  3427  04F9  00A0               	movwf	??_sprintf^(0+128)
  3428  04FA  083A               	movf	sprintf@sp^(0+128),w
  3429  04FB  0086               	movwf	6
  3430  04FC  0187               	clrf	7
  3431  04FD  0820               	movf	??_sprintf^(0+128),w
  3432  04FE  0081               	movwf	1
  3433  04FF  3001               	movlw	1
  3434  0500  00A0               	movwf	??_sprintf^(0+128)
  3435  0501  0820               	movf	??_sprintf^(0+128),w
  3436  0502  07BA               	addwf	sprintf@sp^(0+128),f
  3437                           
  3438                           ;doprnt.c: 1232: val %= dpowers[c];
  3439  0503  083E               	movf	sprintf@c^(0+128),w
  3440  0504  00A0               	movwf	??_sprintf^(0+128)
  3441  0505  01A1               	clrf	(??_sprintf^(0+128)+1)
  3442  0506  35A0               	lslf	??_sprintf^(0+128),f
  3443  0507  0DA1               	rlf	(??_sprintf^(0+128)+1),f
  3444  0508  35A0               	lslf	??_sprintf^(0+128),f
  3445  0509  0DA1               	rlf	(??_sprintf^(0+128)+1),f
  3446  050A  3036               	movlw	low (_dpowers| (0+32768))
  3447  050B  0720               	addwf	??_sprintf^(0+128),w
  3448  050C  0084               	movwf	4
  3449  050D  3098               	movlw	high (_dpowers| (0+32768))
  3450  050E  3D21               	addwfc	(??_sprintf+1)^(0+128),w
  3451  050F  0085               	movwf	5
  3452  0510  3F00               	moviw [0]fsr0
  3453  0511  0140               	movlb	0	; select bank0
  3454  0512  00A0               	movwf	___llmod@divisor
  3455  0513  3F01               	moviw [1]fsr0
  3456  0514  00A1               	movwf	___llmod@divisor+1
  3457  0515  3F02               	moviw [2]fsr0
  3458  0516  00A2               	movwf	___llmod@divisor+2
  3459  0517  3F03               	moviw [3]fsr0
  3460  0518  00A3               	movwf	___llmod@divisor+3
  3461  0519  0141               	movlb	1	; select bank1
  3462  051A  082F               	movf	(sprintf@val+3)^(0+128),w
  3463  051B  0140               	movlb	0	; select bank0
  3464  051C  00A7               	movwf	___llmod@dividend+3
  3465  051D  0141               	movlb	1	; select bank1
  3466  051E  082E               	movf	(sprintf@val+2)^(0+128),w
  3467  051F  0140               	movlb	0	; select bank0
  3468  0520  00A6               	movwf	___llmod@dividend+2
  3469  0521  0141               	movlb	1	; select bank1
  3470  0522  082D               	movf	(sprintf@val+1)^(0+128),w
  3471  0523  0140               	movlb	0	; select bank0
  3472  0524  00A5               	movwf	___llmod@dividend+1
  3473  0525  0141               	movlb	1	; select bank1
  3474  0526  082C               	movf	sprintf@val^(0+128),w
  3475  0527  0140               	movlb	0	; select bank0
  3476  0528  00A4               	movwf	___llmod@dividend
  3477  0529  3193  23F7  3180   	fcall	___llmod
  3478  052C  0140               	movlb	0	; select bank0
  3479  052D  0823               	movf	?___llmod+3,w
  3480  052E  0141               	movlb	1	; select bank1
  3481  052F  00AF               	movwf	(sprintf@val+3)^(0+128)
  3482  0530  0140               	movlb	0	; select bank0
  3483  0531  0822               	movf	?___llmod+2,w
  3484  0532  0141               	movlb	1	; select bank1
  3485  0533  00AE               	movwf	(sprintf@val+2)^(0+128)
  3486  0534  0140               	movlb	0	; select bank0
  3487  0535  0821               	movf	?___llmod+1,w
  3488  0536  0141               	movlb	1	; select bank1
  3489  0537  00AD               	movwf	(sprintf@val+1)^(0+128)
  3490  0538  0140               	movlb	0	; select bank0
  3491  0539  0820               	movf	?___llmod,w
  3492  053A  2C89               	goto	L4
  3493  053B                     l2788:	
  3494                           ;doprnt.c: 1233: }
  3495                           ;doprnt.c: 1235: while(prec) {
  3496                           
  3497                           
  3498                           ;doprnt.c: 1236: ((*sp++ = ('0')));
  3499  053B  3030               	movlw	48
  3500  053C  00A0               	movwf	??_sprintf^(0+128)
  3501  053D  083A               	movf	sprintf@sp^(0+128),w
  3502  053E  0086               	movwf	6
  3503  053F  0187               	clrf	7
  3504  0540  0820               	movf	??_sprintf^(0+128),w
  3505  0541  0081               	movwf	1
  3506  0542  3001               	movlw	1
  3507  0543  00A0               	movwf	??_sprintf^(0+128)
  3508  0544  0820               	movf	??_sprintf^(0+128),w
  3509  0545  07BA               	addwf	sprintf@sp^(0+128),f
  3510                           
  3511                           ;doprnt.c: 1237: prec--;
  3512  0546  30FF               	movlw	255
  3513  0547  07B0               	addwf	sprintf@prec^(0+128),f
  3514  0548  30FF               	movlw	255
  3515  0549  3DB1               	addwfc	(sprintf@prec+1)^(0+128),f
  3516  054A                     l2794:	
  3517  054A  0830               	movf	sprintf@prec^(0+128),w
  3518  054B  0431               	iorwf	(sprintf@prec+1)^(0+128),w
  3519  054C  1903               	btfsc	3,2
  3520  054D  2849               	goto	l2820
  3521  054E  2D3B               	goto	l2788
  3522  054F                     l2796:	
  3523                           ;doprnt.c: 1238: }
  3524                           ;doprnt.c: 1245: continue;
  3525                           
  3526                           
  3527                           ;doprnt.c: 1246: }
  3528                           ;doprnt.c: 1345: if(width && flag & 0x03)
  3529  054F  0832               	movf	sprintf@width^(0+128),w
  3530  0550  0433               	iorwf	(sprintf@width+1)^(0+128),w
  3531  0551  1903               	btfsc	3,2
  3532  0552  2D61               	goto	l211
  3533  0553  3003               	movlw	3
  3534  0554  052A               	andwf	sprintf@flag^(0+128),w
  3535  0555  00A0               	movwf	??_sprintf^(0+128)
  3536  0556  3000               	movlw	0
  3537  0557  052B               	andwf	(sprintf@flag+1)^(0+128),w
  3538  0558  00A1               	movwf	(??_sprintf+1)^(0+128)
  3539  0559  0820               	movf	??_sprintf^(0+128),w
  3540  055A  0421               	iorwf	(??_sprintf^(0+128)+1),w
  3541  055B  1903               	btfsc	3,2
  3542  055C  2D61               	goto	l211
  3543                           
  3544                           ;doprnt.c: 1346: width--;
  3545  055D  30FF               	movlw	255
  3546  055E  07B2               	addwf	sprintf@width^(0+128),f
  3547  055F  30FF               	movlw	255
  3548  0560  3DB3               	addwfc	(sprintf@width+1)^(0+128),f
  3549  0561                     l211:	
  3550                           
  3551                           ;doprnt.c: 1381: if(width > c)
  3552  0561  083E               	movf	sprintf@c^(0+128),w
  3553  0562  00A0               	movwf	??_sprintf^(0+128)
  3554  0563  01A1               	clrf	(??_sprintf^(0+128)+1)
  3555  0564  1BA0               	btfsc	??_sprintf^(0+128),7
  3556  0565  03A1               	decf	(??_sprintf^(0+128)+1),f
  3557  0566  0821               	movf	(??_sprintf+1)^(0+128),w
  3558  0567  3A80               	xorlw	128
  3559  0568  00A2               	movwf	(??_sprintf+2)^(0+128)
  3560  0569  0833               	movf	(sprintf@width+1)^(0+128),w
  3561  056A  3A80               	xorlw	128
  3562  056B  0222               	subwf	(??_sprintf+2)^(0+128),w
  3563  056C  1D03               	skipz
  3564  056D  2D70               	goto	u4065
  3565  056E  0832               	movf	sprintf@width^(0+128),w
  3566  056F  0220               	subwf	??_sprintf^(0+128),w
  3567  0570                     u4065:	
  3568  0570  1803               	skipnc
  3569  0571  2D7D               	goto	l2804
  3570                           
  3571                           ;doprnt.c: 1382: width -= c;
  3572  0572  0141               	movlb	1	; select bank1
  3573  0573  083E               	movf	sprintf@c^(0+128),w
  3574  0574  00A0               	movwf	??_sprintf^(0+128)
  3575  0575  01A1               	clrf	(??_sprintf^(0+128)+1)
  3576  0576  1BA0               	btfsc	??_sprintf^(0+128),7
  3577  0577  03A1               	decf	(??_sprintf^(0+128)+1),f
  3578  0578  0820               	movf	??_sprintf^(0+128),w
  3579  0579  02B2               	subwf	sprintf@width^(0+128),f
  3580  057A  0821               	movf	(??_sprintf+1)^(0+128),w
  3581  057B  3BB3               	subwfb	(sprintf@width+1)^(0+128),f
  3582  057C  2D80               	goto	l2806
  3583  057D                     l2804:	
  3584                           
  3585                           ;doprnt.c: 1383: else
  3586                           ;doprnt.c: 1384: width = 0;
  3587  057D  0141               	movlb	1	; select bank1
  3588  057E  01B2               	clrf	sprintf@width^(0+128)
  3589  057F  01B3               	clrf	(sprintf@width+1)^(0+128)
  3590  0580                     l2806:	
  3591                           
  3592                           ;doprnt.c: 1422: {
  3593                           ;doprnt.c: 1424: if(width
  3594                           ;doprnt.c: 1428: )
  3595  0580  0832               	movf	sprintf@width^(0+128),w
  3596  0581  0433               	iorwf	(sprintf@width+1)^(0+128),w
  3597  0582  1903               	btfsc	3,2
  3598  0583  2D97               	goto	l2814
  3599  0584                     l2808:	
  3600                           ;doprnt.c: 1429: do
  3601                           
  3602                           
  3603                           ;doprnt.c: 1430: ((*sp++ = (' ')));
  3604  0584  3020               	movlw	32
  3605  0585  00A0               	movwf	??_sprintf^(0+128)
  3606  0586  083A               	movf	sprintf@sp^(0+128),w
  3607  0587  0086               	movwf	6
  3608  0588  0187               	clrf	7
  3609  0589  0820               	movf	??_sprintf^(0+128),w
  3610  058A  0081               	movwf	1
  3611  058B  3001               	movlw	1
  3612  058C  00A0               	movwf	??_sprintf^(0+128)
  3613  058D  0820               	movf	??_sprintf^(0+128),w
  3614  058E  07BA               	addwf	sprintf@sp^(0+128),f
  3615                           
  3616                           ;doprnt.c: 1431: while(--width);
  3617  058F  30FF               	movlw	255
  3618  0590  07B2               	addwf	sprintf@width^(0+128),f
  3619  0591  30FF               	movlw	255
  3620  0592  3DB3               	addwfc	(sprintf@width+1)^(0+128),f
  3621  0593  0832               	movf	sprintf@width^(0+128),w
  3622  0594  0433               	iorwf	(sprintf@width+1)^(0+128),w
  3623  0595  1D03               	btfss	3,2
  3624  0596  2D84               	goto	l2808
  3625  0597                     l2814:	
  3626                           
  3627                           ;doprnt.c: 1438: if(flag & 0x03)
  3628  0597  3003               	movlw	3
  3629  0598  052A               	andwf	sprintf@flag^(0+128),w
  3630  0599  00A0               	movwf	??_sprintf^(0+128)
  3631  059A  3000               	movlw	0
  3632  059B  052B               	andwf	(sprintf@flag+1)^(0+128),w
  3633  059C  00A1               	movwf	(??_sprintf+1)^(0+128)
  3634  059D  0820               	movf	??_sprintf^(0+128),w
  3635  059E  0421               	iorwf	(??_sprintf^(0+128)+1),w
  3636  059F  1903               	btfsc	3,2
  3637  05A0  2849               	goto	l2820
  3638                           
  3639                           ;doprnt.c: 1439: ((*sp++ = ('-')));
  3640  05A1  302D               	movlw	45
  3641  05A2                     L5:	
  3642  05A2  00A0               	movwf	??_sprintf^(0+128)
  3643  05A3  083A               	movf	sprintf@sp^(0+128),w
  3644  05A4  0086               	movwf	6
  3645  05A5  0187               	clrf	7
  3646  05A6  0820               	movf	??_sprintf^(0+128),w
  3647  05A7  0081               	movwf	1
  3648  05A8  3001               	movlw	1
  3649  05A9  00A0               	movwf	??_sprintf^(0+128)
  3650  05AA  0820               	movf	??_sprintf^(0+128),w
  3651  05AB  07BA               	addwf	sprintf@sp^(0+128),f
  3652  05AC  2849               	goto	l2820
  3653  05AD                     l2822:	
  3654                           ;doprnt.c: 1469: }
  3655                           ;doprnt.c: 1533: }
  3656                           ;doprnt.c: 1535: alldone:
  3657                           
  3658                           
  3659                           ;doprnt.c: 1538: *sp = 0;
  3660  05AD  0141               	movlb	1	; select bank1
  3661  05AE  083A               	movf	sprintf@sp^(0+128),w
  3662  05AF  0086               	movwf	6
  3663  05B0  0187               	clrf	7
  3664  05B1  0181               	clrf	1
  3665  05B2  0008               	return
  3666  05B3                     __end_of_sprintf:	
  3667                           ;doprnt.c: 1540: return 0;
  3668                           ;	Return value of _sprintf is never used
  3669                           
  3670                           
  3671                           	psect	text2
  3672  05B3                     __ptext2:	
  3673 ;; *************** function _scale *****************
  3674 ;; Defined at:
  3675 ;;		line 425 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\doprnt.c"
  3676 ;; Parameters:    Size  Location     Type
  3677 ;;  scl             1    wreg     char 
  3678 ;; Auto vars:     Size  Location     Type
  3679 ;;  scl             1   46[BANK0 ] char 
  3680 ;; Return value:  Size  Location     Type
  3681 ;;                  3   38[BANK0 ] char 
  3682 ;; Registers used:
  3683 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  3684 ;; Tracked objects:
  3685 ;;		On entry : 0/0
  3686 ;;		On exit  : 0/0
  3687 ;;		Unchanged: 0/0
  3688 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
  3689 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  3690 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  3691 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  3692 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  3693 ;;Total ram usage:        9 bytes
  3694 ;; Hardware stack levels used:    1
  3695 ;; Hardware stack levels required when called:    5
  3696 ;; This function calls:
  3697 ;;		___awdiv
  3698 ;;		___awmod
  3699 ;;		___ftmul
  3700 ;;		___wmul
  3701 ;; This function is called by:
  3702 ;;		_sprintf
  3703 ;; This function uses a non-reentrant model
  3704 ;;
  3705                           
  3706                           
  3707                           ;psect for function _scale
  3708  05B3                     _scale:	
  3709                           
  3710                           ;incstack = 0
  3711                           ; Regs used in _scale: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  3712                           ;scale@scl stored from wreg
  3713  05B3  0140               	movlb	0	; select bank0
  3714  05B4  00CE               	movwf	scale@scl
  3715                           
  3716                           ;doprnt.c: 428: if(scl < 0) {
  3717  05B5  1FCE               	btfss	scale@scl,7
  3718  05B6  2ED9               	goto	l2204
  3719                           
  3720                           ;doprnt.c: 429: scl = -scl;
  3721  05B7  09CE               	comf	scale@scl,f
  3722  05B8  0ACE               	incf	scale@scl,f
  3723                           
  3724                           ;doprnt.c: 430: if(scl>=110)
  3725  05B9  084E               	movf	scale@scl,w
  3726  05BA  3A80               	xorlw	128
  3727  05BB  3E12               	addlw	-238
  3728  05BC  1C03               	skipc
  3729  05BD  2E5D               	goto	l2194
  3730                           
  3731                           ;doprnt.c: 431: return _npowers_[scl/100+18] * _npowers_[(scl%100)/10+9] * _npowers_[scl
      +                          %10];
  3732  05BE  300A               	movlw	10
  3733  05BF  00A7               	movwf	___awdiv@divisor
  3734  05C0  3000               	movlw	0
  3735  05C1  00A8               	movwf	___awdiv@divisor+1
  3736  05C2  084E               	movf	scale@scl,w
  3737  05C3  00A2               	movwf	___awmod@dividend
  3738  05C4  01A3               	clrf	___awmod@dividend+1
  3739  05C5  1BA2               	btfsc	___awmod@dividend,7
  3740  05C6  03A3               	decf	___awmod@dividend+1,f
  3741  05C7  3064               	movlw	100
  3742  05C8  00A0               	movwf	___awmod@divisor
  3743  05C9  3000               	movlw	0
  3744  05CA  00A1               	movwf	___awmod@divisor+1
  3745  05CB  3194  243A  3185   	fcall	___awmod
  3746  05CE  0140               	movlb	0	; select bank0
  3747  05CF  0821               	movf	?___awmod+1,w
  3748  05D0  00AA               	movwf	___awdiv@dividend+1
  3749  05D1  0820               	movf	?___awmod,w
  3750  05D2  00A9               	movwf	___awdiv@dividend
  3751  05D3  3194  2480  3185   	fcall	___awdiv
  3752  05D6  0140               	movlb	0	; select bank0
  3753  05D7  0827               	movf	?___awdiv,w
  3754  05D8  3E09               	addlw	9
  3755  05D9  00B0               	movwf	___wmul@multiplier
  3756  05DA  3000               	movlw	0
  3757  05DB  3D28               	addwfc	?___awdiv+1,w
  3758  05DC  00B1               	movwf	___wmul@multiplier+1
  3759  05DD  3003               	movlw	3
  3760  05DE  00B2               	movwf	___wmul@multiplicand
  3761  05DF  3000               	movlw	0
  3762  05E0  00B3               	movwf	___wmul@multiplicand+1
  3763  05E1  3192  228A  3185   	fcall	___wmul
  3764  05E4  0140               	movlb	0	; select bank0
  3765  05E5  0831               	movf	?___wmul+1,w
  3766  05E6  0085               	movwf	5
  3767  05E7  0830               	movf	?___wmul,w
  3768  05E8  0084               	movwf	4
  3769  05E9  3000               	movlw	low (__npowers_| (0+32768))
  3770  05EA  0784               	addwf	4,f
  3771  05EB  3098               	movlw	high (__npowers_| (0+32768))
  3772  05EC  3D85               	addwfc	5,f
  3773  05ED  3F00               	moviw [0]fsr0
  3774  05EE  00B6               	movwf	___ftmul@f1
  3775  05EF  3F01               	moviw [1]fsr0
  3776  05F0  00B7               	movwf	___ftmul@f1+1
  3777  05F1  3F02               	moviw [2]fsr0
  3778  05F2  00B8               	movwf	___ftmul@f1+2
  3779  05F3  3064               	movlw	100
  3780  05F4  00A7               	movwf	___awdiv@divisor
  3781  05F5  3000               	movlw	0
  3782  05F6  00A8               	movwf	___awdiv@divisor+1
  3783  05F7  084E               	movf	scale@scl,w
  3784  05F8  00A9               	movwf	___awdiv@dividend
  3785  05F9  01AA               	clrf	___awdiv@dividend+1
  3786  05FA  1BA9               	btfsc	___awdiv@dividend,7
  3787  05FB  03AA               	decf	___awdiv@dividend+1,f
  3788  05FC  3194  2480  3185   	fcall	___awdiv
  3789  05FF  0140               	movlb	0	; select bank0
  3790  0600  0827               	movf	?___awdiv,w
  3791  0601  3E12               	addlw	18
  3792  0602  00B0               	movwf	___wmul@multiplier
  3793  0603  3000               	movlw	0
  3794  0604  3D28               	addwfc	?___awdiv+1,w
  3795  0605  00B1               	movwf	___wmul@multiplier+1
  3796  0606  3003               	movlw	3
  3797  0607  00B2               	movwf	___wmul@multiplicand
  3798  0608  3000               	movlw	0
  3799  0609  00B3               	movwf	___wmul@multiplicand+1
  3800  060A  3192  228A  3185   	fcall	___wmul
  3801  060D  0140               	movlb	0	; select bank0
  3802  060E  0831               	movf	?___wmul+1,w
  3803  060F  0085               	movwf	5
  3804  0610  0830               	movf	?___wmul,w
  3805  0611  0084               	movwf	4
  3806  0612  3000               	movlw	low (__npowers_| (0+32768))
  3807  0613  0784               	addwf	4,f
  3808  0614  3098               	movlw	high (__npowers_| (0+32768))
  3809  0615  3D85               	addwfc	5,f
  3810  0616  3F00               	moviw [0]fsr0
  3811  0617  00B9               	movwf	___ftmul@f2
  3812  0618  3F01               	moviw [1]fsr0
  3813  0619  00BA               	movwf	___ftmul@f2+1
  3814  061A  3F02               	moviw [2]fsr0
  3815  061B  00BB               	movwf	___ftmul@f2+2
  3816  061C  3189  21D1  3185   	fcall	___ftmul
  3817  061F  0140               	movlb	0	; select bank0
  3818  0620  0836               	movf	?___ftmul,w
  3819  0621  00CB               	movwf	_scale$1006
  3820  0622  0837               	movf	?___ftmul+1,w
  3821  0623  00CC               	movwf	_scale$1006+1
  3822  0624  0838               	movf	?___ftmul+2,w
  3823  0625  00CD               	movwf	_scale$1006+2
  3824                           
  3825                           ;doprnt.c: 431: return _npowers_[scl/100+18] * _npowers_[(scl%100)/10+9] * _npowers_[scl
      +                          %10];
  3826  0626  084E               	movf	scale@scl,w
  3827  0627  00A2               	movwf	___awmod@dividend
  3828  0628  01A3               	clrf	___awmod@dividend+1
  3829  0629  1BA2               	btfsc	___awmod@dividend,7
  3830  062A  03A3               	decf	___awmod@dividend+1,f
  3831  062B  300A               	movlw	10
  3832  062C  00A0               	movwf	___awmod@divisor
  3833  062D  3000               	movlw	0
  3834  062E  00A1               	movwf	___awmod@divisor+1
  3835  062F  3194  243A  3185   	fcall	___awmod
  3836  0632  0140               	movlb	0	; select bank0
  3837  0633  0821               	movf	?___awmod+1,w
  3838  0634  00B1               	movwf	___wmul@multiplier+1
  3839  0635  0820               	movf	?___awmod,w
  3840  0636  00B0               	movwf	___wmul@multiplier
  3841  0637  3003               	movlw	3
  3842  0638  00B2               	movwf	___wmul@multiplicand
  3843  0639  3000               	movlw	0
  3844  063A  00B3               	movwf	___wmul@multiplicand+1
  3845  063B  3192  228A  3185   	fcall	___wmul
  3846  063E  0140               	movlb	0	; select bank0
  3847  063F  0831               	movf	?___wmul+1,w
  3848  0640  0085               	movwf	5
  3849  0641  0830               	movf	?___wmul,w
  3850  0642  0084               	movwf	4
  3851  0643  3000               	movlw	low (__npowers_| (0+32768))
  3852  0644  0784               	addwf	4,f
  3853  0645  3098               	movlw	high (__npowers_| (0+32768))
  3854  0646  3D85               	addwfc	5,f
  3855  0647  3F00               	moviw [0]fsr0
  3856  0648  00B6               	movwf	___ftmul@f1
  3857  0649  3F01               	moviw [1]fsr0
  3858  064A  00B7               	movwf	___ftmul@f1+1
  3859  064B  3F02               	moviw [2]fsr0
  3860  064C  00B8               	movwf	___ftmul@f1+2
  3861  064D  084B               	movf	_scale$1006,w
  3862  064E  00B9               	movwf	___ftmul@f2
  3863  064F  084C               	movf	_scale$1006+1,w
  3864  0650  00BA               	movwf	___ftmul@f2+1
  3865  0651  084D               	movf	_scale$1006+2,w
  3866  0652  00BB               	movwf	___ftmul@f2+2
  3867  0653  3189  21D1         	fcall	___ftmul
  3868  0655  0140               	movlb	0	; select bank0
  3869  0656  0836               	movf	?___ftmul,w
  3870  0657  00C6               	movwf	?_scale
  3871  0658  0837               	movf	?___ftmul+1,w
  3872  0659  00C7               	movwf	?_scale+1
  3873  065A  0838               	movf	?___ftmul+2,w
  3874  065B  00C8               	movwf	?_scale+2
  3875  065C  0008               	return
  3876  065D                     l2194:	
  3877                           
  3878                           ;doprnt.c: 432: else if(scl > 10)
  3879  065D  084E               	movf	scale@scl,w
  3880  065E  3A80               	xorlw	128
  3881  065F  3E75               	addlw	-139
  3882  0660  1C03               	skipc
  3883  0661  2EBC               	goto	l2200
  3884                           
  3885                           ;doprnt.c: 433: return _npowers_[scl/10+9] * _npowers_[scl%10];
  3886  0662  084E               	movf	scale@scl,w
  3887  0663  00A2               	movwf	___awmod@dividend
  3888  0664  01A3               	clrf	___awmod@dividend+1
  3889  0665  1BA2               	btfsc	___awmod@dividend,7
  3890  0666  03A3               	decf	___awmod@dividend+1,f
  3891  0667  300A               	movlw	10
  3892  0668  00A0               	movwf	___awmod@divisor
  3893  0669  3000               	movlw	0
  3894  066A  00A1               	movwf	___awmod@divisor+1
  3895  066B  3194  243A  3185   	fcall	___awmod
  3896  066E  0140               	movlb	0	; select bank0
  3897  066F  0821               	movf	?___awmod+1,w
  3898  0670  00B1               	movwf	___wmul@multiplier+1
  3899  0671  0820               	movf	?___awmod,w
  3900  0672  00B0               	movwf	___wmul@multiplier
  3901  0673  3003               	movlw	3
  3902  0674  00B2               	movwf	___wmul@multiplicand
  3903  0675  3000               	movlw	0
  3904  0676  00B3               	movwf	___wmul@multiplicand+1
  3905  0677  3192  228A  3185   	fcall	___wmul
  3906  067A  0140               	movlb	0	; select bank0
  3907  067B  0831               	movf	?___wmul+1,w
  3908  067C  0085               	movwf	5
  3909  067D  0830               	movf	?___wmul,w
  3910  067E  0084               	movwf	4
  3911  067F  3000               	movlw	low (__npowers_| (0+32768))
  3912  0680  0784               	addwf	4,f
  3913  0681  3098               	movlw	high (__npowers_| (0+32768))
  3914  0682  3D85               	addwfc	5,f
  3915  0683  3F00               	moviw [0]fsr0
  3916  0684  00B6               	movwf	___ftmul@f1
  3917  0685  3F01               	moviw [1]fsr0
  3918  0686  00B7               	movwf	___ftmul@f1+1
  3919  0687  3F02               	moviw [2]fsr0
  3920  0688  00B8               	movwf	___ftmul@f1+2
  3921  0689  300A               	movlw	10
  3922  068A  00A7               	movwf	___awdiv@divisor
  3923  068B  3000               	movlw	0
  3924  068C  00A8               	movwf	___awdiv@divisor+1
  3925  068D  084E               	movf	scale@scl,w
  3926  068E  00A9               	movwf	___awdiv@dividend
  3927  068F  01AA               	clrf	___awdiv@dividend+1
  3928  0690  1BA9               	btfsc	___awdiv@dividend,7
  3929  0691  03AA               	decf	___awdiv@dividend+1,f
  3930  0692  3194  2480  3185   	fcall	___awdiv
  3931  0695  0140               	movlb	0	; select bank0
  3932  0696  0827               	movf	?___awdiv,w
  3933  0697  3E09               	addlw	9
  3934  0698  00B0               	movwf	___wmul@multiplier
  3935  0699  3000               	movlw	0
  3936  069A  3D28               	addwfc	?___awdiv+1,w
  3937  069B  00B1               	movwf	___wmul@multiplier+1
  3938  069C  3003               	movlw	3
  3939  069D  00B2               	movwf	___wmul@multiplicand
  3940  069E  3000               	movlw	0
  3941  069F  00B3               	movwf	___wmul@multiplicand+1
  3942  06A0  3192  228A  3185   	fcall	___wmul
  3943  06A3  0140               	movlb	0	; select bank0
  3944  06A4  0831               	movf	?___wmul+1,w
  3945  06A5  0085               	movwf	5
  3946  06A6  0830               	movf	?___wmul,w
  3947  06A7  0084               	movwf	4
  3948  06A8  3000               	movlw	low (__npowers_| (0+32768))
  3949  06A9  0784               	addwf	4,f
  3950  06AA  3098               	movlw	high (__npowers_| (0+32768))
  3951  06AB  3D85               	addwfc	5,f
  3952  06AC  3F00               	moviw [0]fsr0
  3953  06AD  00B9               	movwf	___ftmul@f2
  3954  06AE  3F01               	moviw [1]fsr0
  3955  06AF  00BA               	movwf	___ftmul@f2+1
  3956  06B0  3F02               	moviw [2]fsr0
  3957  06B1  00BB               	movwf	___ftmul@f2+2
  3958  06B2  3189  21D1         	fcall	___ftmul
  3959  06B4  0140               	movlb	0	; select bank0
  3960  06B5  0836               	movf	?___ftmul,w
  3961  06B6  00C6               	movwf	?_scale
  3962  06B7  0837               	movf	?___ftmul+1,w
  3963  06B8  00C7               	movwf	?_scale+1
  3964  06B9  0838               	movf	?___ftmul+2,w
  3965  06BA  00C8               	movwf	?_scale+2
  3966  06BB  0008               	return
  3967  06BC                     l2200:	
  3968                           
  3969                           ;doprnt.c: 434: return _npowers_[scl];
  3970  06BC  084E               	movf	scale@scl,w
  3971  06BD  00C9               	movwf	??_scale
  3972  06BE  01CA               	clrf	??_scale+1
  3973  06BF  0849               	movf	??_scale,w
  3974  06C0  00B0               	movwf	___wmul@multiplier
  3975  06C1  084A               	movf	??_scale+1,w
  3976  06C2  00B1               	movwf	___wmul@multiplier+1
  3977  06C3  3003               	movlw	3
  3978  06C4  00B2               	movwf	___wmul@multiplicand
  3979  06C5  3000               	movlw	0
  3980  06C6  00B3               	movwf	___wmul@multiplicand+1
  3981  06C7  3192  228A         	fcall	___wmul
  3982  06C9  0140               	movlb	0	; select bank0
  3983  06CA  0831               	movf	?___wmul+1,w
  3984  06CB  0085               	movwf	5
  3985  06CC  0830               	movf	?___wmul,w
  3986  06CD  0084               	movwf	4
  3987  06CE  3000               	movlw	low (__npowers_| (0+32768))
  3988  06CF  0784               	addwf	4,f
  3989  06D0  3098               	movlw	high (__npowers_| (0+32768))
  3990  06D1  3D85               	addwfc	5,f
  3991  06D2  3F00               	moviw [0]fsr0
  3992  06D3  00C6               	movwf	?_scale
  3993  06D4  3F01               	moviw [1]fsr0
  3994  06D5  00C7               	movwf	?_scale+1
  3995  06D6  3F02               	moviw [2]fsr0
  3996  06D7  00C8               	movwf	?_scale+2
  3997  06D8  0008               	return
  3998  06D9                     l2204:	
  3999                           
  4000                           ;doprnt.c: 435: }
  4001                           ;doprnt.c: 436: if(scl>=110)
  4002  06D9  084E               	movf	scale@scl,w
  4003  06DA  3A80               	xorlw	128
  4004  06DB  3E12               	addlw	-238
  4005  06DC  1C03               	skipc
  4006  06DD  2F7D               	goto	l2212
  4007                           
  4008                           ;doprnt.c: 437: return _powers_[scl/100+18] * _powers_[(scl%100)/10+9] * _powers_[scl%10
      +                          ];
  4009  06DE  300A               	movlw	10
  4010  06DF  00A7               	movwf	___awdiv@divisor
  4011  06E0  3000               	movlw	0
  4012  06E1  00A8               	movwf	___awdiv@divisor+1
  4013  06E2  084E               	movf	scale@scl,w
  4014  06E3  00A2               	movwf	___awmod@dividend
  4015  06E4  01A3               	clrf	___awmod@dividend+1
  4016  06E5  1BA2               	btfsc	___awmod@dividend,7
  4017  06E6  03A3               	decf	___awmod@dividend+1,f
  4018  06E7  3064               	movlw	100
  4019  06E8  00A0               	movwf	___awmod@divisor
  4020  06E9  3000               	movlw	0
  4021  06EA  00A1               	movwf	___awmod@divisor+1
  4022  06EB  3194  243A  3185   	fcall	___awmod
  4023  06EE  0140               	movlb	0	; select bank0
  4024  06EF  0821               	movf	?___awmod+1,w
  4025  06F0  00AA               	movwf	___awdiv@dividend+1
  4026  06F1  0820               	movf	?___awmod,w
  4027  06F2  00A9               	movwf	___awdiv@dividend
  4028  06F3  3194  2480  3185   	fcall	___awdiv
  4029  06F6  0140               	movlb	0	; select bank0
  4030  06F7  0827               	movf	?___awdiv,w
  4031  06F8  3E09               	addlw	9
  4032  06F9  00B0               	movwf	___wmul@multiplier
  4033  06FA  3000               	movlw	0
  4034  06FB  3D28               	addwfc	?___awdiv+1,w
  4035  06FC  00B1               	movwf	___wmul@multiplier+1
  4036  06FD  3003               	movlw	3
  4037  06FE  00B2               	movwf	___wmul@multiplicand
  4038  06FF  3000               	movlw	0
  4039  0700  00B3               	movwf	___wmul@multiplicand+1
  4040  0701  3192  228A  3185   	fcall	___wmul
  4041  0704  0140               	movlb	0	; select bank0
  4042  0705  0831               	movf	?___wmul+1,w
  4043  0706  0085               	movwf	5
  4044  0707  0830               	movf	?___wmul,w
  4045  0708  0084               	movwf	4
  4046  0709  305E               	movlw	low (__powers_| (0+32768))
  4047  070A  0784               	addwf	4,f
  4048  070B  3098               	movlw	high (__powers_| (0+32768))
  4049  070C  3D85               	addwfc	5,f
  4050  070D  3F00               	moviw [0]fsr0
  4051  070E  00B6               	movwf	___ftmul@f1
  4052  070F  3F01               	moviw [1]fsr0
  4053  0710  00B7               	movwf	___ftmul@f1+1
  4054  0711  3F02               	moviw [2]fsr0
  4055  0712  00B8               	movwf	___ftmul@f1+2
  4056  0713  3064               	movlw	100
  4057  0714  00A7               	movwf	___awdiv@divisor
  4058  0715  3000               	movlw	0
  4059  0716  00A8               	movwf	___awdiv@divisor+1
  4060  0717  084E               	movf	scale@scl,w
  4061  0718  00A9               	movwf	___awdiv@dividend
  4062  0719  01AA               	clrf	___awdiv@dividend+1
  4063  071A  1BA9               	btfsc	___awdiv@dividend,7
  4064  071B  03AA               	decf	___awdiv@dividend+1,f
  4065  071C  3194  2480  3185   	fcall	___awdiv
  4066  071F  0140               	movlb	0	; select bank0
  4067  0720  0827               	movf	?___awdiv,w
  4068  0721  3E12               	addlw	18
  4069  0722  00B0               	movwf	___wmul@multiplier
  4070  0723  3000               	movlw	0
  4071  0724  3D28               	addwfc	?___awdiv+1,w
  4072  0725  00B1               	movwf	___wmul@multiplier+1
  4073  0726  3003               	movlw	3
  4074  0727  00B2               	movwf	___wmul@multiplicand
  4075  0728  3000               	movlw	0
  4076  0729  00B3               	movwf	___wmul@multiplicand+1
  4077  072A  3192  228A  3185   	fcall	___wmul
  4078  072D  0140               	movlb	0	; select bank0
  4079  072E  0831               	movf	?___wmul+1,w
  4080  072F  0085               	movwf	5
  4081  0730  0830               	movf	?___wmul,w
  4082  0731  0084               	movwf	4
  4083  0732  305E               	movlw	low (__powers_| (0+32768))
  4084  0733  0784               	addwf	4,f
  4085  0734  3098               	movlw	high (__powers_| (0+32768))
  4086  0735  3D85               	addwfc	5,f
  4087  0736  3F00               	moviw [0]fsr0
  4088  0737  00B9               	movwf	___ftmul@f2
  4089  0738  3F01               	moviw [1]fsr0
  4090  0739  00BA               	movwf	___ftmul@f2+1
  4091  073A  3F02               	moviw [2]fsr0
  4092  073B  00BB               	movwf	___ftmul@f2+2
  4093  073C  3189  21D1  3185   	fcall	___ftmul
  4094  073F  0140               	movlb	0	; select bank0
  4095  0740  0836               	movf	?___ftmul,w
  4096  0741  00CB               	movwf	_scale$1006
  4097  0742  0837               	movf	?___ftmul+1,w
  4098  0743  00CC               	movwf	_scale$1006+1
  4099  0744  0838               	movf	?___ftmul+2,w
  4100  0745  00CD               	movwf	_scale$1006+2
  4101                           
  4102                           ;doprnt.c: 437: return _powers_[scl/100+18] * _powers_[(scl%100)/10+9] * _powers_[scl%10
      +                          ];
  4103  0746  084E               	movf	scale@scl,w
  4104  0747  00A2               	movwf	___awmod@dividend
  4105  0748  01A3               	clrf	___awmod@dividend+1
  4106  0749  1BA2               	btfsc	___awmod@dividend,7
  4107  074A  03A3               	decf	___awmod@dividend+1,f
  4108  074B  300A               	movlw	10
  4109  074C  00A0               	movwf	___awmod@divisor
  4110  074D  3000               	movlw	0
  4111  074E  00A1               	movwf	___awmod@divisor+1
  4112  074F  3194  243A  3185   	fcall	___awmod
  4113  0752  0140               	movlb	0	; select bank0
  4114  0753  0821               	movf	?___awmod+1,w
  4115  0754  00B1               	movwf	___wmul@multiplier+1
  4116  0755  0820               	movf	?___awmod,w
  4117  0756  00B0               	movwf	___wmul@multiplier
  4118  0757  3003               	movlw	3
  4119  0758  00B2               	movwf	___wmul@multiplicand
  4120  0759  3000               	movlw	0
  4121  075A  00B3               	movwf	___wmul@multiplicand+1
  4122  075B  3192  228A  3185   	fcall	___wmul
  4123  075E  0140               	movlb	0	; select bank0
  4124  075F  0831               	movf	?___wmul+1,w
  4125  0760  0085               	movwf	5
  4126  0761  0830               	movf	?___wmul,w
  4127  0762  0084               	movwf	4
  4128  0763  305E               	movlw	low (__powers_| (0+32768))
  4129  0764  0784               	addwf	4,f
  4130  0765  3098               	movlw	high (__powers_| (0+32768))
  4131  0766  3D85               	addwfc	5,f
  4132  0767  3F00               	moviw [0]fsr0
  4133  0768  00B6               	movwf	___ftmul@f1
  4134  0769  3F01               	moviw [1]fsr0
  4135  076A  00B7               	movwf	___ftmul@f1+1
  4136  076B  3F02               	moviw [2]fsr0
  4137  076C  00B8               	movwf	___ftmul@f1+2
  4138  076D  084B               	movf	_scale$1006,w
  4139  076E  00B9               	movwf	___ftmul@f2
  4140  076F  084C               	movf	_scale$1006+1,w
  4141  0770  00BA               	movwf	___ftmul@f2+1
  4142  0771  084D               	movf	_scale$1006+2,w
  4143  0772  00BB               	movwf	___ftmul@f2+2
  4144  0773  3189  21D1         	fcall	___ftmul
  4145  0775  0140               	movlb	0	; select bank0
  4146  0776  0836               	movf	?___ftmul,w
  4147  0777  00C6               	movwf	?_scale
  4148  0778  0837               	movf	?___ftmul+1,w
  4149  0779  00C7               	movwf	?_scale+1
  4150  077A  0838               	movf	?___ftmul+2,w
  4151  077B  00C8               	movwf	?_scale+2
  4152  077C  0008               	return
  4153  077D                     l2212:	
  4154                           
  4155                           ;doprnt.c: 438: else if(scl > 10)
  4156  077D  084E               	movf	scale@scl,w
  4157  077E  3A80               	xorlw	128
  4158  077F  3E75               	addlw	-139
  4159  0780  1C03               	skipc
  4160  0781  2FDC               	goto	l2218
  4161                           
  4162                           ;doprnt.c: 439: return _powers_[scl/10+9] * _powers_[scl%10];
  4163  0782  084E               	movf	scale@scl,w
  4164  0783  00A2               	movwf	___awmod@dividend
  4165  0784  01A3               	clrf	___awmod@dividend+1
  4166  0785  1BA2               	btfsc	___awmod@dividend,7
  4167  0786  03A3               	decf	___awmod@dividend+1,f
  4168  0787  300A               	movlw	10
  4169  0788  00A0               	movwf	___awmod@divisor
  4170  0789  3000               	movlw	0
  4171  078A  00A1               	movwf	___awmod@divisor+1
  4172  078B  3194  243A  3185   	fcall	___awmod
  4173  078E  0140               	movlb	0	; select bank0
  4174  078F  0821               	movf	?___awmod+1,w
  4175  0790  00B1               	movwf	___wmul@multiplier+1
  4176  0791  0820               	movf	?___awmod,w
  4177  0792  00B0               	movwf	___wmul@multiplier
  4178  0793  3003               	movlw	3
  4179  0794  00B2               	movwf	___wmul@multiplicand
  4180  0795  3000               	movlw	0
  4181  0796  00B3               	movwf	___wmul@multiplicand+1
  4182  0797  3192  228A  3185   	fcall	___wmul
  4183  079A  0140               	movlb	0	; select bank0
  4184  079B  0831               	movf	?___wmul+1,w
  4185  079C  0085               	movwf	5
  4186  079D  0830               	movf	?___wmul,w
  4187  079E  0084               	movwf	4
  4188  079F  305E               	movlw	low (__powers_| (0+32768))
  4189  07A0  0784               	addwf	4,f
  4190  07A1  3098               	movlw	high (__powers_| (0+32768))
  4191  07A2  3D85               	addwfc	5,f
  4192  07A3  3F00               	moviw [0]fsr0
  4193  07A4  00B6               	movwf	___ftmul@f1
  4194  07A5  3F01               	moviw [1]fsr0
  4195  07A6  00B7               	movwf	___ftmul@f1+1
  4196  07A7  3F02               	moviw [2]fsr0
  4197  07A8  00B8               	movwf	___ftmul@f1+2
  4198  07A9  300A               	movlw	10
  4199  07AA  00A7               	movwf	___awdiv@divisor
  4200  07AB  3000               	movlw	0
  4201  07AC  00A8               	movwf	___awdiv@divisor+1
  4202  07AD  084E               	movf	scale@scl,w
  4203  07AE  00A9               	movwf	___awdiv@dividend
  4204  07AF  01AA               	clrf	___awdiv@dividend+1
  4205  07B0  1BA9               	btfsc	___awdiv@dividend,7
  4206  07B1  03AA               	decf	___awdiv@dividend+1,f
  4207  07B2  3194  2480  3185   	fcall	___awdiv
  4208  07B5  0140               	movlb	0	; select bank0
  4209  07B6  0827               	movf	?___awdiv,w
  4210  07B7  3E09               	addlw	9
  4211  07B8  00B0               	movwf	___wmul@multiplier
  4212  07B9  3000               	movlw	0
  4213  07BA  3D28               	addwfc	?___awdiv+1,w
  4214  07BB  00B1               	movwf	___wmul@multiplier+1
  4215  07BC  3003               	movlw	3
  4216  07BD  00B2               	movwf	___wmul@multiplicand
  4217  07BE  3000               	movlw	0
  4218  07BF  00B3               	movwf	___wmul@multiplicand+1
  4219  07C0  3192  228A  3185   	fcall	___wmul
  4220  07C3  0140               	movlb	0	; select bank0
  4221  07C4  0831               	movf	?___wmul+1,w
  4222  07C5  0085               	movwf	5
  4223  07C6  0830               	movf	?___wmul,w
  4224  07C7  0084               	movwf	4
  4225  07C8  305E               	movlw	low (__powers_| (0+32768))
  4226  07C9  0784               	addwf	4,f
  4227  07CA  3098               	movlw	high (__powers_| (0+32768))
  4228  07CB  3D85               	addwfc	5,f
  4229  07CC  3F00               	moviw [0]fsr0
  4230  07CD  00B9               	movwf	___ftmul@f2
  4231  07CE  3F01               	moviw [1]fsr0
  4232  07CF  00BA               	movwf	___ftmul@f2+1
  4233  07D0  3F02               	moviw [2]fsr0
  4234  07D1  00BB               	movwf	___ftmul@f2+2
  4235  07D2  3189  21D1         	fcall	___ftmul
  4236  07D4  0140               	movlb	0	; select bank0
  4237  07D5  0836               	movf	?___ftmul,w
  4238  07D6  00C6               	movwf	?_scale
  4239  07D7  0837               	movf	?___ftmul+1,w
  4240  07D8  00C7               	movwf	?_scale+1
  4241  07D9  0838               	movf	?___ftmul+2,w
  4242  07DA  00C8               	movwf	?_scale+2
  4243  07DB  0008               	return
  4244  07DC                     l2218:	
  4245                           
  4246                           ;doprnt.c: 440: return _powers_[scl];
  4247  07DC  084E               	movf	scale@scl,w
  4248  07DD  00C9               	movwf	??_scale
  4249  07DE  01CA               	clrf	??_scale+1
  4250  07DF  0849               	movf	??_scale,w
  4251  07E0  00B0               	movwf	___wmul@multiplier
  4252  07E1  084A               	movf	??_scale+1,w
  4253  07E2  00B1               	movwf	___wmul@multiplier+1
  4254  07E3  3003               	movlw	3
  4255  07E4  00B2               	movwf	___wmul@multiplicand
  4256  07E5  3000               	movlw	0
  4257  07E6  00B3               	movwf	___wmul@multiplicand+1
  4258  07E7  3192  228A         	fcall	___wmul
  4259  07E9  0140               	movlb	0	; select bank0
  4260  07EA  0831               	movf	?___wmul+1,w
  4261  07EB  0085               	movwf	5
  4262  07EC  0830               	movf	?___wmul,w
  4263  07ED  0084               	movwf	4
  4264  07EE  305E               	movlw	low (__powers_| (0+32768))
  4265  07EF  0784               	addwf	4,f
  4266  07F0  3098               	movlw	high (__powers_| (0+32768))
  4267  07F1  3D85               	addwfc	5,f
  4268  07F2  3F00               	moviw [0]fsr0
  4269  07F3  00C6               	movwf	?_scale
  4270  07F4  3F01               	moviw [1]fsr0
  4271  07F5  00C7               	movwf	?_scale+1
  4272  07F6  3F02               	moviw [2]fsr0
  4273  07F7  00C8               	movwf	?_scale+2
  4274  07F8  0008               	return
  4275  07F9                     __end_of_scale:	
  4276                           
  4277                           	psect	text3
  4278  127B                     __ptext3:	
  4279 ;; *************** function _isdigit *****************
  4280 ;; Defined at:
  4281 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\isdigit.c"
  4282 ;; Parameters:    Size  Location     Type
  4283 ;;  c               1    wreg     unsigned char 
  4284 ;; Auto vars:     Size  Location     Type
  4285 ;;  c               1    1[BANK0 ] unsigned char 
  4286 ;; Return value:  Size  Location     Type
  4287 ;;		None               void
  4288 ;; Registers used:
  4289 ;;		wreg, status,2, status,0
  4290 ;; Tracked objects:
  4291 ;;		On entry : 0/0
  4292 ;;		On exit  : 0/0
  4293 ;;		Unchanged: 0/0
  4294 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
  4295 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  4296 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  4297 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  4298 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  4299 ;;Total ram usage:        2 bytes
  4300 ;; Hardware stack levels used:    1
  4301 ;; Hardware stack levels required when called:    3
  4302 ;; This function calls:
  4303 ;;		Nothing
  4304 ;; This function is called by:
  4305 ;;		_sprintf
  4306 ;; This function uses a non-reentrant model
  4307 ;;
  4308                           
  4309                           
  4310                           ;psect for function _isdigit
  4311  127B                     _isdigit:	
  4312                           
  4313                           ;incstack = 0
  4314                           ; Regs used in _isdigit: [wreg+status,2+status,0]
  4315                           ;isdigit@c stored from wreg
  4316  127B  0140               	movlb	0	; select bank0
  4317  127C  00A1               	movwf	isdigit@c
  4318  127D  01A0               	clrf	_isdigit$791
  4319  127E  303A               	movlw	58
  4320  127F  0221               	subwf	isdigit@c,w
  4321  1280  1803               	skipnc
  4322  1281  2A88               	goto	l2230
  4323  1282  3030               	movlw	48
  4324  1283  0221               	subwf	isdigit@c,w
  4325  1284  1C03               	skipc
  4326  1285  2A88               	goto	l2230
  4327  1286  01A0               	clrf	_isdigit$791
  4328  1287  0AA0               	incf	_isdigit$791,f
  4329  1288                     l2230:	
  4330  1288  0C20               	rrf	_isdigit$791,w
  4331  1289  0008               	return
  4332  128A                     __end_of_isdigit:	
  4333                           
  4334                           	psect	text4
  4335  0E9A                     __ptext4:	
  4336 ;; *************** function _fround *****************
  4337 ;; Defined at:
  4338 ;;		line 409 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\doprnt.c"
  4339 ;; Parameters:    Size  Location     Type
  4340 ;;  prec            1    wreg     unsigned char 
  4341 ;; Auto vars:     Size  Location     Type
  4342 ;;  prec            1   51[BANK0 ] unsigned char 
  4343 ;; Return value:  Size  Location     Type
  4344 ;;                  3   38[BANK0 ] unsigned char 
  4345 ;; Registers used:
  4346 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  4347 ;; Tracked objects:
  4348 ;;		On entry : 0/0
  4349 ;;		On exit  : 0/0
  4350 ;;		Unchanged: 0/0
  4351 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
  4352 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  4353 ;;      Locals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  4354 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  4355 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  4356 ;;Total ram usage:       14 bytes
  4357 ;; Hardware stack levels used:    1
  4358 ;; Hardware stack levels required when called:    5
  4359 ;; This function calls:
  4360 ;;		___awdiv
  4361 ;;		___awmod
  4362 ;;		___ftmul
  4363 ;;		___wmul
  4364 ;; This function is called by:
  4365 ;;		_sprintf
  4366 ;; This function uses a non-reentrant model
  4367 ;;
  4368                           
  4369                           
  4370                           ;psect for function _fround
  4371  0E9A                     _fround:	
  4372                           
  4373                           ;incstack = 0
  4374                           ; Regs used in _fround: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  4375                           ;fround@prec stored from wreg
  4376  0E9A  0140               	movlb	0	; select bank0
  4377  0E9B  00D3               	movwf	fround@prec
  4378                           
  4379                           ;doprnt.c: 413: if(prec>=110)
  4380  0E9C  306E               	movlw	110
  4381  0E9D  0253               	subwf	fround@prec,w
  4382  0E9E  1C03               	skipc
  4383  0E9F  2F5B               	goto	l2170
  4384                           
  4385                           ;doprnt.c: 414: return 0.5 * _npowers_[prec/100+18] * _npowers_[(prec%100)/10+9] * _npow
      +                          ers_[prec%10];
  4386  0EA0  300A               	movlw	10
  4387  0EA1  00A7               	movwf	___awdiv@divisor
  4388  0EA2  3000               	movlw	0
  4389  0EA3  00A8               	movwf	___awdiv@divisor+1
  4390  0EA4  0853               	movf	fround@prec,w
  4391  0EA5  00C9               	movwf	??_fround
  4392  0EA6  01CA               	clrf	??_fround+1
  4393  0EA7  0849               	movf	??_fround,w
  4394  0EA8  00A2               	movwf	___awmod@dividend
  4395  0EA9  084A               	movf	??_fround+1,w
  4396  0EAA  00A3               	movwf	___awmod@dividend+1
  4397  0EAB  3064               	movlw	100
  4398  0EAC  00A0               	movwf	___awmod@divisor
  4399  0EAD  3000               	movlw	0
  4400  0EAE  00A1               	movwf	___awmod@divisor+1
  4401  0EAF  3194  243A  318E   	fcall	___awmod
  4402  0EB2  0140               	movlb	0	; select bank0
  4403  0EB3  0821               	movf	?___awmod+1,w
  4404  0EB4  00AA               	movwf	___awdiv@dividend+1
  4405  0EB5  0820               	movf	?___awmod,w
  4406  0EB6  00A9               	movwf	___awdiv@dividend
  4407  0EB7  3194  2480  318E   	fcall	___awdiv
  4408  0EBA  0140               	movlb	0	; select bank0
  4409  0EBB  0827               	movf	?___awdiv,w
  4410  0EBC  3E09               	addlw	9
  4411  0EBD  00B0               	movwf	___wmul@multiplier
  4412  0EBE  3000               	movlw	0
  4413  0EBF  3D28               	addwfc	?___awdiv+1,w
  4414  0EC0  00B1               	movwf	___wmul@multiplier+1
  4415  0EC1  3003               	movlw	3
  4416  0EC2  00B2               	movwf	___wmul@multiplicand
  4417  0EC3  3000               	movlw	0
  4418  0EC4  00B3               	movwf	___wmul@multiplicand+1
  4419  0EC5  3192  228A  318E   	fcall	___wmul
  4420  0EC8  0140               	movlb	0	; select bank0
  4421  0EC9  0831               	movf	?___wmul+1,w
  4422  0ECA  0085               	movwf	5
  4423  0ECB  0830               	movf	?___wmul,w
  4424  0ECC  0084               	movwf	4
  4425  0ECD  3000               	movlw	low (__npowers_| (0+32768))
  4426  0ECE  0784               	addwf	4,f
  4427  0ECF  3098               	movlw	high (__npowers_| (0+32768))
  4428  0ED0  3D85               	addwfc	5,f
  4429  0ED1  3F00               	moviw [0]fsr0
  4430  0ED2  00B6               	movwf	___ftmul@f1
  4431  0ED3  3F01               	moviw [1]fsr0
  4432  0ED4  00B7               	movwf	___ftmul@f1+1
  4433  0ED5  3F02               	moviw [2]fsr0
  4434  0ED6  00B8               	movwf	___ftmul@f1+2
  4435  0ED7  3064               	movlw	100
  4436  0ED8  00A7               	movwf	___awdiv@divisor
  4437  0ED9  3000               	movlw	0
  4438  0EDA  00A8               	movwf	___awdiv@divisor+1
  4439  0EDB  0853               	movf	fround@prec,w
  4440  0EDC  00CB               	movwf	??_fround+2
  4441  0EDD  01CC               	clrf	??_fround+3
  4442  0EDE  084B               	movf	??_fround+2,w
  4443  0EDF  00A9               	movwf	___awdiv@dividend
  4444  0EE0  084C               	movf	??_fround+3,w
  4445  0EE1  00AA               	movwf	___awdiv@dividend+1
  4446  0EE2  3194  2480  318E   	fcall	___awdiv
  4447  0EE5  0140               	movlb	0	; select bank0
  4448  0EE6  0827               	movf	?___awdiv,w
  4449  0EE7  3E12               	addlw	18
  4450  0EE8  00B0               	movwf	___wmul@multiplier
  4451  0EE9  3000               	movlw	0
  4452  0EEA  3D28               	addwfc	?___awdiv+1,w
  4453  0EEB  00B1               	movwf	___wmul@multiplier+1
  4454  0EEC  3003               	movlw	3
  4455  0EED  00B2               	movwf	___wmul@multiplicand
  4456  0EEE  3000               	movlw	0
  4457  0EEF  00B3               	movwf	___wmul@multiplicand+1
  4458  0EF0  3192  228A  318E   	fcall	___wmul
  4459  0EF3  0140               	movlb	0	; select bank0
  4460  0EF4  0831               	movf	?___wmul+1,w
  4461  0EF5  0085               	movwf	5
  4462  0EF6  0830               	movf	?___wmul,w
  4463  0EF7  0084               	movwf	4
  4464  0EF8  3000               	movlw	low (__npowers_| (0+32768))
  4465  0EF9  0784               	addwf	4,f
  4466  0EFA  3098               	movlw	high (__npowers_| (0+32768))
  4467  0EFB  3D85               	addwfc	5,f
  4468  0EFC  3F00               	moviw [0]fsr0
  4469  0EFD  00B9               	movwf	___ftmul@f2
  4470  0EFE  3F01               	moviw [1]fsr0
  4471  0EFF  00BA               	movwf	___ftmul@f2+1
  4472  0F00  3F02               	moviw [2]fsr0
  4473  0F01  00BB               	movwf	___ftmul@f2+2
  4474  0F02  3189  21D1  318E   	fcall	___ftmul
  4475  0F05  0140               	movlb	0	; select bank0
  4476  0F06  0836               	movf	?___ftmul,w
  4477  0F07  00D0               	movwf	_fround$1004
  4478  0F08  0837               	movf	?___ftmul+1,w
  4479  0F09  00D1               	movwf	_fround$1004+1
  4480  0F0A  0838               	movf	?___ftmul+2,w
  4481  0F0B  00D2               	movwf	_fround$1004+2
  4482                           
  4483                           ;doprnt.c: 414: return 0.5 * _npowers_[prec/100+18] * _npowers_[(prec%100)/10+9] * _npow
      +                          ers_[prec%10];
  4484  0F0C  0853               	movf	fround@prec,w
  4485  0F0D  00C9               	movwf	??_fround
  4486  0F0E  01CA               	clrf	??_fround+1
  4487  0F0F  0849               	movf	??_fround,w
  4488  0F10  00A2               	movwf	___awmod@dividend
  4489  0F11  084A               	movf	??_fround+1,w
  4490  0F12  00A3               	movwf	___awmod@dividend+1
  4491  0F13  300A               	movlw	10
  4492  0F14  00A0               	movwf	___awmod@divisor
  4493  0F15  3000               	movlw	0
  4494  0F16  00A1               	movwf	___awmod@divisor+1
  4495  0F17  3194  243A  318E   	fcall	___awmod
  4496  0F1A  0140               	movlb	0	; select bank0
  4497  0F1B  0821               	movf	?___awmod+1,w
  4498  0F1C  00B1               	movwf	___wmul@multiplier+1
  4499  0F1D  0820               	movf	?___awmod,w
  4500  0F1E  00B0               	movwf	___wmul@multiplier
  4501  0F1F  3003               	movlw	3
  4502  0F20  00B2               	movwf	___wmul@multiplicand
  4503  0F21  3000               	movlw	0
  4504  0F22  00B3               	movwf	___wmul@multiplicand+1
  4505  0F23  3192  228A  318E   	fcall	___wmul
  4506  0F26  0140               	movlb	0	; select bank0
  4507  0F27  0831               	movf	?___wmul+1,w
  4508  0F28  0085               	movwf	5
  4509  0F29  0830               	movf	?___wmul,w
  4510  0F2A  0084               	movwf	4
  4511  0F2B  3000               	movlw	low (__npowers_| (0+32768))
  4512  0F2C  0784               	addwf	4,f
  4513  0F2D  3098               	movlw	high (__npowers_| (0+32768))
  4514  0F2E  3D85               	addwfc	5,f
  4515  0F2F  3F00               	moviw [0]fsr0
  4516  0F30  00B6               	movwf	___ftmul@f1
  4517  0F31  3F01               	moviw [1]fsr0
  4518  0F32  00B7               	movwf	___ftmul@f1+1
  4519  0F33  3F02               	moviw [2]fsr0
  4520  0F34  00B8               	movwf	___ftmul@f1+2
  4521  0F35  0850               	movf	_fround$1004,w
  4522  0F36  00B9               	movwf	___ftmul@f2
  4523  0F37  0851               	movf	_fround$1004+1,w
  4524  0F38  00BA               	movwf	___ftmul@f2+1
  4525  0F39  0852               	movf	_fround$1004+2,w
  4526  0F3A  00BB               	movwf	___ftmul@f2+2
  4527  0F3B  3189  21D1  318E   	fcall	___ftmul
  4528  0F3E  0140               	movlb	0	; select bank0
  4529  0F3F  0836               	movf	?___ftmul,w
  4530  0F40  00CD               	movwf	_fround$1005
  4531  0F41  0837               	movf	?___ftmul+1,w
  4532  0F42  00CE               	movwf	_fround$1005+1
  4533  0F43  0838               	movf	?___ftmul+2,w
  4534  0F44  00CF               	movwf	_fround$1005+2
  4535                           
  4536                           ;doprnt.c: 414: return 0.5 * _npowers_[prec/100+18] * _npowers_[(prec%100)/10+9] * _npow
      +                          ers_[prec%10];
  4537  0F45  3000               	movlw	0
  4538  0F46  00B6               	movwf	___ftmul@f1
  4539  0F47  3000               	movlw	0
  4540  0F48  00B7               	movwf	___ftmul@f1+1
  4541  0F49  303F               	movlw	63
  4542  0F4A  00B8               	movwf	___ftmul@f1+2
  4543  0F4B  084D               	movf	_fround$1005,w
  4544  0F4C  00B9               	movwf	___ftmul@f2
  4545  0F4D  084E               	movf	_fround$1005+1,w
  4546  0F4E  00BA               	movwf	___ftmul@f2+1
  4547  0F4F  084F               	movf	_fround$1005+2,w
  4548  0F50  00BB               	movwf	___ftmul@f2+2
  4549  0F51  3189  21D1         	fcall	___ftmul
  4550  0F53  0140               	movlb	0	; select bank0
  4551  0F54  0836               	movf	?___ftmul,w
  4552  0F55  00C6               	movwf	?_fround
  4553  0F56  0837               	movf	?___ftmul+1,w
  4554  0F57  00C7               	movwf	?_fround+1
  4555  0F58  0838               	movf	?___ftmul+2,w
  4556  0F59  00C8               	movwf	?_fround+2
  4557  0F5A  0008               	return
  4558  0F5B                     l2170:	
  4559                           
  4560                           ;doprnt.c: 415: else if(prec > 10)
  4561  0F5B  300B               	movlw	11
  4562  0F5C  0253               	subwf	fround@prec,w
  4563  0F5D  1C03               	skipc
  4564  0F5E  2FD3               	goto	l2178
  4565                           
  4566                           ;doprnt.c: 416: return 0.5 * _npowers_[prec/10+9] * _npowers_[prec%10];
  4567  0F5F  0853               	movf	fround@prec,w
  4568  0F60  00C9               	movwf	??_fround
  4569  0F61  01CA               	clrf	??_fround+1
  4570  0F62  0849               	movf	??_fround,w
  4571  0F63  00A2               	movwf	___awmod@dividend
  4572  0F64  084A               	movf	??_fround+1,w
  4573  0F65  00A3               	movwf	___awmod@dividend+1
  4574  0F66  300A               	movlw	10
  4575  0F67  00A0               	movwf	___awmod@divisor
  4576  0F68  3000               	movlw	0
  4577  0F69  00A1               	movwf	___awmod@divisor+1
  4578  0F6A  3194  243A  318E   	fcall	___awmod
  4579  0F6D  0140               	movlb	0	; select bank0
  4580  0F6E  0821               	movf	?___awmod+1,w
  4581  0F6F  00B1               	movwf	___wmul@multiplier+1
  4582  0F70  0820               	movf	?___awmod,w
  4583  0F71  00B0               	movwf	___wmul@multiplier
  4584  0F72  3003               	movlw	3
  4585  0F73  00B2               	movwf	___wmul@multiplicand
  4586  0F74  3000               	movlw	0
  4587  0F75  00B3               	movwf	___wmul@multiplicand+1
  4588  0F76  3192  228A  318E   	fcall	___wmul
  4589  0F79  0140               	movlb	0	; select bank0
  4590  0F7A  0831               	movf	?___wmul+1,w
  4591  0F7B  0085               	movwf	5
  4592  0F7C  0830               	movf	?___wmul,w
  4593  0F7D  0084               	movwf	4
  4594  0F7E  3000               	movlw	low (__npowers_| (0+32768))
  4595  0F7F  0784               	addwf	4,f
  4596  0F80  3098               	movlw	high (__npowers_| (0+32768))
  4597  0F81  3D85               	addwfc	5,f
  4598  0F82  3F00               	moviw [0]fsr0
  4599  0F83  00B6               	movwf	___ftmul@f1
  4600  0F84  3F01               	moviw [1]fsr0
  4601  0F85  00B7               	movwf	___ftmul@f1+1
  4602  0F86  3F02               	moviw [2]fsr0
  4603  0F87  00B8               	movwf	___ftmul@f1+2
  4604  0F88  300A               	movlw	10
  4605  0F89  00A7               	movwf	___awdiv@divisor
  4606  0F8A  3000               	movlw	0
  4607  0F8B  00A8               	movwf	___awdiv@divisor+1
  4608  0F8C  0853               	movf	fround@prec,w
  4609  0F8D  00CB               	movwf	??_fround+2
  4610  0F8E  01CC               	clrf	??_fround+3
  4611  0F8F  084B               	movf	??_fround+2,w
  4612  0F90  00A9               	movwf	___awdiv@dividend
  4613  0F91  084C               	movf	??_fround+3,w
  4614  0F92  00AA               	movwf	___awdiv@dividend+1
  4615  0F93  3194  2480  318E   	fcall	___awdiv
  4616  0F96  0140               	movlb	0	; select bank0
  4617  0F97  0827               	movf	?___awdiv,w
  4618  0F98  3E09               	addlw	9
  4619  0F99  00B0               	movwf	___wmul@multiplier
  4620  0F9A  3000               	movlw	0
  4621  0F9B  3D28               	addwfc	?___awdiv+1,w
  4622  0F9C  00B1               	movwf	___wmul@multiplier+1
  4623  0F9D  3003               	movlw	3
  4624  0F9E  00B2               	movwf	___wmul@multiplicand
  4625  0F9F  3000               	movlw	0
  4626  0FA0  00B3               	movwf	___wmul@multiplicand+1
  4627  0FA1  3192  228A  318E   	fcall	___wmul
  4628  0FA4  0140               	movlb	0	; select bank0
  4629  0FA5  0831               	movf	?___wmul+1,w
  4630  0FA6  0085               	movwf	5
  4631  0FA7  0830               	movf	?___wmul,w
  4632  0FA8  0084               	movwf	4
  4633  0FA9  3000               	movlw	low (__npowers_| (0+32768))
  4634  0FAA  0784               	addwf	4,f
  4635  0FAB  3098               	movlw	high (__npowers_| (0+32768))
  4636  0FAC  3D85               	addwfc	5,f
  4637  0FAD  3F00               	moviw [0]fsr0
  4638  0FAE  00B9               	movwf	___ftmul@f2
  4639  0FAF  3F01               	moviw [1]fsr0
  4640  0FB0  00BA               	movwf	___ftmul@f2+1
  4641  0FB1  3F02               	moviw [2]fsr0
  4642  0FB2  00BB               	movwf	___ftmul@f2+2
  4643  0FB3  3189  21D1  318E   	fcall	___ftmul
  4644  0FB6  0140               	movlb	0	; select bank0
  4645  0FB7  0836               	movf	?___ftmul,w
  4646  0FB8  00D0               	movwf	_fround$1004
  4647  0FB9  0837               	movf	?___ftmul+1,w
  4648  0FBA  00D1               	movwf	_fround$1004+1
  4649  0FBB  0838               	movf	?___ftmul+2,w
  4650  0FBC  00D2               	movwf	_fround$1004+2
  4651                           
  4652                           ;doprnt.c: 416: return 0.5 * _npowers_[prec/10+9] * _npowers_[prec%10];
  4653  0FBD  3000               	movlw	0
  4654  0FBE  00B6               	movwf	___ftmul@f1
  4655  0FBF  3000               	movlw	0
  4656  0FC0  00B7               	movwf	___ftmul@f1+1
  4657  0FC1  303F               	movlw	63
  4658  0FC2  00B8               	movwf	___ftmul@f1+2
  4659  0FC3  0850               	movf	_fround$1004,w
  4660  0FC4  00B9               	movwf	___ftmul@f2
  4661  0FC5  0851               	movf	_fround$1004+1,w
  4662  0FC6  00BA               	movwf	___ftmul@f2+1
  4663  0FC7  0852               	movf	_fround$1004+2,w
  4664  0FC8  00BB               	movwf	___ftmul@f2+2
  4665  0FC9  3189  21D1         	fcall	___ftmul
  4666  0FCB  0140               	movlb	0	; select bank0
  4667  0FCC  0836               	movf	?___ftmul,w
  4668  0FCD  00C6               	movwf	?_fround
  4669  0FCE  0837               	movf	?___ftmul+1,w
  4670  0FCF  00C7               	movwf	?_fround+1
  4671  0FD0  0838               	movf	?___ftmul+2,w
  4672  0FD1  00C8               	movwf	?_fround+2
  4673  0FD2  0008               	return
  4674  0FD3                     l2178:	
  4675                           
  4676                           ;doprnt.c: 417: return 0.5 * _npowers_[prec];
  4677  0FD3  3000               	movlw	0
  4678  0FD4  00B6               	movwf	___ftmul@f1
  4679  0FD5  3000               	movlw	0
  4680  0FD6  00B7               	movwf	___ftmul@f1+1
  4681  0FD7  303F               	movlw	63
  4682  0FD8  00B8               	movwf	___ftmul@f1+2
  4683  0FD9  0853               	movf	fround@prec,w
  4684  0FDA  00C9               	movwf	??_fround
  4685  0FDB  01CA               	clrf	??_fround+1
  4686  0FDC  0849               	movf	??_fround,w
  4687  0FDD  00B0               	movwf	___wmul@multiplier
  4688  0FDE  084A               	movf	??_fround+1,w
  4689  0FDF  00B1               	movwf	___wmul@multiplier+1
  4690  0FE0  3003               	movlw	3
  4691  0FE1  00B2               	movwf	___wmul@multiplicand
  4692  0FE2  3000               	movlw	0
  4693  0FE3  00B3               	movwf	___wmul@multiplicand+1
  4694  0FE4  3192  228A  318E   	fcall	___wmul
  4695  0FE7  0140               	movlb	0	; select bank0
  4696  0FE8  0831               	movf	?___wmul+1,w
  4697  0FE9  0085               	movwf	5
  4698  0FEA  0830               	movf	?___wmul,w
  4699  0FEB  0084               	movwf	4
  4700  0FEC  3000               	movlw	low (__npowers_| (0+32768))
  4701  0FED  0784               	addwf	4,f
  4702  0FEE  3098               	movlw	high (__npowers_| (0+32768))
  4703  0FEF  3D85               	addwfc	5,f
  4704  0FF0  3F00               	moviw [0]fsr0
  4705  0FF1  00B9               	movwf	___ftmul@f2
  4706  0FF2  3F01               	moviw [1]fsr0
  4707  0FF3  00BA               	movwf	___ftmul@f2+1
  4708  0FF4  3F02               	moviw [2]fsr0
  4709  0FF5  00BB               	movwf	___ftmul@f2+2
  4710  0FF6  3189  21D1         	fcall	___ftmul
  4711  0FF8  0140               	movlb	0	; select bank0
  4712  0FF9  0836               	movf	?___ftmul,w
  4713  0FFA  00C6               	movwf	?_fround
  4714  0FFB  0837               	movf	?___ftmul+1,w
  4715  0FFC  00C7               	movwf	?_fround+1
  4716  0FFD  0838               	movf	?___ftmul+2,w
  4717  0FFE  00C8               	movwf	?_fround+2
  4718  0FFF  0008               	return
  4719  1000                     __end_of_fround:	
  4720                           
  4721                           	psect	text5
  4722  128A                     __ptext5:	
  4723 ;; *************** function ___wmul *****************
  4724 ;; Defined at:
  4725 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\Umul16.c"
  4726 ;; Parameters:    Size  Location     Type
  4727 ;;  multiplier      2   16[BANK0 ] unsigned int 
  4728 ;;  multiplicand    2   18[BANK0 ] unsigned int 
  4729 ;; Auto vars:     Size  Location     Type
  4730 ;;  product         2   20[BANK0 ] unsigned int 
  4731 ;; Return value:  Size  Location     Type
  4732 ;;                  2   16[BANK0 ] unsigned int 
  4733 ;; Registers used:
  4734 ;;		wreg, status,2, status,0
  4735 ;; Tracked objects:
  4736 ;;		On entry : 0/0
  4737 ;;		On exit  : 0/0
  4738 ;;		Unchanged: 0/0
  4739 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
  4740 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  4741 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  4742 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  4743 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  4744 ;;Total ram usage:        6 bytes
  4745 ;; Hardware stack levels used:    1
  4746 ;; Hardware stack levels required when called:    3
  4747 ;; This function calls:
  4748 ;;		Nothing
  4749 ;; This function is called by:
  4750 ;;		_fround
  4751 ;;		_scale
  4752 ;;		_sprintf
  4753 ;; This function uses a non-reentrant model
  4754 ;;
  4755                           
  4756                           
  4757                           ;psect for function ___wmul
  4758  128A                     ___wmul:	
  4759                           
  4760                           ;incstack = 0
  4761                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  4762  128A  0140               	movlb	0	; select bank0
  4763  128B  01B4               	clrf	___wmul@product
  4764  128C  01B5               	clrf	___wmul@product+1
  4765  128D                     l1900:	
  4766  128D  1C30               	btfss	___wmul@multiplier,0
  4767  128E  2A93               	goto	l301
  4768  128F  0832               	movf	___wmul@multiplicand,w
  4769  1290  07B4               	addwf	___wmul@product,f
  4770  1291  0833               	movf	___wmul@multiplicand+1,w
  4771  1292  3DB5               	addwfc	___wmul@product+1,f
  4772  1293                     l301:	
  4773  1293  3001               	movlw	1
  4774  1294                     u2265:	
  4775  1294  35B2               	lslf	___wmul@multiplicand,f
  4776  1295  0DB3               	rlf	___wmul@multiplicand+1,f
  4777  1296  0B89               	decfsz	9,f
  4778  1297  2A94               	goto	u2265
  4779  1298  3001               	movlw	1
  4780  1299                     u2275:	
  4781  1299  36B1               	lsrf	___wmul@multiplier+1,f
  4782  129A  0CB0               	rrf	___wmul@multiplier,f
  4783  129B  0B89               	decfsz	9,f
  4784  129C  2A99               	goto	u2275
  4785  129D  0830               	movf	___wmul@multiplier,w
  4786  129E  0431               	iorwf	___wmul@multiplier+1,w
  4787  129F  1D03               	btfss	3,2
  4788  12A0  2A8D               	goto	l1900
  4789  12A1  0835               	movf	___wmul@product+1,w
  4790  12A2  00B1               	movwf	?___wmul+1
  4791  12A3  0834               	movf	___wmul@product,w
  4792  12A4  00B0               	movwf	?___wmul
  4793  12A5  0008               	return
  4794  12A6                     __end_of___wmul:	
  4795                           
  4796                           	psect	text6
  4797  09D1                     __ptext6:	
  4798 ;; *************** function ___ftmul *****************
  4799 ;; Defined at:
  4800 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\ftmul.c"
  4801 ;; Parameters:    Size  Location     Type
  4802 ;;  f1              3   22[BANK0 ] float 
  4803 ;;  f2              3   25[BANK0 ] float 
  4804 ;; Auto vars:     Size  Location     Type
  4805 ;;  f3_as_produc    3   33[BANK0 ] unsigned um
  4806 ;;  sign            1   37[BANK0 ] unsigned char 
  4807 ;;  cntr            1   36[BANK0 ] unsigned char 
  4808 ;;  exp             1   32[BANK0 ] unsigned char 
  4809 ;; Return value:  Size  Location     Type
  4810 ;;                  3   22[BANK0 ] float 
  4811 ;; Registers used:
  4812 ;;		wreg, status,2, status,0, pclath, cstack
  4813 ;; Tracked objects:
  4814 ;;		On entry : 0/0
  4815 ;;		On exit  : 0/0
  4816 ;;		Unchanged: 0/0
  4817 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
  4818 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  4819 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  4820 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  4821 ;;      Totals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  4822 ;;Total ram usage:       16 bytes
  4823 ;; Hardware stack levels used:    1
  4824 ;; Hardware stack levels required when called:    4
  4825 ;; This function calls:
  4826 ;;		___ftpack
  4827 ;; This function is called by:
  4828 ;;		_main
  4829 ;;		_fround
  4830 ;;		_scale
  4831 ;;		_sprintf
  4832 ;; This function uses a non-reentrant model
  4833 ;;
  4834                           
  4835                           
  4836                           ;psect for function ___ftmul
  4837  09D1                     ___ftmul:	
  4838                           
  4839                           ;incstack = 0
  4840                           ; Regs used in ___ftmul: [wreg+status,2+status,0+pclath+cstack]
  4841  09D1  0140               	movlb	0	; select bank0
  4842  09D2  0836               	movf	___ftmul@f1,w
  4843  09D3  00BC               	movwf	??___ftmul
  4844  09D4  0837               	movf	___ftmul@f1+1,w
  4845  09D5  00BD               	movwf	??___ftmul+1
  4846  09D6  0838               	movf	___ftmul@f1+2,w
  4847  09D7  00BE               	movwf	??___ftmul+2
  4848  09D8  1003               	clrc
  4849  09D9  0D3D               	rlf	??___ftmul+1,w
  4850  09DA  0D3E               	rlf	??___ftmul+2,w
  4851  09DB  00BF               	movwf	??___ftmul+3
  4852  09DC  083F               	movf	??___ftmul+3,w
  4853  09DD  00C0               	movwf	___ftmul@exp
  4854  09DE  0840               	movf	___ftmul@exp,w
  4855  09DF  1D03               	btfss	3,2
  4856  09E0  29E8               	goto	l2070
  4857  09E1  3000               	movlw	0
  4858  09E2  00B6               	movwf	?___ftmul
  4859  09E3  3000               	movlw	0
  4860  09E4  00B7               	movwf	?___ftmul+1
  4861  09E5  3000               	movlw	0
  4862  09E6  00B8               	movwf	?___ftmul+2
  4863  09E7  0008               	return
  4864  09E8                     l2070:	
  4865  09E8  0839               	movf	___ftmul@f2,w
  4866  09E9  00BC               	movwf	??___ftmul
  4867  09EA  083A               	movf	___ftmul@f2+1,w
  4868  09EB  00BD               	movwf	??___ftmul+1
  4869  09EC  083B               	movf	___ftmul@f2+2,w
  4870  09ED  00BE               	movwf	??___ftmul+2
  4871  09EE  1003               	clrc
  4872  09EF  0D3D               	rlf	??___ftmul+1,w
  4873  09F0  0D3E               	rlf	??___ftmul+2,w
  4874  09F1  00BF               	movwf	??___ftmul+3
  4875  09F2  083F               	movf	??___ftmul+3,w
  4876  09F3  00C5               	movwf	___ftmul@sign
  4877  09F4  0845               	movf	___ftmul@sign,w
  4878  09F5  1D03               	btfss	3,2
  4879  09F6  29FE               	goto	l2076
  4880  09F7  3000               	movlw	0
  4881  09F8  00B6               	movwf	?___ftmul
  4882  09F9  3000               	movlw	0
  4883  09FA  00B7               	movwf	?___ftmul+1
  4884  09FB  3000               	movlw	0
  4885  09FC  00B8               	movwf	?___ftmul+2
  4886  09FD  0008               	return
  4887  09FE                     l2076:	
  4888  09FE  0845               	movf	___ftmul@sign,w
  4889  09FF  3E7B               	addlw	123
  4890  0A00  00BC               	movwf	??___ftmul
  4891  0A01  083C               	movf	??___ftmul,w
  4892  0A02  07C0               	addwf	___ftmul@exp,f
  4893  0A03  0836               	movf	___ftmul@f1,w
  4894  0A04  00BC               	movwf	??___ftmul
  4895  0A05  0837               	movf	___ftmul@f1+1,w
  4896  0A06  00BD               	movwf	??___ftmul+1
  4897  0A07  0838               	movf	___ftmul@f1+2,w
  4898  0A08  00BE               	movwf	??___ftmul+2
  4899  0A09  3010               	movlw	16
  4900  0A0A                     u2735:	
  4901  0A0A  36BE               	lsrf	??___ftmul+2,f
  4902  0A0B  0CBD               	rrf	??___ftmul+1,f
  4903  0A0C  0CBC               	rrf	??___ftmul,f
  4904  0A0D  0B89               	decfsz	9,f
  4905  0A0E  2A0A               	goto	u2735
  4906  0A0F  083C               	movf	??___ftmul,w
  4907  0A10  00BF               	movwf	??___ftmul+3
  4908  0A11  083F               	movf	??___ftmul+3,w
  4909  0A12  00C5               	movwf	___ftmul@sign
  4910  0A13  0839               	movf	___ftmul@f2,w
  4911  0A14  00BC               	movwf	??___ftmul
  4912  0A15  083A               	movf	___ftmul@f2+1,w
  4913  0A16  00BD               	movwf	??___ftmul+1
  4914  0A17  083B               	movf	___ftmul@f2+2,w
  4915  0A18  00BE               	movwf	??___ftmul+2
  4916  0A19  3010               	movlw	16
  4917  0A1A                     u2745:	
  4918  0A1A  36BE               	lsrf	??___ftmul+2,f
  4919  0A1B  0CBD               	rrf	??___ftmul+1,f
  4920  0A1C  0CBC               	rrf	??___ftmul,f
  4921  0A1D  0B89               	decfsz	9,f
  4922  0A1E  2A1A               	goto	u2745
  4923  0A1F  083C               	movf	??___ftmul,w
  4924  0A20  00BF               	movwf	??___ftmul+3
  4925  0A21  083F               	movf	??___ftmul+3,w
  4926  0A22  06C5               	xorwf	___ftmul@sign,f
  4927  0A23  3080               	movlw	128
  4928  0A24  00BC               	movwf	??___ftmul
  4929  0A25  083C               	movf	??___ftmul,w
  4930  0A26  05C5               	andwf	___ftmul@sign,f
  4931  0A27  17B7               	bsf	___ftmul@f1+1,7
  4932  0A28  17BA               	bsf	___ftmul@f2+1,7
  4933  0A29  30FF               	movlw	255
  4934  0A2A  05B9               	andwf	___ftmul@f2,f
  4935  0A2B  30FF               	movlw	255
  4936  0A2C  05BA               	andwf	___ftmul@f2+1,f
  4937  0A2D  3000               	movlw	0
  4938  0A2E  05BB               	andwf	___ftmul@f2+2,f
  4939  0A2F  3000               	movlw	0
  4940  0A30  00C1               	movwf	___ftmul@f3_as_product
  4941  0A31  3000               	movlw	0
  4942  0A32  00C2               	movwf	___ftmul@f3_as_product+1
  4943  0A33  3000               	movlw	0
  4944  0A34  00C3               	movwf	___ftmul@f3_as_product+2
  4945  0A35  3007               	movlw	7
  4946  0A36  00BC               	movwf	??___ftmul
  4947  0A37  083C               	movf	??___ftmul,w
  4948  0A38  00C4               	movwf	___ftmul@cntr
  4949  0A39                     l2088:	
  4950  0A39  1C36               	btfss	___ftmul@f1,0
  4951  0A3A  2A41               	goto	l2092
  4952  0A3B  0839               	movf	___ftmul@f2,w
  4953  0A3C  07C1               	addwf	___ftmul@f3_as_product,f
  4954  0A3D  083A               	movf	___ftmul@f2+1,w
  4955  0A3E  3DC2               	addwfc	___ftmul@f3_as_product+1,f
  4956  0A3F  083B               	movf	___ftmul@f2+2,w
  4957  0A40  3DC3               	addwfc	___ftmul@f3_as_product+2,f
  4958  0A41                     l2092:	
  4959  0A41  3001               	movlw	1
  4960  0A42                     u2765:	
  4961  0A42  36B8               	lsrf	___ftmul@f1+2,f
  4962  0A43  0CB7               	rrf	___ftmul@f1+1,f
  4963  0A44  0CB6               	rrf	___ftmul@f1,f
  4964  0A45  0B89               	decfsz	9,f
  4965  0A46  2A42               	goto	u2765
  4966  0A47  3001               	movlw	1
  4967  0A48                     u2775:	
  4968  0A48  35B9               	lslf	___ftmul@f2,f
  4969  0A49  0DBA               	rlf	___ftmul@f2+1,f
  4970  0A4A  0DBB               	rlf	___ftmul@f2+2,f
  4971  0A4B  0B89               	decfsz	9,f
  4972  0A4C  2A48               	goto	u2775
  4973  0A4D  3001               	movlw	1
  4974  0A4E  02C4               	subwf	___ftmul@cntr,f
  4975  0A4F  1D03               	btfss	3,2
  4976  0A50  2A39               	goto	l2088
  4977  0A51  3009               	movlw	9
  4978  0A52  00BC               	movwf	??___ftmul
  4979  0A53  083C               	movf	??___ftmul,w
  4980  0A54  00C4               	movwf	___ftmul@cntr
  4981  0A55                     l2100:	
  4982  0A55  1C36               	btfss	___ftmul@f1,0
  4983  0A56  2A5D               	goto	l2104
  4984  0A57  0839               	movf	___ftmul@f2,w
  4985  0A58  07C1               	addwf	___ftmul@f3_as_product,f
  4986  0A59  083A               	movf	___ftmul@f2+1,w
  4987  0A5A  3DC2               	addwfc	___ftmul@f3_as_product+1,f
  4988  0A5B  083B               	movf	___ftmul@f2+2,w
  4989  0A5C  3DC3               	addwfc	___ftmul@f3_as_product+2,f
  4990  0A5D                     l2104:	
  4991  0A5D  3001               	movlw	1
  4992  0A5E                     u2805:	
  4993  0A5E  36B8               	lsrf	___ftmul@f1+2,f
  4994  0A5F  0CB7               	rrf	___ftmul@f1+1,f
  4995  0A60  0CB6               	rrf	___ftmul@f1,f
  4996  0A61  0B89               	decfsz	9,f
  4997  0A62  2A5E               	goto	u2805
  4998  0A63  3001               	movlw	1
  4999  0A64                     u2815:	
  5000  0A64  36C3               	lsrf	___ftmul@f3_as_product+2,f
  5001  0A65  0CC2               	rrf	___ftmul@f3_as_product+1,f
  5002  0A66  0CC1               	rrf	___ftmul@f3_as_product,f
  5003  0A67  0B89               	decfsz	9,f
  5004  0A68  2A64               	goto	u2815
  5005  0A69  3001               	movlw	1
  5006  0A6A  02C4               	subwf	___ftmul@cntr,f
  5007  0A6B  1D03               	btfss	3,2
  5008  0A6C  2A55               	goto	l2100
  5009  0A6D  0841               	movf	___ftmul@f3_as_product,w
  5010  0A6E  00A0               	movwf	___ftpack@arg
  5011  0A6F  0842               	movf	___ftmul@f3_as_product+1,w
  5012  0A70  00A1               	movwf	___ftpack@arg+1
  5013  0A71  0843               	movf	___ftmul@f3_as_product+2,w
  5014  0A72  00A2               	movwf	___ftpack@arg+2
  5015  0A73  0840               	movf	___ftmul@exp,w
  5016  0A74  00BC               	movwf	??___ftmul
  5017  0A75  083C               	movf	??___ftmul,w
  5018  0A76  00A3               	movwf	___ftpack@exp
  5019  0A77  0845               	movf	___ftmul@sign,w
  5020  0A78  00BD               	movwf	??___ftmul+1
  5021  0A79  083D               	movf	??___ftmul+1,w
  5022  0A7A  00A4               	movwf	___ftpack@sign
  5023  0A7B  3188  2016         	fcall	___ftpack
  5024  0A7D  0140               	movlb	0	; select bank0
  5025  0A7E  0820               	movf	?___ftpack,w
  5026  0A7F  00B6               	movwf	?___ftmul
  5027  0A80  0821               	movf	?___ftpack+1,w
  5028  0A81  00B7               	movwf	?___ftmul+1
  5029  0A82  0822               	movf	?___ftpack+2,w
  5030  0A83  00B8               	movwf	?___ftmul+2
  5031  0A84  0008               	return
  5032  0A85                     __end_of___ftmul:	
  5033                           
  5034                           	psect	text7
  5035  143A                     __ptext7:	
  5036 ;; *************** function ___awmod *****************
  5037 ;; Defined at:
  5038 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\awmod.c"
  5039 ;; Parameters:    Size  Location     Type
  5040 ;;  divisor         2    0[BANK0 ] int 
  5041 ;;  dividend        2    2[BANK0 ] int 
  5042 ;; Auto vars:     Size  Location     Type
  5043 ;;  sign            1    6[BANK0 ] unsigned char 
  5044 ;;  counter         1    5[BANK0 ] unsigned char 
  5045 ;; Return value:  Size  Location     Type
  5046 ;;                  2    0[BANK0 ] int 
  5047 ;; Registers used:
  5048 ;;		wreg, status,2, status,0
  5049 ;; Tracked objects:
  5050 ;;		On entry : 0/0
  5051 ;;		On exit  : 0/0
  5052 ;;		Unchanged: 0/0
  5053 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
  5054 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  5055 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  5056 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  5057 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  5058 ;;Total ram usage:        7 bytes
  5059 ;; Hardware stack levels used:    1
  5060 ;; Hardware stack levels required when called:    3
  5061 ;; This function calls:
  5062 ;;		Nothing
  5063 ;; This function is called by:
  5064 ;;		_fround
  5065 ;;		_scale
  5066 ;; This function uses a non-reentrant model
  5067 ;;
  5068                           
  5069                           
  5070                           ;psect for function ___awmod
  5071  143A                     ___awmod:	
  5072                           
  5073                           ;incstack = 0
  5074                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  5075  143A  0140               	movlb	0	; select bank0
  5076  143B  01A6               	clrf	___awmod@sign
  5077  143C  1FA3               	btfss	___awmod@dividend+1,7
  5078  143D  2C45               	goto	l1964
  5079  143E  09A2               	comf	___awmod@dividend,f
  5080  143F  09A3               	comf	___awmod@dividend+1,f
  5081  1440  0AA2               	incf	___awmod@dividend,f
  5082  1441  1903               	skipnz
  5083  1442  0AA3               	incf	___awmod@dividend+1,f
  5084  1443  01A6               	clrf	___awmod@sign
  5085  1444  0AA6               	incf	___awmod@sign,f
  5086  1445                     l1964:	
  5087  1445  1FA1               	btfss	___awmod@divisor+1,7
  5088  1446  2C4C               	goto	l1968
  5089  1447  09A0               	comf	___awmod@divisor,f
  5090  1448  09A1               	comf	___awmod@divisor+1,f
  5091  1449  0AA0               	incf	___awmod@divisor,f
  5092  144A  1903               	skipnz
  5093  144B  0AA1               	incf	___awmod@divisor+1,f
  5094  144C                     l1968:	
  5095  144C  0820               	movf	___awmod@divisor,w
  5096  144D  0421               	iorwf	___awmod@divisor+1,w
  5097  144E  1903               	btfsc	3,2
  5098  144F  2C73               	goto	l1986
  5099  1450  01A5               	clrf	___awmod@counter
  5100  1451  0AA5               	incf	___awmod@counter,f
  5101  1452                     l1976:	
  5102  1452  1BA1               	btfsc	___awmod@divisor+1,7
  5103  1453  2C5E               	goto	l1978
  5104  1454  3001               	movlw	1
  5105  1455                     u2425:	
  5106  1455  35A0               	lslf	___awmod@divisor,f
  5107  1456  0DA1               	rlf	___awmod@divisor+1,f
  5108  1457  0B89               	decfsz	9,f
  5109  1458  2C55               	goto	u2425
  5110  1459  3001               	movlw	1
  5111  145A  00A4               	movwf	??___awmod
  5112  145B  0824               	movf	??___awmod,w
  5113  145C  07A5               	addwf	___awmod@counter,f
  5114  145D  2C52               	goto	l1976
  5115  145E                     l1978:	
  5116  145E  0821               	movf	___awmod@divisor+1,w
  5117  145F  0223               	subwf	___awmod@dividend+1,w
  5118  1460  1D03               	skipz
  5119  1461  2C64               	goto	u2445
  5120  1462  0820               	movf	___awmod@divisor,w
  5121  1463  0222               	subwf	___awmod@dividend,w
  5122  1464                     u2445:	
  5123  1464  1C03               	skipc
  5124  1465  2C6A               	goto	l1982
  5125  1466  0820               	movf	___awmod@divisor,w
  5126  1467  02A2               	subwf	___awmod@dividend,f
  5127  1468  0821               	movf	___awmod@divisor+1,w
  5128  1469  3BA3               	subwfb	___awmod@dividend+1,f
  5129  146A                     l1982:	
  5130  146A  3001               	movlw	1
  5131  146B                     u2455:	
  5132  146B  36A1               	lsrf	___awmod@divisor+1,f
  5133  146C  0CA0               	rrf	___awmod@divisor,f
  5134  146D  0B89               	decfsz	9,f
  5135  146E  2C6B               	goto	u2455
  5136  146F  3001               	movlw	1
  5137  1470  02A5               	subwf	___awmod@counter,f
  5138  1471  1D03               	btfss	3,2
  5139  1472  2C5E               	goto	l1978
  5140  1473                     l1986:	
  5141  1473  0826               	movf	___awmod@sign,w
  5142  1474  1903               	btfsc	3,2
  5143  1475  2C7B               	goto	l1990
  5144  1476  09A2               	comf	___awmod@dividend,f
  5145  1477  09A3               	comf	___awmod@dividend+1,f
  5146  1478  0AA2               	incf	___awmod@dividend,f
  5147  1479  1903               	skipnz
  5148  147A  0AA3               	incf	___awmod@dividend+1,f
  5149  147B                     l1990:	
  5150  147B  0823               	movf	___awmod@dividend+1,w
  5151  147C  00A1               	movwf	?___awmod+1
  5152  147D  0822               	movf	___awmod@dividend,w
  5153  147E  00A0               	movwf	?___awmod
  5154  147F  0008               	return
  5155  1480                     __end_of___awmod:	
  5156                           
  5157                           	psect	text8
  5158  1480                     __ptext8:	
  5159 ;; *************** function ___awdiv *****************
  5160 ;; Defined at:
  5161 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\awdiv.c"
  5162 ;; Parameters:    Size  Location     Type
  5163 ;;  divisor         2    7[BANK0 ] int 
  5164 ;;  dividend        2    9[BANK0 ] int 
  5165 ;; Auto vars:     Size  Location     Type
  5166 ;;  quotient        2   14[BANK0 ] int 
  5167 ;;  sign            1   13[BANK0 ] unsigned char 
  5168 ;;  counter         1   12[BANK0 ] unsigned char 
  5169 ;; Return value:  Size  Location     Type
  5170 ;;                  2    7[BANK0 ] int 
  5171 ;; Registers used:
  5172 ;;		wreg, status,2, status,0
  5173 ;; Tracked objects:
  5174 ;;		On entry : 0/0
  5175 ;;		On exit  : 0/0
  5176 ;;		Unchanged: 0/0
  5177 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
  5178 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  5179 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  5180 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  5181 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  5182 ;;Total ram usage:        9 bytes
  5183 ;; Hardware stack levels used:    1
  5184 ;; Hardware stack levels required when called:    3
  5185 ;; This function calls:
  5186 ;;		Nothing
  5187 ;; This function is called by:
  5188 ;;		_fround
  5189 ;;		_scale
  5190 ;;		_sprintf
  5191 ;; This function uses a non-reentrant model
  5192 ;;
  5193                           
  5194                           
  5195                           ;psect for function ___awdiv
  5196  1480                     ___awdiv:	
  5197                           
  5198                           ;incstack = 0
  5199                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  5200  1480  0140               	movlb	0	; select bank0
  5201  1481  01AD               	clrf	___awdiv@sign
  5202  1482  1FA8               	btfss	___awdiv@divisor+1,7
  5203  1483  2C8B               	goto	l1920
  5204  1484  09A7               	comf	___awdiv@divisor,f
  5205  1485  09A8               	comf	___awdiv@divisor+1,f
  5206  1486  0AA7               	incf	___awdiv@divisor,f
  5207  1487  1903               	skipnz
  5208  1488  0AA8               	incf	___awdiv@divisor+1,f
  5209  1489  01AD               	clrf	___awdiv@sign
  5210  148A  0AAD               	incf	___awdiv@sign,f
  5211  148B                     l1920:	
  5212  148B  1FAA               	btfss	___awdiv@dividend+1,7
  5213  148C  2C96               	goto	l1926
  5214  148D  09A9               	comf	___awdiv@dividend,f
  5215  148E  09AA               	comf	___awdiv@dividend+1,f
  5216  148F  0AA9               	incf	___awdiv@dividend,f
  5217  1490  1903               	skipnz
  5218  1491  0AAA               	incf	___awdiv@dividend+1,f
  5219  1492  3001               	movlw	1
  5220  1493  00AB               	movwf	??___awdiv
  5221  1494  082B               	movf	??___awdiv,w
  5222  1495  06AD               	xorwf	___awdiv@sign,f
  5223  1496                     l1926:	
  5224  1496  01AE               	clrf	___awdiv@quotient
  5225  1497  01AF               	clrf	___awdiv@quotient+1
  5226  1498  0827               	movf	___awdiv@divisor,w
  5227  1499  0428               	iorwf	___awdiv@divisor+1,w
  5228  149A  1903               	btfsc	3,2
  5229  149B  2CC5               	goto	l1948
  5230  149C  01AC               	clrf	___awdiv@counter
  5231  149D  0AAC               	incf	___awdiv@counter,f
  5232  149E                     l1936:	
  5233  149E  1BA8               	btfsc	___awdiv@divisor+1,7
  5234  149F  2CAA               	goto	l1938
  5235  14A0  3001               	movlw	1
  5236  14A1                     u2325:	
  5237  14A1  35A7               	lslf	___awdiv@divisor,f
  5238  14A2  0DA8               	rlf	___awdiv@divisor+1,f
  5239  14A3  0B89               	decfsz	9,f
  5240  14A4  2CA1               	goto	u2325
  5241  14A5  3001               	movlw	1
  5242  14A6  00AB               	movwf	??___awdiv
  5243  14A7  082B               	movf	??___awdiv,w
  5244  14A8  07AC               	addwf	___awdiv@counter,f
  5245  14A9  2C9E               	goto	l1936
  5246  14AA                     l1938:	
  5247  14AA  3001               	movlw	1
  5248  14AB                     u2345:	
  5249  14AB  35AE               	lslf	___awdiv@quotient,f
  5250  14AC  0DAF               	rlf	___awdiv@quotient+1,f
  5251  14AD  0B89               	decfsz	9,f
  5252  14AE  2CAB               	goto	u2345
  5253  14AF  0828               	movf	___awdiv@divisor+1,w
  5254  14B0  022A               	subwf	___awdiv@dividend+1,w
  5255  14B1  1D03               	skipz
  5256  14B2  2CB5               	goto	u2355
  5257  14B3  0827               	movf	___awdiv@divisor,w
  5258  14B4  0229               	subwf	___awdiv@dividend,w
  5259  14B5                     u2355:	
  5260  14B5  1C03               	skipc
  5261  14B6  2CBC               	goto	l1944
  5262  14B7  0827               	movf	___awdiv@divisor,w
  5263  14B8  02A9               	subwf	___awdiv@dividend,f
  5264  14B9  0828               	movf	___awdiv@divisor+1,w
  5265  14BA  3BAA               	subwfb	___awdiv@dividend+1,f
  5266  14BB  142E               	bsf	___awdiv@quotient,0
  5267  14BC                     l1944:	
  5268  14BC  3001               	movlw	1
  5269  14BD                     u2365:	
  5270  14BD  36A8               	lsrf	___awdiv@divisor+1,f
  5271  14BE  0CA7               	rrf	___awdiv@divisor,f
  5272  14BF  0B89               	decfsz	9,f
  5273  14C0  2CBD               	goto	u2365
  5274  14C1  3001               	movlw	1
  5275  14C2  02AC               	subwf	___awdiv@counter,f
  5276  14C3  1D03               	btfss	3,2
  5277  14C4  2CAA               	goto	l1938
  5278  14C5                     l1948:	
  5279  14C5  082D               	movf	___awdiv@sign,w
  5280  14C6  1903               	btfsc	3,2
  5281  14C7  2CCD               	goto	l1952
  5282  14C8  09AE               	comf	___awdiv@quotient,f
  5283  14C9  09AF               	comf	___awdiv@quotient+1,f
  5284  14CA  0AAE               	incf	___awdiv@quotient,f
  5285  14CB  1903               	skipnz
  5286  14CC  0AAF               	incf	___awdiv@quotient+1,f
  5287  14CD                     l1952:	
  5288  14CD  082F               	movf	___awdiv@quotient+1,w
  5289  14CE  00A8               	movwf	?___awdiv+1
  5290  14CF  082E               	movf	___awdiv@quotient,w
  5291  14D0  00A7               	movwf	?___awdiv
  5292  14D1  0008               	return
  5293  14D2                     __end_of___awdiv:	
  5294                           
  5295                           	psect	text9
  5296  0A85                     __ptext9:	
  5297 ;; *************** function __tdiv_to_l_ *****************
  5298 ;; Defined at:
  5299 ;;		line 60 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\ftdivl.c"
  5300 ;; Parameters:    Size  Location     Type
  5301 ;;  f1              3    0[BANK0 ] float 
  5302 ;;  f2              3    3[BANK0 ] float 
  5303 ;; Auto vars:     Size  Location     Type
  5304 ;;  quot            4   10[BANK0 ] unsigned long 
  5305 ;;  exp1            1   15[BANK0 ] unsigned char 
  5306 ;;  cntr            1   14[BANK0 ] unsigned char 
  5307 ;; Return value:  Size  Location     Type
  5308 ;;                  4    0[BANK0 ] unsigned long 
  5309 ;; Registers used:
  5310 ;;		wreg, status,2, status,0
  5311 ;; Tracked objects:
  5312 ;;		On entry : 0/0
  5313 ;;		On exit  : 0/0
  5314 ;;		Unchanged: 0/0
  5315 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
  5316 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  5317 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  5318 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  5319 ;;      Totals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  5320 ;;Total ram usage:       16 bytes
  5321 ;; Hardware stack levels used:    1
  5322 ;; Hardware stack levels required when called:    3
  5323 ;; This function calls:
  5324 ;;		Nothing
  5325 ;; This function is called by:
  5326 ;;		_sprintf
  5327 ;; This function uses a non-reentrant model
  5328 ;;
  5329                           
  5330                           
  5331                           ;psect for function __tdiv_to_l_
  5332  0A85                     __tdiv_to_l_:	
  5333                           
  5334                           ;incstack = 0
  5335                           ; Regs used in __tdiv_to_l_: [wreg+status,2+status,0]
  5336  0A85  0140               	movlb	0	; select bank0
  5337  0A86  0820               	movf	__tdiv_to_l_@f1,w
  5338  0A87  00A6               	movwf	??__tdiv_to_l_
  5339  0A88  0821               	movf	__tdiv_to_l_@f1+1,w
  5340  0A89  00A7               	movwf	??__tdiv_to_l_+1
  5341  0A8A  0822               	movf	__tdiv_to_l_@f1+2,w
  5342  0A8B  00A8               	movwf	??__tdiv_to_l_+2
  5343  0A8C  1003               	clrc
  5344  0A8D  0D27               	rlf	??__tdiv_to_l_+1,w
  5345  0A8E  0D28               	rlf	??__tdiv_to_l_+2,w
  5346  0A8F  00A9               	movwf	??__tdiv_to_l_+3
  5347  0A90  0829               	movf	??__tdiv_to_l_+3,w
  5348  0A91  00AF               	movwf	__tdiv_to_l_@exp1
  5349  0A92  082F               	movf	__tdiv_to_l_@exp1,w
  5350  0A93  1D03               	btfss	3,2
  5351  0A94  2A9E               	goto	l2240
  5352  0A95  3000               	movlw	0
  5353  0A96  00A3               	movwf	?__tdiv_to_l_+3
  5354  0A97  3000               	movlw	0
  5355  0A98  00A2               	movwf	?__tdiv_to_l_+2
  5356  0A99  3000               	movlw	0
  5357  0A9A  00A1               	movwf	?__tdiv_to_l_+1
  5358  0A9B  3000               	movlw	0
  5359  0A9C  00A0               	movwf	?__tdiv_to_l_
  5360  0A9D  0008               	return
  5361  0A9E                     l2240:	
  5362  0A9E  0823               	movf	__tdiv_to_l_@f2,w
  5363  0A9F  00A6               	movwf	??__tdiv_to_l_
  5364  0AA0  0824               	movf	__tdiv_to_l_@f2+1,w
  5365  0AA1  00A7               	movwf	??__tdiv_to_l_+1
  5366  0AA2  0825               	movf	__tdiv_to_l_@f2+2,w
  5367  0AA3  00A8               	movwf	??__tdiv_to_l_+2
  5368  0AA4  1003               	clrc
  5369  0AA5  0D27               	rlf	??__tdiv_to_l_+1,w
  5370  0AA6  0D28               	rlf	??__tdiv_to_l_+2,w
  5371  0AA7  00A9               	movwf	??__tdiv_to_l_+3
  5372  0AA8  0829               	movf	??__tdiv_to_l_+3,w
  5373  0AA9  00AE               	movwf	__tdiv_to_l_@cntr
  5374  0AAA  082E               	movf	__tdiv_to_l_@cntr,w
  5375  0AAB  1D03               	btfss	3,2
  5376  0AAC  2AB6               	goto	l536
  5377  0AAD  3000               	movlw	0
  5378  0AAE  00A3               	movwf	?__tdiv_to_l_+3
  5379  0AAF  3000               	movlw	0
  5380  0AB0  00A2               	movwf	?__tdiv_to_l_+2
  5381  0AB1  3000               	movlw	0
  5382  0AB2  00A1               	movwf	?__tdiv_to_l_+1
  5383  0AB3  3000               	movlw	0
  5384  0AB4  00A0               	movwf	?__tdiv_to_l_
  5385  0AB5  0008               	return
  5386  0AB6                     l536:	
  5387  0AB6  17A1               	bsf	__tdiv_to_l_@f1+1,7
  5388  0AB7  30FF               	movlw	255
  5389  0AB8  05A0               	andwf	__tdiv_to_l_@f1,f
  5390  0AB9  30FF               	movlw	255
  5391  0ABA  05A1               	andwf	__tdiv_to_l_@f1+1,f
  5392  0ABB  3000               	movlw	0
  5393  0ABC  05A2               	andwf	__tdiv_to_l_@f1+2,f
  5394  0ABD  17A4               	bsf	__tdiv_to_l_@f2+1,7
  5395  0ABE  30FF               	movlw	255
  5396  0ABF  05A3               	andwf	__tdiv_to_l_@f2,f
  5397  0AC0  30FF               	movlw	255
  5398  0AC1  05A4               	andwf	__tdiv_to_l_@f2+1,f
  5399  0AC2  3000               	movlw	0
  5400  0AC3  05A5               	andwf	__tdiv_to_l_@f2+2,f
  5401  0AC4  3000               	movlw	0
  5402  0AC5  00AD               	movwf	__tdiv_to_l_@quot+3
  5403  0AC6  3000               	movlw	0
  5404  0AC7  00AC               	movwf	__tdiv_to_l_@quot+2
  5405  0AC8  3000               	movlw	0
  5406  0AC9  00AB               	movwf	__tdiv_to_l_@quot+1
  5407  0ACA  3000               	movlw	0
  5408  0ACB  00AA               	movwf	__tdiv_to_l_@quot
  5409  0ACC  307F               	movlw	127
  5410  0ACD  02AF               	subwf	__tdiv_to_l_@exp1,f
  5411  0ACE  3098               	movlw	152
  5412  0ACF  072E               	addwf	__tdiv_to_l_@cntr,w
  5413  0AD0  00A6               	movwf	??__tdiv_to_l_
  5414  0AD1  0826               	movf	??__tdiv_to_l_,w
  5415  0AD2  02AF               	subwf	__tdiv_to_l_@exp1,f
  5416  0AD3  3018               	movlw	24
  5417  0AD4  00A6               	movwf	??__tdiv_to_l_
  5418  0AD5  0826               	movf	??__tdiv_to_l_,w
  5419  0AD6  00AE               	movwf	__tdiv_to_l_@cntr
  5420  0AD7                     l2254:	
  5421  0AD7  3001               	movlw	1
  5422  0AD8                     u3065:	
  5423  0AD8  35AA               	lslf	__tdiv_to_l_@quot,f
  5424  0AD9  0DAB               	rlf	__tdiv_to_l_@quot+1,f
  5425  0ADA  0DAC               	rlf	__tdiv_to_l_@quot+2,f
  5426  0ADB  0DAD               	rlf	__tdiv_to_l_@quot+3,f
  5427  0ADC  0B89               	decfsz	9,f
  5428  0ADD  2AD8               	goto	u3065
  5429  0ADE  0825               	movf	__tdiv_to_l_@f2+2,w
  5430  0ADF  0222               	subwf	__tdiv_to_l_@f1+2,w
  5431  0AE0  1D03               	skipz
  5432  0AE1  2AE8               	goto	u3075
  5433  0AE2  0824               	movf	__tdiv_to_l_@f2+1,w
  5434  0AE3  0221               	subwf	__tdiv_to_l_@f1+1,w
  5435  0AE4  1D03               	skipz
  5436  0AE5  2AE8               	goto	u3075
  5437  0AE6  0823               	movf	__tdiv_to_l_@f2,w
  5438  0AE7  0220               	subwf	__tdiv_to_l_@f1,w
  5439  0AE8                     u3075:	
  5440  0AE8  1C03               	skipc
  5441  0AE9  2AF1               	goto	l2262
  5442  0AEA  0823               	movf	__tdiv_to_l_@f2,w
  5443  0AEB  02A0               	subwf	__tdiv_to_l_@f1,f
  5444  0AEC  0824               	movf	__tdiv_to_l_@f2+1,w
  5445  0AED  3BA1               	subwfb	__tdiv_to_l_@f1+1,f
  5446  0AEE  0825               	movf	__tdiv_to_l_@f2+2,w
  5447  0AEF  3BA2               	subwfb	__tdiv_to_l_@f1+2,f
  5448  0AF0  142A               	bsf	__tdiv_to_l_@quot,0
  5449  0AF1                     l2262:	
  5450  0AF1  3001               	movlw	1
  5451  0AF2                     u3085:	
  5452  0AF2  35A0               	lslf	__tdiv_to_l_@f1,f
  5453  0AF3  0DA1               	rlf	__tdiv_to_l_@f1+1,f
  5454  0AF4  0DA2               	rlf	__tdiv_to_l_@f1+2,f
  5455  0AF5  0B89               	decfsz	9,f
  5456  0AF6  2AF2               	goto	u3085
  5457  0AF7  3001               	movlw	1
  5458  0AF8  02AE               	subwf	__tdiv_to_l_@cntr,f
  5459  0AF9  1D03               	btfss	3,2
  5460  0AFA  2AD7               	goto	l2254
  5461  0AFB  1FAF               	btfss	__tdiv_to_l_@exp1,7
  5462  0AFC  2B19               	goto	l2274
  5463  0AFD  082F               	movf	__tdiv_to_l_@exp1,w
  5464  0AFE  3A80               	xorlw	128
  5465  0AFF  3E97               	addlw	151
  5466  0B00  1803               	skipnc
  5467  0B01  2B0B               	goto	l2272
  5468  0B02  3000               	movlw	0
  5469  0B03  00A3               	movwf	?__tdiv_to_l_+3
  5470  0B04  3000               	movlw	0
  5471  0B05  00A2               	movwf	?__tdiv_to_l_+2
  5472  0B06  3000               	movlw	0
  5473  0B07  00A1               	movwf	?__tdiv_to_l_+1
  5474  0B08  3000               	movlw	0
  5475  0B09  00A0               	movwf	?__tdiv_to_l_
  5476  0B0A  0008               	return
  5477  0B0B                     l2272:	
  5478  0B0B  3001               	movlw	1
  5479  0B0C                     u3125:	
  5480  0B0C  36AD               	lsrf	__tdiv_to_l_@quot+3,f
  5481  0B0D  0CAC               	rrf	__tdiv_to_l_@quot+2,f
  5482  0B0E  0CAB               	rrf	__tdiv_to_l_@quot+1,f
  5483  0B0F  0CAA               	rrf	__tdiv_to_l_@quot,f
  5484  0B10  0B89               	decfsz	9,f
  5485  0B11  2B0C               	goto	u3125
  5486  0B12  3001               	movlw	1
  5487  0B13  00A6               	movwf	??__tdiv_to_l_
  5488  0B14  0826               	movf	??__tdiv_to_l_,w
  5489  0B15  07AF               	addwf	__tdiv_to_l_@exp1,f
  5490  0B16  1903               	btfsc	3,2
  5491  0B17  2B32               	goto	l2282
  5492  0B18  2B0B               	goto	l2272
  5493  0B19                     l2274:	
  5494  0B19  3018               	movlw	24
  5495  0B1A  022F               	subwf	__tdiv_to_l_@exp1,w
  5496  0B1B  1C03               	skipc
  5497  0B1C  2B2F               	goto	l546
  5498  0B1D  3000               	movlw	0
  5499  0B1E  00A3               	movwf	?__tdiv_to_l_+3
  5500  0B1F  3000               	movlw	0
  5501  0B20  00A2               	movwf	?__tdiv_to_l_+2
  5502  0B21  3000               	movlw	0
  5503  0B22  00A1               	movwf	?__tdiv_to_l_+1
  5504  0B23  3000               	movlw	0
  5505  0B24  00A0               	movwf	?__tdiv_to_l_
  5506  0B25  0008               	return
  5507  0B26                     l2280:	
  5508  0B26  3001               	movlw	1
  5509  0B27                     u3155:	
  5510  0B27  35AA               	lslf	__tdiv_to_l_@quot,f
  5511  0B28  0DAB               	rlf	__tdiv_to_l_@quot+1,f
  5512  0B29  0DAC               	rlf	__tdiv_to_l_@quot+2,f
  5513  0B2A  0DAD               	rlf	__tdiv_to_l_@quot+3,f
  5514  0B2B  0B89               	decfsz	9,f
  5515  0B2C  2B27               	goto	u3155
  5516  0B2D  3001               	movlw	1
  5517  0B2E  02AF               	subwf	__tdiv_to_l_@exp1,f
  5518  0B2F                     l546:	
  5519  0B2F  082F               	movf	__tdiv_to_l_@exp1,w
  5520  0B30  1D03               	btfss	3,2
  5521  0B31  2B26               	goto	l2280
  5522  0B32                     l2282:	
  5523  0B32  082D               	movf	__tdiv_to_l_@quot+3,w
  5524  0B33  00A3               	movwf	?__tdiv_to_l_+3
  5525  0B34  082C               	movf	__tdiv_to_l_@quot+2,w
  5526  0B35  00A2               	movwf	?__tdiv_to_l_+2
  5527  0B36  082B               	movf	__tdiv_to_l_@quot+1,w
  5528  0B37  00A1               	movwf	?__tdiv_to_l_+1
  5529  0B38  082A               	movf	__tdiv_to_l_@quot,w
  5530  0B39  00A0               	movwf	?__tdiv_to_l_
  5531  0B3A  0008               	return
  5532  0B3B                     __end_of__tdiv_to_l_:	
  5533                           
  5534                           	psect	text10
  5535  0C31                     __ptext10:	
  5536 ;; *************** function __div_to_l_ *****************
  5537 ;; Defined at:
  5538 ;;		line 60 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\fldivl.c"
  5539 ;; Parameters:    Size  Location     Type
  5540 ;;  f1              3    0[BANK0 ] unsigned long 
  5541 ;;  f2              3    3[BANK0 ] unsigned long 
  5542 ;; Auto vars:     Size  Location     Type
  5543 ;;  quot            4   14[BANK0 ] unsigned long 
  5544 ;;  exp1            1   19[BANK0 ] unsigned char 
  5545 ;;  cntr            1   18[BANK0 ] unsigned char 
  5546 ;; Return value:  Size  Location     Type
  5547 ;;                  4    0[BANK0 ] unsigned long 
  5548 ;; Registers used:
  5549 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  5550 ;; Tracked objects:
  5551 ;;		On entry : 0/0
  5552 ;;		On exit  : 0/0
  5553 ;;		Unchanged: 0/0
  5554 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
  5555 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  5556 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  5557 ;;      Temps:          0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  5558 ;;      Totals:         0      20       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  5559 ;;Total ram usage:       20 bytes
  5560 ;; Hardware stack levels used:    1
  5561 ;; Hardware stack levels required when called:    3
  5562 ;; This function calls:
  5563 ;;		Nothing
  5564 ;; This function is called by:
  5565 ;;		_sprintf
  5566 ;; This function uses a non-reentrant model
  5567 ;;
  5568                           
  5569                           
  5570                           ;psect for function __div_to_l_
  5571  0C31                     __div_to_l_:	
  5572                           
  5573                           ;incstack = 0
  5574                           ; Regs used in __div_to_l_: [wreg+fsr1l+fsr1h+status,2+status,0]
  5575  0C31  3020               	movlw	low (__div_to_l_@f1| 0)
  5576  0C32  0086               	movwf	6
  5577  0C33  0187               	clrf	7
  5578  0C34  3F40               	moviw [0]fsr1
  5579  0C35  0140               	movlb	0	; select bank0
  5580  0C36  00A6               	movwf	??__div_to_l_
  5581  0C37  3F41               	moviw [1]fsr1
  5582  0C38  00A7               	movwf	??__div_to_l_+1
  5583  0C39  3F42               	moviw [2]fsr1
  5584  0C3A  00A8               	movwf	??__div_to_l_+2
  5585  0C3B  3F43               	moviw [3]fsr1
  5586  0C3C  00A9               	movwf	??__div_to_l_+3
  5587  0C3D  1003               	clrc
  5588  0C3E  0D28               	rlf	??__div_to_l_+2,w
  5589  0C3F  0D29               	rlf	??__div_to_l_+3,w
  5590  0C40  00AA               	movwf	??__div_to_l_+4
  5591  0C41  082A               	movf	??__div_to_l_+4,w
  5592  0C42  00B3               	movwf	__div_to_l_@exp1
  5593  0C43  0833               	movf	__div_to_l_@exp1,w
  5594  0C44  1D03               	btfss	3,2
  5595  0C45  2C4F               	goto	l2292
  5596  0C46  3000               	movlw	0
  5597  0C47  00A3               	movwf	?__div_to_l_+3
  5598  0C48  3000               	movlw	0
  5599  0C49  00A2               	movwf	?__div_to_l_+2
  5600  0C4A  3000               	movlw	0
  5601  0C4B  00A1               	movwf	?__div_to_l_+1
  5602  0C4C  3000               	movlw	0
  5603  0C4D  00A0               	movwf	?__div_to_l_
  5604  0C4E  0008               	return
  5605  0C4F                     l2292:	
  5606  0C4F  3023               	movlw	low (__div_to_l_@f2| 0)
  5607  0C50  0086               	movwf	6
  5608  0C51  0187               	clrf	7
  5609  0C52  3F40               	moviw [0]fsr1
  5610  0C53  00A6               	movwf	??__div_to_l_
  5611  0C54  3F41               	moviw [1]fsr1
  5612  0C55  00A7               	movwf	??__div_to_l_+1
  5613  0C56  3F42               	moviw [2]fsr1
  5614  0C57  00A8               	movwf	??__div_to_l_+2
  5615  0C58  3F43               	moviw [3]fsr1
  5616  0C59  00A9               	movwf	??__div_to_l_+3
  5617  0C5A  1003               	clrc
  5618  0C5B  0D28               	rlf	??__div_to_l_+2,w
  5619  0C5C  0D29               	rlf	??__div_to_l_+3,w
  5620  0C5D  00AA               	movwf	??__div_to_l_+4
  5621  0C5E  082A               	movf	??__div_to_l_+4,w
  5622  0C5F  00B2               	movwf	__div_to_l_@cntr
  5623  0C60  0832               	movf	__div_to_l_@cntr,w
  5624  0C61  1D03               	btfss	3,2
  5625  0C62  2C6C               	goto	l2298
  5626  0C63  3000               	movlw	0
  5627  0C64  00A3               	movwf	?__div_to_l_+3
  5628  0C65  3000               	movlw	0
  5629  0C66  00A2               	movwf	?__div_to_l_+2
  5630  0C67  3000               	movlw	0
  5631  0C68  00A1               	movwf	?__div_to_l_+1
  5632  0C69  3000               	movlw	0
  5633  0C6A  00A0               	movwf	?__div_to_l_
  5634  0C6B  0008               	return
  5635  0C6C                     l2298:	
  5636  0C6C  3020               	movlw	low (__div_to_l_@f1| 0)
  5637  0C6D  0086               	movwf	6
  5638  0C6E  0187               	clrf	7
  5639  0C6F  3000               	movlw	0
  5640  0C70  0481               	iorwf	1,f
  5641  0C71  3141               	addfsr 1,1
  5642  0C72  3000               	movlw	0
  5643  0C73  0481               	iorwf	1,f
  5644  0C74  3141               	addfsr 1,1
  5645  0C75  3080               	movlw	128
  5646  0C76  0481               	iorwf	1,f
  5647  0C77  3141               	addfsr 1,1
  5648  0C78  3000               	movlw	0
  5649  0C79  0481               	iorwf	1,f
  5650  0C7A  3020               	movlw	low (__div_to_l_@f1| 0)
  5651  0C7B  0086               	movwf	6
  5652  0C7C  0187               	clrf	7
  5653  0C7D  30FF               	movlw	255
  5654  0C7E  0581               	andwf	1,f
  5655  0C7F  3141               	addfsr 1,1
  5656  0C80  30FF               	movlw	255
  5657  0C81  0581               	andwf	1,f
  5658  0C82  3141               	addfsr 1,1
  5659  0C83  30FF               	movlw	255
  5660  0C84  0581               	andwf	1,f
  5661  0C85  3141               	addfsr 1,1
  5662  0C86  3000               	movlw	0
  5663  0C87  0581               	andwf	1,f
  5664  0C88  3023               	movlw	low (__div_to_l_@f2| 0)
  5665  0C89  0086               	movwf	6
  5666  0C8A  0187               	clrf	7
  5667  0C8B  3000               	movlw	0
  5668  0C8C  0481               	iorwf	1,f
  5669  0C8D  3141               	addfsr 1,1
  5670  0C8E  3000               	movlw	0
  5671  0C8F  0481               	iorwf	1,f
  5672  0C90  3141               	addfsr 1,1
  5673  0C91  3080               	movlw	128
  5674  0C92  0481               	iorwf	1,f
  5675  0C93  3141               	addfsr 1,1
  5676  0C94  3000               	movlw	0
  5677  0C95  0481               	iorwf	1,f
  5678  0C96  3023               	movlw	low (__div_to_l_@f2| 0)
  5679  0C97  0086               	movwf	6
  5680  0C98  0187               	clrf	7
  5681  0C99  30FF               	movlw	255
  5682  0C9A  0581               	andwf	1,f
  5683  0C9B  3141               	addfsr 1,1
  5684  0C9C  30FF               	movlw	255
  5685  0C9D  0581               	andwf	1,f
  5686  0C9E  3141               	addfsr 1,1
  5687  0C9F  30FF               	movlw	255
  5688  0CA0  0581               	andwf	1,f
  5689  0CA1  3141               	addfsr 1,1
  5690  0CA2  3000               	movlw	0
  5691  0CA3  0581               	andwf	1,f
  5692  0CA4  3000               	movlw	0
  5693  0CA5  00B1               	movwf	__div_to_l_@quot+3
  5694  0CA6  3000               	movlw	0
  5695  0CA7  00B0               	movwf	__div_to_l_@quot+2
  5696  0CA8  3000               	movlw	0
  5697  0CA9  00AF               	movwf	__div_to_l_@quot+1
  5698  0CAA  3000               	movlw	0
  5699  0CAB  00AE               	movwf	__div_to_l_@quot
  5700  0CAC  307F               	movlw	127
  5701  0CAD  02B3               	subwf	__div_to_l_@exp1,f
  5702  0CAE  30A0               	movlw	160
  5703  0CAF  0732               	addwf	__div_to_l_@cntr,w
  5704  0CB0  00A6               	movwf	??__div_to_l_
  5705  0CB1  0826               	movf	??__div_to_l_,w
  5706  0CB2  02B3               	subwf	__div_to_l_@exp1,f
  5707  0CB3  3020               	movlw	32
  5708  0CB4  00A6               	movwf	??__div_to_l_
  5709  0CB5  0826               	movf	??__div_to_l_,w
  5710  0CB6  00B2               	movwf	__div_to_l_@cntr
  5711  0CB7                     l2308:	
  5712  0CB7  3001               	movlw	1
  5713  0CB8                     u3195:	
  5714  0CB8  35AE               	lslf	__div_to_l_@quot,f
  5715  0CB9  0DAF               	rlf	__div_to_l_@quot+1,f
  5716  0CBA  0DB0               	rlf	__div_to_l_@quot+2,f
  5717  0CBB  0DB1               	rlf	__div_to_l_@quot+3,f
  5718  0CBC  0B89               	decfsz	9,f
  5719  0CBD  2CB8               	goto	u3195
  5720  0CBE  3023               	movlw	low (__div_to_l_@f2| 0)
  5721  0CBF  0086               	movwf	6
  5722  0CC0  0187               	clrf	7
  5723  0CC1  3F40               	moviw [0]fsr1
  5724  0CC2  00A6               	movwf	??__div_to_l_
  5725  0CC3  3F41               	moviw [1]fsr1
  5726  0CC4  00A7               	movwf	??__div_to_l_+1
  5727  0CC5  3F42               	moviw [2]fsr1
  5728  0CC6  00A8               	movwf	??__div_to_l_+2
  5729  0CC7  3F43               	moviw [3]fsr1
  5730  0CC8  00A9               	movwf	??__div_to_l_+3
  5731  0CC9  3020               	movlw	low (__div_to_l_@f1| 0)
  5732  0CCA  0086               	movwf	6
  5733  0CCB  0187               	clrf	7
  5734  0CCC  3F40               	moviw [0]fsr1
  5735  0CCD  00AA               	movwf	??__div_to_l_+4
  5736  0CCE  3F41               	moviw [1]fsr1
  5737  0CCF  00AB               	movwf	??__div_to_l_+5
  5738  0CD0  3F42               	moviw [2]fsr1
  5739  0CD1  00AC               	movwf	??__div_to_l_+6
  5740  0CD2  3F43               	moviw [3]fsr1
  5741  0CD3  00AD               	movwf	??__div_to_l_+7
  5742  0CD4  0829               	movf	??__div_to_l_+3,w
  5743  0CD5  022D               	subwf	??__div_to_l_+7,w
  5744  0CD6  1D03               	skipz
  5745  0CD7  2CE2               	goto	u3205
  5746  0CD8  0828               	movf	??__div_to_l_+2,w
  5747  0CD9  022C               	subwf	??__div_to_l_+6,w
  5748  0CDA  1D03               	skipz
  5749  0CDB  2CE2               	goto	u3205
  5750  0CDC  0827               	movf	??__div_to_l_+1,w
  5751  0CDD  022B               	subwf	??__div_to_l_+5,w
  5752  0CDE  1D03               	skipz
  5753  0CDF  2CE2               	goto	u3205
  5754  0CE0  0826               	movf	??__div_to_l_,w
  5755  0CE1  022A               	subwf	??__div_to_l_+4,w
  5756  0CE2                     u3205:	
  5757  0CE2  1C03               	skipc
  5758  0CE3  2CFF               	goto	l2316
  5759  0CE4  3023               	movlw	low (__div_to_l_@f2| 0)
  5760  0CE5  0086               	movwf	6
  5761  0CE6  0187               	clrf	7
  5762  0CE7  3F40               	moviw [0]fsr1
  5763  0CE8  00A6               	movwf	??__div_to_l_
  5764  0CE9  3F41               	moviw [1]fsr1
  5765  0CEA  00A7               	movwf	??__div_to_l_+1
  5766  0CEB  3F42               	moviw [2]fsr1
  5767  0CEC  00A8               	movwf	??__div_to_l_+2
  5768  0CED  3F43               	moviw [3]fsr1
  5769  0CEE  00A9               	movwf	??__div_to_l_+3
  5770  0CEF  3020               	movlw	low (__div_to_l_@f1| 0)
  5771  0CF0  0086               	movwf	6
  5772  0CF1  0187               	clrf	7
  5773  0CF2  0826               	movf	??__div_to_l_,w
  5774  0CF3  0281               	subwf	1,f
  5775  0CF4  3141               	addfsr 1,1
  5776  0CF5  0827               	movf	??__div_to_l_+1,w
  5777  0CF6  3B81               	subwfb	1,f
  5778  0CF7  3141               	addfsr 1,1
  5779  0CF8  0828               	movf	??__div_to_l_+2,w
  5780  0CF9  3B81               	subwfb	1,f
  5781  0CFA  3141               	addfsr 1,1
  5782  0CFB  0829               	movf	??__div_to_l_+3,w
  5783  0CFC  3B81               	subwfb	1,f
  5784  0CFD  317D               	addfsr 1,-3
  5785  0CFE  142E               	bsf	__div_to_l_@quot,0
  5786  0CFF                     l2316:	
  5787  0CFF  3020               	movlw	low (__div_to_l_@f1| 0)
  5788  0D00  0086               	movwf	6
  5789  0D01  0187               	clrf	7
  5790  0D02  3581               	lslf	1,f
  5791  0D03  3141               	addfsr 1,1
  5792  0D04  0D81               	rlf	1,f
  5793  0D05  3141               	addfsr 1,1
  5794  0D06  0D81               	rlf	1,f
  5795  0D07  3141               	addfsr 1,1
  5796  0D08  0D81               	rlf	1,f
  5797  0D09  317D               	addfsr 1,-3
  5798  0D0A  3001               	movlw	1
  5799  0D0B  02B2               	subwf	__div_to_l_@cntr,f
  5800  0D0C  1D03               	btfss	3,2
  5801  0D0D  2CB7               	goto	l2308
  5802  0D0E  1FB3               	btfss	__div_to_l_@exp1,7
  5803  0D0F  2D2C               	goto	l2328
  5804  0D10  0833               	movf	__div_to_l_@exp1,w
  5805  0D11  3A80               	xorlw	128
  5806  0D12  3E9F               	addlw	159
  5807  0D13  1803               	skipnc
  5808  0D14  2D1E               	goto	l2326
  5809  0D15  3000               	movlw	0
  5810  0D16  00A3               	movwf	?__div_to_l_+3
  5811  0D17  3000               	movlw	0
  5812  0D18  00A2               	movwf	?__div_to_l_+2
  5813  0D19  3000               	movlw	0
  5814  0D1A  00A1               	movwf	?__div_to_l_+1
  5815  0D1B  3000               	movlw	0
  5816  0D1C  00A0               	movwf	?__div_to_l_
  5817  0D1D  0008               	return
  5818  0D1E                     l2326:	
  5819  0D1E  3001               	movlw	1
  5820  0D1F                     u3245:	
  5821  0D1F  36B1               	lsrf	__div_to_l_@quot+3,f
  5822  0D20  0CB0               	rrf	__div_to_l_@quot+2,f
  5823  0D21  0CAF               	rrf	__div_to_l_@quot+1,f
  5824  0D22  0CAE               	rrf	__div_to_l_@quot,f
  5825  0D23  0B89               	decfsz	9,f
  5826  0D24  2D1F               	goto	u3245
  5827  0D25  3001               	movlw	1
  5828  0D26  00A6               	movwf	??__div_to_l_
  5829  0D27  0826               	movf	??__div_to_l_,w
  5830  0D28  07B3               	addwf	__div_to_l_@exp1,f
  5831  0D29  1903               	btfsc	3,2
  5832  0D2A  2D45               	goto	l2336
  5833  0D2B  2D1E               	goto	l2326
  5834  0D2C                     l2328:	
  5835  0D2C  3020               	movlw	32
  5836  0D2D  0233               	subwf	__div_to_l_@exp1,w
  5837  0D2E  1C03               	skipc
  5838  0D2F  2D42               	goto	l467
  5839  0D30  3000               	movlw	0
  5840  0D31  00A3               	movwf	?__div_to_l_+3
  5841  0D32  3000               	movlw	0
  5842  0D33  00A2               	movwf	?__div_to_l_+2
  5843  0D34  3000               	movlw	0
  5844  0D35  00A1               	movwf	?__div_to_l_+1
  5845  0D36  3000               	movlw	0
  5846  0D37  00A0               	movwf	?__div_to_l_
  5847  0D38  0008               	return
  5848  0D39                     l2334:	
  5849  0D39  3001               	movlw	1
  5850  0D3A                     u3275:	
  5851  0D3A  35AE               	lslf	__div_to_l_@quot,f
  5852  0D3B  0DAF               	rlf	__div_to_l_@quot+1,f
  5853  0D3C  0DB0               	rlf	__div_to_l_@quot+2,f
  5854  0D3D  0DB1               	rlf	__div_to_l_@quot+3,f
  5855  0D3E  0B89               	decfsz	9,f
  5856  0D3F  2D3A               	goto	u3275
  5857  0D40  3001               	movlw	1
  5858  0D41  02B3               	subwf	__div_to_l_@exp1,f
  5859  0D42                     l467:	
  5860  0D42  0833               	movf	__div_to_l_@exp1,w
  5861  0D43  1D03               	btfss	3,2
  5862  0D44  2D39               	goto	l2334
  5863  0D45                     l2336:	
  5864  0D45  0831               	movf	__div_to_l_@quot+3,w
  5865  0D46  00A3               	movwf	?__div_to_l_+3
  5866  0D47  0830               	movf	__div_to_l_@quot+2,w
  5867  0D48  00A2               	movwf	?__div_to_l_+2
  5868  0D49  082F               	movf	__div_to_l_@quot+1,w
  5869  0D4A  00A1               	movwf	?__div_to_l_+1
  5870  0D4B  082E               	movf	__div_to_l_@quot,w
  5871  0D4C  00A0               	movwf	?__div_to_l_
  5872  0D4D  0008               	return
  5873  0D4E                     __end_of__div_to_l_:	
  5874                           
  5875                           	psect	text11
  5876  12E6                     __ptext11:	
  5877 ;; *************** function ___lltoft *****************
  5878 ;; Defined at:
  5879 ;;		line 35 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\lltoft.c"
  5880 ;; Parameters:    Size  Location     Type
  5881 ;;  c               4    8[BANK0 ] unsigned long 
  5882 ;; Auto vars:     Size  Location     Type
  5883 ;;  exp             1   13[BANK0 ] unsigned char 
  5884 ;; Return value:  Size  Location     Type
  5885 ;;                  3    8[BANK0 ] float 
  5886 ;; Registers used:
  5887 ;;		wreg, status,2, status,0, pclath, cstack
  5888 ;; Tracked objects:
  5889 ;;		On entry : 0/0
  5890 ;;		On exit  : 0/0
  5891 ;;		Unchanged: 0/0
  5892 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
  5893 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  5894 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  5895 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  5896 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  5897 ;;Total ram usage:        6 bytes
  5898 ;; Hardware stack levels used:    1
  5899 ;; Hardware stack levels required when called:    4
  5900 ;; This function calls:
  5901 ;;		___ftpack
  5902 ;; This function is called by:
  5903 ;;		_sprintf
  5904 ;; This function uses a non-reentrant model
  5905 ;;
  5906                           
  5907                           
  5908                           ;psect for function ___lltoft
  5909  12E6                     ___lltoft:	
  5910                           
  5911                           ;incstack = 0
  5912                           ; Regs used in ___lltoft: [wreg+status,2+status,0+pclath+cstack]
  5913  12E6  308E               	movlw	142
  5914  12E7  0140               	movlb	0	; select bank0
  5915  12E8  00AC               	movwf	??___lltoft
  5916  12E9  082C               	movf	??___lltoft,w
  5917  12EA  00AD               	movwf	___lltoft@exp
  5918  12EB                     l2466:	
  5919  12EB  30FF               	movlw	255
  5920  12EC  052B               	andwf	___lltoft@c+3,w
  5921  12ED  1903               	btfsc	3,2
  5922  12EE  2AFB               	goto	l2468
  5923  12EF  3001               	movlw	1
  5924  12F0                     u3575:	
  5925  12F0  36AB               	lsrf	___lltoft@c+3,f
  5926  12F1  0CAA               	rrf	___lltoft@c+2,f
  5927  12F2  0CA9               	rrf	___lltoft@c+1,f
  5928  12F3  0CA8               	rrf	___lltoft@c,f
  5929  12F4  0B89               	decfsz	9,f
  5930  12F5  2AF0               	goto	u3575
  5931  12F6  3001               	movlw	1
  5932  12F7  00AC               	movwf	??___lltoft
  5933  12F8  082C               	movf	??___lltoft,w
  5934  12F9  07AD               	addwf	___lltoft@exp,f
  5935  12FA  2AEB               	goto	l2466
  5936  12FB                     l2468:	
  5937  12FB  0828               	movf	___lltoft@c,w
  5938  12FC  00A0               	movwf	___ftpack@arg
  5939  12FD  0829               	movf	___lltoft@c+1,w
  5940  12FE  00A1               	movwf	___ftpack@arg+1
  5941  12FF  082A               	movf	___lltoft@c+2,w
  5942  1300  00A2               	movwf	___ftpack@arg+2
  5943  1301  082D               	movf	___lltoft@exp,w
  5944  1302  00AC               	movwf	??___lltoft
  5945  1303  082C               	movf	??___lltoft,w
  5946  1304  00A3               	movwf	___ftpack@exp
  5947  1305  01A4               	clrf	___ftpack@sign
  5948  1306  3188  2016         	fcall	___ftpack
  5949  1308  0140               	movlb	0	; select bank0
  5950  1309  0820               	movf	?___ftpack,w
  5951  130A  00A8               	movwf	?___lltoft
  5952  130B  0821               	movf	?___ftpack+1,w
  5953  130C  00A9               	movwf	?___lltoft+1
  5954  130D  0822               	movf	?___ftpack+2,w
  5955  130E  00AA               	movwf	?___lltoft+2
  5956  130F  0008               	return
  5957  1310                     __end_of___lltoft:	
  5958                           
  5959                           	psect	text12
  5960  13F7                     __ptext12:	
  5961 ;; *************** function ___llmod *****************
  5962 ;; Defined at:
  5963 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\llmod.c"
  5964 ;; Parameters:    Size  Location     Type
  5965 ;;  divisor         4    0[BANK0 ] unsigned long 
  5966 ;;  dividend        4    4[BANK0 ] unsigned long 
  5967 ;; Auto vars:     Size  Location     Type
  5968 ;;  counter         1    9[BANK0 ] unsigned char 
  5969 ;; Return value:  Size  Location     Type
  5970 ;;                  4    0[BANK0 ] unsigned long 
  5971 ;; Registers used:
  5972 ;;		wreg, status,2, status,0
  5973 ;; Tracked objects:
  5974 ;;		On entry : 0/0
  5975 ;;		On exit  : 0/0
  5976 ;;		Unchanged: 0/0
  5977 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
  5978 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  5979 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  5980 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  5981 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  5982 ;;Total ram usage:       10 bytes
  5983 ;; Hardware stack levels used:    1
  5984 ;; Hardware stack levels required when called:    3
  5985 ;; This function calls:
  5986 ;;		Nothing
  5987 ;; This function is called by:
  5988 ;;		_sprintf
  5989 ;; This function uses a non-reentrant model
  5990 ;;
  5991                           
  5992                           
  5993                           ;psect for function ___llmod
  5994  13F7                     ___llmod:	
  5995                           
  5996                           ;incstack = 0
  5997                           ; Regs used in ___llmod: [wreg+status,2+status,0]
  5998  13F7  0140               	movlb	0	; select bank0
  5999  13F8  0823               	movf	___llmod@divisor+3,w
  6000  13F9  0422               	iorwf	___llmod@divisor+2,w
  6001  13FA  0421               	iorwf	___llmod@divisor+1,w
  6002  13FB  0420               	iorwf	___llmod@divisor,w
  6003  13FC  1903               	skipnz
  6004  13FD  2C31               	goto	l2458
  6005  13FE  01A9               	clrf	___llmod@counter
  6006  13FF  0AA9               	incf	___llmod@counter,f
  6007  1400                     l2448:	
  6008  1400  1BA3               	btfsc	___llmod@divisor+3,7
  6009  1401  2C0E               	goto	l2450
  6010  1402  3001               	movlw	1
  6011  1403                     u3525:	
  6012  1403  35A0               	lslf	___llmod@divisor,f
  6013  1404  0DA1               	rlf	___llmod@divisor+1,f
  6014  1405  0DA2               	rlf	___llmod@divisor+2,f
  6015  1406  0DA3               	rlf	___llmod@divisor+3,f
  6016  1407  0B89               	decfsz	9,f
  6017  1408  2C03               	goto	u3525
  6018  1409  3001               	movlw	1
  6019  140A  00A8               	movwf	??___llmod
  6020  140B  0828               	movf	??___llmod,w
  6021  140C  07A9               	addwf	___llmod@counter,f
  6022  140D  2C00               	goto	l2448
  6023  140E                     l2450:	
  6024  140E  0823               	movf	___llmod@divisor+3,w
  6025  140F  0227               	subwf	___llmod@dividend+3,w
  6026  1410  1D03               	skipz
  6027  1411  2C1C               	goto	u3545
  6028  1412  0822               	movf	___llmod@divisor+2,w
  6029  1413  0226               	subwf	___llmod@dividend+2,w
  6030  1414  1D03               	skipz
  6031  1415  2C1C               	goto	u3545
  6032  1416  0821               	movf	___llmod@divisor+1,w
  6033  1417  0225               	subwf	___llmod@dividend+1,w
  6034  1418  1D03               	skipz
  6035  1419  2C1C               	goto	u3545
  6036  141A  0820               	movf	___llmod@divisor,w
  6037  141B  0224               	subwf	___llmod@dividend,w
  6038  141C                     u3545:	
  6039  141C  1C03               	skipc
  6040  141D  2C26               	goto	l2454
  6041  141E  0820               	movf	___llmod@divisor,w
  6042  141F  02A4               	subwf	___llmod@dividend,f
  6043  1420  0821               	movf	___llmod@divisor+1,w
  6044  1421  3BA5               	subwfb	___llmod@dividend+1,f
  6045  1422  0822               	movf	___llmod@divisor+2,w
  6046  1423  3BA6               	subwfb	___llmod@dividend+2,f
  6047  1424  0823               	movf	___llmod@divisor+3,w
  6048  1425  3BA7               	subwfb	___llmod@dividend+3,f
  6049  1426                     l2454:	
  6050  1426  3001               	movlw	1
  6051  1427                     u3555:	
  6052  1427  36A3               	lsrf	___llmod@divisor+3,f
  6053  1428  0CA2               	rrf	___llmod@divisor+2,f
  6054  1429  0CA1               	rrf	___llmod@divisor+1,f
  6055  142A  0CA0               	rrf	___llmod@divisor,f
  6056  142B  0B89               	decfsz	9,f
  6057  142C  2C27               	goto	u3555
  6058  142D  3001               	movlw	1
  6059  142E  02A9               	subwf	___llmod@counter,f
  6060  142F  1D03               	btfss	3,2
  6061  1430  2C0E               	goto	l2450
  6062  1431                     l2458:	
  6063  1431  0827               	movf	___llmod@dividend+3,w
  6064  1432  00A3               	movwf	?___llmod+3
  6065  1433  0826               	movf	___llmod@dividend+2,w
  6066  1434  00A2               	movwf	?___llmod+2
  6067  1435  0825               	movf	___llmod@dividend+1,w
  6068  1436  00A1               	movwf	?___llmod+1
  6069  1437  0824               	movf	___llmod@dividend,w
  6070  1438  00A0               	movwf	?___llmod
  6071  1439  0008               	return
  6072  143A                     __end_of___llmod:	
  6073                           
  6074                           	psect	text13
  6075  14D2                     __ptext13:	
  6076 ;; *************** function ___lldiv *****************
  6077 ;; Defined at:
  6078 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\lldiv.c"
  6079 ;; Parameters:    Size  Location     Type
  6080 ;;  divisor         4    0[BANK0 ] unsigned long 
  6081 ;;  dividend        4    4[BANK0 ] unsigned long 
  6082 ;; Auto vars:     Size  Location     Type
  6083 ;;  quotient        4    9[BANK0 ] unsigned long 
  6084 ;;  counter         1   13[BANK0 ] unsigned char 
  6085 ;; Return value:  Size  Location     Type
  6086 ;;                  4    0[BANK0 ] unsigned long 
  6087 ;; Registers used:
  6088 ;;		wreg, status,2, status,0
  6089 ;; Tracked objects:
  6090 ;;		On entry : 0/0
  6091 ;;		On exit  : 0/0
  6092 ;;		Unchanged: 0/0
  6093 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
  6094 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  6095 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  6096 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  6097 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  6098 ;;Total ram usage:       14 bytes
  6099 ;; Hardware stack levels used:    1
  6100 ;; Hardware stack levels required when called:    3
  6101 ;; This function calls:
  6102 ;;		Nothing
  6103 ;; This function is called by:
  6104 ;;		_sprintf
  6105 ;; This function uses a non-reentrant model
  6106 ;;
  6107                           
  6108                           
  6109                           ;psect for function ___lldiv
  6110  14D2                     ___lldiv:	
  6111                           
  6112                           ;incstack = 0
  6113                           ; Regs used in ___lldiv: [wreg+status,2+status,0]
  6114  14D2  3000               	movlw	0
  6115  14D3  0140               	movlb	0	; select bank0
  6116  14D4  00AC               	movwf	___lldiv@quotient+3
  6117  14D5  3000               	movlw	0
  6118  14D6  00AB               	movwf	___lldiv@quotient+2
  6119  14D7  3000               	movlw	0
  6120  14D8  00AA               	movwf	___lldiv@quotient+1
  6121  14D9  3000               	movlw	0
  6122  14DA  00A9               	movwf	___lldiv@quotient
  6123  14DB  0823               	movf	___lldiv@divisor+3,w
  6124  14DC  0422               	iorwf	___lldiv@divisor+2,w
  6125  14DD  0421               	iorwf	___lldiv@divisor+1,w
  6126  14DE  0420               	iorwf	___lldiv@divisor,w
  6127  14DF  1903               	skipnz
  6128  14E0  2D1C               	goto	l2438
  6129  14E1  01AD               	clrf	___lldiv@counter
  6130  14E2  0AAD               	incf	___lldiv@counter,f
  6131  14E3                     l2424:	
  6132  14E3  1BA3               	btfsc	___lldiv@divisor+3,7
  6133  14E4  2CF1               	goto	l2426
  6134  14E5  3001               	movlw	1
  6135  14E6                     u3455:	
  6136  14E6  35A0               	lslf	___lldiv@divisor,f
  6137  14E7  0DA1               	rlf	___lldiv@divisor+1,f
  6138  14E8  0DA2               	rlf	___lldiv@divisor+2,f
  6139  14E9  0DA3               	rlf	___lldiv@divisor+3,f
  6140  14EA  0B89               	decfsz	9,f
  6141  14EB  2CE6               	goto	u3455
  6142  14EC  3001               	movlw	1
  6143  14ED  00A8               	movwf	??___lldiv
  6144  14EE  0828               	movf	??___lldiv,w
  6145  14EF  07AD               	addwf	___lldiv@counter,f
  6146  14F0  2CE3               	goto	l2424
  6147  14F1                     l2426:	
  6148  14F1  3001               	movlw	1
  6149  14F2                     u3475:	
  6150  14F2  35A9               	lslf	___lldiv@quotient,f
  6151  14F3  0DAA               	rlf	___lldiv@quotient+1,f
  6152  14F4  0DAB               	rlf	___lldiv@quotient+2,f
  6153  14F5  0DAC               	rlf	___lldiv@quotient+3,f
  6154  14F6  0B89               	decfsz	9,f
  6155  14F7  2CF2               	goto	u3475
  6156  14F8  0823               	movf	___lldiv@divisor+3,w
  6157  14F9  0227               	subwf	___lldiv@dividend+3,w
  6158  14FA  1D03               	skipz
  6159  14FB  2D06               	goto	u3485
  6160  14FC  0822               	movf	___lldiv@divisor+2,w
  6161  14FD  0226               	subwf	___lldiv@dividend+2,w
  6162  14FE  1D03               	skipz
  6163  14FF  2D06               	goto	u3485
  6164  1500  0821               	movf	___lldiv@divisor+1,w
  6165  1501  0225               	subwf	___lldiv@dividend+1,w
  6166  1502  1D03               	skipz
  6167  1503  2D06               	goto	u3485
  6168  1504  0820               	movf	___lldiv@divisor,w
  6169  1505  0224               	subwf	___lldiv@dividend,w
  6170  1506                     u3485:	
  6171  1506  1C03               	skipc
  6172  1507  2D11               	goto	l2434
  6173  1508  0820               	movf	___lldiv@divisor,w
  6174  1509  02A4               	subwf	___lldiv@dividend,f
  6175  150A  0821               	movf	___lldiv@divisor+1,w
  6176  150B  3BA5               	subwfb	___lldiv@dividend+1,f
  6177  150C  0822               	movf	___lldiv@divisor+2,w
  6178  150D  3BA6               	subwfb	___lldiv@dividend+2,f
  6179  150E  0823               	movf	___lldiv@divisor+3,w
  6180  150F  3BA7               	subwfb	___lldiv@dividend+3,f
  6181  1510  1429               	bsf	___lldiv@quotient,0
  6182  1511                     l2434:	
  6183  1511  3001               	movlw	1
  6184  1512                     u3495:	
  6185  1512  36A3               	lsrf	___lldiv@divisor+3,f
  6186  1513  0CA2               	rrf	___lldiv@divisor+2,f
  6187  1514  0CA1               	rrf	___lldiv@divisor+1,f
  6188  1515  0CA0               	rrf	___lldiv@divisor,f
  6189  1516  0B89               	decfsz	9,f
  6190  1517  2D12               	goto	u3495
  6191  1518  3001               	movlw	1
  6192  1519  02AD               	subwf	___lldiv@counter,f
  6193  151A  1D03               	btfss	3,2
  6194  151B  2CF1               	goto	l2426
  6195  151C                     l2438:	
  6196  151C  082C               	movf	___lldiv@quotient+3,w
  6197  151D  00A3               	movwf	?___lldiv+3
  6198  151E  082B               	movf	___lldiv@quotient+2,w
  6199  151F  00A2               	movwf	?___lldiv+2
  6200  1520  082A               	movf	___lldiv@quotient+1,w
  6201  1521  00A1               	movwf	?___lldiv+1
  6202  1522  0829               	movf	___lldiv@quotient,w
  6203  1523  00A0               	movwf	?___lldiv
  6204  1524  0008               	return
  6205  1525                     __end_of___lldiv:	
  6206                           
  6207                           	psect	text14
  6208  1525                     __ptext14:	
  6209 ;; *************** function ___fttol *****************
  6210 ;; Defined at:
  6211 ;;		line 44 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\fttol.c"
  6212 ;; Parameters:    Size  Location     Type
  6213 ;;  f1              3   47[BANK0 ] float 
  6214 ;; Auto vars:     Size  Location     Type
  6215 ;;  lval            4   56[BANK0 ] unsigned long 
  6216 ;;  exp1            1   60[BANK0 ] unsigned char 
  6217 ;;  sign1           1   55[BANK0 ] unsigned char 
  6218 ;; Return value:  Size  Location     Type
  6219 ;;                  4   47[BANK0 ] long 
  6220 ;; Registers used:
  6221 ;;		wreg, status,2, status,0
  6222 ;; Tracked objects:
  6223 ;;		On entry : 0/0
  6224 ;;		On exit  : 0/0
  6225 ;;		Unchanged: 0/0
  6226 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
  6227 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  6228 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  6229 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  6230 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  6231 ;;Total ram usage:       14 bytes
  6232 ;; Hardware stack levels used:    1
  6233 ;; Hardware stack levels required when called:    3
  6234 ;; This function calls:
  6235 ;;		Nothing
  6236 ;; This function is called by:
  6237 ;;		_sprintf
  6238 ;; This function uses a non-reentrant model
  6239 ;;
  6240                           
  6241                           
  6242                           ;psect for function ___fttol
  6243  1525                     ___fttol:	
  6244                           
  6245                           ;incstack = 0
  6246                           ; Regs used in ___fttol: [wreg+status,2+status,0]
  6247  1525  0140               	movlb	0	; select bank0
  6248  1526  084F               	movf	___fttol@f1,w
  6249  1527  00D3               	movwf	??___fttol
  6250  1528  0850               	movf	___fttol@f1+1,w
  6251  1529  00D4               	movwf	??___fttol+1
  6252  152A  0851               	movf	___fttol@f1+2,w
  6253  152B  00D5               	movwf	??___fttol+2
  6254  152C  1003               	clrc
  6255  152D  0D54               	rlf	??___fttol+1,w
  6256  152E  0D55               	rlf	??___fttol+2,w
  6257  152F  00D6               	movwf	??___fttol+3
  6258  1530  0856               	movf	??___fttol+3,w
  6259  1531  00DC               	movwf	___fttol@exp1
  6260  1532  085C               	movf	___fttol@exp1,w
  6261  1533  1D03               	btfss	3,2
  6262  1534  2D3E               	goto	l2382
  6263  1535  3000               	movlw	0
  6264  1536  00D2               	movwf	?___fttol+3
  6265  1537  3000               	movlw	0
  6266  1538  00D1               	movwf	?___fttol+2
  6267  1539  3000               	movlw	0
  6268  153A  00D0               	movwf	?___fttol+1
  6269  153B  3000               	movlw	0
  6270  153C  00CF               	movwf	?___fttol
  6271  153D  0008               	return
  6272  153E                     l2382:	
  6273  153E  084F               	movf	___fttol@f1,w
  6274  153F  00D3               	movwf	??___fttol
  6275  1540  0850               	movf	___fttol@f1+1,w
  6276  1541  00D4               	movwf	??___fttol+1
  6277  1542  0851               	movf	___fttol@f1+2,w
  6278  1543  00D5               	movwf	??___fttol+2
  6279  1544  3017               	movlw	23
  6280  1545                     u3355:	
  6281  1545  36D5               	lsrf	??___fttol+2,f
  6282  1546  0CD4               	rrf	??___fttol+1,f
  6283  1547  0CD3               	rrf	??___fttol,f
  6284  1548  0B89               	decfsz	9,f
  6285  1549  2D45               	goto	u3355
  6286  154A  0853               	movf	??___fttol,w
  6287  154B  00D6               	movwf	??___fttol+3
  6288  154C  0856               	movf	??___fttol+3,w
  6289  154D  00D7               	movwf	___fttol@sign1
  6290  154E  17D0               	bsf	___fttol@f1+1,7
  6291  154F  30FF               	movlw	255
  6292  1550  05CF               	andwf	___fttol@f1,f
  6293  1551  30FF               	movlw	255
  6294  1552  05D0               	andwf	___fttol@f1+1,f
  6295  1553  3000               	movlw	0
  6296  1554  05D1               	andwf	___fttol@f1+2,f
  6297  1555  084F               	movf	___fttol@f1,w
  6298  1556  00D8               	movwf	___fttol@lval
  6299  1557  0850               	movf	___fttol@f1+1,w
  6300  1558  00D9               	movwf	___fttol@lval+1
  6301  1559  0851               	movf	___fttol@f1+2,w
  6302  155A  00DA               	movwf	___fttol@lval+2
  6303  155B  01DB               	clrf	___fttol@lval+3
  6304  155C  308E               	movlw	142
  6305  155D  02DC               	subwf	___fttol@exp1,f
  6306  155E  1FDC               	btfss	___fttol@exp1,7
  6307  155F  2D7C               	goto	l2402
  6308  1560  085C               	movf	___fttol@exp1,w
  6309  1561  3A80               	xorlw	128
  6310  1562  3E8F               	addlw	143
  6311  1563  1803               	skipnc
  6312  1564  2D6E               	goto	l2400
  6313  1565  3000               	movlw	0
  6314  1566  00D2               	movwf	?___fttol+3
  6315  1567  3000               	movlw	0
  6316  1568  00D1               	movwf	?___fttol+2
  6317  1569  3000               	movlw	0
  6318  156A  00D0               	movwf	?___fttol+1
  6319  156B  3000               	movlw	0
  6320  156C  00CF               	movwf	?___fttol
  6321  156D  0008               	return
  6322  156E                     l2400:	
  6323  156E  3001               	movlw	1
  6324  156F                     u3385:	
  6325  156F  36DB               	lsrf	___fttol@lval+3,f
  6326  1570  0CDA               	rrf	___fttol@lval+2,f
  6327  1571  0CD9               	rrf	___fttol@lval+1,f
  6328  1572  0CD8               	rrf	___fttol@lval,f
  6329  1573  0B89               	decfsz	9,f
  6330  1574  2D6F               	goto	u3385
  6331  1575  3001               	movlw	1
  6332  1576  00D3               	movwf	??___fttol
  6333  1577  0853               	movf	??___fttol,w
  6334  1578  07DC               	addwf	___fttol@exp1,f
  6335  1579  1903               	btfsc	3,2
  6336  157A  2D95               	goto	l2410
  6337  157B  2D6E               	goto	l2400
  6338  157C                     l2402:	
  6339  157C  3018               	movlw	24
  6340  157D  025C               	subwf	___fttol@exp1,w
  6341  157E  1C03               	skipc
  6342  157F  2D92               	goto	l587
  6343  1580  3000               	movlw	0
  6344  1581  00D2               	movwf	?___fttol+3
  6345  1582  3000               	movlw	0
  6346  1583  00D1               	movwf	?___fttol+2
  6347  1584  3000               	movlw	0
  6348  1585  00D0               	movwf	?___fttol+1
  6349  1586  3000               	movlw	0
  6350  1587  00CF               	movwf	?___fttol
  6351  1588  0008               	return
  6352  1589                     l2408:	
  6353  1589  3001               	movlw	1
  6354  158A                     u3415:	
  6355  158A  35D8               	lslf	___fttol@lval,f
  6356  158B  0DD9               	rlf	___fttol@lval+1,f
  6357  158C  0DDA               	rlf	___fttol@lval+2,f
  6358  158D  0DDB               	rlf	___fttol@lval+3,f
  6359  158E  0B89               	decfsz	9,f
  6360  158F  2D8A               	goto	u3415
  6361  1590  3001               	movlw	1
  6362  1591  02DC               	subwf	___fttol@exp1,f
  6363  1592                     l587:	
  6364  1592  085C               	movf	___fttol@exp1,w
  6365  1593  1D03               	btfss	3,2
  6366  1594  2D89               	goto	l2408
  6367  1595                     l2410:	
  6368  1595  0857               	movf	___fttol@sign1,w
  6369  1596  1903               	btfsc	3,2
  6370  1597  2DA3               	goto	l2414
  6371  1598  09D8               	comf	___fttol@lval,f
  6372  1599  09D9               	comf	___fttol@lval+1,f
  6373  159A  09DA               	comf	___fttol@lval+2,f
  6374  159B  09DB               	comf	___fttol@lval+3,f
  6375  159C  0AD8               	incf	___fttol@lval,f
  6376  159D  1903               	skipnz
  6377  159E  0AD9               	incf	___fttol@lval+1,f
  6378  159F  1903               	skipnz
  6379  15A0  0ADA               	incf	___fttol@lval+2,f
  6380  15A1  1903               	skipnz
  6381  15A2  0ADB               	incf	___fttol@lval+3,f
  6382  15A3                     l2414:	
  6383  15A3  085B               	movf	___fttol@lval+3,w
  6384  15A4  00D2               	movwf	?___fttol+3
  6385  15A5  085A               	movf	___fttol@lval+2,w
  6386  15A6  00D1               	movwf	?___fttol+2
  6387  15A7  0859               	movf	___fttol@lval+1,w
  6388  15A8  00D0               	movwf	?___fttol+1
  6389  15A9  0858               	movf	___fttol@lval,w
  6390  15AA  00CF               	movwf	?___fttol
  6391  15AB  0008               	return
  6392  15AC                     __end_of___fttol:	
  6393                           
  6394                           	psect	text15
  6395  12A6                     __ptext15:	
  6396 ;; *************** function ___ftsub *****************
  6397 ;; Defined at:
  6398 ;;		line 18 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\ftsub.c"
  6399 ;; Parameters:    Size  Location     Type
  6400 ;;  f2              3   67[BANK0 ] float 
  6401 ;;  f1              3   70[BANK0 ] float 
  6402 ;; Auto vars:     Size  Location     Type
  6403 ;;		None
  6404 ;; Return value:  Size  Location     Type
  6405 ;;                  3   67[BANK0 ] float 
  6406 ;; Registers used:
  6407 ;;		wreg, status,2, status,0, pclath, cstack
  6408 ;; Tracked objects:
  6409 ;;		On entry : 0/0
  6410 ;;		On exit  : 0/0
  6411 ;;		Unchanged: 0/0
  6412 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
  6413 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  6414 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  6415 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  6416 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  6417 ;;Total ram usage:        6 bytes
  6418 ;; Hardware stack levels used:    1
  6419 ;; Hardware stack levels required when called:    5
  6420 ;; This function calls:
  6421 ;;		___ftadd
  6422 ;; This function is called by:
  6423 ;;		_sprintf
  6424 ;; This function uses a non-reentrant model
  6425 ;;
  6426                           
  6427                           
  6428                           ;psect for function ___ftsub
  6429  12A6                     ___ftsub:	
  6430                           
  6431                           ;incstack = 0
  6432                           ; Regs used in ___ftsub: [wreg+status,2+status,0+pclath+cstack]
  6433  12A6  0140               	movlb	0	; select bank0
  6434  12A7  0865               	movf	___ftsub@f2+2,w
  6435  12A8  0464               	iorwf	___ftsub@f2+1,w
  6436  12A9  0463               	iorwf	___ftsub@f2,w
  6437  12AA  1903               	skipnz
  6438  12AB  2AAE               	goto	l2372
  6439  12AC  3080               	movlw	128
  6440  12AD  06E5               	xorwf	___ftsub@f2+2,f
  6441  12AE                     l2372:	
  6442  12AE  0866               	movf	___ftsub@f1,w
  6443  12AF  00D6               	movwf	___ftadd@f1
  6444  12B0  0867               	movf	___ftsub@f1+1,w
  6445  12B1  00D7               	movwf	___ftadd@f1+1
  6446  12B2  0868               	movf	___ftsub@f1+2,w
  6447  12B3  00D8               	movwf	___ftadd@f1+2
  6448  12B4  0863               	movf	___ftsub@f2,w
  6449  12B5  00D9               	movwf	___ftadd@f2
  6450  12B6  0864               	movf	___ftsub@f2+1,w
  6451  12B7  00DA               	movwf	___ftadd@f2+1
  6452  12B8  0865               	movf	___ftsub@f2+2,w
  6453  12B9  00DB               	movwf	___ftadd@f2+2
  6454  12BA  318B  233B         	fcall	___ftadd
  6455  12BC  0140               	movlb	0	; select bank0
  6456  12BD  0856               	movf	?___ftadd,w
  6457  12BE  00E3               	movwf	?___ftsub
  6458  12BF  0857               	movf	?___ftadd+1,w
  6459  12C0  00E4               	movwf	?___ftsub+1
  6460  12C1  0858               	movf	?___ftadd+2,w
  6461  12C2  00E5               	movwf	?___ftsub+2
  6462  12C3  0008               	return
  6463  12C4                     __end_of___ftsub:	
  6464                           
  6465                           	psect	text16
  6466  0B3B                     __ptext16:	
  6467 ;; *************** function ___ftadd *****************
  6468 ;; Defined at:
  6469 ;;		line 86 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\ftadd.c"
  6470 ;; Parameters:    Size  Location     Type
  6471 ;;  f1              3   54[BANK0 ] float 
  6472 ;;  f2              3   57[BANK0 ] float 
  6473 ;; Auto vars:     Size  Location     Type
  6474 ;;  exp1            1   66[BANK0 ] unsigned char 
  6475 ;;  exp2            1   65[BANK0 ] unsigned char 
  6476 ;;  sign            1   64[BANK0 ] unsigned char 
  6477 ;; Return value:  Size  Location     Type
  6478 ;;                  3   54[BANK0 ] float 
  6479 ;; Registers used:
  6480 ;;		wreg, status,2, status,0, pclath, cstack
  6481 ;; Tracked objects:
  6482 ;;		On entry : 0/0
  6483 ;;		On exit  : 0/0
  6484 ;;		Unchanged: 0/0
  6485 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
  6486 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  6487 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  6488 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  6489 ;;      Totals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  6490 ;;Total ram usage:       13 bytes
  6491 ;; Hardware stack levels used:    1
  6492 ;; Hardware stack levels required when called:    4
  6493 ;; This function calls:
  6494 ;;		___ftpack
  6495 ;; This function is called by:
  6496 ;;		_main
  6497 ;;		_sprintf
  6498 ;;		___ftsub
  6499 ;; This function uses a non-reentrant model
  6500 ;;
  6501                           
  6502                           
  6503                           ;psect for function ___ftadd
  6504  0B3B                     ___ftadd:	
  6505                           
  6506                           ;incstack = 0
  6507                           ; Regs used in ___ftadd: [wreg+status,2+status,0+pclath+cstack]
  6508  0B3B  0140               	movlb	0	; select bank0
  6509  0B3C  0856               	movf	___ftadd@f1,w
  6510  0B3D  00DC               	movwf	??___ftadd
  6511  0B3E  0857               	movf	___ftadd@f1+1,w
  6512  0B3F  00DD               	movwf	??___ftadd+1
  6513  0B40  0858               	movf	___ftadd@f1+2,w
  6514  0B41  00DE               	movwf	??___ftadd+2
  6515  0B42  1003               	clrc
  6516  0B43  0D5D               	rlf	??___ftadd+1,w
  6517  0B44  0D5E               	rlf	??___ftadd+2,w
  6518  0B45  00DF               	movwf	??___ftadd+3
  6519  0B46  085F               	movf	??___ftadd+3,w
  6520  0B47  00E2               	movwf	___ftadd@exp1
  6521  0B48  0859               	movf	___ftadd@f2,w
  6522  0B49  00DC               	movwf	??___ftadd
  6523  0B4A  085A               	movf	___ftadd@f2+1,w
  6524  0B4B  00DD               	movwf	??___ftadd+1
  6525  0B4C  085B               	movf	___ftadd@f2+2,w
  6526  0B4D  00DE               	movwf	??___ftadd+2
  6527  0B4E  1003               	clrc
  6528  0B4F  0D5D               	rlf	??___ftadd+1,w
  6529  0B50  0D5E               	rlf	??___ftadd+2,w
  6530  0B51  00DF               	movwf	??___ftadd+3
  6531  0B52  085F               	movf	??___ftadd+3,w
  6532  0B53  00E1               	movwf	___ftadd@exp2
  6533  0B54  0862               	movf	___ftadd@exp1,w
  6534  0B55  1903               	btfsc	3,2
  6535  0B56  2B63               	goto	l2000
  6536  0B57  0861               	movf	___ftadd@exp2,w
  6537  0B58  0262               	subwf	___ftadd@exp1,w
  6538  0B59  1803               	skipnc
  6539  0B5A  2B6A               	goto	l2004
  6540  0B5B  0362               	decf	___ftadd@exp1,w
  6541  0B5C  3AFF               	xorlw	255
  6542  0B5D  0761               	addwf	___ftadd@exp2,w
  6543  0B5E  00DC               	movwf	??___ftadd
  6544  0B5F  3019               	movlw	25
  6545  0B60  025C               	subwf	??___ftadd,w
  6546  0B61  1C03               	skipc
  6547  0B62  2B6A               	goto	l2004
  6548  0B63                     l2000:	
  6549  0B63  0859               	movf	___ftadd@f2,w
  6550  0B64  00D6               	movwf	?___ftadd
  6551  0B65  085A               	movf	___ftadd@f2+1,w
  6552  0B66  00D7               	movwf	?___ftadd+1
  6553  0B67  085B               	movf	___ftadd@f2+2,w
  6554  0B68  00D8               	movwf	?___ftadd+2
  6555  0B69  0008               	return
  6556  0B6A                     l2004:	
  6557  0B6A  0861               	movf	___ftadd@exp2,w
  6558  0B6B  1903               	btfsc	3,2
  6559  0B6C  0008               	return
  6560  0B6D  0862               	movf	___ftadd@exp1,w
  6561  0B6E  0261               	subwf	___ftadd@exp2,w
  6562  0B6F  1803               	skipnc
  6563  0B70  2B79               	goto	l2010
  6564  0B71  0361               	decf	___ftadd@exp2,w
  6565  0B72  3AFF               	xorlw	255
  6566  0B73  0762               	addwf	___ftadd@exp1,w
  6567  0B74  00DC               	movwf	??___ftadd
  6568  0B75  3019               	movlw	25
  6569  0B76  025C               	subwf	??___ftadd,w
  6570  0B77  1803               	btfsc	3,0
  6571  0B78  0008               	return
  6572  0B79                     l2010:	
  6573  0B79  3006               	movlw	6
  6574  0B7A  00DC               	movwf	??___ftadd
  6575  0B7B  085C               	movf	??___ftadd,w
  6576  0B7C  00E0               	movwf	___ftadd@sign
  6577  0B7D  1BD8               	btfsc	___ftadd@f1+2,7
  6578  0B7E  17E0               	bsf	___ftadd@sign,7
  6579  0B7F  1BDB               	btfsc	___ftadd@f2+2,7
  6580  0B80  1760               	bsf	___ftadd@sign,6
  6581  0B81  17D7               	bsf	___ftadd@f1+1,7
  6582  0B82  30FF               	movlw	255
  6583  0B83  05D6               	andwf	___ftadd@f1,f
  6584  0B84  30FF               	movlw	255
  6585  0B85  05D7               	andwf	___ftadd@f1+1,f
  6586  0B86  3000               	movlw	0
  6587  0B87  05D8               	andwf	___ftadd@f1+2,f
  6588  0B88  17DA               	bsf	___ftadd@f2+1,7
  6589  0B89  30FF               	movlw	255
  6590  0B8A  05D9               	andwf	___ftadd@f2,f
  6591  0B8B  30FF               	movlw	255
  6592  0B8C  05DA               	andwf	___ftadd@f2+1,f
  6593  0B8D  3000               	movlw	0
  6594  0B8E  05DB               	andwf	___ftadd@f2+2,f
  6595  0B8F  0861               	movf	___ftadd@exp2,w
  6596  0B90  0262               	subwf	___ftadd@exp1,w
  6597  0B91  1803               	skipnc
  6598  0B92  2BB5               	goto	l2032
  6599  0B93                     l2022:	
  6600  0B93  3001               	movlw	1
  6601  0B94                     u2575:	
  6602  0B94  35D9               	lslf	___ftadd@f2,f
  6603  0B95  0DDA               	rlf	___ftadd@f2+1,f
  6604  0B96  0DDB               	rlf	___ftadd@f2+2,f
  6605  0B97  0B89               	decfsz	9,f
  6606  0B98  2B94               	goto	u2575
  6607  0B99  3001               	movlw	1
  6608  0B9A  02E1               	subwf	___ftadd@exp2,f
  6609  0B9B  0861               	movf	___ftadd@exp2,w
  6610  0B9C  0662               	xorwf	___ftadd@exp1,w
  6611  0B9D  1903               	skipnz
  6612  0B9E  2BB0               	goto	l2030
  6613  0B9F  3001               	movlw	1
  6614  0BA0  02E0               	subwf	___ftadd@sign,f
  6615  0BA1  0860               	movf	___ftadd@sign,w
  6616  0BA2  3907               	andlw	7
  6617  0BA3  1903               	btfsc	3,2
  6618  0BA4  2BB0               	goto	l2030
  6619  0BA5  2B93               	goto	l2022
  6620  0BA6                     l2028:	
  6621  0BA6  3001               	movlw	1
  6622  0BA7                     u2605:	
  6623  0BA7  36D8               	lsrf	___ftadd@f1+2,f
  6624  0BA8  0CD7               	rrf	___ftadd@f1+1,f
  6625  0BA9  0CD6               	rrf	___ftadd@f1,f
  6626  0BAA  0B89               	decfsz	9,f
  6627  0BAB  2BA7               	goto	u2605
  6628  0BAC  3001               	movlw	1
  6629  0BAD  00DC               	movwf	??___ftadd
  6630  0BAE  085C               	movf	??___ftadd,w
  6631  0BAF  07E2               	addwf	___ftadd@exp1,f
  6632  0BB0                     l2030:	
  6633  0BB0  0862               	movf	___ftadd@exp1,w
  6634  0BB1  0661               	xorwf	___ftadd@exp2,w
  6635  0BB2  1903               	btfsc	3,2
  6636  0BB3  2BDA               	goto	l510
  6637  0BB4  2BA6               	goto	l2028
  6638  0BB5                     l2032:	
  6639  0BB5  0862               	movf	___ftadd@exp1,w
  6640  0BB6  0261               	subwf	___ftadd@exp2,w
  6641  0BB7  1803               	skipnc
  6642  0BB8  2BDA               	goto	l510
  6643  0BB9                     l2034:	
  6644  0BB9  3001               	movlw	1
  6645  0BBA                     u2635:	
  6646  0BBA  35D6               	lslf	___ftadd@f1,f
  6647  0BBB  0DD7               	rlf	___ftadd@f1+1,f
  6648  0BBC  0DD8               	rlf	___ftadd@f1+2,f
  6649  0BBD  0B89               	decfsz	9,f
  6650  0BBE  2BBA               	goto	u2635
  6651  0BBF  3001               	movlw	1
  6652  0BC0  02E2               	subwf	___ftadd@exp1,f
  6653  0BC1  0861               	movf	___ftadd@exp2,w
  6654  0BC2  0662               	xorwf	___ftadd@exp1,w
  6655  0BC3  1903               	skipnz
  6656  0BC4  2BD6               	goto	l2042
  6657  0BC5  3001               	movlw	1
  6658  0BC6  02E0               	subwf	___ftadd@sign,f
  6659  0BC7  0860               	movf	___ftadd@sign,w
  6660  0BC8  3907               	andlw	7
  6661  0BC9  1903               	btfsc	3,2
  6662  0BCA  2BD6               	goto	l2042
  6663  0BCB  2BB9               	goto	l2034
  6664  0BCC                     l2040:	
  6665  0BCC  3001               	movlw	1
  6666  0BCD                     u2665:	
  6667  0BCD  36DB               	lsrf	___ftadd@f2+2,f
  6668  0BCE  0CDA               	rrf	___ftadd@f2+1,f
  6669  0BCF  0CD9               	rrf	___ftadd@f2,f
  6670  0BD0  0B89               	decfsz	9,f
  6671  0BD1  2BCD               	goto	u2665
  6672  0BD2  3001               	movlw	1
  6673  0BD3  00DC               	movwf	??___ftadd
  6674  0BD4  085C               	movf	??___ftadd,w
  6675  0BD5  07E1               	addwf	___ftadd@exp2,f
  6676  0BD6                     l2042:	
  6677  0BD6  0862               	movf	___ftadd@exp1,w
  6678  0BD7  0661               	xorwf	___ftadd@exp2,w
  6679  0BD8  1D03               	skipz
  6680  0BD9  2BCC               	goto	l2040
  6681  0BDA                     l510:	
  6682  0BDA  1FE0               	btfss	___ftadd@sign,7
  6683  0BDB  2BEC               	goto	l2046
  6684  0BDC  30FF               	movlw	255
  6685  0BDD  06D6               	xorwf	___ftadd@f1,f
  6686  0BDE  30FF               	movlw	255
  6687  0BDF  06D7               	xorwf	___ftadd@f1+1,f
  6688  0BE0  30FF               	movlw	255
  6689  0BE1  06D8               	xorwf	___ftadd@f1+2,f
  6690  0BE2  3001               	movlw	1
  6691  0BE3  07D6               	addwf	___ftadd@f1,f
  6692  0BE4  3000               	movlw	0
  6693  0BE5  1803               	skipnc
  6694  0BE6  3001               	movlw	1
  6695  0BE7  07D7               	addwf	___ftadd@f1+1,f
  6696  0BE8  3000               	movlw	0
  6697  0BE9  1803               	skipnc
  6698  0BEA  3001               	movlw	1
  6699  0BEB  07D8               	addwf	___ftadd@f1+2,f
  6700  0BEC                     l2046:	
  6701  0BEC  1F60               	btfss	___ftadd@sign,6
  6702  0BED  2BFE               	goto	l2050
  6703  0BEE  30FF               	movlw	255
  6704  0BEF  06D9               	xorwf	___ftadd@f2,f
  6705  0BF0  30FF               	movlw	255
  6706  0BF1  06DA               	xorwf	___ftadd@f2+1,f
  6707  0BF2  30FF               	movlw	255
  6708  0BF3  06DB               	xorwf	___ftadd@f2+2,f
  6709  0BF4  3001               	movlw	1
  6710  0BF5  07D9               	addwf	___ftadd@f2,f
  6711  0BF6  3000               	movlw	0
  6712  0BF7  1803               	skipnc
  6713  0BF8  3001               	movlw	1
  6714  0BF9  07DA               	addwf	___ftadd@f2+1,f
  6715  0BFA  3000               	movlw	0
  6716  0BFB  1803               	skipnc
  6717  0BFC  3001               	movlw	1
  6718  0BFD  07DB               	addwf	___ftadd@f2+2,f
  6719  0BFE                     l2050:	
  6720  0BFE  01E0               	clrf	___ftadd@sign
  6721  0BFF  0856               	movf	___ftadd@f1,w
  6722  0C00  07D9               	addwf	___ftadd@f2,f
  6723  0C01  0857               	movf	___ftadd@f1+1,w
  6724  0C02  3DDA               	addwfc	___ftadd@f2+1,f
  6725  0C03  0858               	movf	___ftadd@f1+2,w
  6726  0C04  3DDB               	addwfc	___ftadd@f2+2,f
  6727  0C05  1FDB               	btfss	___ftadd@f2+2,7
  6728  0C06  2C19               	goto	l2060
  6729  0C07  30FF               	movlw	255
  6730  0C08  06D9               	xorwf	___ftadd@f2,f
  6731  0C09  30FF               	movlw	255
  6732  0C0A  06DA               	xorwf	___ftadd@f2+1,f
  6733  0C0B  30FF               	movlw	255
  6734  0C0C  06DB               	xorwf	___ftadd@f2+2,f
  6735  0C0D  3001               	movlw	1
  6736  0C0E  07D9               	addwf	___ftadd@f2,f
  6737  0C0F  3000               	movlw	0
  6738  0C10  1803               	skipnc
  6739  0C11  3001               	movlw	1
  6740  0C12  07DA               	addwf	___ftadd@f2+1,f
  6741  0C13  3000               	movlw	0
  6742  0C14  1803               	skipnc
  6743  0C15  3001               	movlw	1
  6744  0C16  07DB               	addwf	___ftadd@f2+2,f
  6745  0C17  01E0               	clrf	___ftadd@sign
  6746  0C18  0AE0               	incf	___ftadd@sign,f
  6747  0C19                     l2060:	
  6748  0C19  0859               	movf	___ftadd@f2,w
  6749  0C1A  00A0               	movwf	___ftpack@arg
  6750  0C1B  085A               	movf	___ftadd@f2+1,w
  6751  0C1C  00A1               	movwf	___ftpack@arg+1
  6752  0C1D  085B               	movf	___ftadd@f2+2,w
  6753  0C1E  00A2               	movwf	___ftpack@arg+2
  6754  0C1F  0862               	movf	___ftadd@exp1,w
  6755  0C20  00DC               	movwf	??___ftadd
  6756  0C21  085C               	movf	??___ftadd,w
  6757  0C22  00A3               	movwf	___ftpack@exp
  6758  0C23  0860               	movf	___ftadd@sign,w
  6759  0C24  00DD               	movwf	??___ftadd+1
  6760  0C25  085D               	movf	??___ftadd+1,w
  6761  0C26  00A4               	movwf	___ftpack@sign
  6762  0C27  3188  2016         	fcall	___ftpack
  6763  0C29  0140               	movlb	0	; select bank0
  6764  0C2A  0820               	movf	?___ftpack,w
  6765  0C2B  00D6               	movwf	?___ftadd
  6766  0C2C  0821               	movf	?___ftpack+1,w
  6767  0C2D  00D7               	movwf	?___ftadd+1
  6768  0C2E  0822               	movf	?___ftpack+2,w
  6769  0C2F  00D8               	movwf	?___ftadd+2
  6770  0C30  0008               	return
  6771  0C31                     __end_of___ftadd:	
  6772                           
  6773                           	psect	text17
  6774  1272                     __ptext17:	
  6775 ;; *************** function ___ftneg *****************
  6776 ;; Defined at:
  6777 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\ftneg.c"
  6778 ;; Parameters:    Size  Location     Type
  6779 ;;  f1              3   14[BANK0 ] float 
  6780 ;; Auto vars:     Size  Location     Type
  6781 ;;		None
  6782 ;; Return value:  Size  Location     Type
  6783 ;;                  3   14[BANK0 ] float 
  6784 ;; Registers used:
  6785 ;;		wreg
  6786 ;; Tracked objects:
  6787 ;;		On entry : 0/0
  6788 ;;		On exit  : 0/0
  6789 ;;		Unchanged: 0/0
  6790 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
  6791 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  6792 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  6793 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  6794 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  6795 ;;Total ram usage:        3 bytes
  6796 ;; Hardware stack levels used:    1
  6797 ;; Hardware stack levels required when called:    3
  6798 ;; This function calls:
  6799 ;;		Nothing
  6800 ;; This function is called by:
  6801 ;;		_main
  6802 ;;		_sprintf
  6803 ;; This function uses a non-reentrant model
  6804 ;;
  6805                           
  6806                           
  6807                           ;psect for function ___ftneg
  6808  1272                     ___ftneg:	
  6809                           
  6810                           ;incstack = 0
  6811                           ; Regs used in ___ftneg: [wreg]
  6812  1272  0140               	movlb	0	; select bank0
  6813  1273  0830               	movf	___ftneg@f1+2,w
  6814  1274  042F               	iorwf	___ftneg@f1+1,w
  6815  1275  042E               	iorwf	___ftneg@f1,w
  6816  1276  1903               	skipnz
  6817  1277  0008               	return
  6818  1278  3080               	movlw	128
  6819  1279  06B0               	xorwf	___ftneg@f1+2,f
  6820  127A  0008               	return
  6821  127B                     __end_of___ftneg:	
  6822                           
  6823                           	psect	text18
  6824  13BB                     __ptext18:	
  6825 ;; *************** function ___ftge *****************
  6826 ;; Defined at:
  6827 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\ftge.c"
  6828 ;; Parameters:    Size  Location     Type
  6829 ;;  ff1             3    0[BANK0 ] float 
  6830 ;;  ff2             3    3[BANK0 ] float 
  6831 ;; Auto vars:     Size  Location     Type
  6832 ;;		None
  6833 ;; Return value:  Size  Location     Type
  6834 ;;		None               void
  6835 ;; Registers used:
  6836 ;;		wreg, status,2, status,0
  6837 ;; Tracked objects:
  6838 ;;		On entry : 0/0
  6839 ;;		On exit  : 0/0
  6840 ;;		Unchanged: 0/0
  6841 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
  6842 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  6843 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  6844 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  6845 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  6846 ;;Total ram usage:        9 bytes
  6847 ;; Hardware stack levels used:    1
  6848 ;; Hardware stack levels required when called:    3
  6849 ;; This function calls:
  6850 ;;		Nothing
  6851 ;; This function is called by:
  6852 ;;		_main
  6853 ;;		_sprintf
  6854 ;; This function uses a non-reentrant model
  6855 ;;
  6856                           
  6857                           
  6858                           ;psect for function ___ftge
  6859  13BB                     ___ftge:	
  6860                           
  6861                           ;incstack = 0
  6862                           ; Regs used in ___ftge: [wreg+status,2+status,0]
  6863  13BB  0140               	movlb	0	; select bank0
  6864  13BC  1FA2               	btfss	___ftge@ff1+2,7
  6865  13BD  2BD2               	goto	l2344
  6866  13BE  0920               	comf	___ftge@ff1,w
  6867  13BF  00A6               	movwf	??___ftge
  6868  13C0  0921               	comf	___ftge@ff1+1,w
  6869  13C1  00A7               	movwf	??___ftge+1
  6870  13C2  0922               	comf	___ftge@ff1+2,w
  6871  13C3  00A8               	movwf	??___ftge+2
  6872  13C4  0AA6               	incf	??___ftge,f
  6873  13C5  1903               	skipnz
  6874  13C6  0AA7               	incf	??___ftge+1,f
  6875  13C7  1903               	skipnz
  6876  13C8  0AA8               	incf	??___ftge+2,f
  6877  13C9  3000               	movlw	0
  6878  13CA  0726               	addwf	??___ftge,w
  6879  13CB  00A0               	movwf	___ftge@ff1
  6880  13CC  3000               	movlw	0
  6881  13CD  3D27               	addwfc	??___ftge+1,w
  6882  13CE  00A1               	movwf	___ftge@ff1+1
  6883  13CF  3080               	movlw	128
  6884  13D0  3D28               	addwfc	??___ftge+2,w
  6885  13D1  00A2               	movwf	___ftge@ff1+2
  6886  13D2                     l2344:	
  6887  13D2  1FA5               	btfss	___ftge@ff2+2,7
  6888  13D3  2BE8               	goto	l2348
  6889  13D4  0923               	comf	___ftge@ff2,w
  6890  13D5  00A6               	movwf	??___ftge
  6891  13D6  0924               	comf	___ftge@ff2+1,w
  6892  13D7  00A7               	movwf	??___ftge+1
  6893  13D8  0925               	comf	___ftge@ff2+2,w
  6894  13D9  00A8               	movwf	??___ftge+2
  6895  13DA  0AA6               	incf	??___ftge,f
  6896  13DB  1903               	skipnz
  6897  13DC  0AA7               	incf	??___ftge+1,f
  6898  13DD  1903               	skipnz
  6899  13DE  0AA8               	incf	??___ftge+2,f
  6900  13DF  3000               	movlw	0
  6901  13E0  0726               	addwf	??___ftge,w
  6902  13E1  00A3               	movwf	___ftge@ff2
  6903  13E2  3000               	movlw	0
  6904  13E3  3D27               	addwfc	??___ftge+1,w
  6905  13E4  00A4               	movwf	___ftge@ff2+1
  6906  13E5  3080               	movlw	128
  6907  13E6  3D28               	addwfc	??___ftge+2,w
  6908  13E7  00A5               	movwf	___ftge@ff2+2
  6909  13E8                     l2348:	
  6910  13E8  3080               	movlw	128
  6911  13E9  06A2               	xorwf	___ftge@ff1+2,f
  6912  13EA  3080               	movlw	128
  6913  13EB  06A5               	xorwf	___ftge@ff2+2,f
  6914  13EC  0825               	movf	___ftge@ff2+2,w
  6915  13ED  0222               	subwf	___ftge@ff1+2,w
  6916  13EE  1D03               	skipz
  6917  13EF  0008               	return
  6918  13F0  0824               	movf	___ftge@ff2+1,w
  6919  13F1  0221               	subwf	___ftge@ff1+1,w
  6920  13F2  1D03               	skipz
  6921  13F3  0008               	return
  6922  13F4  0823               	movf	___ftge@ff2,w
  6923  13F5  0220               	subwf	___ftge@ff1,w
  6924  13F6  0008               	return
  6925  13F7                     __end_of___ftge:	
  6926                           
  6927                           	psect	text19
  6928  0801                     __ptext19:	
  6929 ;; *************** function ___lwtoft *****************
  6930 ;; Defined at:
  6931 ;;		line 28 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\lwtoft.c"
  6932 ;; Parameters:    Size  Location     Type
  6933 ;;  c               2    8[BANK0 ] unsigned int 
  6934 ;; Auto vars:     Size  Location     Type
  6935 ;;		None
  6936 ;; Return value:  Size  Location     Type
  6937 ;;                  3    8[BANK0 ] float 
  6938 ;; Registers used:
  6939 ;;		wreg, status,2, status,0, pclath, cstack
  6940 ;; Tracked objects:
  6941 ;;		On entry : 0/0
  6942 ;;		On exit  : 0/0
  6943 ;;		Unchanged: 0/0
  6944 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
  6945 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  6946 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  6947 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  6948 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  6949 ;;Total ram usage:        4 bytes
  6950 ;; Hardware stack levels used:    1
  6951 ;; Hardware stack levels required when called:    4
  6952 ;; This function calls:
  6953 ;;		___ftpack
  6954 ;; This function is called by:
  6955 ;;		_main
  6956 ;; This function uses a non-reentrant model
  6957 ;;
  6958                           
  6959                           
  6960                           ;psect for function ___lwtoft
  6961  0801                     ___lwtoft:	
  6962                           
  6963                           ;incstack = 0
  6964                           ; Regs used in ___lwtoft: [wreg+status,2+status,0+pclath+cstack]
  6965  0801  0140               	movlb	0	; select bank0
  6966  0802  0828               	movf	___lwtoft@c,w
  6967  0803  00A0               	movwf	___ftpack@arg
  6968  0804  0829               	movf	___lwtoft@c+1,w
  6969  0805  00A1               	movwf	___ftpack@arg+1
  6970  0806  01A2               	clrf	___ftpack@arg+2
  6971  0807  308E               	movlw	142
  6972  0808  00AB               	movwf	??___lwtoft
  6973  0809  082B               	movf	??___lwtoft,w
  6974  080A  00A3               	movwf	___ftpack@exp
  6975  080B  01A4               	clrf	___ftpack@sign
  6976  080C  3188  2016         	fcall	___ftpack
  6977  080E  0140               	movlb	0	; select bank0
  6978  080F  0820               	movf	?___ftpack,w
  6979  0810  00A8               	movwf	?___lwtoft
  6980  0811  0821               	movf	?___ftpack+1,w
  6981  0812  00A9               	movwf	?___lwtoft+1
  6982  0813  0822               	movf	?___ftpack+2,w
  6983  0814  00AA               	movwf	?___lwtoft+2
  6984  0815  0008               	return
  6985  0816                     __end_of___lwtoft:	
  6986                           
  6987                           	psect	text20
  6988  087B                     __ptext20:	
  6989 ;; *************** function ___ftdiv *****************
  6990 ;; Defined at:
  6991 ;;		line 56 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\ftdiv.c"
  6992 ;; Parameters:    Size  Location     Type
  6993 ;;  f2              3   38[BANK0 ] float 
  6994 ;;  f1              3   41[BANK0 ] float 
  6995 ;; Auto vars:     Size  Location     Type
  6996 ;;  f3              3   49[BANK0 ] float 
  6997 ;;  sign            1   53[BANK0 ] unsigned char 
  6998 ;;  exp             1   52[BANK0 ] unsigned char 
  6999 ;;  cntr            1   48[BANK0 ] unsigned char 
  7000 ;; Return value:  Size  Location     Type
  7001 ;;                  3   38[BANK0 ] float 
  7002 ;; Registers used:
  7003 ;;		wreg, status,2, status,0, pclath, cstack
  7004 ;; Tracked objects:
  7005 ;;		On entry : 0/0
  7006 ;;		On exit  : 0/0
  7007 ;;		Unchanged: 0/0
  7008 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
  7009 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  7010 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  7011 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  7012 ;;      Totals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  7013 ;;Total ram usage:       16 bytes
  7014 ;; Hardware stack levels used:    1
  7015 ;; Hardware stack levels required when called:    4
  7016 ;; This function calls:
  7017 ;;		___ftpack
  7018 ;; This function is called by:
  7019 ;;		_main
  7020 ;; This function uses a non-reentrant model
  7021 ;;
  7022                           
  7023                           
  7024                           ;psect for function ___ftdiv
  7025  087B                     ___ftdiv:	
  7026                           
  7027                           ;incstack = 0
  7028                           ; Regs used in ___ftdiv: [wreg+status,2+status,0+pclath+cstack]
  7029  087B  0140               	movlb	0	; select bank0
  7030  087C  0849               	movf	___ftdiv@f1,w
  7031  087D  00CC               	movwf	??___ftdiv
  7032  087E  084A               	movf	___ftdiv@f1+1,w
  7033  087F  00CD               	movwf	??___ftdiv+1
  7034  0880  084B               	movf	___ftdiv@f1+2,w
  7035  0881  00CE               	movwf	??___ftdiv+2
  7036  0882  1003               	clrc
  7037  0883  0D4D               	rlf	??___ftdiv+1,w
  7038  0884  0D4E               	rlf	??___ftdiv+2,w
  7039  0885  00CF               	movwf	??___ftdiv+3
  7040  0886  084F               	movf	??___ftdiv+3,w
  7041  0887  00D4               	movwf	___ftdiv@exp
  7042  0888  0854               	movf	___ftdiv@exp,w
  7043  0889  1D03               	btfss	3,2
  7044  088A  2892               	goto	l2844
  7045  088B  3000               	movlw	0
  7046  088C  00C6               	movwf	?___ftdiv
  7047  088D  3000               	movlw	0
  7048  088E  00C7               	movwf	?___ftdiv+1
  7049  088F  3000               	movlw	0
  7050  0890  00C8               	movwf	?___ftdiv+2
  7051  0891  0008               	return
  7052  0892                     l2844:	
  7053  0892  0846               	movf	___ftdiv@f2,w
  7054  0893  00CC               	movwf	??___ftdiv
  7055  0894  0847               	movf	___ftdiv@f2+1,w
  7056  0895  00CD               	movwf	??___ftdiv+1
  7057  0896  0848               	movf	___ftdiv@f2+2,w
  7058  0897  00CE               	movwf	??___ftdiv+2
  7059  0898  1003               	clrc
  7060  0899  0D4D               	rlf	??___ftdiv+1,w
  7061  089A  0D4E               	rlf	??___ftdiv+2,w
  7062  089B  00CF               	movwf	??___ftdiv+3
  7063  089C  084F               	movf	??___ftdiv+3,w
  7064  089D  00D5               	movwf	___ftdiv@sign
  7065  089E  0855               	movf	___ftdiv@sign,w
  7066  089F  1D03               	btfss	3,2
  7067  08A0  28A8               	goto	l2850
  7068  08A1  3000               	movlw	0
  7069  08A2  00C6               	movwf	?___ftdiv
  7070  08A3  3000               	movlw	0
  7071  08A4  00C7               	movwf	?___ftdiv+1
  7072  08A5  3000               	movlw	0
  7073  08A6  00C8               	movwf	?___ftdiv+2
  7074  08A7  0008               	return
  7075  08A8                     l2850:	
  7076  08A8  3000               	movlw	0
  7077  08A9  00D1               	movwf	___ftdiv@f3
  7078  08AA  3000               	movlw	0
  7079  08AB  00D2               	movwf	___ftdiv@f3+1
  7080  08AC  3000               	movlw	0
  7081  08AD  00D3               	movwf	___ftdiv@f3+2
  7082  08AE  3089               	movlw	137
  7083  08AF  0755               	addwf	___ftdiv@sign,w
  7084  08B0  00CC               	movwf	??___ftdiv
  7085  08B1  084C               	movf	??___ftdiv,w
  7086  08B2  02D4               	subwf	___ftdiv@exp,f
  7087  08B3  0849               	movf	___ftdiv@f1,w
  7088  08B4  00CC               	movwf	??___ftdiv
  7089  08B5  084A               	movf	___ftdiv@f1+1,w
  7090  08B6  00CD               	movwf	??___ftdiv+1
  7091  08B7  084B               	movf	___ftdiv@f1+2,w
  7092  08B8  00CE               	movwf	??___ftdiv+2
  7093  08B9  3010               	movlw	16
  7094  08BA                     u4145:	
  7095  08BA  36CE               	lsrf	??___ftdiv+2,f
  7096  08BB  0CCD               	rrf	??___ftdiv+1,f
  7097  08BC  0CCC               	rrf	??___ftdiv,f
  7098  08BD  0B89               	decfsz	9,f
  7099  08BE  28BA               	goto	u4145
  7100  08BF  084C               	movf	??___ftdiv,w
  7101  08C0  00CF               	movwf	??___ftdiv+3
  7102  08C1  084F               	movf	??___ftdiv+3,w
  7103  08C2  00D5               	movwf	___ftdiv@sign
  7104  08C3  0846               	movf	___ftdiv@f2,w
  7105  08C4  00CC               	movwf	??___ftdiv
  7106  08C5  0847               	movf	___ftdiv@f2+1,w
  7107  08C6  00CD               	movwf	??___ftdiv+1
  7108  08C7  0848               	movf	___ftdiv@f2+2,w
  7109  08C8  00CE               	movwf	??___ftdiv+2
  7110  08C9  3010               	movlw	16
  7111  08CA                     u4155:	
  7112  08CA  36CE               	lsrf	??___ftdiv+2,f
  7113  08CB  0CCD               	rrf	??___ftdiv+1,f
  7114  08CC  0CCC               	rrf	??___ftdiv,f
  7115  08CD  0B89               	decfsz	9,f
  7116  08CE  28CA               	goto	u4155
  7117  08CF  084C               	movf	??___ftdiv,w
  7118  08D0  00CF               	movwf	??___ftdiv+3
  7119  08D1  084F               	movf	??___ftdiv+3,w
  7120  08D2  06D5               	xorwf	___ftdiv@sign,f
  7121  08D3  3080               	movlw	128
  7122  08D4  00CC               	movwf	??___ftdiv
  7123  08D5  084C               	movf	??___ftdiv,w
  7124  08D6  05D5               	andwf	___ftdiv@sign,f
  7125  08D7  17CA               	bsf	___ftdiv@f1+1,7
  7126  08D8  30FF               	movlw	255
  7127  08D9  05C9               	andwf	___ftdiv@f1,f
  7128  08DA  30FF               	movlw	255
  7129  08DB  05CA               	andwf	___ftdiv@f1+1,f
  7130  08DC  3000               	movlw	0
  7131  08DD  05CB               	andwf	___ftdiv@f1+2,f
  7132  08DE  17C7               	bsf	___ftdiv@f2+1,7
  7133  08DF  30FF               	movlw	255
  7134  08E0  05C6               	andwf	___ftdiv@f2,f
  7135  08E1  30FF               	movlw	255
  7136  08E2  05C7               	andwf	___ftdiv@f2+1,f
  7137  08E3  3000               	movlw	0
  7138  08E4  05C8               	andwf	___ftdiv@f2+2,f
  7139  08E5  3018               	movlw	24
  7140  08E6  00CC               	movwf	??___ftdiv
  7141  08E7  084C               	movf	??___ftdiv,w
  7142  08E8  00D0               	movwf	___ftdiv@cntr
  7143  08E9                     l2864:	
  7144  08E9  3001               	movlw	1
  7145  08EA                     u4165:	
  7146  08EA  35D1               	lslf	___ftdiv@f3,f
  7147  08EB  0DD2               	rlf	___ftdiv@f3+1,f
  7148  08EC  0DD3               	rlf	___ftdiv@f3+2,f
  7149  08ED  0B89               	decfsz	9,f
  7150  08EE  28EA               	goto	u4165
  7151  08EF  0848               	movf	___ftdiv@f2+2,w
  7152  08F0  024B               	subwf	___ftdiv@f1+2,w
  7153  08F1  1D03               	skipz
  7154  08F2  28F9               	goto	u4175
  7155  08F3  0847               	movf	___ftdiv@f2+1,w
  7156  08F4  024A               	subwf	___ftdiv@f1+1,w
  7157  08F5  1D03               	skipz
  7158  08F6  28F9               	goto	u4175
  7159  08F7  0846               	movf	___ftdiv@f2,w
  7160  08F8  0249               	subwf	___ftdiv@f1,w
  7161  08F9                     u4175:	
  7162  08F9  1C03               	skipc
  7163  08FA  2902               	goto	l2872
  7164  08FB  0846               	movf	___ftdiv@f2,w
  7165  08FC  02C9               	subwf	___ftdiv@f1,f
  7166  08FD  0847               	movf	___ftdiv@f2+1,w
  7167  08FE  3BCA               	subwfb	___ftdiv@f1+1,f
  7168  08FF  0848               	movf	___ftdiv@f2+2,w
  7169  0900  3BCB               	subwfb	___ftdiv@f1+2,f
  7170  0901  1451               	bsf	___ftdiv@f3,0
  7171  0902                     l2872:	
  7172  0902  3001               	movlw	1
  7173  0903                     u4185:	
  7174  0903  35C9               	lslf	___ftdiv@f1,f
  7175  0904  0DCA               	rlf	___ftdiv@f1+1,f
  7176  0905  0DCB               	rlf	___ftdiv@f1+2,f
  7177  0906  0B89               	decfsz	9,f
  7178  0907  2903               	goto	u4185
  7179  0908  3001               	movlw	1
  7180  0909  02D0               	subwf	___ftdiv@cntr,f
  7181  090A  1D03               	btfss	3,2
  7182  090B  28E9               	goto	l2864
  7183  090C  0851               	movf	___ftdiv@f3,w
  7184  090D  00A0               	movwf	___ftpack@arg
  7185  090E  0852               	movf	___ftdiv@f3+1,w
  7186  090F  00A1               	movwf	___ftpack@arg+1
  7187  0910  0853               	movf	___ftdiv@f3+2,w
  7188  0911  00A2               	movwf	___ftpack@arg+2
  7189  0912  0854               	movf	___ftdiv@exp,w
  7190  0913  00CC               	movwf	??___ftdiv
  7191  0914  084C               	movf	??___ftdiv,w
  7192  0915  00A3               	movwf	___ftpack@exp
  7193  0916  0855               	movf	___ftdiv@sign,w
  7194  0917  00CD               	movwf	??___ftdiv+1
  7195  0918  084D               	movf	??___ftdiv+1,w
  7196  0919  00A4               	movwf	___ftpack@sign
  7197  091A  3188  2016         	fcall	___ftpack
  7198  091C  0140               	movlb	0	; select bank0
  7199  091D  0820               	movf	?___ftpack,w
  7200  091E  00C6               	movwf	?___ftdiv
  7201  091F  0821               	movf	?___ftpack+1,w
  7202  0920  00C7               	movwf	?___ftdiv+1
  7203  0921  0822               	movf	?___ftpack+2,w
  7204  0922  00C8               	movwf	?___ftdiv+2
  7205  0923  0008               	return
  7206  0924                     __end_of___ftdiv:	
  7207                           
  7208                           	psect	text21
  7209  12C4                     __ptext21:	
  7210 ;; *************** function ___awtoft *****************
  7211 ;; Defined at:
  7212 ;;		line 32 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\awtoft.c"
  7213 ;; Parameters:    Size  Location     Type
  7214 ;;  c               2    8[BANK0 ] int 
  7215 ;; Auto vars:     Size  Location     Type
  7216 ;;  sign            1   13[BANK0 ] unsigned char 
  7217 ;; Return value:  Size  Location     Type
  7218 ;;                  3    8[BANK0 ] float 
  7219 ;; Registers used:
  7220 ;;		wreg, status,2, status,0, pclath, cstack
  7221 ;; Tracked objects:
  7222 ;;		On entry : 0/0
  7223 ;;		On exit  : 0/0
  7224 ;;		Unchanged: 0/0
  7225 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
  7226 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  7227 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  7228 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  7229 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  7230 ;;Total ram usage:        6 bytes
  7231 ;; Hardware stack levels used:    1
  7232 ;; Hardware stack levels required when called:    4
  7233 ;; This function calls:
  7234 ;;		___ftpack
  7235 ;; This function is called by:
  7236 ;;		_main
  7237 ;; This function uses a non-reentrant model
  7238 ;;
  7239                           
  7240                           
  7241                           ;psect for function ___awtoft
  7242  12C4                     ___awtoft:	
  7243                           
  7244                           ;incstack = 0
  7245                           ; Regs used in ___awtoft: [wreg+status,2+status,0+pclath+cstack]
  7246  12C4  0140               	movlb	0	; select bank0
  7247  12C5  01AD               	clrf	___awtoft@sign
  7248  12C6  1FA9               	btfss	___awtoft@c+1,7
  7249  12C7  2ACF               	goto	l2834
  7250  12C8  09A8               	comf	___awtoft@c,f
  7251  12C9  09A9               	comf	___awtoft@c+1,f
  7252  12CA  0AA8               	incf	___awtoft@c,f
  7253  12CB  1903               	skipnz
  7254  12CC  0AA9               	incf	___awtoft@c+1,f
  7255  12CD  01AD               	clrf	___awtoft@sign
  7256  12CE  0AAD               	incf	___awtoft@sign,f
  7257  12CF                     l2834:	
  7258  12CF  0828               	movf	___awtoft@c,w
  7259  12D0  00A0               	movwf	___ftpack@arg
  7260  12D1  0829               	movf	___awtoft@c+1,w
  7261  12D2  00A1               	movwf	___ftpack@arg+1
  7262  12D3  01A2               	clrf	___ftpack@arg+2
  7263  12D4  308E               	movlw	142
  7264  12D5  00AB               	movwf	??___awtoft
  7265  12D6  082B               	movf	??___awtoft,w
  7266  12D7  00A3               	movwf	___ftpack@exp
  7267  12D8  082D               	movf	___awtoft@sign,w
  7268  12D9  00AC               	movwf	??___awtoft+1
  7269  12DA  082C               	movf	??___awtoft+1,w
  7270  12DB  00A4               	movwf	___ftpack@sign
  7271  12DC  3188  2016         	fcall	___ftpack
  7272  12DE  0140               	movlb	0	; select bank0
  7273  12DF  0820               	movf	?___ftpack,w
  7274  12E0  00A8               	movwf	?___awtoft
  7275  12E1  0821               	movf	?___ftpack+1,w
  7276  12E2  00A9               	movwf	?___awtoft+1
  7277  12E3  0822               	movf	?___ftpack+2,w
  7278  12E4  00AA               	movwf	?___awtoft+2
  7279  12E5  0008               	return
  7280  12E6                     __end_of___awtoft:	
  7281                           
  7282                           	psect	text22
  7283  0816                     __ptext22:	
  7284 ;; *************** function ___ftpack *****************
  7285 ;; Defined at:
  7286 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\float.c"
  7287 ;; Parameters:    Size  Location     Type
  7288 ;;  arg             3    0[BANK0 ] unsigned um
  7289 ;;  exp             1    3[BANK0 ] unsigned char 
  7290 ;;  sign            1    4[BANK0 ] unsigned char 
  7291 ;; Auto vars:     Size  Location     Type
  7292 ;;		None
  7293 ;; Return value:  Size  Location     Type
  7294 ;;                  3    0[BANK0 ] float 
  7295 ;; Registers used:
  7296 ;;		wreg, status,2, status,0
  7297 ;; Tracked objects:
  7298 ;;		On entry : 0/0
  7299 ;;		On exit  : 0/0
  7300 ;;		Unchanged: 0/0
  7301 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
  7302 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  7303 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  7304 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  7305 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  7306 ;;Total ram usage:        8 bytes
  7307 ;; Hardware stack levels used:    1
  7308 ;; Hardware stack levels required when called:    3
  7309 ;; This function calls:
  7310 ;;		Nothing
  7311 ;; This function is called by:
  7312 ;;		___awtoft
  7313 ;;		___ftadd
  7314 ;;		___ftdiv
  7315 ;;		___ftmul
  7316 ;;		___lltoft
  7317 ;;		___lwtoft
  7318 ;; This function uses a non-reentrant model
  7319 ;;
  7320                           
  7321                           
  7322                           ;psect for function ___ftpack
  7323  0816                     ___ftpack:	
  7324                           
  7325                           ;incstack = 0
  7326                           ; Regs used in ___ftpack: [wreg+status,2+status,0]
  7327  0816  0140               	movlb	0	; select bank0
  7328  0817  0823               	movf	___ftpack@exp,w
  7329  0818  1903               	btfsc	3,2
  7330  0819  281F               	goto	l1870
  7331  081A  0822               	movf	___ftpack@arg+2,w
  7332  081B  0421               	iorwf	___ftpack@arg+1,w
  7333  081C  0420               	iorwf	___ftpack@arg,w
  7334  081D  1D03               	skipz
  7335  081E  2830               	goto	l1876
  7336  081F                     l1870:	
  7337  081F  3000               	movlw	0
  7338  0820  00A0               	movwf	?___ftpack
  7339  0821  3000               	movlw	0
  7340  0822  00A1               	movwf	?___ftpack+1
  7341  0823  3000               	movlw	0
  7342  0824  00A2               	movwf	?___ftpack+2
  7343  0825  0008               	return
  7344  0826                     l1874:	
  7345  0826  3001               	movlw	1
  7346  0827  00A5               	movwf	??___ftpack
  7347  0828  0825               	movf	??___ftpack,w
  7348  0829  07A3               	addwf	___ftpack@exp,f
  7349  082A  3001               	movlw	1
  7350  082B                     u2155:	
  7351  082B  36A2               	lsrf	___ftpack@arg+2,f
  7352  082C  0CA1               	rrf	___ftpack@arg+1,f
  7353  082D  0CA0               	rrf	___ftpack@arg,f
  7354  082E  0B89               	decfsz	9,f
  7355  082F  282B               	goto	u2155
  7356  0830                     l1876:	
  7357  0830  30FE               	movlw	254
  7358  0831  0522               	andwf	___ftpack@arg+2,w
  7359  0832  1903               	btfsc	3,2
  7360  0833  2849               	goto	l479
  7361  0834  2826               	goto	l1874
  7362  0835                     l1878:	
  7363  0835  3001               	movlw	1
  7364  0836  00A5               	movwf	??___ftpack
  7365  0837  0825               	movf	??___ftpack,w
  7366  0838  07A3               	addwf	___ftpack@exp,f
  7367  0839  3001               	movlw	1
  7368  083A  07A0               	addwf	___ftpack@arg,f
  7369  083B  3000               	movlw	0
  7370  083C  1803               	skipnc
  7371  083D  3001               	movlw	1
  7372  083E  07A1               	addwf	___ftpack@arg+1,f
  7373  083F  3000               	movlw	0
  7374  0840  1803               	skipnc
  7375  0841  3001               	movlw	1
  7376  0842  07A2               	addwf	___ftpack@arg+2,f
  7377  0843  3001               	movlw	1
  7378  0844                     u2175:	
  7379  0844  36A2               	lsrf	___ftpack@arg+2,f
  7380  0845  0CA1               	rrf	___ftpack@arg+1,f
  7381  0846  0CA0               	rrf	___ftpack@arg,f
  7382  0847  0B89               	decfsz	9,f
  7383  0848  2844               	goto	u2175
  7384  0849                     l479:	
  7385  0849  30FF               	movlw	255
  7386  084A  0522               	andwf	___ftpack@arg+2,w
  7387  084B  1903               	btfsc	3,2
  7388  084C  2856               	goto	l1886
  7389  084D  2835               	goto	l1878
  7390  084E                     l1884:	
  7391  084E  3001               	movlw	1
  7392  084F  02A3               	subwf	___ftpack@exp,f
  7393  0850  3001               	movlw	1
  7394  0851                     u2195:	
  7395  0851  35A0               	lslf	___ftpack@arg,f
  7396  0852  0DA1               	rlf	___ftpack@arg+1,f
  7397  0853  0DA2               	rlf	___ftpack@arg+2,f
  7398  0854  0B89               	decfsz	9,f
  7399  0855  2851               	goto	u2195
  7400  0856                     l1886:	
  7401  0856  1BA1               	btfsc	___ftpack@arg+1,7
  7402  0857  285C               	goto	l486
  7403  0858  3002               	movlw	2
  7404  0859  0223               	subwf	___ftpack@exp,w
  7405  085A  1803               	skipnc
  7406  085B  284E               	goto	l1884
  7407  085C                     l486:	
  7408  085C  1823               	btfsc	___ftpack@exp,0
  7409  085D  2864               	goto	l487
  7410  085E  30FF               	movlw	255
  7411  085F  05A0               	andwf	___ftpack@arg,f
  7412  0860  307F               	movlw	127
  7413  0861  05A1               	andwf	___ftpack@arg+1,f
  7414  0862  30FF               	movlw	255
  7415  0863  05A2               	andwf	___ftpack@arg+2,f
  7416  0864                     l487:	
  7417  0864  1003               	clrc
  7418  0865  0CA3               	rrf	___ftpack@exp,f
  7419  0866  0823               	movf	___ftpack@exp,w
  7420  0867  00A5               	movwf	??___ftpack
  7421  0868  01A6               	clrf	??___ftpack+1
  7422  0869  01A7               	clrf	??___ftpack+2
  7423  086A  3010               	movlw	16
  7424  086B                     u2235:	
  7425  086B  35A5               	lslf	??___ftpack,f
  7426  086C  0DA6               	rlf	??___ftpack+1,f
  7427  086D  0DA7               	rlf	??___ftpack+2,f
  7428  086E  0B89               	decfsz	9,f
  7429  086F  286B               	goto	u2235
  7430  0870  0825               	movf	??___ftpack,w
  7431  0871  04A0               	iorwf	___ftpack@arg,f
  7432  0872  0826               	movf	??___ftpack+1,w
  7433  0873  04A1               	iorwf	___ftpack@arg+1,f
  7434  0874  0827               	movf	??___ftpack+2,w
  7435  0875  04A2               	iorwf	___ftpack@arg+2,f
  7436  0876  0824               	movf	___ftpack@sign,w
  7437  0877  1903               	btfsc	3,2
  7438  0878  0008               	return
  7439  0879  17A2               	bsf	___ftpack@arg+2,7
  7440  087A  0008               	return
  7441  087B                     __end_of___ftpack:	
  7442                           
  7443                           	psect	text23
  7444  1347                     __ptext23:	
  7445 ;; *************** function _Lcd_Out2 *****************
  7446 ;; Defined at:
  7447 ;;		line 115 in file "flex_lcd.h"
  7448 ;; Parameters:    Size  Location     Type
  7449 ;;  y               1    wreg     unsigned char 
  7450 ;;  x               1    3[BANK0 ] unsigned char 
  7451 ;;  buffer          1    4[BANK0 ] PTR unsigned char 
  7452 ;;		 -> buffer1(16), 
  7453 ;; Auto vars:     Size  Location     Type
  7454 ;;  y               1    6[BANK0 ] unsigned char 
  7455 ;;  data            1    7[BANK0 ] unsigned char 
  7456 ;; Return value:  Size  Location     Type
  7457 ;;                  1    wreg      void 
  7458 ;; Registers used:
  7459 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7460 ;; Tracked objects:
  7461 ;;		On entry : 0/0
  7462 ;;		On exit  : 0/0
  7463 ;;		Unchanged: 0/0
  7464 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
  7465 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  7466 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  7467 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  7468 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  7469 ;;Total ram usage:        5 bytes
  7470 ;; Hardware stack levels used:    1
  7471 ;; Hardware stack levels required when called:    4
  7472 ;; This function calls:
  7473 ;;		_Lcd_Chr_CP
  7474 ;;		_Lcd_Cmd
  7475 ;; This function is called by:
  7476 ;;		_main
  7477 ;; This function uses a non-reentrant model
  7478 ;;
  7479                           
  7480                           
  7481                           ;psect for function _Lcd_Out2
  7482  1347                     _Lcd_Out2:	
  7483                           
  7484                           ;incstack = 0
  7485                           ; Regs used in _Lcd_Out2: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  7486                           ;Lcd_Out2@y stored from wreg
  7487  1347  0140               	movlb	0	; select bank0
  7488  1348  00A6               	movwf	Lcd_Out2@y
  7489                           
  7490                           ;flex_lcd.h: 117: unsigned char data;
  7491                           ;flex_lcd.h: 118: switch (y)
  7492  1349  2B59               	goto	l2602
  7493  134A                     l2592:	
  7494                           ;flex_lcd.h: 119: {
  7495                           ;flex_lcd.h: 120: case 1: data = 128 + x; break;
  7496                           
  7497  134A  0823               	movf	Lcd_Out2@x,w
  7498  134B  3E80               	addlw	128
  7499  134C  2B55               	goto	L10
  7500  134D                     l2594:	
  7501                           ;flex_lcd.h: 121: case 2: data = 192 + x; break;
  7502                           
  7503  134D  0823               	movf	Lcd_Out2@x,w
  7504  134E  3EC0               	addlw	192
  7505  134F  2B55               	goto	L10
  7506  1350                     l2596:	
  7507                           ;flex_lcd.h: 122: case 3: data = 148 + x; break;
  7508                           
  7509  1350  0823               	movf	Lcd_Out2@x,w
  7510  1351  3E94               	addlw	148
  7511  1352  2B55               	goto	L10
  7512  1353                     l2598:	
  7513                           ;flex_lcd.h: 123: case 4: data = 212 + x; break;
  7514                           
  7515  1353  0823               	movf	Lcd_Out2@x,w
  7516  1354  3ED4               	addlw	212
  7517  1355                     L10:	
  7518  1355  00A5               	movwf	??_Lcd_Out2
  7519  1356  0825               	movf	??_Lcd_Out2,w
  7520  1357  00A7               	movwf	Lcd_Out2@data
  7521                           
  7522                           ;flex_lcd.h: 125: }
  7523                           
  7524                           ;flex_lcd.h: 124: default: break;
  7525  1358  2B67               	goto	l2604
  7526  1359                     l2602:	
  7527  1359  0826               	movf	Lcd_Out2@y,w
  7528                           
  7529                           ; Switch size 1, requested type "space"
  7530                           ; Number of cases is 4, Range of values is 1 to 4
  7531                           ; switch strategies available:
  7532                           ; Name         Instructions Cycles
  7533                           ; simple_byte           13     7 (average)
  7534                           ; direct_byte           17     9 (fixed)
  7535                           ; jumptable            263     9 (fixed)
  7536                           ;	Chosen strategy is simple_byte
  7537  135A  3A01               	xorlw	1	; case 1
  7538  135B  1903               	skipnz
  7539  135C  2B4A               	goto	l2592
  7540  135D  3A03               	xorlw	3	; case 2
  7541  135E  1903               	skipnz
  7542  135F  2B4D               	goto	l2594
  7543  1360  3A01               	xorlw	1	; case 3
  7544  1361  1903               	skipnz
  7545  1362  2B50               	goto	l2596
  7546  1363  3A07               	xorlw	7	; case 4
  7547  1364  1903               	skipnz
  7548  1365  2B53               	goto	l2598
  7549  1366  2B67               	goto	l2604
  7550  1367                     l2604:	
  7551                           
  7552                           ;flex_lcd.h: 126: Lcd_Cmd(data);
  7553  1367  0827               	movf	Lcd_Out2@data,w
  7554  1368  3196  263F  3193   	fcall	_Lcd_Cmd
  7555  136B                     l2610:	
  7556                           ;flex_lcd.h: 127: while(*buffer)
  7557                           
  7558  136B  0140               	movlb	0	; select bank0
  7559  136C  0824               	movf	Lcd_Out2@buffer,w
  7560  136D  0086               	movwf	6
  7561  136E  0187               	clrf	7
  7562  136F  0801               	movf	1,w
  7563  1370  1903               	btfsc	3,2
  7564  1371  0008               	return
  7565                           
  7566                           ;flex_lcd.h: 128: {
  7567                           ;flex_lcd.h: 129: Lcd_Chr_CP(*buffer);
  7568  1372  0140               	movlb	0	; select bank0
  7569  1373  0824               	movf	Lcd_Out2@buffer,w
  7570  1374  0086               	movwf	6
  7571  1375  0187               	clrf	7
  7572  1376  0801               	movf	1,w
  7573  1377  3197  2769  3193   	fcall	_Lcd_Chr_CP
  7574                           
  7575                           ;flex_lcd.h: 130: buffer++;
  7576  137A  3001               	movlw	1
  7577  137B  0140               	movlb	0	; select bank0
  7578  137C  00A5               	movwf	??_Lcd_Out2
  7579  137D  0825               	movf	??_Lcd_Out2,w
  7580  137E  07A4               	addwf	Lcd_Out2@buffer,f
  7581  137F  2B6B               	goto	l2610
  7582  1380                     __end_of_Lcd_Out2:	
  7583                           ;flex_lcd.h: 131: }
  7584                           ;flex_lcd.h: 132: return;
  7585                           
  7586                           
  7587                           	psect	text24
  7588  1380                     __ptext24:	
  7589 ;; *************** function _Lcd_Out *****************
  7590 ;; Defined at:
  7591 ;;		line 94 in file "flex_lcd.h"
  7592 ;; Parameters:    Size  Location     Type
  7593 ;;  y               1    wreg     unsigned char 
  7594 ;;  x               1    3[BANK0 ] unsigned char 
  7595 ;;  buffer          2    4[BANK0 ] PTR const unsigned char 
  7596 ;;		 -> STR_3(15), STR_1(15), 
  7597 ;; Auto vars:     Size  Location     Type
  7598 ;;  y               1    7[BANK0 ] unsigned char 
  7599 ;;  data            1    8[BANK0 ] unsigned char 
  7600 ;; Return value:  Size  Location     Type
  7601 ;;                  1    wreg      void 
  7602 ;; Registers used:
  7603 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  7604 ;; Tracked objects:
  7605 ;;		On entry : 0/0
  7606 ;;		On exit  : 0/0
  7607 ;;		Unchanged: 0/0
  7608 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
  7609 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  7610 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  7611 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  7612 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  7613 ;;Total ram usage:        6 bytes
  7614 ;; Hardware stack levels used:    1
  7615 ;; Hardware stack levels required when called:    4
  7616 ;; This function calls:
  7617 ;;		_Lcd_Chr_CP
  7618 ;;		_Lcd_Cmd
  7619 ;; This function is called by:
  7620 ;;		_main
  7621 ;; This function uses a non-reentrant model
  7622 ;;
  7623                           
  7624                           
  7625                           ;psect for function _Lcd_Out
  7626  1380                     _Lcd_Out:	
  7627                           
  7628                           ;incstack = 0
  7629                           ; Regs used in _Lcd_Out: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  7630                           ;Lcd_Out@y stored from wreg
  7631  1380  0140               	movlb	0	; select bank0
  7632  1381  00A7               	movwf	Lcd_Out@y
  7633                           
  7634                           ;flex_lcd.h: 96: unsigned char data;
  7635                           ;flex_lcd.h: 97: switch (y)
  7636  1382  2B92               	goto	l2580
  7637  1383                     l2570:	
  7638                           ;flex_lcd.h: 98: {
  7639                           ;flex_lcd.h: 99: case 1: data = 128 + x; break;
  7640                           
  7641  1383  0823               	movf	Lcd_Out@x,w
  7642  1384  3E80               	addlw	128
  7643  1385  2B8E               	goto	L13
  7644  1386                     l2572:	
  7645                           ;flex_lcd.h: 100: case 2: data = 192 + x; break;
  7646                           
  7647  1386  0823               	movf	Lcd_Out@x,w
  7648  1387  3EC0               	addlw	192
  7649  1388  2B8E               	goto	L13
  7650  1389                     l2574:	
  7651                           ;flex_lcd.h: 101: case 3: data = 148 + x; break;
  7652                           
  7653  1389  0823               	movf	Lcd_Out@x,w
  7654  138A  3E94               	addlw	148
  7655  138B  2B8E               	goto	L13
  7656  138C                     l2576:	
  7657                           ;flex_lcd.h: 102: case 4: data = 212 + x; break;
  7658                           
  7659  138C  0823               	movf	Lcd_Out@x,w
  7660  138D  3ED4               	addlw	212
  7661  138E                     L13:	
  7662  138E  00A6               	movwf	??_Lcd_Out
  7663  138F  0826               	movf	??_Lcd_Out,w
  7664  1390  00A8               	movwf	Lcd_Out@data
  7665                           
  7666                           ;flex_lcd.h: 104: }
  7667                           
  7668                           ;flex_lcd.h: 103: default: break;
  7669  1391  2BA0               	goto	l2582
  7670  1392                     l2580:	
  7671  1392  0827               	movf	Lcd_Out@y,w
  7672                           
  7673                           ; Switch size 1, requested type "space"
  7674                           ; Number of cases is 4, Range of values is 1 to 4
  7675                           ; switch strategies available:
  7676                           ; Name         Instructions Cycles
  7677                           ; simple_byte           13     7 (average)
  7678                           ; direct_byte           17     9 (fixed)
  7679                           ; jumptable            263     9 (fixed)
  7680                           ;	Chosen strategy is simple_byte
  7681  1393  3A01               	xorlw	1	; case 1
  7682  1394  1903               	skipnz
  7683  1395  2B83               	goto	l2570
  7684  1396  3A03               	xorlw	3	; case 2
  7685  1397  1903               	skipnz
  7686  1398  2B86               	goto	l2572
  7687  1399  3A01               	xorlw	1	; case 3
  7688  139A  1903               	skipnz
  7689  139B  2B89               	goto	l2574
  7690  139C  3A07               	xorlw	7	; case 4
  7691  139D  1903               	skipnz
  7692  139E  2B8C               	goto	l2576
  7693  139F  2BA0               	goto	l2582
  7694  13A0                     l2582:	
  7695                           
  7696                           ;flex_lcd.h: 105: Lcd_Cmd(data);
  7697  13A0  0828               	movf	Lcd_Out@data,w
  7698  13A1  3196  263F  3193   	fcall	_Lcd_Cmd
  7699  13A4                     l2588:	
  7700                           ;flex_lcd.h: 106: while(*buffer)
  7701                           
  7702  13A4  0140               	movlb	0	; select bank0
  7703  13A5  0824               	movf	Lcd_Out@buffer,w
  7704  13A6  0084               	movwf	4
  7705  13A7  0825               	movf	Lcd_Out@buffer+1,w
  7706  13A8  0085               	movwf	5
  7707  13A9  0012               	moviw fsr0++
  7708  13AA  1903               	btfsc	3,2
  7709  13AB  0008               	return
  7710                           
  7711                           ;flex_lcd.h: 107: {
  7712                           ;flex_lcd.h: 108: Lcd_Chr_CP(*buffer);
  7713  13AC  0140               	movlb	0	; select bank0
  7714  13AD  0824               	movf	Lcd_Out@buffer,w
  7715  13AE  0084               	movwf	4
  7716  13AF  0825               	movf	Lcd_Out@buffer+1,w
  7717  13B0  0085               	movwf	5
  7718  13B1  0800               	movf	0,w	;code access
  7719  13B2  3197  2769  3193   	fcall	_Lcd_Chr_CP
  7720                           
  7721                           ;flex_lcd.h: 109: buffer++;
  7722  13B5  3001               	movlw	1
  7723  13B6  0140               	movlb	0	; select bank0
  7724  13B7  07A4               	addwf	Lcd_Out@buffer,f
  7725  13B8  3000               	movlw	0
  7726  13B9  3DA5               	addwfc	Lcd_Out@buffer+1,f
  7727  13BA  2BA4               	goto	l2588
  7728  13BB                     __end_of_Lcd_Out:	
  7729                           ;flex_lcd.h: 110: }
  7730                           ;flex_lcd.h: 111: return;
  7731                           
  7732                           
  7733                           	psect	text25
  7734  1769                     __ptext25:	
  7735 ;; *************** function _Lcd_Chr_CP *****************
  7736 ;; Defined at:
  7737 ;;		line 136 in file "flex_lcd.h"
  7738 ;; Parameters:    Size  Location     Type
  7739 ;;  data            1    wreg     unsigned char 
  7740 ;; Auto vars:     Size  Location     Type
  7741 ;;  data            1    2[BANK0 ] unsigned char 
  7742 ;; Return value:  Size  Location     Type
  7743 ;;                  1    wreg      void 
  7744 ;; Registers used:
  7745 ;;		wreg, status,2, status,0
  7746 ;; Tracked objects:
  7747 ;;		On entry : 0/0
  7748 ;;		On exit  : 0/0
  7749 ;;		Unchanged: 0/0
  7750 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
  7751 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  7752 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  7753 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  7754 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  7755 ;;Total ram usage:        3 bytes
  7756 ;; Hardware stack levels used:    1
  7757 ;; Hardware stack levels required when called:    3
  7758 ;; This function calls:
  7759 ;;		Nothing
  7760 ;; This function is called by:
  7761 ;;		_Lcd_Out
  7762 ;;		_Lcd_Out2
  7763 ;; This function uses a non-reentrant model
  7764 ;;
  7765                           
  7766                           
  7767                           ;psect for function _Lcd_Chr_CP
  7768  1769                     _Lcd_Chr_CP:	
  7769                           
  7770                           ;incstack = 0
  7771                           ; Regs used in _Lcd_Chr_CP: [wreg+status,2+status,0]
  7772                           ;Lcd_Chr_CP@data stored from wreg
  7773  1769  0140               	movlb	0	; select bank0
  7774  176A  00A2               	movwf	Lcd_Chr_CP@data
  7775                           
  7776                           ;flex_lcd.h: 137: PORTDbits.RD3 = 0; PORTDbits.RD2 = 1;
  7777  176B  118F               	bcf	15,3	;volatile
  7778  176C  150F               	bsf	15,2	;volatile
  7779                           
  7780                           ;flex_lcd.h: 138: PORTCbits.RC3 = (data & 0b10000000)>>7; PORTDbits.RD0 = (data & 0b0100
      +                          0000)>>6;
  7781  176D  0822               	movf	Lcd_Chr_CP@data,w
  7782  176E  00A0               	movwf	??_Lcd_Chr_CP
  7783  176F  3007               	movlw	7
  7784  1770                     u2895:	
  7785  1770  36A0               	lsrf	??_Lcd_Chr_CP,f
  7786  1771  0B89               	decfsz	9,f
  7787  1772  2F70               	goto	u2895
  7788  1773  0820               	movf	??_Lcd_Chr_CP,w
  7789  1774  3901               	andlw	1
  7790  1775  00A1               	movwf	??_Lcd_Chr_CP+1
  7791  1776  0DA1               	rlf	??_Lcd_Chr_CP+1,f
  7792  1777  0DA1               	rlf	??_Lcd_Chr_CP+1,f
  7793  1778  0DA1               	rlf	??_Lcd_Chr_CP+1,f
  7794  1779  080E               	movf	14,w	;volatile
  7795  177A  0621               	xorwf	??_Lcd_Chr_CP+1,w
  7796  177B  39F7               	andlw	-9
  7797  177C  0621               	xorwf	??_Lcd_Chr_CP+1,w
  7798  177D  008E               	movwf	14	;volatile
  7799  177E  0822               	movf	Lcd_Chr_CP@data,w
  7800  177F  00A0               	movwf	??_Lcd_Chr_CP
  7801  1780  3006               	movlw	6
  7802  1781                     u2905:	
  7803  1781  36A0               	lsrf	??_Lcd_Chr_CP,f
  7804  1782  0B89               	decfsz	9,f
  7805  1783  2F81               	goto	u2905
  7806  1784  3001               	movlw	1
  7807  1785  0520               	andwf	??_Lcd_Chr_CP,w
  7808  1786  00A1               	movwf	??_Lcd_Chr_CP+1
  7809  1787  080F               	movf	15,w	;volatile
  7810  1788  0621               	xorwf	??_Lcd_Chr_CP+1,w
  7811  1789  39FE               	andlw	-2
  7812  178A  0621               	xorwf	??_Lcd_Chr_CP+1,w
  7813  178B  008F               	movwf	15	;volatile
  7814                           
  7815                           ;flex_lcd.h: 139: PORTDbits.RD1 = (data & 0b00100000)>>5; PORTCbits.RC4 = (data & 0b0001
      +                          0000)>>4;
  7816  178C  0822               	movf	Lcd_Chr_CP@data,w
  7817  178D  00A0               	movwf	??_Lcd_Chr_CP
  7818  178E  3005               	movlw	5
  7819  178F                     u2915:	
  7820  178F  36A0               	lsrf	??_Lcd_Chr_CP,f
  7821  1790  0B89               	decfsz	9,f
  7822  1791  2F8F               	goto	u2915
  7823  1792  0820               	movf	??_Lcd_Chr_CP,w
  7824  1793  3901               	andlw	1
  7825  1794  00A1               	movwf	??_Lcd_Chr_CP+1
  7826  1795  0DA1               	rlf	??_Lcd_Chr_CP+1,f
  7827  1796  080F               	movf	15,w	;volatile
  7828  1797  0621               	xorwf	??_Lcd_Chr_CP+1,w
  7829  1798  39FD               	andlw	-3
  7830  1799  0621               	xorwf	??_Lcd_Chr_CP+1,w
  7831  179A  008F               	movwf	15	;volatile
  7832  179B  0822               	movf	Lcd_Chr_CP@data,w
  7833  179C  00A0               	movwf	??_Lcd_Chr_CP
  7834  179D  3004               	movlw	4
  7835  179E                     u2925:	
  7836  179E  36A0               	lsrf	??_Lcd_Chr_CP,f
  7837  179F  0B89               	decfsz	9,f
  7838  17A0  2F9E               	goto	u2925
  7839  17A1  0820               	movf	??_Lcd_Chr_CP,w
  7840  17A2  3901               	andlw	1
  7841  17A3  00A1               	movwf	??_Lcd_Chr_CP+1
  7842  17A4  0EA1               	swapf	??_Lcd_Chr_CP+1,f
  7843  17A5  080E               	movf	14,w	;volatile
  7844  17A6  0621               	xorwf	??_Lcd_Chr_CP+1,w
  7845  17A7  39EF               	andlw	-17
  7846  17A8  0621               	xorwf	??_Lcd_Chr_CP+1,w
  7847  17A9  008E               	movwf	14	;volatile
  7848                           
  7849                           ;flex_lcd.h: 140: _delay(10);
  7850  17AA  3003               	movlw	3
  7851  17AB                     u4297:	
  7852  17AB  0B89               	decfsz	9,f
  7853  17AC  2FAB               	goto	u4297
  7854  17AD  0000               	nop
  7855                           
  7856                           ;flex_lcd.h: 141: PORTDbits.RD3 = 1; _delay((unsigned long)((5)*(32000000/4000000.0))); 
      +                          PORTDbits.RD3 = 0;
  7857  17AE  0140               	movlb	0	; select bank0
  7858  17AF  158F               	bsf	15,3	;volatile
  7859  17B0  300D               	movlw	13
  7860  17B1                     u4307:	
  7861  17B1  0B89               	decfsz	9,f
  7862  17B2  2FB1               	goto	u4307
  7863  17B3  0000               	nop
  7864  17B4  0140               	movlb	0	; select bank0
  7865  17B5  118F               	bcf	15,3	;volatile
  7866                           
  7867                           ;flex_lcd.h: 142: PORTCbits.RC3 = (data & 0b00001000)>>3; PORTDbits.RD0 = (data & 0b0000
      +                          0100)>>2;
  7868  17B6  0822               	movf	Lcd_Chr_CP@data,w
  7869  17B7  00A0               	movwf	??_Lcd_Chr_CP
  7870  17B8  3003               	movlw	3
  7871  17B9                     u2935:	
  7872  17B9  36A0               	lsrf	??_Lcd_Chr_CP,f
  7873  17BA  0B89               	decfsz	9,f
  7874  17BB  2FB9               	goto	u2935
  7875  17BC  0820               	movf	??_Lcd_Chr_CP,w
  7876  17BD  3901               	andlw	1
  7877  17BE  00A1               	movwf	??_Lcd_Chr_CP+1
  7878  17BF  0DA1               	rlf	??_Lcd_Chr_CP+1,f
  7879  17C0  0DA1               	rlf	??_Lcd_Chr_CP+1,f
  7880  17C1  0DA1               	rlf	??_Lcd_Chr_CP+1,f
  7881  17C2  080E               	movf	14,w	;volatile
  7882  17C3  0621               	xorwf	??_Lcd_Chr_CP+1,w
  7883  17C4  39F7               	andlw	-9
  7884  17C5  0621               	xorwf	??_Lcd_Chr_CP+1,w
  7885  17C6  008E               	movwf	14	;volatile
  7886  17C7  0822               	movf	Lcd_Chr_CP@data,w
  7887  17C8  00A0               	movwf	??_Lcd_Chr_CP
  7888  17C9  3002               	movlw	2
  7889  17CA                     u2945:	
  7890  17CA  36A0               	lsrf	??_Lcd_Chr_CP,f
  7891  17CB  0B89               	decfsz	9,f
  7892  17CC  2FCA               	goto	u2945
  7893  17CD  3001               	movlw	1
  7894  17CE  0520               	andwf	??_Lcd_Chr_CP,w
  7895  17CF  00A1               	movwf	??_Lcd_Chr_CP+1
  7896  17D0  080F               	movf	15,w	;volatile
  7897  17D1  0621               	xorwf	??_Lcd_Chr_CP+1,w
  7898  17D2  39FE               	andlw	-2
  7899  17D3  0621               	xorwf	??_Lcd_Chr_CP+1,w
  7900  17D4  008F               	movwf	15	;volatile
  7901                           
  7902                           ;flex_lcd.h: 143: PORTDbits.RD1 = (data & 0b00000010)>>1; PORTCbits.RC4 = (data & 0b0000
      +                          0001);
  7903  17D5  3622               	lsrf	Lcd_Chr_CP@data,w
  7904  17D6  3901               	andlw	1
  7905  17D7  00A0               	movwf	??_Lcd_Chr_CP
  7906  17D8  0DA0               	rlf	??_Lcd_Chr_CP,f
  7907  17D9  080F               	movf	15,w	;volatile
  7908  17DA  0620               	xorwf	??_Lcd_Chr_CP,w
  7909  17DB  39FD               	andlw	-3
  7910  17DC  0620               	xorwf	??_Lcd_Chr_CP,w
  7911  17DD  008F               	movwf	15	;volatile
  7912  17DE  0822               	movf	Lcd_Chr_CP@data,w
  7913  17DF  3901               	andlw	1
  7914  17E0  00A0               	movwf	??_Lcd_Chr_CP
  7915  17E1  0EA0               	swapf	??_Lcd_Chr_CP,f
  7916  17E2  080E               	movf	14,w	;volatile
  7917  17E3  0620               	xorwf	??_Lcd_Chr_CP,w
  7918  17E4  39EF               	andlw	-17
  7919  17E5  0620               	xorwf	??_Lcd_Chr_CP,w
  7920  17E6  008E               	movwf	14	;volatile
  7921                           
  7922                           ;flex_lcd.h: 144: _delay(10);
  7923  17E7  3003               	movlw	3
  7924  17E8                     u4317:	
  7925  17E8  0B89               	decfsz	9,f
  7926  17E9  2FE8               	goto	u4317
  7927  17EA  0000               	nop
  7928                           
  7929                           ;flex_lcd.h: 145: PORTDbits.RD3 = 1; _delay((unsigned long)((5)*(32000000/4000000.0))); 
      +                          PORTDbits.RD3 = 0;
  7930  17EB  0140               	movlb	0	; select bank0
  7931  17EC  158F               	bsf	15,3	;volatile
  7932  17ED  300D               	movlw	13
  7933  17EE                     u4327:	
  7934  17EE  0B89               	decfsz	9,f
  7935  17EF  2FEE               	goto	u4327
  7936  17F0  0000               	nop
  7937  17F1  0140               	movlb	0	; select bank0
  7938  17F2  118F               	bcf	15,3	;volatile
  7939                           
  7940                           ;flex_lcd.h: 146: _delay((unsigned long)((5)*(32000000/4000000.0))); _delay((unsigned lo
      +                          ng)((5500)*(32000000/4000000.0)));
  7941  17F3  300D               	movlw	13
  7942  17F4                     u4337:	
  7943  17F4  0B89               	decfsz	9,f
  7944  17F5  2FF4               	goto	u4337
  7945  17F6  0000               	nop
  7946  17F7  303A               	movlw	58
  7947  17F8  0140               	movlb	0	; select bank0
  7948  17F9  00A0               	movwf	??_Lcd_Chr_CP
  7949  17FA  3023               	movlw	35
  7950  17FB                     u4347:	
  7951  17FB  0B89               	decfsz	9,f
  7952  17FC  2FFB               	goto	u4347
  7953  17FD  0BA0               	decfsz	??_Lcd_Chr_CP,f
  7954  17FE  2FFB               	goto	u4347
  7955  17FF  0008               	return
  7956  1800                     __end_of_Lcd_Chr_CP:	
  7957                           
  7958                           	psect	text26
  7959  0924                     __ptext26:	
  7960 ;; *************** function _Lcd_Init *****************
  7961 ;; Defined at:
  7962 ;;		line 52 in file "flex_lcd.h"
  7963 ;; Parameters:    Size  Location     Type
  7964 ;;		None
  7965 ;; Auto vars:     Size  Location     Type
  7966 ;;  data            1    4[BANK0 ] unsigned char 
  7967 ;; Return value:  Size  Location     Type
  7968 ;;                  1    wreg      void 
  7969 ;; Registers used:
  7970 ;;		wreg, status,2, status,0, pclath, cstack
  7971 ;; Tracked objects:
  7972 ;;		On entry : 0/0
  7973 ;;		On exit  : 0/0
  7974 ;;		Unchanged: 0/0
  7975 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
  7976 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  7977 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  7978 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  7979 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  7980 ;;Total ram usage:        2 bytes
  7981 ;; Hardware stack levels used:    1
  7982 ;; Hardware stack levels required when called:    4
  7983 ;; This function calls:
  7984 ;;		_Lcd_Cmd
  7985 ;; This function is called by:
  7986 ;;		_main
  7987 ;; This function uses a non-reentrant model
  7988 ;;
  7989                           
  7990                           
  7991                           ;psect for function _Lcd_Init
  7992  0924                     _Lcd_Init:	
  7993                           
  7994                           ;flex_lcd.h: 53: unsigned char data;
  7995                           ;flex_lcd.h: 54: TRISCbits.TRISC3 = 0;
  7996                           
  7997                           ;incstack = 0
  7998                           ; Regs used in _Lcd_Init: [wreg+status,2+status,0+pclath+cstack]
  7999  0924  0140               	movlb	0	; select bank0
  8000  0925  1193               	bcf	19,3	;volatile
  8001                           
  8002                           ;flex_lcd.h: 55: TRISDbits.TRISD0 = 0;
  8003  0926  1014               	bcf	20,0	;volatile
  8004                           
  8005                           ;flex_lcd.h: 56: TRISDbits.TRISD1 = 0;
  8006  0927  1094               	bcf	20,1	;volatile
  8007                           
  8008                           ;flex_lcd.h: 57: TRISCbits.TRISC4 = 0;
  8009  0928  1213               	bcf	19,4	;volatile
  8010                           
  8011                           ;flex_lcd.h: 58: TRISDbits.TRISD3 = 0;
  8012  0929  1194               	bcf	20,3	;volatile
  8013                           
  8014                           ;flex_lcd.h: 59: TRISDbits.TRISD2 = 0;
  8015  092A  1114               	bcf	20,2	;volatile
  8016                           
  8017                           ;flex_lcd.h: 60: PORTCbits.RC3 = 0;
  8018  092B  118E               	bcf	14,3	;volatile
  8019                           
  8020                           ;flex_lcd.h: 61: PORTDbits.RD0 = 0;
  8021  092C  100F               	bcf	15,0	;volatile
  8022                           
  8023                           ;flex_lcd.h: 62: PORTDbits.RD1 = 0;
  8024  092D  108F               	bcf	15,1	;volatile
  8025                           
  8026                           ;flex_lcd.h: 63: PORTCbits.RC4 = 0;
  8027  092E  120E               	bcf	14,4	;volatile
  8028                           
  8029                           ;flex_lcd.h: 64: PORTDbits.RD3 = 0;
  8030  092F  118F               	bcf	15,3	;volatile
  8031                           
  8032                           ;flex_lcd.h: 65: PORTDbits.RD2 = 0;
  8033  0930  110F               	bcf	15,2	;volatile
  8034                           
  8035                           ;flex_lcd.h: 66: _delay((unsigned long)((5500)*(32000000/4000000.0)));
  8036  0931  303A               	movlw	58
  8037  0932  0140               	movlb	0	; select bank0
  8038  0933  00A3               	movwf	??_Lcd_Init
  8039  0934  3023               	movlw	35
  8040  0935                     u4357:	
  8041  0935  0B89               	decfsz	9,f
  8042  0936  2935               	goto	u4357
  8043  0937  0BA3               	decfsz	??_Lcd_Init,f
  8044  0938  2935               	goto	u4357
  8045                           
  8046                           ;flex_lcd.h: 67: _delay((unsigned long)((5500)*(32000000/4000000.0)));
  8047  0939  303A               	movlw	58
  8048  093A  0140               	movlb	0	; select bank0
  8049  093B  00A3               	movwf	??_Lcd_Init
  8050  093C  3023               	movlw	35
  8051  093D                     u4367:	
  8052  093D  0B89               	decfsz	9,f
  8053  093E  293D               	goto	u4367
  8054  093F  0BA3               	decfsz	??_Lcd_Init,f
  8055  0940  293D               	goto	u4367
  8056                           
  8057                           ;flex_lcd.h: 68: _delay((unsigned long)((5500)*(32000000/4000000.0)));
  8058  0941  303A               	movlw	58
  8059  0942  0140               	movlb	0	; select bank0
  8060  0943  00A3               	movwf	??_Lcd_Init
  8061  0944  3023               	movlw	35
  8062  0945                     u4377:	
  8063  0945  0B89               	decfsz	9,f
  8064  0946  2945               	goto	u4377
  8065  0947  0BA3               	decfsz	??_Lcd_Init,f
  8066  0948  2945               	goto	u4377
  8067                           
  8068                           ;flex_lcd.h: 69: _delay((unsigned long)((5500)*(32000000/4000000.0)));
  8069  0949  303A               	movlw	58
  8070  094A  0140               	movlb	0	; select bank0
  8071  094B  00A3               	movwf	??_Lcd_Init
  8072  094C  3023               	movlw	35
  8073  094D                     u4387:	
  8074  094D  0B89               	decfsz	9,f
  8075  094E  294D               	goto	u4387
  8076  094F  0BA3               	decfsz	??_Lcd_Init,f
  8077  0950  294D               	goto	u4387
  8078                           
  8079                           ;flex_lcd.h: 70: _delay((unsigned long)((5500)*(32000000/4000000.0)));
  8080  0951  303A               	movlw	58
  8081  0952  0140               	movlb	0	; select bank0
  8082  0953  00A3               	movwf	??_Lcd_Init
  8083  0954  3023               	movlw	35
  8084  0955                     u4397:	
  8085  0955  0B89               	decfsz	9,f
  8086  0956  2955               	goto	u4397
  8087  0957  0BA3               	decfsz	??_Lcd_Init,f
  8088  0958  2955               	goto	u4397
  8089                           
  8090                           ;flex_lcd.h: 71: _delay((unsigned long)((5500)*(32000000/4000000.0)));
  8091  0959  303A               	movlw	58
  8092  095A  0140               	movlb	0	; select bank0
  8093  095B  00A3               	movwf	??_Lcd_Init
  8094  095C  3023               	movlw	35
  8095  095D                     u4407:	
  8096  095D  0B89               	decfsz	9,f
  8097  095E  295D               	goto	u4407
  8098  095F  0BA3               	decfsz	??_Lcd_Init,f
  8099  0960  295D               	goto	u4407
  8100                           
  8101                           ;flex_lcd.h: 72: for(data = 1; data < 4; data ++)
  8102  0961  0140               	movlb	0	; select bank0
  8103  0962  01A4               	clrf	Lcd_Init@data
  8104  0963  0AA4               	incf	Lcd_Init@data,f
  8105  0964  3004               	movlw	4
  8106  0965  0224               	subwf	Lcd_Init@data,w
  8107  0966  1803               	btfsc	3,0
  8108  0967  2990               	goto	l60
  8109  0968                     l59:	
  8110                           
  8111                           ;flex_lcd.h: 73: {
  8112                           ;flex_lcd.h: 74: PORTCbits.RC3 = 0; PORTDbits.RD0 = 0; PORTDbits.RD1 = 1; PORTCbits.RC4 
      +                          = 1; PORTDbits.RD3 = 0;
  8113  0968  118E               	bcf	14,3	;volatile
  8114  0969  100F               	bcf	15,0	;volatile
  8115  096A  148F               	bsf	15,1	;volatile
  8116  096B  160E               	bsf	14,4	;volatile
  8117  096C  118F               	bcf	15,3	;volatile
  8118                           
  8119                           ;flex_lcd.h: 75: PORTDbits.RD2 = 0; PORTCbits.RC3 = 0; PORTDbits.RD0 = 0; PORTDbits.RD1 
      +                          = 1; PORTCbits.RC4 = 1;
  8120  096D  110F               	bcf	15,2	;volatile
  8121  096E  118E               	bcf	14,3	;volatile
  8122  096F  100F               	bcf	15,0	;volatile
  8123  0970  148F               	bsf	15,1	;volatile
  8124  0971  160E               	bsf	14,4	;volatile
  8125                           
  8126                           ;flex_lcd.h: 76: PORTDbits.RD3 = 1; PORTDbits.RD2 = 0;
  8127  0972  158F               	bsf	15,3	;volatile
  8128  0973  110F               	bcf	15,2	;volatile
  8129                           
  8130                           ;flex_lcd.h: 77: _delay((unsigned long)((5)*(32000000/4000000.0)));
  8131  0974  300D               	movlw	13
  8132  0975                     u4417:	
  8133  0975  0B89               	decfsz	9,f
  8134  0976  2975               	goto	u4417
  8135  0977  0000               	nop
  8136                           
  8137                           ;flex_lcd.h: 78: PORTCbits.RC3 = 0; PORTDbits.RD0 = 0; PORTDbits.RD1 = 1; PORTCbits.RC4 
      +                          = 1; PORTDbits.RD3 = 0;
  8138  0978  0140               	movlb	0	; select bank0
  8139  0979  118E               	bcf	14,3	;volatile
  8140  097A  100F               	bcf	15,0	;volatile
  8141  097B  148F               	bsf	15,1	;volatile
  8142  097C  160E               	bsf	14,4	;volatile
  8143  097D  118F               	bcf	15,3	;volatile
  8144                           
  8145                           ;flex_lcd.h: 79: PORTDbits.RD2 = 0;
  8146  097E  110F               	bcf	15,2	;volatile
  8147                           
  8148                           ;flex_lcd.h: 80: _delay((unsigned long)((5500)*(32000000/4000000.0)));
  8149  097F  303A               	movlw	58
  8150  0980  0140               	movlb	0	; select bank0
  8151  0981  00A3               	movwf	??_Lcd_Init
  8152  0982  3023               	movlw	35
  8153  0983                     u4427:	
  8154  0983  0B89               	decfsz	9,f
  8155  0984  2983               	goto	u4427
  8156  0985  0BA3               	decfsz	??_Lcd_Init,f
  8157  0986  2983               	goto	u4427
  8158  0987  3001               	movlw	1
  8159  0988  0140               	movlb	0	; select bank0
  8160  0989  00A3               	movwf	??_Lcd_Init
  8161  098A  0823               	movf	??_Lcd_Init,w
  8162  098B  07A4               	addwf	Lcd_Init@data,f
  8163  098C  3004               	movlw	4
  8164  098D  0224               	subwf	Lcd_Init@data,w
  8165  098E  1C03               	skipc
  8166  098F  2968               	goto	l59
  8167  0990                     l60:	
  8168                           
  8169                           ;flex_lcd.h: 81: }
  8170                           ;flex_lcd.h: 82: PORTCbits.RC3 = 0; PORTDbits.RD0 = 0; PORTDbits.RD1 = 1; PORTCbits.RC4 
      +                          = 0; PORTDbits.RD3 = 0; PORTDbits.RD2 = 0;
  8171  0990  118E               	bcf	14,3	;volatile
  8172  0991  100F               	bcf	15,0	;volatile
  8173  0992  148F               	bsf	15,1	;volatile
  8174  0993  120E               	bcf	14,4	;volatile
  8175  0994  118F               	bcf	15,3	;volatile
  8176  0995  110F               	bcf	15,2	;volatile
  8177                           
  8178                           ;flex_lcd.h: 83: PORTCbits.RC3 = 0; PORTDbits.RD0 = 0; PORTDbits.RD1 = 1; PORTCbits.RC4 
      +                          = 0; PORTDbits.RD3 = 1; PORTDbits.RD2 = 0;
  8179  0996  118E               	bcf	14,3	;volatile
  8180  0997  100F               	bcf	15,0	;volatile
  8181  0998  148F               	bsf	15,1	;volatile
  8182  0999  120E               	bcf	14,4	;volatile
  8183  099A  158F               	bsf	15,3	;volatile
  8184  099B  110F               	bcf	15,2	;volatile
  8185                           
  8186                           ;flex_lcd.h: 84: _delay((unsigned long)((5)*(32000000/4000000.0)));
  8187  099C  300D               	movlw	13
  8188  099D                     u4437:	
  8189  099D  0B89               	decfsz	9,f
  8190  099E  299D               	goto	u4437
  8191  099F  0000               	nop
  8192                           
  8193                           ;flex_lcd.h: 85: PORTCbits.RC3 = 0; PORTDbits.RD0 = 0; PORTDbits.RD1 = 1; PORTCbits.RC4 
      +                          = 0; PORTDbits.RD3 = 0; PORTDbits.RD2 = 0;
  8194  09A0  0140               	movlb	0	; select bank0
  8195  09A1  118E               	bcf	14,3	;volatile
  8196  09A2  100F               	bcf	15,0	;volatile
  8197  09A3  148F               	bsf	15,1	;volatile
  8198  09A4  120E               	bcf	14,4	;volatile
  8199  09A5  118F               	bcf	15,3	;volatile
  8200  09A6  110F               	bcf	15,2	;volatile
  8201                           
  8202                           ;flex_lcd.h: 86: _delay((unsigned long)((5500)*(32000000/4000000.0)));
  8203  09A7  303A               	movlw	58
  8204  09A8  0140               	movlb	0	; select bank0
  8205  09A9  00A3               	movwf	??_Lcd_Init
  8206  09AA  3023               	movlw	35
  8207  09AB                     u4447:	
  8208  09AB  0B89               	decfsz	9,f
  8209  09AC  29AB               	goto	u4447
  8210  09AD  0BA3               	decfsz	??_Lcd_Init,f
  8211  09AE  29AB               	goto	u4447
  8212                           
  8213                           ;flex_lcd.h: 87: data = 40; Lcd_Cmd(data);
  8214  09AF  3028               	movlw	40
  8215  09B0  0140               	movlb	0	; select bank0
  8216  09B1  00A3               	movwf	??_Lcd_Init
  8217  09B2  0823               	movf	??_Lcd_Init,w
  8218  09B3  00A4               	movwf	Lcd_Init@data
  8219  09B4  0824               	movf	Lcd_Init@data,w
  8220  09B5  3196  263F  3189   	fcall	_Lcd_Cmd
  8221                           
  8222                           ;flex_lcd.h: 88: data = 16; Lcd_Cmd(data);
  8223  09B8  3010               	movlw	16
  8224  09B9  0140               	movlb	0	; select bank0
  8225  09BA  00A3               	movwf	??_Lcd_Init
  8226  09BB  0823               	movf	??_Lcd_Init,w
  8227  09BC  00A4               	movwf	Lcd_Init@data
  8228  09BD  0824               	movf	Lcd_Init@data,w
  8229  09BE  3196  263F  3189   	fcall	_Lcd_Cmd
  8230                           
  8231                           ;flex_lcd.h: 89: data = 1; Lcd_Cmd(data);
  8232  09C1  0140               	movlb	0	; select bank0
  8233  09C2  01A4               	clrf	Lcd_Init@data
  8234  09C3  0AA4               	incf	Lcd_Init@data,f
  8235  09C4  0824               	movf	Lcd_Init@data,w
  8236  09C5  3196  263F  3189   	fcall	_Lcd_Cmd
  8237                           
  8238                           ;flex_lcd.h: 90: data = 15; Lcd_Cmd(data);
  8239  09C8  300F               	movlw	15
  8240  09C9  0140               	movlb	0	; select bank0
  8241  09CA  00A3               	movwf	??_Lcd_Init
  8242  09CB  0823               	movf	??_Lcd_Init,w
  8243  09CC  00A4               	movwf	Lcd_Init@data
  8244  09CD  0824               	movf	Lcd_Init@data,w
  8245  09CE  3196  263F         	fcall	_Lcd_Cmd
  8246  09D0  0008               	return
  8247  09D1                     __end_of_Lcd_Init:	
  8248                           
  8249                           	psect	text27
  8250  163F                     __ptext27:	
  8251 ;; *************** function _Lcd_Cmd *****************
  8252 ;; Defined at:
  8253 ;;		line 150 in file "flex_lcd.h"
  8254 ;; Parameters:    Size  Location     Type
  8255 ;;  data            1    wreg     unsigned char 
  8256 ;; Auto vars:     Size  Location     Type
  8257 ;;  data            1    2[BANK0 ] unsigned char 
  8258 ;; Return value:  Size  Location     Type
  8259 ;;                  1    wreg      void 
  8260 ;; Registers used:
  8261 ;;		wreg, status,2, status,0
  8262 ;; Tracked objects:
  8263 ;;		On entry : 0/0
  8264 ;;		On exit  : 0/0
  8265 ;;		Unchanged: 0/0
  8266 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
  8267 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  8268 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  8269 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  8270 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  8271 ;;Total ram usage:        3 bytes
  8272 ;; Hardware stack levels used:    1
  8273 ;; Hardware stack levels required when called:    3
  8274 ;; This function calls:
  8275 ;;		Nothing
  8276 ;; This function is called by:
  8277 ;;		_Lcd_Init
  8278 ;;		_Lcd_Out
  8279 ;;		_Lcd_Out2
  8280 ;;		_main
  8281 ;; This function uses a non-reentrant model
  8282 ;;
  8283                           
  8284                           
  8285                           ;psect for function _Lcd_Cmd
  8286  163F                     _Lcd_Cmd:	
  8287                           
  8288                           ;incstack = 0
  8289                           ; Regs used in _Lcd_Cmd: [wreg+status,2+status,0]
  8290                           ;Lcd_Cmd@data stored from wreg
  8291  163F  0140               	movlb	0	; select bank0
  8292  1640  00A2               	movwf	Lcd_Cmd@data
  8293                           
  8294                           ;flex_lcd.h: 151: PORTDbits.RD3 = 0; PORTDbits.RD2 = 0;
  8295  1641  118F               	bcf	15,3	;volatile
  8296  1642  110F               	bcf	15,2	;volatile
  8297                           
  8298                           ;flex_lcd.h: 152: PORTCbits.RC3 = (data & 0b10000000)>>7; PORTDbits.RD0 = (data & 0b0100
      +                          0000)>>6;
  8299  1643  0822               	movf	Lcd_Cmd@data,w
  8300  1644  00A0               	movwf	??_Lcd_Cmd
  8301  1645  3007               	movlw	7
  8302  1646                     u2835:	
  8303  1646  36A0               	lsrf	??_Lcd_Cmd,f
  8304  1647  0B89               	decfsz	9,f
  8305  1648  2E46               	goto	u2835
  8306  1649  0820               	movf	??_Lcd_Cmd,w
  8307  164A  3901               	andlw	1
  8308  164B  00A1               	movwf	??_Lcd_Cmd+1
  8309  164C  0DA1               	rlf	??_Lcd_Cmd+1,f
  8310  164D  0DA1               	rlf	??_Lcd_Cmd+1,f
  8311  164E  0DA1               	rlf	??_Lcd_Cmd+1,f
  8312  164F  080E               	movf	14,w	;volatile
  8313  1650  0621               	xorwf	??_Lcd_Cmd+1,w
  8314  1651  39F7               	andlw	-9
  8315  1652  0621               	xorwf	??_Lcd_Cmd+1,w
  8316  1653  008E               	movwf	14	;volatile
  8317  1654  0822               	movf	Lcd_Cmd@data,w
  8318  1655  00A0               	movwf	??_Lcd_Cmd
  8319  1656  3006               	movlw	6
  8320  1657                     u2845:	
  8321  1657  36A0               	lsrf	??_Lcd_Cmd,f
  8322  1658  0B89               	decfsz	9,f
  8323  1659  2E57               	goto	u2845
  8324  165A  3001               	movlw	1
  8325  165B  0520               	andwf	??_Lcd_Cmd,w
  8326  165C  00A1               	movwf	??_Lcd_Cmd+1
  8327  165D  080F               	movf	15,w	;volatile
  8328  165E  0621               	xorwf	??_Lcd_Cmd+1,w
  8329  165F  39FE               	andlw	-2
  8330  1660  0621               	xorwf	??_Lcd_Cmd+1,w
  8331  1661  008F               	movwf	15	;volatile
  8332                           
  8333                           ;flex_lcd.h: 153: PORTDbits.RD1 = (data & 0b00100000)>>5; PORTCbits.RC4 = (data & 0b0001
      +                          0000)>>4;
  8334  1662  0822               	movf	Lcd_Cmd@data,w
  8335  1663  00A0               	movwf	??_Lcd_Cmd
  8336  1664  3005               	movlw	5
  8337  1665                     u2855:	
  8338  1665  36A0               	lsrf	??_Lcd_Cmd,f
  8339  1666  0B89               	decfsz	9,f
  8340  1667  2E65               	goto	u2855
  8341  1668  0820               	movf	??_Lcd_Cmd,w
  8342  1669  3901               	andlw	1
  8343  166A  00A1               	movwf	??_Lcd_Cmd+1
  8344  166B  0DA1               	rlf	??_Lcd_Cmd+1,f
  8345  166C  080F               	movf	15,w	;volatile
  8346  166D  0621               	xorwf	??_Lcd_Cmd+1,w
  8347  166E  39FD               	andlw	-3
  8348  166F  0621               	xorwf	??_Lcd_Cmd+1,w
  8349  1670  008F               	movwf	15	;volatile
  8350  1671  0822               	movf	Lcd_Cmd@data,w
  8351  1672  00A0               	movwf	??_Lcd_Cmd
  8352  1673  3004               	movlw	4
  8353  1674                     u2865:	
  8354  1674  36A0               	lsrf	??_Lcd_Cmd,f
  8355  1675  0B89               	decfsz	9,f
  8356  1676  2E74               	goto	u2865
  8357  1677  0820               	movf	??_Lcd_Cmd,w
  8358  1678  3901               	andlw	1
  8359  1679  00A1               	movwf	??_Lcd_Cmd+1
  8360  167A  0EA1               	swapf	??_Lcd_Cmd+1,f
  8361  167B  080E               	movf	14,w	;volatile
  8362  167C  0621               	xorwf	??_Lcd_Cmd+1,w
  8363  167D  39EF               	andlw	-17
  8364  167E  0621               	xorwf	??_Lcd_Cmd+1,w
  8365  167F  008E               	movwf	14	;volatile
  8366                           
  8367                           ;flex_lcd.h: 154: _delay(10);
  8368  1680  3003               	movlw	3
  8369  1681                     u4457:	
  8370  1681  0B89               	decfsz	9,f
  8371  1682  2E81               	goto	u4457
  8372  1683  0000               	nop
  8373                           
  8374                           ;flex_lcd.h: 155: PORTDbits.RD3 = 1; _delay((unsigned long)((5)*(32000000/4000000.0))); 
      +                          PORTDbits.RD3 = 0;
  8375  1684  0140               	movlb	0	; select bank0
  8376  1685  158F               	bsf	15,3	;volatile
  8377  1686  300D               	movlw	13
  8378  1687                     u4467:	
  8379  1687  0B89               	decfsz	9,f
  8380  1688  2E87               	goto	u4467
  8381  1689  0000               	nop
  8382  168A  0140               	movlb	0	; select bank0
  8383  168B  118F               	bcf	15,3	;volatile
  8384                           
  8385                           ;flex_lcd.h: 156: PORTCbits.RC3 = (data & 0b00001000)>>3; PORTDbits.RD0 = (data & 0b0000
      +                          0100)>>2;
  8386  168C  0822               	movf	Lcd_Cmd@data,w
  8387  168D  00A0               	movwf	??_Lcd_Cmd
  8388  168E  3003               	movlw	3
  8389  168F                     u2875:	
  8390  168F  36A0               	lsrf	??_Lcd_Cmd,f
  8391  1690  0B89               	decfsz	9,f
  8392  1691  2E8F               	goto	u2875
  8393  1692  0820               	movf	??_Lcd_Cmd,w
  8394  1693  3901               	andlw	1
  8395  1694  00A1               	movwf	??_Lcd_Cmd+1
  8396  1695  0DA1               	rlf	??_Lcd_Cmd+1,f
  8397  1696  0DA1               	rlf	??_Lcd_Cmd+1,f
  8398  1697  0DA1               	rlf	??_Lcd_Cmd+1,f
  8399  1698  080E               	movf	14,w	;volatile
  8400  1699  0621               	xorwf	??_Lcd_Cmd+1,w
  8401  169A  39F7               	andlw	-9
  8402  169B  0621               	xorwf	??_Lcd_Cmd+1,w
  8403  169C  008E               	movwf	14	;volatile
  8404  169D  0822               	movf	Lcd_Cmd@data,w
  8405  169E  00A0               	movwf	??_Lcd_Cmd
  8406  169F  3002               	movlw	2
  8407  16A0                     u2885:	
  8408  16A0  36A0               	lsrf	??_Lcd_Cmd,f
  8409  16A1  0B89               	decfsz	9,f
  8410  16A2  2EA0               	goto	u2885
  8411  16A3  3001               	movlw	1
  8412  16A4  0520               	andwf	??_Lcd_Cmd,w
  8413  16A5  00A1               	movwf	??_Lcd_Cmd+1
  8414  16A6  080F               	movf	15,w	;volatile
  8415  16A7  0621               	xorwf	??_Lcd_Cmd+1,w
  8416  16A8  39FE               	andlw	-2
  8417  16A9  0621               	xorwf	??_Lcd_Cmd+1,w
  8418  16AA  008F               	movwf	15	;volatile
  8419                           
  8420                           ;flex_lcd.h: 157: PORTDbits.RD1 = (data & 0b00000010)>>1; PORTCbits.RC4 = (data & 0b0000
      +                          0001);
  8421  16AB  3622               	lsrf	Lcd_Cmd@data,w
  8422  16AC  3901               	andlw	1
  8423  16AD  00A0               	movwf	??_Lcd_Cmd
  8424  16AE  0DA0               	rlf	??_Lcd_Cmd,f
  8425  16AF  080F               	movf	15,w	;volatile
  8426  16B0  0620               	xorwf	??_Lcd_Cmd,w
  8427  16B1  39FD               	andlw	-3
  8428  16B2  0620               	xorwf	??_Lcd_Cmd,w
  8429  16B3  008F               	movwf	15	;volatile
  8430  16B4  0822               	movf	Lcd_Cmd@data,w
  8431  16B5  3901               	andlw	1
  8432  16B6  00A0               	movwf	??_Lcd_Cmd
  8433  16B7  0EA0               	swapf	??_Lcd_Cmd,f
  8434  16B8  080E               	movf	14,w	;volatile
  8435  16B9  0620               	xorwf	??_Lcd_Cmd,w
  8436  16BA  39EF               	andlw	-17
  8437  16BB  0620               	xorwf	??_Lcd_Cmd,w
  8438  16BC  008E               	movwf	14	;volatile
  8439                           
  8440                           ;flex_lcd.h: 158: _delay(10);
  8441  16BD  3003               	movlw	3
  8442  16BE                     u4477:	
  8443  16BE  0B89               	decfsz	9,f
  8444  16BF  2EBE               	goto	u4477
  8445  16C0  0000               	nop
  8446                           
  8447                           ;flex_lcd.h: 159: PORTDbits.RD3 = 1; _delay((unsigned long)((5)*(32000000/4000000.0))); 
      +                          PORTDbits.RD3 = 0;
  8448  16C1  0140               	movlb	0	; select bank0
  8449  16C2  158F               	bsf	15,3	;volatile
  8450  16C3  300D               	movlw	13
  8451  16C4                     u4487:	
  8452  16C4  0B89               	decfsz	9,f
  8453  16C5  2EC4               	goto	u4487
  8454  16C6  0000               	nop
  8455  16C7  0140               	movlb	0	; select bank0
  8456  16C8  118F               	bcf	15,3	;volatile
  8457                           
  8458                           ;flex_lcd.h: 160: _delay((unsigned long)((5500)*(32000000/4000000.0)));
  8459  16C9  303A               	movlw	58
  8460  16CA  0140               	movlb	0	; select bank0
  8461  16CB  00A0               	movwf	??_Lcd_Cmd
  8462  16CC  3023               	movlw	35
  8463  16CD                     u4497:	
  8464  16CD  0B89               	decfsz	9,f
  8465  16CE  2ECD               	goto	u4497
  8466  16CF  0BA0               	decfsz	??_Lcd_Cmd,f
  8467  16D0  2ECD               	goto	u4497
  8468  16D1  0008               	return
  8469  16D2                     __end_of_Lcd_Cmd:	
  8470                           
  8471                           	psect	intentry
  8472  0004                     __pintentry:	
  8473 ;; *************** function _interrupcion *****************
  8474 ;; Defined at:
  8475 ;;		line 23 in file "main.c"
  8476 ;; Parameters:    Size  Location     Type
  8477 ;;		None
  8478 ;; Auto vars:     Size  Location     Type
  8479 ;;		None
  8480 ;; Return value:  Size  Location     Type
  8481 ;;                  1    wreg      void 
  8482 ;; Registers used:
  8483 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  8484 ;; Tracked objects:
  8485 ;;		On entry : 0/0
  8486 ;;		On exit  : 0/0
  8487 ;;		Unchanged: 0/0
  8488 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
  8489 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  8490 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  8491 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  8492 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  8493 ;;Total ram usage:        3 bytes
  8494 ;; Hardware stack levels used:    1
  8495 ;; Hardware stack levels required when called:    2
  8496 ;; This function calls:
  8497 ;;		i1_Lcd_Cmd
  8498 ;;		i1_Lcd_Out
  8499 ;; This function is called by:
  8500 ;;		Interrupt level 1
  8501 ;; This function uses a non-reentrant model
  8502 ;;
  8503                           
  8504  0004                     _interrupcion:	
  8505                           
  8506                           ;incstack = 0
  8507  0004  147E               	bsf	126,0	;set compiler interrupt flag (level 1)
  8508                           
  8509                           ; Regs used in _interrupcion: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  8510  0005  3180               	pagesel	$
  8511  0006  0140               	movlb	0	; select bank0
  8512  0007  087F               	movf	127,w
  8513  0008  00FB               	movwf	??_interrupcion+2
  8514                           
  8515                           ;main.c: 27: Lcd_Cmd(1);
  8516  0009  3001               	movlw	1
  8517  000A  3195  25AC  3180   	fcall	i1_Lcd_Cmd
  8518                           
  8519                           ;main.c: 30: Lcd_Out(1,0,"  Interruption");
  8520  000D  01F3               	clrf	i1Lcd_Out@x
  8521  000E  3027               	movlw	low (STR_1| (0+32768))
  8522  000F  00F4               	movwf	i1Lcd_Out@buffer
  8523  0010  3098               	movlw	high (STR_1| (0+32768))
  8524  0011  00F5               	movwf	i1Lcd_Out@buffer+1
  8525  0012  3001               	movlw	1
  8526  0013  3193  2310  3180   	fcall	i1_Lcd_Out
  8527                           
  8528                           ;main.c: 31: LATBbits.LATB7=0;
  8529  0016  0140               	movlb	0	; select bank0
  8530  0017  1397               	bcf	23,7	;volatile
  8531                           
  8532                           ;main.c: 32: LATBbits.LATB6=0;
  8533  0018  1317               	bcf	23,6	;volatile
  8534                           
  8535                           ;main.c: 33: LATBbits.LATB5=1;
  8536  0019  1697               	bsf	23,5	;volatile
  8537                           
  8538                           ;main.c: 34: _delay((unsigned long)((2000)*(32000000/4000.0)));
  8539  001A  3052               	movlw	82
  8540  001B  00FA               	movwf	??_interrupcion+1
  8541  001C  302B               	movlw	43
  8542  001D  00F9               	movwf	??_interrupcion
  8543  001E  3000               	movlw	0
  8544  001F                     u450_27:	
  8545  001F  0B89               	decfsz	9,f
  8546  0020  281F               	goto	u450_27
  8547  0021  0BF9               	decfsz	??_interrupcion,f
  8548  0022  281F               	goto	u450_27
  8549  0023  0BFA               	decfsz	??_interrupcion+1,f
  8550  0024  281F               	goto	u450_27
  8551  0025  3200               	nop2
  8552                           
  8553                           ;main.c: 35: PIR4bits.TMR1IF=0;
  8554  0026  014E               	movlb	14	; select bank14
  8555  0027  1010               	bcf	16,0	;volatile
  8556  0028  087B               	movf	??_interrupcion+2,w
  8557  0029  0140               	movlb	0	; select bank0
  8558  002A  00FF               	movwf	127
  8559  002B  107E               	bcf	126,0	;clear compiler interrupt flag (level 1)
  8560  002C  0009               	retfie
  8561  002D                     __end_of_interrupcion:	
  8562                           
  8563                           	psect	text29
  8564  1310                     __ptext29:	
  8565 ;; *************** function i1_Lcd_Out *****************
  8566 ;; Defined at:
  8567 ;;		line 94 in file "flex_lcd.h"
  8568 ;; Parameters:    Size  Location     Type
  8569 ;;  y               1    wreg     unsigned char 
  8570 ;;  x               1    3[COMMON] unsigned char 
  8571 ;;  buffer          2    4[COMMON] PTR const unsigned char 
  8572 ;;		 -> STR_3(15), STR_1(15), 
  8573 ;; Auto vars:     Size  Location     Type
  8574 ;;  y               1    7[COMMON] unsigned char 
  8575 ;;  Lcd_Out         1    8[COMMON] unsigned char 
  8576 ;; Return value:  Size  Location     Type
  8577 ;;                  1    wreg      void 
  8578 ;; Registers used:
  8579 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  8580 ;; Tracked objects:
  8581 ;;		On entry : 0/0
  8582 ;;		On exit  : 0/0
  8583 ;;		Unchanged: 0/0
  8584 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
  8585 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  8586 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  8587 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  8588 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  8589 ;;Total ram usage:        6 bytes
  8590 ;; Hardware stack levels used:    1
  8591 ;; Hardware stack levels required when called:    1
  8592 ;; This function calls:
  8593 ;;		i1_Lcd_Chr_CP
  8594 ;;		i1_Lcd_Cmd
  8595 ;; This function is called by:
  8596 ;;		_interrupcion
  8597 ;; This function uses a non-reentrant model
  8598 ;;
  8599                           
  8600                           
  8601                           ;psect for function i1_Lcd_Out
  8602  1310                     i1_Lcd_Out:	
  8603                           
  8604                           ;incstack = 0
  8605                           ; Regs used in i1_Lcd_Out: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  8606                           ;i1Lcd_Out@y stored from wreg
  8607  1310  00F7               	movwf	i1Lcd_Out@y
  8608                           
  8609                           ;flex_lcd.h: 96: unsigned char data;
  8610                           ;flex_lcd.h: 97: switch (y)
  8611  1311  2B21               	goto	i1l2896
  8612  1312                     i1l2886:	
  8613                           ;flex_lcd.h: 98: {
  8614                           ;flex_lcd.h: 99: case 1: data = 128 + x; break;
  8615                           
  8616  1312  0873               	movf	i1Lcd_Out@x,w
  8617  1313  3E80               	addlw	128
  8618  1314  2B1D               	goto	L16
  8619  1315                     i1l2888:	
  8620                           ;flex_lcd.h: 100: case 2: data = 192 + x; break;
  8621                           
  8622  1315  0873               	movf	i1Lcd_Out@x,w
  8623  1316  3EC0               	addlw	192
  8624  1317  2B1D               	goto	L16
  8625  1318                     i1l2890:	
  8626                           ;flex_lcd.h: 101: case 3: data = 148 + x; break;
  8627                           
  8628  1318  0873               	movf	i1Lcd_Out@x,w
  8629  1319  3E94               	addlw	148
  8630  131A  2B1D               	goto	L16
  8631  131B                     i1l2892:	
  8632                           ;flex_lcd.h: 102: case 4: data = 212 + x; break;
  8633                           
  8634  131B  0873               	movf	i1Lcd_Out@x,w
  8635  131C  3ED4               	addlw	212
  8636  131D                     L16:	
  8637  131D  00F6               	movwf	??i1_Lcd_Out
  8638  131E  0876               	movf	??i1_Lcd_Out,w
  8639  131F  00F8               	movwf	i1Lcd_Out@data
  8640                           
  8641                           ;flex_lcd.h: 104: }
  8642                           
  8643                           ;flex_lcd.h: 103: default: break;
  8644  1320  2B2F               	goto	i1l2898
  8645  1321                     i1l2896:	
  8646  1321  0877               	movf	i1Lcd_Out@y,w
  8647                           
  8648                           ; Switch size 1, requested type "space"
  8649                           ; Number of cases is 4, Range of values is 1 to 4
  8650                           ; switch strategies available:
  8651                           ; Name         Instructions Cycles
  8652                           ; simple_byte           13     7 (average)
  8653                           ; direct_byte           17     9 (fixed)
  8654                           ; jumptable            263     9 (fixed)
  8655                           ;	Chosen strategy is simple_byte
  8656  1322  3A01               	xorlw	1	; case 1
  8657  1323  1903               	skipnz
  8658  1324  2B12               	goto	i1l2886
  8659  1325  3A03               	xorlw	3	; case 2
  8660  1326  1903               	skipnz
  8661  1327  2B15               	goto	i1l2888
  8662  1328  3A01               	xorlw	1	; case 3
  8663  1329  1903               	skipnz
  8664  132A  2B18               	goto	i1l2890
  8665  132B  3A07               	xorlw	7	; case 4
  8666  132C  1903               	skipnz
  8667  132D  2B1B               	goto	i1l2892
  8668  132E  2B2F               	goto	i1l2898
  8669  132F                     i1l2898:	
  8670                           
  8671                           ;flex_lcd.h: 105: Lcd_Cmd(data);
  8672  132F  0878               	movf	i1Lcd_Out@data,w
  8673  1330  3195  25AC  3193   	fcall	i1_Lcd_Cmd
  8674  1333                     i1l2904:	
  8675                           ;flex_lcd.h: 106: while(*buffer)
  8676                           
  8677  1333  0874               	movf	i1Lcd_Out@buffer,w
  8678  1334  0084               	movwf	4
  8679  1335  0875               	movf	i1Lcd_Out@buffer+1,w
  8680  1336  0085               	movwf	5
  8681  1337  0012               	moviw fsr0++
  8682  1338  1903               	btfsc	3,2
  8683  1339  0008               	return
  8684                           
  8685                           ;flex_lcd.h: 107: {
  8686                           ;flex_lcd.h: 108: Lcd_Chr_CP(*buffer);
  8687  133A  0874               	movf	i1Lcd_Out@buffer,w
  8688  133B  0084               	movwf	4
  8689  133C  0875               	movf	i1Lcd_Out@buffer+1,w
  8690  133D  0085               	movwf	5
  8691  133E  0800               	movf	0,w	;code access
  8692  133F  3196  26D2  3193   	fcall	i1_Lcd_Chr_CP
  8693                           
  8694                           ;flex_lcd.h: 109: buffer++;
  8695  1342  3001               	movlw	1
  8696  1343  07F4               	addwf	i1Lcd_Out@buffer,f
  8697  1344  3000               	movlw	0
  8698  1345  3DF5               	addwfc	i1Lcd_Out@buffer+1,f
  8699  1346  2B33               	goto	i1l2904
  8700  1347                     __end_ofi1_Lcd_Out:	
  8701                           ;flex_lcd.h: 110: }
  8702                           ;flex_lcd.h: 111: return;
  8703                           
  8704                           
  8705                           	psect	text30
  8706  15AC                     __ptext30:	
  8707 ;; *************** function i1_Lcd_Cmd *****************
  8708 ;; Defined at:
  8709 ;;		line 150 in file "flex_lcd.h"
  8710 ;; Parameters:    Size  Location     Type
  8711 ;;  data            1    wreg     unsigned char 
  8712 ;; Auto vars:     Size  Location     Type
  8713 ;;  data            1    2[COMMON] unsigned char 
  8714 ;; Return value:  Size  Location     Type
  8715 ;;                  1    wreg      void 
  8716 ;; Registers used:
  8717 ;;		wreg, status,2, status,0
  8718 ;; Tracked objects:
  8719 ;;		On entry : 0/0
  8720 ;;		On exit  : 0/0
  8721 ;;		Unchanged: 0/0
  8722 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
  8723 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  8724 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  8725 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  8726 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  8727 ;;Total ram usage:        3 bytes
  8728 ;; Hardware stack levels used:    1
  8729 ;; This function calls:
  8730 ;;		Nothing
  8731 ;; This function is called by:
  8732 ;;		_interrupcion
  8733 ;;		i1_Lcd_Out
  8734 ;; This function uses a non-reentrant model
  8735 ;;
  8736                           
  8737                           
  8738                           ;psect for function i1_Lcd_Cmd
  8739  15AC                     i1_Lcd_Cmd:	
  8740                           
  8741                           ;incstack = 0
  8742                           ; Regs used in i1_Lcd_Cmd: [wreg+status,2+status,0]
  8743                           ;i1Lcd_Cmd@data stored from wreg
  8744  15AC  00F2               	movwf	i1Lcd_Cmd@data
  8745                           
  8746                           ;flex_lcd.h: 151: PORTDbits.RD3 = 0; PORTDbits.RD2 = 0;
  8747  15AD  0140               	movlb	0	; select bank0
  8748  15AE  118F               	bcf	15,3	;volatile
  8749  15AF  110F               	bcf	15,2	;volatile
  8750                           
  8751                           ;flex_lcd.h: 152: PORTCbits.RC3 = (data & 0b10000000)>>7; PORTDbits.RD0 = (data & 0b0100
      +                          0000)>>6;
  8752  15B0  0872               	movf	i1Lcd_Cmd@data,w
  8753  15B1  00F0               	movwf	??i1_Lcd_Cmd
  8754  15B2  3007               	movlw	7
  8755  15B3                     u365_25:	
  8756  15B3  36F0               	lsrf	??i1_Lcd_Cmd,f
  8757  15B4  0B89               	decfsz	9,f
  8758  15B5  2DB3               	goto	u365_25
  8759  15B6  0870               	movf	??i1_Lcd_Cmd,w
  8760  15B7  3901               	andlw	1
  8761  15B8  00F1               	movwf	??i1_Lcd_Cmd+1
  8762  15B9  0DF1               	rlf	??i1_Lcd_Cmd+1,f
  8763  15BA  0DF1               	rlf	??i1_Lcd_Cmd+1,f
  8764  15BB  0DF1               	rlf	??i1_Lcd_Cmd+1,f
  8765  15BC  080E               	movf	14,w	;volatile
  8766  15BD  0671               	xorwf	??i1_Lcd_Cmd+1,w
  8767  15BE  39F7               	andlw	-9
  8768  15BF  0671               	xorwf	??i1_Lcd_Cmd+1,w
  8769  15C0  008E               	movwf	14	;volatile
  8770  15C1  0872               	movf	i1Lcd_Cmd@data,w
  8771  15C2  00F0               	movwf	??i1_Lcd_Cmd
  8772  15C3  3006               	movlw	6
  8773  15C4                     u366_25:	
  8774  15C4  36F0               	lsrf	??i1_Lcd_Cmd,f
  8775  15C5  0B89               	decfsz	9,f
  8776  15C6  2DC4               	goto	u366_25
  8777  15C7  3001               	movlw	1
  8778  15C8  0570               	andwf	??i1_Lcd_Cmd,w
  8779  15C9  00F1               	movwf	??i1_Lcd_Cmd+1
  8780  15CA  080F               	movf	15,w	;volatile
  8781  15CB  0671               	xorwf	??i1_Lcd_Cmd+1,w
  8782  15CC  39FE               	andlw	-2
  8783  15CD  0671               	xorwf	??i1_Lcd_Cmd+1,w
  8784  15CE  008F               	movwf	15	;volatile
  8785                           
  8786                           ;flex_lcd.h: 153: PORTDbits.RD1 = (data & 0b00100000)>>5; PORTCbits.RC4 = (data & 0b0001
      +                          0000)>>4;
  8787  15CF  0872               	movf	i1Lcd_Cmd@data,w
  8788  15D0  00F0               	movwf	??i1_Lcd_Cmd
  8789  15D1  3005               	movlw	5
  8790  15D2                     u367_25:	
  8791  15D2  36F0               	lsrf	??i1_Lcd_Cmd,f
  8792  15D3  0B89               	decfsz	9,f
  8793  15D4  2DD2               	goto	u367_25
  8794  15D5  0870               	movf	??i1_Lcd_Cmd,w
  8795  15D6  3901               	andlw	1
  8796  15D7  00F1               	movwf	??i1_Lcd_Cmd+1
  8797  15D8  0DF1               	rlf	??i1_Lcd_Cmd+1,f
  8798  15D9  080F               	movf	15,w	;volatile
  8799  15DA  0671               	xorwf	??i1_Lcd_Cmd+1,w
  8800  15DB  39FD               	andlw	-3
  8801  15DC  0671               	xorwf	??i1_Lcd_Cmd+1,w
  8802  15DD  008F               	movwf	15	;volatile
  8803  15DE  0872               	movf	i1Lcd_Cmd@data,w
  8804  15DF  00F0               	movwf	??i1_Lcd_Cmd
  8805  15E0  3004               	movlw	4
  8806  15E1                     u368_25:	
  8807  15E1  36F0               	lsrf	??i1_Lcd_Cmd,f
  8808  15E2  0B89               	decfsz	9,f
  8809  15E3  2DE1               	goto	u368_25
  8810  15E4  0870               	movf	??i1_Lcd_Cmd,w
  8811  15E5  3901               	andlw	1
  8812  15E6  00F1               	movwf	??i1_Lcd_Cmd+1
  8813  15E7  0EF1               	swapf	??i1_Lcd_Cmd+1,f
  8814  15E8  080E               	movf	14,w	;volatile
  8815  15E9  0671               	xorwf	??i1_Lcd_Cmd+1,w
  8816  15EA  39EF               	andlw	-17
  8817  15EB  0671               	xorwf	??i1_Lcd_Cmd+1,w
  8818  15EC  008E               	movwf	14	;volatile
  8819                           
  8820                           ;flex_lcd.h: 154: _delay(10);
  8821  15ED  3003               	movlw	3
  8822  15EE                     u451_27:	
  8823  15EE  0B89               	decfsz	9,f
  8824  15EF  2DEE               	goto	u451_27
  8825  15F0  0000               	nop
  8826                           
  8827                           ;flex_lcd.h: 155: PORTDbits.RD3 = 1; _delay((unsigned long)((5)*(32000000/4000000.0))); 
      +                          PORTDbits.RD3 = 0;
  8828  15F1  0140               	movlb	0	; select bank0
  8829  15F2  158F               	bsf	15,3	;volatile
  8830  15F3  300D               	movlw	13
  8831  15F4                     u452_27:	
  8832  15F4  0B89               	decfsz	9,f
  8833  15F5  2DF4               	goto	u452_27
  8834  15F6  0000               	nop
  8835  15F7  0140               	movlb	0	; select bank0
  8836  15F8  118F               	bcf	15,3	;volatile
  8837                           
  8838                           ;flex_lcd.h: 156: PORTCbits.RC3 = (data & 0b00001000)>>3; PORTDbits.RD0 = (data & 0b0000
      +                          0100)>>2;
  8839  15F9  0872               	movf	i1Lcd_Cmd@data,w
  8840  15FA  00F0               	movwf	??i1_Lcd_Cmd
  8841  15FB  3003               	movlw	3
  8842  15FC                     u369_25:	
  8843  15FC  36F0               	lsrf	??i1_Lcd_Cmd,f
  8844  15FD  0B89               	decfsz	9,f
  8845  15FE  2DFC               	goto	u369_25
  8846  15FF  0870               	movf	??i1_Lcd_Cmd,w
  8847  1600  3901               	andlw	1
  8848  1601  00F1               	movwf	??i1_Lcd_Cmd+1
  8849  1602  0DF1               	rlf	??i1_Lcd_Cmd+1,f
  8850  1603  0DF1               	rlf	??i1_Lcd_Cmd+1,f
  8851  1604  0DF1               	rlf	??i1_Lcd_Cmd+1,f
  8852  1605  080E               	movf	14,w	;volatile
  8853  1606  0671               	xorwf	??i1_Lcd_Cmd+1,w
  8854  1607  39F7               	andlw	-9
  8855  1608  0671               	xorwf	??i1_Lcd_Cmd+1,w
  8856  1609  008E               	movwf	14	;volatile
  8857  160A  0872               	movf	i1Lcd_Cmd@data,w
  8858  160B  00F0               	movwf	??i1_Lcd_Cmd
  8859  160C  3002               	movlw	2
  8860  160D                     u370_25:	
  8861  160D  36F0               	lsrf	??i1_Lcd_Cmd,f
  8862  160E  0B89               	decfsz	9,f
  8863  160F  2E0D               	goto	u370_25
  8864  1610  3001               	movlw	1
  8865  1611  0570               	andwf	??i1_Lcd_Cmd,w
  8866  1612  00F1               	movwf	??i1_Lcd_Cmd+1
  8867  1613  080F               	movf	15,w	;volatile
  8868  1614  0671               	xorwf	??i1_Lcd_Cmd+1,w
  8869  1615  39FE               	andlw	-2
  8870  1616  0671               	xorwf	??i1_Lcd_Cmd+1,w
  8871  1617  008F               	movwf	15	;volatile
  8872                           
  8873                           ;flex_lcd.h: 157: PORTDbits.RD1 = (data & 0b00000010)>>1; PORTCbits.RC4 = (data & 0b0000
      +                          0001);
  8874  1618  3672               	lsrf	i1Lcd_Cmd@data,w
  8875  1619  3901               	andlw	1
  8876  161A  00F0               	movwf	??i1_Lcd_Cmd
  8877  161B  0DF0               	rlf	??i1_Lcd_Cmd,f
  8878  161C  080F               	movf	15,w	;volatile
  8879  161D  0670               	xorwf	??i1_Lcd_Cmd,w
  8880  161E  39FD               	andlw	-3
  8881  161F  0670               	xorwf	??i1_Lcd_Cmd,w
  8882  1620  008F               	movwf	15	;volatile
  8883  1621  0872               	movf	i1Lcd_Cmd@data,w
  8884  1622  3901               	andlw	1
  8885  1623  00F0               	movwf	??i1_Lcd_Cmd
  8886  1624  0EF0               	swapf	??i1_Lcd_Cmd,f
  8887  1625  080E               	movf	14,w	;volatile
  8888  1626  0670               	xorwf	??i1_Lcd_Cmd,w
  8889  1627  39EF               	andlw	-17
  8890  1628  0670               	xorwf	??i1_Lcd_Cmd,w
  8891  1629  008E               	movwf	14	;volatile
  8892                           
  8893                           ;flex_lcd.h: 158: _delay(10);
  8894  162A  3003               	movlw	3
  8895  162B                     u453_27:	
  8896  162B  0B89               	decfsz	9,f
  8897  162C  2E2B               	goto	u453_27
  8898  162D  0000               	nop
  8899                           
  8900                           ;flex_lcd.h: 159: PORTDbits.RD3 = 1; _delay((unsigned long)((5)*(32000000/4000000.0))); 
      +                          PORTDbits.RD3 = 0;
  8901  162E  0140               	movlb	0	; select bank0
  8902  162F  158F               	bsf	15,3	;volatile
  8903  1630  300D               	movlw	13
  8904  1631                     u454_27:	
  8905  1631  0B89               	decfsz	9,f
  8906  1632  2E31               	goto	u454_27
  8907  1633  0000               	nop
  8908  1634  0140               	movlb	0	; select bank0
  8909  1635  118F               	bcf	15,3	;volatile
  8910                           
  8911                           ;flex_lcd.h: 160: _delay((unsigned long)((5500)*(32000000/4000000.0)));
  8912  1636  303A               	movlw	58
  8913  1637  00F0               	movwf	??i1_Lcd_Cmd
  8914  1638  3023               	movlw	35
  8915  1639                     u455_27:	
  8916  1639  0B89               	decfsz	9,f
  8917  163A  2E39               	goto	u455_27
  8918  163B  0BF0               	decfsz	??i1_Lcd_Cmd,f
  8919  163C  2E39               	goto	u455_27
  8920  163D  0000               	nop
  8921  163E  0008               	return
  8922  163F                     __end_ofi1_Lcd_Cmd:	
  8923                           
  8924                           	psect	text31
  8925  16D2                     __ptext31:	
  8926 ;; *************** function i1_Lcd_Chr_CP *****************
  8927 ;; Defined at:
  8928 ;;		line 136 in file "flex_lcd.h"
  8929 ;; Parameters:    Size  Location     Type
  8930 ;;  data            1    wreg     unsigned char 
  8931 ;; Auto vars:     Size  Location     Type
  8932 ;;  data            1    2[COMMON] unsigned char 
  8933 ;; Return value:  Size  Location     Type
  8934 ;;                  1    wreg      void 
  8935 ;; Registers used:
  8936 ;;		wreg, status,2, status,0
  8937 ;; Tracked objects:
  8938 ;;		On entry : 0/0
  8939 ;;		On exit  : 0/0
  8940 ;;		Unchanged: 0/0
  8941 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
  8942 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  8943 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  8944 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  8945 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  8946 ;;Total ram usage:        3 bytes
  8947 ;; Hardware stack levels used:    1
  8948 ;; This function calls:
  8949 ;;		Nothing
  8950 ;; This function is called by:
  8951 ;;		i1_Lcd_Out
  8952 ;; This function uses a non-reentrant model
  8953 ;;
  8954                           
  8955                           
  8956                           ;psect for function i1_Lcd_Chr_CP
  8957  16D2                     i1_Lcd_Chr_CP:	
  8958                           
  8959                           ;incstack = 0
  8960                           ; Regs used in i1_Lcd_Chr_CP: [wreg+status,2+status,0]
  8961                           ;i1Lcd_Chr_CP@data stored from wreg
  8962  16D2  00F2               	movwf	i1Lcd_Chr_CP@data
  8963                           
  8964                           ;flex_lcd.h: 137: PORTDbits.RD3 = 0; PORTDbits.RD2 = 1;
  8965  16D3  0140               	movlb	0	; select bank0
  8966  16D4  118F               	bcf	15,3	;volatile
  8967  16D5  150F               	bsf	15,2	;volatile
  8968                           
  8969                           ;flex_lcd.h: 138: PORTCbits.RC3 = (data & 0b10000000)>>7; PORTDbits.RD0 = (data & 0b0100
      +                          0000)>>6;
  8970  16D6  0872               	movf	i1Lcd_Chr_CP@data,w
  8971  16D7  00F0               	movwf	??i1_Lcd_Chr_CP
  8972  16D8  3007               	movlw	7
  8973  16D9                     u359_25:	
  8974  16D9  36F0               	lsrf	??i1_Lcd_Chr_CP,f
  8975  16DA  0B89               	decfsz	9,f
  8976  16DB  2ED9               	goto	u359_25
  8977  16DC  0870               	movf	??i1_Lcd_Chr_CP,w
  8978  16DD  3901               	andlw	1
  8979  16DE  00F1               	movwf	??i1_Lcd_Chr_CP+1
  8980  16DF  0DF1               	rlf	??i1_Lcd_Chr_CP+1,f
  8981  16E0  0DF1               	rlf	??i1_Lcd_Chr_CP+1,f
  8982  16E1  0DF1               	rlf	??i1_Lcd_Chr_CP+1,f
  8983  16E2  080E               	movf	14,w	;volatile
  8984  16E3  0671               	xorwf	??i1_Lcd_Chr_CP+1,w
  8985  16E4  39F7               	andlw	-9
  8986  16E5  0671               	xorwf	??i1_Lcd_Chr_CP+1,w
  8987  16E6  008E               	movwf	14	;volatile
  8988  16E7  0872               	movf	i1Lcd_Chr_CP@data,w
  8989  16E8  00F0               	movwf	??i1_Lcd_Chr_CP
  8990  16E9  3006               	movlw	6
  8991  16EA                     u360_25:	
  8992  16EA  36F0               	lsrf	??i1_Lcd_Chr_CP,f
  8993  16EB  0B89               	decfsz	9,f
  8994  16EC  2EEA               	goto	u360_25
  8995  16ED  3001               	movlw	1
  8996  16EE  0570               	andwf	??i1_Lcd_Chr_CP,w
  8997  16EF  00F1               	movwf	??i1_Lcd_Chr_CP+1
  8998  16F0  080F               	movf	15,w	;volatile
  8999  16F1  0671               	xorwf	??i1_Lcd_Chr_CP+1,w
  9000  16F2  39FE               	andlw	-2
  9001  16F3  0671               	xorwf	??i1_Lcd_Chr_CP+1,w
  9002  16F4  008F               	movwf	15	;volatile
  9003                           
  9004                           ;flex_lcd.h: 139: PORTDbits.RD1 = (data & 0b00100000)>>5; PORTCbits.RC4 = (data & 0b0001
      +                          0000)>>4;
  9005  16F5  0872               	movf	i1Lcd_Chr_CP@data,w
  9006  16F6  00F0               	movwf	??i1_Lcd_Chr_CP
  9007  16F7  3005               	movlw	5
  9008  16F8                     u361_25:	
  9009  16F8  36F0               	lsrf	??i1_Lcd_Chr_CP,f
  9010  16F9  0B89               	decfsz	9,f
  9011  16FA  2EF8               	goto	u361_25
  9012  16FB  0870               	movf	??i1_Lcd_Chr_CP,w
  9013  16FC  3901               	andlw	1
  9014  16FD  00F1               	movwf	??i1_Lcd_Chr_CP+1
  9015  16FE  0DF1               	rlf	??i1_Lcd_Chr_CP+1,f
  9016  16FF  080F               	movf	15,w	;volatile
  9017  1700  0671               	xorwf	??i1_Lcd_Chr_CP+1,w
  9018  1701  39FD               	andlw	-3
  9019  1702  0671               	xorwf	??i1_Lcd_Chr_CP+1,w
  9020  1703  008F               	movwf	15	;volatile
  9021  1704  0872               	movf	i1Lcd_Chr_CP@data,w
  9022  1705  00F0               	movwf	??i1_Lcd_Chr_CP
  9023  1706  3004               	movlw	4
  9024  1707                     u362_25:	
  9025  1707  36F0               	lsrf	??i1_Lcd_Chr_CP,f
  9026  1708  0B89               	decfsz	9,f
  9027  1709  2F07               	goto	u362_25
  9028  170A  0870               	movf	??i1_Lcd_Chr_CP,w
  9029  170B  3901               	andlw	1
  9030  170C  00F1               	movwf	??i1_Lcd_Chr_CP+1
  9031  170D  0EF1               	swapf	??i1_Lcd_Chr_CP+1,f
  9032  170E  080E               	movf	14,w	;volatile
  9033  170F  0671               	xorwf	??i1_Lcd_Chr_CP+1,w
  9034  1710  39EF               	andlw	-17
  9035  1711  0671               	xorwf	??i1_Lcd_Chr_CP+1,w
  9036  1712  008E               	movwf	14	;volatile
  9037                           
  9038                           ;flex_lcd.h: 140: _delay(10);
  9039  1713  3003               	movlw	3
  9040  1714                     u456_27:	
  9041  1714  0B89               	decfsz	9,f
  9042  1715  2F14               	goto	u456_27
  9043  1716  0000               	nop
  9044                           
  9045                           ;flex_lcd.h: 141: PORTDbits.RD3 = 1; _delay((unsigned long)((5)*(32000000/4000000.0))); 
      +                          PORTDbits.RD3 = 0;
  9046  1717  0140               	movlb	0	; select bank0
  9047  1718  158F               	bsf	15,3	;volatile
  9048  1719  300D               	movlw	13
  9049  171A                     u457_27:	
  9050  171A  0B89               	decfsz	9,f
  9051  171B  2F1A               	goto	u457_27
  9052  171C  0000               	nop
  9053  171D  0140               	movlb	0	; select bank0
  9054  171E  118F               	bcf	15,3	;volatile
  9055                           
  9056                           ;flex_lcd.h: 142: PORTCbits.RC3 = (data & 0b00001000)>>3; PORTDbits.RD0 = (data & 0b0000
      +                          0100)>>2;
  9057  171F  0872               	movf	i1Lcd_Chr_CP@data,w
  9058  1720  00F0               	movwf	??i1_Lcd_Chr_CP
  9059  1721  3003               	movlw	3
  9060  1722                     u363_25:	
  9061  1722  36F0               	lsrf	??i1_Lcd_Chr_CP,f
  9062  1723  0B89               	decfsz	9,f
  9063  1724  2F22               	goto	u363_25
  9064  1725  0870               	movf	??i1_Lcd_Chr_CP,w
  9065  1726  3901               	andlw	1
  9066  1727  00F1               	movwf	??i1_Lcd_Chr_CP+1
  9067  1728  0DF1               	rlf	??i1_Lcd_Chr_CP+1,f
  9068  1729  0DF1               	rlf	??i1_Lcd_Chr_CP+1,f
  9069  172A  0DF1               	rlf	??i1_Lcd_Chr_CP+1,f
  9070  172B  080E               	movf	14,w	;volatile
  9071  172C  0671               	xorwf	??i1_Lcd_Chr_CP+1,w
  9072  172D  39F7               	andlw	-9
  9073  172E  0671               	xorwf	??i1_Lcd_Chr_CP+1,w
  9074  172F  008E               	movwf	14	;volatile
  9075  1730  0872               	movf	i1Lcd_Chr_CP@data,w
  9076  1731  00F0               	movwf	??i1_Lcd_Chr_CP
  9077  1732  3002               	movlw	2
  9078  1733                     u364_25:	
  9079  1733  36F0               	lsrf	??i1_Lcd_Chr_CP,f
  9080  1734  0B89               	decfsz	9,f
  9081  1735  2F33               	goto	u364_25
  9082  1736  3001               	movlw	1
  9083  1737  0570               	andwf	??i1_Lcd_Chr_CP,w
  9084  1738  00F1               	movwf	??i1_Lcd_Chr_CP+1
  9085  1739  080F               	movf	15,w	;volatile
  9086  173A  0671               	xorwf	??i1_Lcd_Chr_CP+1,w
  9087  173B  39FE               	andlw	-2
  9088  173C  0671               	xorwf	??i1_Lcd_Chr_CP+1,w
  9089  173D  008F               	movwf	15	;volatile
  9090                           
  9091                           ;flex_lcd.h: 143: PORTDbits.RD1 = (data & 0b00000010)>>1; PORTCbits.RC4 = (data & 0b0000
      +                          0001);
  9092  173E  3672               	lsrf	i1Lcd_Chr_CP@data,w
  9093  173F  3901               	andlw	1
  9094  1740  00F0               	movwf	??i1_Lcd_Chr_CP
  9095  1741  0DF0               	rlf	??i1_Lcd_Chr_CP,f
  9096  1742  080F               	movf	15,w	;volatile
  9097  1743  0670               	xorwf	??i1_Lcd_Chr_CP,w
  9098  1744  39FD               	andlw	-3
  9099  1745  0670               	xorwf	??i1_Lcd_Chr_CP,w
  9100  1746  008F               	movwf	15	;volatile
  9101  1747  0872               	movf	i1Lcd_Chr_CP@data,w
  9102  1748  3901               	andlw	1
  9103  1749  00F0               	movwf	??i1_Lcd_Chr_CP
  9104  174A  0EF0               	swapf	??i1_Lcd_Chr_CP,f
  9105  174B  080E               	movf	14,w	;volatile
  9106  174C  0670               	xorwf	??i1_Lcd_Chr_CP,w
  9107  174D  39EF               	andlw	-17
  9108  174E  0670               	xorwf	??i1_Lcd_Chr_CP,w
  9109  174F  008E               	movwf	14	;volatile
  9110                           
  9111                           ;flex_lcd.h: 144: _delay(10);
  9112  1750  3003               	movlw	3
  9113  1751                     u458_27:	
  9114  1751  0B89               	decfsz	9,f
  9115  1752  2F51               	goto	u458_27
  9116  1753  0000               	nop
  9117                           
  9118                           ;flex_lcd.h: 145: PORTDbits.RD3 = 1; _delay((unsigned long)((5)*(32000000/4000000.0))); 
      +                          PORTDbits.RD3 = 0;
  9119  1754  0140               	movlb	0	; select bank0
  9120  1755  158F               	bsf	15,3	;volatile
  9121  1756  300D               	movlw	13
  9122  1757                     u459_27:	
  9123  1757  0B89               	decfsz	9,f
  9124  1758  2F57               	goto	u459_27
  9125  1759  0000               	nop
  9126  175A  0140               	movlb	0	; select bank0
  9127  175B  118F               	bcf	15,3	;volatile
  9128                           
  9129                           ;flex_lcd.h: 146: _delay((unsigned long)((5)*(32000000/4000000.0))); _delay((unsigned lo
      +                          ng)((5500)*(32000000/4000000.0)));
  9130  175C  300D               	movlw	13
  9131  175D                     u460_27:	
  9132  175D  0B89               	decfsz	9,f
  9133  175E  2F5D               	goto	u460_27
  9134  175F  0000               	nop
  9135  1760  303A               	movlw	58
  9136  1761  00F0               	movwf	??i1_Lcd_Chr_CP
  9137  1762  3023               	movlw	35
  9138  1763                     u461_27:	
  9139  1763  0B89               	decfsz	9,f
  9140  1764  2F63               	goto	u461_27
  9141  1765  0BF0               	decfsz	??i1_Lcd_Chr_CP,f
  9142  1766  2F63               	goto	u461_27
  9143  1767  0000               	nop
  9144  1768  0008               	return
  9145  1769                     __end_ofi1_Lcd_Chr_CP:	
  9146  007E                     btemp	set	126	;btemp
  9147  007E                     int$flags	set	126
  9148  007E                     wtemp0	set	126


Data Sizes:
    Strings     44
    Constant    118
    Data        2
    BSS         22
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     12      12
    BANK0            80     80      80
    BANK1            80     35      59
    BANK2            80      0       0
    BANK3            80      0       0
    BANK4            80      0       0
    BANK5            80      0       0
    BANK6            80      0       0
    BANK7            80      0       0
    BANK8            80      0       0
    BANK9            80      0       0
    BANK10           80      0       0
    BANK11           80      0       0
    BANK12           80      0       0
    BANK13           80      0       0
    BANK14           80      0       0
    BANK15           80      0       0
    BANK16           80      0       0
    BANK17           80      0       0
    BANK18           80      0       0
    BANK19           80      0       0
    BANK20           80      0       0
    BANK21           80      0       0
    BANK22           80      0       0
    BANK23           80      0       0
    BANK24           80      0       0
    BANK25           80      0       0
    BANK26           80      0       0
    BANK27           80      0       0
    BANK28           80      0       0
    BANK29           80      0       0
    BANK30           80      0       0
    BANK31           80      0       0
    BANK32           80      0       0
    BANK33           80      0       0
    BANK34           80      0       0
    BANK35           80      0       0
    BANK36           80      0       0
    BANK37           80      0       0
    BANK38           80      0       0
    BANK39           80      0       0
    BANK40           80      0       0
    BANK41           80      0       0
    BANK42           80      0       0
    BANK43           80      0       0
    BANK44           80      0       0
    BANK45           80      0       0
    BANK46           80      0       0
    BANK47           80      0       0
    BANK48           80      0       0
    BANK49           80      0       0
    BANK50           80      0       0

Pointer List with Targets:

    sprintf@f	PTR const unsigned char  size(2) Largest target is 14
		 -> STR_2(CODE[14]), 

    sprintf@sp	PTR unsigned char  size(1) Largest target is 16
		 -> buffer1(BANK1[16]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    Lcd_Out2@buffer	PTR unsigned char  size(1) Largest target is 16
		 -> buffer1(BANK1[16]), 

    Lcd_Out@buffer	PTR const unsigned char  size(2) Largest target is 15
		 -> STR_3(CODE[15]), STR_1(CODE[15]), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _interrupcion in COMMON

    _interrupcion->i1_Lcd_Out
    i1_Lcd_Out->i1_Lcd_Chr_CP
    i1_Lcd_Out->i1_Lcd_Cmd

Critical Paths under _main in BANK0

    _main->_sprintf
    _sprintf->___ftsub
    _scale->___ftmul
    _fround->___ftmul
    ___wmul->___awdiv
    ___ftmul->___wmul
    ___awdiv->___awmod
    ___lltoft->___ftpack
    ___fttol->_scale
    ___ftsub->___ftadd
    ___ftadd->___ftdiv
    ___ftneg->___awtoft
    ___lwtoft->___ftpack
    ___ftdiv->___ftmul
    ___awtoft->___ftpack
    _Lcd_Out2->_Lcd_Chr_CP
    _Lcd_Out2->_Lcd_Cmd
    _Lcd_Out->_Lcd_Chr_CP
    _Lcd_Out->_Lcd_Cmd
    _Lcd_Init->_Lcd_Cmd

Critical Paths under _interrupcion in BANK0

    None.

Critical Paths under _main in BANK1

    _main->_sprintf

Critical Paths under _interrupcion in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _interrupcion in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _interrupcion in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _interrupcion in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _interrupcion in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _interrupcion in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _interrupcion in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _interrupcion in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _interrupcion in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _interrupcion in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _interrupcion in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _interrupcion in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _interrupcion in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _interrupcion in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _interrupcion in BANK15

    None.

Critical Paths under _main in BANK16

    None.

Critical Paths under _interrupcion in BANK16

    None.

Critical Paths under _main in BANK17

    None.

Critical Paths under _interrupcion in BANK17

    None.

Critical Paths under _main in BANK18

    None.

Critical Paths under _interrupcion in BANK18

    None.

Critical Paths under _main in BANK19

    None.

Critical Paths under _interrupcion in BANK19

    None.

Critical Paths under _main in BANK20

    None.

Critical Paths under _interrupcion in BANK20

    None.

Critical Paths under _main in BANK21

    None.

Critical Paths under _interrupcion in BANK21

    None.

Critical Paths under _main in BANK22

    None.

Critical Paths under _interrupcion in BANK22

    None.

Critical Paths under _main in BANK23

    None.

Critical Paths under _interrupcion in BANK23

    None.

Critical Paths under _main in BANK24

    None.

Critical Paths under _interrupcion in BANK24

    None.

Critical Paths under _main in BANK25

    None.

Critical Paths under _interrupcion in BANK25

    None.

Critical Paths under _main in BANK26

    None.

Critical Paths under _interrupcion in BANK26

    None.

Critical Paths under _main in BANK27

    None.

Critical Paths under _interrupcion in BANK27

    None.

Critical Paths under _main in BANK28

    None.

Critical Paths under _interrupcion in BANK28

    None.

Critical Paths under _main in BANK29

    None.

Critical Paths under _interrupcion in BANK29

    None.

Critical Paths under _main in BANK30

    None.

Critical Paths under _interrupcion in BANK30

    None.

Critical Paths under _main in BANK31

    None.

Critical Paths under _interrupcion in BANK31

    None.

Critical Paths under _main in BANK32

    None.

Critical Paths under _interrupcion in BANK32

    None.

Critical Paths under _main in BANK33

    None.

Critical Paths under _interrupcion in BANK33

    None.

Critical Paths under _main in BANK34

    None.

Critical Paths under _interrupcion in BANK34

    None.

Critical Paths under _main in BANK35

    None.

Critical Paths under _interrupcion in BANK35

    None.

Critical Paths under _main in BANK36

    None.

Critical Paths under _interrupcion in BANK36

    None.

Critical Paths under _main in BANK37

    None.

Critical Paths under _interrupcion in BANK37

    None.

Critical Paths under _main in BANK38

    None.

Critical Paths under _interrupcion in BANK38

    None.

Critical Paths under _main in BANK39

    None.

Critical Paths under _interrupcion in BANK39

    None.

Critical Paths under _main in BANK40

    None.

Critical Paths under _interrupcion in BANK40

    None.

Critical Paths under _main in BANK41

    None.

Critical Paths under _interrupcion in BANK41

    None.

Critical Paths under _main in BANK42

    None.

Critical Paths under _interrupcion in BANK42

    None.

Critical Paths under _main in BANK43

    None.

Critical Paths under _interrupcion in BANK43

    None.

Critical Paths under _main in BANK44

    None.

Critical Paths under _interrupcion in BANK44

    None.

Critical Paths under _main in BANK45

    None.

Critical Paths under _interrupcion in BANK45

    None.

Critical Paths under _main in BANK46

    None.

Critical Paths under _interrupcion in BANK46

    None.

Critical Paths under _main in BANK47

    None.

Critical Paths under _interrupcion in BANK47

    None.

Critical Paths under _main in BANK48

    None.

Critical Paths under _interrupcion in BANK48

    None.

Critical Paths under _main in BANK49

    None.

Critical Paths under _interrupcion in BANK49

    None.

Critical Paths under _main in BANK50

    None.

Critical Paths under _interrupcion in BANK50

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 6     2      4   62308
                                             78 BANK0      2     2      0
                                             31 BANK1      4     0      4
                            _Lcd_Cmd
                           _Lcd_Init
                            _Lcd_Out
                           _Lcd_Out2
                           ___awtoft
                            ___ftadd
                            ___ftdiv
                             ___ftge
                            ___ftmul
                            ___ftneg
                           ___lwtoft
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             41    36      5   44356
                                             73 BANK0      5     0      5
                                              0 BANK1     31    31      0
                            ___awdiv
                            ___ftadd
                             ___ftge
                            ___ftmul
                            ___ftneg
                            ___ftsub
                            ___fttol
                            ___lldiv
                            ___llmod
                           ___lltoft
                             ___wmul
                         __div_to_l_
                        __tdiv_to_l_
                             _fround
                            _isdigit
                              _scale
 ---------------------------------------------------------------------------------
 (2) _scale                                                9     6      3   10517
                                             38 BANK0      9     6      3
                            ___awdiv
                            ___awmod
                            ___ftmul
                             ___wmul
 ---------------------------------------------------------------------------------
 (2) _isdigit                                              2     2      0      68
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (2) _fround                                              14    11      3   10319
                                             38 BANK0     14    11      3
                            ___awdiv
                            ___awmod
                            ___ftmul
                             ___wmul
 ---------------------------------------------------------------------------------
 (3) ___wmul                                               6     2      4    2652
                                             16 BANK0      6     2      4
                            ___awdiv (ARG)
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (3) ___ftmul                                             16    10      6    4394
                                             22 BANK0     16    10      6
                            ___awdiv (ARG)
                            ___awmod (ARG)
                           ___ftpack
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (3) ___awmod                                              7     3      4    1448
                                              0 BANK0      7     3      4
 ---------------------------------------------------------------------------------
 (3) ___awdiv                                              9     5      4    1580
                                              7 BANK0      9     5      4
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (2) __tdiv_to_l_                                         16    10      6     431
                                              0 BANK0     16    10      6
 ---------------------------------------------------------------------------------
 (2) __div_to_l_                                          20    14      6     574
                                              0 BANK0     20    14      6
 ---------------------------------------------------------------------------------
 (2) ___lltoft                                             6     2      4    2281
                                              8 BANK0      6     2      4
                           ___ftpack
 ---------------------------------------------------------------------------------
 (2) ___llmod                                             10     2      8     543
                                              0 BANK0     10     2      8
 ---------------------------------------------------------------------------------
 (2) ___lldiv                                             14     6      8     418
                                              0 BANK0     14     6      8
 ---------------------------------------------------------------------------------
 (2) ___fttol                                             14    10      4     444
                                             47 BANK0     14    10      4
                            ___ftmul (ARG)
                              _scale (ARG)
 ---------------------------------------------------------------------------------
 (2) ___ftsub                                              6     0      6    3567
                                             67 BANK0      6     0      6
                            ___ftadd
                           ___lltoft (ARG)
 ---------------------------------------------------------------------------------
 (3) ___ftadd                                             13     7      6    3372
                                             54 BANK0     13     7      6
                           ___awtoft (ARG)
                            ___ftdiv (ARG)
                            ___ftmul (ARG)
                            ___ftneg (ARG)
                           ___ftpack
                             _fround (ARG)
 ---------------------------------------------------------------------------------
 (2) ___ftneg                                              3     0      3     173
                                             14 BANK0      3     0      3
                           ___awtoft (ARG)
 ---------------------------------------------------------------------------------
 (2) ___ftge                                               9     3      6     904
                                              0 BANK0      9     3      6
 ---------------------------------------------------------------------------------
 (1) ___lwtoft                                             4     1      3    2234
                                              8 BANK0      4     1      3
                           ___ftpack
 ---------------------------------------------------------------------------------
 (1) ___ftdiv                                             16    10      6    2684
                                             38 BANK0     16    10      6
                            ___ftmul (ARG)
                           ___ftpack
                           ___lwtoft (ARG)
 ---------------------------------------------------------------------------------
 (1) ___awtoft                                             6     3      3    2303
                                              8 BANK0      6     3      3
                           ___ftpack
 ---------------------------------------------------------------------------------
 (4) ___ftpack                                             8     3      5    2148
                                              0 BANK0      8     3      5
 ---------------------------------------------------------------------------------
 (1) _Lcd_Out2                                             5     3      2     661
                                              3 BANK0      5     3      2
                         _Lcd_Chr_CP
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (1) _Lcd_Out                                              6     3      3     737
                                              3 BANK0      6     3      3
                         _Lcd_Chr_CP
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (2) _Lcd_Chr_CP                                           3     3      0     176
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (1) _Lcd_Init                                             2     2      0     314
                                              3 BANK0      2     2      0
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (2) _Lcd_Cmd                                              3     3      0     176
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _interrupcion                                         3     3      0     761
                                              9 COMMON     3     3      0
                          i1_Lcd_Cmd
                          i1_Lcd_Out
 ---------------------------------------------------------------------------------
 (6) i1_Lcd_Out                                            6     3      3     585
                                              3 COMMON     6     3      3
                       i1_Lcd_Chr_CP
                          i1_Lcd_Cmd
 ---------------------------------------------------------------------------------
 (7) i1_Lcd_Cmd                                            3     3      0     176
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (7) i1_Lcd_Chr_CP                                         3     3      0     176
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Lcd_Cmd
   _Lcd_Init
     _Lcd_Cmd
   _Lcd_Out
     _Lcd_Chr_CP
     _Lcd_Cmd
   _Lcd_Out2
     _Lcd_Chr_CP
     _Lcd_Cmd
   ___awtoft
     ___ftpack
   ___ftadd
     ___awtoft (ARG)
       ___ftpack
     ___ftdiv (ARG)
       ___ftmul (ARG)
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___ftpack (ARG)
         ___wmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
       ___ftpack (ARG)
       ___lwtoft (ARG)
         ___ftpack
     ___ftmul (ARG)
       ___awdiv (ARG)
         ___awmod (ARG)
       ___awmod (ARG)
       ___ftpack (ARG)
       ___wmul (ARG)
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
     ___ftneg (ARG)
       ___awtoft (ARG)
         ___ftpack
     ___ftpack (ARG)
     _fround (ARG)
       ___awdiv
         ___awmod (ARG)
       ___awmod
       ___ftmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___ftpack (ARG)
         ___wmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
       ___wmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
   ___ftdiv
     ___ftmul (ARG)
       ___awdiv (ARG)
         ___awmod (ARG)
       ___awmod (ARG)
       ___ftpack (ARG)
       ___wmul (ARG)
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
     ___ftpack (ARG)
     ___lwtoft (ARG)
       ___ftpack
   ___ftge
   ___ftmul
     ___awdiv (ARG)
       ___awmod (ARG)
     ___awmod (ARG)
     ___ftpack (ARG)
     ___wmul (ARG)
       ___awdiv (ARG)
         ___awmod (ARG)
       ___awmod (ARG)
   ___ftneg
     ___awtoft (ARG)
       ___ftpack
   ___lwtoft
     ___ftpack
   _sprintf
     ___awdiv
       ___awmod (ARG)
     ___ftadd
       ___awtoft (ARG)
         ___ftpack
       ___ftdiv (ARG)
         ___ftmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___ftpack (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         ___ftpack (ARG)
         ___lwtoft (ARG)
           ___ftpack
       ___ftmul (ARG)
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___ftpack (ARG)
         ___wmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
       ___ftneg (ARG)
         ___awtoft (ARG)
           ___ftpack
       ___ftpack (ARG)
       _fround (ARG)
         ___awdiv
           ___awmod (ARG)
         ___awmod
         ___ftmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___ftpack (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         ___wmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
     ___ftge
     ___ftmul
       ___awdiv (ARG)
         ___awmod (ARG)
       ___awmod (ARG)
       ___ftpack (ARG)
       ___wmul (ARG)
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
     ___ftneg
       ___awtoft (ARG)
         ___ftpack
     ___ftsub
       ___ftadd
         ___awtoft (ARG)
           ___ftpack
         ___ftdiv (ARG)
           ___ftmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___ftpack (ARG)
           ___lwtoft (ARG)
             ___ftpack
         ___ftmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___ftpack (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         ___ftneg (ARG)
           ___awtoft (ARG)
             ___ftpack
         ___ftpack (ARG)
         _fround (ARG)
           ___awdiv
             ___awmod (ARG)
           ___awmod
           ___ftmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___wmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
       ___lltoft (ARG)
         ___ftpack
     ___fttol
       ___ftmul (ARG)
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___ftpack (ARG)
         ___wmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
       _scale (ARG)
         ___awdiv
           ___awmod (ARG)
         ___awmod
         ___ftmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___ftpack (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         ___wmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
     ___lldiv
     ___llmod
     ___lltoft
       ___ftpack
     ___wmul
       ___awdiv (ARG)
         ___awmod (ARG)
       ___awmod (ARG)
     __div_to_l_
     __tdiv_to_l_
     _fround
       ___awdiv
         ___awmod (ARG)
       ___awmod
       ___ftmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___ftpack (ARG)
         ___wmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
       ___wmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
     _isdigit
     _scale
       ___awdiv
         ___awmod (ARG)
       ___awmod
       ___ftmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___ftpack (ARG)
         ___wmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
       ___wmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)

 _interrupcion (ROOT)
   i1_Lcd_Cmd
   i1_Lcd_Out
     i1_Lcd_Chr_CP
     i1_Lcd_Cmd

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             FF0      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      C       C       2       85.7%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     50      50       5      100.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BANK1               50     23      3B       7       73.8%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BITBANK2            50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BANK2               50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BITBANK3            50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BANK3               50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITBANK4            50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BANK4               50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITBANK5            50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BANK5               50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITBANK6            50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BANK6               50      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITBANK7            50      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BANK7               50      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITBANK8            50      0       0      20        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BANK8               50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BITBANK9            50      0       0      22        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BANK9               50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BITBANK10           50      0       0      24        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BANK10              50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BITBANK11           50      0       0      26        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BANK11              50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
ABS                  0      0      97      28        0.0%
BITBANK12           50      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BANK12              50      0       0      30        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITBANK13           50      0       0      31        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BANK13              50      0       0      32        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%
BITBANK14           50      0       0      33        0.0%
BITSFR32             0      0       0      33        0.0%
SFR32                0      0       0      33        0.0%
BANK14              50      0       0      34        0.0%
BITSFR33             0      0       0      34        0.0%
SFR33                0      0       0      34        0.0%
BITBANK15           50      0       0      35        0.0%
BITSFR34             0      0       0      35        0.0%
SFR34                0      0       0      35        0.0%
BANK15              50      0       0      36        0.0%
BITSFR35             0      0       0      36        0.0%
SFR35                0      0       0      36        0.0%
BITBANK16           50      0       0      37        0.0%
BITSFR36             0      0       0      37        0.0%
SFR36                0      0       0      37        0.0%
BANK16              50      0       0      38        0.0%
BITSFR37             0      0       0      38        0.0%
SFR37                0      0       0      38        0.0%
BITBANK17           50      0       0      39        0.0%
BITSFR38             0      0       0      39        0.0%
SFR38                0      0       0      39        0.0%
BANK17              50      0       0      40        0.0%
BITSFR39             0      0       0      40        0.0%
SFR39                0      0       0      40        0.0%
BITBANK18           50      0       0      41        0.0%
BITSFR40             0      0       0      41        0.0%
SFR40                0      0       0      41        0.0%
BANK18              50      0       0      42        0.0%
BITSFR41             0      0       0      42        0.0%
SFR41                0      0       0      42        0.0%
BITBANK19           50      0       0      43        0.0%
BITSFR42             0      0       0      43        0.0%
SFR42                0      0       0      43        0.0%
BANK19              50      0       0      44        0.0%
BITSFR43             0      0       0      44        0.0%
SFR43                0      0       0      44        0.0%
BITBANK20           50      0       0      45        0.0%
BITSFR44             0      0       0      45        0.0%
SFR44                0      0       0      45        0.0%
BANK20              50      0       0      46        0.0%
BITSFR45             0      0       0      46        0.0%
SFR45                0      0       0      46        0.0%
BITBANK21           50      0       0      47        0.0%
BITSFR46             0      0       0      47        0.0%
SFR46                0      0       0      47        0.0%
BANK21              50      0       0      48        0.0%
BITSFR47             0      0       0      48        0.0%
SFR47                0      0       0      48        0.0%
BITBANK22           50      0       0      49        0.0%
BITSFR48             0      0       0      49        0.0%
SFR48                0      0       0      49        0.0%
BANK22              50      0       0      50        0.0%
BITSFR49             0      0       0      50        0.0%
SFR49                0      0       0      50        0.0%
BITBANK23           50      0       0      51        0.0%
BITSFR50             0      0       0      51        0.0%
SFR50                0      0       0      51        0.0%
BANK23              50      0       0      52        0.0%
BITSFR51             0      0       0      52        0.0%
SFR51                0      0       0      52        0.0%
BITBANK24           50      0       0      53        0.0%
BITSFR52             0      0       0      53        0.0%
SFR52                0      0       0      53        0.0%
BANK24              50      0       0      54        0.0%
BITSFR53             0      0       0      54        0.0%
SFR53                0      0       0      54        0.0%
BITBANK25           50      0       0      55        0.0%
BITSFR54             0      0       0      55        0.0%
SFR54                0      0       0      55        0.0%
BANK25              50      0       0      56        0.0%
BITSFR55             0      0       0      56        0.0%
SFR55                0      0       0      56        0.0%
BITBANK26           50      0       0      57        0.0%
BITSFR56             0      0       0      57        0.0%
SFR56                0      0       0      57        0.0%
BANK26              50      0       0      58        0.0%
BITSFR57             0      0       0      58        0.0%
SFR57                0      0       0      58        0.0%
BITSFR58             0      0       0      59        0.0%
SFR58                0      0       0      59        0.0%
DATA                 0      0      97      59        0.0%
BITBANK27           50      0       0      60        0.0%
BITSFR59             0      0       0      60        0.0%
SFR59                0      0       0      60        0.0%
BANK27              50      0       0      61        0.0%
BITSFR60             0      0       0      61        0.0%
SFR60                0      0       0      61        0.0%
BITBANK28           50      0       0      62        0.0%
BITSFR61             0      0       0      62        0.0%
SFR61                0      0       0      62        0.0%
BANK28              50      0       0      63        0.0%
BITSFR62             0      0       0      63        0.0%
SFR62                0      0       0      63        0.0%
BITBANK29           50      0       0      64        0.0%
BITSFR63             0      0       0      64        0.0%
SFR63                0      0       0      64        0.0%
BANK29              50      0       0      65        0.0%
BITBANK30           50      0       0      66        0.0%
BANK30              50      0       0      67        0.0%
BITBANK31           50      0       0      68        0.0%
BANK31              50      0       0      69        0.0%
BITBANK32           50      0       0      70        0.0%
BANK32              50      0       0      71        0.0%
BITBANK33           50      0       0      72        0.0%
BANK33              50      0       0      73        0.0%
BITBANK34           50      0       0      74        0.0%
BANK34              50      0       0      75        0.0%
BITBANK35           50      0       0      76        0.0%
BANK35              50      0       0      77        0.0%
BITBANK36           50      0       0      78        0.0%
BANK36              50      0       0      79        0.0%
BITBANK37           50      0       0      80        0.0%
BANK37              50      0       0      81        0.0%
BITBANK38           50      0       0      82        0.0%
BANK38              50      0       0      83        0.0%
BITBANK39           50      0       0      84        0.0%
BANK39              50      0       0      85        0.0%
BITBANK40           50      0       0      86        0.0%
BANK40              50      0       0      87        0.0%
BITBANK41           50      0       0      88        0.0%
BANK41              50      0       0      89        0.0%
BITBANK42           50      0       0      90        0.0%
BANK42              50      0       0      91        0.0%
BITBANK43           50      0       0      92        0.0%
BANK43              50      0       0      93        0.0%
BITBANK44           50      0       0      94        0.0%
BANK44              50      0       0      95        0.0%
BITBANK45           50      0       0      96        0.0%
BANK45              50      0       0      97        0.0%
BITBANK46           50      0       0      98        0.0%
BANK46              50      0       0      99        0.0%
BITBANK47           50      0       0     100        0.0%
BANK47              50      0       0     101        0.0%
BITBANK48           50      0       0     102        0.0%
BANK48              50      0       0     103        0.0%
BITBANK49           50      0       0     104        0.0%
BANK49              50      0       0     105        0.0%
BITBANK50           50      0       0     106        0.0%
BANK50              50      0       0     107        0.0%


Microchip Technology PIC Macro Assembler V1.45 build -152302408 
Symbol Table                                                                                   Thu Oct 04 12:50:29 2018

            __CFG_CP$OFF 0000                       l60 0990                       l59 0968  
           ___awdiv@sign 002D      ___wmul@multiplicand 0032             ___ftadd@exp1 0062  
           ___ftadd@exp2 0061              __CFG_LVP$ON 0000             ___ftadd@sign 0060  
                    l112 0D97                      l211 0561                      l115 0D9B  
                    l301 1293                      l118 0E70                      l171 01EC  
                    l510 0BDA                      l166 00B2                      l536 0AB6  
                    l546 0B2F                      l467 0D42                      l486 085C  
                    l487 0864                      l479 0849                      l587 1592  
           __CFG_CPD$OFF 0000             ___awmod@sign 0026             __CFG_BORV$LO 0000  
                    wreg 0009             __CFG_ZCD$OFF 0000             ___ftdiv@cntr 0050  
           ___ftdiv@sign 0055                     l2000 0B63                     l2010 0B79  
                   l2004 0B6A                     l2100 0A55                     l2030 0BB0  
                   l2022 0B93                     l2040 0BCC                     l2032 0BB5  
                   l2104 0A5D                     l2200 06BC                     l2050 0BFE  
                   l2042 0BD6                     l2034 0BB9                     l2060 0C19  
                   l2028 0BA6                     l2212 077D                     l2204 06D9  
                   l2046 0BEC                     l2070 09E8                     l2230 1288  
                   l2400 156E                     l2240 0A9E                     l2410 1595  
                   l2402 157C                     l2170 0F5B                     l2218 07DC  
                   l2316 0CFF                     l2308 0CB7                     l2092 0A41  
                   l2076 09FE                     l2414 15A3                     l2334 0D39  
                   l2326 0D1E                     l2262 0AF1                     l2254 0AD7  
                   l2344 13D2                     l2408 1589                     l2424 14E3  
                   l2336 0D45                     l2328 0D2C                     l2280 0B26  
                   l2272 0B0B                     l2088 0A39                     l2610 136B  
                   l2602 1359                     l2434 1511                     l2426 14F1  
                   l2450 140E                     l2282 0B32                     l2274 0B19  
                   l2178 0FD3                     l2194 065D                     l2604 1367  
                   l2348 13E8                     l2372 12AE                     l2292 0C4F  
                   l1900 128D                     l2620 0067                     l2382 153E  
                   l2438 151C                     l2454 1426                     l2448 1400  
                   l1920 148B                     l2720 0339                     l2704 02B1  
                   l2570 1383                     l2458 1431                     l2466 12EB  
                   l2298 0C6C                     l2714 030C                     l2626 0079  
                   l2572 1386                     l2580 1392                     l2468 12FB  
                   l2804 057D                     l2732 0360                     l2724 0356  
                   l2708 0306                     l2652 011E                     l2636 00B4  
                   l2820 0049                     l2574 1389                     l2582 13A0  
                   l1870 081F                     l1926 1496                     l2814 0597  
                   l2806 0580                     l2750 0392                     l2734 0364  
                   l2638 00CE                     l2822 05AD                     l2576 138C  
                   l2592 134A                     l1952 14CD                     l1944 14BC  
                   l1936 149E                     l2808 0584                     l2752 0401  
                   l2736 037C                     l2594 134D                     l1874 0826  
                   l2834 12CF                     l2850 08A8                     l1938 14AA  
                   l2690 0252                     l2682 021F                     l2588 13A4  
                   l2596 1350                     l1884 084E                     l1876 0830  
                   l2844 0892                     l1948 14C5                     l1964 1445  
                   l2772 0447                     l2764 042B                     l2676 01D0  
                   l2668 017E                     l2598 1353                     l1886 0856  
                   l1878 0835                     l1990 147B                     l1982 146A  
                   l2758 0411                     l2694 026B                     l2872 0902  
                   l2864 08E9                     l1976 1452                     l1968 144C  
                   l1978 145E                     l1986 1473                     l2794 054A  
                   l2788 053B                     l2796 054F                     l2990 0E8D  
                   l2968 0D8C                     STR_1 1827                     STR_2 1894  
                   STR_3 1885                     u2235 086B                     u2155 082B  
                   u3205 0CE2                     u3125 0B0C                     u2325 14A1  
                   u4005 0426                     u2175 0844                     u3065 0AD8  
                   u2345 14AB                     u2425 1455                     u2265 1294  
                   u2195 0851                     u3155 0B27                     u3075 0AE8  
                   u2355 14B5                     u2275 1299                     u2605 0BA7  
                   u3245 0D1F                     u3085 0AF2                     u2365 14BD  
                   u2445 1464                     u3415 158A                     u2455 146B  
                   u4145 08BA                     u4065 0570                     u4307 17B1  
                   u4155 08CA                     u2635 0BBA                     u3355 1545  
                   u3275 0D3A                     u3195 0CB8                     u4317 17E8  
                   u4165 08EA                     u3525 1403                     u2805 0A5E  
                   u4407 095D                     u4327 17EE                     u4175 08F9  
                   u2575 0B94                     u3455 14E6                     u2815 0A64  
                   u2735 0A0A                     u4417 0975                     u4337 17F4  
                   u2905 1781                     u4185 0903                     u2665 0BCD  
                   u3385 156F                     u3545 141C                     u2745 0A1A  
                   u4257 0D86                     u2835 1646                     u4427 0983  
                   u4347 17FB                     u2915 178F                     u3475 14F2  
                   u3555 1427                     u4267 0D92                     u2845 1657  
                   u4437 099D                     u4357 0935                     u2925 179E  
                   u3485 1506                     u2765 0A42                     u4277 0E83  
                   u2855 1665                     u4447 09AB                     u4367 093D  
                   u2935 17B9                     u3495 1512                     u3575 12F0  
                   u2775 0A48                     u3815 0132                     u4287 0E93  
                   u4457 1681                     u2865 1674                     u4377 0945  
                   u2945 17CA                     u4297 17AB                     u2875 168F  
                   u4467 1687                     u4387 094D                     u4477 16BE  
                   u2885 16A0                     u4397 0955                     u3925 032F  
                   u4487 16C4                     u2895 1770                     u3855 01F6  
                   u4497 16CD                     u3865 0229                     u3965 036D  
                   u3895 0250                     u3995 041A                     _TMR1 020C  
           __CFG_WRT$OFF 0000            __CFG_FCMEN$ON 0000                     _main 0D4E  
           ___ftpack@arg 0020             ___ftpack@exp 0023                     fsr0h 0005  
                   fsr1h 0007                     indf0 0000                     fsr0l 0004  
                   indf1 0001                     fsr1l 0006                     btemp 007E  
          __CFG_BOREN$ON 0000                     start 002D             _sprintf$1007 00A6  
        __end_of_Lcd_Cmd 16D2          __end_of_Lcd_Out 13BB            __CFG_CSWEN$ON 0000  
          __CFG_MCLRE$ON 0000             ___ftmul@cntr 0044             ___ftmul@sign 0045  
             _Lcd_Chr_CP 1769             ___fttol@exp1 005C             ___fttol@lval 0058  
         Lcd_Out2@buffer 0024                    ?_main 00BF          __end_of___awdiv 14D2  
        __end_of___ftadd 0C31            __CFG_WDTE$OFF 0000          __end_of___awmod 1480  
        __end_of___ftdiv 0924          __end_of___ftneg 127B          __end_of___lldiv 1525  
        __end_of___ftmul 0A85          ___awdiv@divisor 0027          __end_of___llmod 143A  
        __end_of___ftsub 12C4          __end_of___fttol 15AC          ___awdiv@counter 002C  
                  _PORTA 000C                    _PORTB 000D                    _PORTC 000E  
                  _PORTD 000F                    _TRISB 0012            __CFG_PWRTE$ON 0000  
           ___lltoft@exp 002D       __size_ofi1_Lcd_Cmd 0093       __size_ofi1_Lcd_Out 0037  
          ___awtoft@sign 002D          __end_of_dpowers 185E                    _scale 05B3  
        __end_of_isdigit 128A            ___ftpack@sign 0024                    status 0003  
                  wtemp0 007E          __end_of_sprintf 05B3         i1Lcd_Chr_CP@data 0072  
       __end_of_Lcd_Init 09D1         __end_of_Lcd_Out2 1380          __initialization 002F  
           __end_of_main 0E9A                   ??_main 006E            ___fttol@sign1 0057  
   __size_of__tdiv_to_l_ 00B6         ___llmod@dividend 0024                   ?_scale 0046  
       ___awdiv@dividend 0029         __end_of___awtoft 12E6                   _ANSELA 1F38  
                 _ANSELB 1F43                   _ANSELC 1F4E                   _ANSELD 1F59  
       __end_of___ftpack 087B         __end_of___lltoft 1310                   i1l2904 1333  
         __CFG_WDTCCS$SC 0000                   i1l2890 1318                   i1l2892 131B  
                 i1l2886 1312                   i1l2888 1315                   i1l2896 1321  
                 i1l2898 132F                   u360_25 16EA                   u361_25 16F8  
       __end_of___lwtoft 0816                   u362_25 1707                   u370_25 160D  
                 u450_27 001F                   u363_25 1722                   u451_27 15EE  
                 u364_25 1733                   u460_27 175D                   u452_27 15F4  
                 u365_25 15B3                   u461_27 1763                   u453_27 162B  
                 u366_25 15C4                   u454_27 1631                   u359_25 16D9  
                 u367_25 15D2                   u455_27 1639                   u368_25 15E1  
                 u456_27 1714                   u369_25 15FC                   u457_27 171A  
                 u458_27 1751                   u459_27 1757                ??_Lcd_Cmd 0020  
              ??_Lcd_Out 0026         __end_of__powers_ 1885        __end_ofi1_Lcd_Cmd 163F  
      __end_ofi1_Lcd_Out 1347                   ___ftge 13BB              ?_Lcd_Chr_CP 0070  
                 ___wmul 128A                ??___awdiv 002B                ??___ftadd 005C  
         __CFG_STVREN$ON 0000                ??___awmod 0024                ??___ftdiv 004C  
              ??___ftneg 0031                ??___lldiv 0028                ??___ftmul 003C  
              ??___llmod 0028                ??___ftsub 0069                ??___fttol 0053  
                 _fround 0E9A         ___awdiv@quotient 002E          ___awmod@divisor 0020  
                 _tiempo 00D6          ___awmod@counter 0025    ___ftmul@f3_as_product 0041  
              ??_isdigit 0020                ??_sprintf 00A0  __end_of__initialization 003F  
             ___ftadd@f1 0056               ___ftadd@f2 0059               ___ftge@ff1 0020  
             ___ftge@ff2 0023               ___ftdiv@f1 0049               ___ftdiv@f2 0046  
             ___ftdiv@f3 0051               ___ftneg@f1 002E               ___awtoft@c 0028  
             ___ftmul@f1 0036               ___ftmul@f2 0039               ___ftsub@f1 0066  
             ___ftsub@f2 0063               ___fttol@f1 004F           __pcstackCOMMON 0070  
          ?_interrupcion 0070             __pidataBANK1 0002               ___lltoft@c 0028  
          __end_of_scale 07F9               ___lwtoft@c 0028               __div_to_l_ 0C31  
              ?_Lcd_Init 0070                ?_Lcd_Out2 0023          __div_to_l_@exp1 0033  
        __div_to_l_@cntr 0032                  ??_scale 0049          __div_to_l_@quot 002E  
           sprintf@width 00B2      __size_of_Lcd_Chr_CP 0097               __pbssBANK1 00C3  
          __div_to_l_@f1 0020            __div_to_l_@f2 0023           ??_interrupcion 0079  
             __pmaintext 0D4E                  ?___ftge 0020                  ?___wmul 0030  
        __CFG_PPS1WAY$ON 0000               __pintentry 0004                  ?_fround 0046  
              ?___awtoft 0028                ?___ftpack 0020                ?___lltoft 0028  
    __CFG_RSTOSC$HFINT32 0000                ?___lwtoft 0028               ??_Lcd_Init 0023  
             ??_Lcd_Out2 0025            ?i1_Lcd_Chr_CP 0070                  _Lcd_Cmd 163F  
                _Lcd_Out 1380            i1Lcd_Cmd@data 0072        __end_of__npowers_ 1827  
             _scale$1006 004B     __CFG_SCANE$available 0000          __size_of___ftge 003C  
                ___awdiv 1480                  ___ftadd 0B3B                  ___awmod 143A  
                ___ftdiv 087B                  ___ftneg 1272                  ___lldiv 14D2  
        __size_of___wmul 001C                  ___ftmul 09D1                  ___llmod 13F7  
                ___ftsub 12A6                  ___fttol 1525               ??___awtoft 002B  
             ??___ftpack 0025          __size_of_fround 0166               ??___lltoft 002C  
                __ptext1 0043                  __ptext2 05B3                  __ptext3 127B  
                __ptext4 0E9A                  __ptext5 128A                  __ptext6 09D1  
                __ptext7 143A                  __ptext8 1480                  __ptext9 0A85  
                _buffer1 00C6               ??___lwtoft 002B                _T1CLKbits 0211  
              _T1CONbits 020E              ?__div_to_l_ 0020                  _dpowers 1836  
                _isdigit 127B         ___awmod@dividend 0022            i1Lcd_Out@data 0078  
         ??i1_Lcd_Chr_CP 0070                  _sprintf 0043                  clrloop0 07FA  
   end_of_initialization 003F          ___lldiv@divisor 0020          ___lldiv@counter 002D  
           ??_Lcd_Chr_CP 0020                Lcd_Out2@x 0023                Lcd_Out2@y 0026  
         __tdiv_to_l_@f1 0020           __tdiv_to_l_@f2 0023                i1_Lcd_Cmd 15AC  
  __CFG_WDTCPS$WDTCPS_31 0000                i1_Lcd_Out 1310            ??__tdiv_to_l_ 0026  
              _PORTAbits 000C                _PORTCbits 000E                _PORTDbits 000F  
              _TRISAbits 0011                _TRISCbits 0013                _TRISDbits 0014  
   __end_of_interrupcion 002D         __CFG_FEXTOSC$OFF 0000       __end_of_Lcd_Chr_CP 1800  
            ___ftdiv@exp 0054      __size_of__div_to_l_ 011D              ___ftmul@exp 0040  
         __end_of___ftge 13F7           __end_of___wmul 12A6               ?i1_Lcd_Cmd 0070  
             ?i1_Lcd_Out 0073           __end_of_fround 1000      start_initialization 002F  
    __end_of__tdiv_to_l_ 0B3B            Lcd_Out@buffer 0024        __size_of_Lcd_Init 00AD  
      __size_of_Lcd_Out2 0039          ___llmod@divisor 0020          ___llmod@counter 0029  
       __CFG_LPBOREN$OFF 0000                 ??___ftge 0026     __end_ofi1_Lcd_Chr_CP 1769  
               ??___wmul 0034              _calibracion 00D9              __pdataBANK1 00D9  
               ??_fround 0049            sprintf@tmpval 00B4               fround@prec 0053  
      __size_of___awtoft 0022        __size_of___ftpack 0065        __size_of___lltoft 002A  
              ___latbits 0004        __size_of___lwtoft 0015            __pcstackBANK0 0020  
          __pcstackBANK1 00A0                 ?_Lcd_Cmd 0070              sprintf@flag 00AA  
               ?_Lcd_Out 0023              sprintf@fval 00BB              sprintf@prec 00B0  
               ?___awdiv 0027                 ?___ftadd 0056                 ?___awmod 0020  
               ?___ftdiv 0046                 ?___ftneg 002E                 ?___lldiv 0020  
               ?___ftmul 0036                 ?___llmod 0020                 ?___ftsub 0063  
              __npowers_ 1800                 ?___fttol 004F              ??i1_Lcd_Cmd 0070  
            ??i1_Lcd_Out 0076              __tdiv_to_l_ 0A85                _distancia 00C3  
  __size_of_interrupcion 0029             ??__div_to_l_ 0026                 ?_isdigit 0070  
               ?_sprintf 0069           __size_of_scale 0246           ___wmul@product 0034  
               _LATAbits 0016                 _LATBbits 0017          i1Lcd_Out@buffer 0074  
              clear_ram0 07F9                 _PIE4bits 071A       __end_of__div_to_l_ 0D4E  
               _PIR4bits 0710                 Lcd_Out@x 0023                 Lcd_Out@y 0027  
           _interrupcion 0004             Lcd_Init@data 0024        ___wmul@multiplier 0030  
           Lcd_Out2@data 0027                 _Lcd_Init 0924                 _Lcd_Out2 1347  
       __size_of_Lcd_Cmd 0093         __size_of_Lcd_Out 003B    __size_ofi1_Lcd_Chr_CP 0097  
       __size_of___awdiv 0052         __size_of___ftadd 00F6         __size_of___awmod 0046  
       __size_of___ftdiv 00A9         __size_of___ftneg 0009         __size_of___lldiv 0053  
       __size_of___ftmul 00B4         __size_of___llmod 0043         __size_of___ftsub 001E  
       __size_of___fttol 0087                 ___awtoft 12C4                 ___ftpack 0816  
            _fround$1004 0050              _fround$1005 004D                 ___lltoft 12E6  
            _isdigit$791 0020                 ___lwtoft 0801               sprintf@exp 00B8  
             sprintf@val 00AC         __size_of_isdigit 000F           Lcd_Chr_CP@data 0022  
               __ptext10 0C31                 __ptext11 12E6                 __ptext20 087B  
               __ptext12 13F7                 __ptext21 12C4                 __ptext13 14D2  
               __ptext30 15AC                 __ptext22 0816                 __ptext14 1525  
               __ptext31 16D2                 __ptext23 1347                 __ptext15 12A6  
               __ptext24 1380                 __ptext16 0B3B                 __ptext25 1769  
               __ptext17 1272                 __ptext26 0924                 __ptext18 13BB  
               __ptext27 163F                 __ptext19 0801                 __ptext29 1310  
               __powers_ 185E             i1_Lcd_Chr_CP 16D2         __size_of_sprintf 0570  
            Lcd_Cmd@data 0022            __size_of_main 014C     __CFG_WDTCWS$WDTCWS_7 0000  
               int$flags 007E                 main@argc 00BF                 main@argv 00C1  
            Lcd_Out@data 0028               _INTCONbits 000B                 isdigit@c 0021  
               scale@scl 004E                 intlevel1 0000                sprintf@ap 00A9  
       __tdiv_to_l_@exp1 002F         __tdiv_to_l_@cntr 002E                sprintf@sp 00BA  
       __tdiv_to_l_@quot 002A         ___lldiv@dividend 0024        __CFG_CLKOUTEN$OFF 0000  
             i1Lcd_Out@x 0073               i1Lcd_Out@y 0077               _OSCFRQbits 0893  
           ?__tdiv_to_l_ 0020            __pstringtext1 1836            __pstringtext2 185E  
          __pstringtext3 1800            __pstringtext4 1885            __pstringtext5 1894  
          __pstringtext6 0000                 sprintf@c 00BE                 sprintf@f 0069  
       ___lldiv@quotient 0029  
