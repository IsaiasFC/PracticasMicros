

Microchip Technology PIC LITE Macro Assembler V1.45 build -152302408 
                                                                                               Thu Sep 27 11:29:22 2018

Microchip Technology Omniscient Code Generator v1.45 (Free mode) build 201711160504
     1                           	processor	16F18877
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	idataBANK0,global,class=CODE,delta=2
     5                           	psect	stringtext1,global,class=STRCODE,delta=2
     6                           	psect	stringtext2,global,class=STRCODE,delta=2
     7                           	psect	stringtext3,global,class=STRCODE,delta=2
     8                           	psect	stringtext4,global,class=STRCODE,delta=2
     9                           	psect	stringtext5,global,class=STRCODE,delta=2
    10                           	psect	stringtext6,global,class=STRCODE,delta=2
    11                           	psect	stringtext7,global,class=STRCODE,delta=2
    12                           	psect	stringtext8,global,class=STRCODE,delta=2
    13                           	psect	cinit,global,class=CODE,merge=1,delta=2
    14                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    15                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
    16                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    17                           	psect	clrtext,global,class=CODE,delta=2
    18                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    19                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    20                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    21                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    22                           	psect	text1,local,class=CODE,merge=1,delta=2
    23                           	psect	text2,local,class=CODE,merge=1,delta=2
    24                           	psect	text3,local,class=CODE,merge=1,delta=2,group=2
    25                           	psect	text4,local,class=CODE,merge=1,delta=2
    26                           	psect	text5,local,class=CODE,merge=1,delta=2,group=2
    27                           	psect	text6,local,class=CODE,merge=1,delta=2,group=2
    28                           	psect	text7,local,class=CODE,merge=1,delta=2,group=2
    29                           	psect	text8,local,class=CODE,merge=1,delta=2,group=2
    30                           	psect	text9,local,class=CODE,merge=1,delta=2,group=2
    31                           	psect	text10,local,class=CODE,merge=1,delta=2,group=2
    32                           	psect	text11,local,class=CODE,merge=1,delta=2,group=2
    33                           	psect	text12,local,class=CODE,merge=1,delta=2,group=2
    34                           	psect	text13,local,class=CODE,merge=1,delta=2,group=2
    35                           	psect	text14,local,class=CODE,merge=1,delta=2,group=2
    36                           	psect	text15,local,class=CODE,merge=1,delta=2,group=2
    37                           	psect	text16,local,class=CODE,merge=1,delta=2,group=2
    38                           	psect	text17,local,class=CODE,merge=1,delta=2,group=2
    39                           	psect	text18,local,class=CODE,merge=1,delta=2
    40                           	psect	text19,local,class=CODE,merge=1,delta=2
    41                           	psect	text20,local,class=CODE,merge=1,delta=2,group=2
    42                           	psect	text21,local,class=CODE,merge=1,delta=2,group=2
    43                           	psect	text22,local,class=CODE,merge=1,delta=2,group=2
    44                           	psect	text23,local,class=CODE,merge=1,delta=2,group=2
    45                           	psect	text24,local,class=CODE,merge=1,delta=2
    46                           	psect	text25,local,class=CODE,merge=1,delta=2
    47                           	psect	text26,local,class=CODE,merge=1,delta=2
    48                           	psect	text27,local,class=CODE,merge=1,delta=2
    49                           	dabs	1,0x7E,2
    50  0000                     
    51                           ; Version 1.45
    52                           ; Generated 16/11/2017 GMT
    53                           ; 
    54                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    55                           ; All rights reserved.
    56                           ; 
    57                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    58                           ; 
    59                           ; Redistribution and use in source and binary forms, with or without modification, are
    60                           ; permitted provided that the following conditions are met:
    61                           ; 
    62                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    63                           ;        conditions and the following disclaimer.
    64                           ; 
    65                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    66                           ;        of conditions and the following disclaimer in the documentation and/or other
    67                           ;        materials provided with the distribution.
    68                           ; 
    69                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    70                           ;        software without specific prior written permission.
    71                           ; 
    72                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    73                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    74                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    75                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    76                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    77                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    78                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    79                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    80                           ; 
    81                           ; 
    82                           ; Code-generator required, PIC16F18877 Definitions
    83                           ; 
    84                           ; SFR Addresses
    85  0000                     	;# 
    86  0001                     	;# 
    87  0002                     	;# 
    88  0003                     	;# 
    89  0004                     	;# 
    90  0005                     	;# 
    91  0006                     	;# 
    92  0007                     	;# 
    93  0008                     	;# 
    94  0009                     	;# 
    95  000A                     	;# 
    96  000B                     	;# 
    97  000C                     	;# 
    98  000D                     	;# 
    99  000E                     	;# 
   100  000F                     	;# 
   101  0010                     	;# 
   102  0011                     	;# 
   103  0012                     	;# 
   104  0013                     	;# 
   105  0014                     	;# 
   106  0015                     	;# 
   107  0016                     	;# 
   108  0017                     	;# 
   109  0018                     	;# 
   110  0019                     	;# 
   111  001A                     	;# 
   112  001C                     	;# 
   113  001C                     	;# 
   114  001D                     	;# 
   115  001D                     	;# 
   116  001E                     	;# 
   117  001F                     	;# 
   118  008C                     	;# 
   119  008C                     	;# 
   120  008D                     	;# 
   121  008E                     	;# 
   122  008E                     	;# 
   123  008F                     	;# 
   124  0090                     	;# 
   125  0090                     	;# 
   126  0091                     	;# 
   127  0093                     	;# 
   128  0094                     	;# 
   129  0095                     	;# 
   130  0096                     	;# 
   131  0097                     	;# 
   132  0098                     	;# 
   133  0099                     	;# 
   134  009A                     	;# 
   135  009B                     	;# 
   136  009C                     	;# 
   137  009D                     	;# 
   138  009E                     	;# 
   139  010C                     	;# 
   140  010D                     	;# 
   141  010E                     	;# 
   142  010E                     	;# 
   143  010F                     	;# 
   144  0110                     	;# 
   145  0110                     	;# 
   146  0111                     	;# 
   147  0112                     	;# 
   148  0112                     	;# 
   149  0113                     	;# 
   150  0114                     	;# 
   151  0114                     	;# 
   152  0115                     	;# 
   153  0116                     	;# 
   154  0116                     	;# 
   155  0117                     	;# 
   156  0119                     	;# 
   157  0119                     	;# 
   158  0119                     	;# 
   159  011A                     	;# 
   160  011A                     	;# 
   161  011A                     	;# 
   162  011B                     	;# 
   163  011B                     	;# 
   164  011B                     	;# 
   165  011B                     	;# 
   166  011B                     	;# 
   167  011C                     	;# 
   168  011C                     	;# 
   169  011C                     	;# 
   170  011D                     	;# 
   171  011D                     	;# 
   172  011D                     	;# 
   173  011E                     	;# 
   174  011E                     	;# 
   175  011E                     	;# 
   176  011F                     	;# 
   177  011F                     	;# 
   178  011F                     	;# 
   179  011F                     	;# 
   180  011F                     	;# 
   181  018C                     	;# 
   182  018D                     	;# 
   183  018E                     	;# 
   184  018F                     	;# 
   185  0190                     	;# 
   186  0191                     	;# 
   187  0192                     	;# 
   188  0196                     	;# 
   189  0197                     	;# 
   190  0198                     	;# 
   191  0199                     	;# 
   192  019A                     	;# 
   193  019B                     	;# 
   194  019C                     	;# 
   195  020C                     	;# 
   196  020C                     	;# 
   197  020D                     	;# 
   198  020E                     	;# 
   199  020F                     	;# 
   200  020F                     	;# 
   201  0210                     	;# 
   202  0210                     	;# 
   203  0211                     	;# 
   204  0211                     	;# 
   205  0212                     	;# 
   206  0212                     	;# 
   207  0213                     	;# 
   208  0214                     	;# 
   209  0215                     	;# 
   210  0215                     	;# 
   211  0216                     	;# 
   212  0216                     	;# 
   213  0217                     	;# 
   214  0217                     	;# 
   215  0218                     	;# 
   216  0218                     	;# 
   217  0219                     	;# 
   218  021A                     	;# 
   219  021B                     	;# 
   220  021B                     	;# 
   221  021C                     	;# 
   222  021C                     	;# 
   223  021D                     	;# 
   224  021D                     	;# 
   225  021E                     	;# 
   226  021F                     	;# 
   227  028C                     	;# 
   228  028C                     	;# 
   229  028D                     	;# 
   230  028D                     	;# 
   231  028E                     	;# 
   232  028F                     	;# 
   233  0290                     	;# 
   234  0290                     	;# 
   235  0291                     	;# 
   236  0292                     	;# 
   237  0292                     	;# 
   238  0293                     	;# 
   239  0293                     	;# 
   240  0294                     	;# 
   241  0295                     	;# 
   242  0296                     	;# 
   243  0296                     	;# 
   244  0297                     	;# 
   245  0298                     	;# 
   246  0298                     	;# 
   247  0299                     	;# 
   248  0299                     	;# 
   249  029A                     	;# 
   250  029B                     	;# 
   251  029C                     	;# 
   252  029C                     	;# 
   253  029D                     	;# 
   254  030C                     	;# 
   255  030C                     	;# 
   256  030D                     	;# 
   257  030E                     	;# 
   258  030F                     	;# 
   259  0310                     	;# 
   260  0310                     	;# 
   261  0311                     	;# 
   262  0312                     	;# 
   263  0313                     	;# 
   264  0314                     	;# 
   265  0314                     	;# 
   266  0315                     	;# 
   267  0316                     	;# 
   268  0317                     	;# 
   269  0318                     	;# 
   270  0318                     	;# 
   271  0319                     	;# 
   272  031A                     	;# 
   273  031B                     	;# 
   274  031C                     	;# 
   275  031C                     	;# 
   276  031D                     	;# 
   277  031E                     	;# 
   278  031F                     	;# 
   279  038C                     	;# 
   280  038D                     	;# 
   281  038E                     	;# 
   282  0390                     	;# 
   283  0391                     	;# 
   284  0392                     	;# 
   285  040C                     	;# 
   286  040D                     	;# 
   287  040E                     	;# 
   288  040F                     	;# 
   289  0410                     	;# 
   290  0411                     	;# 
   291  0416                     	;# 
   292  0416                     	;# 
   293  0417                     	;# 
   294  0418                     	;# 
   295  0418                     	;# 
   296  0419                     	;# 
   297  041A                     	;# 
   298  041A                     	;# 
   299  041B                     	;# 
   300  041C                     	;# 
   301  041C                     	;# 
   302  041D                     	;# 
   303  041E                     	;# 
   304  041F                     	;# 
   305  048C                     	;# 
   306  048C                     	;# 
   307  048D                     	;# 
   308  048E                     	;# 
   309  048F                     	;# 
   310  048F                     	;# 
   311  0490                     	;# 
   312  0491                     	;# 
   313  0492                     	;# 
   314  0492                     	;# 
   315  0493                     	;# 
   316  0494                     	;# 
   317  0495                     	;# 
   318  0495                     	;# 
   319  0496                     	;# 
   320  0497                     	;# 
   321  0498                     	;# 
   322  0499                     	;# 
   323  049A                     	;# 
   324  049B                     	;# 
   325  049C                     	;# 
   326  049D                     	;# 
   327  050C                     	;# 
   328  050C                     	;# 
   329  050D                     	;# 
   330  050E                     	;# 
   331  050F                     	;# 
   332  050F                     	;# 
   333  0510                     	;# 
   334  0511                     	;# 
   335  0512                     	;# 
   336  0512                     	;# 
   337  0513                     	;# 
   338  0514                     	;# 
   339  0515                     	;# 
   340  0515                     	;# 
   341  0516                     	;# 
   342  0517                     	;# 
   343  0518                     	;# 
   344  0519                     	;# 
   345  051A                     	;# 
   346  051B                     	;# 
   347  051C                     	;# 
   348  051D                     	;# 
   349  058C                     	;# 
   350  058C                     	;# 
   351  058D                     	;# 
   352  058E                     	;# 
   353  058F                     	;# 
   354  058F                     	;# 
   355  0590                     	;# 
   356  0591                     	;# 
   357  0592                     	;# 
   358  0593                     	;# 
   359  060C                     	;# 
   360  060D                     	;# 
   361  060E                     	;# 
   362  060F                     	;# 
   363  0610                     	;# 
   364  0611                     	;# 
   365  0612                     	;# 
   366  0613                     	;# 
   367  0614                     	;# 
   368  0616                     	;# 
   369  0617                     	;# 
   370  0618                     	;# 
   371  0619                     	;# 
   372  061A                     	;# 
   373  061B                     	;# 
   374  061C                     	;# 
   375  061D                     	;# 
   376  061E                     	;# 
   377  068C                     	;# 
   378  068D                     	;# 
   379  068E                     	;# 
   380  068F                     	;# 
   381  0690                     	;# 
   382  0691                     	;# 
   383  0692                     	;# 
   384  0693                     	;# 
   385  0694                     	;# 
   386  070C                     	;# 
   387  070D                     	;# 
   388  070E                     	;# 
   389  070F                     	;# 
   390  0710                     	;# 
   391  0711                     	;# 
   392  0712                     	;# 
   393  0713                     	;# 
   394  0714                     	;# 
   395  0716                     	;# 
   396  0717                     	;# 
   397  0718                     	;# 
   398  0719                     	;# 
   399  071A                     	;# 
   400  071B                     	;# 
   401  071C                     	;# 
   402  071D                     	;# 
   403  071E                     	;# 
   404  0796                     	;# 
   405  0797                     	;# 
   406  0798                     	;# 
   407  0799                     	;# 
   408  079A                     	;# 
   409  079B                     	;# 
   410  080C                     	;# 
   411  080D                     	;# 
   412  080E                     	;# 
   413  080F                     	;# 
   414  0810                     	;# 
   415  0811                     	;# 
   416  0812                     	;# 
   417  0813                     	;# 
   418  0814                     	;# 
   419  081A                     	;# 
   420  081B                     	;# 
   421  081C                     	;# 
   422  081D                     	;# 
   423  081E                     	;# 
   424  081F                     	;# 
   425  088C                     	;# 
   426  088D                     	;# 
   427  088E                     	;# 
   428  088F                     	;# 
   429  0890                     	;# 
   430  0891                     	;# 
   431  0892                     	;# 
   432  0893                     	;# 
   433  0895                     	;# 
   434  0896                     	;# 
   435  0897                     	;# 
   436  0898                     	;# 
   437  0899                     	;# 
   438  089A                     	;# 
   439  089B                     	;# 
   440  090C                     	;# 
   441  090E                     	;# 
   442  090F                     	;# 
   443  091F                     	;# 
   444  098F                     	;# 
   445  098F                     	;# 
   446  0990                     	;# 
   447  0991                     	;# 
   448  0992                     	;# 
   449  0993                     	;# 
   450  0994                     	;# 
   451  0995                     	;# 
   452  0996                     	;# 
   453  0997                     	;# 
   454  1E0F                     	;# 
   455  1E10                     	;# 
   456  1E11                     	;# 
   457  1E12                     	;# 
   458  1E13                     	;# 
   459  1E14                     	;# 
   460  1E15                     	;# 
   461  1E16                     	;# 
   462  1E17                     	;# 
   463  1E18                     	;# 
   464  1E19                     	;# 
   465  1E1A                     	;# 
   466  1E1B                     	;# 
   467  1E1C                     	;# 
   468  1E1D                     	;# 
   469  1E1E                     	;# 
   470  1E1F                     	;# 
   471  1E20                     	;# 
   472  1E21                     	;# 
   473  1E22                     	;# 
   474  1E23                     	;# 
   475  1E24                     	;# 
   476  1E25                     	;# 
   477  1E26                     	;# 
   478  1E27                     	;# 
   479  1E28                     	;# 
   480  1E29                     	;# 
   481  1E2A                     	;# 
   482  1E2B                     	;# 
   483  1E2C                     	;# 
   484  1E2D                     	;# 
   485  1E2E                     	;# 
   486  1E2F                     	;# 
   487  1E30                     	;# 
   488  1E31                     	;# 
   489  1E32                     	;# 
   490  1E33                     	;# 
   491  1E34                     	;# 
   492  1E35                     	;# 
   493  1E36                     	;# 
   494  1E37                     	;# 
   495  1E8F                     	;# 
   496  1E90                     	;# 
   497  1E91                     	;# 
   498  1E92                     	;# 
   499  1E93                     	;# 
   500  1E94                     	;# 
   501  1E95                     	;# 
   502  1E96                     	;# 
   503  1E97                     	;# 
   504  1E9C                     	;# 
   505  1E9D                     	;# 
   506  1E9E                     	;# 
   507  1EA1                     	;# 
   508  1EA2                     	;# 
   509  1EA3                     	;# 
   510  1EA4                     	;# 
   511  1EA5                     	;# 
   512  1EA9                     	;# 
   513  1EAA                     	;# 
   514  1EAB                     	;# 
   515  1EAC                     	;# 
   516  1EB1                     	;# 
   517  1EB2                     	;# 
   518  1EB3                     	;# 
   519  1EB8                     	;# 
   520  1EB9                     	;# 
   521  1EBA                     	;# 
   522  1EBB                     	;# 
   523  1EBC                     	;# 
   524  1EBD                     	;# 
   525  1EBE                     	;# 
   526  1EC3                     	;# 
   527  1EC5                     	;# 
   528  1EC6                     	;# 
   529  1EC7                     	;# 
   530  1EC8                     	;# 
   531  1EC9                     	;# 
   532  1ECA                     	;# 
   533  1ECB                     	;# 
   534  1ECC                     	;# 
   535  1F10                     	;# 
   536  1F11                     	;# 
   537  1F12                     	;# 
   538  1F13                     	;# 
   539  1F14                     	;# 
   540  1F15                     	;# 
   541  1F16                     	;# 
   542  1F17                     	;# 
   543  1F18                     	;# 
   544  1F19                     	;# 
   545  1F1A                     	;# 
   546  1F1B                     	;# 
   547  1F1C                     	;# 
   548  1F1D                     	;# 
   549  1F1E                     	;# 
   550  1F1F                     	;# 
   551  1F20                     	;# 
   552  1F21                     	;# 
   553  1F22                     	;# 
   554  1F23                     	;# 
   555  1F24                     	;# 
   556  1F25                     	;# 
   557  1F26                     	;# 
   558  1F27                     	;# 
   559  1F28                     	;# 
   560  1F29                     	;# 
   561  1F2A                     	;# 
   562  1F2B                     	;# 
   563  1F2C                     	;# 
   564  1F2D                     	;# 
   565  1F2E                     	;# 
   566  1F2F                     	;# 
   567  1F30                     	;# 
   568  1F31                     	;# 
   569  1F32                     	;# 
   570  1F38                     	;# 
   571  1F39                     	;# 
   572  1F3A                     	;# 
   573  1F3B                     	;# 
   574  1F3C                     	;# 
   575  1F3D                     	;# 
   576  1F3E                     	;# 
   577  1F3F                     	;# 
   578  1F40                     	;# 
   579  1F41                     	;# 
   580  1F43                     	;# 
   581  1F44                     	;# 
   582  1F45                     	;# 
   583  1F46                     	;# 
   584  1F47                     	;# 
   585  1F48                     	;# 
   586  1F49                     	;# 
   587  1F4A                     	;# 
   588  1F4B                     	;# 
   589  1F4C                     	;# 
   590  1F4E                     	;# 
   591  1F4F                     	;# 
   592  1F50                     	;# 
   593  1F51                     	;# 
   594  1F52                     	;# 
   595  1F53                     	;# 
   596  1F54                     	;# 
   597  1F55                     	;# 
   598  1F56                     	;# 
   599  1F57                     	;# 
   600  1F59                     	;# 
   601  1F5A                     	;# 
   602  1F5B                     	;# 
   603  1F5C                     	;# 
   604  1F5D                     	;# 
   605  1F61                     	;# 
   606  1F62                     	;# 
   607  1F64                     	;# 
   608  1F65                     	;# 
   609  1F66                     	;# 
   610  1F67                     	;# 
   611  1F68                     	;# 
   612  1F69                     	;# 
   613  1F6A                     	;# 
   614  1F6B                     	;# 
   615  1F6C                     	;# 
   616  1F6D                     	;# 
   617  1FE4                     	;# 
   618  1FE5                     	;# 
   619  1FE6                     	;# 
   620  1FE7                     	;# 
   621  1FE8                     	;# 
   622  1FE9                     	;# 
   623  1FEA                     	;# 
   624  1FEB                     	;# 
   625  1FED                     	;# 
   626  1FEE                     	;# 
   627  1FEF                     	;# 
   628                           
   629                           	psect	idataBANK0
   630  0005                     __pidataBANK0:	
   631                           
   632                           ;initializer for _cont2
   633  0005  3403               	retlw	3
   634  0006  3400               	retlw	0
   635                           
   636                           ;initializer for _cont1
   637  0007  3403               	retlw	3
   638  0008  3400               	retlw	0
   639                           
   640                           	psect	stringtext1
   641  2033                     __pstringtext1:	
   642  2033                     _dpowers:	
   643  2033  3401               	retlw	1
   644  2034  3400               	retlw	0
   645  2035  3400               	retlw	0
   646  2036  3400               	retlw	0
   647  2037  340A               	retlw	10
   648  2038  3400               	retlw	0
   649  2039  3400               	retlw	0
   650  203A  3400               	retlw	0
   651  203B  3464               	retlw	100
   652  203C  3400               	retlw	0
   653  203D  3400               	retlw	0
   654  203E  3400               	retlw	0
   655  203F  34E8               	retlw	232
   656  2040  3403               	retlw	3
   657  2041  3400               	retlw	0
   658  2042  3400               	retlw	0
   659  2043  3410               	retlw	16
   660  2044  3427               	retlw	39
   661  2045  3400               	retlw	0
   662  2046  3400               	retlw	0
   663  2047  34A0               	retlw	160
   664  2048  3486               	retlw	134
   665  2049  3401               	retlw	1
   666  204A  3400               	retlw	0
   667  204B  3440               	retlw	64
   668  204C  3442               	retlw	66
   669  204D  340F               	retlw	15
   670  204E  3400               	retlw	0
   671  204F  3480               	retlw	128
   672  2050  3496               	retlw	150
   673  2051  3498               	retlw	152
   674  2052  3400               	retlw	0
   675  2053  3400               	retlw	0
   676  2054  34E1               	retlw	225
   677  2055  34F5               	retlw	245
   678  2056  3405               	retlw	5
   679  2057  3400               	retlw	0
   680  2058  34CA               	retlw	202
   681  2059  349A               	retlw	154
   682  205A  343B               	retlw	59
   683  205B                     __end_of_dpowers:	
   684                           
   685                           	psect	stringtext2
   686  205B                     __pstringtext2:	
   687  205B                     __powers_:	
   688  205B  3400               	retlw	0
   689  205C  3480               	retlw	128
   690  205D  343F               	retlw	63
   691  205E  3400               	retlw	0
   692  205F  3420               	retlw	32
   693  2060  3441               	retlw	65
   694  2061  3400               	retlw	0
   695  2062  34C8               	retlw	200
   696  2063  3442               	retlw	66
   697  2064  3400               	retlw	0
   698  2065  347A               	retlw	122
   699  2066  3444               	retlw	68
   700  2067  3440               	retlw	64
   701  2068  341C               	retlw	28
   702  2069  3446               	retlw	70
   703  206A  3450               	retlw	80
   704  206B  34C3               	retlw	195
   705  206C  3447               	retlw	71
   706  206D  3424               	retlw	36
   707  206E  3474               	retlw	116
   708  206F  3449               	retlw	73
   709  2070  3497               	retlw	151
   710  2071  3418               	retlw	24
   711  2072  344B               	retlw	75
   712  2073  34BC               	retlw	188
   713  2074  34BE               	retlw	190
   714  2075  344C               	retlw	76
   715  2076  346B               	retlw	107
   716  2077  346E               	retlw	110
   717  2078  344E               	retlw	78
   718  2079  3403               	retlw	3
   719  207A  3415               	retlw	21
   720  207B  3450               	retlw	80
   721  207C  3479               	retlw	121
   722  207D  34AD               	retlw	173
   723  207E  3460               	retlw	96
   724  207F  34F3               	retlw	243
   725  2080  3449               	retlw	73
   726  2081  3471               	retlw	113
   727  2082                     __end_of__powers_:	
   728                           
   729                           	psect	stringtext3
   730  2000                     __pstringtext3:	
   731  2000                     __npowers_:	
   732  2000  3400               	retlw	0
   733  2001  3480               	retlw	128
   734  2002  343F               	retlw	63
   735  2003  34CD               	retlw	205
   736  2004  34CC               	retlw	204
   737  2005  343D               	retlw	61
   738  2006  34D7               	retlw	215
   739  2007  3423               	retlw	35
   740  2008  343C               	retlw	60
   741  2009  3412               	retlw	18
   742  200A  3483               	retlw	131
   743  200B  343A               	retlw	58
   744  200C  34B7               	retlw	183
   745  200D  34D1               	retlw	209
   746  200E  3438               	retlw	56
   747  200F  34C6               	retlw	198
   748  2010  3427               	retlw	39
   749  2011  3437               	retlw	55
   750  2012  3438               	retlw	56
   751  2013  3486               	retlw	134
   752  2014  3435               	retlw	53
   753  2015  34C0               	retlw	192
   754  2016  34D6               	retlw	214
   755  2017  3433               	retlw	51
   756  2018  34CC               	retlw	204
   757  2019  342B               	retlw	43
   758  201A  3432               	retlw	50
   759  201B  3470               	retlw	112
   760  201C  3489               	retlw	137
   761  201D  3430               	retlw	48
   762  201E  34E7               	retlw	231
   763  201F  34DB               	retlw	219
   764  2020  342E               	retlw	46
   765  2021  34E5               	retlw	229
   766  2022  343C               	retlw	60
   767  2023  341E               	retlw	30
   768  2024  3442               	retlw	66
   769  2025  34A2               	retlw	162
   770  2026  340D               	retlw	13
   771  2027                     __end_of__npowers_:	
   772  000C                     _PORTAbits	set	12
   773  000D                     _PORTBbits	set	13
   774  0016                     _LATAbits	set	22
   775  000E                     _PORTC	set	14
   776  000F                     _PORTD	set	15
   777  0012                     _TRISBbits	set	18
   778  0011                     _TRISA	set	17
   779  000C                     _PORTA	set	12
   780  000F                     _PORTDbits	set	15
   781  000E                     _PORTCbits	set	14
   782  0014                     _TRISDbits	set	20
   783  0013                     _TRISCbits	set	19
   784  0893                     _OSCFRQbits	set	2195
   785  1F4E                     _ANSELC	set	8014
   786  1F59                     _ANSELD	set	8025
   787  1F38                     _ANSELA	set	7992
   788  1F43                     _ANSELBbits	set	8003
   789  1F44                     _WPUBbits	set	8004
   790  1F39                     _WPUA	set	7993
   791  2027                     STR_1:	
   792  2027  3420               	retlw	32	;' '
   793  2028  344E               	retlw	78	;'N'
   794  2029  3475               	retlw	117	;'u'
   795  202A  346D               	retlw	109	;'m'
   796  202B  3431               	retlw	49	;'1'
   797  202C  343D               	retlw	61	;'='
   798  202D  3420               	retlw	32	;' '
   799  202E  3425               	retlw	37	;'%'
   800  202F  3430               	retlw	48	;'0'
   801  2030  3433               	retlw	51	;'3'
   802  2031  3464               	retlw	100	;'d'
   803  2032  3400               	retlw	0
   804                           
   805                           	psect	stringtext4
   806  2082                     __pstringtext4:	
   807  2082                     STR_3:	
   808  2082  3420               	retlw	32	;' '
   809  2083  344E               	retlw	78	;'N'
   810  2084  3475               	retlw	117	;'u'
   811  2085  346D               	retlw	109	;'m'
   812  2086  3432               	retlw	50	;'2'
   813  2087  343D               	retlw	61	;'='
   814  2088  3420               	retlw	32	;' '
   815  2089  3425               	retlw	37	;'%'
   816  208A  3430               	retlw	48	;'0'
   817  208B  3433               	retlw	51	;'3'
   818  208C  3464               	retlw	100	;'d'
   819  208D  3400               	retlw	0
   820                           
   821                           	psect	stringtext5
   822  208E                     __pstringtext5:	
   823  208E                     STR_5:	
   824  208E  3420               	retlw	32	;' '
   825  208F  3452               	retlw	82	;'R'
   826  2090  3465               	retlw	101	;'e'
   827  2091  3473               	retlw	115	;'s'
   828  2092  343D               	retlw	61	;'='
   829  2093  3420               	retlw	32	;' '
   830  2094  3425               	retlw	37	;'%'
   831  2095  3430               	retlw	48	;'0'
   832  2096  3433               	retlw	51	;'3'
   833  2097  3464               	retlw	100	;'d'
   834  2098  3400               	retlw	0
   835                           
   836                           	psect	stringtext6
   837  2099                     __pstringtext6:	
   838  2099                     STR_8:	
   839  2099  3420               	retlw	32	;' '
   840  209A  3452               	retlw	82	;'R'
   841  209B  3465               	retlw	101	;'e'
   842  209C  3473               	retlw	115	;'s'
   843  209D  343D               	retlw	61	;'='
   844  209E  3420               	retlw	32	;' '
   845  209F  3425               	retlw	37	;'%'
   846  20A0  3430               	retlw	48	;'0'
   847  20A1  3436               	retlw	54	;'6'
   848  20A2  3464               	retlw	100	;'d'
   849  20A3  3400               	retlw	0
   850                           
   851                           	psect	stringtext7
   852  20A4                     __pstringtext7:	
   853  20A4                     STR_7:	
   854  20A4  3420               	retlw	32	;' '
   855  20A5  3452               	retlw	82	;'R'
   856  20A6  3465               	retlw	101	;'e'
   857  20A7  3473               	retlw	115	;'s'
   858  20A8  343D               	retlw	61	;'='
   859  20A9  3420               	retlw	32	;' '
   860  20AA  3425               	retlw	37	;'%'
   861  20AB  3430               	retlw	48	;'0'
   862  20AC  3436               	retlw	54	;'6'
   863  20AD  3466               	retlw	102	;'f'
   864  20AE  3400               	retlw	0
   865                           
   866                           	psect	stringtext8
   867  0000                     __pstringtext8:	
   868  2027                     
   869                           ; #config settings
   870  0000                     
   871                           	psect	cinit
   872  07E4                     start_initialization:	
   873  07E4                     __initialization:	
   874                           
   875                           ; Initialize objects allocated to BANK0
   876  07E4  3180  2005  3187   	fcall	__pidataBANK0	;fetch initializer
   877  07E7  00EA               	movwf	__pdataBANK0& (0+127)
   878  07E8  3180  2006  3187   	fcall	__pidataBANK0+1	;fetch initializer
   879  07EB  00EB               	movwf	(__pdataBANK0+1)& (0+127)
   880  07EC  3180  2007  3187   	fcall	__pidataBANK0+2	;fetch initializer
   881  07EF  00EC               	movwf	(__pdataBANK0+2)& (0+127)
   882  07F0  3180  2008  3187   	fcall	__pidataBANK0+3	;fetch initializer
   883  07F3  00ED               	movwf	(__pdataBANK0+3)& (0+127)
   884                           
   885                           ; Clear objects allocated to BANK0
   886  07F4  01EE               	clrf	__pbssBANK0& (0+127)
   887  07F5  01EF               	clrf	(__pbssBANK0+1)& (0+127)
   888                           
   889                           ; Clear objects allocated to BANK1
   890  07F6  30C9               	movlw	low __pbssBANK1
   891  07F7  0084               	movwf	4
   892  07F8  3000               	movlw	high __pbssBANK1
   893  07F9  0085               	movwf	5
   894  07FA  3012               	movlw	18
   895  07FB  3188  2005         	fcall	clear_ram0
   896  07FD                     end_of_initialization:	
   897                           ;End of C runtime variable initialization code
   898                           
   899  07FD                     __end_of__initialization:	
   900  07FD  0140               	movlb	0
   901  07FE  318A  2AE6         	ljmp	_main	;jump to C main() function
   902                           
   903                           	psect	bssBANK0
   904  006E                     __pbssBANK0:	
   905  006E                     _numero1:	
   906  006E                     	ds	2
   907                           
   908                           	psect	dataBANK0
   909  006A                     __pdataBANK0:	
   910  006A                     _cont2:	
   911  006A                     	ds	2
   912  006C                     _cont1:	
   913  006C                     	ds	2
   914                           
   915                           	psect	bssBANK1
   916  00C9                     __pbssBANK1:	
   917  00C9                     _d2:	
   918  00C9                     	ds	3
   919  00CC                     _d:	
   920  00CC                     	ds	3
   921  00CF                     _aux:	
   922  00CF                     	ds	2
   923  00D1                     _igual:	
   924  00D1                     	ds	2
   925  00D3                     _o:	
   926  00D3                     	ds	2
   927  00D5                     _operacion:	
   928  00D5                     	ds	2
   929  00D7                     _resultado:	
   930  00D7                     	ds	2
   931  00D9                     _numero2:	
   932  00D9                     	ds	2
   933                           
   934                           	psect	clrtext
   935  0805                     clear_ram0:	
   936                           ;	Called with FSR0 containing the base address, and
   937                           ;	WREG with the size to clear
   938                           
   939  0805  0064               	clrwdt	;clear the watchdog before getting into this loop
   940  0806                     clrloop0:	
   941  0806  0180               	clrf	0	;clear RAM location pointed to by FSR
   942  0807  3101               	addfsr 0,1
   943  0808  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
   944  0809  2806               	goto	clrloop0	;have we reached the end yet?
   945  080A  3400               	retlw	0	;all done for this memory range, return
   946                           
   947                           	psect	cstackBANK1
   948  00A0                     __pcstackBANK1:	
   949  00A0                     _sprintf$945:	
   950                           
   951                           ; 3 bytes @ 0x0
   952  00A0                     	ds	3
   953  00A3                     sprintf@ap:	
   954                           
   955                           ; 1 bytes @ 0x3
   956  00A3                     	ds	1
   957  00A4                     sprintf@prec:	
   958                           
   959                           ; 2 bytes @ 0x4
   960  00A4                     	ds	2
   961  00A6                     sprintf@flag:	
   962                           
   963                           ; 2 bytes @ 0x6
   964  00A6                     	ds	2
   965  00A8                     sprintf@val:	
   966                           
   967                           ; 4 bytes @ 0x8
   968  00A8                     	ds	4
   969  00AC                     sprintf@tmpval:	
   970                           
   971                           ; 4 bytes @ 0xC
   972  00AC                     	ds	4
   973  00B0                     sprintf@width:	
   974                           
   975                           ; 2 bytes @ 0x10
   976  00B0                     	ds	2
   977  00B2                     sprintf@exp:	
   978                           
   979                           ; 2 bytes @ 0x12
   980  00B2                     	ds	2
   981  00B4                     sprintf@fval:	
   982                           
   983                           ; 3 bytes @ 0x14
   984  00B4                     	ds	3
   985  00B7                     sprintf@sp:	
   986                           
   987                           ; 1 bytes @ 0x17
   988  00B7                     	ds	1
   989  00B8                     sprintf@c:	
   990                           
   991                           ; 1 bytes @ 0x18
   992  00B8                     	ds	1
   993  00B9                     main@buffer1:	
   994                           
   995                           ; 16 bytes @ 0x19
   996  00B9                     	ds	16
   997                           
   998                           	psect	cstackCOMMON
   999  0070                     __pcstackCOMMON:	
  1000  0070                     ?_isdigit:	
  1001  0070                     ?___ftge:	
  1002                           ; 1 bit 
  1003                           
  1004  0070                     ?_Lcd_Cmd:	
  1005                           ; 1 bit 
  1006                           
  1007  0070                     ??_Lcd_Cmd:	
  1008                           ; 1 bytes @ 0x0
  1009                           
  1010  0070                     ?_Lcd_Chr_CP:	
  1011                           ; 1 bytes @ 0x0
  1012                           
  1013  0070                     ??_Lcd_Chr_CP:	
  1014                           ; 1 bytes @ 0x0
  1015                           
  1016  0070                     ??_isdigit:	
  1017                           ; 1 bytes @ 0x0
  1018                           
  1019  0070                     ?_Lcd_Init:	
  1020                           ; 1 bytes @ 0x0
  1021                           
  1022  0070                     ?___awmod:	
  1023                           ; 1 bytes @ 0x0
  1024                           
  1025  0070                     ?___ftpack:	
  1026                           ; 2 bytes @ 0x0
  1027                           
  1028  0070                     ?___ftneg:	
  1029                           ; 3 bytes @ 0x0
  1030                           
  1031  0070                     ?__tdiv_to_l_:	
  1032                           ; 3 bytes @ 0x0
  1033                           
  1034  0070                     ?__div_to_l_:	
  1035                           ; 4 bytes @ 0x0
  1036                           
  1037  0070                     ?___lldiv:	
  1038                           ; 4 bytes @ 0x0
  1039                           
  1040  0070                     _isdigit$727:	
  1041                           ; 4 bytes @ 0x0
  1042                           
  1043  0070                     ___awmod@divisor:	
  1044                           ; 1 bytes @ 0x0
  1045                           
  1046  0070                     __div_to_l_@f1:	
  1047                           ; 2 bytes @ 0x0
  1048                           
  1049  0070                     ___ftpack@arg:	
  1050                           ; 3 bytes @ 0x0
  1051                           
  1052  0070                     __tdiv_to_l_@f1:	
  1053                           ; 3 bytes @ 0x0
  1054                           
  1055  0070                     ___ftge@ff1:	
  1056                           ; 3 bytes @ 0x0
  1057                           
  1058  0070                     ___ftneg@f1:	
  1059                           ; 3 bytes @ 0x0
  1060                           
  1061  0070                     ___lldiv@divisor:	
  1062                           ; 3 bytes @ 0x0
  1063                           
  1064                           
  1065                           ; 4 bytes @ 0x0
  1066  0070                     	ds	1
  1067  0071                     isdigit@c:	
  1068                           
  1069                           ; 1 bytes @ 0x1
  1070  0071                     	ds	1
  1071  0072                     Lcd_Chr_CP@data:	
  1072  0072                     Lcd_Cmd@data:	
  1073                           ; 1 bytes @ 0x2
  1074                           
  1075  0072                     ___awmod@dividend:	
  1076                           ; 1 bytes @ 0x2
  1077                           
  1078                           
  1079                           ; 2 bytes @ 0x2
  1080  0072                     	ds	1
  1081  0073                     ??_Lcd_Init:	
  1082  0073                     ?_Lcd_Out2:	
  1083                           ; 1 bytes @ 0x3
  1084                           
  1085  0073                     ??___ftneg:	
  1086                           ; 1 bytes @ 0x3
  1087                           
  1088  0073                     Lcd_Out2@x:	
  1089                           ; 1 bytes @ 0x3
  1090                           
  1091  0073                     ___ftpack@exp:	
  1092                           ; 1 bytes @ 0x3
  1093                           
  1094  0073                     __div_to_l_@f2:	
  1095                           ; 1 bytes @ 0x3
  1096                           
  1097  0073                     __tdiv_to_l_@f2:	
  1098                           ; 3 bytes @ 0x3
  1099                           
  1100  0073                     ___ftge@ff2:	
  1101                           ; 3 bytes @ 0x3
  1102                           
  1103                           
  1104                           ; 3 bytes @ 0x3
  1105  0073                     	ds	1
  1106  0074                     ??___awmod:	
  1107  0074                     Lcd_Init@data:	
  1108                           ; 1 bytes @ 0x4
  1109                           
  1110  0074                     Lcd_Out2@buffer:	
  1111                           ; 1 bytes @ 0x4
  1112                           
  1113  0074                     ___ftpack@sign:	
  1114                           ; 1 bytes @ 0x4
  1115                           
  1116  0074                     ___lldiv@dividend:	
  1117                           ; 1 bytes @ 0x4
  1118                           
  1119                           
  1120                           ; 4 bytes @ 0x4
  1121  0074                     	ds	1
  1122  0075                     ??___ftpack:	
  1123  0075                     ??_Lcd_Out2:	
  1124                           ; 1 bytes @ 0x5
  1125                           
  1126  0075                     ___awmod@counter:	
  1127                           ; 1 bytes @ 0x5
  1128                           
  1129                           
  1130                           ; 1 bytes @ 0x5
  1131  0075                     	ds	1
  1132  0076                     ??__tdiv_to_l_:	
  1133  0076                     ??__div_to_l_:	
  1134                           ; 1 bytes @ 0x6
  1135                           
  1136  0076                     ??___ftge:	
  1137                           ; 1 bytes @ 0x6
  1138                           
  1139  0076                     Lcd_Out2@y:	
  1140                           ; 1 bytes @ 0x6
  1141                           
  1142  0076                     ___awmod@sign:	
  1143                           ; 1 bytes @ 0x6
  1144                           
  1145                           
  1146                           ; 1 bytes @ 0x6
  1147  0076                     	ds	1
  1148  0077                     ?___awdiv:	
  1149  0077                     Lcd_Out2@data:	
  1150                           ; 2 bytes @ 0x7
  1151                           
  1152  0077                     ___awdiv@divisor:	
  1153                           ; 1 bytes @ 0x7
  1154                           
  1155                           
  1156                           ; 2 bytes @ 0x7
  1157  0077                     	ds	1
  1158  0078                     ??___lldiv:	
  1159  0078                     ?___awtoft:	
  1160                           ; 1 bytes @ 0x8
  1161                           
  1162  0078                     ?___ftdiv:	
  1163                           ; 3 bytes @ 0x8
  1164                           
  1165  0078                     ?___lltoft:	
  1166                           ; 3 bytes @ 0x8
  1167                           
  1168  0078                     ___awtoft@c:	
  1169                           ; 3 bytes @ 0x8
  1170                           
  1171  0078                     ___ftdiv@f2:	
  1172                           ; 2 bytes @ 0x8
  1173                           
  1174  0078                     ___lltoft@c:	
  1175                           ; 3 bytes @ 0x8
  1176                           
  1177                           
  1178                           ; 4 bytes @ 0x8
  1179  0078                     	ds	1
  1180  0079                     ___awdiv@dividend:	
  1181  0079                     ___lldiv@quotient:	
  1182                           ; 2 bytes @ 0x9
  1183                           
  1184                           
  1185                           ; 4 bytes @ 0x9
  1186  0079                     	ds	2
  1187  007B                     ??___awdiv:	
  1188  007B                     ??___awtoft:	
  1189                           ; 1 bytes @ 0xB
  1190                           
  1191  007B                     ___ftdiv@f1:	
  1192                           ; 1 bytes @ 0xB
  1193                           
  1194                           
  1195                           ; 3 bytes @ 0xB
  1196  007B                     	ds	1
  1197  007C                     ??___wmul:	
  1198  007C                     ??___lltoft:	
  1199                           ; 1 bytes @ 0xC
  1200                           
  1201  007C                     ___wmul@product:	
  1202                           ; 1 bytes @ 0xC
  1203                           
  1204                           
  1205                           ; 2 bytes @ 0xC
  1206  007C                     	ds	1
  1207  007D                     ___awtoft@sign:	
  1208  007D                     ___lldiv@counter:	
  1209                           ; 1 bytes @ 0xD
  1210                           
  1211  007D                     ___lltoft@exp:	
  1212                           ; 1 bytes @ 0xD
  1213                           
  1214                           
  1215                           ; 1 bytes @ 0xD
  1216  007D                     	ds	1
  1217  007E                     ??_n1:	
  1218  007E                     ??_n2:	
  1219                           ; 1 bytes @ 0xE
  1220                           
  1221  007E                     ??___ftsub:	
  1222                           ; 1 bytes @ 0xE
  1223                           
  1224                           
  1225                           	psect	cstackBANK0
  1226  0020                     __pcstackBANK0:	
  1227                           ; 1 bytes @ 0xE
  1228                           
  1229  0020                     ??___ftdiv:	
  1230  0020                     ?___llmod:	
  1231                           ; 1 bytes @ 0x0
  1232                           
  1233  0020                     ___awdiv@counter:	
  1234                           ; 4 bytes @ 0x0
  1235                           
  1236  0020                     __div_to_l_@quot:	
  1237                           ; 1 bytes @ 0x0
  1238                           
  1239  0020                     __tdiv_to_l_@quot:	
  1240                           ; 4 bytes @ 0x0
  1241                           
  1242  0020                     ___llmod@divisor:	
  1243                           ; 4 bytes @ 0x0
  1244                           
  1245                           
  1246                           ; 4 bytes @ 0x0
  1247  0020                     	ds	1
  1248  0021                     ___awdiv@sign:	
  1249                           
  1250                           ; 1 bytes @ 0x1
  1251  0021                     	ds	1
  1252  0022                     ___awdiv@quotient:	
  1253                           
  1254                           ; 2 bytes @ 0x2
  1255  0022                     	ds	2
  1256  0024                     ?___wmul:	
  1257  0024                     __div_to_l_@cntr:	
  1258                           ; 2 bytes @ 0x4
  1259                           
  1260  0024                     ___ftdiv@cntr:	
  1261                           ; 1 bytes @ 0x4
  1262                           
  1263  0024                     __tdiv_to_l_@cntr:	
  1264                           ; 1 bytes @ 0x4
  1265                           
  1266  0024                     ___wmul@multiplier:	
  1267                           ; 1 bytes @ 0x4
  1268                           
  1269  0024                     ___llmod@dividend:	
  1270                           ; 2 bytes @ 0x4
  1271                           
  1272                           
  1273                           ; 4 bytes @ 0x4
  1274  0024                     	ds	1
  1275  0025                     __div_to_l_@exp1:	
  1276  0025                     __tdiv_to_l_@exp1:	
  1277                           ; 1 bytes @ 0x5
  1278                           
  1279  0025                     ___ftdiv@f3:	
  1280                           ; 1 bytes @ 0x5
  1281                           
  1282                           
  1283                           ; 3 bytes @ 0x5
  1284  0025                     	ds	1
  1285  0026                     ___wmul@multiplicand:	
  1286                           
  1287                           ; 2 bytes @ 0x6
  1288  0026                     	ds	2
  1289  0028                     ?_n1:	
  1290  0028                     ?_n2:	
  1291                           ; 1 bytes @ 0x8
  1292                           
  1293  0028                     ??___llmod:	
  1294                           ; 1 bytes @ 0x8
  1295                           
  1296  0028                     ?___ftmul:	
  1297                           ; 1 bytes @ 0x8
  1298                           
  1299  0028                     ___ftdiv@exp:	
  1300                           ; 3 bytes @ 0x8
  1301                           
  1302  0028                     n1@valor:	
  1303                           ; 1 bytes @ 0x8
  1304                           
  1305  0028                     n2@valor:	
  1306                           ; 2 bytes @ 0x8
  1307                           
  1308  0028                     ___ftmul@f1:	
  1309                           ; 2 bytes @ 0x8
  1310                           
  1311                           
  1312                           ; 3 bytes @ 0x8
  1313  0028                     	ds	1
  1314  0029                     ___ftdiv@sign:	
  1315  0029                     ___llmod@counter:	
  1316                           ; 1 bytes @ 0x9
  1317                           
  1318                           
  1319                           ; 1 bytes @ 0x9
  1320  0029                     	ds	1
  1321  002A                     n1@contador:	
  1322  002A                     n2@contador:	
  1323                           ; 2 bytes @ 0xA
  1324                           
  1325                           
  1326                           ; 2 bytes @ 0xA
  1327  002A                     	ds	1
  1328  002B                     ___ftmul@f2:	
  1329                           
  1330                           ; 3 bytes @ 0xB
  1331  002B                     	ds	3
  1332  002E                     ??___ftmul:	
  1333                           
  1334                           ; 1 bytes @ 0xE
  1335  002E                     	ds	4
  1336  0032                     ___ftmul@exp:	
  1337                           
  1338                           ; 1 bytes @ 0x12
  1339  0032                     	ds	1
  1340  0033                     ___ftmul@f3_as_product:	
  1341                           
  1342                           ; 3 bytes @ 0x13
  1343  0033                     	ds	3
  1344  0036                     ___ftmul@cntr:	
  1345                           
  1346                           ; 1 bytes @ 0x16
  1347  0036                     	ds	1
  1348  0037                     ___ftmul@sign:	
  1349                           
  1350                           ; 1 bytes @ 0x17
  1351  0037                     	ds	1
  1352  0038                     ?_fround:	
  1353  0038                     ?_scale:	
  1354                           ; 3 bytes @ 0x18
  1355                           
  1356                           
  1357                           ; 3 bytes @ 0x18
  1358  0038                     	ds	3
  1359  003B                     ??_fround:	
  1360  003B                     ??_scale:	
  1361                           ; 1 bytes @ 0x1B
  1362                           
  1363                           
  1364                           ; 1 bytes @ 0x1B
  1365  003B                     	ds	2
  1366  003D                     _scale$944:	
  1367                           
  1368                           ; 3 bytes @ 0x1D
  1369  003D                     	ds	2
  1370  003F                     _fround$943:	
  1371                           
  1372                           ; 3 bytes @ 0x1F
  1373  003F                     	ds	1
  1374  0040                     scale@scl:	
  1375                           
  1376                           ; 1 bytes @ 0x20
  1377  0040                     	ds	1
  1378  0041                     ?___fttol:	
  1379  0041                     ___fttol@f1:	
  1380                           ; 4 bytes @ 0x21
  1381                           
  1382                           
  1383                           ; 3 bytes @ 0x21
  1384  0041                     	ds	1
  1385  0042                     _fround$942:	
  1386                           
  1387                           ; 3 bytes @ 0x22
  1388  0042                     	ds	3
  1389  0045                     ??___fttol:	
  1390  0045                     fround@prec:	
  1391                           ; 1 bytes @ 0x25
  1392                           
  1393                           
  1394                           ; 1 bytes @ 0x25
  1395  0045                     	ds	1
  1396  0046                     ?___ftadd:	
  1397  0046                     ___ftadd@f1:	
  1398                           ; 3 bytes @ 0x26
  1399                           
  1400                           
  1401                           ; 3 bytes @ 0x26
  1402  0046                     	ds	3
  1403  0049                     ___fttol@sign1:	
  1404  0049                     ___ftadd@f2:	
  1405                           ; 1 bytes @ 0x29
  1406                           
  1407                           
  1408                           ; 3 bytes @ 0x29
  1409  0049                     	ds	1
  1410  004A                     ___fttol@lval:	
  1411                           
  1412                           ; 4 bytes @ 0x2A
  1413  004A                     	ds	2
  1414  004C                     ??___ftadd:	
  1415                           
  1416                           ; 1 bytes @ 0x2C
  1417  004C                     	ds	2
  1418  004E                     ___fttol@exp1:	
  1419                           
  1420                           ; 1 bytes @ 0x2E
  1421  004E                     	ds	2
  1422  0050                     ___ftadd@sign:	
  1423                           
  1424                           ; 1 bytes @ 0x30
  1425  0050                     	ds	1
  1426  0051                     ___ftadd@exp2:	
  1427                           
  1428                           ; 1 bytes @ 0x31
  1429  0051                     	ds	1
  1430  0052                     ___ftadd@exp1:	
  1431                           
  1432                           ; 1 bytes @ 0x32
  1433  0052                     	ds	1
  1434  0053                     ?___ftsub:	
  1435  0053                     ___ftsub@f2:	
  1436                           ; 3 bytes @ 0x33
  1437                           
  1438                           
  1439                           ; 3 bytes @ 0x33
  1440  0053                     	ds	3
  1441  0056                     ___ftsub@f1:	
  1442                           
  1443                           ; 3 bytes @ 0x36
  1444  0056                     	ds	3
  1445  0059                     ?_sprintf:	
  1446  0059                     sprintf@f:	
  1447                           ; 2 bytes @ 0x39
  1448                           
  1449                           
  1450                           ; 2 bytes @ 0x39
  1451  0059                     	ds	5
  1452  005E                     ??_sprintf:	
  1453                           
  1454                           ; 1 bytes @ 0x3E
  1455  005E                     	ds	6
  1456  0064                     ?_main:	
  1457  0064                     main@argc:	
  1458                           ; 2 bytes @ 0x44
  1459                           
  1460                           
  1461                           ; 2 bytes @ 0x44
  1462  0064                     	ds	2
  1463  0066                     main@argv:	
  1464                           
  1465                           ; 2 bytes @ 0x46
  1466  0066                     	ds	2
  1467  0068                     ??_main:	
  1468                           
  1469                           ; 1 bytes @ 0x48
  1470  0068                     	ds	2
  1471                           
  1472                           	psect	maintext
  1473  0AE6                     __pmaintext:	
  1474 ;;
  1475 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  1476 ;;
  1477 ;; *************** function _main *****************
  1478 ;; Defined at:
  1479 ;;		line 47 in file "main.c"
  1480 ;; Parameters:    Size  Location     Type
  1481 ;;  argc            2   68[BANK0 ] int 
  1482 ;;  argv            2   70[BANK0 ] PTR PTR unsigned char 
  1483 ;; Auto vars:     Size  Location     Type
  1484 ;;  buffer1        16   25[BANK1 ] unsigned char [16]
  1485 ;; Return value:  Size  Location     Type
  1486 ;;                  2   68[BANK0 ] int 
  1487 ;; Registers used:
  1488 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  1489 ;; Tracked objects:
  1490 ;;		On entry : B3F/0
  1491 ;;		On exit  : 0/0
  1492 ;;		Unchanged: 0/0
  1493 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
  1494 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  1495 ;;      Locals:         0       0      16       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  1496 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  1497 ;;      Totals:         0       6      16       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  1498 ;;Total ram usage:       22 bytes
  1499 ;; Hardware stack levels required when called:    4
  1500 ;; This function calls:
  1501 ;;		_Lcd_Cmd
  1502 ;;		_Lcd_Init
  1503 ;;		_Lcd_Out2
  1504 ;;		___awtoft
  1505 ;;		___ftdiv
  1506 ;;		___wmul
  1507 ;;		_n1
  1508 ;;		_n2
  1509 ;;		_sprintf
  1510 ;; This function is called by:
  1511 ;;		Startup code after reset
  1512 ;; This function uses a non-reentrant model
  1513 ;;
  1514                           
  1515                           
  1516                           ;psect for function _main
  1517  0AE6                     _main:	
  1518                           
  1519                           ;main.c: 48: OSCFRQbits.HFFRQ=0b110;
  1520                           
  1521                           ;incstack = 0
  1522                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  1523  0AE6  0151               	movlb	17	; select bank17
  1524  0AE7  0813               	movf	19,w	;volatile
  1525  0AE8  39F8               	andlw	-8
  1526  0AE9  3806               	iorlw	6
  1527  0AEA  0093               	movwf	19	;volatile
  1528                           
  1529                           ;main.c: 49: PORTA=0;
  1530  0AEB  0140               	movlb	0	; select bank0
  1531  0AEC  018C               	clrf	12	;volatile
  1532                           
  1533                           ;main.c: 50: TRISA=0b00001111;
  1534  0AED  300F               	movlw	15
  1535  0AEE  0091               	movwf	17	;volatile
  1536                           
  1537                           ;main.c: 51: WPUA=0b11111111;
  1538  0AEF  30FF               	movlw	255
  1539  0AF0  017E               	movlb	62	; select bank62
  1540  0AF1  00B9               	movwf	57	;volatile
  1541                           
  1542                           ;main.c: 52: WPUBbits.WPUB5=1;
  1543  0AF2  16C4               	bsf	68,5	;volatile
  1544                           
  1545                           ;main.c: 53: ANSELBbits.ANSB5=0;
  1546  0AF3  12C3               	bcf	67,5	;volatile
  1547                           
  1548                           ;main.c: 54: TRISBbits.TRISB5=1;
  1549  0AF4  0140               	movlb	0	; select bank0
  1550  0AF5  1692               	bsf	18,5	;volatile
  1551                           
  1552                           ;main.c: 55: ANSELA=0;
  1553  0AF6  017E               	movlb	62	; select bank62
  1554  0AF7  01B8               	clrf	56	;volatile
  1555                           
  1556                           ;main.c: 56: PORTD=0;
  1557  0AF8  0140               	movlb	0	; select bank0
  1558  0AF9  018F               	clrf	15	;volatile
  1559                           
  1560                           ;main.c: 57: PORTC=0;
  1561  0AFA  018E               	clrf	14	;volatile
  1562                           
  1563                           ;main.c: 58: ANSELD=0;
  1564  0AFB  017E               	movlb	62	; select bank62
  1565  0AFC  01D9               	clrf	89	;volatile
  1566                           
  1567                           ;main.c: 59: ANSELC=0;
  1568  0AFD  01CE               	clrf	78	;volatile
  1569                           
  1570                           ;main.c: 60: unsigned char buffer1[16];
  1571                           ;main.c: 61: Lcd_Init();
  1572  0AFE  3193  236B  318A   	fcall	_Lcd_Init
  1573                           
  1574                           ;main.c: 62: Lcd_Cmd(1);
  1575  0B01  3001               	movlw	1
  1576  0B02  3192  2230  318A   	fcall	_Lcd_Cmd
  1577                           
  1578                           ;main.c: 63: Lcd_Cmd(12);
  1579  0B05  300C               	movlw	12
  1580  0B06  3192  2230  318A   	fcall	_Lcd_Cmd
  1581                           
  1582                           ;main.c: 64: _delay((unsigned long)((100)*(32000000/4000.0)));
  1583  0B09  3005               	movlw	5
  1584  0B0A  0140               	movlb	0	; select bank0
  1585  0B0B  00E9               	movwf	??_main+1
  1586  0B0C  300F               	movlw	15
  1587  0B0D  00E8               	movwf	??_main
  1588  0B0E  30F1               	movlw	241
  1589  0B0F                     u5277:	
  1590  0B0F  0B89               	decfsz	9,f
  1591  0B10  2B0F               	goto	u5277
  1592  0B11  0BE8               	decfsz	??_main,f
  1593  0B12  2B0F               	goto	u5277
  1594  0B13  0BE9               	decfsz	??_main+1,f
  1595  0B14  2B0F               	goto	u5277
  1596                           
  1597                           ;main.c: 67: while(operacion==0){
  1598                           
  1599                           ;main.c: 66: while(1){
  1600  0B15  2CE7               	goto	l3615
  1601  0B16                     l126:	
  1602                           ;main.c: 69: while(cont1>0){
  1603                           
  1604                           
  1605                           ;main.c: 71: LATAbits.LATA4=1;LATAbits.LATA5=1;LATAbits.LATA6=1;LATAbits.LATA7=1;
  1606  0B16  0140               	movlb	0	; select bank0
  1607  0B17  1616               	bsf	22,4	;volatile
  1608  0B18  1696               	bsf	22,5	;volatile
  1609  0B19  1716               	bsf	22,6	;volatile
  1610  0B1A  1796               	bsf	22,7	;volatile
  1611                           
  1612                           ;main.c: 72: LATAbits.LATA4=0;
  1613  0B1B  1216               	bcf	22,4	;volatile
  1614                           
  1615                           ;main.c: 73: _delay((unsigned long)((1)*(32000000/4000.0)));
  1616  0B1C  300B               	movlw	11
  1617  0B1D  0140               	movlb	0	; select bank0
  1618  0B1E  00E8               	movwf	??_main
  1619  0B1F  3062               	movlw	98
  1620  0B20                     u5287:	
  1621  0B20  0B89               	decfsz	9,f
  1622  0B21  2B20               	goto	u5287
  1623  0B22  0BE8               	decfsz	??_main,f
  1624  0B23  2B20               	goto	u5287
  1625  0B24  0000               	nop
  1626                           
  1627                           ;main.c: 74: if(PORTBbits.RB5==0){n1(1,cont1);cont1--;}
  1628  0B25  0140               	movlb	0	; select bank0
  1629  0B26  1A8D               	btfsc	13,5	;volatile
  1630  0B27  2B38               	goto	l3457
  1631  0B28  3001               	movlw	1
  1632  0B29  00A8               	movwf	n1@valor
  1633  0B2A  3000               	movlw	0
  1634  0B2B  00A9               	movwf	n1@valor+1
  1635  0B2C  086D               	movf	_cont1+1,w
  1636  0B2D  00AB               	movwf	n1@contador+1
  1637  0B2E  086C               	movf	_cont1,w
  1638  0B2F  00AA               	movwf	n1@contador
  1639  0B30  319F  2749  318A   	fcall	_n1
  1640  0B33  30FF               	movlw	255
  1641  0B34  0140               	movlb	0	; select bank0
  1642  0B35  07EC               	addwf	_cont1,f
  1643  0B36  30FF               	movlw	255
  1644  0B37  3DED               	addwfc	_cont1+1,f
  1645  0B38                     l3457:	
  1646                           
  1647                           ;main.c: 75: if(PORTAbits.RA1==0){n1(2,cont1);cont1--;}
  1648  0B38  188C               	btfsc	12,1	;volatile
  1649  0B39  2B4A               	goto	l3463
  1650  0B3A  3002               	movlw	2
  1651  0B3B  00A8               	movwf	n1@valor
  1652  0B3C  3000               	movlw	0
  1653  0B3D  00A9               	movwf	n1@valor+1
  1654  0B3E  086D               	movf	_cont1+1,w
  1655  0B3F  00AB               	movwf	n1@contador+1
  1656  0B40  086C               	movf	_cont1,w
  1657  0B41  00AA               	movwf	n1@contador
  1658  0B42  319F  2749  318A   	fcall	_n1
  1659  0B45  30FF               	movlw	255
  1660  0B46  0140               	movlb	0	; select bank0
  1661  0B47  07EC               	addwf	_cont1,f
  1662  0B48  30FF               	movlw	255
  1663  0B49  3DED               	addwfc	_cont1+1,f
  1664  0B4A                     l3463:	
  1665                           
  1666                           ;main.c: 76: if(PORTAbits.RA2==0){n1(3,cont1);cont1--;}
  1667  0B4A  190C               	btfsc	12,2	;volatile
  1668  0B4B  2B5C               	goto	l3469
  1669  0B4C  3003               	movlw	3
  1670  0B4D  00A8               	movwf	n1@valor
  1671  0B4E  3000               	movlw	0
  1672  0B4F  00A9               	movwf	n1@valor+1
  1673  0B50  086D               	movf	_cont1+1,w
  1674  0B51  00AB               	movwf	n1@contador+1
  1675  0B52  086C               	movf	_cont1,w
  1676  0B53  00AA               	movwf	n1@contador
  1677  0B54  319F  2749  318A   	fcall	_n1
  1678  0B57  30FF               	movlw	255
  1679  0B58  0140               	movlb	0	; select bank0
  1680  0B59  07EC               	addwf	_cont1,f
  1681  0B5A  30FF               	movlw	255
  1682  0B5B  3DED               	addwfc	_cont1+1,f
  1683  0B5C                     l3469:	
  1684                           
  1685                           ;main.c: 77: if(PORTAbits.RA3==0){cont1=0;operacion=1;}
  1686  0B5C  198C               	btfsc	12,3	;volatile
  1687  0B5D  2B65               	goto	l3475
  1688  0B5E  01EC               	clrf	_cont1
  1689  0B5F  01ED               	clrf	_cont1+1
  1690  0B60  3001               	movlw	1
  1691  0B61  0141               	movlb	1	; select bank1
  1692  0B62  00D5               	movwf	_operacion^(0+128)
  1693  0B63  3000               	movlw	0
  1694  0B64  00D6               	movwf	(_operacion^(0+128)+1)
  1695  0B65                     l3475:	
  1696                           
  1697                           ;main.c: 78: LATAbits.LATA4=1;
  1698  0B65  0140               	movlb	0	; select bank0
  1699  0B66  1616               	bsf	22,4	;volatile
  1700                           
  1701                           ;main.c: 79: LATAbits.LATA5=0;
  1702  0B67  1296               	bcf	22,5	;volatile
  1703                           
  1704                           ;main.c: 80: _delay((unsigned long)((1)*(32000000/4000.0)));
  1705  0B68  300B               	movlw	11
  1706  0B69  0140               	movlb	0	; select bank0
  1707  0B6A  00E8               	movwf	??_main
  1708  0B6B  3062               	movlw	98
  1709  0B6C                     u5297:	
  1710  0B6C  0B89               	decfsz	9,f
  1711  0B6D  2B6C               	goto	u5297
  1712  0B6E  0BE8               	decfsz	??_main,f
  1713  0B6F  2B6C               	goto	u5297
  1714  0B70  0000               	nop
  1715                           
  1716                           ;main.c: 81: if(PORTBbits.RB5==0){n1(4,cont1);cont1--;}
  1717  0B71  0140               	movlb	0	; select bank0
  1718  0B72  1A8D               	btfsc	13,5	;volatile
  1719  0B73  2B84               	goto	l3487
  1720  0B74  3004               	movlw	4
  1721  0B75  00A8               	movwf	n1@valor
  1722  0B76  3000               	movlw	0
  1723  0B77  00A9               	movwf	n1@valor+1
  1724  0B78  086D               	movf	_cont1+1,w
  1725  0B79  00AB               	movwf	n1@contador+1
  1726  0B7A  086C               	movf	_cont1,w
  1727  0B7B  00AA               	movwf	n1@contador
  1728  0B7C  319F  2749  318A   	fcall	_n1
  1729  0B7F  30FF               	movlw	255
  1730  0B80  0140               	movlb	0	; select bank0
  1731  0B81  07EC               	addwf	_cont1,f
  1732  0B82  30FF               	movlw	255
  1733  0B83  3DED               	addwfc	_cont1+1,f
  1734  0B84                     l3487:	
  1735                           
  1736                           ;main.c: 82: if(PORTAbits.RA1==0){n1(5,cont1);cont1--;}
  1737  0B84  188C               	btfsc	12,1	;volatile
  1738  0B85  2B96               	goto	l3493
  1739  0B86  3005               	movlw	5
  1740  0B87  00A8               	movwf	n1@valor
  1741  0B88  3000               	movlw	0
  1742  0B89  00A9               	movwf	n1@valor+1
  1743  0B8A  086D               	movf	_cont1+1,w
  1744  0B8B  00AB               	movwf	n1@contador+1
  1745  0B8C  086C               	movf	_cont1,w
  1746  0B8D  00AA               	movwf	n1@contador
  1747  0B8E  319F  2749  318A   	fcall	_n1
  1748  0B91  30FF               	movlw	255
  1749  0B92  0140               	movlb	0	; select bank0
  1750  0B93  07EC               	addwf	_cont1,f
  1751  0B94  30FF               	movlw	255
  1752  0B95  3DED               	addwfc	_cont1+1,f
  1753  0B96                     l3493:	
  1754                           
  1755                           ;main.c: 83: if(PORTAbits.RA2==0){n1(6,cont1);cont1--;}
  1756  0B96  190C               	btfsc	12,2	;volatile
  1757  0B97  2BA8               	goto	l3499
  1758  0B98  3006               	movlw	6
  1759  0B99  00A8               	movwf	n1@valor
  1760  0B9A  3000               	movlw	0
  1761  0B9B  00A9               	movwf	n1@valor+1
  1762  0B9C  086D               	movf	_cont1+1,w
  1763  0B9D  00AB               	movwf	n1@contador+1
  1764  0B9E  086C               	movf	_cont1,w
  1765  0B9F  00AA               	movwf	n1@contador
  1766  0BA0  319F  2749  318A   	fcall	_n1
  1767  0BA3  30FF               	movlw	255
  1768  0BA4  0140               	movlb	0	; select bank0
  1769  0BA5  07EC               	addwf	_cont1,f
  1770  0BA6  30FF               	movlw	255
  1771  0BA7  3DED               	addwfc	_cont1+1,f
  1772  0BA8                     l3499:	
  1773                           
  1774                           ;main.c: 84: if(PORTAbits.RA3==0){cont1=0;operacion=2;}
  1775  0BA8  198C               	btfsc	12,3	;volatile
  1776  0BA9  2BB1               	goto	l3505
  1777  0BAA  01EC               	clrf	_cont1
  1778  0BAB  01ED               	clrf	_cont1+1
  1779  0BAC  3002               	movlw	2
  1780  0BAD  0141               	movlb	1	; select bank1
  1781  0BAE  00D5               	movwf	_operacion^(0+128)
  1782  0BAF  3000               	movlw	0
  1783  0BB0  00D6               	movwf	(_operacion^(0+128)+1)
  1784  0BB1                     l3505:	
  1785                           
  1786                           ;main.c: 85: LATAbits.LATA5=1;
  1787  0BB1  0140               	movlb	0	; select bank0
  1788  0BB2  1696               	bsf	22,5	;volatile
  1789                           
  1790                           ;main.c: 86: LATAbits.LATA6=0;
  1791  0BB3  1316               	bcf	22,6	;volatile
  1792                           
  1793                           ;main.c: 87: _delay((unsigned long)((1)*(32000000/4000.0)));
  1794  0BB4  300B               	movlw	11
  1795  0BB5  0140               	movlb	0	; select bank0
  1796  0BB6  00E8               	movwf	??_main
  1797  0BB7  3062               	movlw	98
  1798  0BB8                     u5307:	
  1799  0BB8  0B89               	decfsz	9,f
  1800  0BB9  2BB8               	goto	u5307
  1801  0BBA  0BE8               	decfsz	??_main,f
  1802  0BBB  2BB8               	goto	u5307
  1803  0BBC  0000               	nop
  1804                           
  1805                           ;main.c: 88: if(PORTBbits.RB5==0){n1(7,cont1);cont1--;}
  1806  0BBD  0140               	movlb	0	; select bank0
  1807  0BBE  1A8D               	btfsc	13,5	;volatile
  1808  0BBF  2BD0               	goto	l3517
  1809  0BC0  3007               	movlw	7
  1810  0BC1  00A8               	movwf	n1@valor
  1811  0BC2  3000               	movlw	0
  1812  0BC3  00A9               	movwf	n1@valor+1
  1813  0BC4  086D               	movf	_cont1+1,w
  1814  0BC5  00AB               	movwf	n1@contador+1
  1815  0BC6  086C               	movf	_cont1,w
  1816  0BC7  00AA               	movwf	n1@contador
  1817  0BC8  319F  2749  318A   	fcall	_n1
  1818  0BCB  30FF               	movlw	255
  1819  0BCC  0140               	movlb	0	; select bank0
  1820  0BCD  07EC               	addwf	_cont1,f
  1821  0BCE  30FF               	movlw	255
  1822  0BCF  3DED               	addwfc	_cont1+1,f
  1823  0BD0                     l3517:	
  1824                           
  1825                           ;main.c: 89: if(PORTAbits.RA1==0){n1(8,cont1);cont1--;}
  1826  0BD0  188C               	btfsc	12,1	;volatile
  1827  0BD1  2BE2               	goto	l3523
  1828  0BD2  3008               	movlw	8
  1829  0BD3  00A8               	movwf	n1@valor
  1830  0BD4  3000               	movlw	0
  1831  0BD5  00A9               	movwf	n1@valor+1
  1832  0BD6  086D               	movf	_cont1+1,w
  1833  0BD7  00AB               	movwf	n1@contador+1
  1834  0BD8  086C               	movf	_cont1,w
  1835  0BD9  00AA               	movwf	n1@contador
  1836  0BDA  319F  2749  318A   	fcall	_n1
  1837  0BDD  30FF               	movlw	255
  1838  0BDE  0140               	movlb	0	; select bank0
  1839  0BDF  07EC               	addwf	_cont1,f
  1840  0BE0  30FF               	movlw	255
  1841  0BE1  3DED               	addwfc	_cont1+1,f
  1842  0BE2                     l3523:	
  1843                           
  1844                           ;main.c: 90: if(PORTAbits.RA2==0){n1(9,cont1);cont1--;}
  1845  0BE2  190C               	btfsc	12,2	;volatile
  1846  0BE3  2BF4               	goto	l3529
  1847  0BE4  3009               	movlw	9
  1848  0BE5  00A8               	movwf	n1@valor
  1849  0BE6  3000               	movlw	0
  1850  0BE7  00A9               	movwf	n1@valor+1
  1851  0BE8  086D               	movf	_cont1+1,w
  1852  0BE9  00AB               	movwf	n1@contador+1
  1853  0BEA  086C               	movf	_cont1,w
  1854  0BEB  00AA               	movwf	n1@contador
  1855  0BEC  319F  2749  318A   	fcall	_n1
  1856  0BEF  30FF               	movlw	255
  1857  0BF0  0140               	movlb	0	; select bank0
  1858  0BF1  07EC               	addwf	_cont1,f
  1859  0BF2  30FF               	movlw	255
  1860  0BF3  3DED               	addwfc	_cont1+1,f
  1861  0BF4                     l3529:	
  1862                           
  1863                           ;main.c: 91: if(PORTAbits.RA3==0){return (0);}
  1864  0BF4  1D8C               	btfss	12,3	;volatile
  1865  0BF5  2FFE               	goto	l139
  1866                           
  1867                           ;main.c: 92: LATAbits.LATA6=1;
  1868                           
  1869                           ;	Return value of _main is never used
  1870  0BF6  1716               	bsf	22,6	;volatile
  1871                           
  1872                           ;main.c: 93: LATAbits.LATA7=0;
  1873  0BF7  1396               	bcf	22,7	;volatile
  1874                           
  1875                           ;main.c: 94: _delay((unsigned long)((1)*(32000000/4000.0)));
  1876  0BF8  300B               	movlw	11
  1877  0BF9  0140               	movlb	0	; select bank0
  1878  0BFA  00E8               	movwf	??_main
  1879  0BFB  3062               	movlw	98
  1880  0BFC                     u5317:	
  1881  0BFC  0B89               	decfsz	9,f
  1882  0BFD  2BFC               	goto	u5317
  1883  0BFE  0BE8               	decfsz	??_main,f
  1884  0BFF  2BFC               	goto	u5317
  1885  0C00  0000               	nop
  1886                           
  1887                           ;main.c: 95: if(PORTBbits.RB5==0){cont1=0;operacion=4;}
  1888  0C01  0140               	movlb	0	; select bank0
  1889  0C02  1A8D               	btfsc	13,5	;volatile
  1890  0C03  2C0B               	goto	l3541
  1891  0C04  01EC               	clrf	_cont1
  1892  0C05  01ED               	clrf	_cont1+1
  1893  0C06  3004               	movlw	4
  1894  0C07  0141               	movlb	1	; select bank1
  1895  0C08  00D5               	movwf	_operacion^(0+128)
  1896  0C09  3000               	movlw	0
  1897  0C0A  00D6               	movwf	(_operacion^(0+128)+1)
  1898  0C0B                     l3541:	
  1899                           
  1900                           ;main.c: 96: if(PORTAbits.RA1==0){n1(0,cont1);cont1--;}
  1901  0C0B  0140               	movlb	0	; select bank0
  1902  0C0C  188C               	btfsc	12,1	;volatile
  1903  0C0D  2C1D               	goto	l3547
  1904  0C0E  3000               	movlw	0
  1905  0C0F  00A8               	movwf	n1@valor
  1906  0C10  00A9               	movwf	n1@valor+1
  1907  0C11  086D               	movf	_cont1+1,w
  1908  0C12  00AB               	movwf	n1@contador+1
  1909  0C13  086C               	movf	_cont1,w
  1910  0C14  00AA               	movwf	n1@contador
  1911  0C15  319F  2749  318A   	fcall	_n1
  1912  0C18  30FF               	movlw	255
  1913  0C19  0140               	movlb	0	; select bank0
  1914  0C1A  07EC               	addwf	_cont1,f
  1915  0C1B  30FF               	movlw	255
  1916  0C1C  3DED               	addwfc	_cont1+1,f
  1917  0C1D                     l3547:	
  1918                           
  1919                           ;main.c: 97: if(PORTAbits.RA2==0){}
  1920  0C1D  080C               	movf	12,w	;volatile
  1921                           
  1922                           ;main.c: 98: if(PORTAbits.RA3==0){cont1=0;operacion=3;}
  1923  0C1E  198C               	btfsc	12,3	;volatile
  1924  0C1F  2C27               	goto	l3553
  1925  0C20  01EC               	clrf	_cont1
  1926  0C21  01ED               	clrf	_cont1+1
  1927  0C22  3003               	movlw	3
  1928  0C23  0141               	movlb	1	; select bank1
  1929  0C24  00D5               	movwf	_operacion^(0+128)
  1930  0C25  3000               	movlw	0
  1931  0C26  00D6               	movwf	(_operacion^(0+128)+1)
  1932  0C27                     l3553:	
  1933                           
  1934                           ;main.c: 99: LATAbits.LATA7=1;
  1935  0C27  0140               	movlb	0	; select bank0
  1936  0C28  1796               	bsf	22,7	;volatile
  1937                           
  1938                           ;main.c: 100: sprintf(buffer1," Num1= %03d",numero1);
  1939  0C29  3027               	movlw	low (STR_1| (0+32768))
  1940  0C2A  00D9               	movwf	sprintf@f
  1941  0C2B  30A0               	movlw	high (STR_1| (0+32768))
  1942  0C2C  00DA               	movwf	sprintf@f+1
  1943  0C2D  086F               	movf	_numero1+1,w
  1944  0C2E  00DC               	movwf	?_sprintf+3
  1945  0C2F  086E               	movf	_numero1,w
  1946  0C30  00DB               	movwf	?_sprintf+2
  1947  0C31  30B9               	movlw	(low (main@buffer1| 0))& (0+255)
  1948  0C32  3181  2107  318A   	fcall	_sprintf
  1949                           
  1950                           ;main.c: 101: Lcd_Out2(1,1,buffer1);
  1951  0C35  01F3               	clrf	Lcd_Out2@x
  1952  0C36  0AF3               	incf	Lcd_Out2@x,f
  1953  0C37  30B9               	movlw	(low (main@buffer1| 0))& (0+255)
  1954  0C38  0140               	movlb	0	; select bank0
  1955  0C39  00E8               	movwf	??_main
  1956  0C3A  0868               	movf	??_main,w
  1957  0C3B  00F4               	movwf	Lcd_Out2@buffer
  1958  0C3C  3001               	movlw	1
  1959  0C3D  319F  2714  318A   	fcall	_Lcd_Out2
  1960                           
  1961                           ;main.c: 102: _delay((unsigned long)((250)*(32000000/4000.0)));
  1962  0C40  300B               	movlw	11
  1963  0C41  0140               	movlb	0	; select bank0
  1964  0C42  00E9               	movwf	??_main+1
  1965  0C43  3026               	movlw	38
  1966  0C44  00E8               	movwf	??_main
  1967  0C45  305D               	movlw	93
  1968  0C46                     u5327:	
  1969  0C46  0B89               	decfsz	9,f
  1970  0C47  2C46               	goto	u5327
  1971  0C48  0BE8               	decfsz	??_main,f
  1972  0C49  2C46               	goto	u5327
  1973  0C4A  0BE9               	decfsz	??_main+1,f
  1974  0C4B  2C46               	goto	u5327
  1975  0C4C  3200               	nop2
  1976  0C4D                     l3561:	
  1977  0C4D  0140               	movlb	0	; select bank0
  1978  0C4E  086D               	movf	_cont1+1,w
  1979  0C4F  3A80               	xorlw	128
  1980  0C50  00E8               	movwf	??_main
  1981  0C51  3080               	movlw	128
  1982  0C52  0268               	subwf	??_main,w
  1983  0C53  1D03               	skipz
  1984  0C54  2C57               	goto	u4925
  1985  0C55  3001               	movlw	1
  1986  0C56  026C               	subwf	_cont1,w
  1987  0C57                     u4925:	
  1988  0C57  1803               	skipnc
  1989  0C58  2B16               	goto	l126
  1990                           
  1991                           ;main.c: 103: }
  1992                           ;main.c: 105: LATAbits.LATA4=1;LATAbits.LATA5=1;LATAbits.LATA6=1;LATAbits.LATA7=1;
  1993  0C59  0140               	movlb	0	; select bank0
  1994  0C5A  1616               	bsf	22,4	;volatile
  1995  0C5B  1696               	bsf	22,5	;volatile
  1996  0C5C  1716               	bsf	22,6	;volatile
  1997  0C5D  1796               	bsf	22,7	;volatile
  1998                           
  1999                           ;main.c: 106: LATAbits.LATA4=0;
  2000  0C5E  1216               	bcf	22,4	;volatile
  2001                           
  2002                           ;main.c: 107: _delay((unsigned long)((1)*(32000000/4000.0)));
  2003  0C5F  300B               	movlw	11
  2004  0C60  0140               	movlb	0	; select bank0
  2005  0C61  00E8               	movwf	??_main
  2006  0C62  3062               	movlw	98
  2007  0C63                     u5337:	
  2008  0C63  0B89               	decfsz	9,f
  2009  0C64  2C63               	goto	u5337
  2010  0C65  0BE8               	decfsz	??_main,f
  2011  0C66  2C63               	goto	u5337
  2012  0C67  0000               	nop
  2013                           
  2014                           ;main.c: 108: if(PORTBbits.RB5==0){}
  2015  0C68  0140               	movlb	0	; select bank0
  2016  0C69  080D               	movf	13,w	;volatile
  2017                           
  2018                           ;main.c: 109: if(PORTAbits.RA1==0){}
  2019  0C6A  080C               	movf	12,w	;volatile
  2020                           
  2021                           ;main.c: 110: if(PORTAbits.RA2==0){}
  2022  0C6B  080C               	movf	12,w	;volatile
  2023                           
  2024                           ;main.c: 111: if(PORTAbits.RA3==0){cont1=0;operacion=1;}
  2025  0C6C  198C               	btfsc	12,3	;volatile
  2026  0C6D  2C75               	goto	l3571
  2027  0C6E  01EC               	clrf	_cont1
  2028  0C6F  01ED               	clrf	_cont1+1
  2029  0C70  3001               	movlw	1
  2030  0C71  0141               	movlb	1	; select bank1
  2031  0C72  00D5               	movwf	_operacion^(0+128)
  2032  0C73  3000               	movlw	0
  2033  0C74  00D6               	movwf	(_operacion^(0+128)+1)
  2034  0C75                     l3571:	
  2035                           
  2036                           ;main.c: 112: LATAbits.LATA4=1;
  2037  0C75  0140               	movlb	0	; select bank0
  2038  0C76  1616               	bsf	22,4	;volatile
  2039                           
  2040                           ;main.c: 113: LATAbits.LATA5=0;
  2041  0C77  1296               	bcf	22,5	;volatile
  2042                           
  2043                           ;main.c: 114: _delay((unsigned long)((1)*(32000000/4000.0)));
  2044  0C78  300B               	movlw	11
  2045  0C79  0140               	movlb	0	; select bank0
  2046  0C7A  00E8               	movwf	??_main
  2047  0C7B  3062               	movlw	98
  2048  0C7C                     u5347:	
  2049  0C7C  0B89               	decfsz	9,f
  2050  0C7D  2C7C               	goto	u5347
  2051  0C7E  0BE8               	decfsz	??_main,f
  2052  0C7F  2C7C               	goto	u5347
  2053  0C80  0000               	nop
  2054                           
  2055                           ;main.c: 115: if(PORTBbits.RB5==0){}
  2056  0C81  0140               	movlb	0	; select bank0
  2057  0C82  080D               	movf	13,w	;volatile
  2058                           
  2059                           ;main.c: 116: if(PORTAbits.RA1==0){}
  2060  0C83  080C               	movf	12,w	;volatile
  2061                           
  2062                           ;main.c: 117: if(PORTAbits.RA2==0){}
  2063  0C84  080C               	movf	12,w	;volatile
  2064                           
  2065                           ;main.c: 118: if(PORTAbits.RA3==0){cont1=0;operacion=2;}
  2066  0C85  198C               	btfsc	12,3	;volatile
  2067  0C86  2C8E               	goto	l3583
  2068  0C87  01EC               	clrf	_cont1
  2069  0C88  01ED               	clrf	_cont1+1
  2070  0C89  3002               	movlw	2
  2071  0C8A  0141               	movlb	1	; select bank1
  2072  0C8B  00D5               	movwf	_operacion^(0+128)
  2073  0C8C  3000               	movlw	0
  2074  0C8D  00D6               	movwf	(_operacion^(0+128)+1)
  2075  0C8E                     l3583:	
  2076                           
  2077                           ;main.c: 119: LATAbits.LATA5=1;
  2078  0C8E  0140               	movlb	0	; select bank0
  2079  0C8F  1696               	bsf	22,5	;volatile
  2080                           
  2081                           ;main.c: 120: LATAbits.LATA6=0;
  2082  0C90  1316               	bcf	22,6	;volatile
  2083                           
  2084                           ;main.c: 121: _delay((unsigned long)((1)*(32000000/4000.0)));
  2085  0C91  300B               	movlw	11
  2086  0C92  0140               	movlb	0	; select bank0
  2087  0C93  00E8               	movwf	??_main
  2088  0C94  3062               	movlw	98
  2089  0C95                     u5357:	
  2090  0C95  0B89               	decfsz	9,f
  2091  0C96  2C95               	goto	u5357
  2092  0C97  0BE8               	decfsz	??_main,f
  2093  0C98  2C95               	goto	u5357
  2094  0C99  0000               	nop
  2095                           
  2096                           ;main.c: 122: if(PORTBbits.RB5==0){}
  2097  0C9A  0140               	movlb	0	; select bank0
  2098  0C9B  080D               	movf	13,w	;volatile
  2099                           
  2100                           ;main.c: 123: if(PORTAbits.RA1==0){}
  2101  0C9C  080C               	movf	12,w	;volatile
  2102                           
  2103                           ;main.c: 124: if(PORTAbits.RA2==0){}
  2104  0C9D  080C               	movf	12,w	;volatile
  2105                           
  2106                           ;main.c: 125: if(PORTAbits.RA3==0){return (0);}
  2107  0C9E  1D8C               	btfss	12,3	;volatile
  2108  0C9F  2FFE               	goto	l139
  2109                           
  2110                           ;main.c: 126: LATAbits.LATA6=1;
  2111                           
  2112                           ;	Return value of _main is never used
  2113  0CA0  1716               	bsf	22,6	;volatile
  2114                           
  2115                           ;main.c: 127: LATAbits.LATA7=0;
  2116  0CA1  1396               	bcf	22,7	;volatile
  2117                           
  2118                           ;main.c: 128: _delay((unsigned long)((1)*(32000000/4000.0)));
  2119  0CA2  300B               	movlw	11
  2120  0CA3  0140               	movlb	0	; select bank0
  2121  0CA4  00E8               	movwf	??_main
  2122  0CA5  3062               	movlw	98
  2123  0CA6                     u5367:	
  2124  0CA6  0B89               	decfsz	9,f
  2125  0CA7  2CA6               	goto	u5367
  2126  0CA8  0BE8               	decfsz	??_main,f
  2127  0CA9  2CA6               	goto	u5367
  2128  0CAA  0000               	nop
  2129                           
  2130                           ;main.c: 129: if(PORTBbits.RB5==0){cont1=0;operacion=4;}
  2131  0CAB  0140               	movlb	0	; select bank0
  2132  0CAC  1A8D               	btfsc	13,5	;volatile
  2133  0CAD  2CB5               	goto	l3601
  2134  0CAE  01EC               	clrf	_cont1
  2135  0CAF  01ED               	clrf	_cont1+1
  2136  0CB0  3004               	movlw	4
  2137  0CB1  0141               	movlb	1	; select bank1
  2138  0CB2  00D5               	movwf	_operacion^(0+128)
  2139  0CB3  3000               	movlw	0
  2140  0CB4  00D6               	movwf	(_operacion^(0+128)+1)
  2141  0CB5                     l3601:	
  2142                           
  2143                           ;main.c: 130: if(PORTAbits.RA1==0){}
  2144  0CB5  0140               	movlb	0	; select bank0
  2145  0CB6  080C               	movf	12,w	;volatile
  2146                           
  2147                           ;main.c: 131: if(PORTAbits.RA2==0){}
  2148  0CB7  080C               	movf	12,w	;volatile
  2149                           
  2150                           ;main.c: 132: if(PORTAbits.RA3==0){cont1=0;operacion=3;}
  2151  0CB8  198C               	btfsc	12,3	;volatile
  2152  0CB9  2CC1               	goto	l3607
  2153  0CBA  01EC               	clrf	_cont1
  2154  0CBB  01ED               	clrf	_cont1+1
  2155  0CBC  3003               	movlw	3
  2156  0CBD  0141               	movlb	1	; select bank1
  2157  0CBE  00D5               	movwf	_operacion^(0+128)
  2158  0CBF  3000               	movlw	0
  2159  0CC0  00D6               	movwf	(_operacion^(0+128)+1)
  2160  0CC1                     l3607:	
  2161                           
  2162                           ;main.c: 133: LATAbits.LATA7=1;
  2163  0CC1  0140               	movlb	0	; select bank0
  2164  0CC2  1796               	bsf	22,7	;volatile
  2165                           
  2166                           ;main.c: 134: sprintf(buffer1," Num1= %03d",numero1);
  2167  0CC3  3027               	movlw	low (STR_1| (0+32768))
  2168  0CC4  00D9               	movwf	sprintf@f
  2169  0CC5  30A0               	movlw	high (STR_1| (0+32768))
  2170  0CC6  00DA               	movwf	sprintf@f+1
  2171  0CC7  086F               	movf	_numero1+1,w
  2172  0CC8  00DC               	movwf	?_sprintf+3
  2173  0CC9  086E               	movf	_numero1,w
  2174  0CCA  00DB               	movwf	?_sprintf+2
  2175  0CCB  30B9               	movlw	(low (main@buffer1| 0))& (0+255)
  2176  0CCC  3181  2107  318A   	fcall	_sprintf
  2177                           
  2178                           ;main.c: 135: Lcd_Out2(1,1,buffer1);
  2179  0CCF  01F3               	clrf	Lcd_Out2@x
  2180  0CD0  0AF3               	incf	Lcd_Out2@x,f
  2181  0CD1  30B9               	movlw	(low (main@buffer1| 0))& (0+255)
  2182  0CD2  0140               	movlb	0	; select bank0
  2183  0CD3  00E8               	movwf	??_main
  2184  0CD4  0868               	movf	??_main,w
  2185  0CD5  00F4               	movwf	Lcd_Out2@buffer
  2186  0CD6  3001               	movlw	1
  2187  0CD7  319F  2714  318A   	fcall	_Lcd_Out2
  2188                           
  2189                           ;main.c: 136: _delay((unsigned long)((250)*(32000000/4000.0)));
  2190  0CDA  300B               	movlw	11
  2191  0CDB  0140               	movlb	0	; select bank0
  2192  0CDC  00E9               	movwf	??_main+1
  2193  0CDD  3026               	movlw	38
  2194  0CDE  00E8               	movwf	??_main
  2195  0CDF  305D               	movlw	93
  2196  0CE0                     u5377:	
  2197  0CE0  0B89               	decfsz	9,f
  2198  0CE1  2CE0               	goto	u5377
  2199  0CE2  0BE8               	decfsz	??_main,f
  2200  0CE3  2CE0               	goto	u5377
  2201  0CE4  0BE9               	decfsz	??_main+1,f
  2202  0CE5  2CE0               	goto	u5377
  2203  0CE6  3200               	nop2
  2204  0CE7                     l3615:	
  2205  0CE7  0141               	movlb	1	; select bank1
  2206  0CE8  0855               	movf	_operacion^(0+128),w
  2207  0CE9  0456               	iorwf	(_operacion+1)^(0+128),w
  2208  0CEA  1D03               	btfss	3,2
  2209  0CEB  2E9A               	goto	l3735
  2210  0CEC  2C4D               	goto	l3561
  2211  0CED                     l165:	
  2212                           ;main.c: 150: while(cont2>0){
  2213                           
  2214                           ;main.c: 137: }
  2215                           ;main.c: 149: while(igual==0){
  2216                           
  2217                           
  2218                           ;main.c: 151: LATAbits.LATA4=1;LATAbits.LATA5=1;LATAbits.LATA6=1;LATAbits.LATA7=1;
  2219  0CED  0140               	movlb	0	; select bank0
  2220  0CEE  1616               	bsf	22,4	;volatile
  2221  0CEF  1696               	bsf	22,5	;volatile
  2222  0CF0  1716               	bsf	22,6	;volatile
  2223  0CF1  1796               	bsf	22,7	;volatile
  2224                           
  2225                           ;main.c: 152: LATAbits.LATA4=0;
  2226  0CF2  1216               	bcf	22,4	;volatile
  2227                           
  2228                           ;main.c: 153: _delay((unsigned long)((1)*(32000000/4000.0)));
  2229  0CF3  300B               	movlw	11
  2230  0CF4  0140               	movlb	0	; select bank0
  2231  0CF5  00E8               	movwf	??_main
  2232  0CF6  3062               	movlw	98
  2233  0CF7                     u5387:	
  2234  0CF7  0B89               	decfsz	9,f
  2235  0CF8  2CF7               	goto	u5387
  2236  0CF9  0BE8               	decfsz	??_main,f
  2237  0CFA  2CF7               	goto	u5387
  2238  0CFB  0000               	nop
  2239                           
  2240                           ;main.c: 154: if(PORTBbits.RB5==0){n2(1,cont2);cont2--;}
  2241  0CFC  0140               	movlb	0	; select bank0
  2242  0CFD  1A8D               	btfsc	13,5	;volatile
  2243  0CFE  2D0F               	goto	l3625
  2244  0CFF  3001               	movlw	1
  2245  0D00  00A8               	movwf	n2@valor
  2246  0D01  3000               	movlw	0
  2247  0D02  00A9               	movwf	n2@valor+1
  2248  0D03  086B               	movf	_cont2+1,w
  2249  0D04  00AB               	movwf	n2@contador+1
  2250  0D05  086A               	movf	_cont2,w
  2251  0D06  00AA               	movwf	n2@contador
  2252  0D07  3190  2055  318A   	fcall	_n2
  2253  0D0A  30FF               	movlw	255
  2254  0D0B  0140               	movlb	0	; select bank0
  2255  0D0C  07EA               	addwf	_cont2,f
  2256  0D0D  30FF               	movlw	255
  2257  0D0E  3DEB               	addwfc	_cont2+1,f
  2258  0D0F                     l3625:	
  2259                           
  2260                           ;main.c: 155: if(PORTAbits.RA1==0){n2(2,cont2);cont2--;}
  2261  0D0F  188C               	btfsc	12,1	;volatile
  2262  0D10  2D21               	goto	l3631
  2263  0D11  3002               	movlw	2
  2264  0D12  00A8               	movwf	n2@valor
  2265  0D13  3000               	movlw	0
  2266  0D14  00A9               	movwf	n2@valor+1
  2267  0D15  086B               	movf	_cont2+1,w
  2268  0D16  00AB               	movwf	n2@contador+1
  2269  0D17  086A               	movf	_cont2,w
  2270  0D18  00AA               	movwf	n2@contador
  2271  0D19  3190  2055  318A   	fcall	_n2
  2272  0D1C  30FF               	movlw	255
  2273  0D1D  0140               	movlb	0	; select bank0
  2274  0D1E  07EA               	addwf	_cont2,f
  2275  0D1F  30FF               	movlw	255
  2276  0D20  3DEB               	addwfc	_cont2+1,f
  2277  0D21                     l3631:	
  2278                           
  2279                           ;main.c: 156: if(PORTAbits.RA2==0){n2(3,cont2);cont2--;}
  2280  0D21  190C               	btfsc	12,2	;volatile
  2281  0D22  2D33               	goto	l3637
  2282  0D23  3003               	movlw	3
  2283  0D24  00A8               	movwf	n2@valor
  2284  0D25  3000               	movlw	0
  2285  0D26  00A9               	movwf	n2@valor+1
  2286  0D27  086B               	movf	_cont2+1,w
  2287  0D28  00AB               	movwf	n2@contador+1
  2288  0D29  086A               	movf	_cont2,w
  2289  0D2A  00AA               	movwf	n2@contador
  2290  0D2B  3190  2055  318A   	fcall	_n2
  2291  0D2E  30FF               	movlw	255
  2292  0D2F  0140               	movlb	0	; select bank0
  2293  0D30  07EA               	addwf	_cont2,f
  2294  0D31  30FF               	movlw	255
  2295  0D32  3DEB               	addwfc	_cont2+1,f
  2296  0D33                     l3637:	
  2297                           
  2298                           ;main.c: 157: if(PORTAbits.RA3==0){}
  2299  0D33  080C               	movf	12,w	;volatile
  2300                           
  2301                           ;main.c: 158: LATAbits.LATA4=1;
  2302  0D34  1616               	bsf	22,4	;volatile
  2303                           
  2304                           ;main.c: 159: LATAbits.LATA5=0;
  2305  0D35  1296               	bcf	22,5	;volatile
  2306                           
  2307                           ;main.c: 160: _delay((unsigned long)((1)*(32000000/4000.0)));
  2308  0D36  300B               	movlw	11
  2309  0D37  0140               	movlb	0	; select bank0
  2310  0D38  00E8               	movwf	??_main
  2311  0D39  3062               	movlw	98
  2312  0D3A                     u5397:	
  2313  0D3A  0B89               	decfsz	9,f
  2314  0D3B  2D3A               	goto	u5397
  2315  0D3C  0BE8               	decfsz	??_main,f
  2316  0D3D  2D3A               	goto	u5397
  2317  0D3E  0000               	nop
  2318                           
  2319                           ;main.c: 161: if(PORTBbits.RB5==0){n2(4,cont2);cont2--;}
  2320  0D3F  0140               	movlb	0	; select bank0
  2321  0D40  1A8D               	btfsc	13,5	;volatile
  2322  0D41  2D52               	goto	l3647
  2323  0D42  3004               	movlw	4
  2324  0D43  00A8               	movwf	n2@valor
  2325  0D44  3000               	movlw	0
  2326  0D45  00A9               	movwf	n2@valor+1
  2327  0D46  086B               	movf	_cont2+1,w
  2328  0D47  00AB               	movwf	n2@contador+1
  2329  0D48  086A               	movf	_cont2,w
  2330  0D49  00AA               	movwf	n2@contador
  2331  0D4A  3190  2055  318A   	fcall	_n2
  2332  0D4D  30FF               	movlw	255
  2333  0D4E  0140               	movlb	0	; select bank0
  2334  0D4F  07EA               	addwf	_cont2,f
  2335  0D50  30FF               	movlw	255
  2336  0D51  3DEB               	addwfc	_cont2+1,f
  2337  0D52                     l3647:	
  2338                           
  2339                           ;main.c: 162: if(PORTAbits.RA1==0){n2(5,cont2);cont2--;}
  2340  0D52  188C               	btfsc	12,1	;volatile
  2341  0D53  2D64               	goto	l3653
  2342  0D54  3005               	movlw	5
  2343  0D55  00A8               	movwf	n2@valor
  2344  0D56  3000               	movlw	0
  2345  0D57  00A9               	movwf	n2@valor+1
  2346  0D58  086B               	movf	_cont2+1,w
  2347  0D59  00AB               	movwf	n2@contador+1
  2348  0D5A  086A               	movf	_cont2,w
  2349  0D5B  00AA               	movwf	n2@contador
  2350  0D5C  3190  2055  318A   	fcall	_n2
  2351  0D5F  30FF               	movlw	255
  2352  0D60  0140               	movlb	0	; select bank0
  2353  0D61  07EA               	addwf	_cont2,f
  2354  0D62  30FF               	movlw	255
  2355  0D63  3DEB               	addwfc	_cont2+1,f
  2356  0D64                     l3653:	
  2357                           
  2358                           ;main.c: 163: if(PORTAbits.RA2==0){n2(6,cont2);cont2--;}
  2359  0D64  190C               	btfsc	12,2	;volatile
  2360  0D65  2D76               	goto	l3659
  2361  0D66  3006               	movlw	6
  2362  0D67  00A8               	movwf	n2@valor
  2363  0D68  3000               	movlw	0
  2364  0D69  00A9               	movwf	n2@valor+1
  2365  0D6A  086B               	movf	_cont2+1,w
  2366  0D6B  00AB               	movwf	n2@contador+1
  2367  0D6C  086A               	movf	_cont2,w
  2368  0D6D  00AA               	movwf	n2@contador
  2369  0D6E  3190  2055  318A   	fcall	_n2
  2370  0D71  30FF               	movlw	255
  2371  0D72  0140               	movlb	0	; select bank0
  2372  0D73  07EA               	addwf	_cont2,f
  2373  0D74  30FF               	movlw	255
  2374  0D75  3DEB               	addwfc	_cont2+1,f
  2375  0D76                     l3659:	
  2376                           
  2377                           ;main.c: 164: if(PORTAbits.RA3==0){}
  2378  0D76  080C               	movf	12,w	;volatile
  2379                           
  2380                           ;main.c: 165: LATAbits.LATA5=1;
  2381  0D77  1696               	bsf	22,5	;volatile
  2382                           
  2383                           ;main.c: 166: LATAbits.LATA6=0;
  2384  0D78  1316               	bcf	22,6	;volatile
  2385                           
  2386                           ;main.c: 167: _delay((unsigned long)((1)*(32000000/4000.0)));
  2387  0D79  300B               	movlw	11
  2388  0D7A  0140               	movlb	0	; select bank0
  2389  0D7B  00E8               	movwf	??_main
  2390  0D7C  3062               	movlw	98
  2391  0D7D                     u5407:	
  2392  0D7D  0B89               	decfsz	9,f
  2393  0D7E  2D7D               	goto	u5407
  2394  0D7F  0BE8               	decfsz	??_main,f
  2395  0D80  2D7D               	goto	u5407
  2396  0D81  0000               	nop
  2397                           
  2398                           ;main.c: 168: if(PORTBbits.RB5==0){n2(7,cont2);cont2--;}
  2399  0D82  0140               	movlb	0	; select bank0
  2400  0D83  1A8D               	btfsc	13,5	;volatile
  2401  0D84  2D95               	goto	l3669
  2402  0D85  3007               	movlw	7
  2403  0D86  00A8               	movwf	n2@valor
  2404  0D87  3000               	movlw	0
  2405  0D88  00A9               	movwf	n2@valor+1
  2406  0D89  086B               	movf	_cont2+1,w
  2407  0D8A  00AB               	movwf	n2@contador+1
  2408  0D8B  086A               	movf	_cont2,w
  2409  0D8C  00AA               	movwf	n2@contador
  2410  0D8D  3190  2055  318A   	fcall	_n2
  2411  0D90  30FF               	movlw	255
  2412  0D91  0140               	movlb	0	; select bank0
  2413  0D92  07EA               	addwf	_cont2,f
  2414  0D93  30FF               	movlw	255
  2415  0D94  3DEB               	addwfc	_cont2+1,f
  2416  0D95                     l3669:	
  2417                           
  2418                           ;main.c: 169: if(PORTAbits.RA1==0){n2(8,cont2);cont2--;}
  2419  0D95  188C               	btfsc	12,1	;volatile
  2420  0D96  2DA7               	goto	l3675
  2421  0D97  3008               	movlw	8
  2422  0D98  00A8               	movwf	n2@valor
  2423  0D99  3000               	movlw	0
  2424  0D9A  00A9               	movwf	n2@valor+1
  2425  0D9B  086B               	movf	_cont2+1,w
  2426  0D9C  00AB               	movwf	n2@contador+1
  2427  0D9D  086A               	movf	_cont2,w
  2428  0D9E  00AA               	movwf	n2@contador
  2429  0D9F  3190  2055  318A   	fcall	_n2
  2430  0DA2  30FF               	movlw	255
  2431  0DA3  0140               	movlb	0	; select bank0
  2432  0DA4  07EA               	addwf	_cont2,f
  2433  0DA5  30FF               	movlw	255
  2434  0DA6  3DEB               	addwfc	_cont2+1,f
  2435  0DA7                     l3675:	
  2436                           
  2437                           ;main.c: 170: if(PORTAbits.RA2==0){n2(9,cont2);cont2--;}
  2438  0DA7  190C               	btfsc	12,2	;volatile
  2439  0DA8  2DB9               	goto	l3681
  2440  0DA9  3009               	movlw	9
  2441  0DAA  00A8               	movwf	n2@valor
  2442  0DAB  3000               	movlw	0
  2443  0DAC  00A9               	movwf	n2@valor+1
  2444  0DAD  086B               	movf	_cont2+1,w
  2445  0DAE  00AB               	movwf	n2@contador+1
  2446  0DAF  086A               	movf	_cont2,w
  2447  0DB0  00AA               	movwf	n2@contador
  2448  0DB1  3190  2055  318A   	fcall	_n2
  2449  0DB4  30FF               	movlw	255
  2450  0DB5  0140               	movlb	0	; select bank0
  2451  0DB6  07EA               	addwf	_cont2,f
  2452  0DB7  30FF               	movlw	255
  2453  0DB8  3DEB               	addwfc	_cont2+1,f
  2454  0DB9                     l3681:	
  2455                           
  2456                           ;main.c: 171: if(PORTAbits.RA3==0){return (0);}
  2457  0DB9  1D8C               	btfss	12,3	;volatile
  2458  0DBA  2FFE               	goto	l139
  2459                           
  2460                           ;main.c: 172: LATAbits.LATA6=1;
  2461                           
  2462                           ;	Return value of _main is never used
  2463  0DBB  1716               	bsf	22,6	;volatile
  2464                           
  2465                           ;main.c: 173: LATAbits.LATA7=0;
  2466  0DBC  1396               	bcf	22,7	;volatile
  2467                           
  2468                           ;main.c: 174: _delay((unsigned long)((1)*(32000000/4000.0)));
  2469  0DBD  300B               	movlw	11
  2470  0DBE  0140               	movlb	0	; select bank0
  2471  0DBF  00E8               	movwf	??_main
  2472  0DC0  3062               	movlw	98
  2473  0DC1                     u5417:	
  2474  0DC1  0B89               	decfsz	9,f
  2475  0DC2  2DC1               	goto	u5417
  2476  0DC3  0BE8               	decfsz	??_main,f
  2477  0DC4  2DC1               	goto	u5417
  2478  0DC5  0000               	nop
  2479                           
  2480                           ;main.c: 175: if(PORTBbits.RB5==0){}
  2481  0DC6  0140               	movlb	0	; select bank0
  2482  0DC7  080D               	movf	13,w	;volatile
  2483                           
  2484                           ;main.c: 176: if(PORTAbits.RA1==0){n2(0,cont2);cont2--;}
  2485  0DC8  188C               	btfsc	12,1	;volatile
  2486  0DC9  2DD9               	goto	l3693
  2487  0DCA  3000               	movlw	0
  2488  0DCB  00A8               	movwf	n2@valor
  2489  0DCC  00A9               	movwf	n2@valor+1
  2490  0DCD  086B               	movf	_cont2+1,w
  2491  0DCE  00AB               	movwf	n2@contador+1
  2492  0DCF  086A               	movf	_cont2,w
  2493  0DD0  00AA               	movwf	n2@contador
  2494  0DD1  3190  2055  318A   	fcall	_n2
  2495  0DD4  30FF               	movlw	255
  2496  0DD5  0140               	movlb	0	; select bank0
  2497  0DD6  07EA               	addwf	_cont2,f
  2498  0DD7  30FF               	movlw	255
  2499  0DD8  3DEB               	addwfc	_cont2+1,f
  2500  0DD9                     l3693:	
  2501                           
  2502                           ;main.c: 177: if(PORTAbits.RA2==0){cont2=0; igual=1;}
  2503  0DD9  190C               	btfsc	12,2	;volatile
  2504  0DDA  2DE2               	goto	l3699
  2505  0DDB  01EA               	clrf	_cont2
  2506  0DDC  01EB               	clrf	_cont2+1
  2507  0DDD  3001               	movlw	1
  2508  0DDE  0141               	movlb	1	; select bank1
  2509  0DDF  00D1               	movwf	_igual^(0+128)
  2510  0DE0  3000               	movlw	0
  2511  0DE1  00D2               	movwf	(_igual^(0+128)+1)
  2512  0DE2                     l3699:	
  2513                           
  2514                           ;main.c: 178: if(PORTAbits.RA3==0){}
  2515  0DE2  0140               	movlb	0	; select bank0
  2516  0DE3  080C               	movf	12,w	;volatile
  2517                           
  2518                           ;main.c: 179: LATAbits.LATA7=1;
  2519  0DE4  1796               	bsf	22,7	;volatile
  2520                           
  2521                           ;main.c: 180: _delay((unsigned long)((1)*(32000000/4000.0)));
  2522  0DE5  300B               	movlw	11
  2523  0DE6  0140               	movlb	0	; select bank0
  2524  0DE7  00E8               	movwf	??_main
  2525  0DE8  3062               	movlw	98
  2526  0DE9                     u5427:	
  2527  0DE9  0B89               	decfsz	9,f
  2528  0DEA  2DE9               	goto	u5427
  2529  0DEB  0BE8               	decfsz	??_main,f
  2530  0DEC  2DE9               	goto	u5427
  2531  0DED  0000               	nop
  2532                           
  2533                           ;main.c: 181: sprintf(buffer1," Num2= %03d",numero2);
  2534  0DEE  3082               	movlw	low (STR_3| (0+32768))
  2535  0DEF  0140               	movlb	0	; select bank0
  2536  0DF0  00D9               	movwf	sprintf@f
  2537  0DF1  30A0               	movlw	high (STR_3| (0+32768))
  2538  0DF2  00DA               	movwf	sprintf@f+1
  2539  0DF3  0141               	movlb	1	; select bank1
  2540  0DF4  085A               	movf	(_numero2+1)^(0+128),w
  2541  0DF5  0140               	movlb	0	; select bank0
  2542  0DF6  00DC               	movwf	?_sprintf+3
  2543  0DF7  0141               	movlb	1	; select bank1
  2544  0DF8  0859               	movf	_numero2^(0+128),w
  2545  0DF9  0140               	movlb	0	; select bank0
  2546  0DFA  00DB               	movwf	?_sprintf+2
  2547  0DFB  30B9               	movlw	(low (main@buffer1| 0))& (0+255)
  2548  0DFC  3181  2107  318A   	fcall	_sprintf
  2549                           
  2550                           ;main.c: 182: Lcd_Out2(1,1,buffer1);
  2551  0DFF  01F3               	clrf	Lcd_Out2@x
  2552  0E00  0AF3               	incf	Lcd_Out2@x,f
  2553  0E01  30B9               	movlw	(low (main@buffer1| 0))& (0+255)
  2554  0E02  0140               	movlb	0	; select bank0
  2555  0E03  00E8               	movwf	??_main
  2556  0E04  0868               	movf	??_main,w
  2557  0E05  00F4               	movwf	Lcd_Out2@buffer
  2558  0E06  3001               	movlw	1
  2559  0E07  319F  2714  318A   	fcall	_Lcd_Out2
  2560                           
  2561                           ;main.c: 183: _delay((unsigned long)((250)*(32000000/4000.0)));
  2562  0E0A  300B               	movlw	11
  2563  0E0B  0140               	movlb	0	; select bank0
  2564  0E0C  00E9               	movwf	??_main+1
  2565  0E0D  3026               	movlw	38
  2566  0E0E  00E8               	movwf	??_main
  2567  0E0F  305D               	movlw	93
  2568  0E10                     u5437:	
  2569  0E10  0B89               	decfsz	9,f
  2570  0E11  2E10               	goto	u5437
  2571  0E12  0BE8               	decfsz	??_main,f
  2572  0E13  2E10               	goto	u5437
  2573  0E14  0BE9               	decfsz	??_main+1,f
  2574  0E15  2E10               	goto	u5437
  2575  0E16  3200               	nop2
  2576  0E17                     l164:	
  2577  0E17  0140               	movlb	0	; select bank0
  2578  0E18  086B               	movf	_cont2+1,w
  2579  0E19  3A80               	xorlw	128
  2580  0E1A  00E8               	movwf	??_main
  2581  0E1B  3080               	movlw	128
  2582  0E1C  0268               	subwf	??_main,w
  2583  0E1D  1D03               	skipz
  2584  0E1E  2E21               	goto	u5115
  2585  0E1F  3001               	movlw	1
  2586  0E20  026A               	subwf	_cont2,w
  2587  0E21                     u5115:	
  2588  0E21  1803               	skipnc
  2589  0E22  2CED               	goto	l165
  2590                           
  2591                           ;main.c: 184: }
  2592                           ;main.c: 187: LATAbits.LATA4=1;LATAbits.LATA5=1;LATAbits.LATA6=1;LATAbits.LATA7=1;
  2593  0E23  0140               	movlb	0	; select bank0
  2594  0E24  1616               	bsf	22,4	;volatile
  2595  0E25  1696               	bsf	22,5	;volatile
  2596  0E26  1716               	bsf	22,6	;volatile
  2597  0E27  1796               	bsf	22,7	;volatile
  2598                           
  2599                           ;main.c: 188: LATAbits.LATA4=0;
  2600  0E28  1216               	bcf	22,4	;volatile
  2601                           
  2602                           ;main.c: 189: _delay((unsigned long)((1)*(32000000/4000.0)));
  2603  0E29  300B               	movlw	11
  2604  0E2A  0140               	movlb	0	; select bank0
  2605  0E2B  00E8               	movwf	??_main
  2606  0E2C  3062               	movlw	98
  2607  0E2D                     u5447:	
  2608  0E2D  0B89               	decfsz	9,f
  2609  0E2E  2E2D               	goto	u5447
  2610  0E2F  0BE8               	decfsz	??_main,f
  2611  0E30  2E2D               	goto	u5447
  2612  0E31  0000               	nop
  2613                           
  2614                           ;main.c: 190: if(PORTBbits.RB5==0){}
  2615  0E32  0140               	movlb	0	; select bank0
  2616  0E33  080D               	movf	13,w	;volatile
  2617                           
  2618                           ;main.c: 191: if(PORTAbits.RA1==0){}
  2619  0E34  080C               	movf	12,w	;volatile
  2620                           
  2621                           ;main.c: 192: if(PORTAbits.RA2==0){}
  2622  0E35  080C               	movf	12,w	;volatile
  2623                           
  2624                           ;main.c: 193: if(PORTAbits.RA3==0){}
  2625  0E36  080C               	movf	12,w	;volatile
  2626                           
  2627                           ;main.c: 194: LATAbits.LATA4=1;
  2628  0E37  1616               	bsf	22,4	;volatile
  2629                           
  2630                           ;main.c: 195: LATAbits.LATA5=0;
  2631  0E38  1296               	bcf	22,5	;volatile
  2632                           
  2633                           ;main.c: 196: _delay((unsigned long)((1)*(32000000/4000.0)));
  2634  0E39  300B               	movlw	11
  2635  0E3A  0140               	movlb	0	; select bank0
  2636  0E3B  00E8               	movwf	??_main
  2637  0E3C  3062               	movlw	98
  2638  0E3D                     u5457:	
  2639  0E3D  0B89               	decfsz	9,f
  2640  0E3E  2E3D               	goto	u5457
  2641  0E3F  0BE8               	decfsz	??_main,f
  2642  0E40  2E3D               	goto	u5457
  2643  0E41  0000               	nop
  2644                           
  2645                           ;main.c: 197: if(PORTBbits.RB5==0){}
  2646  0E42  0140               	movlb	0	; select bank0
  2647  0E43  080D               	movf	13,w	;volatile
  2648                           
  2649                           ;main.c: 198: if(PORTAbits.RA1==0){}
  2650  0E44  080C               	movf	12,w	;volatile
  2651                           
  2652                           ;main.c: 199: if(PORTAbits.RA2==0){}
  2653  0E45  080C               	movf	12,w	;volatile
  2654                           
  2655                           ;main.c: 200: if(PORTAbits.RA3==0){}
  2656  0E46  080C               	movf	12,w	;volatile
  2657                           
  2658                           ;main.c: 201: LATAbits.LATA5=1;
  2659  0E47  1696               	bsf	22,5	;volatile
  2660                           
  2661                           ;main.c: 202: LATAbits.LATA6=0;
  2662  0E48  1316               	bcf	22,6	;volatile
  2663                           
  2664                           ;main.c: 203: _delay((unsigned long)((1)*(32000000/4000.0)));
  2665  0E49  300B               	movlw	11
  2666  0E4A  0140               	movlb	0	; select bank0
  2667  0E4B  00E8               	movwf	??_main
  2668  0E4C  3062               	movlw	98
  2669  0E4D                     u5467:	
  2670  0E4D  0B89               	decfsz	9,f
  2671  0E4E  2E4D               	goto	u5467
  2672  0E4F  0BE8               	decfsz	??_main,f
  2673  0E50  2E4D               	goto	u5467
  2674  0E51  0000               	nop
  2675                           
  2676                           ;main.c: 204: if(PORTBbits.RB5==0){}
  2677  0E52  0140               	movlb	0	; select bank0
  2678  0E53  080D               	movf	13,w	;volatile
  2679                           
  2680                           ;main.c: 205: if(PORTAbits.RA1==0){}
  2681  0E54  080C               	movf	12,w	;volatile
  2682                           
  2683                           ;main.c: 206: if(PORTAbits.RA2==0){}
  2684  0E55  080C               	movf	12,w	;volatile
  2685                           
  2686                           ;main.c: 207: if(PORTAbits.RA3==0){return (0);}
  2687  0E56  1D8C               	btfss	12,3	;volatile
  2688  0E57  2FFE               	goto	l139
  2689                           
  2690                           ;main.c: 208: LATAbits.LATA6=1;
  2691                           
  2692                           ;	Return value of _main is never used
  2693  0E58  1716               	bsf	22,6	;volatile
  2694                           
  2695                           ;main.c: 209: LATAbits.LATA7=0;
  2696  0E59  1396               	bcf	22,7	;volatile
  2697                           
  2698                           ;main.c: 210: _delay((unsigned long)((1)*(32000000/4000.0)));
  2699  0E5A  300B               	movlw	11
  2700  0E5B  0140               	movlb	0	; select bank0
  2701  0E5C  00E8               	movwf	??_main
  2702  0E5D  3062               	movlw	98
  2703  0E5E                     u5477:	
  2704  0E5E  0B89               	decfsz	9,f
  2705  0E5F  2E5E               	goto	u5477
  2706  0E60  0BE8               	decfsz	??_main,f
  2707  0E61  2E5E               	goto	u5477
  2708  0E62  0000               	nop
  2709                           
  2710                           ;main.c: 211: if(PORTBbits.RB5==0){}
  2711  0E63  0140               	movlb	0	; select bank0
  2712  0E64  080D               	movf	13,w	;volatile
  2713                           
  2714                           ;main.c: 212: if(PORTAbits.RA1==0){}
  2715  0E65  080C               	movf	12,w	;volatile
  2716                           
  2717                           ;main.c: 213: if(PORTAbits.RA2==0){cont2=0;igual=1;}
  2718  0E66  190C               	btfsc	12,2	;volatile
  2719  0E67  2E6F               	goto	l3729
  2720  0E68  01EA               	clrf	_cont2
  2721  0E69  01EB               	clrf	_cont2+1
  2722  0E6A  3001               	movlw	1
  2723  0E6B  0141               	movlb	1	; select bank1
  2724  0E6C  00D1               	movwf	_igual^(0+128)
  2725  0E6D  3000               	movlw	0
  2726  0E6E  00D2               	movwf	(_igual^(0+128)+1)
  2727  0E6F                     l3729:	
  2728                           
  2729                           ;main.c: 214: if(PORTAbits.RA3==0){}
  2730  0E6F  0140               	movlb	0	; select bank0
  2731  0E70  080C               	movf	12,w	;volatile
  2732                           
  2733                           ;main.c: 215: LATAbits.LATA7=1;
  2734  0E71  1796               	bsf	22,7	;volatile
  2735                           
  2736                           ;main.c: 216: sprintf(buffer1," Num2= %03d",numero2);
  2737  0E72  3082               	movlw	low (STR_3| (0+32768))
  2738  0E73  00D9               	movwf	sprintf@f
  2739  0E74  30A0               	movlw	high (STR_3| (0+32768))
  2740  0E75  00DA               	movwf	sprintf@f+1
  2741  0E76  0141               	movlb	1	; select bank1
  2742  0E77  085A               	movf	(_numero2+1)^(0+128),w
  2743  0E78  0140               	movlb	0	; select bank0
  2744  0E79  00DC               	movwf	?_sprintf+3
  2745  0E7A  0141               	movlb	1	; select bank1
  2746  0E7B  0859               	movf	_numero2^(0+128),w
  2747  0E7C  0140               	movlb	0	; select bank0
  2748  0E7D  00DB               	movwf	?_sprintf+2
  2749  0E7E  30B9               	movlw	(low (main@buffer1| 0))& (0+255)
  2750  0E7F  3181  2107  318A   	fcall	_sprintf
  2751                           
  2752                           ;main.c: 217: Lcd_Out2(1,1,buffer1);
  2753  0E82  01F3               	clrf	Lcd_Out2@x
  2754  0E83  0AF3               	incf	Lcd_Out2@x,f
  2755  0E84  30B9               	movlw	(low (main@buffer1| 0))& (0+255)
  2756  0E85  0140               	movlb	0	; select bank0
  2757  0E86  00E8               	movwf	??_main
  2758  0E87  0868               	movf	??_main,w
  2759  0E88  00F4               	movwf	Lcd_Out2@buffer
  2760  0E89  3001               	movlw	1
  2761  0E8A  319F  2714  318A   	fcall	_Lcd_Out2
  2762                           
  2763                           ;main.c: 218: _delay((unsigned long)((250)*(32000000/4000.0)));
  2764  0E8D  300B               	movlw	11
  2765  0E8E  0140               	movlb	0	; select bank0
  2766  0E8F  00E9               	movwf	??_main+1
  2767  0E90  3026               	movlw	38
  2768  0E91  00E8               	movwf	??_main
  2769  0E92  305D               	movlw	93
  2770  0E93                     u5487:	
  2771  0E93  0B89               	decfsz	9,f
  2772  0E94  2E93               	goto	u5487
  2773  0E95  0BE8               	decfsz	??_main,f
  2774  0E96  2E93               	goto	u5487
  2775  0E97  0BE9               	decfsz	??_main+1,f
  2776  0E98  2E93               	goto	u5487
  2777  0E99  3200               	nop2
  2778  0E9A                     l3735:	
  2779  0E9A  0141               	movlb	1	; select bank1
  2780  0E9B  0851               	movf	_igual^(0+128),w
  2781  0E9C  0452               	iorwf	(_igual+1)^(0+128),w
  2782  0E9D  1903               	btfsc	3,2
  2783  0E9E  2E17               	goto	l164
  2784                           
  2785                           ;main.c: 220: }
  2786                           ;main.c: 221: if(operacion==1){
  2787  0E9F  0355               	decf	_operacion^(0+128),w
  2788  0EA0  0456               	iorwf	(_operacion+1)^(0+128),w
  2789  0EA1  1D03               	btfss	3,2
  2790  0EA2  2EE6               	goto	l3767
  2791                           
  2792                           ;main.c: 223: if(aux==0){Lcd_Cmd(1); aux=1;}
  2793  0EA3  084F               	movf	_aux^(0+128),w
  2794  0EA4  0450               	iorwf	(_aux+1)^(0+128),w
  2795  0EA5  1D03               	btfss	3,2
  2796  0EA6  2EB0               	goto	l3745
  2797  0EA7  3001               	movlw	1
  2798  0EA8  3192  2230  318A   	fcall	_Lcd_Cmd
  2799  0EAB  3001               	movlw	1
  2800  0EAC  0141               	movlb	1	; select bank1
  2801  0EAD  00CF               	movwf	_aux^(0+128)
  2802  0EAE  3000               	movlw	0
  2803  0EAF  00D0               	movwf	(_aux^(0+128)+1)
  2804  0EB0                     l3745:	
  2805                           
  2806                           ;main.c: 225: o=numero1+numero2;
  2807  0EB0  0859               	movf	_numero2^(0+128),w
  2808  0EB1  0140               	movlb	0	; select bank0
  2809  0EB2  076E               	addwf	_numero1,w
  2810  0EB3  0141               	movlb	1	; select bank1
  2811  0EB4  00D3               	movwf	_o^(0+128)
  2812  0EB5  085A               	movf	(_numero2+1)^(0+128),w
  2813  0EB6  0140               	movlb	0	; select bank0
  2814  0EB7  3D6F               	addwfc	_numero1+1,w
  2815  0EB8  0141               	movlb	1	; select bank1
  2816  0EB9  00D4               	movwf	(_o+1)^(0+128)
  2817                           
  2818                           ;main.c: 226: sprintf(buffer1," Res= %03d",o);
  2819  0EBA  308E               	movlw	low (STR_5| (0+32768))
  2820  0EBB  0140               	movlb	0	; select bank0
  2821  0EBC  00D9               	movwf	sprintf@f
  2822  0EBD  30A0               	movlw	high (STR_5| (0+32768))
  2823  0EBE  00DA               	movwf	sprintf@f+1
  2824  0EBF  0141               	movlb	1	; select bank1
  2825  0EC0  0854               	movf	(_o+1)^(0+128),w
  2826  0EC1  0140               	movlb	0	; select bank0
  2827  0EC2  00DC               	movwf	?_sprintf+3
  2828  0EC3  0141               	movlb	1	; select bank1
  2829  0EC4  0853               	movf	_o^(0+128),w
  2830  0EC5  0140               	movlb	0	; select bank0
  2831  0EC6  00DB               	movwf	?_sprintf+2
  2832  0EC7  30B9               	movlw	(low (main@buffer1| 0))& (0+255)
  2833  0EC8  3181  2107  318A   	fcall	_sprintf
  2834                           
  2835                           ;main.c: 227: Lcd_Out2(1,1,buffer1);
  2836  0ECB  01F3               	clrf	Lcd_Out2@x
  2837  0ECC  0AF3               	incf	Lcd_Out2@x,f
  2838  0ECD  30B9               	movlw	(low (main@buffer1| 0))& (0+255)
  2839  0ECE  0140               	movlb	0	; select bank0
  2840  0ECF  00E8               	movwf	??_main
  2841  0ED0  0868               	movf	??_main,w
  2842  0ED1  00F4               	movwf	Lcd_Out2@buffer
  2843  0ED2  3001               	movlw	1
  2844  0ED3  319F  2714  318A   	fcall	_Lcd_Out2
  2845                           
  2846                           ;main.c: 230: LATAbits.LATA4=1;LATAbits.LATA5=1;LATAbits.LATA6=1;LATAbits.LATA7=1;
  2847  0ED6  0140               	movlb	0	; select bank0
  2848  0ED7  1616               	bsf	22,4	;volatile
  2849  0ED8  1696               	bsf	22,5	;volatile
  2850  0ED9  1716               	bsf	22,6	;volatile
  2851  0EDA  1796               	bsf	22,7	;volatile
  2852                           
  2853                           ;main.c: 232: LATAbits.LATA6=0;
  2854  0EDB  1316               	bcf	22,6	;volatile
  2855                           
  2856                           ;main.c: 233: _delay((unsigned long)((1)*(32000000/4000.0)));
  2857  0EDC  300B               	movlw	11
  2858  0EDD  0140               	movlb	0	; select bank0
  2859  0EDE  00E8               	movwf	??_main
  2860  0EDF  3062               	movlw	98
  2861  0EE0                     u5497:	
  2862  0EE0  0B89               	decfsz	9,f
  2863  0EE1  2EE0               	goto	u5497
  2864  0EE2  0BE8               	decfsz	??_main,f
  2865  0EE3  2EE0               	goto	u5497
  2866  0EE4  0000               	nop
  2867  0EE5  2FF9               	goto	L1
  2868  0EE6                     l3767:	
  2869                           ;main.c: 239: }else if(operacion==2){
  2870                           
  2871                           ;main.c: 235: LATAbits.LATA6=1;
  2872                           
  2873                           ;	Return value of _main is never used
  2874                           
  2875                           ;main.c: 234: if(PORTAbits.RA3==0){return (0);}
  2876                           
  2877  0EE6  3002               	movlw	2
  2878  0EE7  0141               	movlb	1	; select bank1
  2879  0EE8  0655               	xorwf	_operacion^(0+128),w
  2880  0EE9  0456               	iorwf	(_operacion+1)^(0+128),w
  2881  0EEA  1D03               	btfss	3,2
  2882  0EEB  2F38               	goto	l3797
  2883                           
  2884                           ;main.c: 241: if(aux==0){Lcd_Cmd(1); aux=1;}
  2885  0EEC  084F               	movf	_aux^(0+128),w
  2886  0EED  0450               	iorwf	(_aux+1)^(0+128),w
  2887  0EEE  1D03               	btfss	3,2
  2888  0EEF  2EF9               	goto	l3775
  2889  0EF0  3001               	movlw	1
  2890  0EF1  3192  2230  318A   	fcall	_Lcd_Cmd
  2891  0EF4  3001               	movlw	1
  2892  0EF5  0141               	movlb	1	; select bank1
  2893  0EF6  00CF               	movwf	_aux^(0+128)
  2894  0EF7  3000               	movlw	0
  2895  0EF8  00D0               	movwf	(_aux^(0+128)+1)
  2896  0EF9                     l3775:	
  2897                           
  2898                           ;main.c: 243: o=numero1-numero2;
  2899  0EF9  0959               	comf	_numero2^(0+128),w
  2900  0EFA  0140               	movlb	0	; select bank0
  2901  0EFB  00E8               	movwf	??_main
  2902  0EFC  0141               	movlb	1	; select bank1
  2903  0EFD  095A               	comf	(_numero2+1)^(0+128),w
  2904  0EFE  0140               	movlb	0	; select bank0
  2905  0EFF  00E9               	movwf	??_main+1
  2906  0F00  0AE8               	incf	??_main,f
  2907  0F01  1903               	skipnz
  2908  0F02  0AE9               	incf	??_main+1,f
  2909  0F03  086E               	movf	_numero1,w
  2910  0F04  0768               	addwf	??_main,w
  2911  0F05  0141               	movlb	1	; select bank1
  2912  0F06  00D3               	movwf	_o^(0+128)
  2913  0F07  0140               	movlb	0	; select bank0
  2914  0F08  086F               	movf	_numero1+1,w
  2915  0F09  3D69               	addwfc	??_main+1,w
  2916  0F0A  0141               	movlb	1	; select bank1
  2917  0F0B  00D4               	movwf	(_o+1)^(0+128)
  2918                           
  2919                           ;main.c: 244: sprintf(buffer1," Res= %03d",o);
  2920  0F0C  308E               	movlw	low (STR_5| (0+32768))
  2921  0F0D  0140               	movlb	0	; select bank0
  2922  0F0E  00D9               	movwf	sprintf@f
  2923  0F0F  30A0               	movlw	high (STR_5| (0+32768))
  2924  0F10  00DA               	movwf	sprintf@f+1
  2925  0F11  0141               	movlb	1	; select bank1
  2926  0F12  0854               	movf	(_o+1)^(0+128),w
  2927  0F13  0140               	movlb	0	; select bank0
  2928  0F14  00DC               	movwf	?_sprintf+3
  2929  0F15  0141               	movlb	1	; select bank1
  2930  0F16  0853               	movf	_o^(0+128),w
  2931  0F17  0140               	movlb	0	; select bank0
  2932  0F18  00DB               	movwf	?_sprintf+2
  2933  0F19  30B9               	movlw	(low (main@buffer1| 0))& (0+255)
  2934  0F1A  3181  2107  318A   	fcall	_sprintf
  2935                           
  2936                           ;main.c: 245: Lcd_Out2(1,1,buffer1);
  2937  0F1D  01F3               	clrf	Lcd_Out2@x
  2938  0F1E  0AF3               	incf	Lcd_Out2@x,f
  2939  0F1F  30B9               	movlw	(low (main@buffer1| 0))& (0+255)
  2940  0F20  0140               	movlb	0	; select bank0
  2941  0F21  00E8               	movwf	??_main
  2942  0F22  0868               	movf	??_main,w
  2943  0F23  00F4               	movwf	Lcd_Out2@buffer
  2944  0F24  3001               	movlw	1
  2945  0F25  319F  2714  318A   	fcall	_Lcd_Out2
  2946                           
  2947                           ;main.c: 248: LATAbits.LATA4=1;LATAbits.LATA5=1;LATAbits.LATA6=1;LATAbits.LATA7=1;
  2948  0F28  0140               	movlb	0	; select bank0
  2949  0F29  1616               	bsf	22,4	;volatile
  2950  0F2A  1696               	bsf	22,5	;volatile
  2951  0F2B  1716               	bsf	22,6	;volatile
  2952  0F2C  1796               	bsf	22,7	;volatile
  2953                           
  2954                           ;main.c: 249: LATAbits.LATA6=0;
  2955  0F2D  1316               	bcf	22,6	;volatile
  2956                           
  2957                           ;main.c: 250: _delay((unsigned long)((1)*(32000000/4000.0)));
  2958  0F2E  300B               	movlw	11
  2959  0F2F  0140               	movlb	0	; select bank0
  2960  0F30  00E8               	movwf	??_main
  2961  0F31  3062               	movlw	98
  2962  0F32                     u5507:	
  2963  0F32  0B89               	decfsz	9,f
  2964  0F33  2F32               	goto	u5507
  2965  0F34  0BE8               	decfsz	??_main,f
  2966  0F35  2F32               	goto	u5507
  2967  0F36  0000               	nop
  2968  0F37  2FF9               	goto	L1
  2969  0F38                     l3797:	
  2970                           ;main.c: 255: }else if(operacion==3){
  2971                           
  2972                           ;main.c: 252: LATAbits.LATA6=1;
  2973                           
  2974                           ;	Return value of _main is never used
  2975                           
  2976                           ;main.c: 251: if(PORTAbits.RA3==0){return (0);}
  2977                           
  2978  0F38  3003               	movlw	3
  2979  0F39  0141               	movlb	1	; select bank1
  2980  0F3A  0655               	xorwf	_operacion^(0+128),w
  2981  0F3B  0456               	iorwf	(_operacion+1)^(0+128),w
  2982  0F3C  1D03               	btfss	3,2
  2983  0F3D  2FA3               	goto	l3829
  2984                           
  2985                           ;main.c: 256: if(aux==0){Lcd_Cmd(1); aux=1;}
  2986  0F3E  084F               	movf	_aux^(0+128),w
  2987  0F3F  0450               	iorwf	(_aux+1)^(0+128),w
  2988  0F40  1D03               	btfss	3,2
  2989  0F41  2F4B               	goto	l3805
  2990  0F42  3001               	movlw	1
  2991  0F43  3192  2230  318A   	fcall	_Lcd_Cmd
  2992  0F46  3001               	movlw	1
  2993  0F47  0141               	movlb	1	; select bank1
  2994  0F48  00CF               	movwf	_aux^(0+128)
  2995  0F49  3000               	movlw	0
  2996  0F4A  00D0               	movwf	(_aux^(0+128)+1)
  2997  0F4B                     l3805:	
  2998                           
  2999                           ;main.c: 258: d=(float)numero1;
  3000  0F4B  0140               	movlb	0	; select bank0
  3001  0F4C  086F               	movf	_numero1+1,w
  3002  0F4D  00F9               	movwf	___awtoft@c+1
  3003  0F4E  086E               	movf	_numero1,w
  3004  0F4F  00F8               	movwf	___awtoft@c
  3005  0F50  319E  26CC  318A   	fcall	___awtoft
  3006  0F53  0878               	movf	?___awtoft,w
  3007  0F54  0141               	movlb	1	; select bank1
  3008  0F55  00CC               	movwf	_d^(0+128)
  3009  0F56  0879               	movf	?___awtoft+1,w
  3010  0F57  00CD               	movwf	(_d+1)^(0+128)
  3011  0F58  087A               	movf	?___awtoft+2,w
  3012  0F59  00CE               	movwf	(_d+2)^(0+128)
  3013                           
  3014                           ;main.c: 259: d2=(float)numero2;
  3015  0F5A  085A               	movf	(_numero2+1)^(0+128),w
  3016  0F5B  00F9               	movwf	___awtoft@c+1
  3017  0F5C  0859               	movf	_numero2^(0+128),w
  3018  0F5D  00F8               	movwf	___awtoft@c
  3019  0F5E  319E  26CC  318A   	fcall	___awtoft
  3020  0F61  0878               	movf	?___awtoft,w
  3021  0F62  0141               	movlb	1	; select bank1
  3022  0F63  00C9               	movwf	_d2^(0+128)
  3023  0F64  0879               	movf	?___awtoft+1,w
  3024  0F65  00CA               	movwf	(_d2+1)^(0+128)
  3025  0F66  087A               	movf	?___awtoft+2,w
  3026  0F67  00CB               	movwf	(_d2+2)^(0+128)
  3027                           
  3028                           ;main.c: 260: sprintf(buffer1," Res= %06f",(d/d2));
  3029  0F68  30A4               	movlw	low (STR_7| (0+32768))
  3030  0F69  0140               	movlb	0	; select bank0
  3031  0F6A  00D9               	movwf	sprintf@f
  3032  0F6B  30A0               	movlw	high (STR_7| (0+32768))
  3033  0F6C  00DA               	movwf	sprintf@f+1
  3034  0F6D  0141               	movlb	1	; select bank1
  3035  0F6E  0849               	movf	_d2^(0+128),w
  3036  0F6F  00F8               	movwf	___ftdiv@f2
  3037  0F70  084A               	movf	(_d2+1)^(0+128),w
  3038  0F71  00F9               	movwf	___ftdiv@f2+1
  3039  0F72  084B               	movf	(_d2+2)^(0+128),w
  3040  0F73  00FA               	movwf	___ftdiv@f2+2
  3041  0F74  084C               	movf	_d^(0+128),w
  3042  0F75  00FB               	movwf	___ftdiv@f1
  3043  0F76  084D               	movf	(_d+1)^(0+128),w
  3044  0F77  00FC               	movwf	___ftdiv@f1+1
  3045  0F78  084E               	movf	(_d+2)^(0+128),w
  3046  0F79  00FD               	movwf	___ftdiv@f1+2
  3047  0F7A  3192  22C3  318A   	fcall	___ftdiv
  3048  0F7D  0878               	movf	?___ftdiv,w
  3049  0F7E  0140               	movlb	0	; select bank0
  3050  0F7F  00DB               	movwf	?_sprintf+2
  3051  0F80  0879               	movf	?___ftdiv+1,w
  3052  0F81  00DC               	movwf	?_sprintf+3
  3053  0F82  087A               	movf	?___ftdiv+2,w
  3054  0F83  00DD               	movwf	?_sprintf+4
  3055  0F84  30B9               	movlw	(low (main@buffer1| 0))& (0+255)
  3056  0F85  3181  2107  318A   	fcall	_sprintf
  3057                           
  3058                           ;main.c: 261: Lcd_Out2(1,1,buffer1);
  3059  0F88  01F3               	clrf	Lcd_Out2@x
  3060  0F89  0AF3               	incf	Lcd_Out2@x,f
  3061  0F8A  30B9               	movlw	(low (main@buffer1| 0))& (0+255)
  3062  0F8B  0140               	movlb	0	; select bank0
  3063  0F8C  00E8               	movwf	??_main
  3064  0F8D  0868               	movf	??_main,w
  3065  0F8E  00F4               	movwf	Lcd_Out2@buffer
  3066  0F8F  3001               	movlw	1
  3067  0F90  319F  2714  318A   	fcall	_Lcd_Out2
  3068                           
  3069                           ;main.c: 264: LATAbits.LATA4=1;LATAbits.LATA5=1;LATAbits.LATA6=1;LATAbits.LATA7=1;
  3070  0F93  0140               	movlb	0	; select bank0
  3071  0F94  1616               	bsf	22,4	;volatile
  3072  0F95  1696               	bsf	22,5	;volatile
  3073  0F96  1716               	bsf	22,6	;volatile
  3074  0F97  1796               	bsf	22,7	;volatile
  3075                           
  3076                           ;main.c: 265: LATAbits.LATA6=0;
  3077  0F98  1316               	bcf	22,6	;volatile
  3078                           
  3079                           ;main.c: 266: _delay((unsigned long)((1)*(32000000/4000.0)));
  3080  0F99  300B               	movlw	11
  3081  0F9A  0140               	movlb	0	; select bank0
  3082  0F9B  00E8               	movwf	??_main
  3083  0F9C  3062               	movlw	98
  3084  0F9D                     u5517:	
  3085  0F9D  0B89               	decfsz	9,f
  3086  0F9E  2F9D               	goto	u5517
  3087  0F9F  0BE8               	decfsz	??_main,f
  3088  0FA0  2F9D               	goto	u5517
  3089  0FA1  0000               	nop
  3090  0FA2  2FF9               	goto	L1
  3091  0FA3                     l3829:	
  3092                           ;main.c: 269: }else if(operacion==4){
  3093                           
  3094                           ;main.c: 268: LATAbits.LATA6=1;
  3095                           
  3096                           ;	Return value of _main is never used
  3097                           
  3098                           ;main.c: 267: if(PORTAbits.RA3==0){return (0);}
  3099                           
  3100  0FA3  3004               	movlw	4
  3101  0FA4  0141               	movlb	1	; select bank1
  3102  0FA5  0655               	xorwf	_operacion^(0+128),w
  3103  0FA6  0456               	iorwf	(_operacion+1)^(0+128),w
  3104  0FA7  1D03               	btfss	3,2
  3105  0FA8  2CE7               	goto	l3615
  3106                           
  3107                           ;main.c: 270: if(aux==0){Lcd_Cmd(1); aux=1;}
  3108  0FA9  084F               	movf	_aux^(0+128),w
  3109  0FAA  0450               	iorwf	(_aux+1)^(0+128),w
  3110  0FAB  1D03               	btfss	3,2
  3111  0FAC  2FB6               	goto	l3837
  3112  0FAD  3001               	movlw	1
  3113  0FAE  3192  2230  318A   	fcall	_Lcd_Cmd
  3114  0FB1  3001               	movlw	1
  3115  0FB2  0141               	movlb	1	; select bank1
  3116  0FB3  00CF               	movwf	_aux^(0+128)
  3117  0FB4  3000               	movlw	0
  3118  0FB5  00D0               	movwf	(_aux^(0+128)+1)
  3119  0FB6                     l3837:	
  3120                           
  3121                           ;main.c: 272: o=numero1*numero2;
  3122  0FB6  0140               	movlb	0	; select bank0
  3123  0FB7  086F               	movf	_numero1+1,w
  3124  0FB8  00A5               	movwf	___wmul@multiplier+1
  3125  0FB9  086E               	movf	_numero1,w
  3126  0FBA  00A4               	movwf	___wmul@multiplier
  3127  0FBB  0141               	movlb	1	; select bank1
  3128  0FBC  085A               	movf	(_numero2+1)^(0+128),w
  3129  0FBD  0140               	movlb	0	; select bank0
  3130  0FBE  00A7               	movwf	___wmul@multiplicand+1
  3131  0FBF  0141               	movlb	1	; select bank1
  3132  0FC0  0859               	movf	_numero2^(0+128),w
  3133  0FC1  0140               	movlb	0	; select bank0
  3134  0FC2  00A6               	movwf	___wmul@multiplicand
  3135  0FC3  319E  2692  318A   	fcall	___wmul
  3136  0FC6  0140               	movlb	0	; select bank0
  3137  0FC7  0825               	movf	?___wmul+1,w
  3138  0FC8  0141               	movlb	1	; select bank1
  3139  0FC9  00D4               	movwf	(_o+1)^(0+128)
  3140  0FCA  0140               	movlb	0	; select bank0
  3141  0FCB  0824               	movf	?___wmul,w
  3142  0FCC  0141               	movlb	1	; select bank1
  3143  0FCD  00D3               	movwf	_o^(0+128)
  3144                           
  3145                           ;main.c: 273: sprintf(buffer1," Res= %06d",o);
  3146  0FCE  3099               	movlw	low (STR_8| (0+32768))
  3147  0FCF  0140               	movlb	0	; select bank0
  3148  0FD0  00D9               	movwf	sprintf@f
  3149  0FD1  30A0               	movlw	high (STR_8| (0+32768))
  3150  0FD2  00DA               	movwf	sprintf@f+1
  3151  0FD3  0141               	movlb	1	; select bank1
  3152  0FD4  0854               	movf	(_o+1)^(0+128),w
  3153  0FD5  0140               	movlb	0	; select bank0
  3154  0FD6  00DC               	movwf	?_sprintf+3
  3155  0FD7  0141               	movlb	1	; select bank1
  3156  0FD8  0853               	movf	_o^(0+128),w
  3157  0FD9  0140               	movlb	0	; select bank0
  3158  0FDA  00DB               	movwf	?_sprintf+2
  3159  0FDB  30B9               	movlw	(low (main@buffer1| 0))& (0+255)
  3160  0FDC  3181  2107  318A   	fcall	_sprintf
  3161                           
  3162                           ;main.c: 274: Lcd_Out2(1,1,buffer1);
  3163  0FDF  01F3               	clrf	Lcd_Out2@x
  3164  0FE0  0AF3               	incf	Lcd_Out2@x,f
  3165  0FE1  30B9               	movlw	(low (main@buffer1| 0))& (0+255)
  3166  0FE2  0140               	movlb	0	; select bank0
  3167  0FE3  00E8               	movwf	??_main
  3168  0FE4  0868               	movf	??_main,w
  3169  0FE5  00F4               	movwf	Lcd_Out2@buffer
  3170  0FE6  3001               	movlw	1
  3171  0FE7  319F  2714  318A   	fcall	_Lcd_Out2
  3172                           
  3173                           ;main.c: 277: LATAbits.LATA4=1;LATAbits.LATA5=1;LATAbits.LATA6=1;LATAbits.LATA7=1;
  3174  0FEA  0140               	movlb	0	; select bank0
  3175  0FEB  1616               	bsf	22,4	;volatile
  3176  0FEC  1696               	bsf	22,5	;volatile
  3177  0FED  1716               	bsf	22,6	;volatile
  3178  0FEE  1796               	bsf	22,7	;volatile
  3179                           
  3180                           ;main.c: 278: LATAbits.LATA6=0;
  3181  0FEF  1316               	bcf	22,6	;volatile
  3182                           
  3183                           ;main.c: 279: _delay((unsigned long)((1)*(32000000/4000.0)));
  3184  0FF0  300B               	movlw	11
  3185  0FF1  0140               	movlb	0	; select bank0
  3186  0FF2  00E8               	movwf	??_main
  3187  0FF3  3062               	movlw	98
  3188  0FF4                     u5527:	
  3189  0FF4  0B89               	decfsz	9,f
  3190  0FF5  2FF4               	goto	u5527
  3191  0FF6  0BE8               	decfsz	??_main,f
  3192  0FF7  2FF4               	goto	u5527
  3193  0FF8  0000               	nop
  3194  0FF9                     L1:	
  3195                           
  3196                           ;main.c: 280: if(PORTAbits.RA3==0){return (0);}
  3197  0FF9  0140               	movlb	0	; select bank0
  3198  0FFA  1D8C               	btfss	12,3	;volatile
  3199  0FFB  2FFE               	goto	l139
  3200                           
  3201                           ;main.c: 281: LATAbits.LATA6=1;
  3202                           
  3203                           ;	Return value of _main is never used
  3204  0FFC  1716               	bsf	22,6	;volatile
  3205  0FFD  2CE7               	goto	l3615
  3206  0FFE                     l139:	
  3207                           ;main.c: 282: }
  3208                           ;main.c: 285: }
  3209                           ;main.c: 288: return (0);
  3210                           ;	Return value of _main is never used
  3211                           
  3212  0FFE  3180  2802         	ljmp	start
  3213  1000                     __end_of_main:	
  3214                           
  3215                           	psect	text1
  3216  0107                     __ptext1:	
  3217 ;; *************** function _sprintf *****************
  3218 ;; Defined at:
  3219 ;;		line 492 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\doprnt.c"
  3220 ;; Parameters:    Size  Location     Type
  3221 ;;  sp              1    wreg     PTR unsigned char 
  3222 ;;		 -> main@buffer1(16), 
  3223 ;;  f               2   57[BANK0 ] PTR const unsigned char 
  3224 ;;		 -> STR_8(11), STR_7(11), STR_6(11), STR_5(11), 
  3225 ;;		 -> STR_4(12), STR_3(12), STR_2(12), STR_1(12), 
  3226 ;; Auto vars:     Size  Location     Type
  3227 ;;  sp              1   23[BANK1 ] PTR unsigned char 
  3228 ;;		 -> main@buffer1(16), 
  3229 ;;  tmpval          4   12[BANK1 ] struct .
  3230 ;;  val             4    8[BANK1 ] unsigned long 
  3231 ;;  fval            3   20[BANK1 ] unsigned long 
  3232 ;;  exp             2   18[BANK1 ] int 
  3233 ;;  width           2   16[BANK1 ] int 
  3234 ;;  flag            2    6[BANK1 ] unsigned short 
  3235 ;;  prec            2    4[BANK1 ] int 
  3236 ;;  cp              2    0        PTR const unsigned char 
  3237 ;;  len             2    0        unsigned int 
  3238 ;;  c               1   24[BANK1 ] char 
  3239 ;;  ap              1    3[BANK1 ] PTR void [1]
  3240 ;;		 -> ?_sprintf(2), 
  3241 ;;  d               1    0        unsigned char 
  3242 ;; Return value:  Size  Location     Type
  3243 ;;                  2   57[BANK0 ] int 
  3244 ;; Registers used:
  3245 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3246 ;; Tracked objects:
  3247 ;;		On entry : 0/0
  3248 ;;		On exit  : 0/0
  3249 ;;		Unchanged: 0/0
  3250 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
  3251 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  3252 ;;      Locals:         0       0      25       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  3253 ;;      Temps:          0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  3254 ;;      Totals:         0      11      25       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  3255 ;;Total ram usage:       36 bytes
  3256 ;; Hardware stack levels used:    1
  3257 ;; Hardware stack levels required when called:    3
  3258 ;; This function calls:
  3259 ;;		___awdiv
  3260 ;;		___ftadd
  3261 ;;		___ftge
  3262 ;;		___ftmul
  3263 ;;		___ftneg
  3264 ;;		___ftsub
  3265 ;;		___fttol
  3266 ;;		___lldiv
  3267 ;;		___llmod
  3268 ;;		___lltoft
  3269 ;;		___wmul
  3270 ;;		__div_to_l_
  3271 ;;		__tdiv_to_l_
  3272 ;;		_fround
  3273 ;;		_isdigit
  3274 ;;		_scale
  3275 ;; This function is called by:
  3276 ;;		_main
  3277 ;; This function uses a non-reentrant model
  3278 ;;
  3279                           
  3280                           
  3281                           ;psect for function _sprintf
  3282  0107                     _sprintf:	
  3283                           
  3284                           ;incstack = 0
  3285                           ; Regs used in _sprintf: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  3286                           ;sprintf@sp stored from wreg
  3287  0107  0141               	movlb	1	; select bank1
  3288  0108  00B7               	movwf	sprintf@sp^(0+128)
  3289                           
  3290                           ;doprnt.c: 494: va_list ap;
  3291                           ;doprnt.c: 499: signed char c;
  3292                           ;doprnt.c: 501: int width;
  3293                           ;doprnt.c: 504: int prec;
  3294                           ;doprnt.c: 508: unsigned short flag;
  3295                           ;doprnt.c: 515: char d;
  3296                           ;doprnt.c: 516: double fval;
  3297                           ;doprnt.c: 517: int exp;
  3298                           ;doprnt.c: 523: union {
  3299                           ;doprnt.c: 524: unsigned long vd;
  3300                           ;doprnt.c: 525: double integ;
  3301                           ;doprnt.c: 526: } tmpval;
  3302                           ;doprnt.c: 528: unsigned long val;
  3303                           ;doprnt.c: 529: unsigned len;
  3304                           ;doprnt.c: 530: const char * cp;
  3305                           ;doprnt.c: 533: *ap = __va_start();
  3306  0109  305B               	movlw	(low ((?_sprintf| 0+2)))& (0+255)
  3307  010A  0140               	movlb	0	; select bank0
  3308  010B  00DE               	movwf	??_sprintf
  3309  010C  085E               	movf	??_sprintf,w
  3310  010D  0141               	movlb	1	; select bank1
  3311  010E  00A3               	movwf	sprintf@ap^(0+128)
  3312  010F                     l3335:	
  3313                           ;doprnt.c: 536: while(c = *f++) {
  3314                           
  3315  010F  0140               	movlb	0	; select bank0
  3316  0110  085A               	movf	sprintf@f+1,w
  3317  0111  00DF               	movwf	??_sprintf+1
  3318  0112  0859               	movf	sprintf@f,w
  3319  0113  00DE               	movwf	??_sprintf
  3320  0114  0AD9               	incf	sprintf@f,f
  3321  0115  1903               	skipnz
  3322  0116  0ADA               	incf	sprintf@f+1,f
  3323  0117  085E               	movf	??_sprintf,w
  3324  0118  0084               	movwf	4
  3325  0119  085F               	movf	??_sprintf+1,w
  3326  011A  0085               	movwf	5
  3327  011B  0800               	movf	0,w	;code access
  3328  011C  00E0               	movwf	??_sprintf+2
  3329  011D  0860               	movf	??_sprintf+2,w
  3330  011E  0141               	movlb	1	; select bank1
  3331  011F  00B8               	movwf	sprintf@c^(0+128)
  3332  0120  0838               	movf	sprintf@c^(0+128),w
  3333  0121  1903               	btfsc	3,2
  3334  0122  2FDE               	goto	l3337
  3335                           
  3336                           ;doprnt.c: 538: if(c != '%')
  3337  0123  3025               	movlw	37
  3338  0124  0638               	xorwf	sprintf@c^(0+128),w
  3339  0125  1903               	btfsc	3,2
  3340  0126  2937               	goto	l3065
  3341                           
  3342                           ;doprnt.c: 540: {
  3343                           ;doprnt.c: 541: ((*sp++ = (c)));
  3344  0127  0838               	movf	sprintf@c^(0+128),w
  3345  0128  0140               	movlb	0	; select bank0
  3346  0129  00DE               	movwf	??_sprintf
  3347  012A  0141               	movlb	1	; select bank1
  3348  012B  0837               	movf	sprintf@sp^(0+128),w
  3349  012C  0086               	movwf	6
  3350  012D  0187               	clrf	7
  3351  012E  0140               	movlb	0	; select bank0
  3352  012F  085E               	movf	??_sprintf,w
  3353  0130  0081               	movwf	1
  3354  0131  3001               	movlw	1
  3355  0132  00DE               	movwf	??_sprintf
  3356  0133  085E               	movf	??_sprintf,w
  3357  0134  0141               	movlb	1	; select bank1
  3358  0135  07B7               	addwf	sprintf@sp^(0+128),f
  3359                           
  3360                           ;doprnt.c: 542: continue;
  3361  0136  290F               	goto	l3335
  3362  0137                     l3065:	
  3363                           
  3364                           ;doprnt.c: 543: }
  3365                           ;doprnt.c: 546: width = 0;
  3366  0137  01B0               	clrf	sprintf@width^(0+128)
  3367  0138  01B1               	clrf	(sprintf@width+1)^(0+128)
  3368                           
  3369                           ;doprnt.c: 548: flag = 0;
  3370  0139  01A6               	clrf	sprintf@flag^(0+128)
  3371  013A  01A7               	clrf	(sprintf@flag+1)^(0+128)
  3372                           
  3373                           ;doprnt.c: 551: switch(*f) {
  3374                           
  3375                           ;doprnt.c: 550: for(;;) {
  3376  013B  2943               	goto	l3071
  3377  013C                     l256:	
  3378                           ;doprnt.c: 579: case '0':
  3379                           
  3380                           
  3381                           ;doprnt.c: 580: flag |= 0x04;
  3382  013C  0141               	movlb	1	; select bank1
  3383  013D  1526               	bsf	sprintf@flag^(0+128),2
  3384                           
  3385                           ;doprnt.c: 581: f++;
  3386  013E  3001               	movlw	1
  3387  013F  0140               	movlb	0	; select bank0
  3388  0140  07D9               	addwf	sprintf@f,f
  3389  0141  3000               	movlw	0
  3390  0142  3DDA               	addwfc	sprintf@f+1,f
  3391  0143                     l3071:	
  3392                           ;doprnt.c: 584: }
  3393                           
  3394                           ;doprnt.c: 582: continue;
  3395                           
  3396  0143  0140               	movlb	0	; select bank0
  3397  0144  0859               	movf	sprintf@f,w
  3398  0145  0084               	movwf	4
  3399  0146  085A               	movf	sprintf@f+1,w
  3400  0147  0085               	movwf	5
  3401  0148  0800               	movf	0,w	;code access
  3402                           
  3403                           ; Switch size 1, requested type "space"
  3404                           ; Number of cases is 1, Range of values is 48 to 48
  3405                           ; switch strategies available:
  3406                           ; Name         Instructions Cycles
  3407                           ; simple_byte            4     3 (average)
  3408                           ; direct_byte           11     9 (fixed)
  3409                           ; jumptable            263     9 (fixed)
  3410                           ;	Chosen strategy is simple_byte
  3411  0149  3A30               	xorlw	48	; case 48
  3412  014A  1903               	skipnz
  3413  014B  293C               	goto	l256
  3414  014C  294D               	goto	l3073
  3415  014D                     l3073:	
  3416                           ;doprnt.c: 586: }
  3417                           
  3418                           ;doprnt.c: 585: break;
  3419                           
  3420                           
  3421                           ;doprnt.c: 597: if(isdigit((unsigned)*f)) {
  3422  014D  0859               	movf	sprintf@f,w
  3423  014E  0084               	movwf	4
  3424  014F  085A               	movf	sprintf@f+1,w
  3425  0150  0085               	movwf	5
  3426  0151  0800               	movf	0,w	;code access
  3427  0152  3190  2002  3181   	fcall	_isdigit
  3428  0155  1C03               	btfss	3,0
  3429  0156  2997               	goto	l3087
  3430                           
  3431                           ;doprnt.c: 598: width = 0;
  3432  0157  0141               	movlb	1	; select bank1
  3433  0158  01B0               	clrf	sprintf@width^(0+128)
  3434  0159  01B1               	clrf	(sprintf@width+1)^(0+128)
  3435  015A                     l3077:	
  3436                           ;doprnt.c: 599: do {
  3437                           
  3438                           
  3439                           ;doprnt.c: 600: width *= 10;
  3440  015A  300A               	movlw	10
  3441  015B  0140               	movlb	0	; select bank0
  3442  015C  00A4               	movwf	___wmul@multiplier
  3443  015D  3000               	movlw	0
  3444  015E  00A5               	movwf	___wmul@multiplier+1
  3445  015F  0141               	movlb	1	; select bank1
  3446  0160  0831               	movf	(sprintf@width+1)^(0+128),w
  3447  0161  0140               	movlb	0	; select bank0
  3448  0162  00A7               	movwf	___wmul@multiplicand+1
  3449  0163  0141               	movlb	1	; select bank1
  3450  0164  0830               	movf	sprintf@width^(0+128),w
  3451  0165  0140               	movlb	0	; select bank0
  3452  0166  00A6               	movwf	___wmul@multiplicand
  3453  0167  319E  2692  3181   	fcall	___wmul
  3454  016A  0140               	movlb	0	; select bank0
  3455  016B  0825               	movf	?___wmul+1,w
  3456  016C  0141               	movlb	1	; select bank1
  3457  016D  00B1               	movwf	(sprintf@width+1)^(0+128)
  3458  016E  0140               	movlb	0	; select bank0
  3459  016F  0824               	movf	?___wmul,w
  3460  0170  0141               	movlb	1	; select bank1
  3461  0171  00B0               	movwf	sprintf@width^(0+128)
  3462                           
  3463                           ;doprnt.c: 601: width += *f++ - '0';
  3464  0172  0140               	movlb	0	; select bank0
  3465  0173  0859               	movf	sprintf@f,w
  3466  0174  0084               	movwf	4
  3467  0175  085A               	movf	sprintf@f+1,w
  3468  0176  0085               	movwf	5
  3469  0177  0800               	movf	0,w	;code access
  3470  0178  3ED0               	addlw	208
  3471  0179  00DE               	movwf	??_sprintf
  3472  017A  30FF               	movlw	255
  3473  017B  1803               	skipnc
  3474  017C  3000               	movlw	0
  3475  017D  00DF               	movwf	??_sprintf+1
  3476  017E  085E               	movf	??_sprintf,w
  3477  017F  0141               	movlb	1	; select bank1
  3478  0180  07B0               	addwf	sprintf@width^(0+128),f
  3479  0181  0140               	movlb	0	; select bank0
  3480  0182  085F               	movf	??_sprintf+1,w
  3481  0183  0141               	movlb	1	; select bank1
  3482  0184  3DB1               	addwfc	(sprintf@width+1)^(0+128),f
  3483  0185  3001               	movlw	1
  3484  0186  0140               	movlb	0	; select bank0
  3485  0187  07D9               	addwf	sprintf@f,f
  3486  0188  3000               	movlw	0
  3487  0189  3DDA               	addwfc	sprintf@f+1,f
  3488                           
  3489                           ;doprnt.c: 602: } while(isdigit((unsigned)*f));
  3490  018A  0859               	movf	sprintf@f,w
  3491  018B  0084               	movwf	4
  3492  018C  085A               	movf	sprintf@f+1,w
  3493  018D  0085               	movwf	5
  3494  018E  0800               	movf	0,w	;code access
  3495  018F  3190  2002  3181   	fcall	_isdigit
  3496  0192  1C03               	btfss	3,0
  3497  0193  2997               	goto	l3087
  3498  0194  295A               	goto	l3077
  3499  0195                     l266:	
  3500                           ;doprnt.c: 662: case 'f':
  3501                           
  3502                           ;doprnt.c: 638: goto alldone;
  3503                           
  3504                           ;doprnt.c: 637: case 0:
  3505                           
  3506                           ;doprnt.c: 608: }
  3507                           ;doprnt.c: 635: switch(c = *f++) {
  3508                           
  3509                           
  3510                           ;doprnt.c: 663: flag |= 0x400;
  3511  0195  1527               	bsf	(sprintf@flag^(0+128)+1),2
  3512                           
  3513                           ;doprnt.c: 698: case 'i':
  3514                           ;doprnt.c: 699: break;
  3515                           
  3516                           ;doprnt.c: 697: case 'd':
  3517                           
  3518                           ;doprnt.c: 664: break;
  3519  0196  29B3               	goto	l3089
  3520  0197                     l3087:	
  3521                           ;doprnt.c: 822: }
  3522                           
  3523                           ;doprnt.c: 813: continue;
  3524                           
  3525                           ;doprnt.c: 802: default:
  3526                           
  3527  0197  0140               	movlb	0	; select bank0
  3528  0198  085A               	movf	sprintf@f+1,w
  3529  0199  00DF               	movwf	??_sprintf+1
  3530  019A  0859               	movf	sprintf@f,w
  3531  019B  00DE               	movwf	??_sprintf
  3532  019C  0AD9               	incf	sprintf@f,f
  3533  019D  1903               	skipnz
  3534  019E  0ADA               	incf	sprintf@f+1,f
  3535  019F  085E               	movf	??_sprintf,w
  3536  01A0  0084               	movwf	4
  3537  01A1  085F               	movf	??_sprintf+1,w
  3538  01A2  0085               	movwf	5
  3539  01A3  0800               	movf	0,w	;code access
  3540  01A4  0141               	movlb	1	; select bank1
  3541  01A5  00B8               	movwf	sprintf@c^(0+128)
  3542                           
  3543                           ; Switch size 1, requested type "space"
  3544                           ; Number of cases is 4, Range of values is 0 to 105
  3545                           ; switch strategies available:
  3546                           ; Name         Instructions Cycles
  3547                           ; simple_byte           13     7 (average)
  3548                           ; direct_byte          218     6 (fixed)
  3549                           ; jumptable            260     6 (fixed)
  3550                           ;	Chosen strategy is simple_byte
  3551  01A6  3A00               	xorlw	0	; case 0
  3552  01A7  1903               	skipnz
  3553  01A8  2FDE               	goto	l3337
  3554  01A9  3A64               	xorlw	100	; case 100
  3555  01AA  1903               	skipnz
  3556  01AB  29B3               	goto	l3089
  3557  01AC  3A02               	xorlw	2	; case 102
  3558  01AD  1903               	skipnz
  3559  01AE  2995               	goto	l266
  3560  01AF  3A0F               	xorlw	15	; case 105
  3561  01B0  1903               	skipnz
  3562  01B1  29B3               	goto	l3089
  3563  01B2  290F               	goto	l3335
  3564  01B3                     l3089:	
  3565                           
  3566                           ;doprnt.c: 825: if(flag & (0x700)) {
  3567  01B3  3000               	movlw	0
  3568  01B4  0526               	andwf	sprintf@flag^(0+128),w
  3569  01B5  0140               	movlb	0	; select bank0
  3570  01B6  00DE               	movwf	??_sprintf
  3571  01B7  3007               	movlw	7
  3572  01B8  0141               	movlb	1	; select bank1
  3573  01B9  0527               	andwf	(sprintf@flag+1)^(0+128),w
  3574  01BA  0140               	movlb	0	; select bank0
  3575  01BB  00DF               	movwf	??_sprintf+1
  3576  01BC  085E               	movf	??_sprintf,w
  3577  01BD  045F               	iorwf	??_sprintf+1,w
  3578  01BE  1903               	btfsc	3,2
  3579  01BF  2E6F               	goto	l3263
  3580                           
  3581                           ;doprnt.c: 829: prec = 6;
  3582  01C0  3006               	movlw	6
  3583  01C1  0141               	movlb	1	; select bank1
  3584  01C2  00A4               	movwf	sprintf@prec^(0+128)
  3585  01C3  3000               	movlw	0
  3586  01C4  00A5               	movwf	(sprintf@prec^(0+128)+1)
  3587                           
  3588                           ;doprnt.c: 830: fval = (*(double *)__va_arg((*(double **)ap), (double)0));
  3589  01C5  0823               	movf	sprintf@ap^(0+128),w
  3590  01C6  0086               	movwf	6
  3591  01C7  0187               	clrf	7
  3592  01C8  3F40               	moviw [0]fsr1
  3593  01C9  00B4               	movwf	sprintf@fval^(0+128)
  3594  01CA  3F41               	moviw [1]fsr1
  3595  01CB  00B5               	movwf	(sprintf@fval+1)^(0+128)
  3596  01CC  3F42               	moviw [2]fsr1
  3597  01CD  00B6               	movwf	(sprintf@fval+2)^(0+128)
  3598  01CE  3003               	movlw	3
  3599  01CF  0140               	movlb	0	; select bank0
  3600  01D0  00DE               	movwf	??_sprintf
  3601  01D1  085E               	movf	??_sprintf,w
  3602  01D2  0141               	movlb	1	; select bank1
  3603  01D3  07A3               	addwf	sprintf@ap^(0+128),f
  3604                           
  3605                           ;doprnt.c: 831: if(fval < 0.0) {
  3606  01D4  0834               	movf	sprintf@fval^(0+128),w
  3607  01D5  00F0               	movwf	___ftge@ff1
  3608  01D6  0835               	movf	(sprintf@fval+1)^(0+128),w
  3609  01D7  00F1               	movwf	___ftge@ff1+1
  3610  01D8  0836               	movf	(sprintf@fval+2)^(0+128),w
  3611  01D9  00F2               	movwf	___ftge@ff1+2
  3612  01DA  3000               	movlw	0
  3613  01DB  00F3               	movwf	___ftge@ff2
  3614  01DC  3000               	movlw	0
  3615  01DD  00F4               	movwf	___ftge@ff2+1
  3616  01DE  3000               	movlw	0
  3617  01DF  00F5               	movwf	___ftge@ff2+2
  3618  01E0  319F  2782  3181   	fcall	___ftge
  3619  01E3  1803               	btfsc	3,0
  3620  01E4  29FA               	goto	l3103
  3621                           
  3622                           ;doprnt.c: 832: fval = -fval;
  3623  01E5  0141               	movlb	1	; select bank1
  3624  01E6  0834               	movf	sprintf@fval^(0+128),w
  3625  01E7  00F0               	movwf	___ftneg@f1
  3626  01E8  0835               	movf	(sprintf@fval+1)^(0+128),w
  3627  01E9  00F1               	movwf	___ftneg@f1+1
  3628  01EA  0836               	movf	(sprintf@fval+2)^(0+128),w
  3629  01EB  00F2               	movwf	___ftneg@f1+2
  3630  01EC  3180  2009  3181   	fcall	___ftneg
  3631  01EF  0870               	movf	?___ftneg,w
  3632  01F0  0141               	movlb	1	; select bank1
  3633  01F1  00B4               	movwf	sprintf@fval^(0+128)
  3634  01F2  0871               	movf	?___ftneg+1,w
  3635  01F3  00B5               	movwf	(sprintf@fval+1)^(0+128)
  3636  01F4  0872               	movf	?___ftneg+2,w
  3637  01F5  00B6               	movwf	(sprintf@fval+2)^(0+128)
  3638                           
  3639                           ;doprnt.c: 833: flag |= 0x03;
  3640  01F6  3003               	movlw	3
  3641  01F7  04A6               	iorwf	sprintf@flag^(0+128),f
  3642  01F8  3000               	movlw	0
  3643  01F9  04A7               	iorwf	(sprintf@flag+1)^(0+128),f
  3644  01FA                     l3103:	
  3645                           
  3646                           ;doprnt.c: 834: }
  3647                           ;doprnt.c: 835: exp = 0;
  3648  01FA  0141               	movlb	1	; select bank1
  3649  01FB  01B2               	clrf	sprintf@exp^(0+128)
  3650  01FC  01B3               	clrf	(sprintf@exp+1)^(0+128)
  3651                           
  3652                           ;doprnt.c: 836: if( fval!=0) {
  3653  01FD  0836               	movf	(sprintf@fval+2)^(0+128),w
  3654  01FE  0435               	iorwf	(sprintf@fval+1)^(0+128),w
  3655  01FF  0434               	iorwf	sprintf@fval^(0+128),w
  3656  0200  1903               	skipnz
  3657  0201  2ABA               	goto	l273
  3658                           
  3659                           ;doprnt.c: 837: (void)(*(&exp) = ((*(unsigned long *)&fval >> 15) & 255) - 126);
  3660  0202  30B4               	movlw	low (sprintf@fval| 0)
  3661  0203  0086               	movwf	6
  3662  0204  0187               	clrf	7
  3663  0205  3F40               	moviw [0]fsr1
  3664  0206  0140               	movlb	0	; select bank0
  3665  0207  00DE               	movwf	??_sprintf
  3666  0208  3F41               	moviw [1]fsr1
  3667  0209  00DF               	movwf	??_sprintf+1
  3668  020A  3F42               	moviw [2]fsr1
  3669  020B  00E0               	movwf	??_sprintf+2
  3670  020C  3F43               	moviw [3]fsr1
  3671  020D  00E1               	movwf	??_sprintf+3
  3672  020E  300F               	movlw	15
  3673  020F                     u4255:	
  3674  020F  36E1               	lsrf	??_sprintf+3,f
  3675  0210  0CE0               	rrf	??_sprintf+2,f
  3676  0211  0CDF               	rrf	??_sprintf+1,f
  3677  0212  0CDE               	rrf	??_sprintf,f
  3678  0213  0B89               	decfsz	9,f
  3679  0214  2A0F               	goto	u4255
  3680  0215  30FF               	movlw	255
  3681  0216  055E               	andwf	??_sprintf,w
  3682  0217  00E2               	movwf	??_sprintf+4
  3683  0218  3000               	movlw	0
  3684  0219  055F               	andwf	??_sprintf+1,w
  3685  021A  00E3               	movwf	??_sprintf+5
  3686  021B  0862               	movf	??_sprintf+4,w
  3687  021C  3E82               	addlw	130
  3688  021D  0141               	movlb	1	; select bank1
  3689  021E  00B2               	movwf	sprintf@exp^(0+128)
  3690  021F  30FF               	movlw	255
  3691  0220  0140               	movlb	0	; select bank0
  3692  0221  3D63               	addwfc	??_sprintf+5,w
  3693  0222  0141               	movlb	1	; select bank1
  3694  0223  00B3               	movwf	(sprintf@exp+1)^(0+128)
  3695                           
  3696                           ;doprnt.c: 838: exp--;
  3697  0224  30FF               	movlw	255
  3698  0225  07B2               	addwf	sprintf@exp^(0+128),f
  3699  0226  30FF               	movlw	255
  3700  0227  3DB3               	addwfc	(sprintf@exp+1)^(0+128),f
  3701                           
  3702                           ;doprnt.c: 839: exp *= 3;
  3703  0228  3003               	movlw	3
  3704  0229  0140               	movlb	0	; select bank0
  3705  022A  00A4               	movwf	___wmul@multiplier
  3706  022B  3000               	movlw	0
  3707  022C  00A5               	movwf	___wmul@multiplier+1
  3708  022D  0141               	movlb	1	; select bank1
  3709  022E  0833               	movf	(sprintf@exp+1)^(0+128),w
  3710  022F  0140               	movlb	0	; select bank0
  3711  0230  00A7               	movwf	___wmul@multiplicand+1
  3712  0231  0141               	movlb	1	; select bank1
  3713  0232  0832               	movf	sprintf@exp^(0+128),w
  3714  0233  0140               	movlb	0	; select bank0
  3715  0234  00A6               	movwf	___wmul@multiplicand
  3716  0235  319E  2692  3181   	fcall	___wmul
  3717  0238  0140               	movlb	0	; select bank0
  3718  0239  0825               	movf	?___wmul+1,w
  3719  023A  0141               	movlb	1	; select bank1
  3720  023B  00B3               	movwf	(sprintf@exp+1)^(0+128)
  3721  023C  0140               	movlb	0	; select bank0
  3722  023D  0824               	movf	?___wmul,w
  3723  023E  0141               	movlb	1	; select bank1
  3724  023F  00B2               	movwf	sprintf@exp^(0+128)
  3725                           
  3726                           ;doprnt.c: 840: exp /= 10;
  3727  0240  300A               	movlw	10
  3728  0241  00F7               	movwf	___awdiv@divisor
  3729  0242  3000               	movlw	0
  3730  0243  00F8               	movwf	___awdiv@divisor+1
  3731  0244  0833               	movf	(sprintf@exp+1)^(0+128),w
  3732  0245  00FA               	movwf	___awdiv@dividend+1
  3733  0246  0832               	movf	sprintf@exp^(0+128),w
  3734  0247  00F9               	movwf	___awdiv@dividend
  3735  0248  3190  20F3  3181   	fcall	___awdiv
  3736  024B  0878               	movf	?___awdiv+1,w
  3737  024C  0141               	movlb	1	; select bank1
  3738  024D  00B3               	movwf	(sprintf@exp+1)^(0+128)
  3739  024E  0877               	movf	?___awdiv,w
  3740  024F  00B2               	movwf	sprintf@exp^(0+128)
  3741                           
  3742                           ;doprnt.c: 841: if(exp < 0)
  3743  0250  1FB3               	btfss	(sprintf@exp+1)^(0+128),7
  3744  0251  2A56               	goto	l3119
  3745                           
  3746                           ;doprnt.c: 842: exp--;
  3747  0252  30FF               	movlw	255
  3748  0253  07B2               	addwf	sprintf@exp^(0+128),f
  3749  0254  30FF               	movlw	255
  3750  0255  3DB3               	addwfc	(sprintf@exp+1)^(0+128),f
  3751  0256                     l3119:	
  3752                           
  3753                           ;doprnt.c: 846: tmpval.integ = scale(-exp);
  3754  0256  0332               	decf	sprintf@exp^(0+128),w
  3755  0257  3AFF               	xorlw	255
  3756  0258  3188  20A2  3181   	fcall	_scale
  3757  025B  0140               	movlb	0	; select bank0
  3758  025C  0838               	movf	?_scale,w
  3759  025D  0141               	movlb	1	; select bank1
  3760  025E  00AC               	movwf	sprintf@tmpval^(0+128)
  3761  025F  0140               	movlb	0	; select bank0
  3762  0260  0839               	movf	?_scale+1,w
  3763  0261  0141               	movlb	1	; select bank1
  3764  0262  00AD               	movwf	(sprintf@tmpval+1)^(0+128)
  3765  0263  0140               	movlb	0	; select bank0
  3766  0264  083A               	movf	?_scale+2,w
  3767  0265  0141               	movlb	1	; select bank1
  3768  0266  00AE               	movwf	(sprintf@tmpval+2)^(0+128)
  3769                           
  3770                           ;doprnt.c: 847: tmpval.integ *= fval;
  3771  0267  0834               	movf	sprintf@fval^(0+128),w
  3772  0268  0140               	movlb	0	; select bank0
  3773  0269  00A8               	movwf	___ftmul@f1
  3774  026A  0141               	movlb	1	; select bank1
  3775  026B  0835               	movf	(sprintf@fval+1)^(0+128),w
  3776  026C  0140               	movlb	0	; select bank0
  3777  026D  00A9               	movwf	___ftmul@f1+1
  3778  026E  0141               	movlb	1	; select bank1
  3779  026F  0836               	movf	(sprintf@fval+2)^(0+128),w
  3780  0270  0140               	movlb	0	; select bank0
  3781  0271  00AA               	movwf	___ftmul@f1+2
  3782  0272  0141               	movlb	1	; select bank1
  3783  0273  082C               	movf	sprintf@tmpval^(0+128),w
  3784  0274  0140               	movlb	0	; select bank0
  3785  0275  00AB               	movwf	___ftmul@f2
  3786  0276  0141               	movlb	1	; select bank1
  3787  0277  082D               	movf	(sprintf@tmpval+1)^(0+128),w
  3788  0278  0140               	movlb	0	; select bank0
  3789  0279  00AC               	movwf	___ftmul@f2+1
  3790  027A  0141               	movlb	1	; select bank1
  3791  027B  082E               	movf	(sprintf@tmpval+2)^(0+128),w
  3792  027C  0140               	movlb	0	; select bank0
  3793  027D  00AD               	movwf	___ftmul@f2+2
  3794  027E  3194  2414  3181   	fcall	___ftmul
  3795  0281  0140               	movlb	0	; select bank0
  3796  0282  0828               	movf	?___ftmul,w
  3797  0283  0141               	movlb	1	; select bank1
  3798  0284  00AC               	movwf	sprintf@tmpval^(0+128)
  3799  0285  0140               	movlb	0	; select bank0
  3800  0286  0829               	movf	?___ftmul+1,w
  3801  0287  0141               	movlb	1	; select bank1
  3802  0288  00AD               	movwf	(sprintf@tmpval+1)^(0+128)
  3803  0289  0140               	movlb	0	; select bank0
  3804  028A  082A               	movf	?___ftmul+2,w
  3805  028B  0141               	movlb	1	; select bank1
  3806  028C  00AE               	movwf	(sprintf@tmpval+2)^(0+128)
  3807                           
  3808                           ;doprnt.c: 848: if(tmpval.integ < 1.0)
  3809  028D  082C               	movf	sprintf@tmpval^(0+128),w
  3810  028E  00F0               	movwf	___ftge@ff1
  3811  028F  082D               	movf	(sprintf@tmpval+1)^(0+128),w
  3812  0290  00F1               	movwf	___ftge@ff1+1
  3813  0291  082E               	movf	(sprintf@tmpval+2)^(0+128),w
  3814  0292  00F2               	movwf	___ftge@ff1+2
  3815  0293  3000               	movlw	0
  3816  0294  00F3               	movwf	___ftge@ff2
  3817  0295  3080               	movlw	128
  3818  0296  00F4               	movwf	___ftge@ff2+1
  3819  0297  303F               	movlw	63
  3820  0298  00F5               	movwf	___ftge@ff2+2
  3821  0299  319F  2782  3181   	fcall	___ftge
  3822  029C  1803               	btfsc	3,0
  3823  029D  2AA3               	goto	l3127
  3824                           
  3825                           ;doprnt.c: 849: exp--;
  3826  029E  30FF               	movlw	255
  3827  029F  0141               	movlb	1	; select bank1
  3828  02A0  07B2               	addwf	sprintf@exp^(0+128),f
  3829  02A1  30FF               	movlw	255
  3830  02A2  2AB9               	goto	L3
  3831  02A3                     l3127:	
  3832                           
  3833                           ;doprnt.c: 850: else if(tmpval.integ >= 10.0)
  3834  02A3  0141               	movlb	1	; select bank1
  3835  02A4  082C               	movf	sprintf@tmpval^(0+128),w
  3836  02A5  00F0               	movwf	___ftge@ff1
  3837  02A6  082D               	movf	(sprintf@tmpval+1)^(0+128),w
  3838  02A7  00F1               	movwf	___ftge@ff1+1
  3839  02A8  082E               	movf	(sprintf@tmpval+2)^(0+128),w
  3840  02A9  00F2               	movwf	___ftge@ff1+2
  3841  02AA  3000               	movlw	0
  3842  02AB  00F3               	movwf	___ftge@ff2
  3843  02AC  3020               	movlw	32
  3844  02AD  00F4               	movwf	___ftge@ff2+1
  3845  02AE  3041               	movlw	65
  3846  02AF  00F5               	movwf	___ftge@ff2+2
  3847  02B0  319F  2782  3181   	fcall	___ftge
  3848  02B3  1C03               	btfss	3,0
  3849  02B4  2ABA               	goto	l273
  3850                           
  3851                           ;doprnt.c: 851: exp++;
  3852  02B5  3001               	movlw	1
  3853  02B6  0141               	movlb	1	; select bank1
  3854  02B7  07B2               	addwf	sprintf@exp^(0+128),f
  3855  02B8  3000               	movlw	0
  3856  02B9                     L3:	
  3857  02B9  3DB3               	addwfc	(sprintf@exp+1)^(0+128),f
  3858  02BA                     l273:	
  3859                           
  3860                           ;doprnt.c: 852: }
  3861                           ;doprnt.c: 1112: if(prec <= 12)
  3862  02BA  0141               	movlb	1	; select bank1
  3863  02BB  0825               	movf	(sprintf@prec+1)^(0+128),w
  3864  02BC  3A80               	xorlw	128
  3865  02BD  0140               	movlb	0	; select bank0
  3866  02BE  00DE               	movwf	??_sprintf
  3867  02BF  3080               	movlw	128
  3868  02C0  025E               	subwf	??_sprintf,w
  3869  02C1  1D03               	skipz
  3870  02C2  2AC6               	goto	u4295
  3871  02C3  300D               	movlw	13
  3872  02C4  0141               	movlb	1	; select bank1
  3873  02C5  0224               	subwf	sprintf@prec^(0+128),w
  3874  02C6                     u4295:	
  3875  02C6  1803               	skipnc
  3876  02C7  2AEF               	goto	l3133
  3877                           
  3878                           ;doprnt.c: 1113: fval += fround(prec);
  3879  02C8  0141               	movlb	1	; select bank1
  3880  02C9  0824               	movf	sprintf@prec^(0+128),w
  3881  02CA  3196  269B  3181   	fcall	_fround
  3882  02CD  0140               	movlb	0	; select bank0
  3883  02CE  0838               	movf	?_fround,w
  3884  02CF  00C6               	movwf	___ftadd@f1
  3885  02D0  0839               	movf	?_fround+1,w
  3886  02D1  00C7               	movwf	___ftadd@f1+1
  3887  02D2  083A               	movf	?_fround+2,w
  3888  02D3  00C8               	movwf	___ftadd@f1+2
  3889  02D4  0141               	movlb	1	; select bank1
  3890  02D5  0834               	movf	sprintf@fval^(0+128),w
  3891  02D6  0140               	movlb	0	; select bank0
  3892  02D7  00C9               	movwf	___ftadd@f2
  3893  02D8  0141               	movlb	1	; select bank1
  3894  02D9  0835               	movf	(sprintf@fval+1)^(0+128),w
  3895  02DA  0140               	movlb	0	; select bank0
  3896  02DB  00CA               	movwf	___ftadd@f2+1
  3897  02DC  0141               	movlb	1	; select bank1
  3898  02DD  0836               	movf	(sprintf@fval+2)^(0+128),w
  3899  02DE  0140               	movlb	0	; select bank0
  3900  02DF  00CB               	movwf	___ftadd@f2+2
  3901  02E0  3180  2011  3181   	fcall	___ftadd
  3902  02E3  0140               	movlb	0	; select bank0
  3903  02E4  0846               	movf	?___ftadd,w
  3904  02E5  0141               	movlb	1	; select bank1
  3905  02E6  00B4               	movwf	sprintf@fval^(0+128)
  3906  02E7  0140               	movlb	0	; select bank0
  3907  02E8  0847               	movf	?___ftadd+1,w
  3908  02E9  0141               	movlb	1	; select bank1
  3909  02EA  00B5               	movwf	(sprintf@fval+1)^(0+128)
  3910  02EB  0140               	movlb	0	; select bank0
  3911  02EC  0848               	movf	?___ftadd+2,w
  3912  02ED  0141               	movlb	1	; select bank1
  3913  02EE  00B6               	movwf	(sprintf@fval+2)^(0+128)
  3914  02EF                     l3133:	
  3915                           
  3916                           ;doprnt.c: 1116: if((exp > 9)||(fval != 0 && (unsigned long)fval == 0 && exp > 1)) {
  3917  02EF  0141               	movlb	1	; select bank1
  3918  02F0  0833               	movf	(sprintf@exp+1)^(0+128),w
  3919  02F1  3A80               	xorlw	128
  3920  02F2  0140               	movlb	0	; select bank0
  3921  02F3  00DE               	movwf	??_sprintf
  3922  02F4  3080               	movlw	128
  3923  02F5  025E               	subwf	??_sprintf,w
  3924  02F6  1D03               	skipz
  3925  02F7  2AFB               	goto	u4305
  3926  02F8  300A               	movlw	10
  3927  02F9  0141               	movlb	1	; select bank1
  3928  02FA  0232               	subwf	sprintf@exp^(0+128),w
  3929  02FB                     u4305:	
  3930  02FB  1803               	skipnc
  3931  02FC  2B26               	goto	l3141
  3932  02FD  0141               	movlb	1	; select bank1
  3933  02FE  0836               	movf	(sprintf@fval+2)^(0+128),w
  3934  02FF  0435               	iorwf	(sprintf@fval+1)^(0+128),w
  3935  0300  0434               	iorwf	sprintf@fval^(0+128),w
  3936  0301  1903               	skipnz
  3937  0302  2B6E               	goto	l3155
  3938  0303  0834               	movf	sprintf@fval^(0+128),w
  3939  0304  0140               	movlb	0	; select bank0
  3940  0305  00C1               	movwf	___fttol@f1
  3941  0306  0141               	movlb	1	; select bank1
  3942  0307  0835               	movf	(sprintf@fval+1)^(0+128),w
  3943  0308  0140               	movlb	0	; select bank0
  3944  0309  00C2               	movwf	___fttol@f1+1
  3945  030A  0141               	movlb	1	; select bank1
  3946  030B  0836               	movf	(sprintf@fval+2)^(0+128),w
  3947  030C  0140               	movlb	0	; select bank0
  3948  030D  00C3               	movwf	___fttol@f1+2
  3949  030E  3191  21A9  3181   	fcall	___fttol
  3950  0311  0140               	movlb	0	; select bank0
  3951  0312  0844               	movf	?___fttol+3,w
  3952  0313  0443               	iorwf	?___fttol+2,w
  3953  0314  0442               	iorwf	?___fttol+1,w
  3954  0315  0441               	iorwf	?___fttol,w
  3955  0316  1D03               	skipz
  3956  0317  2B6E               	goto	l3155
  3957  0318  0141               	movlb	1	; select bank1
  3958  0319  0833               	movf	(sprintf@exp+1)^(0+128),w
  3959  031A  3A80               	xorlw	128
  3960  031B  0140               	movlb	0	; select bank0
  3961  031C  00DE               	movwf	??_sprintf
  3962  031D  3080               	movlw	128
  3963  031E  025E               	subwf	??_sprintf,w
  3964  031F  1D03               	skipz
  3965  0320  2B24               	goto	u4335
  3966  0321  3002               	movlw	2
  3967  0322  0141               	movlb	1	; select bank1
  3968  0323  0232               	subwf	sprintf@exp^(0+128),w
  3969  0324                     u4335:	
  3970  0324  1C03               	skipc
  3971  0325  2B6E               	goto	l3155
  3972  0326                     l3141:	
  3973                           
  3974                           ;doprnt.c: 1120: if(tmpval.integ < 4.294967296){
  3975  0326  0141               	movlb	1	; select bank1
  3976  0327  082C               	movf	sprintf@tmpval^(0+128),w
  3977  0328  00F0               	movwf	___ftge@ff1
  3978  0329  082D               	movf	(sprintf@tmpval+1)^(0+128),w
  3979  032A  00F1               	movwf	___ftge@ff1+1
  3980  032B  082E               	movf	(sprintf@tmpval+2)^(0+128),w
  3981  032C  00F2               	movwf	___ftge@ff1+2
  3982  032D  3070               	movlw	112
  3983  032E  00F3               	movwf	___ftge@ff2
  3984  032F  3089               	movlw	137
  3985  0330  00F4               	movwf	___ftge@ff2+1
  3986  0331  3040               	movlw	64
  3987  0332  00F5               	movwf	___ftge@ff2+2
  3988  0333  319F  2782  3181   	fcall	___ftge
  3989  0336  1803               	btfsc	3,0
  3990  0337  2B3A               	goto	l3145
  3991                           
  3992                           ;doprnt.c: 1121: exp -= (sizeof dpowers/sizeof dpowers[0])-1;
  3993  0338  30F7               	movlw	247
  3994  0339  2B3B               	goto	L4
  3995  033A                     l3145:	
  3996                           ;doprnt.c: 1122: }else{
  3997                           
  3998                           
  3999                           ;doprnt.c: 1123: exp -= (sizeof dpowers/sizeof dpowers[0])-2;
  4000  033A  30F8               	movlw	248
  4001  033B                     L4:	
  4002  033B  0141               	movlb	1	; select bank1
  4003  033C  07B2               	addwf	sprintf@exp^(0+128),f
  4004  033D  30FF               	movlw	255
  4005  033E  3DB3               	addwfc	(sprintf@exp+1)^(0+128),f
  4006                           
  4007                           ;doprnt.c: 1124: }
  4008                           ;doprnt.c: 1125: tmpval.integ = scale(exp);
  4009  033F  0832               	movf	sprintf@exp^(0+128),w
  4010  0340  3188  20A2  3181   	fcall	_scale
  4011  0343  0140               	movlb	0	; select bank0
  4012  0344  0838               	movf	?_scale,w
  4013  0345  0141               	movlb	1	; select bank1
  4014  0346  00AC               	movwf	sprintf@tmpval^(0+128)
  4015  0347  0140               	movlb	0	; select bank0
  4016  0348  0839               	movf	?_scale+1,w
  4017  0349  0141               	movlb	1	; select bank1
  4018  034A  00AD               	movwf	(sprintf@tmpval+1)^(0+128)
  4019  034B  0140               	movlb	0	; select bank0
  4020  034C  083A               	movf	?_scale+2,w
  4021  034D  0141               	movlb	1	; select bank1
  4022  034E  00AE               	movwf	(sprintf@tmpval+2)^(0+128)
  4023                           
  4024                           ;doprnt.c: 1126: val = ((sizeof(double)== 3) ? _tdiv_to_l_(fval,tmpval.integ) : _div_to_
      +                          l_(fval,tmpval.integ));
  4025  034F  0834               	movf	sprintf@fval^(0+128),w
  4026  0350  00F0               	movwf	__tdiv_to_l_@f1
  4027  0351  0835               	movf	(sprintf@fval+1)^(0+128),w
  4028  0352  00F1               	movwf	__tdiv_to_l_@f1+1
  4029  0353  0836               	movf	(sprintf@fval+2)^(0+128),w
  4030  0354  00F2               	movwf	__tdiv_to_l_@f1+2
  4031  0355  082C               	movf	sprintf@tmpval^(0+128),w
  4032  0356  00F3               	movwf	__tdiv_to_l_@f2
  4033  0357  082D               	movf	(sprintf@tmpval+1)^(0+128),w
  4034  0358  00F4               	movwf	__tdiv_to_l_@f2+1
  4035  0359  082E               	movf	(sprintf@tmpval+2)^(0+128),w
  4036  035A  00F5               	movwf	__tdiv_to_l_@f2+2
  4037  035B  3194  24C8  3181   	fcall	__tdiv_to_l_
  4038  035E  0873               	movf	?__tdiv_to_l_+3,w
  4039  035F  0141               	movlb	1	; select bank1
  4040  0360  00AB               	movwf	(sprintf@val+3)^(0+128)
  4041  0361  0872               	movf	?__tdiv_to_l_+2,w
  4042  0362  00AA               	movwf	(sprintf@val+2)^(0+128)
  4043  0363  0871               	movf	?__tdiv_to_l_+1,w
  4044  0364  00A9               	movwf	(sprintf@val+1)^(0+128)
  4045  0365  0870               	movf	?__tdiv_to_l_,w
  4046  0366  00A8               	movwf	sprintf@val^(0+128)
  4047                           
  4048                           ;doprnt.c: 1129: fval = 0.0;
  4049  0367  3000               	movlw	0
  4050  0368  00B4               	movwf	sprintf@fval^(0+128)
  4051  0369  3000               	movlw	0
  4052  036A  00B5               	movwf	(sprintf@fval+1)^(0+128)
  4053  036B  3000               	movlw	0
  4054  036C  00B6               	movwf	(sprintf@fval+2)^(0+128)
  4055                           
  4056                           ;doprnt.c: 1130: } else {
  4057  036D  2BBC               	goto	l3159
  4058  036E                     l3155:	
  4059                           
  4060                           ;doprnt.c: 1131: val = (unsigned long)fval;
  4061  036E  0141               	movlb	1	; select bank1
  4062  036F  0834               	movf	sprintf@fval^(0+128),w
  4063  0370  0140               	movlb	0	; select bank0
  4064  0371  00C1               	movwf	___fttol@f1
  4065  0372  0141               	movlb	1	; select bank1
  4066  0373  0835               	movf	(sprintf@fval+1)^(0+128),w
  4067  0374  0140               	movlb	0	; select bank0
  4068  0375  00C2               	movwf	___fttol@f1+1
  4069  0376  0141               	movlb	1	; select bank1
  4070  0377  0836               	movf	(sprintf@fval+2)^(0+128),w
  4071  0378  0140               	movlb	0	; select bank0
  4072  0379  00C3               	movwf	___fttol@f1+2
  4073  037A  3191  21A9  3181   	fcall	___fttol
  4074  037D  0140               	movlb	0	; select bank0
  4075  037E  0844               	movf	?___fttol+3,w
  4076  037F  0141               	movlb	1	; select bank1
  4077  0380  00AB               	movwf	(sprintf@val+3)^(0+128)
  4078  0381  0140               	movlb	0	; select bank0
  4079  0382  0843               	movf	?___fttol+2,w
  4080  0383  0141               	movlb	1	; select bank1
  4081  0384  00AA               	movwf	(sprintf@val+2)^(0+128)
  4082  0385  0140               	movlb	0	; select bank0
  4083  0386  0842               	movf	?___fttol+1,w
  4084  0387  0141               	movlb	1	; select bank1
  4085  0388  00A9               	movwf	(sprintf@val+1)^(0+128)
  4086  0389  0140               	movlb	0	; select bank0
  4087  038A  0841               	movf	?___fttol,w
  4088  038B  0141               	movlb	1	; select bank1
  4089  038C  00A8               	movwf	sprintf@val^(0+128)
  4090                           
  4091                           ;doprnt.c: 1132: fval -= (double)val;
  4092  038D  082B               	movf	(sprintf@val+3)^(0+128),w
  4093  038E  00FB               	movwf	___lltoft@c+3
  4094  038F  082A               	movf	(sprintf@val+2)^(0+128),w
  4095  0390  00FA               	movwf	___lltoft@c+2
  4096  0391  0829               	movf	(sprintf@val+1)^(0+128),w
  4097  0392  00F9               	movwf	___lltoft@c+1
  4098  0393  0828               	movf	sprintf@val^(0+128),w
  4099  0394  00F8               	movwf	___lltoft@c
  4100  0395  319E  26EC  3181   	fcall	___lltoft
  4101  0398  0878               	movf	?___lltoft,w
  4102  0399  0140               	movlb	0	; select bank0
  4103  039A  00D3               	movwf	___ftsub@f2
  4104  039B  0879               	movf	?___lltoft+1,w
  4105  039C  00D4               	movwf	___ftsub@f2+1
  4106  039D  087A               	movf	?___lltoft+2,w
  4107  039E  00D5               	movwf	___ftsub@f2+2
  4108  039F  0141               	movlb	1	; select bank1
  4109  03A0  0834               	movf	sprintf@fval^(0+128),w
  4110  03A1  0140               	movlb	0	; select bank0
  4111  03A2  00D6               	movwf	___ftsub@f1
  4112  03A3  0141               	movlb	1	; select bank1
  4113  03A4  0835               	movf	(sprintf@fval+1)^(0+128),w
  4114  03A5  0140               	movlb	0	; select bank0
  4115  03A6  00D7               	movwf	___ftsub@f1+1
  4116  03A7  0141               	movlb	1	; select bank1
  4117  03A8  0836               	movf	(sprintf@fval+2)^(0+128),w
  4118  03A9  0140               	movlb	0	; select bank0
  4119  03AA  00D8               	movwf	___ftsub@f1+2
  4120  03AB  319E  26AE  3181   	fcall	___ftsub
  4121  03AE  0140               	movlb	0	; select bank0
  4122  03AF  0853               	movf	?___ftsub,w
  4123  03B0  0141               	movlb	1	; select bank1
  4124  03B1  00B4               	movwf	sprintf@fval^(0+128)
  4125  03B2  0140               	movlb	0	; select bank0
  4126  03B3  0854               	movf	?___ftsub+1,w
  4127  03B4  0141               	movlb	1	; select bank1
  4128  03B5  00B5               	movwf	(sprintf@fval+1)^(0+128)
  4129  03B6  0140               	movlb	0	; select bank0
  4130  03B7  0855               	movf	?___ftsub+2,w
  4131  03B8  0141               	movlb	1	; select bank1
  4132  03B9  00B6               	movwf	(sprintf@fval+2)^(0+128)
  4133                           
  4134                           ;doprnt.c: 1133: exp = 0;
  4135  03BA  01B2               	clrf	sprintf@exp^(0+128)
  4136  03BB  01B3               	clrf	(sprintf@exp+1)^(0+128)
  4137  03BC                     l3159:	
  4138                           
  4139                           ;doprnt.c: 1134: }
  4140                           ;doprnt.c: 1136: for(c = 1 ; c != (sizeof dpowers/sizeof dpowers[0]) ; c++)
  4141  03BC  01B8               	clrf	sprintf@c^(0+128)
  4142  03BD  0AB8               	incf	sprintf@c^(0+128),f
  4143  03BE  300A               	movlw	10
  4144  03BF  0638               	xorwf	sprintf@c^(0+128),w
  4145  03C0  1903               	btfsc	3,2
  4146  03C1  2BF9               	goto	l3171
  4147  03C2                     l3165:	
  4148                           
  4149                           ;doprnt.c: 1137: if(val < dpowers[c])
  4150  03C2  0838               	movf	sprintf@c^(0+128),w
  4151  03C3  0140               	movlb	0	; select bank0
  4152  03C4  00DE               	movwf	??_sprintf
  4153  03C5  01DF               	clrf	??_sprintf+1
  4154  03C6  35DE               	lslf	??_sprintf,f
  4155  03C7  0DDF               	rlf	??_sprintf+1,f
  4156  03C8  35DE               	lslf	??_sprintf,f
  4157  03C9  0DDF               	rlf	??_sprintf+1,f
  4158  03CA  3033               	movlw	low (_dpowers| (0+32768))
  4159  03CB  075E               	addwf	??_sprintf,w
  4160  03CC  0084               	movwf	4
  4161  03CD  30A0               	movlw	high (_dpowers| (0+32768))
  4162  03CE  3D5F               	addwfc	??_sprintf+1,w
  4163  03CF  0085               	movwf	5
  4164  03D0  3F00               	moviw [0]fsr0
  4165  03D1  00E0               	movwf	??_sprintf+2
  4166  03D2  3F01               	moviw [1]fsr0
  4167  03D3  00E1               	movwf	??_sprintf+3
  4168  03D4  3F02               	moviw [2]fsr0
  4169  03D5  00E2               	movwf	??_sprintf+4
  4170  03D6  3F03               	moviw [3]fsr0
  4171  03D7  00E3               	movwf	??_sprintf+5
  4172  03D8  0863               	movf	??_sprintf+5,w
  4173  03D9  0141               	movlb	1	; select bank1
  4174  03DA  022B               	subwf	(sprintf@val+3)^(0+128),w
  4175  03DB  1D03               	skipz
  4176  03DC  2BED               	goto	u4365
  4177  03DD  0140               	movlb	0	; select bank0
  4178  03DE  0862               	movf	??_sprintf+4,w
  4179  03DF  0141               	movlb	1	; select bank1
  4180  03E0  022A               	subwf	(sprintf@val+2)^(0+128),w
  4181  03E1  1D03               	skipz
  4182  03E2  2BED               	goto	u4365
  4183  03E3  0140               	movlb	0	; select bank0
  4184  03E4  0861               	movf	??_sprintf+3,w
  4185  03E5  0141               	movlb	1	; select bank1
  4186  03E6  0229               	subwf	(sprintf@val+1)^(0+128),w
  4187  03E7  1D03               	skipz
  4188  03E8  2BED               	goto	u4365
  4189  03E9  0140               	movlb	0	; select bank0
  4190  03EA  0860               	movf	??_sprintf+2,w
  4191  03EB  0141               	movlb	1	; select bank1
  4192  03EC  0228               	subwf	sprintf@val^(0+128),w
  4193  03ED                     u4365:	
  4194  03ED  1C03               	btfss	3,0
  4195  03EE  2BF9               	goto	l3171
  4196                           
  4197                           ;doprnt.c: 1138: break;
  4198  03EF  3001               	movlw	1
  4199  03F0  0140               	movlb	0	; select bank0
  4200  03F1  00DE               	movwf	??_sprintf
  4201  03F2  085E               	movf	??_sprintf,w
  4202  03F3  0141               	movlb	1	; select bank1
  4203  03F4  07B8               	addwf	sprintf@c^(0+128),f
  4204  03F5  300A               	movlw	10
  4205  03F6  0638               	xorwf	sprintf@c^(0+128),w
  4206  03F7  1D03               	btfss	3,2
  4207  03F8  2BC2               	goto	l3165
  4208  03F9                     l3171:	
  4209                           
  4210                           ;doprnt.c: 1142: width -= prec + c + exp;
  4211  03F9  0838               	movf	sprintf@c^(0+128),w
  4212  03FA  0140               	movlb	0	; select bank0
  4213  03FB  00DE               	movwf	??_sprintf
  4214  03FC  01DF               	clrf	??_sprintf+1
  4215  03FD  1BDE               	btfsc	??_sprintf,7
  4216  03FE  03DF               	decf	??_sprintf+1,f
  4217  03FF  0141               	movlb	1	; select bank1
  4218  0400  0824               	movf	sprintf@prec^(0+128),w
  4219  0401  0140               	movlb	0	; select bank0
  4220  0402  075E               	addwf	??_sprintf,w
  4221  0403  00E0               	movwf	??_sprintf+2
  4222  0404  0141               	movlb	1	; select bank1
  4223  0405  0825               	movf	(sprintf@prec+1)^(0+128),w
  4224  0406  0140               	movlb	0	; select bank0
  4225  0407  3D5F               	addwfc	??_sprintf+1,w
  4226  0408  00E1               	movwf	??_sprintf+3
  4227  0409  0141               	movlb	1	; select bank1
  4228  040A  0832               	movf	sprintf@exp^(0+128),w
  4229  040B  0140               	movlb	0	; select bank0
  4230  040C  0760               	addwf	??_sprintf+2,w
  4231  040D  00E2               	movwf	??_sprintf+4
  4232  040E  0141               	movlb	1	; select bank1
  4233  040F  0833               	movf	(sprintf@exp+1)^(0+128),w
  4234  0410  0140               	movlb	0	; select bank0
  4235  0411  3D61               	addwfc	??_sprintf+3,w
  4236  0412  00E3               	movwf	??_sprintf+5
  4237  0413  0862               	movf	??_sprintf+4,w
  4238  0414  0141               	movlb	1	; select bank1
  4239  0415  02B0               	subwf	sprintf@width^(0+128),f
  4240  0416  0140               	movlb	0	; select bank0
  4241  0417  0863               	movf	??_sprintf+5,w
  4242  0418  0141               	movlb	1	; select bank1
  4243  0419  3BB1               	subwfb	(sprintf@width+1)^(0+128),f
  4244                           
  4245                           ;doprnt.c: 1143: if(
  4246                           ;doprnt.c: 1147: prec)
  4247  041A  0824               	movf	sprintf@prec^(0+128),w
  4248  041B  0425               	iorwf	(sprintf@prec+1)^(0+128),w
  4249  041C  1903               	btfsc	3,2
  4250  041D  2C22               	goto	l3175
  4251                           
  4252                           ;doprnt.c: 1148: width--;
  4253  041E  30FF               	movlw	255
  4254  041F  07B0               	addwf	sprintf@width^(0+128),f
  4255  0420  30FF               	movlw	255
  4256  0421  3DB1               	addwfc	(sprintf@width+1)^(0+128),f
  4257  0422                     l3175:	
  4258                           
  4259                           ;doprnt.c: 1149: if(flag & 0x03)
  4260  0422  3003               	movlw	3
  4261  0423  0526               	andwf	sprintf@flag^(0+128),w
  4262  0424  0140               	movlb	0	; select bank0
  4263  0425  00DE               	movwf	??_sprintf
  4264  0426  3000               	movlw	0
  4265  0427  0141               	movlb	1	; select bank1
  4266  0428  0527               	andwf	(sprintf@flag+1)^(0+128),w
  4267  0429  0140               	movlb	0	; select bank0
  4268  042A  00DF               	movwf	??_sprintf+1
  4269  042B  085E               	movf	??_sprintf,w
  4270  042C  045F               	iorwf	??_sprintf+1,w
  4271  042D  1903               	btfsc	3,2
  4272  042E  2C34               	goto	l3179
  4273                           
  4274                           ;doprnt.c: 1150: width--;
  4275  042F  30FF               	movlw	255
  4276  0430  0141               	movlb	1	; select bank1
  4277  0431  07B0               	addwf	sprintf@width^(0+128),f
  4278  0432  30FF               	movlw	255
  4279  0433  3DB1               	addwfc	(sprintf@width+1)^(0+128),f
  4280  0434                     l3179:	
  4281                           
  4282                           ;doprnt.c: 1153: if(flag & 0x04) {
  4283  0434  0141               	movlb	1	; select bank1
  4284  0435  1D26               	btfss	sprintf@flag^(0+128),2
  4285  0436  2C87               	goto	l3201
  4286                           
  4287                           ;doprnt.c: 1157: if(flag & 0x03)
  4288  0437  3003               	movlw	3
  4289  0438  0526               	andwf	sprintf@flag^(0+128),w
  4290  0439  0140               	movlb	0	; select bank0
  4291  043A  00DE               	movwf	??_sprintf
  4292  043B  3000               	movlw	0
  4293  043C  0141               	movlb	1	; select bank1
  4294  043D  0527               	andwf	(sprintf@flag+1)^(0+128),w
  4295  043E  0140               	movlb	0	; select bank0
  4296  043F  00DF               	movwf	??_sprintf+1
  4297  0440  085E               	movf	??_sprintf,w
  4298  0441  045F               	iorwf	??_sprintf+1,w
  4299  0442  1903               	btfsc	3,2
  4300  0443  2C52               	goto	l3193
  4301                           
  4302                           ;doprnt.c: 1159: ((*sp++ = ('-')));
  4303  0444  302D               	movlw	45
  4304  0445  00DE               	movwf	??_sprintf
  4305  0446  0141               	movlb	1	; select bank1
  4306  0447  0837               	movf	sprintf@sp^(0+128),w
  4307  0448  0086               	movwf	6
  4308  0449  0187               	clrf	7
  4309  044A  0140               	movlb	0	; select bank0
  4310  044B  085E               	movf	??_sprintf,w
  4311  044C  0081               	movwf	1
  4312  044D  3001               	movlw	1
  4313  044E  00DE               	movwf	??_sprintf
  4314  044F  085E               	movf	??_sprintf,w
  4315  0450  0141               	movlb	1	; select bank1
  4316  0451  07B7               	addwf	sprintf@sp^(0+128),f
  4317  0452                     l3193:	
  4318                           ;doprnt.c: 1168: while(width > 0) {
  4319                           
  4320  0452  0141               	movlb	1	; select bank1
  4321  0453  0831               	movf	(sprintf@width+1)^(0+128),w
  4322  0454  3A80               	xorlw	128
  4323  0455  0140               	movlb	0	; select bank0
  4324  0456  00DE               	movwf	??_sprintf
  4325  0457  3080               	movlw	128
  4326  0458  025E               	subwf	??_sprintf,w
  4327  0459  1D03               	skipz
  4328  045A  2C5E               	goto	u4425
  4329  045B  3001               	movlw	1
  4330  045C  0141               	movlb	1	; select bank1
  4331  045D  0230               	subwf	sprintf@width^(0+128),w
  4332  045E                     u4425:	
  4333  045E  1C03               	btfss	3,0
  4334  045F  2CB1               	goto	l3217
  4335                           
  4336                           ;doprnt.c: 1169: ((*sp++ = ('0')));
  4337  0460  3030               	movlw	48
  4338  0461  0140               	movlb	0	; select bank0
  4339  0462  00DE               	movwf	??_sprintf
  4340  0463  0141               	movlb	1	; select bank1
  4341  0464  0837               	movf	sprintf@sp^(0+128),w
  4342  0465  0086               	movwf	6
  4343  0466  0187               	clrf	7
  4344  0467  0140               	movlb	0	; select bank0
  4345  0468  085E               	movf	??_sprintf,w
  4346  0469  0081               	movwf	1
  4347  046A  3001               	movlw	1
  4348  046B  00DE               	movwf	??_sprintf
  4349  046C  085E               	movf	??_sprintf,w
  4350  046D  0141               	movlb	1	; select bank1
  4351  046E  07B7               	addwf	sprintf@sp^(0+128),f
  4352                           
  4353                           ;doprnt.c: 1170: width--;
  4354  046F  30FF               	movlw	255
  4355  0470  07B0               	addwf	sprintf@width^(0+128),f
  4356  0471  30FF               	movlw	255
  4357  0472  3DB1               	addwfc	(sprintf@width+1)^(0+128),f
  4358  0473  2C52               	goto	l3193
  4359  0474                     l3195:	
  4360                           ;doprnt.c: 1175: {
  4361                           ;doprnt.c: 1180: while(width > 0) {
  4362                           
  4363                           ;doprnt.c: 1171: }
  4364                           ;doprnt.c: 1173: } else
  4365                           
  4366                           
  4367                           ;doprnt.c: 1181: ((*sp++ = (' ')));
  4368  0474  3020               	movlw	32
  4369  0475  0140               	movlb	0	; select bank0
  4370  0476  00DE               	movwf	??_sprintf
  4371  0477  0141               	movlb	1	; select bank1
  4372  0478  0837               	movf	sprintf@sp^(0+128),w
  4373  0479  0086               	movwf	6
  4374  047A  0187               	clrf	7
  4375  047B  0140               	movlb	0	; select bank0
  4376  047C  085E               	movf	??_sprintf,w
  4377  047D  0081               	movwf	1
  4378  047E  3001               	movlw	1
  4379  047F  00DE               	movwf	??_sprintf
  4380  0480  085E               	movf	??_sprintf,w
  4381  0481  0141               	movlb	1	; select bank1
  4382  0482  07B7               	addwf	sprintf@sp^(0+128),f
  4383                           
  4384                           ;doprnt.c: 1182: width--;
  4385  0483  30FF               	movlw	255
  4386  0484  07B0               	addwf	sprintf@width^(0+128),f
  4387  0485  30FF               	movlw	255
  4388  0486  3DB1               	addwfc	(sprintf@width+1)^(0+128),f
  4389  0487                     l3201:	
  4390  0487  0141               	movlb	1	; select bank1
  4391  0488  0831               	movf	(sprintf@width+1)^(0+128),w
  4392  0489  3A80               	xorlw	128
  4393  048A  0140               	movlb	0	; select bank0
  4394  048B  00DE               	movwf	??_sprintf
  4395  048C  3080               	movlw	128
  4396  048D  025E               	subwf	??_sprintf,w
  4397  048E  1D03               	skipz
  4398  048F  2C93               	goto	u4435
  4399  0490  3001               	movlw	1
  4400  0491  0141               	movlb	1	; select bank1
  4401  0492  0230               	subwf	sprintf@width^(0+128),w
  4402  0493                     u4435:	
  4403  0493  1803               	skipnc
  4404  0494  2C74               	goto	l3195
  4405                           
  4406                           ;doprnt.c: 1183: }
  4407                           ;doprnt.c: 1188: if(flag & 0x03)
  4408  0495  3003               	movlw	3
  4409  0496  0141               	movlb	1	; select bank1
  4410  0497  0526               	andwf	sprintf@flag^(0+128),w
  4411  0498  0140               	movlb	0	; select bank0
  4412  0499  00DE               	movwf	??_sprintf
  4413  049A  3000               	movlw	0
  4414  049B  0141               	movlb	1	; select bank1
  4415  049C  0527               	andwf	(sprintf@flag+1)^(0+128),w
  4416  049D  0140               	movlb	0	; select bank0
  4417  049E  00DF               	movwf	??_sprintf+1
  4418  049F  085E               	movf	??_sprintf,w
  4419  04A0  045F               	iorwf	??_sprintf+1,w
  4420  04A1  1903               	btfsc	3,2
  4421  04A2  2CB1               	goto	l3217
  4422                           
  4423                           ;doprnt.c: 1190: ((*sp++ = ('-')));
  4424  04A3  302D               	movlw	45
  4425  04A4                     L8:	
  4426  04A4  00DE               	movwf	??_sprintf
  4427  04A5  0141               	movlb	1	; select bank1
  4428  04A6  0837               	movf	sprintf@sp^(0+128),w
  4429  04A7  0086               	movwf	6
  4430  04A8  0187               	clrf	7
  4431  04A9  0140               	movlb	0	; select bank0
  4432  04AA  085E               	movf	??_sprintf,w
  4433  04AB  0081               	movwf	1
  4434  04AC  3001               	movlw	1
  4435  04AD  00DE               	movwf	??_sprintf
  4436  04AE  085E               	movf	??_sprintf,w
  4437  04AF  0141               	movlb	1	; select bank1
  4438  04B0  07B7               	addwf	sprintf@sp^(0+128),f
  4439  04B1                     l3217:	
  4440  04B1  30FF               	movlw	255
  4441  04B2  0140               	movlb	0	; select bank0
  4442  04B3  00DE               	movwf	??_sprintf
  4443  04B4  085E               	movf	??_sprintf,w
  4444  04B5  0141               	movlb	1	; select bank1
  4445  04B6  07B8               	addwf	sprintf@c^(0+128),f
  4446  04B7  0A38               	incf	sprintf@c^(0+128),w
  4447  04B8  1903               	btfsc	3,2
  4448  04B9  2D28               	goto	l3225
  4449                           
  4450                           ;doprnt.c: 1200: {
  4451                           ;doprnt.c: 1201: tmpval.vd = val/dpowers[c];
  4452                           
  4453                           ;doprnt.c: 1195: }
  4454                           ;doprnt.c: 1196: while(c--) {
  4455  04BA  0838               	movf	sprintf@c^(0+128),w
  4456  04BB  0140               	movlb	0	; select bank0
  4457  04BC  00DE               	movwf	??_sprintf
  4458  04BD  01DF               	clrf	??_sprintf+1
  4459  04BE  35DE               	lslf	??_sprintf,f
  4460  04BF  0DDF               	rlf	??_sprintf+1,f
  4461  04C0  35DE               	lslf	??_sprintf,f
  4462  04C1  0DDF               	rlf	??_sprintf+1,f
  4463  04C2  3033               	movlw	low (_dpowers| (0+32768))
  4464  04C3  075E               	addwf	??_sprintf,w
  4465  04C4  0084               	movwf	4
  4466  04C5  30A0               	movlw	high (_dpowers| (0+32768))
  4467  04C6  3D5F               	addwfc	??_sprintf+1,w
  4468  04C7  0085               	movwf	5
  4469  04C8  3F00               	moviw [0]fsr0
  4470  04C9  00F0               	movwf	___lldiv@divisor
  4471  04CA  3F01               	moviw [1]fsr0
  4472  04CB  00F1               	movwf	___lldiv@divisor+1
  4473  04CC  3F02               	moviw [2]fsr0
  4474  04CD  00F2               	movwf	___lldiv@divisor+2
  4475  04CE  3F03               	moviw [3]fsr0
  4476  04CF  00F3               	movwf	___lldiv@divisor+3
  4477  04D0  0141               	movlb	1	; select bank1
  4478  04D1  082B               	movf	(sprintf@val+3)^(0+128),w
  4479  04D2  00F7               	movwf	___lldiv@dividend+3
  4480  04D3  082A               	movf	(sprintf@val+2)^(0+128),w
  4481  04D4  00F6               	movwf	___lldiv@dividend+2
  4482  04D5  0829               	movf	(sprintf@val+1)^(0+128),w
  4483  04D6  00F5               	movwf	___lldiv@dividend+1
  4484  04D7  0828               	movf	sprintf@val^(0+128),w
  4485  04D8  00F4               	movwf	___lldiv@dividend
  4486  04D9  3190  20A1  3181   	fcall	___lldiv
  4487  04DC  0873               	movf	?___lldiv+3,w
  4488  04DD  0141               	movlb	1	; select bank1
  4489  04DE  00AF               	movwf	(sprintf@tmpval+3)^(0+128)
  4490  04DF  0872               	movf	?___lldiv+2,w
  4491  04E0  00AE               	movwf	(sprintf@tmpval+2)^(0+128)
  4492  04E1  0871               	movf	?___lldiv+1,w
  4493  04E2  00AD               	movwf	(sprintf@tmpval+1)^(0+128)
  4494  04E3  0870               	movf	?___lldiv,w
  4495  04E4  00AC               	movwf	sprintf@tmpval^(0+128)
  4496                           
  4497                           ;doprnt.c: 1202: tmpval.vd %= 10;
  4498  04E5  3000               	movlw	0
  4499  04E6  0140               	movlb	0	; select bank0
  4500  04E7  00A3               	movwf	___llmod@divisor+3
  4501  04E8  3000               	movlw	0
  4502  04E9  00A2               	movwf	___llmod@divisor+2
  4503  04EA  3000               	movlw	0
  4504  04EB  00A1               	movwf	___llmod@divisor+1
  4505  04EC  300A               	movlw	10
  4506  04ED  00A0               	movwf	___llmod@divisor
  4507  04EE  0141               	movlb	1	; select bank1
  4508  04EF  082F               	movf	(sprintf@tmpval+3)^(0+128),w
  4509  04F0  0140               	movlb	0	; select bank0
  4510  04F1  00A7               	movwf	___llmod@dividend+3
  4511  04F2  0141               	movlb	1	; select bank1
  4512  04F3  082E               	movf	(sprintf@tmpval+2)^(0+128),w
  4513  04F4  0140               	movlb	0	; select bank0
  4514  04F5  00A6               	movwf	___llmod@dividend+2
  4515  04F6  0141               	movlb	1	; select bank1
  4516  04F7  082D               	movf	(sprintf@tmpval+1)^(0+128),w
  4517  04F8  0140               	movlb	0	; select bank0
  4518  04F9  00A5               	movwf	___llmod@dividend+1
  4519  04FA  0141               	movlb	1	; select bank1
  4520  04FB  082C               	movf	sprintf@tmpval^(0+128),w
  4521  04FC  0140               	movlb	0	; select bank0
  4522  04FD  00A4               	movwf	___llmod@dividend
  4523  04FE  319F  27BD  3181   	fcall	___llmod
  4524  0501  0140               	movlb	0	; select bank0
  4525  0502  0823               	movf	?___llmod+3,w
  4526  0503  0141               	movlb	1	; select bank1
  4527  0504  00AF               	movwf	(sprintf@tmpval+3)^(0+128)
  4528  0505  0140               	movlb	0	; select bank0
  4529  0506  0822               	movf	?___llmod+2,w
  4530  0507  0141               	movlb	1	; select bank1
  4531  0508  00AE               	movwf	(sprintf@tmpval+2)^(0+128)
  4532  0509  0140               	movlb	0	; select bank0
  4533  050A  0821               	movf	?___llmod+1,w
  4534  050B  0141               	movlb	1	; select bank1
  4535  050C  00AD               	movwf	(sprintf@tmpval+1)^(0+128)
  4536  050D  0140               	movlb	0	; select bank0
  4537  050E  0820               	movf	?___llmod,w
  4538  050F  0141               	movlb	1	; select bank1
  4539  0510  00AC               	movwf	sprintf@tmpval^(0+128)
  4540                           
  4541                           ;doprnt.c: 1203: ((*sp++ = ('0' + tmpval.vd)));
  4542  0511  082C               	movf	sprintf@tmpval^(0+128),w
  4543  0512  3E30               	addlw	48
  4544  0513  0140               	movlb	0	; select bank0
  4545  0514  2CA4               	goto	L8
  4546  0515                     l3219:	
  4547                           ;doprnt.c: 1204: }
  4548                           ;doprnt.c: 1206: }
  4549                           ;doprnt.c: 1207: while(exp > 0) {
  4550                           
  4551                           
  4552                           ;doprnt.c: 1208: ((*sp++ = ('0')));
  4553  0515  3030               	movlw	48
  4554  0516  0140               	movlb	0	; select bank0
  4555  0517  00DE               	movwf	??_sprintf
  4556  0518  0141               	movlb	1	; select bank1
  4557  0519  0837               	movf	sprintf@sp^(0+128),w
  4558  051A  0086               	movwf	6
  4559  051B  0187               	clrf	7
  4560  051C  0140               	movlb	0	; select bank0
  4561  051D  085E               	movf	??_sprintf,w
  4562  051E  0081               	movwf	1
  4563  051F  3001               	movlw	1
  4564  0520  00DE               	movwf	??_sprintf
  4565  0521  085E               	movf	??_sprintf,w
  4566  0522  0141               	movlb	1	; select bank1
  4567  0523  07B7               	addwf	sprintf@sp^(0+128),f
  4568                           
  4569                           ;doprnt.c: 1209: exp--;
  4570  0524  30FF               	movlw	255
  4571  0525  07B2               	addwf	sprintf@exp^(0+128),f
  4572  0526  30FF               	movlw	255
  4573  0527  3DB3               	addwfc	(sprintf@exp+1)^(0+128),f
  4574  0528                     l3225:	
  4575  0528  0833               	movf	(sprintf@exp+1)^(0+128),w
  4576  0529  3A80               	xorlw	128
  4577  052A  0140               	movlb	0	; select bank0
  4578  052B  00DE               	movwf	??_sprintf
  4579  052C  3080               	movlw	128
  4580  052D  025E               	subwf	??_sprintf,w
  4581  052E  1D03               	skipz
  4582  052F  2D33               	goto	u4465
  4583  0530  3001               	movlw	1
  4584  0531  0141               	movlb	1	; select bank1
  4585  0532  0232               	subwf	sprintf@exp^(0+128),w
  4586  0533                     u4465:	
  4587  0533  1803               	skipnc
  4588  0534  2D15               	goto	l3219
  4589                           
  4590                           ;doprnt.c: 1210: }
  4591                           ;doprnt.c: 1211: if(prec > (int)((sizeof dpowers/sizeof dpowers[0])-2))
  4592  0535  0141               	movlb	1	; select bank1
  4593  0536  0825               	movf	(sprintf@prec+1)^(0+128),w
  4594  0537  3A80               	xorlw	128
  4595  0538  0140               	movlb	0	; select bank0
  4596  0539  00DE               	movwf	??_sprintf
  4597  053A  3080               	movlw	128
  4598  053B  025E               	subwf	??_sprintf,w
  4599  053C  1D03               	skipz
  4600  053D  2D41               	goto	u4475
  4601  053E  3009               	movlw	9
  4602  053F  0141               	movlb	1	; select bank1
  4603  0540  0224               	subwf	sprintf@prec^(0+128),w
  4604  0541                     u4475:	
  4605  0541  1C03               	skipc
  4606  0542  2D45               	goto	l3231
  4607                           
  4608                           ;doprnt.c: 1212: c = (sizeof dpowers/sizeof dpowers[0])-2;
  4609  0543  3008               	movlw	8
  4610  0544  2D47               	goto	L5
  4611  0545                     l3231:	
  4612                           
  4613                           ;doprnt.c: 1213: else
  4614                           ;doprnt.c: 1214: c = prec;
  4615  0545  0141               	movlb	1	; select bank1
  4616  0546  0824               	movf	sprintf@prec^(0+128),w
  4617  0547                     L5:	
  4618  0547  0140               	movlb	0	; select bank0
  4619  0548  00DE               	movwf	??_sprintf
  4620  0549  085E               	movf	??_sprintf,w
  4621  054A  0141               	movlb	1	; select bank1
  4622  054B  00B8               	movwf	sprintf@c^(0+128)
  4623                           
  4624                           ;doprnt.c: 1215: prec -= c;
  4625  054C  0838               	movf	sprintf@c^(0+128),w
  4626  054D  0140               	movlb	0	; select bank0
  4627  054E  00DE               	movwf	??_sprintf
  4628  054F  01DF               	clrf	??_sprintf+1
  4629  0550  1BDE               	btfsc	??_sprintf,7
  4630  0551  03DF               	decf	??_sprintf+1,f
  4631  0552  085E               	movf	??_sprintf,w
  4632  0553  0141               	movlb	1	; select bank1
  4633  0554  02A4               	subwf	sprintf@prec^(0+128),f
  4634  0555  0140               	movlb	0	; select bank0
  4635  0556  085F               	movf	??_sprintf+1,w
  4636  0557  0141               	movlb	1	; select bank1
  4637  0558  3BA5               	subwfb	(sprintf@prec+1)^(0+128),f
  4638                           
  4639                           ;doprnt.c: 1219: if(c)
  4640  0559  0838               	movf	sprintf@c^(0+128),w
  4641  055A  1903               	btfsc	3,2
  4642  055B  2D6B               	goto	l3239
  4643                           
  4644                           ;doprnt.c: 1221: ((*sp++ = ('.')));
  4645  055C  302E               	movlw	46
  4646  055D  0140               	movlb	0	; select bank0
  4647  055E  00DE               	movwf	??_sprintf
  4648  055F  0141               	movlb	1	; select bank1
  4649  0560  0837               	movf	sprintf@sp^(0+128),w
  4650  0561  0086               	movwf	6
  4651  0562  0187               	clrf	7
  4652  0563  0140               	movlb	0	; select bank0
  4653  0564  085E               	movf	??_sprintf,w
  4654  0565  0081               	movwf	1
  4655  0566  3001               	movlw	1
  4656  0567  00DE               	movwf	??_sprintf
  4657  0568  085E               	movf	??_sprintf,w
  4658  0569  0141               	movlb	1	; select bank1
  4659  056A  07B7               	addwf	sprintf@sp^(0+128),f
  4660  056B                     l3239:	
  4661                           
  4662                           ;doprnt.c: 1227: val = (long)(fval * scale(c));
  4663  056B  0838               	movf	sprintf@c^(0+128),w
  4664  056C  3188  20A2  3181   	fcall	_scale
  4665  056F  0140               	movlb	0	; select bank0
  4666  0570  0838               	movf	?_scale,w
  4667  0571  0141               	movlb	1	; select bank1
  4668  0572  00A0               	movwf	_sprintf$945^(0+128)
  4669  0573  0140               	movlb	0	; select bank0
  4670  0574  0839               	movf	?_scale+1,w
  4671  0575  0141               	movlb	1	; select bank1
  4672  0576  00A1               	movwf	(_sprintf$945+1)^(0+128)
  4673  0577  0140               	movlb	0	; select bank0
  4674  0578  083A               	movf	?_scale+2,w
  4675  0579  0141               	movlb	1	; select bank1
  4676  057A  00A2               	movwf	(_sprintf$945+2)^(0+128)
  4677                           
  4678                           ;doprnt.c: 1227: val = (long)(fval * scale(c));
  4679  057B  0820               	movf	_sprintf$945^(0+128),w
  4680  057C  0140               	movlb	0	; select bank0
  4681  057D  00AB               	movwf	___ftmul@f2
  4682  057E  0141               	movlb	1	; select bank1
  4683  057F  0821               	movf	(_sprintf$945+1)^(0+128),w
  4684  0580  0140               	movlb	0	; select bank0
  4685  0581  00AC               	movwf	___ftmul@f2+1
  4686  0582  0141               	movlb	1	; select bank1
  4687  0583  0822               	movf	(_sprintf$945+2)^(0+128),w
  4688  0584  0140               	movlb	0	; select bank0
  4689  0585  00AD               	movwf	___ftmul@f2+2
  4690  0586  0141               	movlb	1	; select bank1
  4691  0587  0834               	movf	sprintf@fval^(0+128),w
  4692  0588  0140               	movlb	0	; select bank0
  4693  0589  00A8               	movwf	___ftmul@f1
  4694  058A  0141               	movlb	1	; select bank1
  4695  058B  0835               	movf	(sprintf@fval+1)^(0+128),w
  4696  058C  0140               	movlb	0	; select bank0
  4697  058D  00A9               	movwf	___ftmul@f1+1
  4698  058E  0141               	movlb	1	; select bank1
  4699  058F  0836               	movf	(sprintf@fval+2)^(0+128),w
  4700  0590  0140               	movlb	0	; select bank0
  4701  0591  00AA               	movwf	___ftmul@f1+2
  4702  0592  3194  2414  3181   	fcall	___ftmul
  4703  0595  0140               	movlb	0	; select bank0
  4704  0596  0828               	movf	?___ftmul,w
  4705  0597  00C1               	movwf	___fttol@f1
  4706  0598  0829               	movf	?___ftmul+1,w
  4707  0599  00C2               	movwf	___fttol@f1+1
  4708  059A  082A               	movf	?___ftmul+2,w
  4709  059B  00C3               	movwf	___fttol@f1+2
  4710  059C  3191  21A9  3181   	fcall	___fttol
  4711  059F  0140               	movlb	0	; select bank0
  4712  05A0  0844               	movf	?___fttol+3,w
  4713  05A1  0141               	movlb	1	; select bank1
  4714  05A2  00AB               	movwf	(sprintf@val+3)^(0+128)
  4715  05A3  0140               	movlb	0	; select bank0
  4716  05A4  0843               	movf	?___fttol+2,w
  4717  05A5  0141               	movlb	1	; select bank1
  4718  05A6  00AA               	movwf	(sprintf@val+2)^(0+128)
  4719  05A7  0140               	movlb	0	; select bank0
  4720  05A8  0842               	movf	?___fttol+1,w
  4721  05A9  0141               	movlb	1	; select bank1
  4722  05AA  00A9               	movwf	(sprintf@val+1)^(0+128)
  4723  05AB  0140               	movlb	0	; select bank0
  4724  05AC  0841               	movf	?___fttol,w
  4725  05AD                     L6:	
  4726  05AD  0141               	movlb	1	; select bank1
  4727  05AE  00A8               	movwf	sprintf@val^(0+128)
  4728  05AF  30FF               	movlw	255
  4729  05B0  0140               	movlb	0	; select bank0
  4730  05B1  00DE               	movwf	??_sprintf
  4731  05B2  085E               	movf	??_sprintf,w
  4732  05B3  0141               	movlb	1	; select bank1
  4733  05B4  07B8               	addwf	sprintf@c^(0+128),f
  4734  05B5  0A38               	incf	sprintf@c^(0+128),w
  4735  05B6  1903               	btfsc	3,2
  4736  05B7  2E6A               	goto	l3261
  4737                           
  4738                           ;doprnt.c: 1229: tmpval.vd = val/dpowers[c];
  4739                           
  4740                           ;doprnt.c: 1228: while(c--) {
  4741  05B8  0838               	movf	sprintf@c^(0+128),w
  4742  05B9  0140               	movlb	0	; select bank0
  4743  05BA  00DE               	movwf	??_sprintf
  4744  05BB  01DF               	clrf	??_sprintf+1
  4745  05BC  35DE               	lslf	??_sprintf,f
  4746  05BD  0DDF               	rlf	??_sprintf+1,f
  4747  05BE  35DE               	lslf	??_sprintf,f
  4748  05BF  0DDF               	rlf	??_sprintf+1,f
  4749  05C0  3033               	movlw	low (_dpowers| (0+32768))
  4750  05C1  075E               	addwf	??_sprintf,w
  4751  05C2  0084               	movwf	4
  4752  05C3  30A0               	movlw	high (_dpowers| (0+32768))
  4753  05C4  3D5F               	addwfc	??_sprintf+1,w
  4754  05C5  0085               	movwf	5
  4755  05C6  3F00               	moviw [0]fsr0
  4756  05C7  00F0               	movwf	___lldiv@divisor
  4757  05C8  3F01               	moviw [1]fsr0
  4758  05C9  00F1               	movwf	___lldiv@divisor+1
  4759  05CA  3F02               	moviw [2]fsr0
  4760  05CB  00F2               	movwf	___lldiv@divisor+2
  4761  05CC  3F03               	moviw [3]fsr0
  4762  05CD  00F3               	movwf	___lldiv@divisor+3
  4763  05CE  0141               	movlb	1	; select bank1
  4764  05CF  082B               	movf	(sprintf@val+3)^(0+128),w
  4765  05D0  00F7               	movwf	___lldiv@dividend+3
  4766  05D1  082A               	movf	(sprintf@val+2)^(0+128),w
  4767  05D2  00F6               	movwf	___lldiv@dividend+2
  4768  05D3  0829               	movf	(sprintf@val+1)^(0+128),w
  4769  05D4  00F5               	movwf	___lldiv@dividend+1
  4770  05D5  0828               	movf	sprintf@val^(0+128),w
  4771  05D6  00F4               	movwf	___lldiv@dividend
  4772  05D7  3190  20A1  3181   	fcall	___lldiv
  4773  05DA  0873               	movf	?___lldiv+3,w
  4774  05DB  0141               	movlb	1	; select bank1
  4775  05DC  00AF               	movwf	(sprintf@tmpval+3)^(0+128)
  4776  05DD  0872               	movf	?___lldiv+2,w
  4777  05DE  00AE               	movwf	(sprintf@tmpval+2)^(0+128)
  4778  05DF  0871               	movf	?___lldiv+1,w
  4779  05E0  00AD               	movwf	(sprintf@tmpval+1)^(0+128)
  4780  05E1  0870               	movf	?___lldiv,w
  4781  05E2  00AC               	movwf	sprintf@tmpval^(0+128)
  4782                           
  4783                           ;doprnt.c: 1230: tmpval.vd %= 10;
  4784  05E3  3000               	movlw	0
  4785  05E4  0140               	movlb	0	; select bank0
  4786  05E5  00A3               	movwf	___llmod@divisor+3
  4787  05E6  3000               	movlw	0
  4788  05E7  00A2               	movwf	___llmod@divisor+2
  4789  05E8  3000               	movlw	0
  4790  05E9  00A1               	movwf	___llmod@divisor+1
  4791  05EA  300A               	movlw	10
  4792  05EB  00A0               	movwf	___llmod@divisor
  4793  05EC  0141               	movlb	1	; select bank1
  4794  05ED  082F               	movf	(sprintf@tmpval+3)^(0+128),w
  4795  05EE  0140               	movlb	0	; select bank0
  4796  05EF  00A7               	movwf	___llmod@dividend+3
  4797  05F0  0141               	movlb	1	; select bank1
  4798  05F1  082E               	movf	(sprintf@tmpval+2)^(0+128),w
  4799  05F2  0140               	movlb	0	; select bank0
  4800  05F3  00A6               	movwf	___llmod@dividend+2
  4801  05F4  0141               	movlb	1	; select bank1
  4802  05F5  082D               	movf	(sprintf@tmpval+1)^(0+128),w
  4803  05F6  0140               	movlb	0	; select bank0
  4804  05F7  00A5               	movwf	___llmod@dividend+1
  4805  05F8  0141               	movlb	1	; select bank1
  4806  05F9  082C               	movf	sprintf@tmpval^(0+128),w
  4807  05FA  0140               	movlb	0	; select bank0
  4808  05FB  00A4               	movwf	___llmod@dividend
  4809  05FC  319F  27BD  3181   	fcall	___llmod
  4810  05FF  0140               	movlb	0	; select bank0
  4811  0600  0823               	movf	?___llmod+3,w
  4812  0601  0141               	movlb	1	; select bank1
  4813  0602  00AF               	movwf	(sprintf@tmpval+3)^(0+128)
  4814  0603  0140               	movlb	0	; select bank0
  4815  0604  0822               	movf	?___llmod+2,w
  4816  0605  0141               	movlb	1	; select bank1
  4817  0606  00AE               	movwf	(sprintf@tmpval+2)^(0+128)
  4818  0607  0140               	movlb	0	; select bank0
  4819  0608  0821               	movf	?___llmod+1,w
  4820  0609  0141               	movlb	1	; select bank1
  4821  060A  00AD               	movwf	(sprintf@tmpval+1)^(0+128)
  4822  060B  0140               	movlb	0	; select bank0
  4823  060C  0820               	movf	?___llmod,w
  4824  060D  0141               	movlb	1	; select bank1
  4825  060E  00AC               	movwf	sprintf@tmpval^(0+128)
  4826                           
  4827                           ;doprnt.c: 1231: ((*sp++ = ('0' + tmpval.vd)));
  4828  060F  082C               	movf	sprintf@tmpval^(0+128),w
  4829  0610  3E30               	addlw	48
  4830  0611  0140               	movlb	0	; select bank0
  4831  0612  00DE               	movwf	??_sprintf
  4832  0613  0141               	movlb	1	; select bank1
  4833  0614  0837               	movf	sprintf@sp^(0+128),w
  4834  0615  0086               	movwf	6
  4835  0616  0187               	clrf	7
  4836  0617  0140               	movlb	0	; select bank0
  4837  0618  085E               	movf	??_sprintf,w
  4838  0619  0081               	movwf	1
  4839  061A  3001               	movlw	1
  4840  061B  00DE               	movwf	??_sprintf
  4841  061C  085E               	movf	??_sprintf,w
  4842  061D  0141               	movlb	1	; select bank1
  4843  061E  07B7               	addwf	sprintf@sp^(0+128),f
  4844                           
  4845                           ;doprnt.c: 1232: val %= dpowers[c];
  4846  061F  0838               	movf	sprintf@c^(0+128),w
  4847  0620  0140               	movlb	0	; select bank0
  4848  0621  00DE               	movwf	??_sprintf
  4849  0622  01DF               	clrf	??_sprintf+1
  4850  0623  35DE               	lslf	??_sprintf,f
  4851  0624  0DDF               	rlf	??_sprintf+1,f
  4852  0625  35DE               	lslf	??_sprintf,f
  4853  0626  0DDF               	rlf	??_sprintf+1,f
  4854  0627  3033               	movlw	low (_dpowers| (0+32768))
  4855  0628  075E               	addwf	??_sprintf,w
  4856  0629  0084               	movwf	4
  4857  062A  30A0               	movlw	high (_dpowers| (0+32768))
  4858  062B  3D5F               	addwfc	??_sprintf+1,w
  4859  062C  0085               	movwf	5
  4860  062D  3F00               	moviw [0]fsr0
  4861  062E  00A0               	movwf	___llmod@divisor
  4862  062F  3F01               	moviw [1]fsr0
  4863  0630  00A1               	movwf	___llmod@divisor+1
  4864  0631  3F02               	moviw [2]fsr0
  4865  0632  00A2               	movwf	___llmod@divisor+2
  4866  0633  3F03               	moviw [3]fsr0
  4867  0634  00A3               	movwf	___llmod@divisor+3
  4868  0635  0141               	movlb	1	; select bank1
  4869  0636  082B               	movf	(sprintf@val+3)^(0+128),w
  4870  0637  0140               	movlb	0	; select bank0
  4871  0638  00A7               	movwf	___llmod@dividend+3
  4872  0639  0141               	movlb	1	; select bank1
  4873  063A  082A               	movf	(sprintf@val+2)^(0+128),w
  4874  063B  0140               	movlb	0	; select bank0
  4875  063C  00A6               	movwf	___llmod@dividend+2
  4876  063D  0141               	movlb	1	; select bank1
  4877  063E  0829               	movf	(sprintf@val+1)^(0+128),w
  4878  063F  0140               	movlb	0	; select bank0
  4879  0640  00A5               	movwf	___llmod@dividend+1
  4880  0641  0141               	movlb	1	; select bank1
  4881  0642  0828               	movf	sprintf@val^(0+128),w
  4882  0643  0140               	movlb	0	; select bank0
  4883  0644  00A4               	movwf	___llmod@dividend
  4884  0645  319F  27BD  3181   	fcall	___llmod
  4885  0648  0140               	movlb	0	; select bank0
  4886  0649  0823               	movf	?___llmod+3,w
  4887  064A  0141               	movlb	1	; select bank1
  4888  064B  00AB               	movwf	(sprintf@val+3)^(0+128)
  4889  064C  0140               	movlb	0	; select bank0
  4890  064D  0822               	movf	?___llmod+2,w
  4891  064E  0141               	movlb	1	; select bank1
  4892  064F  00AA               	movwf	(sprintf@val+2)^(0+128)
  4893  0650  0140               	movlb	0	; select bank0
  4894  0651  0821               	movf	?___llmod+1,w
  4895  0652  0141               	movlb	1	; select bank1
  4896  0653  00A9               	movwf	(sprintf@val+1)^(0+128)
  4897  0654  0140               	movlb	0	; select bank0
  4898  0655  0820               	movf	?___llmod,w
  4899  0656  2DAD               	goto	L6
  4900  0657                     l3255:	
  4901                           ;doprnt.c: 1233: }
  4902                           ;doprnt.c: 1235: while(prec) {
  4903                           
  4904                           
  4905                           ;doprnt.c: 1236: ((*sp++ = ('0')));
  4906  0657  3030               	movlw	48
  4907  0658  0140               	movlb	0	; select bank0
  4908  0659  00DE               	movwf	??_sprintf
  4909  065A  0141               	movlb	1	; select bank1
  4910  065B  0837               	movf	sprintf@sp^(0+128),w
  4911  065C  0086               	movwf	6
  4912  065D  0187               	clrf	7
  4913  065E  0140               	movlb	0	; select bank0
  4914  065F  085E               	movf	??_sprintf,w
  4915  0660  0081               	movwf	1
  4916  0661  3001               	movlw	1
  4917  0662  00DE               	movwf	??_sprintf
  4918  0663  085E               	movf	??_sprintf,w
  4919  0664  0141               	movlb	1	; select bank1
  4920  0665  07B7               	addwf	sprintf@sp^(0+128),f
  4921                           
  4922                           ;doprnt.c: 1237: prec--;
  4923  0666  30FF               	movlw	255
  4924  0667  07A4               	addwf	sprintf@prec^(0+128),f
  4925  0668  30FF               	movlw	255
  4926  0669  3DA5               	addwfc	(sprintf@prec+1)^(0+128),f
  4927  066A                     l3261:	
  4928  066A  0824               	movf	sprintf@prec^(0+128),w
  4929  066B  0425               	iorwf	(sprintf@prec+1)^(0+128),w
  4930  066C  1903               	btfsc	3,2
  4931  066D  290F               	goto	l3335
  4932  066E  2E57               	goto	l3255
  4933  066F                     l3263:	
  4934                           ;doprnt.c: 1238: }
  4935                           ;doprnt.c: 1245: continue;
  4936                           
  4937                           
  4938                           ;doprnt.c: 1246: }
  4939                           ;doprnt.c: 1253: {
  4940                           ;doprnt.c: 1259: val = (long)(*(int *)__va_arg((*(int **)ap), (int)0));
  4941  066F  0141               	movlb	1	; select bank1
  4942  0670  0823               	movf	sprintf@ap^(0+128),w
  4943  0671  0086               	movwf	6
  4944  0672  0187               	clrf	7
  4945  0673  3F40               	moviw [0]fsr1
  4946  0674  0140               	movlb	0	; select bank0
  4947  0675  00DE               	movwf	??_sprintf
  4948  0676  3F41               	moviw [1]fsr1
  4949  0677  00DF               	movwf	??_sprintf+1
  4950  0678  085E               	movf	??_sprintf,w
  4951  0679  0141               	movlb	1	; select bank1
  4952  067A  00A8               	movwf	sprintf@val^(0+128)
  4953  067B  0140               	movlb	0	; select bank0
  4954  067C  085F               	movf	??_sprintf+1,w
  4955  067D  0141               	movlb	1	; select bank1
  4956  067E  00A9               	movwf	(sprintf@val+1)^(0+128)
  4957  067F  0D89               	rlf	9,f
  4958  0680  3B89               	subwfb	9,f
  4959  0681  0989               	comf	9,f
  4960  0682  00AA               	movwf	(sprintf@val+2)^(0+128)
  4961  0683  00AB               	movwf	(sprintf@val+3)^(0+128)
  4962  0684  3002               	movlw	2
  4963  0685  0140               	movlb	0	; select bank0
  4964  0686  00DE               	movwf	??_sprintf
  4965  0687  085E               	movf	??_sprintf,w
  4966  0688  0141               	movlb	1	; select bank1
  4967  0689  07A3               	addwf	sprintf@ap^(0+128),f
  4968                           
  4969                           ;doprnt.c: 1261: if((long)val < 0) {
  4970  068A  1FAB               	btfss	(sprintf@val+3)^(0+128),7
  4971  068B  2E9B               	goto	l3273
  4972                           
  4973                           ;doprnt.c: 1262: flag |= 0x03;
  4974  068C  3003               	movlw	3
  4975  068D  04A6               	iorwf	sprintf@flag^(0+128),f
  4976  068E  3000               	movlw	0
  4977  068F  04A7               	iorwf	(sprintf@flag+1)^(0+128),f
  4978                           
  4979                           ;doprnt.c: 1263: val = -val;
  4980  0690  09A8               	comf	sprintf@val^(0+128),f
  4981  0691  09A9               	comf	(sprintf@val+1)^(0+128),f
  4982  0692  09AA               	comf	(sprintf@val+2)^(0+128),f
  4983  0693  09AB               	comf	(sprintf@val+3)^(0+128),f
  4984  0694  0AA8               	incf	sprintf@val^(0+128),f
  4985  0695  1903               	skipnz
  4986  0696  0AA9               	incf	(sprintf@val+1)^(0+128),f
  4987  0697  1903               	skipnz
  4988  0698  0AAA               	incf	(sprintf@val+2)^(0+128),f
  4989  0699  1903               	skipnz
  4990  069A  0AAB               	incf	(sprintf@val+3)^(0+128),f
  4991  069B                     l3273:	
  4992                           
  4993                           ;doprnt.c: 1264: }
  4994                           ;doprnt.c: 1266: }
  4995                           ;doprnt.c: 1305: for(c = 1 ; c != sizeof dpowers/sizeof dpowers[0] ; c++)
  4996  069B  01B8               	clrf	sprintf@c^(0+128)
  4997  069C  0AB8               	incf	sprintf@c^(0+128),f
  4998  069D  300A               	movlw	10
  4999  069E  0638               	xorwf	sprintf@c^(0+128),w
  5000  069F  1903               	btfsc	3,2
  5001  06A0  2ED8               	goto	l3285
  5002  06A1                     l3279:	
  5003                           
  5004                           ;doprnt.c: 1306: if(val < dpowers[c])
  5005  06A1  0838               	movf	sprintf@c^(0+128),w
  5006  06A2  0140               	movlb	0	; select bank0
  5007  06A3  00DE               	movwf	??_sprintf
  5008  06A4  01DF               	clrf	??_sprintf+1
  5009  06A5  35DE               	lslf	??_sprintf,f
  5010  06A6  0DDF               	rlf	??_sprintf+1,f
  5011  06A7  35DE               	lslf	??_sprintf,f
  5012  06A8  0DDF               	rlf	??_sprintf+1,f
  5013  06A9  3033               	movlw	low (_dpowers| (0+32768))
  5014  06AA  075E               	addwf	??_sprintf,w
  5015  06AB  0084               	movwf	4
  5016  06AC  30A0               	movlw	high (_dpowers| (0+32768))
  5017  06AD  3D5F               	addwfc	??_sprintf+1,w
  5018  06AE  0085               	movwf	5
  5019  06AF  3F00               	moviw [0]fsr0
  5020  06B0  00E0               	movwf	??_sprintf+2
  5021  06B1  3F01               	moviw [1]fsr0
  5022  06B2  00E1               	movwf	??_sprintf+3
  5023  06B3  3F02               	moviw [2]fsr0
  5024  06B4  00E2               	movwf	??_sprintf+4
  5025  06B5  3F03               	moviw [3]fsr0
  5026  06B6  00E3               	movwf	??_sprintf+5
  5027  06B7  0863               	movf	??_sprintf+5,w
  5028  06B8  0141               	movlb	1	; select bank1
  5029  06B9  022B               	subwf	(sprintf@val+3)^(0+128),w
  5030  06BA  1D03               	skipz
  5031  06BB  2ECC               	goto	u4535
  5032  06BC  0140               	movlb	0	; select bank0
  5033  06BD  0862               	movf	??_sprintf+4,w
  5034  06BE  0141               	movlb	1	; select bank1
  5035  06BF  022A               	subwf	(sprintf@val+2)^(0+128),w
  5036  06C0  1D03               	skipz
  5037  06C1  2ECC               	goto	u4535
  5038  06C2  0140               	movlb	0	; select bank0
  5039  06C3  0861               	movf	??_sprintf+3,w
  5040  06C4  0141               	movlb	1	; select bank1
  5041  06C5  0229               	subwf	(sprintf@val+1)^(0+128),w
  5042  06C6  1D03               	skipz
  5043  06C7  2ECC               	goto	u4535
  5044  06C8  0140               	movlb	0	; select bank0
  5045  06C9  0860               	movf	??_sprintf+2,w
  5046  06CA  0141               	movlb	1	; select bank1
  5047  06CB  0228               	subwf	sprintf@val^(0+128),w
  5048  06CC                     u4535:	
  5049  06CC  1C03               	btfss	3,0
  5050  06CD  2ED8               	goto	l3285
  5051                           
  5052                           ;doprnt.c: 1307: break;
  5053  06CE  3001               	movlw	1
  5054  06CF  0140               	movlb	0	; select bank0
  5055  06D0  00DE               	movwf	??_sprintf
  5056  06D1  085E               	movf	??_sprintf,w
  5057  06D2  0141               	movlb	1	; select bank1
  5058  06D3  07B8               	addwf	sprintf@c^(0+128),f
  5059  06D4  300A               	movlw	10
  5060  06D5  0638               	xorwf	sprintf@c^(0+128),w
  5061  06D6  1D03               	btfss	3,2
  5062  06D7  2EA1               	goto	l3279
  5063  06D8                     l3285:	
  5064                           
  5065                           ;doprnt.c: 1345: if(width && flag & 0x03)
  5066  06D8  0830               	movf	sprintf@width^(0+128),w
  5067  06D9  0431               	iorwf	(sprintf@width+1)^(0+128),w
  5068  06DA  1903               	btfsc	3,2
  5069  06DB  2EEE               	goto	l323
  5070  06DC  3003               	movlw	3
  5071  06DD  0526               	andwf	sprintf@flag^(0+128),w
  5072  06DE  0140               	movlb	0	; select bank0
  5073  06DF  00DE               	movwf	??_sprintf
  5074  06E0  3000               	movlw	0
  5075  06E1  0141               	movlb	1	; select bank1
  5076  06E2  0527               	andwf	(sprintf@flag+1)^(0+128),w
  5077  06E3  0140               	movlb	0	; select bank0
  5078  06E4  00DF               	movwf	??_sprintf+1
  5079  06E5  085E               	movf	??_sprintf,w
  5080  06E6  045F               	iorwf	??_sprintf+1,w
  5081  06E7  1903               	btfsc	3,2
  5082  06E8  2EEE               	goto	l323
  5083                           
  5084                           ;doprnt.c: 1346: width--;
  5085  06E9  30FF               	movlw	255
  5086  06EA  0141               	movlb	1	; select bank1
  5087  06EB  07B0               	addwf	sprintf@width^(0+128),f
  5088  06EC  30FF               	movlw	255
  5089  06ED  3DB1               	addwfc	(sprintf@width+1)^(0+128),f
  5090  06EE                     l323:	
  5091                           
  5092                           ;doprnt.c: 1381: if(width > c)
  5093  06EE  0141               	movlb	1	; select bank1
  5094  06EF  0838               	movf	sprintf@c^(0+128),w
  5095  06F0  0140               	movlb	0	; select bank0
  5096  06F1  00DE               	movwf	??_sprintf
  5097  06F2  01DF               	clrf	??_sprintf+1
  5098  06F3  1BDE               	btfsc	??_sprintf,7
  5099  06F4  03DF               	decf	??_sprintf+1,f
  5100  06F5  085F               	movf	??_sprintf+1,w
  5101  06F6  3A80               	xorlw	128
  5102  06F7  00E0               	movwf	??_sprintf+2
  5103  06F8  0141               	movlb	1	; select bank1
  5104  06F9  0831               	movf	(sprintf@width+1)^(0+128),w
  5105  06FA  3A80               	xorlw	128
  5106  06FB  0140               	movlb	0	; select bank0
  5107  06FC  0260               	subwf	??_sprintf+2,w
  5108  06FD  1D03               	skipz
  5109  06FE  2F03               	goto	u4575
  5110  06FF  0141               	movlb	1	; select bank1
  5111  0700  0830               	movf	sprintf@width^(0+128),w
  5112  0701  0140               	movlb	0	; select bank0
  5113  0702  025E               	subwf	??_sprintf,w
  5114  0703                     u4575:	
  5115  0703  1803               	skipnc
  5116  0704  2F14               	goto	l3293
  5117                           
  5118                           ;doprnt.c: 1382: width -= c;
  5119  0705  0141               	movlb	1	; select bank1
  5120  0706  0838               	movf	sprintf@c^(0+128),w
  5121  0707  0140               	movlb	0	; select bank0
  5122  0708  00DE               	movwf	??_sprintf
  5123  0709  01DF               	clrf	??_sprintf+1
  5124  070A  1BDE               	btfsc	??_sprintf,7
  5125  070B  03DF               	decf	??_sprintf+1,f
  5126  070C  085E               	movf	??_sprintf,w
  5127  070D  0141               	movlb	1	; select bank1
  5128  070E  02B0               	subwf	sprintf@width^(0+128),f
  5129  070F  0140               	movlb	0	; select bank0
  5130  0710  085F               	movf	??_sprintf+1,w
  5131  0711  0141               	movlb	1	; select bank1
  5132  0712  3BB1               	subwfb	(sprintf@width+1)^(0+128),f
  5133  0713  2F17               	goto	l3295
  5134  0714                     l3293:	
  5135                           
  5136                           ;doprnt.c: 1383: else
  5137                           ;doprnt.c: 1384: width = 0;
  5138  0714  0141               	movlb	1	; select bank1
  5139  0715  01B0               	clrf	sprintf@width^(0+128)
  5140  0716  01B1               	clrf	(sprintf@width+1)^(0+128)
  5141  0717                     l3295:	
  5142                           
  5143                           ;doprnt.c: 1387: if(flag & 0x04) {
  5144  0717  1D26               	btfss	sprintf@flag^(0+128),2
  5145  0718  2F4D               	goto	l3311
  5146                           
  5147                           ;doprnt.c: 1392: if(flag & 0x03)
  5148  0719  3003               	movlw	3
  5149  071A  0526               	andwf	sprintf@flag^(0+128),w
  5150  071B  0140               	movlb	0	; select bank0
  5151  071C  00DE               	movwf	??_sprintf
  5152  071D  3000               	movlw	0
  5153  071E  0141               	movlb	1	; select bank1
  5154  071F  0527               	andwf	(sprintf@flag+1)^(0+128),w
  5155  0720  0140               	movlb	0	; select bank0
  5156  0721  00DF               	movwf	??_sprintf+1
  5157  0722  085E               	movf	??_sprintf,w
  5158  0723  045F               	iorwf	??_sprintf+1,w
  5159  0724  1903               	btfsc	3,2
  5160  0725  2F34               	goto	l3303
  5161                           
  5162                           ;doprnt.c: 1393: ((*sp++ = ('-')));
  5163  0726  302D               	movlw	45
  5164  0727  00DE               	movwf	??_sprintf
  5165  0728  0141               	movlb	1	; select bank1
  5166  0729  0837               	movf	sprintf@sp^(0+128),w
  5167  072A  0086               	movwf	6
  5168  072B  0187               	clrf	7
  5169  072C  0140               	movlb	0	; select bank0
  5170  072D  085E               	movf	??_sprintf,w
  5171  072E  0081               	movwf	1
  5172  072F  3001               	movlw	1
  5173  0730  00DE               	movwf	??_sprintf
  5174  0731  085E               	movf	??_sprintf,w
  5175  0732  0141               	movlb	1	; select bank1
  5176  0733  07B7               	addwf	sprintf@sp^(0+128),f
  5177  0734                     l3303:	
  5178                           
  5179                           ;doprnt.c: 1415: if(width)
  5180  0734  0141               	movlb	1	; select bank1
  5181  0735                     L7:	
  5182  0735  0830               	movf	sprintf@width^(0+128),w
  5183  0736  0431               	iorwf	(sprintf@width+1)^(0+128),w
  5184  0737  1903               	btfsc	3,2
  5185  0738  2F83               	goto	l3325
  5186                           
  5187                           ;doprnt.c: 1417: ((*sp++ = ('0')));
  5188                           
  5189                           ;doprnt.c: 1416: do
  5190  0739  3030               	movlw	48
  5191  073A  0140               	movlb	0	; select bank0
  5192  073B  00DE               	movwf	??_sprintf
  5193  073C  0141               	movlb	1	; select bank1
  5194  073D  0837               	movf	sprintf@sp^(0+128),w
  5195  073E  0086               	movwf	6
  5196  073F  0187               	clrf	7
  5197  0740  0140               	movlb	0	; select bank0
  5198  0741  085E               	movf	??_sprintf,w
  5199  0742  0081               	movwf	1
  5200  0743  3001               	movlw	1
  5201  0744  00DE               	movwf	??_sprintf
  5202  0745  085E               	movf	??_sprintf,w
  5203  0746  0141               	movlb	1	; select bank1
  5204  0747  07B7               	addwf	sprintf@sp^(0+128),f
  5205                           
  5206                           ;doprnt.c: 1418: while(--width);
  5207  0748  30FF               	movlw	255
  5208  0749  07B0               	addwf	sprintf@width^(0+128),f
  5209  074A  30FF               	movlw	255
  5210  074B  3DB1               	addwfc	(sprintf@width+1)^(0+128),f
  5211  074C  2F35               	goto	L7
  5212  074D                     l3311:	
  5213                           ;doprnt.c: 1420: } else
  5214                           
  5215                           
  5216                           ;doprnt.c: 1422: {
  5217                           ;doprnt.c: 1424: if(width
  5218                           ;doprnt.c: 1428: )
  5219  074D  0830               	movf	sprintf@width^(0+128),w
  5220  074E  0431               	iorwf	(sprintf@width+1)^(0+128),w
  5221  074F  1903               	btfsc	3,2
  5222  0750  2F68               	goto	l3319
  5223  0751                     l3313:	
  5224                           ;doprnt.c: 1429: do
  5225                           
  5226                           
  5227                           ;doprnt.c: 1430: ((*sp++ = (' ')));
  5228  0751  3020               	movlw	32
  5229  0752  0140               	movlb	0	; select bank0
  5230  0753  00DE               	movwf	??_sprintf
  5231  0754  0141               	movlb	1	; select bank1
  5232  0755  0837               	movf	sprintf@sp^(0+128),w
  5233  0756  0086               	movwf	6
  5234  0757  0187               	clrf	7
  5235  0758  0140               	movlb	0	; select bank0
  5236  0759  085E               	movf	??_sprintf,w
  5237  075A  0081               	movwf	1
  5238  075B  3001               	movlw	1
  5239  075C  00DE               	movwf	??_sprintf
  5240  075D  085E               	movf	??_sprintf,w
  5241  075E  0141               	movlb	1	; select bank1
  5242  075F  07B7               	addwf	sprintf@sp^(0+128),f
  5243                           
  5244                           ;doprnt.c: 1431: while(--width);
  5245  0760  30FF               	movlw	255
  5246  0761  07B0               	addwf	sprintf@width^(0+128),f
  5247  0762  30FF               	movlw	255
  5248  0763  3DB1               	addwfc	(sprintf@width+1)^(0+128),f
  5249  0764  0830               	movf	sprintf@width^(0+128),w
  5250  0765  0431               	iorwf	(sprintf@width+1)^(0+128),w
  5251  0766  1D03               	btfss	3,2
  5252  0767  2F51               	goto	l3313
  5253  0768                     l3319:	
  5254                           
  5255                           ;doprnt.c: 1438: if(flag & 0x03)
  5256  0768  3003               	movlw	3
  5257  0769  0526               	andwf	sprintf@flag^(0+128),w
  5258  076A  0140               	movlb	0	; select bank0
  5259  076B  00DE               	movwf	??_sprintf
  5260  076C  3000               	movlw	0
  5261  076D  0141               	movlb	1	; select bank1
  5262  076E  0527               	andwf	(sprintf@flag+1)^(0+128),w
  5263  076F  0140               	movlb	0	; select bank0
  5264  0770  00DF               	movwf	??_sprintf+1
  5265  0771  085E               	movf	??_sprintf,w
  5266  0772  045F               	iorwf	??_sprintf+1,w
  5267  0773  1903               	btfsc	3,2
  5268  0774  2F83               	goto	l3325
  5269                           
  5270                           ;doprnt.c: 1439: ((*sp++ = ('-')));
  5271  0775  302D               	movlw	45
  5272  0776  00DE               	movwf	??_sprintf
  5273  0777  0141               	movlb	1	; select bank1
  5274  0778  0837               	movf	sprintf@sp^(0+128),w
  5275  0779  0086               	movwf	6
  5276  077A  0187               	clrf	7
  5277  077B  0140               	movlb	0	; select bank0
  5278  077C  085E               	movf	??_sprintf,w
  5279  077D  0081               	movwf	1
  5280  077E  3001               	movlw	1
  5281  077F  00DE               	movwf	??_sprintf
  5282  0780  085E               	movf	??_sprintf,w
  5283  0781  0141               	movlb	1	; select bank1
  5284  0782  07B7               	addwf	sprintf@sp^(0+128),f
  5285  0783                     l3325:	
  5286                           
  5287                           ;doprnt.c: 1469: }
  5288                           ;doprnt.c: 1472: prec = c;
  5289  0783  0141               	movlb	1	; select bank1
  5290  0784  0838               	movf	sprintf@c^(0+128),w
  5291  0785  00A4               	movwf	sprintf@prec^(0+128)
  5292  0786  01A5               	clrf	(sprintf@prec+1)^(0+128)
  5293  0787  1BA4               	btfsc	sprintf@prec^(0+128),7
  5294  0788  03A5               	decf	(sprintf@prec+1)^(0+128),f
  5295  0789                     l3333:	
  5296                           ;doprnt.c: 1474: while(prec--) {
  5297                           
  5298  0789  30FF               	movlw	255
  5299  078A  07A4               	addwf	sprintf@prec^(0+128),f
  5300  078B  30FF               	movlw	255
  5301  078C  3DA5               	addwfc	(sprintf@prec+1)^(0+128),f
  5302  078D  0A24               	incf	sprintf@prec^(0+128),w
  5303  078E  1903               	btfsc	3,2
  5304  078F  0A25               	incf	(sprintf@prec+1)^(0+128),w
  5305  0790  1903               	btfsc	3,2
  5306  0791  290F               	goto	l3335
  5307                           
  5308                           ;doprnt.c: 1478: {
  5309                           ;doprnt.c: 1489: c = (val / dpowers[prec]) % 10 + '0';
  5310  0792  3000               	movlw	0
  5311  0793  0140               	movlb	0	; select bank0
  5312  0794  00A3               	movwf	___llmod@divisor+3
  5313  0795  3000               	movlw	0
  5314  0796  00A2               	movwf	___llmod@divisor+2
  5315  0797  3000               	movlw	0
  5316  0798  00A1               	movwf	___llmod@divisor+1
  5317  0799  300A               	movlw	10
  5318  079A  00A0               	movwf	___llmod@divisor
  5319  079B  0141               	movlb	1	; select bank1
  5320  079C  0825               	movf	(sprintf@prec+1)^(0+128),w
  5321  079D  0085               	movwf	5
  5322  079E  0824               	movf	sprintf@prec^(0+128),w
  5323  079F  0084               	movwf	4
  5324  07A0  3584               	lslf	4,f
  5325  07A1  0D85               	rlf	5,f
  5326  07A2  3584               	lslf	4,f
  5327  07A3  0D85               	rlf	5,f
  5328  07A4  3033               	movlw	low (_dpowers| (0+32768))
  5329  07A5  0784               	addwf	4,f
  5330  07A6  30A0               	movlw	high (_dpowers| (0+32768))
  5331  07A7  3D85               	addwfc	5,f
  5332  07A8  3F00               	moviw [0]fsr0
  5333  07A9  00F0               	movwf	___lldiv@divisor
  5334  07AA  3F01               	moviw [1]fsr0
  5335  07AB  00F1               	movwf	___lldiv@divisor+1
  5336  07AC  3F02               	moviw [2]fsr0
  5337  07AD  00F2               	movwf	___lldiv@divisor+2
  5338  07AE  3F03               	moviw [3]fsr0
  5339  07AF  00F3               	movwf	___lldiv@divisor+3
  5340  07B0  082B               	movf	(sprintf@val+3)^(0+128),w
  5341  07B1  00F7               	movwf	___lldiv@dividend+3
  5342  07B2  082A               	movf	(sprintf@val+2)^(0+128),w
  5343  07B3  00F6               	movwf	___lldiv@dividend+2
  5344  07B4  0829               	movf	(sprintf@val+1)^(0+128),w
  5345  07B5  00F5               	movwf	___lldiv@dividend+1
  5346  07B6  0828               	movf	sprintf@val^(0+128),w
  5347  07B7  00F4               	movwf	___lldiv@dividend
  5348  07B8  3190  20A1  3181   	fcall	___lldiv
  5349  07BB  0873               	movf	?___lldiv+3,w
  5350  07BC  0140               	movlb	0	; select bank0
  5351  07BD  00A7               	movwf	___llmod@dividend+3
  5352  07BE  0872               	movf	?___lldiv+2,w
  5353  07BF  00A6               	movwf	___llmod@dividend+2
  5354  07C0  0871               	movf	?___lldiv+1,w
  5355  07C1  00A5               	movwf	___llmod@dividend+1
  5356  07C2  0870               	movf	?___lldiv,w
  5357  07C3  00A4               	movwf	___llmod@dividend
  5358  07C4  319F  27BD  3181   	fcall	___llmod
  5359  07C7  0140               	movlb	0	; select bank0
  5360  07C8  0820               	movf	?___llmod,w
  5361  07C9  3E30               	addlw	48
  5362  07CA  00DE               	movwf	??_sprintf
  5363  07CB  085E               	movf	??_sprintf,w
  5364  07CC  0141               	movlb	1	; select bank1
  5365  07CD  00B8               	movwf	sprintf@c^(0+128)
  5366                           
  5367                           ;doprnt.c: 1523: }
  5368                           ;doprnt.c: 1524: ((*sp++ = (c)));
  5369  07CE  0838               	movf	sprintf@c^(0+128),w
  5370  07CF  0140               	movlb	0	; select bank0
  5371  07D0  00DE               	movwf	??_sprintf
  5372  07D1  0141               	movlb	1	; select bank1
  5373  07D2  0837               	movf	sprintf@sp^(0+128),w
  5374  07D3  0086               	movwf	6
  5375  07D4  0187               	clrf	7
  5376  07D5  0140               	movlb	0	; select bank0
  5377  07D6  085E               	movf	??_sprintf,w
  5378  07D7  0081               	movwf	1
  5379  07D8  3001               	movlw	1
  5380  07D9  00DE               	movwf	??_sprintf
  5381  07DA  085E               	movf	??_sprintf,w
  5382  07DB  0141               	movlb	1	; select bank1
  5383  07DC  07B7               	addwf	sprintf@sp^(0+128),f
  5384  07DD  2F89               	goto	l3333
  5385  07DE                     l3337:	
  5386                           ;doprnt.c: 1525: }
  5387                           ;doprnt.c: 1533: }
  5388                           ;doprnt.c: 1535: alldone:
  5389                           
  5390                           
  5391                           ;doprnt.c: 1538: *sp = 0;
  5392  07DE  0141               	movlb	1	; select bank1
  5393  07DF  0837               	movf	sprintf@sp^(0+128),w
  5394  07E0  0086               	movwf	6
  5395  07E1  0187               	clrf	7
  5396  07E2  0181               	clrf	1
  5397  07E3  0008               	return
  5398  07E4                     __end_of_sprintf:	
  5399                           ;doprnt.c: 1540: return 0;
  5400                           ;	Return value of _sprintf is never used
  5401                           
  5402                           
  5403                           	psect	text2
  5404  08A2                     __ptext2:	
  5405 ;; *************** function _scale *****************
  5406 ;; Defined at:
  5407 ;;		line 425 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\doprnt.c"
  5408 ;; Parameters:    Size  Location     Type
  5409 ;;  scl             1    wreg     char 
  5410 ;; Auto vars:     Size  Location     Type
  5411 ;;  scl             1   32[BANK0 ] char 
  5412 ;; Return value:  Size  Location     Type
  5413 ;;                  3   24[BANK0 ] char 
  5414 ;; Registers used:
  5415 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  5416 ;; Tracked objects:
  5417 ;;		On entry : 0/0
  5418 ;;		On exit  : 0/0
  5419 ;;		Unchanged: 0/0
  5420 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
  5421 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  5422 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  5423 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  5424 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  5425 ;;Total ram usage:        9 bytes
  5426 ;; Hardware stack levels used:    1
  5427 ;; Hardware stack levels required when called:    2
  5428 ;; This function calls:
  5429 ;;		___awdiv
  5430 ;;		___awmod
  5431 ;;		___ftmul
  5432 ;;		___wmul
  5433 ;; This function is called by:
  5434 ;;		_sprintf
  5435 ;; This function uses a non-reentrant model
  5436 ;;
  5437                           
  5438                           
  5439                           ;psect for function _scale
  5440  08A2                     _scale:	
  5441                           
  5442                           ;incstack = 0
  5443                           ; Regs used in _scale: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  5444                           ;scale@scl stored from wreg
  5445  08A2  0140               	movlb	0	; select bank0
  5446  08A3  00C0               	movwf	scale@scl
  5447                           
  5448                           ;doprnt.c: 428: if(scl < 0) {
  5449  08A4  1FC0               	btfss	scale@scl,7
  5450  08A5  29C7               	goto	l2697
  5451                           
  5452                           ;doprnt.c: 429: scl = -scl;
  5453  08A6  09C0               	comf	scale@scl,f
  5454  08A7  0AC0               	incf	scale@scl,f
  5455                           
  5456                           ;doprnt.c: 430: if(scl>=110)
  5457  08A8  0840               	movf	scale@scl,w
  5458  08A9  3A80               	xorlw	128
  5459  08AA  3E12               	addlw	-238
  5460  08AB  1C03               	skipc
  5461  08AC  294B               	goto	l2687
  5462                           
  5463                           ;doprnt.c: 431: return _npowers_[scl/100+18] * _npowers_[(scl%100)/10+9] * _npowers_[scl
      +                          %10];
  5464  08AD  300A               	movlw	10
  5465  08AE  00F7               	movwf	___awdiv@divisor
  5466  08AF  3000               	movlw	0
  5467  08B0  00F8               	movwf	___awdiv@divisor+1
  5468  08B1  0840               	movf	scale@scl,w
  5469  08B2  00F2               	movwf	___awmod@dividend
  5470  08B3  01F3               	clrf	___awmod@dividend+1
  5471  08B4  1BF2               	btfsc	___awmod@dividend,7
  5472  08B5  03F3               	decf	___awmod@dividend+1,f
  5473  08B6  3064               	movlw	100
  5474  08B7  00F0               	movwf	___awmod@divisor
  5475  08B8  3000               	movlw	0
  5476  08B9  00F1               	movwf	___awmod@divisor+1
  5477  08BA  3190  2010  3188   	fcall	___awmod
  5478  08BD  0871               	movf	?___awmod+1,w
  5479  08BE  00FA               	movwf	___awdiv@dividend+1
  5480  08BF  0870               	movf	?___awmod,w
  5481  08C0  00F9               	movwf	___awdiv@dividend
  5482  08C1  3190  20F3  3188   	fcall	___awdiv
  5483  08C4  0877               	movf	?___awdiv,w
  5484  08C5  3E09               	addlw	9
  5485  08C6  0140               	movlb	0	; select bank0
  5486  08C7  00A4               	movwf	___wmul@multiplier
  5487  08C8  3000               	movlw	0
  5488  08C9  3D78               	addwfc	?___awdiv+1,w
  5489  08CA  00A5               	movwf	___wmul@multiplier+1
  5490  08CB  3003               	movlw	3
  5491  08CC  00A6               	movwf	___wmul@multiplicand
  5492  08CD  3000               	movlw	0
  5493  08CE  00A7               	movwf	___wmul@multiplicand+1
  5494  08CF  319E  2692  3188   	fcall	___wmul
  5495  08D2  0140               	movlb	0	; select bank0
  5496  08D3  0825               	movf	?___wmul+1,w
  5497  08D4  0085               	movwf	5
  5498  08D5  0824               	movf	?___wmul,w
  5499  08D6  0084               	movwf	4
  5500  08D7  3000               	movlw	low (__npowers_| (0+32768))
  5501  08D8  0784               	addwf	4,f
  5502  08D9  30A0               	movlw	high (__npowers_| (0+32768))
  5503  08DA  3D85               	addwfc	5,f
  5504  08DB  3F00               	moviw [0]fsr0
  5505  08DC  00A8               	movwf	___ftmul@f1
  5506  08DD  3F01               	moviw [1]fsr0
  5507  08DE  00A9               	movwf	___ftmul@f1+1
  5508  08DF  3F02               	moviw [2]fsr0
  5509  08E0  00AA               	movwf	___ftmul@f1+2
  5510  08E1  3064               	movlw	100
  5511  08E2  00F7               	movwf	___awdiv@divisor
  5512  08E3  3000               	movlw	0
  5513  08E4  00F8               	movwf	___awdiv@divisor+1
  5514  08E5  0840               	movf	scale@scl,w
  5515  08E6  00F9               	movwf	___awdiv@dividend
  5516  08E7  01FA               	clrf	___awdiv@dividend+1
  5517  08E8  1BF9               	btfsc	___awdiv@dividend,7
  5518  08E9  03FA               	decf	___awdiv@dividend+1,f
  5519  08EA  3190  20F3  3188   	fcall	___awdiv
  5520  08ED  0877               	movf	?___awdiv,w
  5521  08EE  3E12               	addlw	18
  5522  08EF  0140               	movlb	0	; select bank0
  5523  08F0  00A4               	movwf	___wmul@multiplier
  5524  08F1  3000               	movlw	0
  5525  08F2  3D78               	addwfc	?___awdiv+1,w
  5526  08F3  00A5               	movwf	___wmul@multiplier+1
  5527  08F4  3003               	movlw	3
  5528  08F5  00A6               	movwf	___wmul@multiplicand
  5529  08F6  3000               	movlw	0
  5530  08F7  00A7               	movwf	___wmul@multiplicand+1
  5531  08F8  319E  2692  3188   	fcall	___wmul
  5532  08FB  0140               	movlb	0	; select bank0
  5533  08FC  0825               	movf	?___wmul+1,w
  5534  08FD  0085               	movwf	5
  5535  08FE  0824               	movf	?___wmul,w
  5536  08FF  0084               	movwf	4
  5537  0900  3000               	movlw	low (__npowers_| (0+32768))
  5538  0901  0784               	addwf	4,f
  5539  0902  30A0               	movlw	high (__npowers_| (0+32768))
  5540  0903  3D85               	addwfc	5,f
  5541  0904  3F00               	moviw [0]fsr0
  5542  0905  00AB               	movwf	___ftmul@f2
  5543  0906  3F01               	moviw [1]fsr0
  5544  0907  00AC               	movwf	___ftmul@f2+1
  5545  0908  3F02               	moviw [2]fsr0
  5546  0909  00AD               	movwf	___ftmul@f2+2
  5547  090A  3194  2414  3188   	fcall	___ftmul
  5548  090D  0140               	movlb	0	; select bank0
  5549  090E  0828               	movf	?___ftmul,w
  5550  090F  00BD               	movwf	_scale$944
  5551  0910  0829               	movf	?___ftmul+1,w
  5552  0911  00BE               	movwf	_scale$944+1
  5553  0912  082A               	movf	?___ftmul+2,w
  5554  0913  00BF               	movwf	_scale$944+2
  5555                           
  5556                           ;doprnt.c: 431: return _npowers_[scl/100+18] * _npowers_[(scl%100)/10+9] * _npowers_[scl
      +                          %10];
  5557  0914  0840               	movf	scale@scl,w
  5558  0915  00F2               	movwf	___awmod@dividend
  5559  0916  01F3               	clrf	___awmod@dividend+1
  5560  0917  1BF2               	btfsc	___awmod@dividend,7
  5561  0918  03F3               	decf	___awmod@dividend+1,f
  5562  0919  300A               	movlw	10
  5563  091A  00F0               	movwf	___awmod@divisor
  5564  091B  3000               	movlw	0
  5565  091C  00F1               	movwf	___awmod@divisor+1
  5566  091D  3190  2010  3188   	fcall	___awmod
  5567  0920  0871               	movf	?___awmod+1,w
  5568  0921  0140               	movlb	0	; select bank0
  5569  0922  00A5               	movwf	___wmul@multiplier+1
  5570  0923  0870               	movf	?___awmod,w
  5571  0924  00A4               	movwf	___wmul@multiplier
  5572  0925  3003               	movlw	3
  5573  0926  00A6               	movwf	___wmul@multiplicand
  5574  0927  3000               	movlw	0
  5575  0928  00A7               	movwf	___wmul@multiplicand+1
  5576  0929  319E  2692  3188   	fcall	___wmul
  5577  092C  0140               	movlb	0	; select bank0
  5578  092D  0825               	movf	?___wmul+1,w
  5579  092E  0085               	movwf	5
  5580  092F  0824               	movf	?___wmul,w
  5581  0930  0084               	movwf	4
  5582  0931  3000               	movlw	low (__npowers_| (0+32768))
  5583  0932  0784               	addwf	4,f
  5584  0933  30A0               	movlw	high (__npowers_| (0+32768))
  5585  0934  3D85               	addwfc	5,f
  5586  0935  3F00               	moviw [0]fsr0
  5587  0936  00A8               	movwf	___ftmul@f1
  5588  0937  3F01               	moviw [1]fsr0
  5589  0938  00A9               	movwf	___ftmul@f1+1
  5590  0939  3F02               	moviw [2]fsr0
  5591  093A  00AA               	movwf	___ftmul@f1+2
  5592  093B  083D               	movf	_scale$944,w
  5593  093C  00AB               	movwf	___ftmul@f2
  5594  093D  083E               	movf	_scale$944+1,w
  5595  093E  00AC               	movwf	___ftmul@f2+1
  5596  093F  083F               	movf	_scale$944+2,w
  5597  0940  00AD               	movwf	___ftmul@f2+2
  5598  0941  3194  2414         	fcall	___ftmul
  5599  0943  0140               	movlb	0	; select bank0
  5600  0944  0828               	movf	?___ftmul,w
  5601  0945  00B8               	movwf	?_scale
  5602  0946  0829               	movf	?___ftmul+1,w
  5603  0947  00B9               	movwf	?_scale+1
  5604  0948  082A               	movf	?___ftmul+2,w
  5605  0949  00BA               	movwf	?_scale+2
  5606  094A  0008               	return
  5607  094B                     l2687:	
  5608                           
  5609                           ;doprnt.c: 432: else if(scl > 10)
  5610  094B  0840               	movf	scale@scl,w
  5611  094C  3A80               	xorlw	128
  5612  094D  3E75               	addlw	-139
  5613  094E  1C03               	skipc
  5614  094F  29AA               	goto	l2693
  5615                           
  5616                           ;doprnt.c: 433: return _npowers_[scl/10+9] * _npowers_[scl%10];
  5617  0950  0840               	movf	scale@scl,w
  5618  0951  00F2               	movwf	___awmod@dividend
  5619  0952  01F3               	clrf	___awmod@dividend+1
  5620  0953  1BF2               	btfsc	___awmod@dividend,7
  5621  0954  03F3               	decf	___awmod@dividend+1,f
  5622  0955  300A               	movlw	10
  5623  0956  00F0               	movwf	___awmod@divisor
  5624  0957  3000               	movlw	0
  5625  0958  00F1               	movwf	___awmod@divisor+1
  5626  0959  3190  2010  3188   	fcall	___awmod
  5627  095C  0871               	movf	?___awmod+1,w
  5628  095D  0140               	movlb	0	; select bank0
  5629  095E  00A5               	movwf	___wmul@multiplier+1
  5630  095F  0870               	movf	?___awmod,w
  5631  0960  00A4               	movwf	___wmul@multiplier
  5632  0961  3003               	movlw	3
  5633  0962  00A6               	movwf	___wmul@multiplicand
  5634  0963  3000               	movlw	0
  5635  0964  00A7               	movwf	___wmul@multiplicand+1
  5636  0965  319E  2692  3188   	fcall	___wmul
  5637  0968  0140               	movlb	0	; select bank0
  5638  0969  0825               	movf	?___wmul+1,w
  5639  096A  0085               	movwf	5
  5640  096B  0824               	movf	?___wmul,w
  5641  096C  0084               	movwf	4
  5642  096D  3000               	movlw	low (__npowers_| (0+32768))
  5643  096E  0784               	addwf	4,f
  5644  096F  30A0               	movlw	high (__npowers_| (0+32768))
  5645  0970  3D85               	addwfc	5,f
  5646  0971  3F00               	moviw [0]fsr0
  5647  0972  00A8               	movwf	___ftmul@f1
  5648  0973  3F01               	moviw [1]fsr0
  5649  0974  00A9               	movwf	___ftmul@f1+1
  5650  0975  3F02               	moviw [2]fsr0
  5651  0976  00AA               	movwf	___ftmul@f1+2
  5652  0977  300A               	movlw	10
  5653  0978  00F7               	movwf	___awdiv@divisor
  5654  0979  3000               	movlw	0
  5655  097A  00F8               	movwf	___awdiv@divisor+1
  5656  097B  0840               	movf	scale@scl,w
  5657  097C  00F9               	movwf	___awdiv@dividend
  5658  097D  01FA               	clrf	___awdiv@dividend+1
  5659  097E  1BF9               	btfsc	___awdiv@dividend,7
  5660  097F  03FA               	decf	___awdiv@dividend+1,f
  5661  0980  3190  20F3  3188   	fcall	___awdiv
  5662  0983  0877               	movf	?___awdiv,w
  5663  0984  3E09               	addlw	9
  5664  0985  0140               	movlb	0	; select bank0
  5665  0986  00A4               	movwf	___wmul@multiplier
  5666  0987  3000               	movlw	0
  5667  0988  3D78               	addwfc	?___awdiv+1,w
  5668  0989  00A5               	movwf	___wmul@multiplier+1
  5669  098A  3003               	movlw	3
  5670  098B  00A6               	movwf	___wmul@multiplicand
  5671  098C  3000               	movlw	0
  5672  098D  00A7               	movwf	___wmul@multiplicand+1
  5673  098E  319E  2692  3188   	fcall	___wmul
  5674  0991  0140               	movlb	0	; select bank0
  5675  0992  0825               	movf	?___wmul+1,w
  5676  0993  0085               	movwf	5
  5677  0994  0824               	movf	?___wmul,w
  5678  0995  0084               	movwf	4
  5679  0996  3000               	movlw	low (__npowers_| (0+32768))
  5680  0997  0784               	addwf	4,f
  5681  0998  30A0               	movlw	high (__npowers_| (0+32768))
  5682  0999  3D85               	addwfc	5,f
  5683  099A  3F00               	moviw [0]fsr0
  5684  099B  00AB               	movwf	___ftmul@f2
  5685  099C  3F01               	moviw [1]fsr0
  5686  099D  00AC               	movwf	___ftmul@f2+1
  5687  099E  3F02               	moviw [2]fsr0
  5688  099F  00AD               	movwf	___ftmul@f2+2
  5689  09A0  3194  2414         	fcall	___ftmul
  5690  09A2  0140               	movlb	0	; select bank0
  5691  09A3  0828               	movf	?___ftmul,w
  5692  09A4  00B8               	movwf	?_scale
  5693  09A5  0829               	movf	?___ftmul+1,w
  5694  09A6  00B9               	movwf	?_scale+1
  5695  09A7  082A               	movf	?___ftmul+2,w
  5696  09A8  00BA               	movwf	?_scale+2
  5697  09A9  0008               	return
  5698  09AA                     l2693:	
  5699                           
  5700                           ;doprnt.c: 434: return _npowers_[scl];
  5701  09AA  0840               	movf	scale@scl,w
  5702  09AB  00BB               	movwf	??_scale
  5703  09AC  01BC               	clrf	??_scale+1
  5704  09AD  083B               	movf	??_scale,w
  5705  09AE  00A4               	movwf	___wmul@multiplier
  5706  09AF  083C               	movf	??_scale+1,w
  5707  09B0  00A5               	movwf	___wmul@multiplier+1
  5708  09B1  3003               	movlw	3
  5709  09B2  00A6               	movwf	___wmul@multiplicand
  5710  09B3  3000               	movlw	0
  5711  09B4  00A7               	movwf	___wmul@multiplicand+1
  5712  09B5  319E  2692         	fcall	___wmul
  5713  09B7  0140               	movlb	0	; select bank0
  5714  09B8  0825               	movf	?___wmul+1,w
  5715  09B9  0085               	movwf	5
  5716  09BA  0824               	movf	?___wmul,w
  5717  09BB  0084               	movwf	4
  5718  09BC  3000               	movlw	low (__npowers_| (0+32768))
  5719  09BD  0784               	addwf	4,f
  5720  09BE  30A0               	movlw	high (__npowers_| (0+32768))
  5721  09BF  3D85               	addwfc	5,f
  5722  09C0  3F00               	moviw [0]fsr0
  5723  09C1  00B8               	movwf	?_scale
  5724  09C2  3F01               	moviw [1]fsr0
  5725  09C3  00B9               	movwf	?_scale+1
  5726  09C4  3F02               	moviw [2]fsr0
  5727  09C5  00BA               	movwf	?_scale+2
  5728  09C6  0008               	return
  5729  09C7                     l2697:	
  5730                           
  5731                           ;doprnt.c: 435: }
  5732                           ;doprnt.c: 436: if(scl>=110)
  5733  09C7  0840               	movf	scale@scl,w
  5734  09C8  3A80               	xorlw	128
  5735  09C9  3E12               	addlw	-238
  5736  09CA  1C03               	skipc
  5737  09CB  2A6A               	goto	l2705
  5738                           
  5739                           ;doprnt.c: 437: return _powers_[scl/100+18] * _powers_[(scl%100)/10+9] * _powers_[scl%10
      +                          ];
  5740  09CC  300A               	movlw	10
  5741  09CD  00F7               	movwf	___awdiv@divisor
  5742  09CE  3000               	movlw	0
  5743  09CF  00F8               	movwf	___awdiv@divisor+1
  5744  09D0  0840               	movf	scale@scl,w
  5745  09D1  00F2               	movwf	___awmod@dividend
  5746  09D2  01F3               	clrf	___awmod@dividend+1
  5747  09D3  1BF2               	btfsc	___awmod@dividend,7
  5748  09D4  03F3               	decf	___awmod@dividend+1,f
  5749  09D5  3064               	movlw	100
  5750  09D6  00F0               	movwf	___awmod@divisor
  5751  09D7  3000               	movlw	0
  5752  09D8  00F1               	movwf	___awmod@divisor+1
  5753  09D9  3190  2010  3188   	fcall	___awmod
  5754  09DC  0871               	movf	?___awmod+1,w
  5755  09DD  00FA               	movwf	___awdiv@dividend+1
  5756  09DE  0870               	movf	?___awmod,w
  5757  09DF  00F9               	movwf	___awdiv@dividend
  5758  09E0  3190  20F3  3188   	fcall	___awdiv
  5759  09E3  0877               	movf	?___awdiv,w
  5760  09E4  3E09               	addlw	9
  5761  09E5  0140               	movlb	0	; select bank0
  5762  09E6  00A4               	movwf	___wmul@multiplier
  5763  09E7  3000               	movlw	0
  5764  09E8  3D78               	addwfc	?___awdiv+1,w
  5765  09E9  00A5               	movwf	___wmul@multiplier+1
  5766  09EA  3003               	movlw	3
  5767  09EB  00A6               	movwf	___wmul@multiplicand
  5768  09EC  3000               	movlw	0
  5769  09ED  00A7               	movwf	___wmul@multiplicand+1
  5770  09EE  319E  2692  3188   	fcall	___wmul
  5771  09F1  0140               	movlb	0	; select bank0
  5772  09F2  0825               	movf	?___wmul+1,w
  5773  09F3  0085               	movwf	5
  5774  09F4  0824               	movf	?___wmul,w
  5775  09F5  0084               	movwf	4
  5776  09F6  305B               	movlw	low (__powers_| (0+32768))
  5777  09F7  0784               	addwf	4,f
  5778  09F8  30A0               	movlw	high (__powers_| (0+32768))
  5779  09F9  3D85               	addwfc	5,f
  5780  09FA  3F00               	moviw [0]fsr0
  5781  09FB  00A8               	movwf	___ftmul@f1
  5782  09FC  3F01               	moviw [1]fsr0
  5783  09FD  00A9               	movwf	___ftmul@f1+1
  5784  09FE  3F02               	moviw [2]fsr0
  5785  09FF  00AA               	movwf	___ftmul@f1+2
  5786  0A00  3064               	movlw	100
  5787  0A01  00F7               	movwf	___awdiv@divisor
  5788  0A02  3000               	movlw	0
  5789  0A03  00F8               	movwf	___awdiv@divisor+1
  5790  0A04  0840               	movf	scale@scl,w
  5791  0A05  00F9               	movwf	___awdiv@dividend
  5792  0A06  01FA               	clrf	___awdiv@dividend+1
  5793  0A07  1BF9               	btfsc	___awdiv@dividend,7
  5794  0A08  03FA               	decf	___awdiv@dividend+1,f
  5795  0A09  3190  20F3  3188   	fcall	___awdiv
  5796  0A0C  0877               	movf	?___awdiv,w
  5797  0A0D  3E12               	addlw	18
  5798  0A0E  0140               	movlb	0	; select bank0
  5799  0A0F  00A4               	movwf	___wmul@multiplier
  5800  0A10  3000               	movlw	0
  5801  0A11  3D78               	addwfc	?___awdiv+1,w
  5802  0A12  00A5               	movwf	___wmul@multiplier+1
  5803  0A13  3003               	movlw	3
  5804  0A14  00A6               	movwf	___wmul@multiplicand
  5805  0A15  3000               	movlw	0
  5806  0A16  00A7               	movwf	___wmul@multiplicand+1
  5807  0A17  319E  2692  3188   	fcall	___wmul
  5808  0A1A  0140               	movlb	0	; select bank0
  5809  0A1B  0825               	movf	?___wmul+1,w
  5810  0A1C  0085               	movwf	5
  5811  0A1D  0824               	movf	?___wmul,w
  5812  0A1E  0084               	movwf	4
  5813  0A1F  305B               	movlw	low (__powers_| (0+32768))
  5814  0A20  0784               	addwf	4,f
  5815  0A21  30A0               	movlw	high (__powers_| (0+32768))
  5816  0A22  3D85               	addwfc	5,f
  5817  0A23  3F00               	moviw [0]fsr0
  5818  0A24  00AB               	movwf	___ftmul@f2
  5819  0A25  3F01               	moviw [1]fsr0
  5820  0A26  00AC               	movwf	___ftmul@f2+1
  5821  0A27  3F02               	moviw [2]fsr0
  5822  0A28  00AD               	movwf	___ftmul@f2+2
  5823  0A29  3194  2414  3188   	fcall	___ftmul
  5824  0A2C  0140               	movlb	0	; select bank0
  5825  0A2D  0828               	movf	?___ftmul,w
  5826  0A2E  00BD               	movwf	_scale$944
  5827  0A2F  0829               	movf	?___ftmul+1,w
  5828  0A30  00BE               	movwf	_scale$944+1
  5829  0A31  082A               	movf	?___ftmul+2,w
  5830  0A32  00BF               	movwf	_scale$944+2
  5831                           
  5832                           ;doprnt.c: 437: return _powers_[scl/100+18] * _powers_[(scl%100)/10+9] * _powers_[scl%10
      +                          ];
  5833  0A33  0840               	movf	scale@scl,w
  5834  0A34  00F2               	movwf	___awmod@dividend
  5835  0A35  01F3               	clrf	___awmod@dividend+1
  5836  0A36  1BF2               	btfsc	___awmod@dividend,7
  5837  0A37  03F3               	decf	___awmod@dividend+1,f
  5838  0A38  300A               	movlw	10
  5839  0A39  00F0               	movwf	___awmod@divisor
  5840  0A3A  3000               	movlw	0
  5841  0A3B  00F1               	movwf	___awmod@divisor+1
  5842  0A3C  3190  2010  3188   	fcall	___awmod
  5843  0A3F  0871               	movf	?___awmod+1,w
  5844  0A40  0140               	movlb	0	; select bank0
  5845  0A41  00A5               	movwf	___wmul@multiplier+1
  5846  0A42  0870               	movf	?___awmod,w
  5847  0A43  00A4               	movwf	___wmul@multiplier
  5848  0A44  3003               	movlw	3
  5849  0A45  00A6               	movwf	___wmul@multiplicand
  5850  0A46  3000               	movlw	0
  5851  0A47  00A7               	movwf	___wmul@multiplicand+1
  5852  0A48  319E  2692  3188   	fcall	___wmul
  5853  0A4B  0140               	movlb	0	; select bank0
  5854  0A4C  0825               	movf	?___wmul+1,w
  5855  0A4D  0085               	movwf	5
  5856  0A4E  0824               	movf	?___wmul,w
  5857  0A4F  0084               	movwf	4
  5858  0A50  305B               	movlw	low (__powers_| (0+32768))
  5859  0A51  0784               	addwf	4,f
  5860  0A52  30A0               	movlw	high (__powers_| (0+32768))
  5861  0A53  3D85               	addwfc	5,f
  5862  0A54  3F00               	moviw [0]fsr0
  5863  0A55  00A8               	movwf	___ftmul@f1
  5864  0A56  3F01               	moviw [1]fsr0
  5865  0A57  00A9               	movwf	___ftmul@f1+1
  5866  0A58  3F02               	moviw [2]fsr0
  5867  0A59  00AA               	movwf	___ftmul@f1+2
  5868  0A5A  083D               	movf	_scale$944,w
  5869  0A5B  00AB               	movwf	___ftmul@f2
  5870  0A5C  083E               	movf	_scale$944+1,w
  5871  0A5D  00AC               	movwf	___ftmul@f2+1
  5872  0A5E  083F               	movf	_scale$944+2,w
  5873  0A5F  00AD               	movwf	___ftmul@f2+2
  5874  0A60  3194  2414         	fcall	___ftmul
  5875  0A62  0140               	movlb	0	; select bank0
  5876  0A63  0828               	movf	?___ftmul,w
  5877  0A64  00B8               	movwf	?_scale
  5878  0A65  0829               	movf	?___ftmul+1,w
  5879  0A66  00B9               	movwf	?_scale+1
  5880  0A67  082A               	movf	?___ftmul+2,w
  5881  0A68  00BA               	movwf	?_scale+2
  5882  0A69  0008               	return
  5883  0A6A                     l2705:	
  5884                           
  5885                           ;doprnt.c: 438: else if(scl > 10)
  5886  0A6A  0840               	movf	scale@scl,w
  5887  0A6B  3A80               	xorlw	128
  5888  0A6C  3E75               	addlw	-139
  5889  0A6D  1C03               	skipc
  5890  0A6E  2AC9               	goto	l2711
  5891                           
  5892                           ;doprnt.c: 439: return _powers_[scl/10+9] * _powers_[scl%10];
  5893  0A6F  0840               	movf	scale@scl,w
  5894  0A70  00F2               	movwf	___awmod@dividend
  5895  0A71  01F3               	clrf	___awmod@dividend+1
  5896  0A72  1BF2               	btfsc	___awmod@dividend,7
  5897  0A73  03F3               	decf	___awmod@dividend+1,f
  5898  0A74  300A               	movlw	10
  5899  0A75  00F0               	movwf	___awmod@divisor
  5900  0A76  3000               	movlw	0
  5901  0A77  00F1               	movwf	___awmod@divisor+1
  5902  0A78  3190  2010  3188   	fcall	___awmod
  5903  0A7B  0871               	movf	?___awmod+1,w
  5904  0A7C  0140               	movlb	0	; select bank0
  5905  0A7D  00A5               	movwf	___wmul@multiplier+1
  5906  0A7E  0870               	movf	?___awmod,w
  5907  0A7F  00A4               	movwf	___wmul@multiplier
  5908  0A80  3003               	movlw	3
  5909  0A81  00A6               	movwf	___wmul@multiplicand
  5910  0A82  3000               	movlw	0
  5911  0A83  00A7               	movwf	___wmul@multiplicand+1
  5912  0A84  319E  2692  3188   	fcall	___wmul
  5913  0A87  0140               	movlb	0	; select bank0
  5914  0A88  0825               	movf	?___wmul+1,w
  5915  0A89  0085               	movwf	5
  5916  0A8A  0824               	movf	?___wmul,w
  5917  0A8B  0084               	movwf	4
  5918  0A8C  305B               	movlw	low (__powers_| (0+32768))
  5919  0A8D  0784               	addwf	4,f
  5920  0A8E  30A0               	movlw	high (__powers_| (0+32768))
  5921  0A8F  3D85               	addwfc	5,f
  5922  0A90  3F00               	moviw [0]fsr0
  5923  0A91  00A8               	movwf	___ftmul@f1
  5924  0A92  3F01               	moviw [1]fsr0
  5925  0A93  00A9               	movwf	___ftmul@f1+1
  5926  0A94  3F02               	moviw [2]fsr0
  5927  0A95  00AA               	movwf	___ftmul@f1+2
  5928  0A96  300A               	movlw	10
  5929  0A97  00F7               	movwf	___awdiv@divisor
  5930  0A98  3000               	movlw	0
  5931  0A99  00F8               	movwf	___awdiv@divisor+1
  5932  0A9A  0840               	movf	scale@scl,w
  5933  0A9B  00F9               	movwf	___awdiv@dividend
  5934  0A9C  01FA               	clrf	___awdiv@dividend+1
  5935  0A9D  1BF9               	btfsc	___awdiv@dividend,7
  5936  0A9E  03FA               	decf	___awdiv@dividend+1,f
  5937  0A9F  3190  20F3  3188   	fcall	___awdiv
  5938  0AA2  0877               	movf	?___awdiv,w
  5939  0AA3  3E09               	addlw	9
  5940  0AA4  0140               	movlb	0	; select bank0
  5941  0AA5  00A4               	movwf	___wmul@multiplier
  5942  0AA6  3000               	movlw	0
  5943  0AA7  3D78               	addwfc	?___awdiv+1,w
  5944  0AA8  00A5               	movwf	___wmul@multiplier+1
  5945  0AA9  3003               	movlw	3
  5946  0AAA  00A6               	movwf	___wmul@multiplicand
  5947  0AAB  3000               	movlw	0
  5948  0AAC  00A7               	movwf	___wmul@multiplicand+1
  5949  0AAD  319E  2692  3188   	fcall	___wmul
  5950  0AB0  0140               	movlb	0	; select bank0
  5951  0AB1  0825               	movf	?___wmul+1,w
  5952  0AB2  0085               	movwf	5
  5953  0AB3  0824               	movf	?___wmul,w
  5954  0AB4  0084               	movwf	4
  5955  0AB5  305B               	movlw	low (__powers_| (0+32768))
  5956  0AB6  0784               	addwf	4,f
  5957  0AB7  30A0               	movlw	high (__powers_| (0+32768))
  5958  0AB8  3D85               	addwfc	5,f
  5959  0AB9  3F00               	moviw [0]fsr0
  5960  0ABA  00AB               	movwf	___ftmul@f2
  5961  0ABB  3F01               	moviw [1]fsr0
  5962  0ABC  00AC               	movwf	___ftmul@f2+1
  5963  0ABD  3F02               	moviw [2]fsr0
  5964  0ABE  00AD               	movwf	___ftmul@f2+2
  5965  0ABF  3194  2414         	fcall	___ftmul
  5966  0AC1  0140               	movlb	0	; select bank0
  5967  0AC2  0828               	movf	?___ftmul,w
  5968  0AC3  00B8               	movwf	?_scale
  5969  0AC4  0829               	movf	?___ftmul+1,w
  5970  0AC5  00B9               	movwf	?_scale+1
  5971  0AC6  082A               	movf	?___ftmul+2,w
  5972  0AC7  00BA               	movwf	?_scale+2
  5973  0AC8  0008               	return
  5974  0AC9                     l2711:	
  5975                           
  5976                           ;doprnt.c: 440: return _powers_[scl];
  5977  0AC9  0840               	movf	scale@scl,w
  5978  0ACA  00BB               	movwf	??_scale
  5979  0ACB  01BC               	clrf	??_scale+1
  5980  0ACC  083B               	movf	??_scale,w
  5981  0ACD  00A4               	movwf	___wmul@multiplier
  5982  0ACE  083C               	movf	??_scale+1,w
  5983  0ACF  00A5               	movwf	___wmul@multiplier+1
  5984  0AD0  3003               	movlw	3
  5985  0AD1  00A6               	movwf	___wmul@multiplicand
  5986  0AD2  3000               	movlw	0
  5987  0AD3  00A7               	movwf	___wmul@multiplicand+1
  5988  0AD4  319E  2692         	fcall	___wmul
  5989  0AD6  0140               	movlb	0	; select bank0
  5990  0AD7  0825               	movf	?___wmul+1,w
  5991  0AD8  0085               	movwf	5
  5992  0AD9  0824               	movf	?___wmul,w
  5993  0ADA  0084               	movwf	4
  5994  0ADB  305B               	movlw	low (__powers_| (0+32768))
  5995  0ADC  0784               	addwf	4,f
  5996  0ADD  30A0               	movlw	high (__powers_| (0+32768))
  5997  0ADE  3D85               	addwfc	5,f
  5998  0ADF  3F00               	moviw [0]fsr0
  5999  0AE0  00B8               	movwf	?_scale
  6000  0AE1  3F01               	moviw [1]fsr0
  6001  0AE2  00B9               	movwf	?_scale+1
  6002  0AE3  3F02               	moviw [2]fsr0
  6003  0AE4  00BA               	movwf	?_scale+2
  6004  0AE5  0008               	return
  6005  0AE6                     __end_of_scale:	
  6006                           
  6007                           	psect	text3
  6008  1002                     __ptext3:	
  6009 ;; *************** function _isdigit *****************
  6010 ;; Defined at:
  6011 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\isdigit.c"
  6012 ;; Parameters:    Size  Location     Type
  6013 ;;  c               1    wreg     unsigned char 
  6014 ;; Auto vars:     Size  Location     Type
  6015 ;;  c               1    1[COMMON] unsigned char 
  6016 ;; Return value:  Size  Location     Type
  6017 ;;		None               void
  6018 ;; Registers used:
  6019 ;;		wreg, status,2, status,0
  6020 ;; Tracked objects:
  6021 ;;		On entry : 0/0
  6022 ;;		On exit  : 0/0
  6023 ;;		Unchanged: 0/0
  6024 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
  6025 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  6026 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  6027 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  6028 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  6029 ;;Total ram usage:        2 bytes
  6030 ;; Hardware stack levels used:    1
  6031 ;; This function calls:
  6032 ;;		Nothing
  6033 ;; This function is called by:
  6034 ;;		_sprintf
  6035 ;; This function uses a non-reentrant model
  6036 ;;
  6037                           
  6038                           
  6039                           ;psect for function _isdigit
  6040  1002                     _isdigit:	
  6041                           
  6042                           ;incstack = 0
  6043                           ; Regs used in _isdigit: [wreg+status,2+status,0]
  6044                           ;isdigit@c stored from wreg
  6045  1002  00F1               	movwf	isdigit@c
  6046  1003  01F0               	clrf	_isdigit$727
  6047  1004  303A               	movlw	58
  6048  1005  0271               	subwf	isdigit@c,w
  6049  1006  1803               	skipnc
  6050  1007  280E               	goto	l2723
  6051  1008  3030               	movlw	48
  6052  1009  0271               	subwf	isdigit@c,w
  6053  100A  1C03               	skipc
  6054  100B  280E               	goto	l2723
  6055  100C  01F0               	clrf	_isdigit$727
  6056  100D  0AF0               	incf	_isdigit$727,f
  6057  100E                     l2723:	
  6058  100E  0C70               	rrf	_isdigit$727,w
  6059  100F  0008               	return
  6060  1010                     __end_of_isdigit:	
  6061                           
  6062                           	psect	text4
  6063  169B                     __ptext4:	
  6064 ;; *************** function _fround *****************
  6065 ;; Defined at:
  6066 ;;		line 409 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\doprnt.c"
  6067 ;; Parameters:    Size  Location     Type
  6068 ;;  prec            1    wreg     unsigned char 
  6069 ;; Auto vars:     Size  Location     Type
  6070 ;;  prec            1   37[BANK0 ] unsigned char 
  6071 ;; Return value:  Size  Location     Type
  6072 ;;                  3   24[BANK0 ] unsigned char 
  6073 ;; Registers used:
  6074 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  6075 ;; Tracked objects:
  6076 ;;		On entry : 0/0
  6077 ;;		On exit  : 0/0
  6078 ;;		Unchanged: 0/0
  6079 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
  6080 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  6081 ;;      Locals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  6082 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  6083 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  6084 ;;Total ram usage:       14 bytes
  6085 ;; Hardware stack levels used:    1
  6086 ;; Hardware stack levels required when called:    2
  6087 ;; This function calls:
  6088 ;;		___awdiv
  6089 ;;		___awmod
  6090 ;;		___ftmul
  6091 ;;		___wmul
  6092 ;; This function is called by:
  6093 ;;		_sprintf
  6094 ;; This function uses a non-reentrant model
  6095 ;;
  6096                           
  6097                           
  6098                           ;psect for function _fround
  6099  169B                     _fround:	
  6100                           
  6101                           ;incstack = 0
  6102                           ; Regs used in _fround: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  6103                           ;fround@prec stored from wreg
  6104  169B  0140               	movlb	0	; select bank0
  6105  169C  00C5               	movwf	fround@prec
  6106                           
  6107                           ;doprnt.c: 413: if(prec>=110)
  6108  169D  306E               	movlw	110
  6109  169E  0245               	subwf	fround@prec,w
  6110  169F  1C03               	skipc
  6111  16A0  2F5B               	goto	l2663
  6112                           
  6113                           ;doprnt.c: 414: return 0.5 * _npowers_[prec/100+18] * _npowers_[(prec%100)/10+9] * _npow
      +                          ers_[prec%10];
  6114  16A1  300A               	movlw	10
  6115  16A2  00F7               	movwf	___awdiv@divisor
  6116  16A3  3000               	movlw	0
  6117  16A4  00F8               	movwf	___awdiv@divisor+1
  6118  16A5  0845               	movf	fround@prec,w
  6119  16A6  00BB               	movwf	??_fround
  6120  16A7  01BC               	clrf	??_fround+1
  6121  16A8  083B               	movf	??_fround,w
  6122  16A9  00F2               	movwf	___awmod@dividend
  6123  16AA  083C               	movf	??_fround+1,w
  6124  16AB  00F3               	movwf	___awmod@dividend+1
  6125  16AC  3064               	movlw	100
  6126  16AD  00F0               	movwf	___awmod@divisor
  6127  16AE  3000               	movlw	0
  6128  16AF  00F1               	movwf	___awmod@divisor+1
  6129  16B0  3190  2010  3196   	fcall	___awmod
  6130  16B3  0871               	movf	?___awmod+1,w
  6131  16B4  00FA               	movwf	___awdiv@dividend+1
  6132  16B5  0870               	movf	?___awmod,w
  6133  16B6  00F9               	movwf	___awdiv@dividend
  6134  16B7  3190  20F3  3196   	fcall	___awdiv
  6135  16BA  0877               	movf	?___awdiv,w
  6136  16BB  3E09               	addlw	9
  6137  16BC  0140               	movlb	0	; select bank0
  6138  16BD  00A4               	movwf	___wmul@multiplier
  6139  16BE  3000               	movlw	0
  6140  16BF  3D78               	addwfc	?___awdiv+1,w
  6141  16C0  00A5               	movwf	___wmul@multiplier+1
  6142  16C1  3003               	movlw	3
  6143  16C2  00A6               	movwf	___wmul@multiplicand
  6144  16C3  3000               	movlw	0
  6145  16C4  00A7               	movwf	___wmul@multiplicand+1
  6146  16C5  319E  2692  3196   	fcall	___wmul
  6147  16C8  0140               	movlb	0	; select bank0
  6148  16C9  0825               	movf	?___wmul+1,w
  6149  16CA  0085               	movwf	5
  6150  16CB  0824               	movf	?___wmul,w
  6151  16CC  0084               	movwf	4
  6152  16CD  3000               	movlw	low (__npowers_| (0+32768))
  6153  16CE  0784               	addwf	4,f
  6154  16CF  30A0               	movlw	high (__npowers_| (0+32768))
  6155  16D0  3D85               	addwfc	5,f
  6156  16D1  3F00               	moviw [0]fsr0
  6157  16D2  00A8               	movwf	___ftmul@f1
  6158  16D3  3F01               	moviw [1]fsr0
  6159  16D4  00A9               	movwf	___ftmul@f1+1
  6160  16D5  3F02               	moviw [2]fsr0
  6161  16D6  00AA               	movwf	___ftmul@f1+2
  6162  16D7  3064               	movlw	100
  6163  16D8  00F7               	movwf	___awdiv@divisor
  6164  16D9  3000               	movlw	0
  6165  16DA  00F8               	movwf	___awdiv@divisor+1
  6166  16DB  0845               	movf	fround@prec,w
  6167  16DC  00BD               	movwf	??_fround+2
  6168  16DD  01BE               	clrf	??_fround+3
  6169  16DE  083D               	movf	??_fround+2,w
  6170  16DF  00F9               	movwf	___awdiv@dividend
  6171  16E0  083E               	movf	??_fround+3,w
  6172  16E1  00FA               	movwf	___awdiv@dividend+1
  6173  16E2  3190  20F3  3196   	fcall	___awdiv
  6174  16E5  0877               	movf	?___awdiv,w
  6175  16E6  3E12               	addlw	18
  6176  16E7  0140               	movlb	0	; select bank0
  6177  16E8  00A4               	movwf	___wmul@multiplier
  6178  16E9  3000               	movlw	0
  6179  16EA  3D78               	addwfc	?___awdiv+1,w
  6180  16EB  00A5               	movwf	___wmul@multiplier+1
  6181  16EC  3003               	movlw	3
  6182  16ED  00A6               	movwf	___wmul@multiplicand
  6183  16EE  3000               	movlw	0
  6184  16EF  00A7               	movwf	___wmul@multiplicand+1
  6185  16F0  319E  2692  3196   	fcall	___wmul
  6186  16F3  0140               	movlb	0	; select bank0
  6187  16F4  0825               	movf	?___wmul+1,w
  6188  16F5  0085               	movwf	5
  6189  16F6  0824               	movf	?___wmul,w
  6190  16F7  0084               	movwf	4
  6191  16F8  3000               	movlw	low (__npowers_| (0+32768))
  6192  16F9  0784               	addwf	4,f
  6193  16FA  30A0               	movlw	high (__npowers_| (0+32768))
  6194  16FB  3D85               	addwfc	5,f
  6195  16FC  3F00               	moviw [0]fsr0
  6196  16FD  00AB               	movwf	___ftmul@f2
  6197  16FE  3F01               	moviw [1]fsr0
  6198  16FF  00AC               	movwf	___ftmul@f2+1
  6199  1700  3F02               	moviw [2]fsr0
  6200  1701  00AD               	movwf	___ftmul@f2+2
  6201  1702  3194  2414  3196   	fcall	___ftmul
  6202  1705  0140               	movlb	0	; select bank0
  6203  1706  0828               	movf	?___ftmul,w
  6204  1707  00C2               	movwf	_fround$942
  6205  1708  0829               	movf	?___ftmul+1,w
  6206  1709  00C3               	movwf	_fround$942+1
  6207  170A  082A               	movf	?___ftmul+2,w
  6208  170B  00C4               	movwf	_fround$942+2
  6209                           
  6210                           ;doprnt.c: 414: return 0.5 * _npowers_[prec/100+18] * _npowers_[(prec%100)/10+9] * _npow
      +                          ers_[prec%10];
  6211  170C  0845               	movf	fround@prec,w
  6212  170D  00BB               	movwf	??_fround
  6213  170E  01BC               	clrf	??_fround+1
  6214  170F  083B               	movf	??_fround,w
  6215  1710  00F2               	movwf	___awmod@dividend
  6216  1711  083C               	movf	??_fround+1,w
  6217  1712  00F3               	movwf	___awmod@dividend+1
  6218  1713  300A               	movlw	10
  6219  1714  00F0               	movwf	___awmod@divisor
  6220  1715  3000               	movlw	0
  6221  1716  00F1               	movwf	___awmod@divisor+1
  6222  1717  3190  2010  3196   	fcall	___awmod
  6223  171A  0871               	movf	?___awmod+1,w
  6224  171B  0140               	movlb	0	; select bank0
  6225  171C  00A5               	movwf	___wmul@multiplier+1
  6226  171D  0870               	movf	?___awmod,w
  6227  171E  00A4               	movwf	___wmul@multiplier
  6228  171F  3003               	movlw	3
  6229  1720  00A6               	movwf	___wmul@multiplicand
  6230  1721  3000               	movlw	0
  6231  1722  00A7               	movwf	___wmul@multiplicand+1
  6232  1723  319E  2692  3196   	fcall	___wmul
  6233  1726  0140               	movlb	0	; select bank0
  6234  1727  0825               	movf	?___wmul+1,w
  6235  1728  0085               	movwf	5
  6236  1729  0824               	movf	?___wmul,w
  6237  172A  0084               	movwf	4
  6238  172B  3000               	movlw	low (__npowers_| (0+32768))
  6239  172C  0784               	addwf	4,f
  6240  172D  30A0               	movlw	high (__npowers_| (0+32768))
  6241  172E  3D85               	addwfc	5,f
  6242  172F  3F00               	moviw [0]fsr0
  6243  1730  00A8               	movwf	___ftmul@f1
  6244  1731  3F01               	moviw [1]fsr0
  6245  1732  00A9               	movwf	___ftmul@f1+1
  6246  1733  3F02               	moviw [2]fsr0
  6247  1734  00AA               	movwf	___ftmul@f1+2
  6248  1735  0842               	movf	_fround$942,w
  6249  1736  00AB               	movwf	___ftmul@f2
  6250  1737  0843               	movf	_fround$942+1,w
  6251  1738  00AC               	movwf	___ftmul@f2+1
  6252  1739  0844               	movf	_fround$942+2,w
  6253  173A  00AD               	movwf	___ftmul@f2+2
  6254  173B  3194  2414  3196   	fcall	___ftmul
  6255  173E  0140               	movlb	0	; select bank0
  6256  173F  0828               	movf	?___ftmul,w
  6257  1740  00BF               	movwf	_fround$943
  6258  1741  0829               	movf	?___ftmul+1,w
  6259  1742  00C0               	movwf	_fround$943+1
  6260  1743  082A               	movf	?___ftmul+2,w
  6261  1744  00C1               	movwf	_fround$943+2
  6262                           
  6263                           ;doprnt.c: 414: return 0.5 * _npowers_[prec/100+18] * _npowers_[(prec%100)/10+9] * _npow
      +                          ers_[prec%10];
  6264  1745  3000               	movlw	0
  6265  1746  00A8               	movwf	___ftmul@f1
  6266  1747  3000               	movlw	0
  6267  1748  00A9               	movwf	___ftmul@f1+1
  6268  1749  303F               	movlw	63
  6269  174A  00AA               	movwf	___ftmul@f1+2
  6270  174B  083F               	movf	_fround$943,w
  6271  174C  00AB               	movwf	___ftmul@f2
  6272  174D  0840               	movf	_fround$943+1,w
  6273  174E  00AC               	movwf	___ftmul@f2+1
  6274  174F  0841               	movf	_fround$943+2,w
  6275  1750  00AD               	movwf	___ftmul@f2+2
  6276  1751  3194  2414         	fcall	___ftmul
  6277  1753  0140               	movlb	0	; select bank0
  6278  1754  0828               	movf	?___ftmul,w
  6279  1755  00B8               	movwf	?_fround
  6280  1756  0829               	movf	?___ftmul+1,w
  6281  1757  00B9               	movwf	?_fround+1
  6282  1758  082A               	movf	?___ftmul+2,w
  6283  1759  00BA               	movwf	?_fround+2
  6284  175A  0008               	return
  6285  175B                     l2663:	
  6286                           
  6287                           ;doprnt.c: 415: else if(prec > 10)
  6288  175B  300B               	movlw	11
  6289  175C  0245               	subwf	fround@prec,w
  6290  175D  1C03               	skipc
  6291  175E  2FD3               	goto	l2671
  6292                           
  6293                           ;doprnt.c: 416: return 0.5 * _npowers_[prec/10+9] * _npowers_[prec%10];
  6294  175F  0845               	movf	fround@prec,w
  6295  1760  00BB               	movwf	??_fround
  6296  1761  01BC               	clrf	??_fround+1
  6297  1762  083B               	movf	??_fround,w
  6298  1763  00F2               	movwf	___awmod@dividend
  6299  1764  083C               	movf	??_fround+1,w
  6300  1765  00F3               	movwf	___awmod@dividend+1
  6301  1766  300A               	movlw	10
  6302  1767  00F0               	movwf	___awmod@divisor
  6303  1768  3000               	movlw	0
  6304  1769  00F1               	movwf	___awmod@divisor+1
  6305  176A  3190  2010  3196   	fcall	___awmod
  6306  176D  0871               	movf	?___awmod+1,w
  6307  176E  0140               	movlb	0	; select bank0
  6308  176F  00A5               	movwf	___wmul@multiplier+1
  6309  1770  0870               	movf	?___awmod,w
  6310  1771  00A4               	movwf	___wmul@multiplier
  6311  1772  3003               	movlw	3
  6312  1773  00A6               	movwf	___wmul@multiplicand
  6313  1774  3000               	movlw	0
  6314  1775  00A7               	movwf	___wmul@multiplicand+1
  6315  1776  319E  2692  3196   	fcall	___wmul
  6316  1779  0140               	movlb	0	; select bank0
  6317  177A  0825               	movf	?___wmul+1,w
  6318  177B  0085               	movwf	5
  6319  177C  0824               	movf	?___wmul,w
  6320  177D  0084               	movwf	4
  6321  177E  3000               	movlw	low (__npowers_| (0+32768))
  6322  177F  0784               	addwf	4,f
  6323  1780  30A0               	movlw	high (__npowers_| (0+32768))
  6324  1781  3D85               	addwfc	5,f
  6325  1782  3F00               	moviw [0]fsr0
  6326  1783  00A8               	movwf	___ftmul@f1
  6327  1784  3F01               	moviw [1]fsr0
  6328  1785  00A9               	movwf	___ftmul@f1+1
  6329  1786  3F02               	moviw [2]fsr0
  6330  1787  00AA               	movwf	___ftmul@f1+2
  6331  1788  300A               	movlw	10
  6332  1789  00F7               	movwf	___awdiv@divisor
  6333  178A  3000               	movlw	0
  6334  178B  00F8               	movwf	___awdiv@divisor+1
  6335  178C  0845               	movf	fround@prec,w
  6336  178D  00BD               	movwf	??_fround+2
  6337  178E  01BE               	clrf	??_fround+3
  6338  178F  083D               	movf	??_fround+2,w
  6339  1790  00F9               	movwf	___awdiv@dividend
  6340  1791  083E               	movf	??_fround+3,w
  6341  1792  00FA               	movwf	___awdiv@dividend+1
  6342  1793  3190  20F3  3196   	fcall	___awdiv
  6343  1796  0877               	movf	?___awdiv,w
  6344  1797  3E09               	addlw	9
  6345  1798  0140               	movlb	0	; select bank0
  6346  1799  00A4               	movwf	___wmul@multiplier
  6347  179A  3000               	movlw	0
  6348  179B  3D78               	addwfc	?___awdiv+1,w
  6349  179C  00A5               	movwf	___wmul@multiplier+1
  6350  179D  3003               	movlw	3
  6351  179E  00A6               	movwf	___wmul@multiplicand
  6352  179F  3000               	movlw	0
  6353  17A0  00A7               	movwf	___wmul@multiplicand+1
  6354  17A1  319E  2692  3196   	fcall	___wmul
  6355  17A4  0140               	movlb	0	; select bank0
  6356  17A5  0825               	movf	?___wmul+1,w
  6357  17A6  0085               	movwf	5
  6358  17A7  0824               	movf	?___wmul,w
  6359  17A8  0084               	movwf	4
  6360  17A9  3000               	movlw	low (__npowers_| (0+32768))
  6361  17AA  0784               	addwf	4,f
  6362  17AB  30A0               	movlw	high (__npowers_| (0+32768))
  6363  17AC  3D85               	addwfc	5,f
  6364  17AD  3F00               	moviw [0]fsr0
  6365  17AE  00AB               	movwf	___ftmul@f2
  6366  17AF  3F01               	moviw [1]fsr0
  6367  17B0  00AC               	movwf	___ftmul@f2+1
  6368  17B1  3F02               	moviw [2]fsr0
  6369  17B2  00AD               	movwf	___ftmul@f2+2
  6370  17B3  3194  2414  3196   	fcall	___ftmul
  6371  17B6  0140               	movlb	0	; select bank0
  6372  17B7  0828               	movf	?___ftmul,w
  6373  17B8  00C2               	movwf	_fround$942
  6374  17B9  0829               	movf	?___ftmul+1,w
  6375  17BA  00C3               	movwf	_fround$942+1
  6376  17BB  082A               	movf	?___ftmul+2,w
  6377  17BC  00C4               	movwf	_fround$942+2
  6378                           
  6379                           ;doprnt.c: 416: return 0.5 * _npowers_[prec/10+9] * _npowers_[prec%10];
  6380  17BD  3000               	movlw	0
  6381  17BE  00A8               	movwf	___ftmul@f1
  6382  17BF  3000               	movlw	0
  6383  17C0  00A9               	movwf	___ftmul@f1+1
  6384  17C1  303F               	movlw	63
  6385  17C2  00AA               	movwf	___ftmul@f1+2
  6386  17C3  0842               	movf	_fround$942,w
  6387  17C4  00AB               	movwf	___ftmul@f2
  6388  17C5  0843               	movf	_fround$942+1,w
  6389  17C6  00AC               	movwf	___ftmul@f2+1
  6390  17C7  0844               	movf	_fround$942+2,w
  6391  17C8  00AD               	movwf	___ftmul@f2+2
  6392  17C9  3194  2414         	fcall	___ftmul
  6393  17CB  0140               	movlb	0	; select bank0
  6394  17CC  0828               	movf	?___ftmul,w
  6395  17CD  00B8               	movwf	?_fround
  6396  17CE  0829               	movf	?___ftmul+1,w
  6397  17CF  00B9               	movwf	?_fround+1
  6398  17D0  082A               	movf	?___ftmul+2,w
  6399  17D1  00BA               	movwf	?_fround+2
  6400  17D2  0008               	return
  6401  17D3                     l2671:	
  6402                           
  6403                           ;doprnt.c: 417: return 0.5 * _npowers_[prec];
  6404  17D3  3000               	movlw	0
  6405  17D4  00A8               	movwf	___ftmul@f1
  6406  17D5  3000               	movlw	0
  6407  17D6  00A9               	movwf	___ftmul@f1+1
  6408  17D7  303F               	movlw	63
  6409  17D8  00AA               	movwf	___ftmul@f1+2
  6410  17D9  0845               	movf	fround@prec,w
  6411  17DA  00BB               	movwf	??_fround
  6412  17DB  01BC               	clrf	??_fround+1
  6413  17DC  083B               	movf	??_fround,w
  6414  17DD  00A4               	movwf	___wmul@multiplier
  6415  17DE  083C               	movf	??_fround+1,w
  6416  17DF  00A5               	movwf	___wmul@multiplier+1
  6417  17E0  3003               	movlw	3
  6418  17E1  00A6               	movwf	___wmul@multiplicand
  6419  17E2  3000               	movlw	0
  6420  17E3  00A7               	movwf	___wmul@multiplicand+1
  6421  17E4  319E  2692  3196   	fcall	___wmul
  6422  17E7  0140               	movlb	0	; select bank0
  6423  17E8  0825               	movf	?___wmul+1,w
  6424  17E9  0085               	movwf	5
  6425  17EA  0824               	movf	?___wmul,w
  6426  17EB  0084               	movwf	4
  6427  17EC  3000               	movlw	low (__npowers_| (0+32768))
  6428  17ED  0784               	addwf	4,f
  6429  17EE  30A0               	movlw	high (__npowers_| (0+32768))
  6430  17EF  3D85               	addwfc	5,f
  6431  17F0  3F00               	moviw [0]fsr0
  6432  17F1  00AB               	movwf	___ftmul@f2
  6433  17F2  3F01               	moviw [1]fsr0
  6434  17F3  00AC               	movwf	___ftmul@f2+1
  6435  17F4  3F02               	moviw [2]fsr0
  6436  17F5  00AD               	movwf	___ftmul@f2+2
  6437  17F6  3194  2414         	fcall	___ftmul
  6438  17F8  0140               	movlb	0	; select bank0
  6439  17F9  0828               	movf	?___ftmul,w
  6440  17FA  00B8               	movwf	?_fround
  6441  17FB  0829               	movf	?___ftmul+1,w
  6442  17FC  00B9               	movwf	?_fround+1
  6443  17FD  082A               	movf	?___ftmul+2,w
  6444  17FE  00BA               	movwf	?_fround+2
  6445  17FF  0008               	return
  6446  1800                     __end_of_fround:	
  6447                           
  6448                           	psect	text5
  6449  1414                     __ptext5:	
  6450 ;; *************** function ___ftmul *****************
  6451 ;; Defined at:
  6452 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\ftmul.c"
  6453 ;; Parameters:    Size  Location     Type
  6454 ;;  f1              3    8[BANK0 ] float 
  6455 ;;  f2              3   11[BANK0 ] float 
  6456 ;; Auto vars:     Size  Location     Type
  6457 ;;  f3_as_produc    3   19[BANK0 ] unsigned um
  6458 ;;  sign            1   23[BANK0 ] unsigned char 
  6459 ;;  cntr            1   22[BANK0 ] unsigned char 
  6460 ;;  exp             1   18[BANK0 ] unsigned char 
  6461 ;; Return value:  Size  Location     Type
  6462 ;;                  3    8[BANK0 ] float 
  6463 ;; Registers used:
  6464 ;;		wreg, status,2, status,0, pclath, cstack
  6465 ;; Tracked objects:
  6466 ;;		On entry : 0/0
  6467 ;;		On exit  : 0/0
  6468 ;;		Unchanged: 0/0
  6469 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
  6470 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  6471 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  6472 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  6473 ;;      Totals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  6474 ;;Total ram usage:       16 bytes
  6475 ;; Hardware stack levels used:    1
  6476 ;; Hardware stack levels required when called:    1
  6477 ;; This function calls:
  6478 ;;		___ftpack
  6479 ;; This function is called by:
  6480 ;;		_fround
  6481 ;;		_scale
  6482 ;;		_sprintf
  6483 ;; This function uses a non-reentrant model
  6484 ;;
  6485                           
  6486                           
  6487                           ;psect for function ___ftmul
  6488  1414                     ___ftmul:	
  6489                           
  6490                           ;incstack = 0
  6491                           ; Regs used in ___ftmul: [wreg+status,2+status,0+pclath+cstack]
  6492  1414  0140               	movlb	0	; select bank0
  6493  1415  0828               	movf	___ftmul@f1,w
  6494  1416  00AE               	movwf	??___ftmul
  6495  1417  0829               	movf	___ftmul@f1+1,w
  6496  1418  00AF               	movwf	??___ftmul+1
  6497  1419  082A               	movf	___ftmul@f1+2,w
  6498  141A  00B0               	movwf	??___ftmul+2
  6499  141B  1003               	clrc
  6500  141C  0D2F               	rlf	??___ftmul+1,w
  6501  141D  0D30               	rlf	??___ftmul+2,w
  6502  141E  00B1               	movwf	??___ftmul+3
  6503  141F  0831               	movf	??___ftmul+3,w
  6504  1420  00B2               	movwf	___ftmul@exp
  6505  1421  0832               	movf	___ftmul@exp,w
  6506  1422  1D03               	btfss	3,2
  6507  1423  2C2B               	goto	l2563
  6508  1424  3000               	movlw	0
  6509  1425  00A8               	movwf	?___ftmul
  6510  1426  3000               	movlw	0
  6511  1427  00A9               	movwf	?___ftmul+1
  6512  1428  3000               	movlw	0
  6513  1429  00AA               	movwf	?___ftmul+2
  6514  142A  0008               	return
  6515  142B                     l2563:	
  6516  142B  082B               	movf	___ftmul@f2,w
  6517  142C  00AE               	movwf	??___ftmul
  6518  142D  082C               	movf	___ftmul@f2+1,w
  6519  142E  00AF               	movwf	??___ftmul+1
  6520  142F  082D               	movf	___ftmul@f2+2,w
  6521  1430  00B0               	movwf	??___ftmul+2
  6522  1431  1003               	clrc
  6523  1432  0D2F               	rlf	??___ftmul+1,w
  6524  1433  0D30               	rlf	??___ftmul+2,w
  6525  1434  00B1               	movwf	??___ftmul+3
  6526  1435  0831               	movf	??___ftmul+3,w
  6527  1436  00B7               	movwf	___ftmul@sign
  6528  1437  0837               	movf	___ftmul@sign,w
  6529  1438  1D03               	btfss	3,2
  6530  1439  2C41               	goto	l2569
  6531  143A  3000               	movlw	0
  6532  143B  00A8               	movwf	?___ftmul
  6533  143C  3000               	movlw	0
  6534  143D  00A9               	movwf	?___ftmul+1
  6535  143E  3000               	movlw	0
  6536  143F  00AA               	movwf	?___ftmul+2
  6537  1440  0008               	return
  6538  1441                     l2569:	
  6539  1441  0837               	movf	___ftmul@sign,w
  6540  1442  3E7B               	addlw	123
  6541  1443  00AE               	movwf	??___ftmul
  6542  1444  082E               	movf	??___ftmul,w
  6543  1445  07B2               	addwf	___ftmul@exp,f
  6544  1446  0828               	movf	___ftmul@f1,w
  6545  1447  00AE               	movwf	??___ftmul
  6546  1448  0829               	movf	___ftmul@f1+1,w
  6547  1449  00AF               	movwf	??___ftmul+1
  6548  144A  082A               	movf	___ftmul@f1+2,w
  6549  144B  00B0               	movwf	??___ftmul+2
  6550  144C  3010               	movlw	16
  6551  144D                     u3245:	
  6552  144D  36B0               	lsrf	??___ftmul+2,f
  6553  144E  0CAF               	rrf	??___ftmul+1,f
  6554  144F  0CAE               	rrf	??___ftmul,f
  6555  1450  0B89               	decfsz	9,f
  6556  1451  2C4D               	goto	u3245
  6557  1452  082E               	movf	??___ftmul,w
  6558  1453  00B1               	movwf	??___ftmul+3
  6559  1454  0831               	movf	??___ftmul+3,w
  6560  1455  00B7               	movwf	___ftmul@sign
  6561  1456  082B               	movf	___ftmul@f2,w
  6562  1457  00AE               	movwf	??___ftmul
  6563  1458  082C               	movf	___ftmul@f2+1,w
  6564  1459  00AF               	movwf	??___ftmul+1
  6565  145A  082D               	movf	___ftmul@f2+2,w
  6566  145B  00B0               	movwf	??___ftmul+2
  6567  145C  3010               	movlw	16
  6568  145D                     u3255:	
  6569  145D  36B0               	lsrf	??___ftmul+2,f
  6570  145E  0CAF               	rrf	??___ftmul+1,f
  6571  145F  0CAE               	rrf	??___ftmul,f
  6572  1460  0B89               	decfsz	9,f
  6573  1461  2C5D               	goto	u3255
  6574  1462  082E               	movf	??___ftmul,w
  6575  1463  00B1               	movwf	??___ftmul+3
  6576  1464  0831               	movf	??___ftmul+3,w
  6577  1465  06B7               	xorwf	___ftmul@sign,f
  6578  1466  3080               	movlw	128
  6579  1467  00AE               	movwf	??___ftmul
  6580  1468  082E               	movf	??___ftmul,w
  6581  1469  05B7               	andwf	___ftmul@sign,f
  6582  146A  17A9               	bsf	___ftmul@f1+1,7
  6583  146B  17AC               	bsf	___ftmul@f2+1,7
  6584  146C  30FF               	movlw	255
  6585  146D  05AB               	andwf	___ftmul@f2,f
  6586  146E  30FF               	movlw	255
  6587  146F  05AC               	andwf	___ftmul@f2+1,f
  6588  1470  3000               	movlw	0
  6589  1471  05AD               	andwf	___ftmul@f2+2,f
  6590  1472  3000               	movlw	0
  6591  1473  00B3               	movwf	___ftmul@f3_as_product
  6592  1474  3000               	movlw	0
  6593  1475  00B4               	movwf	___ftmul@f3_as_product+1
  6594  1476  3000               	movlw	0
  6595  1477  00B5               	movwf	___ftmul@f3_as_product+2
  6596  1478  3007               	movlw	7
  6597  1479  00AE               	movwf	??___ftmul
  6598  147A  082E               	movf	??___ftmul,w
  6599  147B  00B6               	movwf	___ftmul@cntr
  6600  147C                     l2581:	
  6601  147C  1C28               	btfss	___ftmul@f1,0
  6602  147D  2C84               	goto	l2585
  6603  147E  082B               	movf	___ftmul@f2,w
  6604  147F  07B3               	addwf	___ftmul@f3_as_product,f
  6605  1480  082C               	movf	___ftmul@f2+1,w
  6606  1481  3DB4               	addwfc	___ftmul@f3_as_product+1,f
  6607  1482  082D               	movf	___ftmul@f2+2,w
  6608  1483  3DB5               	addwfc	___ftmul@f3_as_product+2,f
  6609  1484                     l2585:	
  6610  1484  3001               	movlw	1
  6611  1485                     u3275:	
  6612  1485  36AA               	lsrf	___ftmul@f1+2,f
  6613  1486  0CA9               	rrf	___ftmul@f1+1,f
  6614  1487  0CA8               	rrf	___ftmul@f1,f
  6615  1488  0B89               	decfsz	9,f
  6616  1489  2C85               	goto	u3275
  6617  148A  3001               	movlw	1
  6618  148B                     u3285:	
  6619  148B  35AB               	lslf	___ftmul@f2,f
  6620  148C  0DAC               	rlf	___ftmul@f2+1,f
  6621  148D  0DAD               	rlf	___ftmul@f2+2,f
  6622  148E  0B89               	decfsz	9,f
  6623  148F  2C8B               	goto	u3285
  6624  1490  3001               	movlw	1
  6625  1491  02B6               	subwf	___ftmul@cntr,f
  6626  1492  1D03               	btfss	3,2
  6627  1493  2C7C               	goto	l2581
  6628  1494  3009               	movlw	9
  6629  1495  00AE               	movwf	??___ftmul
  6630  1496  082E               	movf	??___ftmul,w
  6631  1497  00B6               	movwf	___ftmul@cntr
  6632  1498                     l2593:	
  6633  1498  1C28               	btfss	___ftmul@f1,0
  6634  1499  2CA0               	goto	l2597
  6635  149A  082B               	movf	___ftmul@f2,w
  6636  149B  07B3               	addwf	___ftmul@f3_as_product,f
  6637  149C  082C               	movf	___ftmul@f2+1,w
  6638  149D  3DB4               	addwfc	___ftmul@f3_as_product+1,f
  6639  149E  082D               	movf	___ftmul@f2+2,w
  6640  149F  3DB5               	addwfc	___ftmul@f3_as_product+2,f
  6641  14A0                     l2597:	
  6642  14A0  3001               	movlw	1
  6643  14A1                     u3315:	
  6644  14A1  36AA               	lsrf	___ftmul@f1+2,f
  6645  14A2  0CA9               	rrf	___ftmul@f1+1,f
  6646  14A3  0CA8               	rrf	___ftmul@f1,f
  6647  14A4  0B89               	decfsz	9,f
  6648  14A5  2CA1               	goto	u3315
  6649  14A6  3001               	movlw	1
  6650  14A7                     u3325:	
  6651  14A7  36B5               	lsrf	___ftmul@f3_as_product+2,f
  6652  14A8  0CB4               	rrf	___ftmul@f3_as_product+1,f
  6653  14A9  0CB3               	rrf	___ftmul@f3_as_product,f
  6654  14AA  0B89               	decfsz	9,f
  6655  14AB  2CA7               	goto	u3325
  6656  14AC  3001               	movlw	1
  6657  14AD  02B6               	subwf	___ftmul@cntr,f
  6658  14AE  1D03               	btfss	3,2
  6659  14AF  2C98               	goto	l2593
  6660  14B0  0833               	movf	___ftmul@f3_as_product,w
  6661  14B1  00F0               	movwf	___ftpack@arg
  6662  14B2  0834               	movf	___ftmul@f3_as_product+1,w
  6663  14B3  00F1               	movwf	___ftpack@arg+1
  6664  14B4  0835               	movf	___ftmul@f3_as_product+2,w
  6665  14B5  00F2               	movwf	___ftpack@arg+2
  6666  14B6  0832               	movf	___ftmul@exp,w
  6667  14B7  00AE               	movwf	??___ftmul
  6668  14B8  082E               	movf	??___ftmul,w
  6669  14B9  00F3               	movwf	___ftpack@exp
  6670  14BA  0837               	movf	___ftmul@sign,w
  6671  14BB  00AF               	movwf	??___ftmul+1
  6672  14BC  082F               	movf	??___ftmul+1,w
  6673  14BD  00F4               	movwf	___ftpack@sign
  6674  14BE  3191  2145         	fcall	___ftpack
  6675  14C0  0870               	movf	?___ftpack,w
  6676  14C1  0140               	movlb	0	; select bank0
  6677  14C2  00A8               	movwf	?___ftmul
  6678  14C3  0871               	movf	?___ftpack+1,w
  6679  14C4  00A9               	movwf	?___ftmul+1
  6680  14C5  0872               	movf	?___ftpack+2,w
  6681  14C6  00AA               	movwf	?___ftmul+2
  6682  14C7  0008               	return
  6683  14C8                     __end_of___ftmul:	
  6684                           
  6685                           	psect	text6
  6686  1010                     __ptext6:	
  6687 ;; *************** function ___awmod *****************
  6688 ;; Defined at:
  6689 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\awmod.c"
  6690 ;; Parameters:    Size  Location     Type
  6691 ;;  divisor         2    0[COMMON] int 
  6692 ;;  dividend        2    2[COMMON] int 
  6693 ;; Auto vars:     Size  Location     Type
  6694 ;;  sign            1    6[COMMON] unsigned char 
  6695 ;;  counter         1    5[COMMON] unsigned char 
  6696 ;; Return value:  Size  Location     Type
  6697 ;;                  2    0[COMMON] int 
  6698 ;; Registers used:
  6699 ;;		wreg, status,2, status,0
  6700 ;; Tracked objects:
  6701 ;;		On entry : 0/0
  6702 ;;		On exit  : 0/0
  6703 ;;		Unchanged: 0/0
  6704 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
  6705 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  6706 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  6707 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  6708 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  6709 ;;Total ram usage:        7 bytes
  6710 ;; Hardware stack levels used:    1
  6711 ;; This function calls:
  6712 ;;		Nothing
  6713 ;; This function is called by:
  6714 ;;		_fround
  6715 ;;		_scale
  6716 ;; This function uses a non-reentrant model
  6717 ;;
  6718                           
  6719                           
  6720                           ;psect for function ___awmod
  6721  1010                     ___awmod:	
  6722                           
  6723                           ;incstack = 0
  6724                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  6725  1010  01F6               	clrf	___awmod@sign
  6726  1011  1FF3               	btfss	___awmod@dividend+1,7
  6727  1012  281A               	goto	l2457
  6728  1013  09F2               	comf	___awmod@dividend,f
  6729  1014  09F3               	comf	___awmod@dividend+1,f
  6730  1015  0AF2               	incf	___awmod@dividend,f
  6731  1016  1903               	skipnz
  6732  1017  0AF3               	incf	___awmod@dividend+1,f
  6733  1018  01F6               	clrf	___awmod@sign
  6734  1019  0AF6               	incf	___awmod@sign,f
  6735  101A                     l2457:	
  6736  101A  1FF1               	btfss	___awmod@divisor+1,7
  6737  101B  2821               	goto	l2461
  6738  101C  09F0               	comf	___awmod@divisor,f
  6739  101D  09F1               	comf	___awmod@divisor+1,f
  6740  101E  0AF0               	incf	___awmod@divisor,f
  6741  101F  1903               	skipnz
  6742  1020  0AF1               	incf	___awmod@divisor+1,f
  6743  1021                     l2461:	
  6744  1021  0870               	movf	___awmod@divisor,w
  6745  1022  0471               	iorwf	___awmod@divisor+1,w
  6746  1023  1903               	btfsc	3,2
  6747  1024  2848               	goto	l2479
  6748  1025  01F5               	clrf	___awmod@counter
  6749  1026  0AF5               	incf	___awmod@counter,f
  6750  1027                     l2469:	
  6751  1027  1BF1               	btfsc	___awmod@divisor+1,7
  6752  1028  2833               	goto	l2471
  6753  1029  3001               	movlw	1
  6754  102A                     u2935:	
  6755  102A  35F0               	lslf	___awmod@divisor,f
  6756  102B  0DF1               	rlf	___awmod@divisor+1,f
  6757  102C  0B89               	decfsz	9,f
  6758  102D  282A               	goto	u2935
  6759  102E  3001               	movlw	1
  6760  102F  00F4               	movwf	??___awmod
  6761  1030  0874               	movf	??___awmod,w
  6762  1031  07F5               	addwf	___awmod@counter,f
  6763  1032  2827               	goto	l2469
  6764  1033                     l2471:	
  6765  1033  0871               	movf	___awmod@divisor+1,w
  6766  1034  0273               	subwf	___awmod@dividend+1,w
  6767  1035  1D03               	skipz
  6768  1036  2839               	goto	u2955
  6769  1037  0870               	movf	___awmod@divisor,w
  6770  1038  0272               	subwf	___awmod@dividend,w
  6771  1039                     u2955:	
  6772  1039  1C03               	skipc
  6773  103A  283F               	goto	l2475
  6774  103B  0870               	movf	___awmod@divisor,w
  6775  103C  02F2               	subwf	___awmod@dividend,f
  6776  103D  0871               	movf	___awmod@divisor+1,w
  6777  103E  3BF3               	subwfb	___awmod@dividend+1,f
  6778  103F                     l2475:	
  6779  103F  3001               	movlw	1
  6780  1040                     u2965:	
  6781  1040  36F1               	lsrf	___awmod@divisor+1,f
  6782  1041  0CF0               	rrf	___awmod@divisor,f
  6783  1042  0B89               	decfsz	9,f
  6784  1043  2840               	goto	u2965
  6785  1044  3001               	movlw	1
  6786  1045  02F5               	subwf	___awmod@counter,f
  6787  1046  1D03               	btfss	3,2
  6788  1047  2833               	goto	l2471
  6789  1048                     l2479:	
  6790  1048  0876               	movf	___awmod@sign,w
  6791  1049  1903               	btfsc	3,2
  6792  104A  2850               	goto	l2483
  6793  104B  09F2               	comf	___awmod@dividend,f
  6794  104C  09F3               	comf	___awmod@dividend+1,f
  6795  104D  0AF2               	incf	___awmod@dividend,f
  6796  104E  1903               	skipnz
  6797  104F  0AF3               	incf	___awmod@dividend+1,f
  6798  1050                     l2483:	
  6799  1050  0873               	movf	___awmod@dividend+1,w
  6800  1051  00F1               	movwf	?___awmod+1
  6801  1052  0872               	movf	___awmod@dividend,w
  6802  1053  00F0               	movwf	?___awmod
  6803  1054  0008               	return
  6804  1055                     __end_of___awmod:	
  6805                           
  6806                           	psect	text7
  6807  10F3                     __ptext7:	
  6808 ;; *************** function ___awdiv *****************
  6809 ;; Defined at:
  6810 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\awdiv.c"
  6811 ;; Parameters:    Size  Location     Type
  6812 ;;  divisor         2    7[COMMON] int 
  6813 ;;  dividend        2    9[COMMON] int 
  6814 ;; Auto vars:     Size  Location     Type
  6815 ;;  quotient        2    2[BANK0 ] int 
  6816 ;;  sign            1    1[BANK0 ] unsigned char 
  6817 ;;  counter         1    0[BANK0 ] unsigned char 
  6818 ;; Return value:  Size  Location     Type
  6819 ;;                  2    7[COMMON] int 
  6820 ;; Registers used:
  6821 ;;		wreg, status,2, status,0
  6822 ;; Tracked objects:
  6823 ;;		On entry : 0/0
  6824 ;;		On exit  : 0/0
  6825 ;;		Unchanged: 0/0
  6826 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
  6827 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  6828 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  6829 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  6830 ;;      Totals:         5       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  6831 ;;Total ram usage:        9 bytes
  6832 ;; Hardware stack levels used:    1
  6833 ;; This function calls:
  6834 ;;		Nothing
  6835 ;; This function is called by:
  6836 ;;		_fround
  6837 ;;		_scale
  6838 ;;		_sprintf
  6839 ;; This function uses a non-reentrant model
  6840 ;;
  6841                           
  6842                           
  6843                           ;psect for function ___awdiv
  6844  10F3                     ___awdiv:	
  6845                           
  6846                           ;incstack = 0
  6847                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  6848  10F3  0140               	movlb	0	; select bank0
  6849  10F4  01A1               	clrf	___awdiv@sign
  6850  10F5  1FF8               	btfss	___awdiv@divisor+1,7
  6851  10F6  28FE               	goto	l2413
  6852  10F7  09F7               	comf	___awdiv@divisor,f
  6853  10F8  09F8               	comf	___awdiv@divisor+1,f
  6854  10F9  0AF7               	incf	___awdiv@divisor,f
  6855  10FA  1903               	skipnz
  6856  10FB  0AF8               	incf	___awdiv@divisor+1,f
  6857  10FC  01A1               	clrf	___awdiv@sign
  6858  10FD  0AA1               	incf	___awdiv@sign,f
  6859  10FE                     l2413:	
  6860  10FE  1FFA               	btfss	___awdiv@dividend+1,7
  6861  10FF  2909               	goto	l2419
  6862  1100  09F9               	comf	___awdiv@dividend,f
  6863  1101  09FA               	comf	___awdiv@dividend+1,f
  6864  1102  0AF9               	incf	___awdiv@dividend,f
  6865  1103  1903               	skipnz
  6866  1104  0AFA               	incf	___awdiv@dividend+1,f
  6867  1105  3001               	movlw	1
  6868  1106  00FB               	movwf	??___awdiv
  6869  1107  087B               	movf	??___awdiv,w
  6870  1108  06A1               	xorwf	___awdiv@sign,f
  6871  1109                     l2419:	
  6872  1109  01A2               	clrf	___awdiv@quotient
  6873  110A  01A3               	clrf	___awdiv@quotient+1
  6874  110B  0877               	movf	___awdiv@divisor,w
  6875  110C  0478               	iorwf	___awdiv@divisor+1,w
  6876  110D  1903               	btfsc	3,2
  6877  110E  2938               	goto	l2441
  6878  110F  01A0               	clrf	___awdiv@counter
  6879  1110  0AA0               	incf	___awdiv@counter,f
  6880  1111                     l2429:	
  6881  1111  1BF8               	btfsc	___awdiv@divisor+1,7
  6882  1112  291D               	goto	l2431
  6883  1113  3001               	movlw	1
  6884  1114                     u2835:	
  6885  1114  35F7               	lslf	___awdiv@divisor,f
  6886  1115  0DF8               	rlf	___awdiv@divisor+1,f
  6887  1116  0B89               	decfsz	9,f
  6888  1117  2914               	goto	u2835
  6889  1118  3001               	movlw	1
  6890  1119  00FB               	movwf	??___awdiv
  6891  111A  087B               	movf	??___awdiv,w
  6892  111B  07A0               	addwf	___awdiv@counter,f
  6893  111C  2911               	goto	l2429
  6894  111D                     l2431:	
  6895  111D  3001               	movlw	1
  6896  111E                     u2855:	
  6897  111E  35A2               	lslf	___awdiv@quotient,f
  6898  111F  0DA3               	rlf	___awdiv@quotient+1,f
  6899  1120  0B89               	decfsz	9,f
  6900  1121  291E               	goto	u2855
  6901  1122  0878               	movf	___awdiv@divisor+1,w
  6902  1123  027A               	subwf	___awdiv@dividend+1,w
  6903  1124  1D03               	skipz
  6904  1125  2928               	goto	u2865
  6905  1126  0877               	movf	___awdiv@divisor,w
  6906  1127  0279               	subwf	___awdiv@dividend,w
  6907  1128                     u2865:	
  6908  1128  1C03               	skipc
  6909  1129  292F               	goto	l2437
  6910  112A  0877               	movf	___awdiv@divisor,w
  6911  112B  02F9               	subwf	___awdiv@dividend,f
  6912  112C  0878               	movf	___awdiv@divisor+1,w
  6913  112D  3BFA               	subwfb	___awdiv@dividend+1,f
  6914  112E  1422               	bsf	___awdiv@quotient,0
  6915  112F                     l2437:	
  6916  112F  3001               	movlw	1
  6917  1130                     u2875:	
  6918  1130  36F8               	lsrf	___awdiv@divisor+1,f
  6919  1131  0CF7               	rrf	___awdiv@divisor,f
  6920  1132  0B89               	decfsz	9,f
  6921  1133  2930               	goto	u2875
  6922  1134  3001               	movlw	1
  6923  1135  02A0               	subwf	___awdiv@counter,f
  6924  1136  1D03               	btfss	3,2
  6925  1137  291D               	goto	l2431
  6926  1138                     l2441:	
  6927  1138  0821               	movf	___awdiv@sign,w
  6928  1139  1903               	btfsc	3,2
  6929  113A  2940               	goto	l2445
  6930  113B  09A2               	comf	___awdiv@quotient,f
  6931  113C  09A3               	comf	___awdiv@quotient+1,f
  6932  113D  0AA2               	incf	___awdiv@quotient,f
  6933  113E  1903               	skipnz
  6934  113F  0AA3               	incf	___awdiv@quotient+1,f
  6935  1140                     l2445:	
  6936  1140  0823               	movf	___awdiv@quotient+1,w
  6937  1141  00F8               	movwf	?___awdiv+1
  6938  1142  0822               	movf	___awdiv@quotient,w
  6939  1143  00F7               	movwf	?___awdiv
  6940  1144  0008               	return
  6941  1145                     __end_of___awdiv:	
  6942                           
  6943                           	psect	text8
  6944  14C8                     __ptext8:	
  6945 ;; *************** function __tdiv_to_l_ *****************
  6946 ;; Defined at:
  6947 ;;		line 60 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\ftdivl.c"
  6948 ;; Parameters:    Size  Location     Type
  6949 ;;  f1              3    0[COMMON] float 
  6950 ;;  f2              3    3[COMMON] float 
  6951 ;; Auto vars:     Size  Location     Type
  6952 ;;  quot            4    0[BANK0 ] unsigned long 
  6953 ;;  exp1            1    5[BANK0 ] unsigned char 
  6954 ;;  cntr            1    4[BANK0 ] unsigned char 
  6955 ;; Return value:  Size  Location     Type
  6956 ;;                  4    0[COMMON] unsigned long 
  6957 ;; Registers used:
  6958 ;;		wreg, status,2, status,0
  6959 ;; Tracked objects:
  6960 ;;		On entry : 0/0
  6961 ;;		On exit  : 0/0
  6962 ;;		Unchanged: 0/0
  6963 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
  6964 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  6965 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  6966 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  6967 ;;      Totals:        10       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  6968 ;;Total ram usage:       16 bytes
  6969 ;; Hardware stack levels used:    1
  6970 ;; This function calls:
  6971 ;;		Nothing
  6972 ;; This function is called by:
  6973 ;;		_sprintf
  6974 ;; This function uses a non-reentrant model
  6975 ;;
  6976                           
  6977                           
  6978                           ;psect for function __tdiv_to_l_
  6979  14C8                     __tdiv_to_l_:	
  6980                           
  6981                           ;incstack = 0
  6982                           ; Regs used in __tdiv_to_l_: [wreg+status,2+status,0]
  6983  14C8  0870               	movf	__tdiv_to_l_@f1,w
  6984  14C9  00F6               	movwf	??__tdiv_to_l_
  6985  14CA  0871               	movf	__tdiv_to_l_@f1+1,w
  6986  14CB  00F7               	movwf	??__tdiv_to_l_+1
  6987  14CC  0872               	movf	__tdiv_to_l_@f1+2,w
  6988  14CD  00F8               	movwf	??__tdiv_to_l_+2
  6989  14CE  1003               	clrc
  6990  14CF  0D77               	rlf	??__tdiv_to_l_+1,w
  6991  14D0  0D78               	rlf	??__tdiv_to_l_+2,w
  6992  14D1  00F9               	movwf	??__tdiv_to_l_+3
  6993  14D2  0879               	movf	??__tdiv_to_l_+3,w
  6994  14D3  0140               	movlb	0	; select bank0
  6995  14D4  00A5               	movwf	__tdiv_to_l_@exp1
  6996  14D5  0825               	movf	__tdiv_to_l_@exp1,w
  6997  14D6  1D03               	btfss	3,2
  6998  14D7  2CE1               	goto	l2733
  6999  14D8  3000               	movlw	0
  7000  14D9  00F3               	movwf	?__tdiv_to_l_+3
  7001  14DA  3000               	movlw	0
  7002  14DB  00F2               	movwf	?__tdiv_to_l_+2
  7003  14DC  3000               	movlw	0
  7004  14DD  00F1               	movwf	?__tdiv_to_l_+1
  7005  14DE  3000               	movlw	0
  7006  14DF  00F0               	movwf	?__tdiv_to_l_
  7007  14E0  0008               	return
  7008  14E1                     l2733:	
  7009  14E1  0873               	movf	__tdiv_to_l_@f2,w
  7010  14E2  00F6               	movwf	??__tdiv_to_l_
  7011  14E3  0874               	movf	__tdiv_to_l_@f2+1,w
  7012  14E4  00F7               	movwf	??__tdiv_to_l_+1
  7013  14E5  0875               	movf	__tdiv_to_l_@f2+2,w
  7014  14E6  00F8               	movwf	??__tdiv_to_l_+2
  7015  14E7  1003               	clrc
  7016  14E8  0D77               	rlf	??__tdiv_to_l_+1,w
  7017  14E9  0D78               	rlf	??__tdiv_to_l_+2,w
  7018  14EA  00F9               	movwf	??__tdiv_to_l_+3
  7019  14EB  0879               	movf	??__tdiv_to_l_+3,w
  7020  14EC  00A4               	movwf	__tdiv_to_l_@cntr
  7021  14ED  0824               	movf	__tdiv_to_l_@cntr,w
  7022  14EE  1D03               	btfss	3,2
  7023  14EF  2CF9               	goto	l657
  7024  14F0  3000               	movlw	0
  7025  14F1  00F3               	movwf	?__tdiv_to_l_+3
  7026  14F2  3000               	movlw	0
  7027  14F3  00F2               	movwf	?__tdiv_to_l_+2
  7028  14F4  3000               	movlw	0
  7029  14F5  00F1               	movwf	?__tdiv_to_l_+1
  7030  14F6  3000               	movlw	0
  7031  14F7  00F0               	movwf	?__tdiv_to_l_
  7032  14F8  0008               	return
  7033  14F9                     l657:	
  7034  14F9  17F1               	bsf	__tdiv_to_l_@f1+1,7
  7035  14FA  30FF               	movlw	255
  7036  14FB  05F0               	andwf	__tdiv_to_l_@f1,f
  7037  14FC  30FF               	movlw	255
  7038  14FD  05F1               	andwf	__tdiv_to_l_@f1+1,f
  7039  14FE  3000               	movlw	0
  7040  14FF  05F2               	andwf	__tdiv_to_l_@f1+2,f
  7041  1500  17F4               	bsf	__tdiv_to_l_@f2+1,7
  7042  1501  30FF               	movlw	255
  7043  1502  05F3               	andwf	__tdiv_to_l_@f2,f
  7044  1503  30FF               	movlw	255
  7045  1504  05F4               	andwf	__tdiv_to_l_@f2+1,f
  7046  1505  3000               	movlw	0
  7047  1506  05F5               	andwf	__tdiv_to_l_@f2+2,f
  7048  1507  3000               	movlw	0
  7049  1508  00A3               	movwf	__tdiv_to_l_@quot+3
  7050  1509  3000               	movlw	0
  7051  150A  00A2               	movwf	__tdiv_to_l_@quot+2
  7052  150B  3000               	movlw	0
  7053  150C  00A1               	movwf	__tdiv_to_l_@quot+1
  7054  150D  3000               	movlw	0
  7055  150E  00A0               	movwf	__tdiv_to_l_@quot
  7056  150F  307F               	movlw	127
  7057  1510  02A5               	subwf	__tdiv_to_l_@exp1,f
  7058  1511  3098               	movlw	152
  7059  1512  0724               	addwf	__tdiv_to_l_@cntr,w
  7060  1513  00F6               	movwf	??__tdiv_to_l_
  7061  1514  0876               	movf	??__tdiv_to_l_,w
  7062  1515  02A5               	subwf	__tdiv_to_l_@exp1,f
  7063  1516  3018               	movlw	24
  7064  1517  00F6               	movwf	??__tdiv_to_l_
  7065  1518  0876               	movf	??__tdiv_to_l_,w
  7066  1519  00A4               	movwf	__tdiv_to_l_@cntr
  7067  151A                     l2747:	
  7068  151A  3001               	movlw	1
  7069  151B                     u3575:	
  7070  151B  35A0               	lslf	__tdiv_to_l_@quot,f
  7071  151C  0DA1               	rlf	__tdiv_to_l_@quot+1,f
  7072  151D  0DA2               	rlf	__tdiv_to_l_@quot+2,f
  7073  151E  0DA3               	rlf	__tdiv_to_l_@quot+3,f
  7074  151F  0B89               	decfsz	9,f
  7075  1520  2D1B               	goto	u3575
  7076  1521  0875               	movf	__tdiv_to_l_@f2+2,w
  7077  1522  0272               	subwf	__tdiv_to_l_@f1+2,w
  7078  1523  1D03               	skipz
  7079  1524  2D2B               	goto	u3585
  7080  1525  0874               	movf	__tdiv_to_l_@f2+1,w
  7081  1526  0271               	subwf	__tdiv_to_l_@f1+1,w
  7082  1527  1D03               	skipz
  7083  1528  2D2B               	goto	u3585
  7084  1529  0873               	movf	__tdiv_to_l_@f2,w
  7085  152A  0270               	subwf	__tdiv_to_l_@f1,w
  7086  152B                     u3585:	
  7087  152B  1C03               	skipc
  7088  152C  2D34               	goto	l2755
  7089  152D  0873               	movf	__tdiv_to_l_@f2,w
  7090  152E  02F0               	subwf	__tdiv_to_l_@f1,f
  7091  152F  0874               	movf	__tdiv_to_l_@f2+1,w
  7092  1530  3BF1               	subwfb	__tdiv_to_l_@f1+1,f
  7093  1531  0875               	movf	__tdiv_to_l_@f2+2,w
  7094  1532  3BF2               	subwfb	__tdiv_to_l_@f1+2,f
  7095  1533  1420               	bsf	__tdiv_to_l_@quot,0
  7096  1534                     l2755:	
  7097  1534  3001               	movlw	1
  7098  1535                     u3595:	
  7099  1535  35F0               	lslf	__tdiv_to_l_@f1,f
  7100  1536  0DF1               	rlf	__tdiv_to_l_@f1+1,f
  7101  1537  0DF2               	rlf	__tdiv_to_l_@f1+2,f
  7102  1538  0B89               	decfsz	9,f
  7103  1539  2D35               	goto	u3595
  7104  153A  3001               	movlw	1
  7105  153B  02A4               	subwf	__tdiv_to_l_@cntr,f
  7106  153C  1D03               	btfss	3,2
  7107  153D  2D1A               	goto	l2747
  7108  153E  1FA5               	btfss	__tdiv_to_l_@exp1,7
  7109  153F  2D5C               	goto	l2767
  7110  1540  0825               	movf	__tdiv_to_l_@exp1,w
  7111  1541  3A80               	xorlw	128
  7112  1542  3E97               	addlw	151
  7113  1543  1803               	skipnc
  7114  1544  2D4E               	goto	l2765
  7115  1545  3000               	movlw	0
  7116  1546  00F3               	movwf	?__tdiv_to_l_+3
  7117  1547  3000               	movlw	0
  7118  1548  00F2               	movwf	?__tdiv_to_l_+2
  7119  1549  3000               	movlw	0
  7120  154A  00F1               	movwf	?__tdiv_to_l_+1
  7121  154B  3000               	movlw	0
  7122  154C  00F0               	movwf	?__tdiv_to_l_
  7123  154D  0008               	return
  7124  154E                     l2765:	
  7125  154E  3001               	movlw	1
  7126  154F                     u3635:	
  7127  154F  36A3               	lsrf	__tdiv_to_l_@quot+3,f
  7128  1550  0CA2               	rrf	__tdiv_to_l_@quot+2,f
  7129  1551  0CA1               	rrf	__tdiv_to_l_@quot+1,f
  7130  1552  0CA0               	rrf	__tdiv_to_l_@quot,f
  7131  1553  0B89               	decfsz	9,f
  7132  1554  2D4F               	goto	u3635
  7133  1555  3001               	movlw	1
  7134  1556  00F6               	movwf	??__tdiv_to_l_
  7135  1557  0876               	movf	??__tdiv_to_l_,w
  7136  1558  07A5               	addwf	__tdiv_to_l_@exp1,f
  7137  1559  1903               	btfsc	3,2
  7138  155A  2D75               	goto	l2775
  7139  155B  2D4E               	goto	l2765
  7140  155C                     l2767:	
  7141  155C  3018               	movlw	24
  7142  155D  0225               	subwf	__tdiv_to_l_@exp1,w
  7143  155E  1C03               	skipc
  7144  155F  2D72               	goto	l667
  7145  1560  3000               	movlw	0
  7146  1561  00F3               	movwf	?__tdiv_to_l_+3
  7147  1562  3000               	movlw	0
  7148  1563  00F2               	movwf	?__tdiv_to_l_+2
  7149  1564  3000               	movlw	0
  7150  1565  00F1               	movwf	?__tdiv_to_l_+1
  7151  1566  3000               	movlw	0
  7152  1567  00F0               	movwf	?__tdiv_to_l_
  7153  1568  0008               	return
  7154  1569                     l2773:	
  7155  1569  3001               	movlw	1
  7156  156A                     u3665:	
  7157  156A  35A0               	lslf	__tdiv_to_l_@quot,f
  7158  156B  0DA1               	rlf	__tdiv_to_l_@quot+1,f
  7159  156C  0DA2               	rlf	__tdiv_to_l_@quot+2,f
  7160  156D  0DA3               	rlf	__tdiv_to_l_@quot+3,f
  7161  156E  0B89               	decfsz	9,f
  7162  156F  2D6A               	goto	u3665
  7163  1570  3001               	movlw	1
  7164  1571  02A5               	subwf	__tdiv_to_l_@exp1,f
  7165  1572                     l667:	
  7166  1572  0825               	movf	__tdiv_to_l_@exp1,w
  7167  1573  1D03               	btfss	3,2
  7168  1574  2D69               	goto	l2773
  7169  1575                     l2775:	
  7170  1575  0823               	movf	__tdiv_to_l_@quot+3,w
  7171  1576  00F3               	movwf	?__tdiv_to_l_+3
  7172  1577  0822               	movf	__tdiv_to_l_@quot+2,w
  7173  1578  00F2               	movwf	?__tdiv_to_l_+2
  7174  1579  0821               	movf	__tdiv_to_l_@quot+1,w
  7175  157A  00F1               	movwf	?__tdiv_to_l_+1
  7176  157B  0820               	movf	__tdiv_to_l_@quot,w
  7177  157C  00F0               	movwf	?__tdiv_to_l_
  7178  157D  0008               	return
  7179  157E                     __end_of__tdiv_to_l_:	
  7180                           
  7181                           	psect	text9
  7182  157E                     __ptext9:	
  7183 ;; *************** function __div_to_l_ *****************
  7184 ;; Defined at:
  7185 ;;		line 60 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\fldivl.c"
  7186 ;; Parameters:    Size  Location     Type
  7187 ;;  f1              3    0[COMMON] unsigned long 
  7188 ;;  f2              3    3[COMMON] unsigned long 
  7189 ;; Auto vars:     Size  Location     Type
  7190 ;;  quot            4    0[BANK0 ] unsigned long 
  7191 ;;  exp1            1    5[BANK0 ] unsigned char 
  7192 ;;  cntr            1    4[BANK0 ] unsigned char 
  7193 ;; Return value:  Size  Location     Type
  7194 ;;                  4    0[COMMON] unsigned long 
  7195 ;; Registers used:
  7196 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  7197 ;; Tracked objects:
  7198 ;;		On entry : 0/0
  7199 ;;		On exit  : 0/0
  7200 ;;		Unchanged: 0/0
  7201 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
  7202 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  7203 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  7204 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  7205 ;;      Totals:        14       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  7206 ;;Total ram usage:       20 bytes
  7207 ;; Hardware stack levels used:    1
  7208 ;; This function calls:
  7209 ;;		Nothing
  7210 ;; This function is called by:
  7211 ;;		_sprintf
  7212 ;; This function uses a non-reentrant model
  7213 ;;
  7214                           
  7215                           
  7216                           ;psect for function __div_to_l_
  7217  157E                     __div_to_l_:	
  7218                           
  7219                           ;incstack = 0
  7220                           ; Regs used in __div_to_l_: [wreg+fsr1l+fsr1h+status,2+status,0]
  7221  157E  3070               	movlw	low (__div_to_l_@f1| 0)
  7222  157F  0086               	movwf	6
  7223  1580  0187               	clrf	7
  7224  1581  3F40               	moviw [0]fsr1
  7225  1582  00F6               	movwf	??__div_to_l_
  7226  1583  3F41               	moviw [1]fsr1
  7227  1584  00F7               	movwf	??__div_to_l_+1
  7228  1585  3F42               	moviw [2]fsr1
  7229  1586  00F8               	movwf	??__div_to_l_+2
  7230  1587  3F43               	moviw [3]fsr1
  7231  1588  00F9               	movwf	??__div_to_l_+3
  7232  1589  1003               	clrc
  7233  158A  0D78               	rlf	??__div_to_l_+2,w
  7234  158B  0D79               	rlf	??__div_to_l_+3,w
  7235  158C  00FA               	movwf	??__div_to_l_+4
  7236  158D  087A               	movf	??__div_to_l_+4,w
  7237  158E  0140               	movlb	0	; select bank0
  7238  158F  00A5               	movwf	__div_to_l_@exp1
  7239  1590  0825               	movf	__div_to_l_@exp1,w
  7240  1591  1D03               	btfss	3,2
  7241  1592  2D9C               	goto	l2785
  7242  1593  3000               	movlw	0
  7243  1594  00F3               	movwf	?__div_to_l_+3
  7244  1595  3000               	movlw	0
  7245  1596  00F2               	movwf	?__div_to_l_+2
  7246  1597  3000               	movlw	0
  7247  1598  00F1               	movwf	?__div_to_l_+1
  7248  1599  3000               	movlw	0
  7249  159A  00F0               	movwf	?__div_to_l_
  7250  159B  0008               	return
  7251  159C                     l2785:	
  7252  159C  3073               	movlw	low (__div_to_l_@f2| 0)
  7253  159D  0086               	movwf	6
  7254  159E  0187               	clrf	7
  7255  159F  3F40               	moviw [0]fsr1
  7256  15A0  00F6               	movwf	??__div_to_l_
  7257  15A1  3F41               	moviw [1]fsr1
  7258  15A2  00F7               	movwf	??__div_to_l_+1
  7259  15A3  3F42               	moviw [2]fsr1
  7260  15A4  00F8               	movwf	??__div_to_l_+2
  7261  15A5  3F43               	moviw [3]fsr1
  7262  15A6  00F9               	movwf	??__div_to_l_+3
  7263  15A7  1003               	clrc
  7264  15A8  0D78               	rlf	??__div_to_l_+2,w
  7265  15A9  0D79               	rlf	??__div_to_l_+3,w
  7266  15AA  00FA               	movwf	??__div_to_l_+4
  7267  15AB  087A               	movf	??__div_to_l_+4,w
  7268  15AC  00A4               	movwf	__div_to_l_@cntr
  7269  15AD  0824               	movf	__div_to_l_@cntr,w
  7270  15AE  1D03               	btfss	3,2
  7271  15AF  2DB9               	goto	l2791
  7272  15B0  3000               	movlw	0
  7273  15B1  00F3               	movwf	?__div_to_l_+3
  7274  15B2  3000               	movlw	0
  7275  15B3  00F2               	movwf	?__div_to_l_+2
  7276  15B4  3000               	movlw	0
  7277  15B5  00F1               	movwf	?__div_to_l_+1
  7278  15B6  3000               	movlw	0
  7279  15B7  00F0               	movwf	?__div_to_l_
  7280  15B8  0008               	return
  7281  15B9                     l2791:	
  7282  15B9  3070               	movlw	low (__div_to_l_@f1| 0)
  7283  15BA  0086               	movwf	6
  7284  15BB  0187               	clrf	7
  7285  15BC  3000               	movlw	0
  7286  15BD  0481               	iorwf	1,f
  7287  15BE  3141               	addfsr 1,1
  7288  15BF  3000               	movlw	0
  7289  15C0  0481               	iorwf	1,f
  7290  15C1  3141               	addfsr 1,1
  7291  15C2  3080               	movlw	128
  7292  15C3  0481               	iorwf	1,f
  7293  15C4  3141               	addfsr 1,1
  7294  15C5  3000               	movlw	0
  7295  15C6  0481               	iorwf	1,f
  7296  15C7  3070               	movlw	low (__div_to_l_@f1| 0)
  7297  15C8  0086               	movwf	6
  7298  15C9  0187               	clrf	7
  7299  15CA  30FF               	movlw	255
  7300  15CB  0581               	andwf	1,f
  7301  15CC  3141               	addfsr 1,1
  7302  15CD  30FF               	movlw	255
  7303  15CE  0581               	andwf	1,f
  7304  15CF  3141               	addfsr 1,1
  7305  15D0  30FF               	movlw	255
  7306  15D1  0581               	andwf	1,f
  7307  15D2  3141               	addfsr 1,1
  7308  15D3  3000               	movlw	0
  7309  15D4  0581               	andwf	1,f
  7310  15D5  3073               	movlw	low (__div_to_l_@f2| 0)
  7311  15D6  0086               	movwf	6
  7312  15D7  0187               	clrf	7
  7313  15D8  3000               	movlw	0
  7314  15D9  0481               	iorwf	1,f
  7315  15DA  3141               	addfsr 1,1
  7316  15DB  3000               	movlw	0
  7317  15DC  0481               	iorwf	1,f
  7318  15DD  3141               	addfsr 1,1
  7319  15DE  3080               	movlw	128
  7320  15DF  0481               	iorwf	1,f
  7321  15E0  3141               	addfsr 1,1
  7322  15E1  3000               	movlw	0
  7323  15E2  0481               	iorwf	1,f
  7324  15E3  3073               	movlw	low (__div_to_l_@f2| 0)
  7325  15E4  0086               	movwf	6
  7326  15E5  0187               	clrf	7
  7327  15E6  30FF               	movlw	255
  7328  15E7  0581               	andwf	1,f
  7329  15E8  3141               	addfsr 1,1
  7330  15E9  30FF               	movlw	255
  7331  15EA  0581               	andwf	1,f
  7332  15EB  3141               	addfsr 1,1
  7333  15EC  30FF               	movlw	255
  7334  15ED  0581               	andwf	1,f
  7335  15EE  3141               	addfsr 1,1
  7336  15EF  3000               	movlw	0
  7337  15F0  0581               	andwf	1,f
  7338  15F1  3000               	movlw	0
  7339  15F2  00A3               	movwf	__div_to_l_@quot+3
  7340  15F3  3000               	movlw	0
  7341  15F4  00A2               	movwf	__div_to_l_@quot+2
  7342  15F5  3000               	movlw	0
  7343  15F6  00A1               	movwf	__div_to_l_@quot+1
  7344  15F7  3000               	movlw	0
  7345  15F8  00A0               	movwf	__div_to_l_@quot
  7346  15F9  307F               	movlw	127
  7347  15FA  02A5               	subwf	__div_to_l_@exp1,f
  7348  15FB  30A0               	movlw	160
  7349  15FC  0724               	addwf	__div_to_l_@cntr,w
  7350  15FD  00F6               	movwf	??__div_to_l_
  7351  15FE  0876               	movf	??__div_to_l_,w
  7352  15FF  02A5               	subwf	__div_to_l_@exp1,f
  7353  1600  3020               	movlw	32
  7354  1601  00F6               	movwf	??__div_to_l_
  7355  1602  0876               	movf	??__div_to_l_,w
  7356  1603  00A4               	movwf	__div_to_l_@cntr
  7357  1604                     l2801:	
  7358  1604  3001               	movlw	1
  7359  1605                     u3705:	
  7360  1605  35A0               	lslf	__div_to_l_@quot,f
  7361  1606  0DA1               	rlf	__div_to_l_@quot+1,f
  7362  1607  0DA2               	rlf	__div_to_l_@quot+2,f
  7363  1608  0DA3               	rlf	__div_to_l_@quot+3,f
  7364  1609  0B89               	decfsz	9,f
  7365  160A  2E05               	goto	u3705
  7366  160B  3073               	movlw	low (__div_to_l_@f2| 0)
  7367  160C  0086               	movwf	6
  7368  160D  0187               	clrf	7
  7369  160E  3F40               	moviw [0]fsr1
  7370  160F  00F6               	movwf	??__div_to_l_
  7371  1610  3F41               	moviw [1]fsr1
  7372  1611  00F7               	movwf	??__div_to_l_+1
  7373  1612  3F42               	moviw [2]fsr1
  7374  1613  00F8               	movwf	??__div_to_l_+2
  7375  1614  3F43               	moviw [3]fsr1
  7376  1615  00F9               	movwf	??__div_to_l_+3
  7377  1616  3070               	movlw	low (__div_to_l_@f1| 0)
  7378  1617  0086               	movwf	6
  7379  1618  0187               	clrf	7
  7380  1619  3F40               	moviw [0]fsr1
  7381  161A  00FA               	movwf	??__div_to_l_+4
  7382  161B  3F41               	moviw [1]fsr1
  7383  161C  00FB               	movwf	??__div_to_l_+5
  7384  161D  3F42               	moviw [2]fsr1
  7385  161E  00FC               	movwf	??__div_to_l_+6
  7386  161F  3F43               	moviw [3]fsr1
  7387  1620  00FD               	movwf	??__div_to_l_+7
  7388  1621  0879               	movf	??__div_to_l_+3,w
  7389  1622  027D               	subwf	??__div_to_l_+7,w
  7390  1623  1D03               	skipz
  7391  1624  2E2F               	goto	u3715
  7392  1625  0878               	movf	??__div_to_l_+2,w
  7393  1626  027C               	subwf	??__div_to_l_+6,w
  7394  1627  1D03               	skipz
  7395  1628  2E2F               	goto	u3715
  7396  1629  0877               	movf	??__div_to_l_+1,w
  7397  162A  027B               	subwf	??__div_to_l_+5,w
  7398  162B  1D03               	skipz
  7399  162C  2E2F               	goto	u3715
  7400  162D  0876               	movf	??__div_to_l_,w
  7401  162E  027A               	subwf	??__div_to_l_+4,w
  7402  162F                     u3715:	
  7403  162F  1C03               	skipc
  7404  1630  2E4C               	goto	l2809
  7405  1631  3073               	movlw	low (__div_to_l_@f2| 0)
  7406  1632  0086               	movwf	6
  7407  1633  0187               	clrf	7
  7408  1634  3F40               	moviw [0]fsr1
  7409  1635  00F6               	movwf	??__div_to_l_
  7410  1636  3F41               	moviw [1]fsr1
  7411  1637  00F7               	movwf	??__div_to_l_+1
  7412  1638  3F42               	moviw [2]fsr1
  7413  1639  00F8               	movwf	??__div_to_l_+2
  7414  163A  3F43               	moviw [3]fsr1
  7415  163B  00F9               	movwf	??__div_to_l_+3
  7416  163C  3070               	movlw	low (__div_to_l_@f1| 0)
  7417  163D  0086               	movwf	6
  7418  163E  0187               	clrf	7
  7419  163F  0876               	movf	??__div_to_l_,w
  7420  1640  0281               	subwf	1,f
  7421  1641  3141               	addfsr 1,1
  7422  1642  0877               	movf	??__div_to_l_+1,w
  7423  1643  3B81               	subwfb	1,f
  7424  1644  3141               	addfsr 1,1
  7425  1645  0878               	movf	??__div_to_l_+2,w
  7426  1646  3B81               	subwfb	1,f
  7427  1647  3141               	addfsr 1,1
  7428  1648  0879               	movf	??__div_to_l_+3,w
  7429  1649  3B81               	subwfb	1,f
  7430  164A  317D               	addfsr 1,-3
  7431  164B  1420               	bsf	__div_to_l_@quot,0
  7432  164C                     l2809:	
  7433  164C  3070               	movlw	low (__div_to_l_@f1| 0)
  7434  164D  0086               	movwf	6
  7435  164E  0187               	clrf	7
  7436  164F  3581               	lslf	1,f
  7437  1650  3141               	addfsr 1,1
  7438  1651  0D81               	rlf	1,f
  7439  1652  3141               	addfsr 1,1
  7440  1653  0D81               	rlf	1,f
  7441  1654  3141               	addfsr 1,1
  7442  1655  0D81               	rlf	1,f
  7443  1656  317D               	addfsr 1,-3
  7444  1657  3001               	movlw	1
  7445  1658  02A4               	subwf	__div_to_l_@cntr,f
  7446  1659  1D03               	btfss	3,2
  7447  165A  2E04               	goto	l2801
  7448  165B  1FA5               	btfss	__div_to_l_@exp1,7
  7449  165C  2E79               	goto	l2821
  7450  165D  0825               	movf	__div_to_l_@exp1,w
  7451  165E  3A80               	xorlw	128
  7452  165F  3E9F               	addlw	159
  7453  1660  1803               	skipnc
  7454  1661  2E6B               	goto	l2819
  7455  1662  3000               	movlw	0
  7456  1663  00F3               	movwf	?__div_to_l_+3
  7457  1664  3000               	movlw	0
  7458  1665  00F2               	movwf	?__div_to_l_+2
  7459  1666  3000               	movlw	0
  7460  1667  00F1               	movwf	?__div_to_l_+1
  7461  1668  3000               	movlw	0
  7462  1669  00F0               	movwf	?__div_to_l_
  7463  166A  0008               	return
  7464  166B                     l2819:	
  7465  166B  3001               	movlw	1
  7466  166C                     u3755:	
  7467  166C  36A3               	lsrf	__div_to_l_@quot+3,f
  7468  166D  0CA2               	rrf	__div_to_l_@quot+2,f
  7469  166E  0CA1               	rrf	__div_to_l_@quot+1,f
  7470  166F  0CA0               	rrf	__div_to_l_@quot,f
  7471  1670  0B89               	decfsz	9,f
  7472  1671  2E6C               	goto	u3755
  7473  1672  3001               	movlw	1
  7474  1673  00F6               	movwf	??__div_to_l_
  7475  1674  0876               	movf	??__div_to_l_,w
  7476  1675  07A5               	addwf	__div_to_l_@exp1,f
  7477  1676  1903               	btfsc	3,2
  7478  1677  2E92               	goto	l2829
  7479  1678  2E6B               	goto	l2819
  7480  1679                     l2821:	
  7481  1679  3020               	movlw	32
  7482  167A  0225               	subwf	__div_to_l_@exp1,w
  7483  167B  1C03               	skipc
  7484  167C  2E8F               	goto	l588
  7485  167D  3000               	movlw	0
  7486  167E  00F3               	movwf	?__div_to_l_+3
  7487  167F  3000               	movlw	0
  7488  1680  00F2               	movwf	?__div_to_l_+2
  7489  1681  3000               	movlw	0
  7490  1682  00F1               	movwf	?__div_to_l_+1
  7491  1683  3000               	movlw	0
  7492  1684  00F0               	movwf	?__div_to_l_
  7493  1685  0008               	return
  7494  1686                     l2827:	
  7495  1686  3001               	movlw	1
  7496  1687                     u3785:	
  7497  1687  35A0               	lslf	__div_to_l_@quot,f
  7498  1688  0DA1               	rlf	__div_to_l_@quot+1,f
  7499  1689  0DA2               	rlf	__div_to_l_@quot+2,f
  7500  168A  0DA3               	rlf	__div_to_l_@quot+3,f
  7501  168B  0B89               	decfsz	9,f
  7502  168C  2E87               	goto	u3785
  7503  168D  3001               	movlw	1
  7504  168E  02A5               	subwf	__div_to_l_@exp1,f
  7505  168F                     l588:	
  7506  168F  0825               	movf	__div_to_l_@exp1,w
  7507  1690  1D03               	btfss	3,2
  7508  1691  2E86               	goto	l2827
  7509  1692                     l2829:	
  7510  1692  0823               	movf	__div_to_l_@quot+3,w
  7511  1693  00F3               	movwf	?__div_to_l_+3
  7512  1694  0822               	movf	__div_to_l_@quot+2,w
  7513  1695  00F2               	movwf	?__div_to_l_+2
  7514  1696  0821               	movf	__div_to_l_@quot+1,w
  7515  1697  00F1               	movwf	?__div_to_l_+1
  7516  1698  0820               	movf	__div_to_l_@quot,w
  7517  1699  00F0               	movwf	?__div_to_l_
  7518  169A  0008               	return
  7519  169B                     __end_of__div_to_l_:	
  7520                           
  7521                           	psect	text10
  7522  1EEC                     __ptext10:	
  7523 ;; *************** function ___lltoft *****************
  7524 ;; Defined at:
  7525 ;;		line 35 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\lltoft.c"
  7526 ;; Parameters:    Size  Location     Type
  7527 ;;  c               4    8[COMMON] unsigned long 
  7528 ;; Auto vars:     Size  Location     Type
  7529 ;;  exp             1   13[COMMON] unsigned char 
  7530 ;; Return value:  Size  Location     Type
  7531 ;;                  3    8[COMMON] float 
  7532 ;; Registers used:
  7533 ;;		wreg, status,2, status,0, pclath, cstack
  7534 ;; Tracked objects:
  7535 ;;		On entry : 0/0
  7536 ;;		On exit  : 0/0
  7537 ;;		Unchanged: 0/0
  7538 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
  7539 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  7540 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  7541 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  7542 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  7543 ;;Total ram usage:        6 bytes
  7544 ;; Hardware stack levels used:    1
  7545 ;; Hardware stack levels required when called:    1
  7546 ;; This function calls:
  7547 ;;		___ftpack
  7548 ;; This function is called by:
  7549 ;;		_sprintf
  7550 ;; This function uses a non-reentrant model
  7551 ;;
  7552                           
  7553                           
  7554                           ;psect for function ___lltoft
  7555  1EEC                     ___lltoft:	
  7556                           
  7557                           ;incstack = 0
  7558                           ; Regs used in ___lltoft: [wreg+status,2+status,0+pclath+cstack]
  7559  1EEC  308E               	movlw	142
  7560  1EED  00FC               	movwf	??___lltoft
  7561  1EEE  087C               	movf	??___lltoft,w
  7562  1EEF  00FD               	movwf	___lltoft@exp
  7563  1EF0                     l2959:	
  7564  1EF0  30FF               	movlw	255
  7565  1EF1  057B               	andwf	___lltoft@c+3,w
  7566  1EF2  1903               	btfsc	3,2
  7567  1EF3  2F00               	goto	l2961
  7568  1EF4  3001               	movlw	1
  7569  1EF5                     u4085:	
  7570  1EF5  36FB               	lsrf	___lltoft@c+3,f
  7571  1EF6  0CFA               	rrf	___lltoft@c+2,f
  7572  1EF7  0CF9               	rrf	___lltoft@c+1,f
  7573  1EF8  0CF8               	rrf	___lltoft@c,f
  7574  1EF9  0B89               	decfsz	9,f
  7575  1EFA  2EF5               	goto	u4085
  7576  1EFB  3001               	movlw	1
  7577  1EFC  00FC               	movwf	??___lltoft
  7578  1EFD  087C               	movf	??___lltoft,w
  7579  1EFE  07FD               	addwf	___lltoft@exp,f
  7580  1EFF  2EF0               	goto	l2959
  7581  1F00                     l2961:	
  7582  1F00  0878               	movf	___lltoft@c,w
  7583  1F01  00F0               	movwf	___ftpack@arg
  7584  1F02  0879               	movf	___lltoft@c+1,w
  7585  1F03  00F1               	movwf	___ftpack@arg+1
  7586  1F04  087A               	movf	___lltoft@c+2,w
  7587  1F05  00F2               	movwf	___ftpack@arg+2
  7588  1F06  087D               	movf	___lltoft@exp,w
  7589  1F07  00FC               	movwf	??___lltoft
  7590  1F08  087C               	movf	??___lltoft,w
  7591  1F09  00F3               	movwf	___ftpack@exp
  7592  1F0A  01F4               	clrf	___ftpack@sign
  7593  1F0B  3191  2145         	fcall	___ftpack
  7594  1F0D  0870               	movf	?___ftpack,w
  7595  1F0E  00F8               	movwf	?___lltoft
  7596  1F0F  0871               	movf	?___ftpack+1,w
  7597  1F10  00F9               	movwf	?___lltoft+1
  7598  1F11  0872               	movf	?___ftpack+2,w
  7599  1F12  00FA               	movwf	?___lltoft+2
  7600  1F13  0008               	return
  7601  1F14                     __end_of___lltoft:	
  7602                           
  7603                           	psect	text11
  7604  1FBD                     __ptext11:	
  7605 ;; *************** function ___llmod *****************
  7606 ;; Defined at:
  7607 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\llmod.c"
  7608 ;; Parameters:    Size  Location     Type
  7609 ;;  divisor         4    0[BANK0 ] unsigned long 
  7610 ;;  dividend        4    4[BANK0 ] unsigned long 
  7611 ;; Auto vars:     Size  Location     Type
  7612 ;;  counter         1    9[BANK0 ] unsigned char 
  7613 ;; Return value:  Size  Location     Type
  7614 ;;                  4    0[BANK0 ] unsigned long 
  7615 ;; Registers used:
  7616 ;;		wreg, status,2, status,0
  7617 ;; Tracked objects:
  7618 ;;		On entry : 0/0
  7619 ;;		On exit  : 0/0
  7620 ;;		Unchanged: 0/0
  7621 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
  7622 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  7623 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  7624 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  7625 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  7626 ;;Total ram usage:       10 bytes
  7627 ;; Hardware stack levels used:    1
  7628 ;; This function calls:
  7629 ;;		Nothing
  7630 ;; This function is called by:
  7631 ;;		_sprintf
  7632 ;; This function uses a non-reentrant model
  7633 ;;
  7634                           
  7635                           
  7636                           ;psect for function ___llmod
  7637  1FBD                     ___llmod:	
  7638                           
  7639                           ;incstack = 0
  7640                           ; Regs used in ___llmod: [wreg+status,2+status,0]
  7641  1FBD  0140               	movlb	0	; select bank0
  7642  1FBE  0823               	movf	___llmod@divisor+3,w
  7643  1FBF  0422               	iorwf	___llmod@divisor+2,w
  7644  1FC0  0421               	iorwf	___llmod@divisor+1,w
  7645  1FC1  0420               	iorwf	___llmod@divisor,w
  7646  1FC2  1903               	skipnz
  7647  1FC3  2FF7               	goto	l2951
  7648  1FC4  01A9               	clrf	___llmod@counter
  7649  1FC5  0AA9               	incf	___llmod@counter,f
  7650  1FC6                     l2941:	
  7651  1FC6  1BA3               	btfsc	___llmod@divisor+3,7
  7652  1FC7  2FD4               	goto	l2943
  7653  1FC8  3001               	movlw	1
  7654  1FC9                     u4035:	
  7655  1FC9  35A0               	lslf	___llmod@divisor,f
  7656  1FCA  0DA1               	rlf	___llmod@divisor+1,f
  7657  1FCB  0DA2               	rlf	___llmod@divisor+2,f
  7658  1FCC  0DA3               	rlf	___llmod@divisor+3,f
  7659  1FCD  0B89               	decfsz	9,f
  7660  1FCE  2FC9               	goto	u4035
  7661  1FCF  3001               	movlw	1
  7662  1FD0  00A8               	movwf	??___llmod
  7663  1FD1  0828               	movf	??___llmod,w
  7664  1FD2  07A9               	addwf	___llmod@counter,f
  7665  1FD3  2FC6               	goto	l2941
  7666  1FD4                     l2943:	
  7667  1FD4  0823               	movf	___llmod@divisor+3,w
  7668  1FD5  0227               	subwf	___llmod@dividend+3,w
  7669  1FD6  1D03               	skipz
  7670  1FD7  2FE2               	goto	u4055
  7671  1FD8  0822               	movf	___llmod@divisor+2,w
  7672  1FD9  0226               	subwf	___llmod@dividend+2,w
  7673  1FDA  1D03               	skipz
  7674  1FDB  2FE2               	goto	u4055
  7675  1FDC  0821               	movf	___llmod@divisor+1,w
  7676  1FDD  0225               	subwf	___llmod@dividend+1,w
  7677  1FDE  1D03               	skipz
  7678  1FDF  2FE2               	goto	u4055
  7679  1FE0  0820               	movf	___llmod@divisor,w
  7680  1FE1  0224               	subwf	___llmod@dividend,w
  7681  1FE2                     u4055:	
  7682  1FE2  1C03               	skipc
  7683  1FE3  2FEC               	goto	l2947
  7684  1FE4  0820               	movf	___llmod@divisor,w
  7685  1FE5  02A4               	subwf	___llmod@dividend,f
  7686  1FE6  0821               	movf	___llmod@divisor+1,w
  7687  1FE7  3BA5               	subwfb	___llmod@dividend+1,f
  7688  1FE8  0822               	movf	___llmod@divisor+2,w
  7689  1FE9  3BA6               	subwfb	___llmod@dividend+2,f
  7690  1FEA  0823               	movf	___llmod@divisor+3,w
  7691  1FEB  3BA7               	subwfb	___llmod@dividend+3,f
  7692  1FEC                     l2947:	
  7693  1FEC  3001               	movlw	1
  7694  1FED                     u4065:	
  7695  1FED  36A3               	lsrf	___llmod@divisor+3,f
  7696  1FEE  0CA2               	rrf	___llmod@divisor+2,f
  7697  1FEF  0CA1               	rrf	___llmod@divisor+1,f
  7698  1FF0  0CA0               	rrf	___llmod@divisor,f
  7699  1FF1  0B89               	decfsz	9,f
  7700  1FF2  2FED               	goto	u4065
  7701  1FF3  3001               	movlw	1
  7702  1FF4  02A9               	subwf	___llmod@counter,f
  7703  1FF5  1D03               	btfss	3,2
  7704  1FF6  2FD4               	goto	l2943
  7705  1FF7                     l2951:	
  7706  1FF7  0827               	movf	___llmod@dividend+3,w
  7707  1FF8  00A3               	movwf	?___llmod+3
  7708  1FF9  0826               	movf	___llmod@dividend+2,w
  7709  1FFA  00A2               	movwf	?___llmod+2
  7710  1FFB  0825               	movf	___llmod@dividend+1,w
  7711  1FFC  00A1               	movwf	?___llmod+1
  7712  1FFD  0824               	movf	___llmod@dividend,w
  7713  1FFE  00A0               	movwf	?___llmod
  7714  1FFF  0008               	return
  7715  2000                     __end_of___llmod:	
  7716                           
  7717                           	psect	text12
  7718  10A1                     __ptext12:	
  7719 ;; *************** function ___lldiv *****************
  7720 ;; Defined at:
  7721 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\lldiv.c"
  7722 ;; Parameters:    Size  Location     Type
  7723 ;;  divisor         4    0[COMMON] unsigned long 
  7724 ;;  dividend        4    4[COMMON] unsigned long 
  7725 ;; Auto vars:     Size  Location     Type
  7726 ;;  quotient        4    9[COMMON] unsigned long 
  7727 ;;  counter         1   13[COMMON] unsigned char 
  7728 ;; Return value:  Size  Location     Type
  7729 ;;                  4    0[COMMON] unsigned long 
  7730 ;; Registers used:
  7731 ;;		wreg, status,2, status,0
  7732 ;; Tracked objects:
  7733 ;;		On entry : 0/0
  7734 ;;		On exit  : 0/0
  7735 ;;		Unchanged: 0/0
  7736 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
  7737 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  7738 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  7739 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  7740 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  7741 ;;Total ram usage:       14 bytes
  7742 ;; Hardware stack levels used:    1
  7743 ;; This function calls:
  7744 ;;		Nothing
  7745 ;; This function is called by:
  7746 ;;		_sprintf
  7747 ;; This function uses a non-reentrant model
  7748 ;;
  7749                           
  7750                           
  7751                           ;psect for function ___lldiv
  7752  10A1                     ___lldiv:	
  7753                           
  7754                           ;incstack = 0
  7755                           ; Regs used in ___lldiv: [wreg+status,2+status,0]
  7756  10A1  3000               	movlw	0
  7757  10A2  00FC               	movwf	___lldiv@quotient+3
  7758  10A3  3000               	movlw	0
  7759  10A4  00FB               	movwf	___lldiv@quotient+2
  7760  10A5  3000               	movlw	0
  7761  10A6  00FA               	movwf	___lldiv@quotient+1
  7762  10A7  3000               	movlw	0
  7763  10A8  00F9               	movwf	___lldiv@quotient
  7764  10A9  0873               	movf	___lldiv@divisor+3,w
  7765  10AA  0472               	iorwf	___lldiv@divisor+2,w
  7766  10AB  0471               	iorwf	___lldiv@divisor+1,w
  7767  10AC  0470               	iorwf	___lldiv@divisor,w
  7768  10AD  1903               	skipnz
  7769  10AE  28EA               	goto	l2931
  7770  10AF  01FD               	clrf	___lldiv@counter
  7771  10B0  0AFD               	incf	___lldiv@counter,f
  7772  10B1                     l2917:	
  7773  10B1  1BF3               	btfsc	___lldiv@divisor+3,7
  7774  10B2  28BF               	goto	l2919
  7775  10B3  3001               	movlw	1
  7776  10B4                     u3965:	
  7777  10B4  35F0               	lslf	___lldiv@divisor,f
  7778  10B5  0DF1               	rlf	___lldiv@divisor+1,f
  7779  10B6  0DF2               	rlf	___lldiv@divisor+2,f
  7780  10B7  0DF3               	rlf	___lldiv@divisor+3,f
  7781  10B8  0B89               	decfsz	9,f
  7782  10B9  28B4               	goto	u3965
  7783  10BA  3001               	movlw	1
  7784  10BB  00F8               	movwf	??___lldiv
  7785  10BC  0878               	movf	??___lldiv,w
  7786  10BD  07FD               	addwf	___lldiv@counter,f
  7787  10BE  28B1               	goto	l2917
  7788  10BF                     l2919:	
  7789  10BF  3001               	movlw	1
  7790  10C0                     u3985:	
  7791  10C0  35F9               	lslf	___lldiv@quotient,f
  7792  10C1  0DFA               	rlf	___lldiv@quotient+1,f
  7793  10C2  0DFB               	rlf	___lldiv@quotient+2,f
  7794  10C3  0DFC               	rlf	___lldiv@quotient+3,f
  7795  10C4  0B89               	decfsz	9,f
  7796  10C5  28C0               	goto	u3985
  7797  10C6  0873               	movf	___lldiv@divisor+3,w
  7798  10C7  0277               	subwf	___lldiv@dividend+3,w
  7799  10C8  1D03               	skipz
  7800  10C9  28D4               	goto	u3995
  7801  10CA  0872               	movf	___lldiv@divisor+2,w
  7802  10CB  0276               	subwf	___lldiv@dividend+2,w
  7803  10CC  1D03               	skipz
  7804  10CD  28D4               	goto	u3995
  7805  10CE  0871               	movf	___lldiv@divisor+1,w
  7806  10CF  0275               	subwf	___lldiv@dividend+1,w
  7807  10D0  1D03               	skipz
  7808  10D1  28D4               	goto	u3995
  7809  10D2  0870               	movf	___lldiv@divisor,w
  7810  10D3  0274               	subwf	___lldiv@dividend,w
  7811  10D4                     u3995:	
  7812  10D4  1C03               	skipc
  7813  10D5  28DF               	goto	l2927
  7814  10D6  0870               	movf	___lldiv@divisor,w
  7815  10D7  02F4               	subwf	___lldiv@dividend,f
  7816  10D8  0871               	movf	___lldiv@divisor+1,w
  7817  10D9  3BF5               	subwfb	___lldiv@dividend+1,f
  7818  10DA  0872               	movf	___lldiv@divisor+2,w
  7819  10DB  3BF6               	subwfb	___lldiv@dividend+2,f
  7820  10DC  0873               	movf	___lldiv@divisor+3,w
  7821  10DD  3BF7               	subwfb	___lldiv@dividend+3,f
  7822  10DE  1479               	bsf	___lldiv@quotient,0
  7823  10DF                     l2927:	
  7824  10DF  3001               	movlw	1
  7825  10E0                     u4005:	
  7826  10E0  36F3               	lsrf	___lldiv@divisor+3,f
  7827  10E1  0CF2               	rrf	___lldiv@divisor+2,f
  7828  10E2  0CF1               	rrf	___lldiv@divisor+1,f
  7829  10E3  0CF0               	rrf	___lldiv@divisor,f
  7830  10E4  0B89               	decfsz	9,f
  7831  10E5  28E0               	goto	u4005
  7832  10E6  3001               	movlw	1
  7833  10E7  02FD               	subwf	___lldiv@counter,f
  7834  10E8  1D03               	btfss	3,2
  7835  10E9  28BF               	goto	l2919
  7836  10EA                     l2931:	
  7837  10EA  087C               	movf	___lldiv@quotient+3,w
  7838  10EB  00F3               	movwf	?___lldiv+3
  7839  10EC  087B               	movf	___lldiv@quotient+2,w
  7840  10ED  00F2               	movwf	?___lldiv+2
  7841  10EE  087A               	movf	___lldiv@quotient+1,w
  7842  10EF  00F1               	movwf	?___lldiv+1
  7843  10F0  0879               	movf	___lldiv@quotient,w
  7844  10F1  00F0               	movwf	?___lldiv
  7845  10F2  0008               	return
  7846  10F3                     __end_of___lldiv:	
  7847                           
  7848                           	psect	text13
  7849  11A9                     __ptext13:	
  7850 ;; *************** function ___fttol *****************
  7851 ;; Defined at:
  7852 ;;		line 44 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\fttol.c"
  7853 ;; Parameters:    Size  Location     Type
  7854 ;;  f1              3   33[BANK0 ] float 
  7855 ;; Auto vars:     Size  Location     Type
  7856 ;;  lval            4   42[BANK0 ] unsigned long 
  7857 ;;  exp1            1   46[BANK0 ] unsigned char 
  7858 ;;  sign1           1   41[BANK0 ] unsigned char 
  7859 ;; Return value:  Size  Location     Type
  7860 ;;                  4   33[BANK0 ] long 
  7861 ;; Registers used:
  7862 ;;		wreg, status,2, status,0
  7863 ;; Tracked objects:
  7864 ;;		On entry : 0/0
  7865 ;;		On exit  : 0/0
  7866 ;;		Unchanged: 0/0
  7867 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
  7868 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  7869 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  7870 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  7871 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  7872 ;;Total ram usage:       14 bytes
  7873 ;; Hardware stack levels used:    1
  7874 ;; This function calls:
  7875 ;;		Nothing
  7876 ;; This function is called by:
  7877 ;;		_sprintf
  7878 ;; This function uses a non-reentrant model
  7879 ;;
  7880                           
  7881                           
  7882                           ;psect for function ___fttol
  7883  11A9                     ___fttol:	
  7884                           
  7885                           ;incstack = 0
  7886                           ; Regs used in ___fttol: [wreg+status,2+status,0]
  7887  11A9  0140               	movlb	0	; select bank0
  7888  11AA  0841               	movf	___fttol@f1,w
  7889  11AB  00C5               	movwf	??___fttol
  7890  11AC  0842               	movf	___fttol@f1+1,w
  7891  11AD  00C6               	movwf	??___fttol+1
  7892  11AE  0843               	movf	___fttol@f1+2,w
  7893  11AF  00C7               	movwf	??___fttol+2
  7894  11B0  1003               	clrc
  7895  11B1  0D46               	rlf	??___fttol+1,w
  7896  11B2  0D47               	rlf	??___fttol+2,w
  7897  11B3  00C8               	movwf	??___fttol+3
  7898  11B4  0848               	movf	??___fttol+3,w
  7899  11B5  00CE               	movwf	___fttol@exp1
  7900  11B6  084E               	movf	___fttol@exp1,w
  7901  11B7  1D03               	btfss	3,2
  7902  11B8  29C2               	goto	l2875
  7903  11B9  3000               	movlw	0
  7904  11BA  00C4               	movwf	?___fttol+3
  7905  11BB  3000               	movlw	0
  7906  11BC  00C3               	movwf	?___fttol+2
  7907  11BD  3000               	movlw	0
  7908  11BE  00C2               	movwf	?___fttol+1
  7909  11BF  3000               	movlw	0
  7910  11C0  00C1               	movwf	?___fttol
  7911  11C1  0008               	return
  7912  11C2                     l2875:	
  7913  11C2  0841               	movf	___fttol@f1,w
  7914  11C3  00C5               	movwf	??___fttol
  7915  11C4  0842               	movf	___fttol@f1+1,w
  7916  11C5  00C6               	movwf	??___fttol+1
  7917  11C6  0843               	movf	___fttol@f1+2,w
  7918  11C7  00C7               	movwf	??___fttol+2
  7919  11C8  3017               	movlw	23
  7920  11C9                     u3865:	
  7921  11C9  36C7               	lsrf	??___fttol+2,f
  7922  11CA  0CC6               	rrf	??___fttol+1,f
  7923  11CB  0CC5               	rrf	??___fttol,f
  7924  11CC  0B89               	decfsz	9,f
  7925  11CD  29C9               	goto	u3865
  7926  11CE  0845               	movf	??___fttol,w
  7927  11CF  00C8               	movwf	??___fttol+3
  7928  11D0  0848               	movf	??___fttol+3,w
  7929  11D1  00C9               	movwf	___fttol@sign1
  7930  11D2  17C2               	bsf	___fttol@f1+1,7
  7931  11D3  30FF               	movlw	255
  7932  11D4  05C1               	andwf	___fttol@f1,f
  7933  11D5  30FF               	movlw	255
  7934  11D6  05C2               	andwf	___fttol@f1+1,f
  7935  11D7  3000               	movlw	0
  7936  11D8  05C3               	andwf	___fttol@f1+2,f
  7937  11D9  0841               	movf	___fttol@f1,w
  7938  11DA  00CA               	movwf	___fttol@lval
  7939  11DB  0842               	movf	___fttol@f1+1,w
  7940  11DC  00CB               	movwf	___fttol@lval+1
  7941  11DD  0843               	movf	___fttol@f1+2,w
  7942  11DE  00CC               	movwf	___fttol@lval+2
  7943  11DF  01CD               	clrf	___fttol@lval+3
  7944  11E0  308E               	movlw	142
  7945  11E1  02CE               	subwf	___fttol@exp1,f
  7946  11E2  1FCE               	btfss	___fttol@exp1,7
  7947  11E3  2A00               	goto	l2895
  7948  11E4  084E               	movf	___fttol@exp1,w
  7949  11E5  3A80               	xorlw	128
  7950  11E6  3E8F               	addlw	143
  7951  11E7  1803               	skipnc
  7952  11E8  29F2               	goto	l2893
  7953  11E9  3000               	movlw	0
  7954  11EA  00C4               	movwf	?___fttol+3
  7955  11EB  3000               	movlw	0
  7956  11EC  00C3               	movwf	?___fttol+2
  7957  11ED  3000               	movlw	0
  7958  11EE  00C2               	movwf	?___fttol+1
  7959  11EF  3000               	movlw	0
  7960  11F0  00C1               	movwf	?___fttol
  7961  11F1  0008               	return
  7962  11F2                     l2893:	
  7963  11F2  3001               	movlw	1
  7964  11F3                     u3895:	
  7965  11F3  36CD               	lsrf	___fttol@lval+3,f
  7966  11F4  0CCC               	rrf	___fttol@lval+2,f
  7967  11F5  0CCB               	rrf	___fttol@lval+1,f
  7968  11F6  0CCA               	rrf	___fttol@lval,f
  7969  11F7  0B89               	decfsz	9,f
  7970  11F8  29F3               	goto	u3895
  7971  11F9  3001               	movlw	1
  7972  11FA  00C5               	movwf	??___fttol
  7973  11FB  0845               	movf	??___fttol,w
  7974  11FC  07CE               	addwf	___fttol@exp1,f
  7975  11FD  1903               	btfsc	3,2
  7976  11FE  2A19               	goto	l2903
  7977  11FF  29F2               	goto	l2893
  7978  1200                     l2895:	
  7979  1200  3018               	movlw	24
  7980  1201  024E               	subwf	___fttol@exp1,w
  7981  1202  1C03               	skipc
  7982  1203  2A16               	goto	l708
  7983  1204  3000               	movlw	0
  7984  1205  00C4               	movwf	?___fttol+3
  7985  1206  3000               	movlw	0
  7986  1207  00C3               	movwf	?___fttol+2
  7987  1208  3000               	movlw	0
  7988  1209  00C2               	movwf	?___fttol+1
  7989  120A  3000               	movlw	0
  7990  120B  00C1               	movwf	?___fttol
  7991  120C  0008               	return
  7992  120D                     l2901:	
  7993  120D  3001               	movlw	1
  7994  120E                     u3925:	
  7995  120E  35CA               	lslf	___fttol@lval,f
  7996  120F  0DCB               	rlf	___fttol@lval+1,f
  7997  1210  0DCC               	rlf	___fttol@lval+2,f
  7998  1211  0DCD               	rlf	___fttol@lval+3,f
  7999  1212  0B89               	decfsz	9,f
  8000  1213  2A0E               	goto	u3925
  8001  1214  3001               	movlw	1
  8002  1215  02CE               	subwf	___fttol@exp1,f
  8003  1216                     l708:	
  8004  1216  084E               	movf	___fttol@exp1,w
  8005  1217  1D03               	btfss	3,2
  8006  1218  2A0D               	goto	l2901
  8007  1219                     l2903:	
  8008  1219  0849               	movf	___fttol@sign1,w
  8009  121A  1903               	btfsc	3,2
  8010  121B  2A27               	goto	l2907
  8011  121C  09CA               	comf	___fttol@lval,f
  8012  121D  09CB               	comf	___fttol@lval+1,f
  8013  121E  09CC               	comf	___fttol@lval+2,f
  8014  121F  09CD               	comf	___fttol@lval+3,f
  8015  1220  0ACA               	incf	___fttol@lval,f
  8016  1221  1903               	skipnz
  8017  1222  0ACB               	incf	___fttol@lval+1,f
  8018  1223  1903               	skipnz
  8019  1224  0ACC               	incf	___fttol@lval+2,f
  8020  1225  1903               	skipnz
  8021  1226  0ACD               	incf	___fttol@lval+3,f
  8022  1227                     l2907:	
  8023  1227  084D               	movf	___fttol@lval+3,w
  8024  1228  00C4               	movwf	?___fttol+3
  8025  1229  084C               	movf	___fttol@lval+2,w
  8026  122A  00C3               	movwf	?___fttol+2
  8027  122B  084B               	movf	___fttol@lval+1,w
  8028  122C  00C2               	movwf	?___fttol+1
  8029  122D  084A               	movf	___fttol@lval,w
  8030  122E  00C1               	movwf	?___fttol
  8031  122F  0008               	return
  8032  1230                     __end_of___fttol:	
  8033                           
  8034                           	psect	text14
  8035  1EAE                     __ptext14:	
  8036 ;; *************** function ___ftsub *****************
  8037 ;; Defined at:
  8038 ;;		line 18 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\ftsub.c"
  8039 ;; Parameters:    Size  Location     Type
  8040 ;;  f2              3   51[BANK0 ] float 
  8041 ;;  f1              3   54[BANK0 ] float 
  8042 ;; Auto vars:     Size  Location     Type
  8043 ;;		None
  8044 ;; Return value:  Size  Location     Type
  8045 ;;                  3   51[BANK0 ] float 
  8046 ;; Registers used:
  8047 ;;		wreg, status,2, status,0, pclath, cstack
  8048 ;; Tracked objects:
  8049 ;;		On entry : 0/0
  8050 ;;		On exit  : 0/0
  8051 ;;		Unchanged: 0/0
  8052 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
  8053 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  8054 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  8055 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  8056 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  8057 ;;Total ram usage:        6 bytes
  8058 ;; Hardware stack levels used:    1
  8059 ;; Hardware stack levels required when called:    2
  8060 ;; This function calls:
  8061 ;;		___ftadd
  8062 ;; This function is called by:
  8063 ;;		_sprintf
  8064 ;; This function uses a non-reentrant model
  8065 ;;
  8066                           
  8067                           
  8068                           ;psect for function ___ftsub
  8069  1EAE                     ___ftsub:	
  8070                           
  8071                           ;incstack = 0
  8072                           ; Regs used in ___ftsub: [wreg+status,2+status,0+pclath+cstack]
  8073  1EAE  0140               	movlb	0	; select bank0
  8074  1EAF  0855               	movf	___ftsub@f2+2,w
  8075  1EB0  0454               	iorwf	___ftsub@f2+1,w
  8076  1EB1  0453               	iorwf	___ftsub@f2,w
  8077  1EB2  1903               	skipnz
  8078  1EB3  2EB6               	goto	l2865
  8079  1EB4  3080               	movlw	128
  8080  1EB5  06D5               	xorwf	___ftsub@f2+2,f
  8081  1EB6                     l2865:	
  8082  1EB6  0856               	movf	___ftsub@f1,w
  8083  1EB7  00C6               	movwf	___ftadd@f1
  8084  1EB8  0857               	movf	___ftsub@f1+1,w
  8085  1EB9  00C7               	movwf	___ftadd@f1+1
  8086  1EBA  0858               	movf	___ftsub@f1+2,w
  8087  1EBB  00C8               	movwf	___ftadd@f1+2
  8088  1EBC  0853               	movf	___ftsub@f2,w
  8089  1EBD  00C9               	movwf	___ftadd@f2
  8090  1EBE  0854               	movf	___ftsub@f2+1,w
  8091  1EBF  00CA               	movwf	___ftadd@f2+1
  8092  1EC0  0855               	movf	___ftsub@f2+2,w
  8093  1EC1  00CB               	movwf	___ftadd@f2+2
  8094  1EC2  3180  2011         	fcall	___ftadd
  8095  1EC4  0140               	movlb	0	; select bank0
  8096  1EC5  0846               	movf	?___ftadd,w
  8097  1EC6  00D3               	movwf	?___ftsub
  8098  1EC7  0847               	movf	?___ftadd+1,w
  8099  1EC8  00D4               	movwf	?___ftsub+1
  8100  1EC9  0848               	movf	?___ftadd+2,w
  8101  1ECA  00D5               	movwf	?___ftsub+2
  8102  1ECB  0008               	return
  8103  1ECC                     __end_of___ftsub:	
  8104                           
  8105                           	psect	text15
  8106  0011                     __ptext15:	
  8107 ;; *************** function ___ftadd *****************
  8108 ;; Defined at:
  8109 ;;		line 86 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\ftadd.c"
  8110 ;; Parameters:    Size  Location     Type
  8111 ;;  f1              3   38[BANK0 ] float 
  8112 ;;  f2              3   41[BANK0 ] float 
  8113 ;; Auto vars:     Size  Location     Type
  8114 ;;  exp1            1   50[BANK0 ] unsigned char 
  8115 ;;  exp2            1   49[BANK0 ] unsigned char 
  8116 ;;  sign            1   48[BANK0 ] unsigned char 
  8117 ;; Return value:  Size  Location     Type
  8118 ;;                  3   38[BANK0 ] float 
  8119 ;; Registers used:
  8120 ;;		wreg, status,2, status,0, pclath, cstack
  8121 ;; Tracked objects:
  8122 ;;		On entry : 0/0
  8123 ;;		On exit  : 0/0
  8124 ;;		Unchanged: 0/0
  8125 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
  8126 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  8127 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  8128 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  8129 ;;      Totals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  8130 ;;Total ram usage:       13 bytes
  8131 ;; Hardware stack levels used:    1
  8132 ;; Hardware stack levels required when called:    1
  8133 ;; This function calls:
  8134 ;;		___ftpack
  8135 ;; This function is called by:
  8136 ;;		_sprintf
  8137 ;;		___ftsub
  8138 ;; This function uses a non-reentrant model
  8139 ;;
  8140                           
  8141                           
  8142                           ;psect for function ___ftadd
  8143  0011                     ___ftadd:	
  8144                           
  8145                           ;incstack = 0
  8146                           ; Regs used in ___ftadd: [wreg+status,2+status,0+pclath+cstack]
  8147  0011  0140               	movlb	0	; select bank0
  8148  0012  0846               	movf	___ftadd@f1,w
  8149  0013  00CC               	movwf	??___ftadd
  8150  0014  0847               	movf	___ftadd@f1+1,w
  8151  0015  00CD               	movwf	??___ftadd+1
  8152  0016  0848               	movf	___ftadd@f1+2,w
  8153  0017  00CE               	movwf	??___ftadd+2
  8154  0018  1003               	clrc
  8155  0019  0D4D               	rlf	??___ftadd+1,w
  8156  001A  0D4E               	rlf	??___ftadd+2,w
  8157  001B  00CF               	movwf	??___ftadd+3
  8158  001C  084F               	movf	??___ftadd+3,w
  8159  001D  00D2               	movwf	___ftadd@exp1
  8160  001E  0849               	movf	___ftadd@f2,w
  8161  001F  00CC               	movwf	??___ftadd
  8162  0020  084A               	movf	___ftadd@f2+1,w
  8163  0021  00CD               	movwf	??___ftadd+1
  8164  0022  084B               	movf	___ftadd@f2+2,w
  8165  0023  00CE               	movwf	??___ftadd+2
  8166  0024  1003               	clrc
  8167  0025  0D4D               	rlf	??___ftadd+1,w
  8168  0026  0D4E               	rlf	??___ftadd+2,w
  8169  0027  00CF               	movwf	??___ftadd+3
  8170  0028  084F               	movf	??___ftadd+3,w
  8171  0029  00D1               	movwf	___ftadd@exp2
  8172  002A  0852               	movf	___ftadd@exp1,w
  8173  002B  1903               	btfsc	3,2
  8174  002C  2839               	goto	l2493
  8175  002D  0851               	movf	___ftadd@exp2,w
  8176  002E  0252               	subwf	___ftadd@exp1,w
  8177  002F  1803               	skipnc
  8178  0030  2840               	goto	l2497
  8179  0031  0352               	decf	___ftadd@exp1,w
  8180  0032  3AFF               	xorlw	255
  8181  0033  0751               	addwf	___ftadd@exp2,w
  8182  0034  00CC               	movwf	??___ftadd
  8183  0035  3019               	movlw	25
  8184  0036  024C               	subwf	??___ftadd,w
  8185  0037  1C03               	skipc
  8186  0038  2840               	goto	l2497
  8187  0039                     l2493:	
  8188  0039  0849               	movf	___ftadd@f2,w
  8189  003A  00C6               	movwf	?___ftadd
  8190  003B  084A               	movf	___ftadd@f2+1,w
  8191  003C  00C7               	movwf	?___ftadd+1
  8192  003D  084B               	movf	___ftadd@f2+2,w
  8193  003E  00C8               	movwf	?___ftadd+2
  8194  003F  0008               	return
  8195  0040                     l2497:	
  8196  0040  0851               	movf	___ftadd@exp2,w
  8197  0041  1903               	btfsc	3,2
  8198  0042  0008               	return
  8199  0043  0852               	movf	___ftadd@exp1,w
  8200  0044  0251               	subwf	___ftadd@exp2,w
  8201  0045  1803               	skipnc
  8202  0046  284F               	goto	l2503
  8203  0047  0351               	decf	___ftadd@exp2,w
  8204  0048  3AFF               	xorlw	255
  8205  0049  0752               	addwf	___ftadd@exp1,w
  8206  004A  00CC               	movwf	??___ftadd
  8207  004B  3019               	movlw	25
  8208  004C  024C               	subwf	??___ftadd,w
  8209  004D  1803               	btfsc	3,0
  8210  004E  0008               	return
  8211  004F                     l2503:	
  8212  004F  3006               	movlw	6
  8213  0050  00CC               	movwf	??___ftadd
  8214  0051  084C               	movf	??___ftadd,w
  8215  0052  00D0               	movwf	___ftadd@sign
  8216  0053  1BC8               	btfsc	___ftadd@f1+2,7
  8217  0054  17D0               	bsf	___ftadd@sign,7
  8218  0055  1BCB               	btfsc	___ftadd@f2+2,7
  8219  0056  1750               	bsf	___ftadd@sign,6
  8220  0057  17C7               	bsf	___ftadd@f1+1,7
  8221  0058  30FF               	movlw	255
  8222  0059  05C6               	andwf	___ftadd@f1,f
  8223  005A  30FF               	movlw	255
  8224  005B  05C7               	andwf	___ftadd@f1+1,f
  8225  005C  3000               	movlw	0
  8226  005D  05C8               	andwf	___ftadd@f1+2,f
  8227  005E  17CA               	bsf	___ftadd@f2+1,7
  8228  005F  30FF               	movlw	255
  8229  0060  05C9               	andwf	___ftadd@f2,f
  8230  0061  30FF               	movlw	255
  8231  0062  05CA               	andwf	___ftadd@f2+1,f
  8232  0063  3000               	movlw	0
  8233  0064  05CB               	andwf	___ftadd@f2+2,f
  8234  0065  0851               	movf	___ftadd@exp2,w
  8235  0066  0252               	subwf	___ftadd@exp1,w
  8236  0067  1803               	skipnc
  8237  0068  288B               	goto	l2525
  8238  0069                     l2515:	
  8239  0069  3001               	movlw	1
  8240  006A                     u3085:	
  8241  006A  35C9               	lslf	___ftadd@f2,f
  8242  006B  0DCA               	rlf	___ftadd@f2+1,f
  8243  006C  0DCB               	rlf	___ftadd@f2+2,f
  8244  006D  0B89               	decfsz	9,f
  8245  006E  286A               	goto	u3085
  8246  006F  3001               	movlw	1
  8247  0070  02D1               	subwf	___ftadd@exp2,f
  8248  0071  0851               	movf	___ftadd@exp2,w
  8249  0072  0652               	xorwf	___ftadd@exp1,w
  8250  0073  1903               	skipnz
  8251  0074  2886               	goto	l2523
  8252  0075  3001               	movlw	1
  8253  0076  02D0               	subwf	___ftadd@sign,f
  8254  0077  0850               	movf	___ftadd@sign,w
  8255  0078  3907               	andlw	7
  8256  0079  1903               	btfsc	3,2
  8257  007A  2886               	goto	l2523
  8258  007B  2869               	goto	l2515
  8259  007C                     l2521:	
  8260  007C  3001               	movlw	1
  8261  007D                     u3115:	
  8262  007D  36C8               	lsrf	___ftadd@f1+2,f
  8263  007E  0CC7               	rrf	___ftadd@f1+1,f
  8264  007F  0CC6               	rrf	___ftadd@f1,f
  8265  0080  0B89               	decfsz	9,f
  8266  0081  287D               	goto	u3115
  8267  0082  3001               	movlw	1
  8268  0083  00CC               	movwf	??___ftadd
  8269  0084  084C               	movf	??___ftadd,w
  8270  0085  07D2               	addwf	___ftadd@exp1,f
  8271  0086                     l2523:	
  8272  0086  0852               	movf	___ftadd@exp1,w
  8273  0087  0651               	xorwf	___ftadd@exp2,w
  8274  0088  1903               	btfsc	3,2
  8275  0089  28B0               	goto	l631
  8276  008A  287C               	goto	l2521
  8277  008B                     l2525:	
  8278  008B  0852               	movf	___ftadd@exp1,w
  8279  008C  0251               	subwf	___ftadd@exp2,w
  8280  008D  1803               	skipnc
  8281  008E  28B0               	goto	l631
  8282  008F                     l2527:	
  8283  008F  3001               	movlw	1
  8284  0090                     u3145:	
  8285  0090  35C6               	lslf	___ftadd@f1,f
  8286  0091  0DC7               	rlf	___ftadd@f1+1,f
  8287  0092  0DC8               	rlf	___ftadd@f1+2,f
  8288  0093  0B89               	decfsz	9,f
  8289  0094  2890               	goto	u3145
  8290  0095  3001               	movlw	1
  8291  0096  02D2               	subwf	___ftadd@exp1,f
  8292  0097  0851               	movf	___ftadd@exp2,w
  8293  0098  0652               	xorwf	___ftadd@exp1,w
  8294  0099  1903               	skipnz
  8295  009A  28AC               	goto	l2535
  8296  009B  3001               	movlw	1
  8297  009C  02D0               	subwf	___ftadd@sign,f
  8298  009D  0850               	movf	___ftadd@sign,w
  8299  009E  3907               	andlw	7
  8300  009F  1903               	btfsc	3,2
  8301  00A0  28AC               	goto	l2535
  8302  00A1  288F               	goto	l2527
  8303  00A2                     l2533:	
  8304  00A2  3001               	movlw	1
  8305  00A3                     u3175:	
  8306  00A3  36CB               	lsrf	___ftadd@f2+2,f
  8307  00A4  0CCA               	rrf	___ftadd@f2+1,f
  8308  00A5  0CC9               	rrf	___ftadd@f2,f
  8309  00A6  0B89               	decfsz	9,f
  8310  00A7  28A3               	goto	u3175
  8311  00A8  3001               	movlw	1
  8312  00A9  00CC               	movwf	??___ftadd
  8313  00AA  084C               	movf	??___ftadd,w
  8314  00AB  07D1               	addwf	___ftadd@exp2,f
  8315  00AC                     l2535:	
  8316  00AC  0852               	movf	___ftadd@exp1,w
  8317  00AD  0651               	xorwf	___ftadd@exp2,w
  8318  00AE  1D03               	skipz
  8319  00AF  28A2               	goto	l2533
  8320  00B0                     l631:	
  8321  00B0  1FD0               	btfss	___ftadd@sign,7
  8322  00B1  28C2               	goto	l2539
  8323  00B2  30FF               	movlw	255
  8324  00B3  06C6               	xorwf	___ftadd@f1,f
  8325  00B4  30FF               	movlw	255
  8326  00B5  06C7               	xorwf	___ftadd@f1+1,f
  8327  00B6  30FF               	movlw	255
  8328  00B7  06C8               	xorwf	___ftadd@f1+2,f
  8329  00B8  3001               	movlw	1
  8330  00B9  07C6               	addwf	___ftadd@f1,f
  8331  00BA  3000               	movlw	0
  8332  00BB  1803               	skipnc
  8333  00BC  3001               	movlw	1
  8334  00BD  07C7               	addwf	___ftadd@f1+1,f
  8335  00BE  3000               	movlw	0
  8336  00BF  1803               	skipnc
  8337  00C0  3001               	movlw	1
  8338  00C1  07C8               	addwf	___ftadd@f1+2,f
  8339  00C2                     l2539:	
  8340  00C2  1F50               	btfss	___ftadd@sign,6
  8341  00C3  28D4               	goto	l2543
  8342  00C4  30FF               	movlw	255
  8343  00C5  06C9               	xorwf	___ftadd@f2,f
  8344  00C6  30FF               	movlw	255
  8345  00C7  06CA               	xorwf	___ftadd@f2+1,f
  8346  00C8  30FF               	movlw	255
  8347  00C9  06CB               	xorwf	___ftadd@f2+2,f
  8348  00CA  3001               	movlw	1
  8349  00CB  07C9               	addwf	___ftadd@f2,f
  8350  00CC  3000               	movlw	0
  8351  00CD  1803               	skipnc
  8352  00CE  3001               	movlw	1
  8353  00CF  07CA               	addwf	___ftadd@f2+1,f
  8354  00D0  3000               	movlw	0
  8355  00D1  1803               	skipnc
  8356  00D2  3001               	movlw	1
  8357  00D3  07CB               	addwf	___ftadd@f2+2,f
  8358  00D4                     l2543:	
  8359  00D4  01D0               	clrf	___ftadd@sign
  8360  00D5  0846               	movf	___ftadd@f1,w
  8361  00D6  07C9               	addwf	___ftadd@f2,f
  8362  00D7  0847               	movf	___ftadd@f1+1,w
  8363  00D8  3DCA               	addwfc	___ftadd@f2+1,f
  8364  00D9  0848               	movf	___ftadd@f1+2,w
  8365  00DA  3DCB               	addwfc	___ftadd@f2+2,f
  8366  00DB  1FCB               	btfss	___ftadd@f2+2,7
  8367  00DC  28EF               	goto	l2553
  8368  00DD  30FF               	movlw	255
  8369  00DE  06C9               	xorwf	___ftadd@f2,f
  8370  00DF  30FF               	movlw	255
  8371  00E0  06CA               	xorwf	___ftadd@f2+1,f
  8372  00E1  30FF               	movlw	255
  8373  00E2  06CB               	xorwf	___ftadd@f2+2,f
  8374  00E3  3001               	movlw	1
  8375  00E4  07C9               	addwf	___ftadd@f2,f
  8376  00E5  3000               	movlw	0
  8377  00E6  1803               	skipnc
  8378  00E7  3001               	movlw	1
  8379  00E8  07CA               	addwf	___ftadd@f2+1,f
  8380  00E9  3000               	movlw	0
  8381  00EA  1803               	skipnc
  8382  00EB  3001               	movlw	1
  8383  00EC  07CB               	addwf	___ftadd@f2+2,f
  8384  00ED  01D0               	clrf	___ftadd@sign
  8385  00EE  0AD0               	incf	___ftadd@sign,f
  8386  00EF                     l2553:	
  8387  00EF  0849               	movf	___ftadd@f2,w
  8388  00F0  00F0               	movwf	___ftpack@arg
  8389  00F1  084A               	movf	___ftadd@f2+1,w
  8390  00F2  00F1               	movwf	___ftpack@arg+1
  8391  00F3  084B               	movf	___ftadd@f2+2,w
  8392  00F4  00F2               	movwf	___ftpack@arg+2
  8393  00F5  0852               	movf	___ftadd@exp1,w
  8394  00F6  00CC               	movwf	??___ftadd
  8395  00F7  084C               	movf	??___ftadd,w
  8396  00F8  00F3               	movwf	___ftpack@exp
  8397  00F9  0850               	movf	___ftadd@sign,w
  8398  00FA  00CD               	movwf	??___ftadd+1
  8399  00FB  084D               	movf	??___ftadd+1,w
  8400  00FC  00F4               	movwf	___ftpack@sign
  8401  00FD  3191  2145         	fcall	___ftpack
  8402  00FF  0870               	movf	?___ftpack,w
  8403  0100  0140               	movlb	0	; select bank0
  8404  0101  00C6               	movwf	?___ftadd
  8405  0102  0871               	movf	?___ftpack+1,w
  8406  0103  00C7               	movwf	?___ftadd+1
  8407  0104  0872               	movf	?___ftpack+2,w
  8408  0105  00C8               	movwf	?___ftadd+2
  8409  0106  0008               	return
  8410  0107                     __end_of___ftadd:	
  8411                           
  8412                           	psect	text16
  8413  0009                     __ptext16:	
  8414 ;; *************** function ___ftneg *****************
  8415 ;; Defined at:
  8416 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\ftneg.c"
  8417 ;; Parameters:    Size  Location     Type
  8418 ;;  f1              3    0[COMMON] float 
  8419 ;; Auto vars:     Size  Location     Type
  8420 ;;		None
  8421 ;; Return value:  Size  Location     Type
  8422 ;;                  3    0[COMMON] float 
  8423 ;; Registers used:
  8424 ;;		wreg
  8425 ;; Tracked objects:
  8426 ;;		On entry : 0/0
  8427 ;;		On exit  : 0/0
  8428 ;;		Unchanged: 0/0
  8429 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
  8430 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  8431 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  8432 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  8433 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  8434 ;;Total ram usage:        3 bytes
  8435 ;; Hardware stack levels used:    1
  8436 ;; This function calls:
  8437 ;;		Nothing
  8438 ;; This function is called by:
  8439 ;;		_sprintf
  8440 ;; This function uses a non-reentrant model
  8441 ;;
  8442                           
  8443                           
  8444                           ;psect for function ___ftneg
  8445  0009                     ___ftneg:	
  8446                           
  8447                           ;incstack = 0
  8448                           ; Regs used in ___ftneg: [wreg]
  8449  0009  0872               	movf	___ftneg@f1+2,w
  8450  000A  0471               	iorwf	___ftneg@f1+1,w
  8451  000B  0470               	iorwf	___ftneg@f1,w
  8452  000C  1903               	skipnz
  8453  000D  0008               	return
  8454  000E  3080               	movlw	128
  8455  000F  06F2               	xorwf	___ftneg@f1+2,f
  8456  0010  0008               	return
  8457  0011                     __end_of___ftneg:	
  8458                           
  8459                           	psect	text17
  8460  1F82                     __ptext17:	
  8461 ;; *************** function ___ftge *****************
  8462 ;; Defined at:
  8463 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\ftge.c"
  8464 ;; Parameters:    Size  Location     Type
  8465 ;;  ff1             3    0[COMMON] float 
  8466 ;;  ff2             3    3[COMMON] float 
  8467 ;; Auto vars:     Size  Location     Type
  8468 ;;		None
  8469 ;; Return value:  Size  Location     Type
  8470 ;;		None               void
  8471 ;; Registers used:
  8472 ;;		wreg, status,2, status,0
  8473 ;; Tracked objects:
  8474 ;;		On entry : 0/0
  8475 ;;		On exit  : 0/0
  8476 ;;		Unchanged: 0/0
  8477 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
  8478 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  8479 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  8480 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  8481 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  8482 ;;Total ram usage:        9 bytes
  8483 ;; Hardware stack levels used:    1
  8484 ;; This function calls:
  8485 ;;		Nothing
  8486 ;; This function is called by:
  8487 ;;		_sprintf
  8488 ;; This function uses a non-reentrant model
  8489 ;;
  8490                           
  8491                           
  8492                           ;psect for function ___ftge
  8493  1F82                     ___ftge:	
  8494                           
  8495                           ;incstack = 0
  8496                           ; Regs used in ___ftge: [wreg+status,2+status,0]
  8497  1F82  1FF2               	btfss	___ftge@ff1+2,7
  8498  1F83  2F98               	goto	l2837
  8499  1F84  0970               	comf	___ftge@ff1,w
  8500  1F85  00F6               	movwf	??___ftge
  8501  1F86  0971               	comf	___ftge@ff1+1,w
  8502  1F87  00F7               	movwf	??___ftge+1
  8503  1F88  0972               	comf	___ftge@ff1+2,w
  8504  1F89  00F8               	movwf	??___ftge+2
  8505  1F8A  0AF6               	incf	??___ftge,f
  8506  1F8B  1903               	skipnz
  8507  1F8C  0AF7               	incf	??___ftge+1,f
  8508  1F8D  1903               	skipnz
  8509  1F8E  0AF8               	incf	??___ftge+2,f
  8510  1F8F  3000               	movlw	0
  8511  1F90  0776               	addwf	??___ftge,w
  8512  1F91  00F0               	movwf	___ftge@ff1
  8513  1F92  3000               	movlw	0
  8514  1F93  3D77               	addwfc	??___ftge+1,w
  8515  1F94  00F1               	movwf	___ftge@ff1+1
  8516  1F95  3080               	movlw	128
  8517  1F96  3D78               	addwfc	??___ftge+2,w
  8518  1F97  00F2               	movwf	___ftge@ff1+2
  8519  1F98                     l2837:	
  8520  1F98  1FF5               	btfss	___ftge@ff2+2,7
  8521  1F99  2FAE               	goto	l2841
  8522  1F9A  0973               	comf	___ftge@ff2,w
  8523  1F9B  00F6               	movwf	??___ftge
  8524  1F9C  0974               	comf	___ftge@ff2+1,w
  8525  1F9D  00F7               	movwf	??___ftge+1
  8526  1F9E  0975               	comf	___ftge@ff2+2,w
  8527  1F9F  00F8               	movwf	??___ftge+2
  8528  1FA0  0AF6               	incf	??___ftge,f
  8529  1FA1  1903               	skipnz
  8530  1FA2  0AF7               	incf	??___ftge+1,f
  8531  1FA3  1903               	skipnz
  8532  1FA4  0AF8               	incf	??___ftge+2,f
  8533  1FA5  3000               	movlw	0
  8534  1FA6  0776               	addwf	??___ftge,w
  8535  1FA7  00F3               	movwf	___ftge@ff2
  8536  1FA8  3000               	movlw	0
  8537  1FA9  3D77               	addwfc	??___ftge+1,w
  8538  1FAA  00F4               	movwf	___ftge@ff2+1
  8539  1FAB  3080               	movlw	128
  8540  1FAC  3D78               	addwfc	??___ftge+2,w
  8541  1FAD  00F5               	movwf	___ftge@ff2+2
  8542  1FAE                     l2841:	
  8543  1FAE  3080               	movlw	128
  8544  1FAF  06F2               	xorwf	___ftge@ff1+2,f
  8545  1FB0  3080               	movlw	128
  8546  1FB1  06F5               	xorwf	___ftge@ff2+2,f
  8547  1FB2  0875               	movf	___ftge@ff2+2,w
  8548  1FB3  0272               	subwf	___ftge@ff1+2,w
  8549  1FB4  1D03               	skipz
  8550  1FB5  0008               	return
  8551  1FB6  0874               	movf	___ftge@ff2+1,w
  8552  1FB7  0271               	subwf	___ftge@ff1+1,w
  8553  1FB8  1D03               	skipz
  8554  1FB9  0008               	return
  8555  1FBA  0873               	movf	___ftge@ff2,w
  8556  1FBB  0270               	subwf	___ftge@ff1,w
  8557  1FBC  0008               	return
  8558  1FBD                     __end_of___ftge:	
  8559                           
  8560                           	psect	text18
  8561  1055                     __ptext18:	
  8562 ;; *************** function _n2 *****************
  8563 ;; Defined at:
  8564 ;;		line 42 in file "main.c"
  8565 ;; Parameters:    Size  Location     Type
  8566 ;;  valor           2    8[BANK0 ] int 
  8567 ;;  contador        2   10[BANK0 ] int 
  8568 ;; Auto vars:     Size  Location     Type
  8569 ;;		None
  8570 ;; Return value:  Size  Location     Type
  8571 ;;                  1    wreg      void 
  8572 ;; Registers used:
  8573 ;;		wreg, status,2, status,0, pclath, cstack
  8574 ;; Tracked objects:
  8575 ;;		On entry : 0/0
  8576 ;;		On exit  : 0/0
  8577 ;;		Unchanged: 0/0
  8578 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
  8579 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  8580 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  8581 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  8582 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  8583 ;;Total ram usage:        4 bytes
  8584 ;; Hardware stack levels used:    1
  8585 ;; Hardware stack levels required when called:    1
  8586 ;; This function calls:
  8587 ;;		___wmul
  8588 ;; This function is called by:
  8589 ;;		_main
  8590 ;; This function uses a non-reentrant model
  8591 ;;
  8592                           
  8593                           
  8594                           ;psect for function _n2
  8595  1055                     _n2:	
  8596                           
  8597                           ;main.c: 43: if(contador==3){numero2=numero2+valor;}
  8598                           
  8599                           ;incstack = 0
  8600                           ; Regs used in _n2: [wreg+status,2+status,0+pclath+cstack]
  8601  1055  3003               	movlw	3
  8602  1056  0140               	movlb	0	; select bank0
  8603  1057  062A               	xorwf	n2@contador,w
  8604  1058  042B               	iorwf	n2@contador+1,w
  8605  1059  1D03               	btfss	3,2
  8606  105A  2864               	goto	l114
  8607  105B  0828               	movf	n2@valor,w
  8608  105C  0141               	movlb	1	; select bank1
  8609  105D  0759               	addwf	_numero2^(0+128),w
  8610  105E  00D9               	movwf	_numero2^(0+128)
  8611  105F  0140               	movlb	0	; select bank0
  8612  1060  0829               	movf	n2@valor+1,w
  8613  1061  0141               	movlb	1	; select bank1
  8614  1062  3D5A               	addwfc	(_numero2+1)^(0+128),w
  8615  1063  00DA               	movwf	(_numero2+1)^(0+128)
  8616  1064                     l114:	
  8617                           
  8618                           ;main.c: 44: if(contador==2){numero2=numero2*10+valor;}
  8619  1064  3002               	movlw	2
  8620  1065  0140               	movlb	0	; select bank0
  8621  1066  062A               	xorwf	n2@contador,w
  8622  1067  042B               	iorwf	n2@contador+1,w
  8623  1068  1D03               	btfss	3,2
  8624  1069  2883               	goto	l3053
  8625  106A  0141               	movlb	1	; select bank1
  8626  106B  085A               	movf	(_numero2+1)^(0+128),w
  8627  106C  0140               	movlb	0	; select bank0
  8628  106D  00A5               	movwf	___wmul@multiplier+1
  8629  106E  0141               	movlb	1	; select bank1
  8630  106F  0859               	movf	_numero2^(0+128),w
  8631  1070  0140               	movlb	0	; select bank0
  8632  1071  00A4               	movwf	___wmul@multiplier
  8633  1072  300A               	movlw	10
  8634  1073  00A6               	movwf	___wmul@multiplicand
  8635  1074  3000               	movlw	0
  8636  1075  00A7               	movwf	___wmul@multiplicand+1
  8637  1076  319E  2692  3190   	fcall	___wmul
  8638  1079  0140               	movlb	0	; select bank0
  8639  107A  0828               	movf	n2@valor,w
  8640  107B  0724               	addwf	?___wmul,w
  8641  107C  0141               	movlb	1	; select bank1
  8642  107D  00D9               	movwf	_numero2^(0+128)
  8643  107E  0140               	movlb	0	; select bank0
  8644  107F  0829               	movf	n2@valor+1,w
  8645  1080  3D25               	addwfc	?___wmul+1,w
  8646  1081  0141               	movlb	1	; select bank1
  8647  1082  00DA               	movwf	(_numero2+1)^(0+128)
  8648  1083                     l3053:	
  8649                           
  8650                           ;main.c: 45: if(contador==1){numero2=numero2*10+valor;}
  8651  1083  0140               	movlb	0	; select bank0
  8652  1084  032A               	decf	n2@contador,w
  8653  1085  042B               	iorwf	n2@contador+1,w
  8654  1086  1D03               	btfss	3,2
  8655  1087  0008               	return
  8656  1088  0141               	movlb	1	; select bank1
  8657  1089  085A               	movf	(_numero2+1)^(0+128),w
  8658  108A  0140               	movlb	0	; select bank0
  8659  108B  00A5               	movwf	___wmul@multiplier+1
  8660  108C  0141               	movlb	1	; select bank1
  8661  108D  0859               	movf	_numero2^(0+128),w
  8662  108E  0140               	movlb	0	; select bank0
  8663  108F  00A4               	movwf	___wmul@multiplier
  8664  1090  300A               	movlw	10
  8665  1091  00A6               	movwf	___wmul@multiplicand
  8666  1092  3000               	movlw	0
  8667  1093  00A7               	movwf	___wmul@multiplicand+1
  8668  1094  319E  2692         	fcall	___wmul
  8669  1096  0140               	movlb	0	; select bank0
  8670  1097  0828               	movf	n2@valor,w
  8671  1098  0724               	addwf	?___wmul,w
  8672  1099  0141               	movlb	1	; select bank1
  8673  109A  00D9               	movwf	_numero2^(0+128)
  8674  109B  0140               	movlb	0	; select bank0
  8675  109C  0829               	movf	n2@valor+1,w
  8676  109D  3D25               	addwfc	?___wmul+1,w
  8677  109E  0141               	movlb	1	; select bank1
  8678  109F  00DA               	movwf	(_numero2+1)^(0+128)
  8679  10A0  0008               	return
  8680  10A1                     __end_of_n2:	
  8681                           
  8682                           	psect	text19
  8683  1F49                     __ptext19:	
  8684 ;; *************** function _n1 *****************
  8685 ;; Defined at:
  8686 ;;		line 37 in file "main.c"
  8687 ;; Parameters:    Size  Location     Type
  8688 ;;  valor           2    8[BANK0 ] int 
  8689 ;;  contador        2   10[BANK0 ] int 
  8690 ;; Auto vars:     Size  Location     Type
  8691 ;;		None
  8692 ;; Return value:  Size  Location     Type
  8693 ;;                  1    wreg      void 
  8694 ;; Registers used:
  8695 ;;		wreg, status,2, status,0, pclath, cstack
  8696 ;; Tracked objects:
  8697 ;;		On entry : 0/0
  8698 ;;		On exit  : 0/0
  8699 ;;		Unchanged: 0/0
  8700 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
  8701 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  8702 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  8703 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  8704 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  8705 ;;Total ram usage:        4 bytes
  8706 ;; Hardware stack levels used:    1
  8707 ;; Hardware stack levels required when called:    1
  8708 ;; This function calls:
  8709 ;;		___wmul
  8710 ;; This function is called by:
  8711 ;;		_main
  8712 ;; This function uses a non-reentrant model
  8713 ;;
  8714                           
  8715                           
  8716                           ;psect for function _n1
  8717  1F49                     _n1:	
  8718                           
  8719                           ;main.c: 38: if(contador==3){numero1=numero1+valor;}
  8720                           
  8721                           ;incstack = 0
  8722                           ; Regs used in _n1: [wreg+status,2+status,0+pclath+cstack]
  8723  1F49  3003               	movlw	3
  8724  1F4A  0140               	movlb	0	; select bank0
  8725  1F4B  062A               	xorwf	n1@contador,w
  8726  1F4C  042B               	iorwf	n1@contador+1,w
  8727  1F4D  1D03               	btfss	3,2
  8728  1F4E  2F55               	goto	l108
  8729  1F4F  0828               	movf	n1@valor,w
  8730  1F50  076E               	addwf	_numero1,w
  8731  1F51  00EE               	movwf	_numero1
  8732  1F52  0829               	movf	n1@valor+1,w
  8733  1F53  3D6F               	addwfc	_numero1+1,w
  8734  1F54  00EF               	movwf	_numero1+1
  8735  1F55                     l108:	
  8736                           
  8737                           ;main.c: 39: if(contador==2){numero1=numero1*10+valor;}
  8738  1F55  3002               	movlw	2
  8739  1F56  062A               	xorwf	n1@contador,w
  8740  1F57  042B               	iorwf	n1@contador+1,w
  8741  1F58  1D03               	btfss	3,2
  8742  1F59  2F6C               	goto	l3043
  8743  1F5A  086F               	movf	_numero1+1,w
  8744  1F5B  00A5               	movwf	___wmul@multiplier+1
  8745  1F5C  086E               	movf	_numero1,w
  8746  1F5D  00A4               	movwf	___wmul@multiplier
  8747  1F5E  300A               	movlw	10
  8748  1F5F  00A6               	movwf	___wmul@multiplicand
  8749  1F60  3000               	movlw	0
  8750  1F61  00A7               	movwf	___wmul@multiplicand+1
  8751  1F62  319E  2692  319F   	fcall	___wmul
  8752  1F65  0140               	movlb	0	; select bank0
  8753  1F66  0828               	movf	n1@valor,w
  8754  1F67  0724               	addwf	?___wmul,w
  8755  1F68  00EE               	movwf	_numero1
  8756  1F69  0829               	movf	n1@valor+1,w
  8757  1F6A  3D25               	addwfc	?___wmul+1,w
  8758  1F6B  00EF               	movwf	_numero1+1
  8759  1F6C                     l3043:	
  8760                           
  8761                           ;main.c: 40: if(contador==1){numero1=numero1*10+valor;}
  8762  1F6C  032A               	decf	n1@contador,w
  8763  1F6D  042B               	iorwf	n1@contador+1,w
  8764  1F6E  1D03               	btfss	3,2
  8765  1F6F  0008               	return
  8766  1F70  086F               	movf	_numero1+1,w
  8767  1F71  00A5               	movwf	___wmul@multiplier+1
  8768  1F72  086E               	movf	_numero1,w
  8769  1F73  00A4               	movwf	___wmul@multiplier
  8770  1F74  300A               	movlw	10
  8771  1F75  00A6               	movwf	___wmul@multiplicand
  8772  1F76  3000               	movlw	0
  8773  1F77  00A7               	movwf	___wmul@multiplicand+1
  8774  1F78  319E  2692         	fcall	___wmul
  8775  1F7A  0140               	movlb	0	; select bank0
  8776  1F7B  0828               	movf	n1@valor,w
  8777  1F7C  0724               	addwf	?___wmul,w
  8778  1F7D  00EE               	movwf	_numero1
  8779  1F7E  0829               	movf	n1@valor+1,w
  8780  1F7F  3D25               	addwfc	?___wmul+1,w
  8781  1F80  00EF               	movwf	_numero1+1
  8782  1F81  0008               	return
  8783  1F82                     __end_of_n1:	
  8784                           
  8785                           	psect	text20
  8786  1E92                     __ptext20:	
  8787 ;; *************** function ___wmul *****************
  8788 ;; Defined at:
  8789 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\Umul16.c"
  8790 ;; Parameters:    Size  Location     Type
  8791 ;;  multiplier      2    4[BANK0 ] unsigned int 
  8792 ;;  multiplicand    2    6[BANK0 ] unsigned int 
  8793 ;; Auto vars:     Size  Location     Type
  8794 ;;  product         2   12[COMMON] unsigned int 
  8795 ;; Return value:  Size  Location     Type
  8796 ;;                  2    4[BANK0 ] unsigned int 
  8797 ;; Registers used:
  8798 ;;		wreg, status,2, status,0
  8799 ;; Tracked objects:
  8800 ;;		On entry : 0/0
  8801 ;;		On exit  : 0/0
  8802 ;;		Unchanged: 0/0
  8803 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
  8804 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  8805 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  8806 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  8807 ;;      Totals:         2       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  8808 ;;Total ram usage:        6 bytes
  8809 ;; Hardware stack levels used:    1
  8810 ;; This function calls:
  8811 ;;		Nothing
  8812 ;; This function is called by:
  8813 ;;		_n1
  8814 ;;		_n2
  8815 ;;		_main
  8816 ;;		_fround
  8817 ;;		_scale
  8818 ;;		_sprintf
  8819 ;; This function uses a non-reentrant model
  8820 ;;
  8821                           
  8822                           
  8823                           ;psect for function ___wmul
  8824  1E92                     ___wmul:	
  8825                           
  8826                           ;incstack = 0
  8827                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  8828  1E92  01FC               	clrf	___wmul@product
  8829  1E93  01FD               	clrf	___wmul@product+1
  8830  1E94                     l2393:	
  8831  1E94  0140               	movlb	0	; select bank0
  8832  1E95  1C24               	btfss	___wmul@multiplier,0
  8833  1E96  2E9B               	goto	l422
  8834  1E97  0826               	movf	___wmul@multiplicand,w
  8835  1E98  07FC               	addwf	___wmul@product,f
  8836  1E99  0827               	movf	___wmul@multiplicand+1,w
  8837  1E9A  3DFD               	addwfc	___wmul@product+1,f
  8838  1E9B                     l422:	
  8839  1E9B  3001               	movlw	1
  8840  1E9C                     u2775:	
  8841  1E9C  35A6               	lslf	___wmul@multiplicand,f
  8842  1E9D  0DA7               	rlf	___wmul@multiplicand+1,f
  8843  1E9E  0B89               	decfsz	9,f
  8844  1E9F  2E9C               	goto	u2775
  8845  1EA0  3001               	movlw	1
  8846  1EA1                     u2785:	
  8847  1EA1  36A5               	lsrf	___wmul@multiplier+1,f
  8848  1EA2  0CA4               	rrf	___wmul@multiplier,f
  8849  1EA3  0B89               	decfsz	9,f
  8850  1EA4  2EA1               	goto	u2785
  8851  1EA5  0824               	movf	___wmul@multiplier,w
  8852  1EA6  0425               	iorwf	___wmul@multiplier+1,w
  8853  1EA7  1D03               	btfss	3,2
  8854  1EA8  2E94               	goto	l2393
  8855  1EA9  087D               	movf	___wmul@product+1,w
  8856  1EAA  00A5               	movwf	?___wmul+1
  8857  1EAB  087C               	movf	___wmul@product,w
  8858  1EAC  00A4               	movwf	?___wmul
  8859  1EAD  0008               	return
  8860  1EAE                     __end_of___wmul:	
  8861                           
  8862                           	psect	text21
  8863  12C3                     __ptext21:	
  8864 ;; *************** function ___ftdiv *****************
  8865 ;; Defined at:
  8866 ;;		line 56 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\ftdiv.c"
  8867 ;; Parameters:    Size  Location     Type
  8868 ;;  f2              3    8[COMMON] float 
  8869 ;;  f1              3   11[COMMON] float 
  8870 ;; Auto vars:     Size  Location     Type
  8871 ;;  f3              3    5[BANK0 ] float 
  8872 ;;  sign            1    9[BANK0 ] unsigned char 
  8873 ;;  exp             1    8[BANK0 ] unsigned char 
  8874 ;;  cntr            1    4[BANK0 ] unsigned char 
  8875 ;; Return value:  Size  Location     Type
  8876 ;;                  3    8[COMMON] float 
  8877 ;; Registers used:
  8878 ;;		wreg, status,2, status,0, pclath, cstack
  8879 ;; Tracked objects:
  8880 ;;		On entry : 0/0
  8881 ;;		On exit  : 0/0
  8882 ;;		Unchanged: 0/0
  8883 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
  8884 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  8885 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  8886 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  8887 ;;      Totals:         6      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  8888 ;;Total ram usage:       16 bytes
  8889 ;; Hardware stack levels used:    1
  8890 ;; Hardware stack levels required when called:    1
  8891 ;; This function calls:
  8892 ;;		___ftpack
  8893 ;; This function is called by:
  8894 ;;		_main
  8895 ;; This function uses a non-reentrant model
  8896 ;;
  8897                           
  8898                           
  8899                           ;psect for function ___ftdiv
  8900  12C3                     ___ftdiv:	
  8901                           
  8902                           ;incstack = 0
  8903                           ; Regs used in ___ftdiv: [wreg+status,2+status,0+pclath+cstack]
  8904  12C3  087B               	movf	___ftdiv@f1,w
  8905  12C4  0140               	movlb	0	; select bank0
  8906  12C5  00A0               	movwf	??___ftdiv
  8907  12C6  087C               	movf	___ftdiv@f1+1,w
  8908  12C7  00A1               	movwf	??___ftdiv+1
  8909  12C8  087D               	movf	___ftdiv@f1+2,w
  8910  12C9  00A2               	movwf	??___ftdiv+2
  8911  12CA  1003               	clrc
  8912  12CB  0D21               	rlf	??___ftdiv+1,w
  8913  12CC  0D22               	rlf	??___ftdiv+2,w
  8914  12CD  00A3               	movwf	??___ftdiv+3
  8915  12CE  0823               	movf	??___ftdiv+3,w
  8916  12CF  00A8               	movwf	___ftdiv@exp
  8917  12D0  0828               	movf	___ftdiv@exp,w
  8918  12D1  1D03               	btfss	3,2
  8919  12D2  2ADA               	goto	l3359
  8920  12D3  3000               	movlw	0
  8921  12D4  00F8               	movwf	?___ftdiv
  8922  12D5  3000               	movlw	0
  8923  12D6  00F9               	movwf	?___ftdiv+1
  8924  12D7  3000               	movlw	0
  8925  12D8  00FA               	movwf	?___ftdiv+2
  8926  12D9  0008               	return
  8927  12DA                     l3359:	
  8928  12DA  0878               	movf	___ftdiv@f2,w
  8929  12DB  00A0               	movwf	??___ftdiv
  8930  12DC  0879               	movf	___ftdiv@f2+1,w
  8931  12DD  00A1               	movwf	??___ftdiv+1
  8932  12DE  087A               	movf	___ftdiv@f2+2,w
  8933  12DF  00A2               	movwf	??___ftdiv+2
  8934  12E0  1003               	clrc
  8935  12E1  0D21               	rlf	??___ftdiv+1,w
  8936  12E2  0D22               	rlf	??___ftdiv+2,w
  8937  12E3  00A3               	movwf	??___ftdiv+3
  8938  12E4  0823               	movf	??___ftdiv+3,w
  8939  12E5  00A9               	movwf	___ftdiv@sign
  8940  12E6  0829               	movf	___ftdiv@sign,w
  8941  12E7  1D03               	btfss	3,2
  8942  12E8  2AF0               	goto	l3365
  8943  12E9  3000               	movlw	0
  8944  12EA  00F8               	movwf	?___ftdiv
  8945  12EB  3000               	movlw	0
  8946  12EC  00F9               	movwf	?___ftdiv+1
  8947  12ED  3000               	movlw	0
  8948  12EE  00FA               	movwf	?___ftdiv+2
  8949  12EF  0008               	return
  8950  12F0                     l3365:	
  8951  12F0  3000               	movlw	0
  8952  12F1  00A5               	movwf	___ftdiv@f3
  8953  12F2  3000               	movlw	0
  8954  12F3  00A6               	movwf	___ftdiv@f3+1
  8955  12F4  3000               	movlw	0
  8956  12F5  00A7               	movwf	___ftdiv@f3+2
  8957  12F6  3089               	movlw	137
  8958  12F7  0729               	addwf	___ftdiv@sign,w
  8959  12F8  00A0               	movwf	??___ftdiv
  8960  12F9  0820               	movf	??___ftdiv,w
  8961  12FA  02A8               	subwf	___ftdiv@exp,f
  8962  12FB  087B               	movf	___ftdiv@f1,w
  8963  12FC  00A0               	movwf	??___ftdiv
  8964  12FD  087C               	movf	___ftdiv@f1+1,w
  8965  12FE  00A1               	movwf	??___ftdiv+1
  8966  12FF  087D               	movf	___ftdiv@f1+2,w
  8967  1300  00A2               	movwf	??___ftdiv+2
  8968  1301  3010               	movlw	16
  8969  1302                     u4705:	
  8970  1302  36A2               	lsrf	??___ftdiv+2,f
  8971  1303  0CA1               	rrf	??___ftdiv+1,f
  8972  1304  0CA0               	rrf	??___ftdiv,f
  8973  1305  0B89               	decfsz	9,f
  8974  1306  2B02               	goto	u4705
  8975  1307  0820               	movf	??___ftdiv,w
  8976  1308  00A3               	movwf	??___ftdiv+3
  8977  1309  0823               	movf	??___ftdiv+3,w
  8978  130A  00A9               	movwf	___ftdiv@sign
  8979  130B  0878               	movf	___ftdiv@f2,w
  8980  130C  00A0               	movwf	??___ftdiv
  8981  130D  0879               	movf	___ftdiv@f2+1,w
  8982  130E  00A1               	movwf	??___ftdiv+1
  8983  130F  087A               	movf	___ftdiv@f2+2,w
  8984  1310  00A2               	movwf	??___ftdiv+2
  8985  1311  3010               	movlw	16
  8986  1312                     u4715:	
  8987  1312  36A2               	lsrf	??___ftdiv+2,f
  8988  1313  0CA1               	rrf	??___ftdiv+1,f
  8989  1314  0CA0               	rrf	??___ftdiv,f
  8990  1315  0B89               	decfsz	9,f
  8991  1316  2B12               	goto	u4715
  8992  1317  0820               	movf	??___ftdiv,w
  8993  1318  00A3               	movwf	??___ftdiv+3
  8994  1319  0823               	movf	??___ftdiv+3,w
  8995  131A  06A9               	xorwf	___ftdiv@sign,f
  8996  131B  3080               	movlw	128
  8997  131C  00A0               	movwf	??___ftdiv
  8998  131D  0820               	movf	??___ftdiv,w
  8999  131E  05A9               	andwf	___ftdiv@sign,f
  9000  131F  17FC               	bsf	___ftdiv@f1+1,7
  9001  1320  30FF               	movlw	255
  9002  1321  05FB               	andwf	___ftdiv@f1,f
  9003  1322  30FF               	movlw	255
  9004  1323  05FC               	andwf	___ftdiv@f1+1,f
  9005  1324  3000               	movlw	0
  9006  1325  05FD               	andwf	___ftdiv@f1+2,f
  9007  1326  17F9               	bsf	___ftdiv@f2+1,7
  9008  1327  30FF               	movlw	255
  9009  1328  05F8               	andwf	___ftdiv@f2,f
  9010  1329  30FF               	movlw	255
  9011  132A  05F9               	andwf	___ftdiv@f2+1,f
  9012  132B  3000               	movlw	0
  9013  132C  05FA               	andwf	___ftdiv@f2+2,f
  9014  132D  3018               	movlw	24
  9015  132E  00A0               	movwf	??___ftdiv
  9016  132F  0820               	movf	??___ftdiv,w
  9017  1330  00A4               	movwf	___ftdiv@cntr
  9018  1331                     l3379:	
  9019  1331  3001               	movlw	1
  9020  1332                     u4725:	
  9021  1332  35A5               	lslf	___ftdiv@f3,f
  9022  1333  0DA6               	rlf	___ftdiv@f3+1,f
  9023  1334  0DA7               	rlf	___ftdiv@f3+2,f
  9024  1335  0B89               	decfsz	9,f
  9025  1336  2B32               	goto	u4725
  9026  1337  087A               	movf	___ftdiv@f2+2,w
  9027  1338  027D               	subwf	___ftdiv@f1+2,w
  9028  1339  1D03               	skipz
  9029  133A  2B41               	goto	u4735
  9030  133B  0879               	movf	___ftdiv@f2+1,w
  9031  133C  027C               	subwf	___ftdiv@f1+1,w
  9032  133D  1D03               	skipz
  9033  133E  2B41               	goto	u4735
  9034  133F  0878               	movf	___ftdiv@f2,w
  9035  1340  027B               	subwf	___ftdiv@f1,w
  9036  1341                     u4735:	
  9037  1341  1C03               	skipc
  9038  1342  2B4A               	goto	l3387
  9039  1343  0878               	movf	___ftdiv@f2,w
  9040  1344  02FB               	subwf	___ftdiv@f1,f
  9041  1345  0879               	movf	___ftdiv@f2+1,w
  9042  1346  3BFC               	subwfb	___ftdiv@f1+1,f
  9043  1347  087A               	movf	___ftdiv@f2+2,w
  9044  1348  3BFD               	subwfb	___ftdiv@f1+2,f
  9045  1349  1425               	bsf	___ftdiv@f3,0
  9046  134A                     l3387:	
  9047  134A  3001               	movlw	1
  9048  134B                     u4745:	
  9049  134B  35FB               	lslf	___ftdiv@f1,f
  9050  134C  0DFC               	rlf	___ftdiv@f1+1,f
  9051  134D  0DFD               	rlf	___ftdiv@f1+2,f
  9052  134E  0B89               	decfsz	9,f
  9053  134F  2B4B               	goto	u4745
  9054  1350  3001               	movlw	1
  9055  1351  02A4               	subwf	___ftdiv@cntr,f
  9056  1352  1D03               	btfss	3,2
  9057  1353  2B31               	goto	l3379
  9058  1354  0825               	movf	___ftdiv@f3,w
  9059  1355  00F0               	movwf	___ftpack@arg
  9060  1356  0826               	movf	___ftdiv@f3+1,w
  9061  1357  00F1               	movwf	___ftpack@arg+1
  9062  1358  0827               	movf	___ftdiv@f3+2,w
  9063  1359  00F2               	movwf	___ftpack@arg+2
  9064  135A  0828               	movf	___ftdiv@exp,w
  9065  135B  00A0               	movwf	??___ftdiv
  9066  135C  0820               	movf	??___ftdiv,w
  9067  135D  00F3               	movwf	___ftpack@exp
  9068  135E  0829               	movf	___ftdiv@sign,w
  9069  135F  00A1               	movwf	??___ftdiv+1
  9070  1360  0821               	movf	??___ftdiv+1,w
  9071  1361  00F4               	movwf	___ftpack@sign
  9072  1362  3191  2145         	fcall	___ftpack
  9073  1364  0870               	movf	?___ftpack,w
  9074  1365  00F8               	movwf	?___ftdiv
  9075  1366  0871               	movf	?___ftpack+1,w
  9076  1367  00F9               	movwf	?___ftdiv+1
  9077  1368  0872               	movf	?___ftpack+2,w
  9078  1369  00FA               	movwf	?___ftdiv+2
  9079  136A  0008               	return
  9080  136B                     __end_of___ftdiv:	
  9081                           
  9082                           	psect	text22
  9083  1ECC                     __ptext22:	
  9084 ;; *************** function ___awtoft *****************
  9085 ;; Defined at:
  9086 ;;		line 32 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\awtoft.c"
  9087 ;; Parameters:    Size  Location     Type
  9088 ;;  c               2    8[COMMON] int 
  9089 ;; Auto vars:     Size  Location     Type
  9090 ;;  sign            1   13[COMMON] unsigned char 
  9091 ;; Return value:  Size  Location     Type
  9092 ;;                  3    8[COMMON] float 
  9093 ;; Registers used:
  9094 ;;		wreg, status,2, status,0, pclath, cstack
  9095 ;; Tracked objects:
  9096 ;;		On entry : 0/0
  9097 ;;		On exit  : 0/0
  9098 ;;		Unchanged: 0/0
  9099 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
  9100 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  9101 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  9102 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  9103 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  9104 ;;Total ram usage:        6 bytes
  9105 ;; Hardware stack levels used:    1
  9106 ;; Hardware stack levels required when called:    1
  9107 ;; This function calls:
  9108 ;;		___ftpack
  9109 ;; This function is called by:
  9110 ;;		_main
  9111 ;; This function uses a non-reentrant model
  9112 ;;
  9113                           
  9114                           
  9115                           ;psect for function ___awtoft
  9116  1ECC                     ___awtoft:	
  9117                           
  9118                           ;incstack = 0
  9119                           ; Regs used in ___awtoft: [wreg+status,2+status,0+pclath+cstack]
  9120  1ECC  01FD               	clrf	___awtoft@sign
  9121  1ECD  1FF9               	btfss	___awtoft@c+1,7
  9122  1ECE  2ED6               	goto	l3349
  9123  1ECF  09F8               	comf	___awtoft@c,f
  9124  1ED0  09F9               	comf	___awtoft@c+1,f
  9125  1ED1  0AF8               	incf	___awtoft@c,f
  9126  1ED2  1903               	skipnz
  9127  1ED3  0AF9               	incf	___awtoft@c+1,f
  9128  1ED4  01FD               	clrf	___awtoft@sign
  9129  1ED5  0AFD               	incf	___awtoft@sign,f
  9130  1ED6                     l3349:	
  9131  1ED6  0878               	movf	___awtoft@c,w
  9132  1ED7  00F0               	movwf	___ftpack@arg
  9133  1ED8  0879               	movf	___awtoft@c+1,w
  9134  1ED9  00F1               	movwf	___ftpack@arg+1
  9135  1EDA  01F2               	clrf	___ftpack@arg+2
  9136  1EDB  308E               	movlw	142
  9137  1EDC  00FB               	movwf	??___awtoft
  9138  1EDD  087B               	movf	??___awtoft,w
  9139  1EDE  00F3               	movwf	___ftpack@exp
  9140  1EDF  087D               	movf	___awtoft@sign,w
  9141  1EE0  00FC               	movwf	??___awtoft+1
  9142  1EE1  087C               	movf	??___awtoft+1,w
  9143  1EE2  00F4               	movwf	___ftpack@sign
  9144  1EE3  3191  2145         	fcall	___ftpack
  9145  1EE5  0870               	movf	?___ftpack,w
  9146  1EE6  00F8               	movwf	?___awtoft
  9147  1EE7  0871               	movf	?___ftpack+1,w
  9148  1EE8  00F9               	movwf	?___awtoft+1
  9149  1EE9  0872               	movf	?___ftpack+2,w
  9150  1EEA  00FA               	movwf	?___awtoft+2
  9151  1EEB  0008               	return
  9152  1EEC                     __end_of___awtoft:	
  9153                           
  9154                           	psect	text23
  9155  1145                     __ptext23:	
  9156 ;; *************** function ___ftpack *****************
  9157 ;; Defined at:
  9158 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\float.c"
  9159 ;; Parameters:    Size  Location     Type
  9160 ;;  arg             3    0[COMMON] unsigned um
  9161 ;;  exp             1    3[COMMON] unsigned char 
  9162 ;;  sign            1    4[COMMON] unsigned char 
  9163 ;; Auto vars:     Size  Location     Type
  9164 ;;		None
  9165 ;; Return value:  Size  Location     Type
  9166 ;;                  3    0[COMMON] float 
  9167 ;; Registers used:
  9168 ;;		wreg, status,2, status,0
  9169 ;; Tracked objects:
  9170 ;;		On entry : 0/0
  9171 ;;		On exit  : 0/0
  9172 ;;		Unchanged: 0/0
  9173 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
  9174 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  9175 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  9176 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  9177 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  9178 ;;Total ram usage:        8 bytes
  9179 ;; Hardware stack levels used:    1
  9180 ;; This function calls:
  9181 ;;		Nothing
  9182 ;; This function is called by:
  9183 ;;		___awtoft
  9184 ;;		___ftadd
  9185 ;;		___ftdiv
  9186 ;;		___ftmul
  9187 ;;		___lltoft
  9188 ;; This function uses a non-reentrant model
  9189 ;;
  9190                           
  9191                           
  9192                           ;psect for function ___ftpack
  9193  1145                     ___ftpack:	
  9194                           
  9195                           ;incstack = 0
  9196                           ; Regs used in ___ftpack: [wreg+status,2+status,0]
  9197  1145  0873               	movf	___ftpack@exp,w
  9198  1146  1903               	btfsc	3,2
  9199  1147  294D               	goto	l2363
  9200  1148  0872               	movf	___ftpack@arg+2,w
  9201  1149  0471               	iorwf	___ftpack@arg+1,w
  9202  114A  0470               	iorwf	___ftpack@arg,w
  9203  114B  1D03               	skipz
  9204  114C  295E               	goto	l2369
  9205  114D                     l2363:	
  9206  114D  3000               	movlw	0
  9207  114E  00F0               	movwf	?___ftpack
  9208  114F  3000               	movlw	0
  9209  1150  00F1               	movwf	?___ftpack+1
  9210  1151  3000               	movlw	0
  9211  1152  00F2               	movwf	?___ftpack+2
  9212  1153  0008               	return
  9213  1154                     l2367:	
  9214  1154  3001               	movlw	1
  9215  1155  00F5               	movwf	??___ftpack
  9216  1156  0875               	movf	??___ftpack,w
  9217  1157  07F3               	addwf	___ftpack@exp,f
  9218  1158  3001               	movlw	1
  9219  1159                     u2665:	
  9220  1159  36F2               	lsrf	___ftpack@arg+2,f
  9221  115A  0CF1               	rrf	___ftpack@arg+1,f
  9222  115B  0CF0               	rrf	___ftpack@arg,f
  9223  115C  0B89               	decfsz	9,f
  9224  115D  2959               	goto	u2665
  9225  115E                     l2369:	
  9226  115E  30FE               	movlw	254
  9227  115F  0572               	andwf	___ftpack@arg+2,w
  9228  1160  1903               	btfsc	3,2
  9229  1161  2977               	goto	l600
  9230  1162  2954               	goto	l2367
  9231  1163                     l2371:	
  9232  1163  3001               	movlw	1
  9233  1164  00F5               	movwf	??___ftpack
  9234  1165  0875               	movf	??___ftpack,w
  9235  1166  07F3               	addwf	___ftpack@exp,f
  9236  1167  3001               	movlw	1
  9237  1168  07F0               	addwf	___ftpack@arg,f
  9238  1169  3000               	movlw	0
  9239  116A  1803               	skipnc
  9240  116B  3001               	movlw	1
  9241  116C  07F1               	addwf	___ftpack@arg+1,f
  9242  116D  3000               	movlw	0
  9243  116E  1803               	skipnc
  9244  116F  3001               	movlw	1
  9245  1170  07F2               	addwf	___ftpack@arg+2,f
  9246  1171  3001               	movlw	1
  9247  1172                     u2685:	
  9248  1172  36F2               	lsrf	___ftpack@arg+2,f
  9249  1173  0CF1               	rrf	___ftpack@arg+1,f
  9250  1174  0CF0               	rrf	___ftpack@arg,f
  9251  1175  0B89               	decfsz	9,f
  9252  1176  2972               	goto	u2685
  9253  1177                     l600:	
  9254  1177  30FF               	movlw	255
  9255  1178  0572               	andwf	___ftpack@arg+2,w
  9256  1179  1903               	btfsc	3,2
  9257  117A  2984               	goto	l2379
  9258  117B  2963               	goto	l2371
  9259  117C                     l2377:	
  9260  117C  3001               	movlw	1
  9261  117D  02F3               	subwf	___ftpack@exp,f
  9262  117E  3001               	movlw	1
  9263  117F                     u2705:	
  9264  117F  35F0               	lslf	___ftpack@arg,f
  9265  1180  0DF1               	rlf	___ftpack@arg+1,f
  9266  1181  0DF2               	rlf	___ftpack@arg+2,f
  9267  1182  0B89               	decfsz	9,f
  9268  1183  297F               	goto	u2705
  9269  1184                     l2379:	
  9270  1184  1BF1               	btfsc	___ftpack@arg+1,7
  9271  1185  298A               	goto	l607
  9272  1186  3002               	movlw	2
  9273  1187  0273               	subwf	___ftpack@exp,w
  9274  1188  1803               	skipnc
  9275  1189  297C               	goto	l2377
  9276  118A                     l607:	
  9277  118A  1873               	btfsc	___ftpack@exp,0
  9278  118B  2992               	goto	l608
  9279  118C  30FF               	movlw	255
  9280  118D  05F0               	andwf	___ftpack@arg,f
  9281  118E  307F               	movlw	127
  9282  118F  05F1               	andwf	___ftpack@arg+1,f
  9283  1190  30FF               	movlw	255
  9284  1191  05F2               	andwf	___ftpack@arg+2,f
  9285  1192                     l608:	
  9286  1192  1003               	clrc
  9287  1193  0CF3               	rrf	___ftpack@exp,f
  9288  1194  0873               	movf	___ftpack@exp,w
  9289  1195  00F5               	movwf	??___ftpack
  9290  1196  01F6               	clrf	??___ftpack+1
  9291  1197  01F7               	clrf	??___ftpack+2
  9292  1198  3010               	movlw	16
  9293  1199                     u2745:	
  9294  1199  35F5               	lslf	??___ftpack,f
  9295  119A  0DF6               	rlf	??___ftpack+1,f
  9296  119B  0DF7               	rlf	??___ftpack+2,f
  9297  119C  0B89               	decfsz	9,f
  9298  119D  2999               	goto	u2745
  9299  119E  0875               	movf	??___ftpack,w
  9300  119F  04F0               	iorwf	___ftpack@arg,f
  9301  11A0  0876               	movf	??___ftpack+1,w
  9302  11A1  04F1               	iorwf	___ftpack@arg+1,f
  9303  11A2  0877               	movf	??___ftpack+2,w
  9304  11A3  04F2               	iorwf	___ftpack@arg+2,f
  9305  11A4  0874               	movf	___ftpack@sign,w
  9306  11A5  1903               	btfsc	3,2
  9307  11A6  0008               	return
  9308  11A7  17F2               	bsf	___ftpack@arg+2,7
  9309  11A8  0008               	return
  9310  11A9                     __end_of___ftpack:	
  9311                           
  9312                           	psect	text24
  9313  1F14                     __ptext24:	
  9314 ;; *************** function _Lcd_Out2 *****************
  9315 ;; Defined at:
  9316 ;;		line 115 in file "flex_lcd.h"
  9317 ;; Parameters:    Size  Location     Type
  9318 ;;  y               1    wreg     unsigned char 
  9319 ;;  x               1    3[COMMON] unsigned char 
  9320 ;;  buffer          1    4[COMMON] PTR unsigned char 
  9321 ;;		 -> main@buffer1(16), 
  9322 ;; Auto vars:     Size  Location     Type
  9323 ;;  y               1    6[COMMON] unsigned char 
  9324 ;;  data            1    7[COMMON] unsigned char 
  9325 ;; Return value:  Size  Location     Type
  9326 ;;                  1    wreg      void 
  9327 ;; Registers used:
  9328 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9329 ;; Tracked objects:
  9330 ;;		On entry : 0/0
  9331 ;;		On exit  : 0/0
  9332 ;;		Unchanged: 0/0
  9333 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
  9334 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  9335 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  9336 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  9337 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  9338 ;;Total ram usage:        5 bytes
  9339 ;; Hardware stack levels used:    1
  9340 ;; Hardware stack levels required when called:    1
  9341 ;; This function calls:
  9342 ;;		_Lcd_Chr_CP
  9343 ;;		_Lcd_Cmd
  9344 ;; This function is called by:
  9345 ;;		_main
  9346 ;; This function uses a non-reentrant model
  9347 ;;
  9348                           
  9349                           
  9350                           ;psect for function _Lcd_Out2
  9351  1F14                     _Lcd_Out2:	
  9352                           
  9353                           ;incstack = 0
  9354                           ; Regs used in _Lcd_Out2: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  9355                           ;Lcd_Out2@y stored from wreg
  9356  1F14  00F6               	movwf	Lcd_Out2@y
  9357                           
  9358                           ;flex_lcd.h: 117: unsigned char data;
  9359                           ;flex_lcd.h: 118: switch (y)
  9360  1F15  2F25               	goto	l3027
  9361  1F16                     l3017:	
  9362                           ;flex_lcd.h: 119: {
  9363                           ;flex_lcd.h: 120: case 1: data = 128 + x; break;
  9364                           
  9365  1F16  0873               	movf	Lcd_Out2@x,w
  9366  1F17  3E80               	addlw	128
  9367  1F18  2F21               	goto	L12
  9368  1F19                     l3019:	
  9369                           ;flex_lcd.h: 121: case 2: data = 192 + x; break;
  9370                           
  9371  1F19  0873               	movf	Lcd_Out2@x,w
  9372  1F1A  3EC0               	addlw	192
  9373  1F1B  2F21               	goto	L12
  9374  1F1C                     l3021:	
  9375                           ;flex_lcd.h: 122: case 3: data = 148 + x; break;
  9376                           
  9377  1F1C  0873               	movf	Lcd_Out2@x,w
  9378  1F1D  3E94               	addlw	148
  9379  1F1E  2F21               	goto	L12
  9380  1F1F                     l3023:	
  9381                           ;flex_lcd.h: 123: case 4: data = 212 + x; break;
  9382                           
  9383  1F1F  0873               	movf	Lcd_Out2@x,w
  9384  1F20  3ED4               	addlw	212
  9385  1F21                     L12:	
  9386  1F21  00F5               	movwf	??_Lcd_Out2
  9387  1F22  0875               	movf	??_Lcd_Out2,w
  9388  1F23  00F7               	movwf	Lcd_Out2@data
  9389                           
  9390                           ;flex_lcd.h: 125: }
  9391                           
  9392                           ;flex_lcd.h: 124: default: break;
  9393  1F24  2F33               	goto	l3029
  9394  1F25                     l3027:	
  9395  1F25  0876               	movf	Lcd_Out2@y,w
  9396                           
  9397                           ; Switch size 1, requested type "space"
  9398                           ; Number of cases is 4, Range of values is 1 to 4
  9399                           ; switch strategies available:
  9400                           ; Name         Instructions Cycles
  9401                           ; simple_byte           13     7 (average)
  9402                           ; direct_byte           17     9 (fixed)
  9403                           ; jumptable            263     9 (fixed)
  9404                           ;	Chosen strategy is simple_byte
  9405  1F26  3A01               	xorlw	1	; case 1
  9406  1F27  1903               	skipnz
  9407  1F28  2F16               	goto	l3017
  9408  1F29  3A03               	xorlw	3	; case 2
  9409  1F2A  1903               	skipnz
  9410  1F2B  2F19               	goto	l3019
  9411  1F2C  3A01               	xorlw	1	; case 3
  9412  1F2D  1903               	skipnz
  9413  1F2E  2F1C               	goto	l3021
  9414  1F2F  3A07               	xorlw	7	; case 4
  9415  1F30  1903               	skipnz
  9416  1F31  2F1F               	goto	l3023
  9417  1F32  2F33               	goto	l3029
  9418  1F33                     l3029:	
  9419                           
  9420                           ;flex_lcd.h: 126: Lcd_Cmd(data);
  9421  1F33  0877               	movf	Lcd_Out2@data,w
  9422  1F34  3192  2230  319F   	fcall	_Lcd_Cmd
  9423  1F37                     l3035:	
  9424                           ;flex_lcd.h: 127: while(*buffer)
  9425                           
  9426  1F37  0874               	movf	Lcd_Out2@buffer,w
  9427  1F38  0086               	movwf	6
  9428  1F39  0187               	clrf	7
  9429  1F3A  0801               	movf	1,w
  9430  1F3B  1903               	btfsc	3,2
  9431  1F3C  0008               	return
  9432                           
  9433                           ;flex_lcd.h: 128: {
  9434                           ;flex_lcd.h: 129: Lcd_Chr_CP(*buffer);
  9435  1F3D  0874               	movf	Lcd_Out2@buffer,w
  9436  1F3E  0086               	movwf	6
  9437  1F3F  0187               	clrf	7
  9438  1F40  0801               	movf	1,w
  9439  1F41  3188  200B  319F   	fcall	_Lcd_Chr_CP
  9440                           
  9441                           ;flex_lcd.h: 130: buffer++;
  9442  1F44  3001               	movlw	1
  9443  1F45  00F5               	movwf	??_Lcd_Out2
  9444  1F46  0875               	movf	??_Lcd_Out2,w
  9445  1F47  07F4               	addwf	Lcd_Out2@buffer,f
  9446  1F48  2F37               	goto	l3035
  9447  1F49                     __end_of_Lcd_Out2:	
  9448                           ;flex_lcd.h: 131: }
  9449                           ;flex_lcd.h: 132: return;
  9450                           
  9451                           
  9452                           	psect	text25
  9453  080B                     __ptext25:	
  9454 ;; *************** function _Lcd_Chr_CP *****************
  9455 ;; Defined at:
  9456 ;;		line 136 in file "flex_lcd.h"
  9457 ;; Parameters:    Size  Location     Type
  9458 ;;  data            1    wreg     unsigned char 
  9459 ;; Auto vars:     Size  Location     Type
  9460 ;;  data            1    2[COMMON] unsigned char 
  9461 ;; Return value:  Size  Location     Type
  9462 ;;                  1    wreg      void 
  9463 ;; Registers used:
  9464 ;;		wreg, status,2, status,0
  9465 ;; Tracked objects:
  9466 ;;		On entry : 0/0
  9467 ;;		On exit  : 0/0
  9468 ;;		Unchanged: 0/0
  9469 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
  9470 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  9471 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  9472 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  9473 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  9474 ;;Total ram usage:        3 bytes
  9475 ;; Hardware stack levels used:    1
  9476 ;; This function calls:
  9477 ;;		Nothing
  9478 ;; This function is called by:
  9479 ;;		_Lcd_Out2
  9480 ;;		_Lcd_Out
  9481 ;; This function uses a non-reentrant model
  9482 ;;
  9483                           
  9484                           
  9485                           ;psect for function _Lcd_Chr_CP
  9486  080B                     _Lcd_Chr_CP:	
  9487                           
  9488                           ;incstack = 0
  9489                           ; Regs used in _Lcd_Chr_CP: [wreg+status,2+status,0]
  9490                           ;Lcd_Chr_CP@data stored from wreg
  9491  080B  00F2               	movwf	Lcd_Chr_CP@data
  9492                           
  9493                           ;flex_lcd.h: 137: PORTDbits.RD3 = 0; PORTDbits.RD2 = 1;
  9494  080C  0140               	movlb	0	; select bank0
  9495  080D  118F               	bcf	15,3	;volatile
  9496  080E  150F               	bsf	15,2	;volatile
  9497                           
  9498                           ;flex_lcd.h: 138: PORTCbits.RC3 = (data & 0b10000000)>>7; PORTDbits.RD0 = (data & 0b0100
      +                          0000)>>6;
  9499  080F  0872               	movf	Lcd_Chr_CP@data,w
  9500  0810  00F0               	movwf	??_Lcd_Chr_CP
  9501  0811  3007               	movlw	7
  9502  0812                     u3405:	
  9503  0812  36F0               	lsrf	??_Lcd_Chr_CP,f
  9504  0813  0B89               	decfsz	9,f
  9505  0814  2812               	goto	u3405
  9506  0815  0870               	movf	??_Lcd_Chr_CP,w
  9507  0816  3901               	andlw	1
  9508  0817  00F1               	movwf	??_Lcd_Chr_CP+1
  9509  0818  0DF1               	rlf	??_Lcd_Chr_CP+1,f
  9510  0819  0DF1               	rlf	??_Lcd_Chr_CP+1,f
  9511  081A  0DF1               	rlf	??_Lcd_Chr_CP+1,f
  9512  081B  080E               	movf	14,w	;volatile
  9513  081C  0671               	xorwf	??_Lcd_Chr_CP+1,w
  9514  081D  39F7               	andlw	-9
  9515  081E  0671               	xorwf	??_Lcd_Chr_CP+1,w
  9516  081F  008E               	movwf	14	;volatile
  9517  0820  0872               	movf	Lcd_Chr_CP@data,w
  9518  0821  00F0               	movwf	??_Lcd_Chr_CP
  9519  0822  3006               	movlw	6
  9520  0823                     u3415:	
  9521  0823  36F0               	lsrf	??_Lcd_Chr_CP,f
  9522  0824  0B89               	decfsz	9,f
  9523  0825  2823               	goto	u3415
  9524  0826  3001               	movlw	1
  9525  0827  0570               	andwf	??_Lcd_Chr_CP,w
  9526  0828  00F1               	movwf	??_Lcd_Chr_CP+1
  9527  0829  080F               	movf	15,w	;volatile
  9528  082A  0671               	xorwf	??_Lcd_Chr_CP+1,w
  9529  082B  39FE               	andlw	-2
  9530  082C  0671               	xorwf	??_Lcd_Chr_CP+1,w
  9531  082D  008F               	movwf	15	;volatile
  9532                           
  9533                           ;flex_lcd.h: 139: PORTDbits.RD1 = (data & 0b00100000)>>5; PORTCbits.RC4 = (data & 0b0001
      +                          0000)>>4;
  9534  082E  0872               	movf	Lcd_Chr_CP@data,w
  9535  082F  00F0               	movwf	??_Lcd_Chr_CP
  9536  0830  3005               	movlw	5
  9537  0831                     u3425:	
  9538  0831  36F0               	lsrf	??_Lcd_Chr_CP,f
  9539  0832  0B89               	decfsz	9,f
  9540  0833  2831               	goto	u3425
  9541  0834  0870               	movf	??_Lcd_Chr_CP,w
  9542  0835  3901               	andlw	1
  9543  0836  00F1               	movwf	??_Lcd_Chr_CP+1
  9544  0837  0DF1               	rlf	??_Lcd_Chr_CP+1,f
  9545  0838  080F               	movf	15,w	;volatile
  9546  0839  0671               	xorwf	??_Lcd_Chr_CP+1,w
  9547  083A  39FD               	andlw	-3
  9548  083B  0671               	xorwf	??_Lcd_Chr_CP+1,w
  9549  083C  008F               	movwf	15	;volatile
  9550  083D  0872               	movf	Lcd_Chr_CP@data,w
  9551  083E  00F0               	movwf	??_Lcd_Chr_CP
  9552  083F  3004               	movlw	4
  9553  0840                     u3435:	
  9554  0840  36F0               	lsrf	??_Lcd_Chr_CP,f
  9555  0841  0B89               	decfsz	9,f
  9556  0842  2840               	goto	u3435
  9557  0843  0870               	movf	??_Lcd_Chr_CP,w
  9558  0844  3901               	andlw	1
  9559  0845  00F1               	movwf	??_Lcd_Chr_CP+1
  9560  0846  0EF1               	swapf	??_Lcd_Chr_CP+1,f
  9561  0847  080E               	movf	14,w	;volatile
  9562  0848  0671               	xorwf	??_Lcd_Chr_CP+1,w
  9563  0849  39EF               	andlw	-17
  9564  084A  0671               	xorwf	??_Lcd_Chr_CP+1,w
  9565  084B  008E               	movwf	14	;volatile
  9566                           
  9567                           ;flex_lcd.h: 140: _delay(10);
  9568  084C  3003               	movlw	3
  9569  084D                     u5537:	
  9570  084D  0B89               	decfsz	9,f
  9571  084E  284D               	goto	u5537
  9572  084F  0000               	nop
  9573                           
  9574                           ;flex_lcd.h: 141: PORTDbits.RD3 = 1; _delay((unsigned long)((5)*(32000000/4000000.0))); 
      +                          PORTDbits.RD3 = 0;
  9575  0850  0140               	movlb	0	; select bank0
  9576  0851  158F               	bsf	15,3	;volatile
  9577  0852  300D               	movlw	13
  9578  0853                     u5547:	
  9579  0853  0B89               	decfsz	9,f
  9580  0854  2853               	goto	u5547
  9581  0855  0000               	nop
  9582  0856  0140               	movlb	0	; select bank0
  9583  0857  118F               	bcf	15,3	;volatile
  9584                           
  9585                           ;flex_lcd.h: 142: PORTCbits.RC3 = (data & 0b00001000)>>3; PORTDbits.RD0 = (data & 0b0000
      +                          0100)>>2;
  9586  0858  0872               	movf	Lcd_Chr_CP@data,w
  9587  0859  00F0               	movwf	??_Lcd_Chr_CP
  9588  085A  3003               	movlw	3
  9589  085B                     u3445:	
  9590  085B  36F0               	lsrf	??_Lcd_Chr_CP,f
  9591  085C  0B89               	decfsz	9,f
  9592  085D  285B               	goto	u3445
  9593  085E  0870               	movf	??_Lcd_Chr_CP,w
  9594  085F  3901               	andlw	1
  9595  0860  00F1               	movwf	??_Lcd_Chr_CP+1
  9596  0861  0DF1               	rlf	??_Lcd_Chr_CP+1,f
  9597  0862  0DF1               	rlf	??_Lcd_Chr_CP+1,f
  9598  0863  0DF1               	rlf	??_Lcd_Chr_CP+1,f
  9599  0864  080E               	movf	14,w	;volatile
  9600  0865  0671               	xorwf	??_Lcd_Chr_CP+1,w
  9601  0866  39F7               	andlw	-9
  9602  0867  0671               	xorwf	??_Lcd_Chr_CP+1,w
  9603  0868  008E               	movwf	14	;volatile
  9604  0869  0872               	movf	Lcd_Chr_CP@data,w
  9605  086A  00F0               	movwf	??_Lcd_Chr_CP
  9606  086B  3002               	movlw	2
  9607  086C                     u3455:	
  9608  086C  36F0               	lsrf	??_Lcd_Chr_CP,f
  9609  086D  0B89               	decfsz	9,f
  9610  086E  286C               	goto	u3455
  9611  086F  3001               	movlw	1
  9612  0870  0570               	andwf	??_Lcd_Chr_CP,w
  9613  0871  00F1               	movwf	??_Lcd_Chr_CP+1
  9614  0872  080F               	movf	15,w	;volatile
  9615  0873  0671               	xorwf	??_Lcd_Chr_CP+1,w
  9616  0874  39FE               	andlw	-2
  9617  0875  0671               	xorwf	??_Lcd_Chr_CP+1,w
  9618  0876  008F               	movwf	15	;volatile
  9619                           
  9620                           ;flex_lcd.h: 143: PORTDbits.RD1 = (data & 0b00000010)>>1; PORTCbits.RC4 = (data & 0b0000
      +                          0001);
  9621  0877  3672               	lsrf	Lcd_Chr_CP@data,w
  9622  0878  3901               	andlw	1
  9623  0879  00F0               	movwf	??_Lcd_Chr_CP
  9624  087A  0DF0               	rlf	??_Lcd_Chr_CP,f
  9625  087B  080F               	movf	15,w	;volatile
  9626  087C  0670               	xorwf	??_Lcd_Chr_CP,w
  9627  087D  39FD               	andlw	-3
  9628  087E  0670               	xorwf	??_Lcd_Chr_CP,w
  9629  087F  008F               	movwf	15	;volatile
  9630  0880  0872               	movf	Lcd_Chr_CP@data,w
  9631  0881  3901               	andlw	1
  9632  0882  00F0               	movwf	??_Lcd_Chr_CP
  9633  0883  0EF0               	swapf	??_Lcd_Chr_CP,f
  9634  0884  080E               	movf	14,w	;volatile
  9635  0885  0670               	xorwf	??_Lcd_Chr_CP,w
  9636  0886  39EF               	andlw	-17
  9637  0887  0670               	xorwf	??_Lcd_Chr_CP,w
  9638  0888  008E               	movwf	14	;volatile
  9639                           
  9640                           ;flex_lcd.h: 144: _delay(10);
  9641  0889  3003               	movlw	3
  9642  088A                     u5557:	
  9643  088A  0B89               	decfsz	9,f
  9644  088B  288A               	goto	u5557
  9645  088C  0000               	nop
  9646                           
  9647                           ;flex_lcd.h: 145: PORTDbits.RD3 = 1; _delay((unsigned long)((5)*(32000000/4000000.0))); 
      +                          PORTDbits.RD3 = 0;
  9648  088D  0140               	movlb	0	; select bank0
  9649  088E  158F               	bsf	15,3	;volatile
  9650  088F  300D               	movlw	13
  9651  0890                     u5567:	
  9652  0890  0B89               	decfsz	9,f
  9653  0891  2890               	goto	u5567
  9654  0892  0000               	nop
  9655  0893  0140               	movlb	0	; select bank0
  9656  0894  118F               	bcf	15,3	;volatile
  9657                           
  9658                           ;flex_lcd.h: 146: _delay((unsigned long)((5)*(32000000/4000000.0))); _delay((unsigned lo
      +                          ng)((5500)*(32000000/4000000.0)));
  9659  0895  300D               	movlw	13
  9660  0896                     u5577:	
  9661  0896  0B89               	decfsz	9,f
  9662  0897  2896               	goto	u5577
  9663  0898  0000               	nop
  9664  0899  303A               	movlw	58
  9665  089A  00F0               	movwf	??_Lcd_Chr_CP
  9666  089B  3023               	movlw	35
  9667  089C                     u5587:	
  9668  089C  0B89               	decfsz	9,f
  9669  089D  289C               	goto	u5587
  9670  089E  0BF0               	decfsz	??_Lcd_Chr_CP,f
  9671  089F  289C               	goto	u5587
  9672  08A0  0000               	nop
  9673  08A1  0008               	return
  9674  08A2                     __end_of_Lcd_Chr_CP:	
  9675                           
  9676                           	psect	text26
  9677  136B                     __ptext26:	
  9678 ;; *************** function _Lcd_Init *****************
  9679 ;; Defined at:
  9680 ;;		line 52 in file "flex_lcd.h"
  9681 ;; Parameters:    Size  Location     Type
  9682 ;;		None
  9683 ;; Auto vars:     Size  Location     Type
  9684 ;;  data            1    4[COMMON] unsigned char 
  9685 ;; Return value:  Size  Location     Type
  9686 ;;                  1    wreg      void 
  9687 ;; Registers used:
  9688 ;;		wreg, status,2, status,0, pclath, cstack
  9689 ;; Tracked objects:
  9690 ;;		On entry : 0/0
  9691 ;;		On exit  : 0/0
  9692 ;;		Unchanged: 0/0
  9693 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
  9694 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  9695 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  9696 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  9697 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  9698 ;;Total ram usage:        2 bytes
  9699 ;; Hardware stack levels used:    1
  9700 ;; Hardware stack levels required when called:    1
  9701 ;; This function calls:
  9702 ;;		_Lcd_Cmd
  9703 ;; This function is called by:
  9704 ;;		_main
  9705 ;; This function uses a non-reentrant model
  9706 ;;
  9707                           
  9708                           
  9709                           ;psect for function _Lcd_Init
  9710  136B                     _Lcd_Init:	
  9711                           
  9712                           ;flex_lcd.h: 53: unsigned char data;
  9713                           ;flex_lcd.h: 54: TRISCbits.TRISC3 = 0;
  9714                           
  9715                           ;incstack = 0
  9716                           ; Regs used in _Lcd_Init: [wreg+status,2+status,0+pclath+cstack]
  9717  136B  0140               	movlb	0	; select bank0
  9718  136C  1193               	bcf	19,3	;volatile
  9719                           
  9720                           ;flex_lcd.h: 55: TRISDbits.TRISD0 = 0;
  9721  136D  1014               	bcf	20,0	;volatile
  9722                           
  9723                           ;flex_lcd.h: 56: TRISDbits.TRISD1 = 0;
  9724  136E  1094               	bcf	20,1	;volatile
  9725                           
  9726                           ;flex_lcd.h: 57: TRISCbits.TRISC4 = 0;
  9727  136F  1213               	bcf	19,4	;volatile
  9728                           
  9729                           ;flex_lcd.h: 58: TRISDbits.TRISD3 = 0;
  9730  1370  1194               	bcf	20,3	;volatile
  9731                           
  9732                           ;flex_lcd.h: 59: TRISDbits.TRISD2 = 0;
  9733  1371  1114               	bcf	20,2	;volatile
  9734                           
  9735                           ;flex_lcd.h: 60: PORTCbits.RC3 = 0;
  9736  1372  118E               	bcf	14,3	;volatile
  9737                           
  9738                           ;flex_lcd.h: 61: PORTDbits.RD0 = 0;
  9739  1373  100F               	bcf	15,0	;volatile
  9740                           
  9741                           ;flex_lcd.h: 62: PORTDbits.RD1 = 0;
  9742  1374  108F               	bcf	15,1	;volatile
  9743                           
  9744                           ;flex_lcd.h: 63: PORTCbits.RC4 = 0;
  9745  1375  120E               	bcf	14,4	;volatile
  9746                           
  9747                           ;flex_lcd.h: 64: PORTDbits.RD3 = 0;
  9748  1376  118F               	bcf	15,3	;volatile
  9749                           
  9750                           ;flex_lcd.h: 65: PORTDbits.RD2 = 0;
  9751  1377  110F               	bcf	15,2	;volatile
  9752                           
  9753                           ;flex_lcd.h: 66: _delay((unsigned long)((5500)*(32000000/4000000.0)));
  9754  1378  303A               	movlw	58
  9755  1379  00F3               	movwf	??_Lcd_Init
  9756  137A  3023               	movlw	35
  9757  137B                     u5597:	
  9758  137B  0B89               	decfsz	9,f
  9759  137C  2B7B               	goto	u5597
  9760  137D  0BF3               	decfsz	??_Lcd_Init,f
  9761  137E  2B7B               	goto	u5597
  9762  137F  0000               	nop
  9763                           
  9764                           ;flex_lcd.h: 67: _delay((unsigned long)((5500)*(32000000/4000000.0)));
  9765  1380  303A               	movlw	58
  9766  1381  00F3               	movwf	??_Lcd_Init
  9767  1382  3023               	movlw	35
  9768  1383                     u5607:	
  9769  1383  0B89               	decfsz	9,f
  9770  1384  2B83               	goto	u5607
  9771  1385  0BF3               	decfsz	??_Lcd_Init,f
  9772  1386  2B83               	goto	u5607
  9773  1387  0000               	nop
  9774                           
  9775                           ;flex_lcd.h: 68: _delay((unsigned long)((5500)*(32000000/4000000.0)));
  9776  1388  303A               	movlw	58
  9777  1389  00F3               	movwf	??_Lcd_Init
  9778  138A  3023               	movlw	35
  9779  138B                     u5617:	
  9780  138B  0B89               	decfsz	9,f
  9781  138C  2B8B               	goto	u5617
  9782  138D  0BF3               	decfsz	??_Lcd_Init,f
  9783  138E  2B8B               	goto	u5617
  9784  138F  0000               	nop
  9785                           
  9786                           ;flex_lcd.h: 69: _delay((unsigned long)((5500)*(32000000/4000000.0)));
  9787  1390  303A               	movlw	58
  9788  1391  00F3               	movwf	??_Lcd_Init
  9789  1392  3023               	movlw	35
  9790  1393                     u5627:	
  9791  1393  0B89               	decfsz	9,f
  9792  1394  2B93               	goto	u5627
  9793  1395  0BF3               	decfsz	??_Lcd_Init,f
  9794  1396  2B93               	goto	u5627
  9795  1397  0000               	nop
  9796                           
  9797                           ;flex_lcd.h: 70: _delay((unsigned long)((5500)*(32000000/4000000.0)));
  9798  1398  303A               	movlw	58
  9799  1399  00F3               	movwf	??_Lcd_Init
  9800  139A  3023               	movlw	35
  9801  139B                     u5637:	
  9802  139B  0B89               	decfsz	9,f
  9803  139C  2B9B               	goto	u5637
  9804  139D  0BF3               	decfsz	??_Lcd_Init,f
  9805  139E  2B9B               	goto	u5637
  9806  139F  0000               	nop
  9807                           
  9808                           ;flex_lcd.h: 71: _delay((unsigned long)((5500)*(32000000/4000000.0)));
  9809  13A0  303A               	movlw	58
  9810  13A1  00F3               	movwf	??_Lcd_Init
  9811  13A2  3023               	movlw	35
  9812  13A3                     u5647:	
  9813  13A3  0B89               	decfsz	9,f
  9814  13A4  2BA3               	goto	u5647
  9815  13A5  0BF3               	decfsz	??_Lcd_Init,f
  9816  13A6  2BA3               	goto	u5647
  9817  13A7  0000               	nop
  9818                           
  9819                           ;flex_lcd.h: 72: for(data = 1; data < 4; data ++)
  9820  13A8  01F4               	clrf	Lcd_Init@data
  9821  13A9  0AF4               	incf	Lcd_Init@data,f
  9822  13AA  3004               	movlw	4
  9823  13AB  0274               	subwf	Lcd_Init@data,w
  9824  13AC  1803               	btfsc	3,0
  9825  13AD  2BD6               	goto	l50
  9826  13AE                     l49:	
  9827                           
  9828                           ;flex_lcd.h: 73: {
  9829                           ;flex_lcd.h: 74: PORTCbits.RC3 = 0; PORTDbits.RD0 = 0; PORTDbits.RD1 = 1; PORTCbits.RC4 
      +                          = 1; PORTDbits.RD3 = 0;
  9830  13AE  0140               	movlb	0	; select bank0
  9831  13AF  118E               	bcf	14,3	;volatile
  9832  13B0  100F               	bcf	15,0	;volatile
  9833  13B1  148F               	bsf	15,1	;volatile
  9834  13B2  160E               	bsf	14,4	;volatile
  9835  13B3  118F               	bcf	15,3	;volatile
  9836                           
  9837                           ;flex_lcd.h: 75: PORTDbits.RD2 = 0; PORTCbits.RC3 = 0; PORTDbits.RD0 = 0; PORTDbits.RD1 
      +                          = 1; PORTCbits.RC4 = 1;
  9838  13B4  110F               	bcf	15,2	;volatile
  9839  13B5  118E               	bcf	14,3	;volatile
  9840  13B6  100F               	bcf	15,0	;volatile
  9841  13B7  148F               	bsf	15,1	;volatile
  9842  13B8  160E               	bsf	14,4	;volatile
  9843                           
  9844                           ;flex_lcd.h: 76: PORTDbits.RD3 = 1; PORTDbits.RD2 = 0;
  9845  13B9  158F               	bsf	15,3	;volatile
  9846  13BA  110F               	bcf	15,2	;volatile
  9847                           
  9848                           ;flex_lcd.h: 77: _delay((unsigned long)((5)*(32000000/4000000.0)));
  9849  13BB  300D               	movlw	13
  9850  13BC                     u5657:	
  9851  13BC  0B89               	decfsz	9,f
  9852  13BD  2BBC               	goto	u5657
  9853  13BE  0000               	nop
  9854                           
  9855                           ;flex_lcd.h: 78: PORTCbits.RC3 = 0; PORTDbits.RD0 = 0; PORTDbits.RD1 = 1; PORTCbits.RC4 
      +                          = 1; PORTDbits.RD3 = 0;
  9856  13BF  0140               	movlb	0	; select bank0
  9857  13C0  118E               	bcf	14,3	;volatile
  9858  13C1  100F               	bcf	15,0	;volatile
  9859  13C2  148F               	bsf	15,1	;volatile
  9860  13C3  160E               	bsf	14,4	;volatile
  9861  13C4  118F               	bcf	15,3	;volatile
  9862                           
  9863                           ;flex_lcd.h: 79: PORTDbits.RD2 = 0;
  9864  13C5  110F               	bcf	15,2	;volatile
  9865                           
  9866                           ;flex_lcd.h: 80: _delay((unsigned long)((5500)*(32000000/4000000.0)));
  9867  13C6  303A               	movlw	58
  9868  13C7  00F3               	movwf	??_Lcd_Init
  9869  13C8  3023               	movlw	35
  9870  13C9                     u5667:	
  9871  13C9  0B89               	decfsz	9,f
  9872  13CA  2BC9               	goto	u5667
  9873  13CB  0BF3               	decfsz	??_Lcd_Init,f
  9874  13CC  2BC9               	goto	u5667
  9875  13CD  0000               	nop
  9876  13CE  3001               	movlw	1
  9877  13CF  00F3               	movwf	??_Lcd_Init
  9878  13D0  0873               	movf	??_Lcd_Init,w
  9879  13D1  07F4               	addwf	Lcd_Init@data,f
  9880  13D2  3004               	movlw	4
  9881  13D3  0274               	subwf	Lcd_Init@data,w
  9882  13D4  1C03               	skipc
  9883  13D5  2BAE               	goto	l49
  9884  13D6                     l50:	
  9885                           
  9886                           ;flex_lcd.h: 81: }
  9887                           ;flex_lcd.h: 82: PORTCbits.RC3 = 0; PORTDbits.RD0 = 0; PORTDbits.RD1 = 1; PORTCbits.RC4 
      +                          = 0; PORTDbits.RD3 = 0; PORTDbits.RD2 = 0;
  9888  13D6  0140               	movlb	0	; select bank0
  9889  13D7  118E               	bcf	14,3	;volatile
  9890  13D8  100F               	bcf	15,0	;volatile
  9891  13D9  148F               	bsf	15,1	;volatile
  9892  13DA  120E               	bcf	14,4	;volatile
  9893  13DB  118F               	bcf	15,3	;volatile
  9894  13DC  110F               	bcf	15,2	;volatile
  9895                           
  9896                           ;flex_lcd.h: 83: PORTCbits.RC3 = 0; PORTDbits.RD0 = 0; PORTDbits.RD1 = 1; PORTCbits.RC4 
      +                          = 0; PORTDbits.RD3 = 1; PORTDbits.RD2 = 0;
  9897  13DD  118E               	bcf	14,3	;volatile
  9898  13DE  100F               	bcf	15,0	;volatile
  9899  13DF  148F               	bsf	15,1	;volatile
  9900  13E0  120E               	bcf	14,4	;volatile
  9901  13E1  158F               	bsf	15,3	;volatile
  9902  13E2  110F               	bcf	15,2	;volatile
  9903                           
  9904                           ;flex_lcd.h: 84: _delay((unsigned long)((5)*(32000000/4000000.0)));
  9905  13E3  300D               	movlw	13
  9906  13E4                     u5677:	
  9907  13E4  0B89               	decfsz	9,f
  9908  13E5  2BE4               	goto	u5677
  9909  13E6  0000               	nop
  9910                           
  9911                           ;flex_lcd.h: 85: PORTCbits.RC3 = 0; PORTDbits.RD0 = 0; PORTDbits.RD1 = 1; PORTCbits.RC4 
      +                          = 0; PORTDbits.RD3 = 0; PORTDbits.RD2 = 0;
  9912  13E7  0140               	movlb	0	; select bank0
  9913  13E8  118E               	bcf	14,3	;volatile
  9914  13E9  100F               	bcf	15,0	;volatile
  9915  13EA  148F               	bsf	15,1	;volatile
  9916  13EB  120E               	bcf	14,4	;volatile
  9917  13EC  118F               	bcf	15,3	;volatile
  9918  13ED  110F               	bcf	15,2	;volatile
  9919                           
  9920                           ;flex_lcd.h: 86: _delay((unsigned long)((5500)*(32000000/4000000.0)));
  9921  13EE  303A               	movlw	58
  9922  13EF  00F3               	movwf	??_Lcd_Init
  9923  13F0  3023               	movlw	35
  9924  13F1                     u5687:	
  9925  13F1  0B89               	decfsz	9,f
  9926  13F2  2BF1               	goto	u5687
  9927  13F3  0BF3               	decfsz	??_Lcd_Init,f
  9928  13F4  2BF1               	goto	u5687
  9929  13F5  0000               	nop
  9930                           
  9931                           ;flex_lcd.h: 87: data = 40; Lcd_Cmd(data);
  9932  13F6  3028               	movlw	40
  9933  13F7  00F3               	movwf	??_Lcd_Init
  9934  13F8  0873               	movf	??_Lcd_Init,w
  9935  13F9  00F4               	movwf	Lcd_Init@data
  9936  13FA  0874               	movf	Lcd_Init@data,w
  9937  13FB  3192  2230  3193   	fcall	_Lcd_Cmd
  9938                           
  9939                           ;flex_lcd.h: 88: data = 16; Lcd_Cmd(data);
  9940  13FE  3010               	movlw	16
  9941  13FF  00F3               	movwf	??_Lcd_Init
  9942  1400  0873               	movf	??_Lcd_Init,w
  9943  1401  00F4               	movwf	Lcd_Init@data
  9944  1402  0874               	movf	Lcd_Init@data,w
  9945  1403  3192  2230  3193   	fcall	_Lcd_Cmd
  9946                           
  9947                           ;flex_lcd.h: 89: data = 1; Lcd_Cmd(data);
  9948  1406  01F4               	clrf	Lcd_Init@data
  9949  1407  0AF4               	incf	Lcd_Init@data,f
  9950  1408  0874               	movf	Lcd_Init@data,w
  9951  1409  3192  2230  3193   	fcall	_Lcd_Cmd
  9952                           
  9953                           ;flex_lcd.h: 90: data = 15; Lcd_Cmd(data);
  9954  140C  300F               	movlw	15
  9955  140D  00F3               	movwf	??_Lcd_Init
  9956  140E  0873               	movf	??_Lcd_Init,w
  9957  140F  00F4               	movwf	Lcd_Init@data
  9958  1410  0874               	movf	Lcd_Init@data,w
  9959  1411  3192  2230         	fcall	_Lcd_Cmd
  9960  1413  0008               	return
  9961  1414                     __end_of_Lcd_Init:	
  9962                           
  9963                           	psect	text27
  9964  1230                     __ptext27:	
  9965 ;; *************** function _Lcd_Cmd *****************
  9966 ;; Defined at:
  9967 ;;		line 150 in file "flex_lcd.h"
  9968 ;; Parameters:    Size  Location     Type
  9969 ;;  data            1    wreg     unsigned char 
  9970 ;; Auto vars:     Size  Location     Type
  9971 ;;  data            1    2[COMMON] unsigned char 
  9972 ;; Return value:  Size  Location     Type
  9973 ;;                  1    wreg      void 
  9974 ;; Registers used:
  9975 ;;		wreg, status,2, status,0
  9976 ;; Tracked objects:
  9977 ;;		On entry : 0/0
  9978 ;;		On exit  : 0/0
  9979 ;;		Unchanged: 0/0
  9980 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
  9981 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  9982 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  9983 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  9984 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  9985 ;;Total ram usage:        3 bytes
  9986 ;; Hardware stack levels used:    1
  9987 ;; This function calls:
  9988 ;;		Nothing
  9989 ;; This function is called by:
  9990 ;;		_Lcd_Init
  9991 ;;		_Lcd_Out2
  9992 ;;		_main
  9993 ;;		_Lcd_Out
  9994 ;; This function uses a non-reentrant model
  9995 ;;
  9996                           
  9997                           
  9998                           ;psect for function _Lcd_Cmd
  9999  1230                     _Lcd_Cmd:	
 10000                           
 10001                           ;incstack = 0
 10002                           ; Regs used in _Lcd_Cmd: [wreg+status,2+status,0]
 10003                           ;Lcd_Cmd@data stored from wreg
 10004  1230  00F2               	movwf	Lcd_Cmd@data
 10005                           
 10006                           ;flex_lcd.h: 151: PORTDbits.RD3 = 0; PORTDbits.RD2 = 0;
 10007  1231  0140               	movlb	0	; select bank0
 10008  1232  118F               	bcf	15,3	;volatile
 10009  1233  110F               	bcf	15,2	;volatile
 10010                           
 10011                           ;flex_lcd.h: 152: PORTCbits.RC3 = (data & 0b10000000)>>7; PORTDbits.RD0 = (data & 0b0100
      +                          0000)>>6;
 10012  1234  0872               	movf	Lcd_Cmd@data,w
 10013  1235  00F0               	movwf	??_Lcd_Cmd
 10014  1236  3007               	movlw	7
 10015  1237                     u3345:	
 10016  1237  36F0               	lsrf	??_Lcd_Cmd,f
 10017  1238  0B89               	decfsz	9,f
 10018  1239  2A37               	goto	u3345
 10019  123A  0870               	movf	??_Lcd_Cmd,w
 10020  123B  3901               	andlw	1
 10021  123C  00F1               	movwf	??_Lcd_Cmd+1
 10022  123D  0DF1               	rlf	??_Lcd_Cmd+1,f
 10023  123E  0DF1               	rlf	??_Lcd_Cmd+1,f
 10024  123F  0DF1               	rlf	??_Lcd_Cmd+1,f
 10025  1240  080E               	movf	14,w	;volatile
 10026  1241  0671               	xorwf	??_Lcd_Cmd+1,w
 10027  1242  39F7               	andlw	-9
 10028  1243  0671               	xorwf	??_Lcd_Cmd+1,w
 10029  1244  008E               	movwf	14	;volatile
 10030  1245  0872               	movf	Lcd_Cmd@data,w
 10031  1246  00F0               	movwf	??_Lcd_Cmd
 10032  1247  3006               	movlw	6
 10033  1248                     u3355:	
 10034  1248  36F0               	lsrf	??_Lcd_Cmd,f
 10035  1249  0B89               	decfsz	9,f
 10036  124A  2A48               	goto	u3355
 10037  124B  3001               	movlw	1
 10038  124C  0570               	andwf	??_Lcd_Cmd,w
 10039  124D  00F1               	movwf	??_Lcd_Cmd+1
 10040  124E  080F               	movf	15,w	;volatile
 10041  124F  0671               	xorwf	??_Lcd_Cmd+1,w
 10042  1250  39FE               	andlw	-2
 10043  1251  0671               	xorwf	??_Lcd_Cmd+1,w
 10044  1252  008F               	movwf	15	;volatile
 10045                           
 10046                           ;flex_lcd.h: 153: PORTDbits.RD1 = (data & 0b00100000)>>5; PORTCbits.RC4 = (data & 0b0001
      +                          0000)>>4;
 10047  1253  0872               	movf	Lcd_Cmd@data,w
 10048  1254  00F0               	movwf	??_Lcd_Cmd
 10049  1255  3005               	movlw	5
 10050  1256                     u3365:	
 10051  1256  36F0               	lsrf	??_Lcd_Cmd,f
 10052  1257  0B89               	decfsz	9,f
 10053  1258  2A56               	goto	u3365
 10054  1259  0870               	movf	??_Lcd_Cmd,w
 10055  125A  3901               	andlw	1
 10056  125B  00F1               	movwf	??_Lcd_Cmd+1
 10057  125C  0DF1               	rlf	??_Lcd_Cmd+1,f
 10058  125D  080F               	movf	15,w	;volatile
 10059  125E  0671               	xorwf	??_Lcd_Cmd+1,w
 10060  125F  39FD               	andlw	-3
 10061  1260  0671               	xorwf	??_Lcd_Cmd+1,w
 10062  1261  008F               	movwf	15	;volatile
 10063  1262  0872               	movf	Lcd_Cmd@data,w
 10064  1263  00F0               	movwf	??_Lcd_Cmd
 10065  1264  3004               	movlw	4
 10066  1265                     u3375:	
 10067  1265  36F0               	lsrf	??_Lcd_Cmd,f
 10068  1266  0B89               	decfsz	9,f
 10069  1267  2A65               	goto	u3375
 10070  1268  0870               	movf	??_Lcd_Cmd,w
 10071  1269  3901               	andlw	1
 10072  126A  00F1               	movwf	??_Lcd_Cmd+1
 10073  126B  0EF1               	swapf	??_Lcd_Cmd+1,f
 10074  126C  080E               	movf	14,w	;volatile
 10075  126D  0671               	xorwf	??_Lcd_Cmd+1,w
 10076  126E  39EF               	andlw	-17
 10077  126F  0671               	xorwf	??_Lcd_Cmd+1,w
 10078  1270  008E               	movwf	14	;volatile
 10079                           
 10080                           ;flex_lcd.h: 154: _delay(10);
 10081  1271  3003               	movlw	3
 10082  1272                     u5697:	
 10083  1272  0B89               	decfsz	9,f
 10084  1273  2A72               	goto	u5697
 10085  1274  0000               	nop
 10086                           
 10087                           ;flex_lcd.h: 155: PORTDbits.RD3 = 1; _delay((unsigned long)((5)*(32000000/4000000.0))); 
      +                          PORTDbits.RD3 = 0;
 10088  1275  0140               	movlb	0	; select bank0
 10089  1276  158F               	bsf	15,3	;volatile
 10090  1277  300D               	movlw	13
 10091  1278                     u5707:	
 10092  1278  0B89               	decfsz	9,f
 10093  1279  2A78               	goto	u5707
 10094  127A  0000               	nop
 10095  127B  0140               	movlb	0	; select bank0
 10096  127C  118F               	bcf	15,3	;volatile
 10097                           
 10098                           ;flex_lcd.h: 156: PORTCbits.RC3 = (data & 0b00001000)>>3; PORTDbits.RD0 = (data & 0b0000
      +                          0100)>>2;
 10099  127D  0872               	movf	Lcd_Cmd@data,w
 10100  127E  00F0               	movwf	??_Lcd_Cmd
 10101  127F  3003               	movlw	3
 10102  1280                     u3385:	
 10103  1280  36F0               	lsrf	??_Lcd_Cmd,f
 10104  1281  0B89               	decfsz	9,f
 10105  1282  2A80               	goto	u3385
 10106  1283  0870               	movf	??_Lcd_Cmd,w
 10107  1284  3901               	andlw	1
 10108  1285  00F1               	movwf	??_Lcd_Cmd+1
 10109  1286  0DF1               	rlf	??_Lcd_Cmd+1,f
 10110  1287  0DF1               	rlf	??_Lcd_Cmd+1,f
 10111  1288  0DF1               	rlf	??_Lcd_Cmd+1,f
 10112  1289  080E               	movf	14,w	;volatile
 10113  128A  0671               	xorwf	??_Lcd_Cmd+1,w
 10114  128B  39F7               	andlw	-9
 10115  128C  0671               	xorwf	??_Lcd_Cmd+1,w
 10116  128D  008E               	movwf	14	;volatile
 10117  128E  0872               	movf	Lcd_Cmd@data,w
 10118  128F  00F0               	movwf	??_Lcd_Cmd
 10119  1290  3002               	movlw	2
 10120  1291                     u3395:	
 10121  1291  36F0               	lsrf	??_Lcd_Cmd,f
 10122  1292  0B89               	decfsz	9,f
 10123  1293  2A91               	goto	u3395
 10124  1294  3001               	movlw	1
 10125  1295  0570               	andwf	??_Lcd_Cmd,w
 10126  1296  00F1               	movwf	??_Lcd_Cmd+1
 10127  1297  080F               	movf	15,w	;volatile
 10128  1298  0671               	xorwf	??_Lcd_Cmd+1,w
 10129  1299  39FE               	andlw	-2
 10130  129A  0671               	xorwf	??_Lcd_Cmd+1,w
 10131  129B  008F               	movwf	15	;volatile
 10132                           
 10133                           ;flex_lcd.h: 157: PORTDbits.RD1 = (data & 0b00000010)>>1; PORTCbits.RC4 = (data & 0b0000
      +                          0001);
 10134  129C  3672               	lsrf	Lcd_Cmd@data,w
 10135  129D  3901               	andlw	1
 10136  129E  00F0               	movwf	??_Lcd_Cmd
 10137  129F  0DF0               	rlf	??_Lcd_Cmd,f
 10138  12A0  080F               	movf	15,w	;volatile
 10139  12A1  0670               	xorwf	??_Lcd_Cmd,w
 10140  12A2  39FD               	andlw	-3
 10141  12A3  0670               	xorwf	??_Lcd_Cmd,w
 10142  12A4  008F               	movwf	15	;volatile
 10143  12A5  0872               	movf	Lcd_Cmd@data,w
 10144  12A6  3901               	andlw	1
 10145  12A7  00F0               	movwf	??_Lcd_Cmd
 10146  12A8  0EF0               	swapf	??_Lcd_Cmd,f
 10147  12A9  080E               	movf	14,w	;volatile
 10148  12AA  0670               	xorwf	??_Lcd_Cmd,w
 10149  12AB  39EF               	andlw	-17
 10150  12AC  0670               	xorwf	??_Lcd_Cmd,w
 10151  12AD  008E               	movwf	14	;volatile
 10152                           
 10153                           ;flex_lcd.h: 158: _delay(10);
 10154  12AE  3003               	movlw	3
 10155  12AF                     u5717:	
 10156  12AF  0B89               	decfsz	9,f
 10157  12B0  2AAF               	goto	u5717
 10158  12B1  0000               	nop
 10159                           
 10160                           ;flex_lcd.h: 159: PORTDbits.RD3 = 1; _delay((unsigned long)((5)*(32000000/4000000.0))); 
      +                          PORTDbits.RD3 = 0;
 10161  12B2  0140               	movlb	0	; select bank0
 10162  12B3  158F               	bsf	15,3	;volatile
 10163  12B4  300D               	movlw	13
 10164  12B5                     u5727:	
 10165  12B5  0B89               	decfsz	9,f
 10166  12B6  2AB5               	goto	u5727
 10167  12B7  0000               	nop
 10168  12B8  0140               	movlb	0	; select bank0
 10169  12B9  118F               	bcf	15,3	;volatile
 10170                           
 10171                           ;flex_lcd.h: 160: _delay((unsigned long)((5500)*(32000000/4000000.0)));
 10172  12BA  303A               	movlw	58
 10173  12BB  00F0               	movwf	??_Lcd_Cmd
 10174  12BC  3023               	movlw	35
 10175  12BD                     u5737:	
 10176  12BD  0B89               	decfsz	9,f
 10177  12BE  2ABD               	goto	u5737
 10178  12BF  0BF0               	decfsz	??_Lcd_Cmd,f
 10179  12C0  2ABD               	goto	u5737
 10180  12C1  0000               	nop
 10181  12C2  0008               	return
 10182  12C3                     __end_of_Lcd_Cmd:	
 10183  007E                     btemp	set	126	;btemp
 10184  007E                     wtemp0	set	126


Data Sizes:
    Strings     57
    Constant    118
    Data        4
    BSS         20
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     74      80
    BANK1            80     41      59
    BANK2            80      0       0
    BANK3            80      0       0
    BANK4            80      0       0
    BANK5            80      0       0
    BANK6            80      0       0
    BANK7            80      0       0
    BANK8            80      0       0
    BANK9            80      0       0
    BANK10           80      0       0
    BANK11           80      0       0
    BANK12           80      0       0
    BANK13           80      0       0
    BANK14           80      0       0
    BANK15           80      0       0
    BANK16           80      0       0
    BANK17           80      0       0
    BANK18           80      0       0
    BANK19           80      0       0
    BANK20           80      0       0
    BANK21           80      0       0
    BANK22           80      0       0
    BANK23           80      0       0
    BANK24           80      0       0
    BANK25           80      0       0
    BANK26           80      0       0
    BANK27           80      0       0
    BANK28           80      0       0
    BANK29           80      0       0
    BANK30           80      0       0
    BANK31           80      0       0
    BANK32           80      0       0
    BANK33           80      0       0
    BANK34           80      0       0
    BANK35           80      0       0
    BANK36           80      0       0
    BANK37           80      0       0
    BANK38           80      0       0
    BANK39           80      0       0
    BANK40           80      0       0
    BANK41           80      0       0
    BANK42           80      0       0
    BANK43           80      0       0
    BANK44           80      0       0
    BANK45           80      0       0
    BANK46           80      0       0
    BANK47           80      0       0
    BANK48           80      0       0
    BANK49           80      0       0
    BANK50           80      0       0

Pointer List with Targets:

    sprintf@f	PTR const unsigned char  size(2) Largest target is 12
		 -> STR_8(CODE[11]), STR_7(CODE[11]), STR_6(CODE[11]), STR_5(CODE[11]), 
		 -> STR_4(CODE[12]), STR_3(CODE[12]), STR_2(CODE[12]), STR_1(CODE[12]), 

    sprintf@sp	PTR unsigned char  size(1) Largest target is 16
		 -> main@buffer1(BANK1[16]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    Lcd_Out2@buffer	PTR unsigned char  size(1) Largest target is 16
		 -> main@buffer1(BANK1[16]), 


Critical Paths under _main in COMMON

    _main->___awtoft
    _main->___ftdiv
    _main->___wmul
    _sprintf->___ftdiv
    _sprintf->___lldiv
    _sprintf->___lltoft
    _sprintf->___wmul
    _sprintf->__div_to_l_
    _scale->___wmul
    _fround->___wmul
    ___ftmul->___wmul
    ___awdiv->___awmod
    ___lltoft->___ftpack
    ___llmod->___lldiv
    ___ftsub->___lltoft
    _n2->___wmul
    _n1->___wmul
    ___wmul->___awdiv
    ___ftdiv->___ftpack
    ___awtoft->___ftpack
    _Lcd_Out2->_Lcd_Chr_CP
    _Lcd_Out2->_Lcd_Cmd
    _Lcd_Init->_Lcd_Cmd

Critical Paths under _main in BANK0

    _main->_sprintf
    _sprintf->___ftsub
    _scale->___ftmul
    _fround->___ftmul
    ___ftmul->___wmul
    ___fttol->_scale
    ___ftsub->___ftadd
    ___ftadd->_fround
    _n2->___wmul
    _n1->___wmul
    ___wmul->___awdiv

Critical Paths under _main in BANK1

    _main->_sprintf

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _main in BANK16

    None.

Critical Paths under _main in BANK17

    None.

Critical Paths under _main in BANK18

    None.

Critical Paths under _main in BANK19

    None.

Critical Paths under _main in BANK20

    None.

Critical Paths under _main in BANK21

    None.

Critical Paths under _main in BANK22

    None.

Critical Paths under _main in BANK23

    None.

Critical Paths under _main in BANK24

    None.

Critical Paths under _main in BANK25

    None.

Critical Paths under _main in BANK26

    None.

Critical Paths under _main in BANK27

    None.

Critical Paths under _main in BANK28

    None.

Critical Paths under _main in BANK29

    None.

Critical Paths under _main in BANK30

    None.

Critical Paths under _main in BANK31

    None.

Critical Paths under _main in BANK32

    None.

Critical Paths under _main in BANK33

    None.

Critical Paths under _main in BANK34

    None.

Critical Paths under _main in BANK35

    None.

Critical Paths under _main in BANK36

    None.

Critical Paths under _main in BANK37

    None.

Critical Paths under _main in BANK38

    None.

Critical Paths under _main in BANK39

    None.

Critical Paths under _main in BANK40

    None.

Critical Paths under _main in BANK41

    None.

Critical Paths under _main in BANK42

    None.

Critical Paths under _main in BANK43

    None.

Critical Paths under _main in BANK44

    None.

Critical Paths under _main in BANK45

    None.

Critical Paths under _main in BANK46

    None.

Critical Paths under _main in BANK47

    None.

Critical Paths under _main in BANK48

    None.

Critical Paths under _main in BANK49

    None.

Critical Paths under _main in BANK50

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                22    18      4   66540
                                             68 BANK0      6     2      4
                                             25 BANK1     16    16      0
                            _Lcd_Cmd
                           _Lcd_Init
                           _Lcd_Out2
                           ___awtoft
                            ___ftdiv
                             ___wmul
                                 _n1
                                 _n2
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             41    36      5   46562
                                             57 BANK0     11     6      5
                                              0 BANK1     25    25      0
                            ___awdiv
                            ___ftadd
                            ___ftdiv (ARG)
                             ___ftge
                            ___ftmul
                            ___ftneg
                            ___ftsub
                            ___fttol
                            ___lldiv
                            ___llmod
                           ___lltoft
                             ___wmul
                         __div_to_l_
                        __tdiv_to_l_
                             _fround
                            _isdigit
                              _scale
 ---------------------------------------------------------------------------------
 (2) _scale                                                9     6      3   10990
                                             24 BANK0      9     6      3
                            ___awdiv
                            ___awmod
                            ___ftmul
                             ___wmul
 ---------------------------------------------------------------------------------
 (2) _isdigit                                              2     2      0      68
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (2) _fround                                              14    11      3   10792
                                             24 BANK0     14    11      3
                            ___awdiv
                            ___awmod
                            ___ftmul
                             ___wmul
 ---------------------------------------------------------------------------------
 (3) ___ftmul                                             16    10      6    4227
                                              8 BANK0     16    10      6
                            ___awdiv (ARG)
                            ___awmod (ARG)
                           ___ftpack
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (3) ___awmod                                              7     3      4    1448
                                              0 COMMON     7     3      4
 ---------------------------------------------------------------------------------
 (3) ___awdiv                                              9     5      4    1580
                                              7 COMMON     5     1      4
                                              0 BANK0      4     4      0
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (2) __tdiv_to_l_                                         16    10      6     431
                                              0 COMMON    10     4      6
                                              0 BANK0      6     6      0
 ---------------------------------------------------------------------------------
 (2) __div_to_l_                                          20    14      6     574
                                              0 COMMON    14     8      6
                                              0 BANK0      6     6      0
 ---------------------------------------------------------------------------------
 (2) ___lltoft                                             6     2      4    2242
                                              8 COMMON     6     2      4
                           ___ftpack
 ---------------------------------------------------------------------------------
 (2) ___llmod                                             10     2      8     671
                                              0 BANK0     10     2      8
                            ___lldiv (ARG)
 ---------------------------------------------------------------------------------
 (2) ___lldiv                                             14     6      8     546
                                              0 COMMON    14     6      8
 ---------------------------------------------------------------------------------
 (2) ___fttol                                             14    10      4     444
                                             33 BANK0     14    10      4
                            ___ftmul (ARG)
                              _scale (ARG)
 ---------------------------------------------------------------------------------
 (2) ___ftsub                                              6     0      6    3400
                                             51 BANK0      6     0      6
                            ___ftadd
                           ___lltoft (ARG)
 ---------------------------------------------------------------------------------
 (3) ___ftadd                                             13     7      6    3205
                                             38 BANK0     13     7      6
                           ___ftpack
                             _fround (ARG)
 ---------------------------------------------------------------------------------
 (2) ___ftneg                                              3     0      3     109
                                              0 COMMON     3     0      3
 ---------------------------------------------------------------------------------
 (2) ___ftge                                               9     3      6     648
                                              0 COMMON     9     3      6
 ---------------------------------------------------------------------------------
 (1) _n2                                                   4     0      4    4704
                                              8 BANK0      4     0      4
                             ___wmul
 ---------------------------------------------------------------------------------
 (1) _n1                                                   4     0      4    4704
                                              8 BANK0      4     0      4
                             ___wmul
 ---------------------------------------------------------------------------------
 (3) ___wmul                                               6     2      4    3292
                                             12 COMMON     2     2      0
                                              4 BANK0      4     0      4
                            ___awdiv (ARG)
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (1) ___ftdiv                                             16    10      6    2517
                                              8 COMMON     6     0      6
                                              0 BANK0     10    10      0
                           ___ftpack
 ---------------------------------------------------------------------------------
 (1) ___awtoft                                             6     3      3    2328
                                              8 COMMON     6     3      3
                           ___ftpack
 ---------------------------------------------------------------------------------
 (4) ___ftpack                                             8     3      5    2109
                                              0 COMMON     8     3      5
 ---------------------------------------------------------------------------------
 (1) _Lcd_Out2                                             5     3      2    1557
                                              3 COMMON     5     3      2
                         _Lcd_Chr_CP
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (2) _Lcd_Chr_CP                                           3     3      0     176
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (1) _Lcd_Init                                             2     2      0     314
                                              3 COMMON     2     2      0
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (2) _Lcd_Cmd                                              3     3      0     176
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Lcd_Cmd
   _Lcd_Init
     _Lcd_Cmd
   _Lcd_Out2
     _Lcd_Chr_CP
     _Lcd_Cmd
   ___awtoft
     ___ftpack
   ___ftdiv
     ___ftpack
   ___wmul
     ___awdiv (ARG)
       ___awmod (ARG)
     ___awmod (ARG)
   _n1
     ___wmul
       ___awdiv (ARG)
         ___awmod (ARG)
       ___awmod (ARG)
   _n2
     ___wmul
       ___awdiv (ARG)
         ___awmod (ARG)
       ___awmod (ARG)
   _sprintf
     ___awdiv
       ___awmod (ARG)
     ___ftadd
       ___ftpack
       _fround (ARG)
         ___awdiv
           ___awmod (ARG)
         ___awmod
         ___ftmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___ftpack (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         ___wmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
     ___ftdiv (ARG)
       ___ftpack
     ___ftge (ARG)
     ___ftmul (ARG)
       ___awdiv (ARG)
         ___awmod (ARG)
       ___awmod (ARG)
       ___ftpack (ARG)
       ___wmul (ARG)
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
     ___ftneg (ARG)
     ___ftsub (ARG)
       ___ftadd
         ___ftpack
         _fround (ARG)
           ___awdiv
             ___awmod (ARG)
           ___awmod
           ___ftmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___wmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
       ___lltoft (ARG)
         ___ftpack
     ___fttol (ARG)
       ___ftmul (ARG)
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___ftpack (ARG)
         ___wmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
       _scale (ARG)
         ___awdiv
           ___awmod (ARG)
         ___awmod
         ___ftmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___ftpack (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         ___wmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
     ___lldiv (ARG)
     ___llmod (ARG)
       ___lldiv (ARG)
     ___lltoft (ARG)
       ___ftpack
     ___wmul (ARG)
       ___awdiv (ARG)
         ___awmod (ARG)
       ___awmod (ARG)
     __div_to_l_ (ARG)
     __tdiv_to_l_ (ARG)
     _fround (ARG)
       ___awdiv
         ___awmod (ARG)
       ___awmod
       ___ftmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___ftpack (ARG)
         ___wmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
       ___wmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
     _isdigit (ARG)
     _scale (ARG)
       ___awdiv
         ___awmod (ARG)
       ___awmod
       ___ftmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___ftpack (ARG)
         ___wmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
       ___wmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             FF0      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      E       E       2      100.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     4A      50       5      100.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BANK1               50     29      3B       7       73.8%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BITBANK2            50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BANK2               50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BITBANK3            50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BANK3               50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITBANK4            50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BANK4               50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITBANK5            50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BANK5               50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITBANK6            50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BANK6               50      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITBANK7            50      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BANK7               50      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITBANK8            50      0       0      20        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BANK8               50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BITBANK9            50      0       0      22        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BANK9               50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BITBANK10           50      0       0      24        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BANK10              50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BITBANK11           50      0       0      26        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BANK11              50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
ABS                  0      0      99      28        0.0%
BITBANK12           50      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BANK12              50      0       0      30        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITBANK13           50      0       0      31        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BANK13              50      0       0      32        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%
BITBANK14           50      0       0      33        0.0%
BITSFR32             0      0       0      33        0.0%
SFR32                0      0       0      33        0.0%
BANK14              50      0       0      34        0.0%
BITSFR33             0      0       0      34        0.0%
SFR33                0      0       0      34        0.0%
BITBANK15           50      0       0      35        0.0%
BITSFR34             0      0       0      35        0.0%
SFR34                0      0       0      35        0.0%
BANK15              50      0       0      36        0.0%
BITSFR35             0      0       0      36        0.0%
SFR35                0      0       0      36        0.0%
BITBANK16           50      0       0      37        0.0%
BITSFR36             0      0       0      37        0.0%
SFR36                0      0       0      37        0.0%
BANK16              50      0       0      38        0.0%
BITSFR37             0      0       0      38        0.0%
SFR37                0      0       0      38        0.0%
BITBANK17           50      0       0      39        0.0%
BITSFR38             0      0       0      39        0.0%
SFR38                0      0       0      39        0.0%
BANK17              50      0       0      40        0.0%
BITSFR39             0      0       0      40        0.0%
SFR39                0      0       0      40        0.0%
BITBANK18           50      0       0      41        0.0%
BITSFR40             0      0       0      41        0.0%
SFR40                0      0       0      41        0.0%
BANK18              50      0       0      42        0.0%
BITSFR41             0      0       0      42        0.0%
SFR41                0      0       0      42        0.0%
BITBANK19           50      0       0      43        0.0%
BITSFR42             0      0       0      43        0.0%
SFR42                0      0       0      43        0.0%
BANK19              50      0       0      44        0.0%
BITSFR43             0      0       0      44        0.0%
SFR43                0      0       0      44        0.0%
BITBANK20           50      0       0      45        0.0%
BITSFR44             0      0       0      45        0.0%
SFR44                0      0       0      45        0.0%
BANK20              50      0       0      46        0.0%
BITSFR45             0      0       0      46        0.0%
SFR45                0      0       0      46        0.0%
BITBANK21           50      0       0      47        0.0%
BITSFR46             0      0       0      47        0.0%
SFR46                0      0       0      47        0.0%
BANK21              50      0       0      48        0.0%
BITSFR47             0      0       0      48        0.0%
SFR47                0      0       0      48        0.0%
BITBANK22           50      0       0      49        0.0%
BITSFR48             0      0       0      49        0.0%
SFR48                0      0       0      49        0.0%
BANK22              50      0       0      50        0.0%
BITSFR49             0      0       0      50        0.0%
SFR49                0      0       0      50        0.0%
BITBANK23           50      0       0      51        0.0%
BITSFR50             0      0       0      51        0.0%
SFR50                0      0       0      51        0.0%
BANK23              50      0       0      52        0.0%
BITSFR51             0      0       0      52        0.0%
SFR51                0      0       0      52        0.0%
BITBANK24           50      0       0      53        0.0%
BITSFR52             0      0       0      53        0.0%
SFR52                0      0       0      53        0.0%
BANK24              50      0       0      54        0.0%
BITSFR53             0      0       0      54        0.0%
SFR53                0      0       0      54        0.0%
BITBANK25           50      0       0      55        0.0%
BITSFR54             0      0       0      55        0.0%
SFR54                0      0       0      55        0.0%
BANK25              50      0       0      56        0.0%
BITSFR55             0      0       0      56        0.0%
SFR55                0      0       0      56        0.0%
BITBANK26           50      0       0      57        0.0%
BITSFR56             0      0       0      57        0.0%
SFR56                0      0       0      57        0.0%
BANK26              50      0       0      58        0.0%
BITSFR57             0      0       0      58        0.0%
SFR57                0      0       0      58        0.0%
BITSFR58             0      0       0      59        0.0%
SFR58                0      0       0      59        0.0%
DATA                 0      0      99      59        0.0%
BITBANK27           50      0       0      60        0.0%
BITSFR59             0      0       0      60        0.0%
SFR59                0      0       0      60        0.0%
BANK27              50      0       0      61        0.0%
BITSFR60             0      0       0      61        0.0%
SFR60                0      0       0      61        0.0%
BITBANK28           50      0       0      62        0.0%
BITSFR61             0      0       0      62        0.0%
SFR61                0      0       0      62        0.0%
BANK28              50      0       0      63        0.0%
BITSFR62             0      0       0      63        0.0%
SFR62                0      0       0      63        0.0%
BITBANK29           50      0       0      64        0.0%
BITSFR63             0      0       0      64        0.0%
SFR63                0      0       0      64        0.0%
BANK29              50      0       0      65        0.0%
BITBANK30           50      0       0      66        0.0%
BANK30              50      0       0      67        0.0%
BITBANK31           50      0       0      68        0.0%
BANK31              50      0       0      69        0.0%
BITBANK32           50      0       0      70        0.0%
BANK32              50      0       0      71        0.0%
BITBANK33           50      0       0      72        0.0%
BANK33              50      0       0      73        0.0%
BITBANK34           50      0       0      74        0.0%
BANK34              50      0       0      75        0.0%
BITBANK35           50      0       0      76        0.0%
BANK35              50      0       0      77        0.0%
BITBANK36           50      0       0      78        0.0%
BANK36              50      0       0      79        0.0%
BITBANK37           50      0       0      80        0.0%
BANK37              50      0       0      81        0.0%
BITBANK38           50      0       0      82        0.0%
BANK38              50      0       0      83        0.0%
BITBANK39           50      0       0      84        0.0%
BANK39              50      0       0      85        0.0%
BITBANK40           50      0       0      86        0.0%
BANK40              50      0       0      87        0.0%
BITBANK41           50      0       0      88        0.0%
BANK41              50      0       0      89        0.0%
BITBANK42           50      0       0      90        0.0%
BANK42              50      0       0      91        0.0%
BITBANK43           50      0       0      92        0.0%
BANK43              50      0       0      93        0.0%
BITBANK44           50      0       0      94        0.0%
BANK44              50      0       0      95        0.0%
BITBANK45           50      0       0      96        0.0%
BANK45              50      0       0      97        0.0%
BITBANK46           50      0       0      98        0.0%
BANK46              50      0       0      99        0.0%
BITBANK47           50      0       0     100        0.0%
BANK47              50      0       0     101        0.0%
BITBANK48           50      0       0     102        0.0%
BANK48              50      0       0     103        0.0%
BITBANK49           50      0       0     104        0.0%
BANK49              50      0       0     105        0.0%
BITBANK50           50      0       0     106        0.0%
BANK50              50      0       0     107        0.0%


Microchip Technology PIC Macro Assembler V1.45 build -152302408 
Symbol Table                                                                                   Thu Sep 27 11:29:22 2018

                      _d 00CC                        _o 00D3              __CFG_CP$OFF 0000  
                     l50 13D6                       l49 13AE                       _d2 00C9  
                     _n1 1F49                       _n2 1055             ___awdiv@sign 0021  
    ___wmul@multiplicand 0026             ___ftadd@exp1 0052             ___ftadd@exp2 0051  
            __CFG_LVP$ON 0000                      ?_n1 0028                      ?_n2 0028  
           ___ftadd@sign 0050                      l114 1064                      l108 1F55  
                    l126 0B16                      l323 06EE                      l139 0FFE  
                    l164 0E17                      l165 0CED                      l422 1E9B  
                    l600 1177                      l256 013C                      l273 02BA  
                    l266 0195                      l607 118A                      l631 00B0  
                    l608 1192                      l708 1216                      l657 14F9  
                    l667 1572                      l588 168F             __CFG_CPD$OFF 0000  
                    _aux 00CF             ___awmod@sign 0076             __CFG_BORV$LO 0000  
                    wreg 0009              _sprintf$945 00A0                     ??_n1 007E  
                   ??_n2 007E             __CFG_ZCD$OFF 0000              main@buffer1 00B9  
           ___ftdiv@cntr 0024             ___ftdiv@sign 0029                     l3021 1F1C  
                   l3023 1F1F                     l3103 01FA                     l3017 1F16  
                   l3201 0487                     l3035 1F37                     l3019 1F19  
                   l3027 1F25                     l3043 1F6C                     l3029 1F33  
                   l3053 1083                     l2413 10FE                     l3141 0326  
                   l3133 02EF                     l2503 004F                     l2431 111D  
                   l3303 0734                     l3311 074D                     l3231 0545  
                   l3127 02A3                     l3119 0256                     l3071 0143  
                   l2521 007C                     l2441 1138                     l3313 0751  
                   l3225 0528                     l3217 04B1                     l3145 033A  
                   l3073 014D                     l3065 0137                     l2371 1163  
                   l2363 114D                     l2523 0086                     l2515 0069  
                   l2419 1109                     l3219 0515                     l3171 03F9  
                   l3155 036E                     l2533 00A2                     l2525 008B  
                   l2445 1140                     l2437 112F                     l2429 1111  
                   l2461 1021                     l3333 0789                     l3325 0783  
                   l3261 066A                     l3165 03C2                     l3077 015A  
                   l2367 1154                     l2543 00D4                     l2535 00AC  
                   l2527 008F                     l2471 1033                     l2711 0AC9  
                   l3319 0768                     l3255 0657                     l3239 056B  
                   l3175 0422                     l3159 03BC                     l3263 066F  
                   l3087 0197                     l3335 010F                     l2377 117C  
                   l2369 115E                     l2393 1E94                     l2553 00EF  
                   l2801 1604                     l2457 101A                     l2705 0A6A  
                   l3273 069B                     l3193 0452                     l3089 01B3  
                   l3337 07DE                     l3601 0CB5                     l3505 0BB1  
                   l2379 1184                     l2539 00C2                     l2483 1050  
                   l2475 103F                     l2563 142B                     l2723 100E  
                   l3195 0474                     l3179 0434                     l3523 0BE2  
                   l3349 1ED6                     l3365 12F0                     l2493 0039  
                   l2901 120D                     l2821 1679                     l2733 14E1  
                   l2469 1027                     l2581 147C                     l3293 0714  
                   l3285 06D8                     l3541 0C0B                     l3517 0BD0  
                   l3359 12DA                     l2903 1219                     l2479 1048  
                   l2671 17D3                     l2663 175B                     l3295 0717  
                   l3279 06A1                     l3631 0D21                     l3607 0CC1  
                   l3463 0B4A                     l3615 0CE7                     l2841 1FAE  
                   l2497 0040                     l2809 164C                     l2593 1498  
                   l2585 1484                     l2569 1441                     l3625 0D0F  
                   l3553 0C27                     l3529 0BF4                     l3457 0B38  
                   l3561 0C4D                     l3387 134A                     l3379 1331  
                   l2907 1227                     l2931 10EA                     l2827 1686  
                   l2819 166B                     l2755 1534                     l2747 151A  
                   l3571 0C75                     l3547 0C1D                     l3475 0B65  
                   l2837 1F98                     l2917 10B1                     l2941 1FC6  
                   l2829 1692                     l2773 1569                     l2765 154E  
                   l2597 14A0                     l2693 09AA                     l3805 0F4B  
                   l3653 0D64                     l3637 0D33                     l3493 0B96  
                   l3469 0B5C                     l2927 10DF                     l2919 10BF  
                   l2943 1FD4                     l2951 1FF7                     l2791 15B9  
                   l2775 1575                     l2767 155C                     l2687 094B  
                   l3647 0D52                     l3735 0E9A                     l3583 0C8E  
                   l3487 0B84                     l2865 1EB6                     l2961 1F00  
                   l2785 159C                     l2697 09C7                     l3745 0EB0  
                   l3729 0E6F                     l3681 0DB9                     l2875 11C2  
                   l2947 1FEC                     l3675 0DA7                     l3659 0D76  
                   l3499 0BA8                     l2893 11F2                     l3837 0FB6  
                   l3829 0FA3                     l3693 0DD9                     l3669 0D95  
                   l2895 1200                     l2959 1EF0                     l3775 0EF9  
                   l3767 0EE6                     l3699 0DE2                     l3797 0F38  
                   STR_1 2027                     STR_2 2027                     STR_3 2082  
                   STR_4 2082                     STR_5 208E                     STR_6 208E  
                   STR_7 20A4                     STR_8 2099                     u3115 007D  
                   u4005 10E0                     u3145 0090                     u4035 1FC9  
                   u3315 14A1                     u3405 0812                     u3085 006A  
                   u3325 14A7                     u3245 144D                     u3415 0823  
                   u3175 00A3                     u4055 1FE2                     u3255 145D  
                   u3345 1237                     u3425 0831                     u2705 117F  
                   u4065 1FED                     u4305 02FB                     u3355 1248  
                   u3435 0840                     u3275 1485                     u5115 0E21  
                   u3365 1256                     u3445 085B                     u4085 1EF5  
                   u3285 148B                     u3375 1265                     u3455 086C  
                   u4335 0324                     u4255 020F                     u3385 1280  
                   u2745 1199                     u2665 1159                     u3705 1605  
                   u4425 045E                     u3395 1291                     u3715 162F  
                   u3635 154F                     u2835 1114                     u4435 0493  
                   u5307 0BB8                     u2685 1172                     u4365 03ED  
                   u5317 0BFC                     u2775 1E9C                     u3575 151B  
                   u2855 111E                     u2935 102A                     u4535 06CC  
                   u4295 02C6                     u5407 0D7D                     u5327 0C46  
                   u4705 1302                     u2785 1EA1                     u3665 156A  
                   u3585 152B                     u2865 1128                     u4465 0533  
                   u5417 0DC1                     u5337 0C63                     u4715 1312  
                   u3755 166C                     u3595 1535                     u2875 1130  
                   u2955 1039                     u4475 0541                     u5507 0F32  
                   u5427 0DE9                     u5347 0C7C                     u4725 1332  
                   u3925 120E                     u2965 1040                     u5517 0F9D  
                   u5437 0E10                     u5357 0C95                     u5277 0B0F  
                   u5607 1383                     u4735 1341                     u4575 0703  
                   u5527 0FF4                     u5447 0E2D                     u5367 0CA6  
                   u5287 0B20                     u5617 138B                     u5537 084D  
                   u4745 134B                     u3865 11C9                     u3785 1687  
                   u5457 0E3D                     u5377 0CE0                     u5297 0B6C  
                   u5707 1278                     u5627 1393                     u5547 0853  
                   u5467 0E4D                     u5387 0CF7                     u5717 12AF  
                   u5637 139B                     u5557 088A                     u3965 10B4  
                   u5477 0E5E                     u5397 0D3A                     u4925 0C57  
                   u5727 12B5                     u5647 13A3                     u5567 0890  
                   u3895 11F3                     u5487 0E93                     u5737 12BD  
                   u5657 13BC                     u5577 0896                     u3985 10C0  
                   u5497 0EE0                     u5667 13C9                     u5587 089C  
                   u3995 10D4                     u5677 13E4                     u5597 137B  
                   u5687 13F1                     u5697 1272                     _WPUA 1F39  
           __CFG_WRT$OFF 0000            __CFG_FCMEN$ON 0000                     _main 0AE6  
           ___ftpack@arg 0070             ___ftpack@exp 0073                     fsr0h 0005  
                   fsr1h 0007                     indf0 0000                     fsr0l 0004  
                   indf1 0001                     fsr1l 0006                     btemp 007E  
          __CFG_BOREN$ON 0000                     start 0002          __end_of_Lcd_Cmd 12C3  
          __CFG_CSWEN$ON 0000            __CFG_MCLRE$ON 0000             ___ftmul@cntr 0036  
           ___ftmul@sign 0037               _Lcd_Chr_CP 080B             ___fttol@exp1 004E  
           ___fttol@lval 004A           Lcd_Out2@buffer 0074                    ?_main 0064  
        __end_of___awdiv 1145          __end_of___ftadd 0107            __CFG_WDTE$OFF 0000  
        __end_of___awmod 1055          __end_of___ftdiv 136B          __end_of___ftneg 0011  
        __end_of___lldiv 10F3          __end_of___ftmul 14C8          ___awdiv@divisor 0077  
        __end_of___llmod 2000          __end_of___ftsub 1ECC          __end_of___fttol 1230  
        ___awdiv@counter 0020                    _PORTA 000C                    _PORTC 000E  
                  _PORTD 000F                    _TRISA 0011            __CFG_PWRTE$ON 0000  
           ___lltoft@exp 007D            ___awtoft@sign 007D                    _cont1 006C  
                  _cont2 006A          __end_of_dpowers 205B                    _igual 00D1  
                  _scale 08A2          __end_of_isdigit 1010            ___ftpack@sign 0074  
                  status 0003                    wtemp0 007E          __end_of_sprintf 07E4  
       __end_of_Lcd_Init 1414         __end_of_Lcd_Out2 1F49          __initialization 07E4  
           __end_of_main 1000                   ??_main 0068            ___fttol@sign1 0049  
   __size_of__tdiv_to_l_ 00B6         ___llmod@dividend 0024                   ?_scale 0038  
       ___awdiv@dividend 0079         __end_of___awtoft 1EEC                   _ANSELA 1F38  
                 _ANSELC 1F4E                   _ANSELD 1F59         __end_of___ftpack 11A9  
       __end_of___lltoft 1F14           __CFG_WDTCCS$SC 0000                ??_Lcd_Cmd 0070  
       __end_of__powers_ 2082                   ___ftge 1F82              ?_Lcd_Chr_CP 0070  
                 ___wmul 1E92                ??___awdiv 007B                ??___ftadd 004C  
         __CFG_STVREN$ON 0000                ??___awmod 0074                ??___ftdiv 0020  
              ??___ftneg 0073                ??___lldiv 0078                ??___ftmul 002E  
              ??___llmod 0028                ??___ftsub 007E                ??___fttol 0045  
                 _fround 169B         ___awdiv@quotient 0022          ___awmod@divisor 0070  
        ___awmod@counter 0075    ___ftmul@f3_as_product 0033                ??_isdigit 0070  
              ??_sprintf 005E  __end_of__initialization 07FD               ___ftadd@f1 0046  
             ___ftadd@f2 0049               ___ftge@ff1 0070               ___ftge@ff2 0073  
             ___ftdiv@f1 007B               ___ftdiv@f2 0078               ___ftdiv@f3 0025  
             ___ftneg@f1 0070               ___awtoft@c 0078               ___ftmul@f1 0028  
             ___ftmul@f2 002B               ___ftsub@f1 0056               ___ftsub@f2 0053  
             ___fttol@f1 0041           __pcstackCOMMON 0070             __pidataBANK0 0005  
             ___lltoft@c 0078            __end_of_scale 0AE6               __end_of_n1 1F82  
             __end_of_n2 10A1               __div_to_l_ 157E                ?_Lcd_Init 0070  
              ?_Lcd_Out2 0073          __div_to_l_@exp1 0025          __div_to_l_@cntr 0024  
                ??_scale 003B          __div_to_l_@quot 0020             sprintf@width 00B0  
    __size_of_Lcd_Chr_CP 0097               __pbssBANK0 006E               __pbssBANK1 00C9  
          __div_to_l_@f1 0070            __div_to_l_@f2 0073               __pmaintext 0AE6  
                ?___ftge 0070                  ?___wmul 0024          __CFG_PPS1WAY$ON 0000  
                ?_fround 0038                ?___awtoft 0078                ?___ftpack 0070  
              ?___lltoft 0078      __CFG_RSTOSC$HFINT32 0000               ??_Lcd_Init 0073  
             ??_Lcd_Out2 0075                  n1@valor 0028                  n2@valor 0028  
                _Lcd_Cmd 1230        __end_of__npowers_ 2027     __CFG_SCANE$available 0000  
        __size_of___ftge 003B                  ___awdiv 10F3                  ___ftadd 0011  
                ___awmod 1010                  ___ftdiv 12C3                  ___ftneg 0009  
                ___lldiv 10A1          __size_of___wmul 001C                  ___ftmul 1414  
                ___llmod 1FBD                  ___ftsub 1EAE                  ___fttol 11A9  
             _fround$942 0042               _fround$943 003F               ??___awtoft 007B  
             ??___ftpack 0075          __size_of_fround 0165               ??___lltoft 007C  
                __ptext1 0107                  __ptext2 08A2                  __ptext3 1002  
                __ptext4 169B                  __ptext5 1414                  __ptext6 1010  
                __ptext7 10F3                  __ptext8 14C8                  __ptext9 157E  
            ?__div_to_l_ 0070                  _dpowers 2033                  _isdigit 1002  
       ___awmod@dividend 0072                  _numero1 006E                  _numero2 00D9  
                _sprintf 0107                  clrloop0 0806     end_of_initialization 07FD  
        ___lldiv@divisor 0070          ___lldiv@counter 007D             ??_Lcd_Chr_CP 0070  
              Lcd_Out2@x 0073                Lcd_Out2@y 0076           __tdiv_to_l_@f1 0070  
         __tdiv_to_l_@f2 0073    __CFG_WDTCPS$WDTCPS_31 0000            ??__tdiv_to_l_ 0076  
              _PORTAbits 000C                _PORTBbits 000D                _PORTCbits 000E  
              _PORTDbits 000F                _TRISBbits 0012                _TRISCbits 0013  
              _TRISDbits 0014         __CFG_FEXTOSC$OFF 0000       __end_of_Lcd_Chr_CP 08A2  
            ___ftdiv@exp 0028      __size_of__div_to_l_ 011D              ___ftmul@exp 0032  
         __end_of___ftge 1FBD           __end_of___wmul 1EAE           __end_of_fround 1800  
    start_initialization 07E4      __end_of__tdiv_to_l_ 157E        __size_of_Lcd_Init 00A9  
      __size_of_Lcd_Out2 0035          ___llmod@divisor 0020          ___llmod@counter 0029  
       __CFG_LPBOREN$OFF 0000                 ??___ftge 0076                 ??___wmul 007C  
            __pdataBANK0 006A                 ??_fround 003B            sprintf@tmpval 00AC  
             fround@prec 0045        __size_of___awtoft 0020        __size_of___ftpack 0064  
      __size_of___lltoft 0028                ___latbits 0004            __pcstackBANK0 0020  
          __pcstackBANK1 00A0                 ?_Lcd_Cmd 0070              sprintf@flag 00A6  
            sprintf@fval 00B4              sprintf@prec 00A4                 ?___awdiv 0077  
               ?___ftadd 0046                 ?___awmod 0070                 ?___ftdiv 0078  
               ?___ftneg 0070                 ?___lldiv 0070                 ?___ftmul 0028  
               ?___llmod 0020                 ?___ftsub 0053                __npowers_ 2000  
               ?___fttol 0041              __tdiv_to_l_ 14C8             ??__div_to_l_ 0076  
               ?_isdigit 0070                _scale$944 003D                 ?_sprintf 0059  
         __size_of_scale 0244              __size_of_n1 0039              __size_of_n2 004C  
         ___wmul@product 007C                 _LATAbits 0016                clear_ram0 0805  
              _operacion 00D5       __end_of__div_to_l_ 169B                _resultado 00D7  
           Lcd_Init@data 0074        ___wmul@multiplier 0024                 _WPUBbits 1F44  
           Lcd_Out2@data 0077                 _Lcd_Init 136B                 _Lcd_Out2 1F14  
       __size_of_Lcd_Cmd 0093         __size_of___awdiv 0052         __size_of___ftadd 00F6  
       __size_of___awmod 0045         __size_of___ftdiv 00A8         __size_of___ftneg 0008  
       __size_of___lldiv 0052         __size_of___ftmul 00B4         __size_of___llmod 0043  
       __size_of___ftsub 001E         __size_of___fttol 0087                 ___awtoft 1ECC  
               ___ftpack 1145                 ___lltoft 1EEC              _isdigit$727 0070  
             _ANSELBbits 1F43               sprintf@exp 00B2               sprintf@val 00A8  
       __size_of_isdigit 000E           Lcd_Chr_CP@data 0072                 __ptext10 1EEC  
               __ptext11 1FBD                 __ptext20 1E92                 __ptext12 10A1  
               __ptext21 12C3                 __ptext13 11A9                 __ptext22 1ECC  
               __ptext14 1EAE                 __ptext23 1145                 __ptext15 0011  
               __ptext24 1F14                 __ptext16 0009                 __ptext25 080B  
               __ptext17 1F82                 __ptext26 136B                 __ptext18 1055  
               __ptext27 1230                 __ptext19 1F49                 __powers_ 205B  
       __size_of_sprintf 06DD              Lcd_Cmd@data 0072            __size_of_main 051A  
   __CFG_WDTCWS$WDTCWS_7 0000                 main@argc 0064                 main@argv 0066  
               isdigit@c 0071                 scale@scl 0040                sprintf@ap 00A3  
       __tdiv_to_l_@exp1 0025         __tdiv_to_l_@cntr 0024                sprintf@sp 00B7  
       __tdiv_to_l_@quot 0020         ___lldiv@dividend 0074        __CFG_CLKOUTEN$OFF 0000  
             _OSCFRQbits 0893             ?__tdiv_to_l_ 0070            __pstringtext1 2033  
          __pstringtext2 205B            __pstringtext3 2000            __pstringtext4 2082  
          __pstringtext5 208E            __pstringtext6 2099            __pstringtext7 20A4  
          __pstringtext8 0000                 sprintf@c 00B8                 sprintf@f 0059  
       ___lldiv@quotient 0079               n1@contador 002A               n2@contador 002A  
