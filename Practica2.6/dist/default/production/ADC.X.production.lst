

Microchip Technology PIC LITE Macro Assembler V2.00 build -1524193055 
                                                                                               Mon Sep 17 14:41:06 2018

Microchip Technology Omniscient Code Generator v2.00 (Free mode) build 20180527130849
     1                           	processor	16F18877
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	stringtext1,global,class=STRCODE,delta=2
     5                           	psect	stringtext2,global,class=STRCODE,delta=2
     6                           	psect	stringtext3,global,class=STRCODE,delta=2
     7                           	psect	stringtext4,global,class=STRCODE,delta=2
     8                           	psect	stringtext5,global,class=STRCODE,delta=2
     9                           	psect	stringtext6,global,class=STRCODE,delta=2
    10                           	psect	stringtext7,global,class=STRCODE,delta=2
    11                           	psect	stringtext8,global,class=STRCODE,delta=2
    12                           	psect	cinit,global,class=CODE,merge=1,delta=2
    13                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    14                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1
    15                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1
    16                           	psect	bssBANK4,global,class=BANK4,space=1,delta=1
    17                           	psect	clrtext,global,class=CODE,delta=2
    18                           	psect	cstackBANK2,global,class=BANK2,space=1,delta=1
    19                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    20                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    21                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    22                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    23                           	psect	text1,local,class=CODE,merge=1,delta=2,group=2
    24                           	psect	text2,local,class=CODE,merge=1,delta=2
    25                           	psect	text3,local,class=CODE,merge=1,delta=2
    26                           	psect	text4,local,class=CODE,merge=1,delta=2,group=2
    27                           	psect	text5,local,class=CODE,merge=1,delta=2
    28                           	psect	text6,local,class=CODE,merge=1,delta=2,group=2
    29                           	psect	text7,local,class=CODE,merge=1,delta=2,group=2
    30                           	psect	text8,local,class=CODE,merge=1,delta=2,group=2
    31                           	psect	text9,local,class=CODE,merge=1,delta=2
    32                           	psect	text10,local,class=CODE,merge=1,delta=2,group=2
    33                           	psect	text11,local,class=CODE,merge=1,delta=2,group=2
    34                           	psect	text12,local,class=CODE,merge=1,delta=2,group=2
    35                           	psect	text13,local,class=CODE,merge=1,delta=2,group=2
    36                           	psect	text14,local,class=CODE,merge=1,delta=2,group=2
    37                           	psect	text15,local,class=CODE,merge=1,delta=2,group=2
    38                           	psect	text16,local,class=CODE,merge=1,delta=2,group=1
    39                           	psect	text17,local,class=CODE,merge=1,delta=2,group=1
    40                           	psect	text18,local,class=CODE,merge=1,delta=2,group=1
    41                           	psect	text19,local,class=CODE,merge=1,delta=2,group=1
    42                           	psect	text20,local,class=CODE,merge=1,delta=2,group=1
    43                           	psect	text21,local,class=CODE,merge=1,delta=2,group=1
    44                           	psect	text22,local,class=CODE,merge=1,delta=2,group=1
    45                           	psect	text23,local,class=CODE,merge=1,delta=2,group=1
    46                           	psect	text24,local,class=CODE,merge=1,delta=2,group=1
    47                           	psect	text25,local,class=CODE,merge=1,delta=2,group=1
    48                           	psect	text26,local,class=CODE,merge=1,delta=2,group=1
    49                           	psect	text27,local,class=CODE,merge=1,delta=2,group=2
    50                           	psect	text28,local,class=CODE,merge=1,delta=2,group=2
    51                           	psect	text29,local,class=CODE,merge=1,delta=2,group=2
    52                           	psect	text30,local,class=CODE,merge=1,delta=2,group=1
    53                           	psect	text31,local,class=CODE,merge=1,delta=2,group=1
    54                           	psect	text32,local,class=CODE,merge=1,delta=2
    55                           	psect	text33,local,class=CODE,merge=1,delta=2
    56                           	psect	text34,local,class=CODE,merge=1,delta=2
    57                           	psect	text35,local,class=CODE,merge=1,delta=2
    58                           	dabs	1,0x7E,2
    59  0000                     
    60                           ; Version 2.00
    61                           ; Generated 27/05/2018 GMT
    62                           ; 
    63                           ; Copyright Â© 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
    64                           ; All rights reserved.
    65                           ; 
    66                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    67                           ; 
    68                           ; Redistribution and use in source and binary forms, with or without modification, are
    69                           ; permitted provided that the following conditions are met:
    70                           ; 
    71                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    72                           ;        conditions and the following disclaimer.
    73                           ; 
    74                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    75                           ;        of conditions and the following disclaimer in the documentation and/or other
    76                           ;        materials provided with the distribution.
    77                           ; 
    78                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    79                           ;        software without specific prior written permission.
    80                           ; 
    81                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    82                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    83                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    84                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    85                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    86                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    87                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    88                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    89                           ; 
    90                           ; 
    91                           ; Code-generator required, PIC16F18877 Definitions
    92                           ; 
    93                           ; SFR Addresses
    94  0000                     	;# 
    95  0001                     	;# 
    96  0002                     	;# 
    97  0003                     	;# 
    98  0004                     	;# 
    99  0005                     	;# 
   100  0006                     	;# 
   101  0007                     	;# 
   102  0008                     	;# 
   103  0009                     	;# 
   104  000A                     	;# 
   105  000B                     	;# 
   106  000C                     	;# 
   107  000D                     	;# 
   108  000E                     	;# 
   109  000F                     	;# 
   110  0010                     	;# 
   111  0011                     	;# 
   112  0012                     	;# 
   113  0013                     	;# 
   114  0014                     	;# 
   115  0015                     	;# 
   116  0016                     	;# 
   117  0017                     	;# 
   118  0018                     	;# 
   119  0019                     	;# 
   120  001A                     	;# 
   121  001C                     	;# 
   122  001C                     	;# 
   123  001D                     	;# 
   124  001D                     	;# 
   125  001E                     	;# 
   126  001F                     	;# 
   127  008C                     	;# 
   128  008C                     	;# 
   129  008D                     	;# 
   130  008E                     	;# 
   131  008E                     	;# 
   132  008F                     	;# 
   133  0090                     	;# 
   134  0090                     	;# 
   135  0091                     	;# 
   136  0093                     	;# 
   137  0094                     	;# 
   138  0095                     	;# 
   139  0096                     	;# 
   140  0097                     	;# 
   141  0098                     	;# 
   142  0099                     	;# 
   143  009A                     	;# 
   144  009B                     	;# 
   145  009C                     	;# 
   146  009D                     	;# 
   147  009E                     	;# 
   148  010C                     	;# 
   149  010D                     	;# 
   150  010E                     	;# 
   151  010E                     	;# 
   152  010F                     	;# 
   153  0110                     	;# 
   154  0110                     	;# 
   155  0111                     	;# 
   156  0112                     	;# 
   157  0112                     	;# 
   158  0113                     	;# 
   159  0114                     	;# 
   160  0114                     	;# 
   161  0115                     	;# 
   162  0116                     	;# 
   163  0116                     	;# 
   164  0117                     	;# 
   165  0119                     	;# 
   166  0119                     	;# 
   167  0119                     	;# 
   168  011A                     	;# 
   169  011A                     	;# 
   170  011A                     	;# 
   171  011B                     	;# 
   172  011B                     	;# 
   173  011B                     	;# 
   174  011B                     	;# 
   175  011B                     	;# 
   176  011C                     	;# 
   177  011C                     	;# 
   178  011C                     	;# 
   179  011D                     	;# 
   180  011D                     	;# 
   181  011D                     	;# 
   182  011E                     	;# 
   183  011E                     	;# 
   184  011E                     	;# 
   185  011F                     	;# 
   186  011F                     	;# 
   187  011F                     	;# 
   188  011F                     	;# 
   189  011F                     	;# 
   190  018C                     	;# 
   191  018D                     	;# 
   192  018E                     	;# 
   193  018F                     	;# 
   194  0190                     	;# 
   195  0191                     	;# 
   196  0192                     	;# 
   197  0196                     	;# 
   198  0197                     	;# 
   199  0198                     	;# 
   200  0199                     	;# 
   201  019A                     	;# 
   202  019B                     	;# 
   203  019C                     	;# 
   204  020C                     	;# 
   205  020C                     	;# 
   206  020D                     	;# 
   207  020E                     	;# 
   208  020F                     	;# 
   209  020F                     	;# 
   210  0210                     	;# 
   211  0210                     	;# 
   212  0211                     	;# 
   213  0211                     	;# 
   214  0212                     	;# 
   215  0212                     	;# 
   216  0213                     	;# 
   217  0214                     	;# 
   218  0215                     	;# 
   219  0215                     	;# 
   220  0216                     	;# 
   221  0216                     	;# 
   222  0217                     	;# 
   223  0217                     	;# 
   224  0218                     	;# 
   225  0218                     	;# 
   226  0219                     	;# 
   227  021A                     	;# 
   228  021B                     	;# 
   229  021B                     	;# 
   230  021C                     	;# 
   231  021C                     	;# 
   232  021D                     	;# 
   233  021D                     	;# 
   234  021E                     	;# 
   235  021F                     	;# 
   236  028C                     	;# 
   237  028C                     	;# 
   238  028D                     	;# 
   239  028D                     	;# 
   240  028E                     	;# 
   241  028F                     	;# 
   242  0290                     	;# 
   243  0290                     	;# 
   244  0291                     	;# 
   245  0292                     	;# 
   246  0292                     	;# 
   247  0293                     	;# 
   248  0293                     	;# 
   249  0294                     	;# 
   250  0295                     	;# 
   251  0296                     	;# 
   252  0296                     	;# 
   253  0297                     	;# 
   254  0298                     	;# 
   255  0298                     	;# 
   256  0299                     	;# 
   257  0299                     	;# 
   258  029A                     	;# 
   259  029B                     	;# 
   260  029C                     	;# 
   261  029C                     	;# 
   262  029D                     	;# 
   263  030C                     	;# 
   264  030C                     	;# 
   265  030D                     	;# 
   266  030E                     	;# 
   267  030F                     	;# 
   268  0310                     	;# 
   269  0310                     	;# 
   270  0311                     	;# 
   271  0312                     	;# 
   272  0313                     	;# 
   273  0314                     	;# 
   274  0314                     	;# 
   275  0315                     	;# 
   276  0316                     	;# 
   277  0317                     	;# 
   278  0318                     	;# 
   279  0318                     	;# 
   280  0319                     	;# 
   281  031A                     	;# 
   282  031B                     	;# 
   283  031C                     	;# 
   284  031C                     	;# 
   285  031D                     	;# 
   286  031E                     	;# 
   287  031F                     	;# 
   288  038C                     	;# 
   289  038C                     	;# 
   290  038D                     	;# 
   291  038E                     	;# 
   292  0390                     	;# 
   293  0390                     	;# 
   294  0391                     	;# 
   295  0392                     	;# 
   296  040C                     	;# 
   297  040D                     	;# 
   298  040E                     	;# 
   299  040F                     	;# 
   300  0410                     	;# 
   301  0411                     	;# 
   302  0416                     	;# 
   303  0416                     	;# 
   304  0417                     	;# 
   305  0418                     	;# 
   306  0418                     	;# 
   307  0419                     	;# 
   308  041A                     	;# 
   309  041A                     	;# 
   310  041B                     	;# 
   311  041C                     	;# 
   312  041C                     	;# 
   313  041D                     	;# 
   314  041E                     	;# 
   315  041F                     	;# 
   316  048C                     	;# 
   317  048C                     	;# 
   318  048D                     	;# 
   319  048E                     	;# 
   320  048F                     	;# 
   321  048F                     	;# 
   322  0490                     	;# 
   323  0491                     	;# 
   324  0492                     	;# 
   325  0492                     	;# 
   326  0493                     	;# 
   327  0494                     	;# 
   328  0495                     	;# 
   329  0495                     	;# 
   330  0496                     	;# 
   331  0497                     	;# 
   332  0498                     	;# 
   333  0499                     	;# 
   334  049A                     	;# 
   335  049B                     	;# 
   336  049C                     	;# 
   337  049D                     	;# 
   338  050C                     	;# 
   339  050C                     	;# 
   340  050D                     	;# 
   341  050E                     	;# 
   342  050F                     	;# 
   343  050F                     	;# 
   344  0510                     	;# 
   345  0511                     	;# 
   346  0512                     	;# 
   347  0512                     	;# 
   348  0513                     	;# 
   349  0514                     	;# 
   350  0515                     	;# 
   351  0515                     	;# 
   352  0516                     	;# 
   353  0517                     	;# 
   354  0518                     	;# 
   355  0519                     	;# 
   356  051A                     	;# 
   357  051B                     	;# 
   358  051C                     	;# 
   359  051D                     	;# 
   360  058C                     	;# 
   361  058C                     	;# 
   362  058D                     	;# 
   363  058E                     	;# 
   364  058F                     	;# 
   365  058F                     	;# 
   366  0590                     	;# 
   367  0591                     	;# 
   368  0592                     	;# 
   369  0593                     	;# 
   370  060C                     	;# 
   371  060D                     	;# 
   372  060E                     	;# 
   373  060F                     	;# 
   374  0610                     	;# 
   375  0611                     	;# 
   376  0612                     	;# 
   377  0613                     	;# 
   378  0614                     	;# 
   379  0616                     	;# 
   380  0617                     	;# 
   381  0618                     	;# 
   382  0619                     	;# 
   383  061A                     	;# 
   384  061B                     	;# 
   385  061C                     	;# 
   386  061D                     	;# 
   387  061E                     	;# 
   388  068C                     	;# 
   389  068D                     	;# 
   390  068E                     	;# 
   391  068F                     	;# 
   392  0690                     	;# 
   393  0691                     	;# 
   394  0692                     	;# 
   395  0693                     	;# 
   396  0694                     	;# 
   397  070C                     	;# 
   398  070D                     	;# 
   399  070E                     	;# 
   400  070F                     	;# 
   401  0710                     	;# 
   402  0711                     	;# 
   403  0712                     	;# 
   404  0713                     	;# 
   405  0714                     	;# 
   406  0716                     	;# 
   407  0717                     	;# 
   408  0718                     	;# 
   409  0719                     	;# 
   410  071A                     	;# 
   411  071B                     	;# 
   412  071C                     	;# 
   413  071D                     	;# 
   414  071E                     	;# 
   415  0796                     	;# 
   416  0797                     	;# 
   417  0798                     	;# 
   418  0799                     	;# 
   419  079A                     	;# 
   420  079B                     	;# 
   421  080C                     	;# 
   422  080D                     	;# 
   423  080E                     	;# 
   424  080F                     	;# 
   425  0810                     	;# 
   426  0811                     	;# 
   427  0812                     	;# 
   428  0813                     	;# 
   429  0814                     	;# 
   430  081A                     	;# 
   431  081B                     	;# 
   432  081C                     	;# 
   433  081D                     	;# 
   434  081E                     	;# 
   435  081F                     	;# 
   436  088C                     	;# 
   437  088D                     	;# 
   438  088E                     	;# 
   439  088F                     	;# 
   440  0890                     	;# 
   441  0891                     	;# 
   442  0892                     	;# 
   443  0893                     	;# 
   444  0895                     	;# 
   445  0896                     	;# 
   446  0897                     	;# 
   447  0898                     	;# 
   448  0899                     	;# 
   449  089A                     	;# 
   450  089B                     	;# 
   451  090C                     	;# 
   452  090E                     	;# 
   453  090F                     	;# 
   454  091F                     	;# 
   455  098F                     	;# 
   456  098F                     	;# 
   457  0990                     	;# 
   458  0991                     	;# 
   459  0992                     	;# 
   460  0993                     	;# 
   461  0994                     	;# 
   462  0995                     	;# 
   463  0996                     	;# 
   464  0997                     	;# 
   465  1E0F                     	;# 
   466  1E10                     	;# 
   467  1E11                     	;# 
   468  1E12                     	;# 
   469  1E13                     	;# 
   470  1E14                     	;# 
   471  1E15                     	;# 
   472  1E16                     	;# 
   473  1E17                     	;# 
   474  1E18                     	;# 
   475  1E19                     	;# 
   476  1E1A                     	;# 
   477  1E1B                     	;# 
   478  1E1C                     	;# 
   479  1E1D                     	;# 
   480  1E1E                     	;# 
   481  1E1F                     	;# 
   482  1E20                     	;# 
   483  1E21                     	;# 
   484  1E22                     	;# 
   485  1E23                     	;# 
   486  1E24                     	;# 
   487  1E25                     	;# 
   488  1E26                     	;# 
   489  1E27                     	;# 
   490  1E28                     	;# 
   491  1E29                     	;# 
   492  1E2A                     	;# 
   493  1E2B                     	;# 
   494  1E2C                     	;# 
   495  1E2D                     	;# 
   496  1E2E                     	;# 
   497  1E2F                     	;# 
   498  1E30                     	;# 
   499  1E31                     	;# 
   500  1E32                     	;# 
   501  1E33                     	;# 
   502  1E34                     	;# 
   503  1E35                     	;# 
   504  1E36                     	;# 
   505  1E37                     	;# 
   506  1E8F                     	;# 
   507  1E90                     	;# 
   508  1E91                     	;# 
   509  1E92                     	;# 
   510  1E93                     	;# 
   511  1E94                     	;# 
   512  1E95                     	;# 
   513  1E96                     	;# 
   514  1E97                     	;# 
   515  1E9C                     	;# 
   516  1E9D                     	;# 
   517  1E9E                     	;# 
   518  1EA1                     	;# 
   519  1EA2                     	;# 
   520  1EA3                     	;# 
   521  1EA4                     	;# 
   522  1EA5                     	;# 
   523  1EA9                     	;# 
   524  1EAA                     	;# 
   525  1EAB                     	;# 
   526  1EAC                     	;# 
   527  1EB1                     	;# 
   528  1EB2                     	;# 
   529  1EB3                     	;# 
   530  1EB8                     	;# 
   531  1EB9                     	;# 
   532  1EBA                     	;# 
   533  1EBB                     	;# 
   534  1EBC                     	;# 
   535  1EBD                     	;# 
   536  1EBE                     	;# 
   537  1EC3                     	;# 
   538  1EC5                     	;# 
   539  1EC6                     	;# 
   540  1EC7                     	;# 
   541  1EC8                     	;# 
   542  1EC9                     	;# 
   543  1ECA                     	;# 
   544  1ECB                     	;# 
   545  1ECC                     	;# 
   546  1F10                     	;# 
   547  1F11                     	;# 
   548  1F12                     	;# 
   549  1F13                     	;# 
   550  1F14                     	;# 
   551  1F15                     	;# 
   552  1F16                     	;# 
   553  1F17                     	;# 
   554  1F18                     	;# 
   555  1F19                     	;# 
   556  1F1A                     	;# 
   557  1F1B                     	;# 
   558  1F1C                     	;# 
   559  1F1D                     	;# 
   560  1F1E                     	;# 
   561  1F1F                     	;# 
   562  1F20                     	;# 
   563  1F21                     	;# 
   564  1F22                     	;# 
   565  1F23                     	;# 
   566  1F24                     	;# 
   567  1F25                     	;# 
   568  1F26                     	;# 
   569  1F27                     	;# 
   570  1F28                     	;# 
   571  1F29                     	;# 
   572  1F2A                     	;# 
   573  1F2B                     	;# 
   574  1F2C                     	;# 
   575  1F2D                     	;# 
   576  1F2E                     	;# 
   577  1F2F                     	;# 
   578  1F30                     	;# 
   579  1F31                     	;# 
   580  1F32                     	;# 
   581  1F38                     	;# 
   582  1F39                     	;# 
   583  1F3A                     	;# 
   584  1F3B                     	;# 
   585  1F3C                     	;# 
   586  1F3D                     	;# 
   587  1F3E                     	;# 
   588  1F3F                     	;# 
   589  1F40                     	;# 
   590  1F41                     	;# 
   591  1F43                     	;# 
   592  1F44                     	;# 
   593  1F45                     	;# 
   594  1F46                     	;# 
   595  1F47                     	;# 
   596  1F48                     	;# 
   597  1F49                     	;# 
   598  1F4A                     	;# 
   599  1F4B                     	;# 
   600  1F4C                     	;# 
   601  1F4E                     	;# 
   602  1F4F                     	;# 
   603  1F50                     	;# 
   604  1F51                     	;# 
   605  1F52                     	;# 
   606  1F53                     	;# 
   607  1F54                     	;# 
   608  1F55                     	;# 
   609  1F56                     	;# 
   610  1F57                     	;# 
   611  1F59                     	;# 
   612  1F5A                     	;# 
   613  1F5B                     	;# 
   614  1F5C                     	;# 
   615  1F5D                     	;# 
   616  1F61                     	;# 
   617  1F62                     	;# 
   618  1F64                     	;# 
   619  1F65                     	;# 
   620  1F66                     	;# 
   621  1F67                     	;# 
   622  1F68                     	;# 
   623  1F69                     	;# 
   624  1F6A                     	;# 
   625  1F6B                     	;# 
   626  1F6C                     	;# 
   627  1F6D                     	;# 
   628  1FE4                     	;# 
   629  1FE5                     	;# 
   630  1FE6                     	;# 
   631  1FE7                     	;# 
   632  1FE8                     	;# 
   633  1FE9                     	;# 
   634  1FEA                     	;# 
   635  1FEB                     	;# 
   636  1FED                     	;# 
   637  1FEE                     	;# 
   638  1FEF                     	;# 
   639  0000                     	;# 
   640  0001                     	;# 
   641  0002                     	;# 
   642  0003                     	;# 
   643  0004                     	;# 
   644  0005                     	;# 
   645  0006                     	;# 
   646  0007                     	;# 
   647  0008                     	;# 
   648  0009                     	;# 
   649  000A                     	;# 
   650  000B                     	;# 
   651  000C                     	;# 
   652  000D                     	;# 
   653  000E                     	;# 
   654  000F                     	;# 
   655  0010                     	;# 
   656  0011                     	;# 
   657  0012                     	;# 
   658  0013                     	;# 
   659  0014                     	;# 
   660  0015                     	;# 
   661  0016                     	;# 
   662  0017                     	;# 
   663  0018                     	;# 
   664  0019                     	;# 
   665  001A                     	;# 
   666  001C                     	;# 
   667  001C                     	;# 
   668  001D                     	;# 
   669  001D                     	;# 
   670  001E                     	;# 
   671  001F                     	;# 
   672  008C                     	;# 
   673  008C                     	;# 
   674  008D                     	;# 
   675  008E                     	;# 
   676  008E                     	;# 
   677  008F                     	;# 
   678  0090                     	;# 
   679  0090                     	;# 
   680  0091                     	;# 
   681  0093                     	;# 
   682  0094                     	;# 
   683  0095                     	;# 
   684  0096                     	;# 
   685  0097                     	;# 
   686  0098                     	;# 
   687  0099                     	;# 
   688  009A                     	;# 
   689  009B                     	;# 
   690  009C                     	;# 
   691  009D                     	;# 
   692  009E                     	;# 
   693  010C                     	;# 
   694  010D                     	;# 
   695  010E                     	;# 
   696  010E                     	;# 
   697  010F                     	;# 
   698  0110                     	;# 
   699  0110                     	;# 
   700  0111                     	;# 
   701  0112                     	;# 
   702  0112                     	;# 
   703  0113                     	;# 
   704  0114                     	;# 
   705  0114                     	;# 
   706  0115                     	;# 
   707  0116                     	;# 
   708  0116                     	;# 
   709  0117                     	;# 
   710  0119                     	;# 
   711  0119                     	;# 
   712  0119                     	;# 
   713  011A                     	;# 
   714  011A                     	;# 
   715  011A                     	;# 
   716  011B                     	;# 
   717  011B                     	;# 
   718  011B                     	;# 
   719  011B                     	;# 
   720  011B                     	;# 
   721  011C                     	;# 
   722  011C                     	;# 
   723  011C                     	;# 
   724  011D                     	;# 
   725  011D                     	;# 
   726  011D                     	;# 
   727  011E                     	;# 
   728  011E                     	;# 
   729  011E                     	;# 
   730  011F                     	;# 
   731  011F                     	;# 
   732  011F                     	;# 
   733  011F                     	;# 
   734  011F                     	;# 
   735  018C                     	;# 
   736  018D                     	;# 
   737  018E                     	;# 
   738  018F                     	;# 
   739  0190                     	;# 
   740  0191                     	;# 
   741  0192                     	;# 
   742  0196                     	;# 
   743  0197                     	;# 
   744  0198                     	;# 
   745  0199                     	;# 
   746  019A                     	;# 
   747  019B                     	;# 
   748  019C                     	;# 
   749  020C                     	;# 
   750  020C                     	;# 
   751  020D                     	;# 
   752  020E                     	;# 
   753  020F                     	;# 
   754  020F                     	;# 
   755  0210                     	;# 
   756  0210                     	;# 
   757  0211                     	;# 
   758  0211                     	;# 
   759  0212                     	;# 
   760  0212                     	;# 
   761  0213                     	;# 
   762  0214                     	;# 
   763  0215                     	;# 
   764  0215                     	;# 
   765  0216                     	;# 
   766  0216                     	;# 
   767  0217                     	;# 
   768  0217                     	;# 
   769  0218                     	;# 
   770  0218                     	;# 
   771  0219                     	;# 
   772  021A                     	;# 
   773  021B                     	;# 
   774  021B                     	;# 
   775  021C                     	;# 
   776  021C                     	;# 
   777  021D                     	;# 
   778  021D                     	;# 
   779  021E                     	;# 
   780  021F                     	;# 
   781  028C                     	;# 
   782  028C                     	;# 
   783  028D                     	;# 
   784  028D                     	;# 
   785  028E                     	;# 
   786  028F                     	;# 
   787  0290                     	;# 
   788  0290                     	;# 
   789  0291                     	;# 
   790  0292                     	;# 
   791  0292                     	;# 
   792  0293                     	;# 
   793  0293                     	;# 
   794  0294                     	;# 
   795  0295                     	;# 
   796  0296                     	;# 
   797  0296                     	;# 
   798  0297                     	;# 
   799  0298                     	;# 
   800  0298                     	;# 
   801  0299                     	;# 
   802  0299                     	;# 
   803  029A                     	;# 
   804  029B                     	;# 
   805  029C                     	;# 
   806  029C                     	;# 
   807  029D                     	;# 
   808  030C                     	;# 
   809  030C                     	;# 
   810  030D                     	;# 
   811  030E                     	;# 
   812  030F                     	;# 
   813  0310                     	;# 
   814  0310                     	;# 
   815  0311                     	;# 
   816  0312                     	;# 
   817  0313                     	;# 
   818  0314                     	;# 
   819  0314                     	;# 
   820  0315                     	;# 
   821  0316                     	;# 
   822  0317                     	;# 
   823  0318                     	;# 
   824  0318                     	;# 
   825  0319                     	;# 
   826  031A                     	;# 
   827  031B                     	;# 
   828  031C                     	;# 
   829  031C                     	;# 
   830  031D                     	;# 
   831  031E                     	;# 
   832  031F                     	;# 
   833  038C                     	;# 
   834  038C                     	;# 
   835  038D                     	;# 
   836  038E                     	;# 
   837  0390                     	;# 
   838  0390                     	;# 
   839  0391                     	;# 
   840  0392                     	;# 
   841  040C                     	;# 
   842  040D                     	;# 
   843  040E                     	;# 
   844  040F                     	;# 
   845  0410                     	;# 
   846  0411                     	;# 
   847  0416                     	;# 
   848  0416                     	;# 
   849  0417                     	;# 
   850  0418                     	;# 
   851  0418                     	;# 
   852  0419                     	;# 
   853  041A                     	;# 
   854  041A                     	;# 
   855  041B                     	;# 
   856  041C                     	;# 
   857  041C                     	;# 
   858  041D                     	;# 
   859  041E                     	;# 
   860  041F                     	;# 
   861  048C                     	;# 
   862  048C                     	;# 
   863  048D                     	;# 
   864  048E                     	;# 
   865  048F                     	;# 
   866  048F                     	;# 
   867  0490                     	;# 
   868  0491                     	;# 
   869  0492                     	;# 
   870  0492                     	;# 
   871  0493                     	;# 
   872  0494                     	;# 
   873  0495                     	;# 
   874  0495                     	;# 
   875  0496                     	;# 
   876  0497                     	;# 
   877  0498                     	;# 
   878  0499                     	;# 
   879  049A                     	;# 
   880  049B                     	;# 
   881  049C                     	;# 
   882  049D                     	;# 
   883  050C                     	;# 
   884  050C                     	;# 
   885  050D                     	;# 
   886  050E                     	;# 
   887  050F                     	;# 
   888  050F                     	;# 
   889  0510                     	;# 
   890  0511                     	;# 
   891  0512                     	;# 
   892  0512                     	;# 
   893  0513                     	;# 
   894  0514                     	;# 
   895  0515                     	;# 
   896  0515                     	;# 
   897  0516                     	;# 
   898  0517                     	;# 
   899  0518                     	;# 
   900  0519                     	;# 
   901  051A                     	;# 
   902  051B                     	;# 
   903  051C                     	;# 
   904  051D                     	;# 
   905  058C                     	;# 
   906  058C                     	;# 
   907  058D                     	;# 
   908  058E                     	;# 
   909  058F                     	;# 
   910  058F                     	;# 
   911  0590                     	;# 
   912  0591                     	;# 
   913  0592                     	;# 
   914  0593                     	;# 
   915  060C                     	;# 
   916  060D                     	;# 
   917  060E                     	;# 
   918  060F                     	;# 
   919  0610                     	;# 
   920  0611                     	;# 
   921  0612                     	;# 
   922  0613                     	;# 
   923  0614                     	;# 
   924  0616                     	;# 
   925  0617                     	;# 
   926  0618                     	;# 
   927  0619                     	;# 
   928  061A                     	;# 
   929  061B                     	;# 
   930  061C                     	;# 
   931  061D                     	;# 
   932  061E                     	;# 
   933  068C                     	;# 
   934  068D                     	;# 
   935  068E                     	;# 
   936  068F                     	;# 
   937  0690                     	;# 
   938  0691                     	;# 
   939  0692                     	;# 
   940  0693                     	;# 
   941  0694                     	;# 
   942  070C                     	;# 
   943  070D                     	;# 
   944  070E                     	;# 
   945  070F                     	;# 
   946  0710                     	;# 
   947  0711                     	;# 
   948  0712                     	;# 
   949  0713                     	;# 
   950  0714                     	;# 
   951  0716                     	;# 
   952  0717                     	;# 
   953  0718                     	;# 
   954  0719                     	;# 
   955  071A                     	;# 
   956  071B                     	;# 
   957  071C                     	;# 
   958  071D                     	;# 
   959  071E                     	;# 
   960  0796                     	;# 
   961  0797                     	;# 
   962  0798                     	;# 
   963  0799                     	;# 
   964  079A                     	;# 
   965  079B                     	;# 
   966  080C                     	;# 
   967  080D                     	;# 
   968  080E                     	;# 
   969  080F                     	;# 
   970  0810                     	;# 
   971  0811                     	;# 
   972  0812                     	;# 
   973  0813                     	;# 
   974  0814                     	;# 
   975  081A                     	;# 
   976  081B                     	;# 
   977  081C                     	;# 
   978  081D                     	;# 
   979  081E                     	;# 
   980  081F                     	;# 
   981  088C                     	;# 
   982  088D                     	;# 
   983  088E                     	;# 
   984  088F                     	;# 
   985  0890                     	;# 
   986  0891                     	;# 
   987  0892                     	;# 
   988  0893                     	;# 
   989  0895                     	;# 
   990  0896                     	;# 
   991  0897                     	;# 
   992  0898                     	;# 
   993  0899                     	;# 
   994  089A                     	;# 
   995  089B                     	;# 
   996  090C                     	;# 
   997  090E                     	;# 
   998  090F                     	;# 
   999  091F                     	;# 
  1000  098F                     	;# 
  1001  098F                     	;# 
  1002  0990                     	;# 
  1003  0991                     	;# 
  1004  0992                     	;# 
  1005  0993                     	;# 
  1006  0994                     	;# 
  1007  0995                     	;# 
  1008  0996                     	;# 
  1009  0997                     	;# 
  1010  1E0F                     	;# 
  1011  1E10                     	;# 
  1012  1E11                     	;# 
  1013  1E12                     	;# 
  1014  1E13                     	;# 
  1015  1E14                     	;# 
  1016  1E15                     	;# 
  1017  1E16                     	;# 
  1018  1E17                     	;# 
  1019  1E18                     	;# 
  1020  1E19                     	;# 
  1021  1E1A                     	;# 
  1022  1E1B                     	;# 
  1023  1E1C                     	;# 
  1024  1E1D                     	;# 
  1025  1E1E                     	;# 
  1026  1E1F                     	;# 
  1027  1E20                     	;# 
  1028  1E21                     	;# 
  1029  1E22                     	;# 
  1030  1E23                     	;# 
  1031  1E24                     	;# 
  1032  1E25                     	;# 
  1033  1E26                     	;# 
  1034  1E27                     	;# 
  1035  1E28                     	;# 
  1036  1E29                     	;# 
  1037  1E2A                     	;# 
  1038  1E2B                     	;# 
  1039  1E2C                     	;# 
  1040  1E2D                     	;# 
  1041  1E2E                     	;# 
  1042  1E2F                     	;# 
  1043  1E30                     	;# 
  1044  1E31                     	;# 
  1045  1E32                     	;# 
  1046  1E33                     	;# 
  1047  1E34                     	;# 
  1048  1E35                     	;# 
  1049  1E36                     	;# 
  1050  1E37                     	;# 
  1051  1E8F                     	;# 
  1052  1E90                     	;# 
  1053  1E91                     	;# 
  1054  1E92                     	;# 
  1055  1E93                     	;# 
  1056  1E94                     	;# 
  1057  1E95                     	;# 
  1058  1E96                     	;# 
  1059  1E97                     	;# 
  1060  1E9C                     	;# 
  1061  1E9D                     	;# 
  1062  1E9E                     	;# 
  1063  1EA1                     	;# 
  1064  1EA2                     	;# 
  1065  1EA3                     	;# 
  1066  1EA4                     	;# 
  1067  1EA5                     	;# 
  1068  1EA9                     	;# 
  1069  1EAA                     	;# 
  1070  1EAB                     	;# 
  1071  1EAC                     	;# 
  1072  1EB1                     	;# 
  1073  1EB2                     	;# 
  1074  1EB3                     	;# 
  1075  1EB8                     	;# 
  1076  1EB9                     	;# 
  1077  1EBA                     	;# 
  1078  1EBB                     	;# 
  1079  1EBC                     	;# 
  1080  1EBD                     	;# 
  1081  1EBE                     	;# 
  1082  1EC3                     	;# 
  1083  1EC5                     	;# 
  1084  1EC6                     	;# 
  1085  1EC7                     	;# 
  1086  1EC8                     	;# 
  1087  1EC9                     	;# 
  1088  1ECA                     	;# 
  1089  1ECB                     	;# 
  1090  1ECC                     	;# 
  1091  1F10                     	;# 
  1092  1F11                     	;# 
  1093  1F12                     	;# 
  1094  1F13                     	;# 
  1095  1F14                     	;# 
  1096  1F15                     	;# 
  1097  1F16                     	;# 
  1098  1F17                     	;# 
  1099  1F18                     	;# 
  1100  1F19                     	;# 
  1101  1F1A                     	;# 
  1102  1F1B                     	;# 
  1103  1F1C                     	;# 
  1104  1F1D                     	;# 
  1105  1F1E                     	;# 
  1106  1F1F                     	;# 
  1107  1F20                     	;# 
  1108  1F21                     	;# 
  1109  1F22                     	;# 
  1110  1F23                     	;# 
  1111  1F24                     	;# 
  1112  1F25                     	;# 
  1113  1F26                     	;# 
  1114  1F27                     	;# 
  1115  1F28                     	;# 
  1116  1F29                     	;# 
  1117  1F2A                     	;# 
  1118  1F2B                     	;# 
  1119  1F2C                     	;# 
  1120  1F2D                     	;# 
  1121  1F2E                     	;# 
  1122  1F2F                     	;# 
  1123  1F30                     	;# 
  1124  1F31                     	;# 
  1125  1F32                     	;# 
  1126  1F38                     	;# 
  1127  1F39                     	;# 
  1128  1F3A                     	;# 
  1129  1F3B                     	;# 
  1130  1F3C                     	;# 
  1131  1F3D                     	;# 
  1132  1F3E                     	;# 
  1133  1F3F                     	;# 
  1134  1F40                     	;# 
  1135  1F41                     	;# 
  1136  1F43                     	;# 
  1137  1F44                     	;# 
  1138  1F45                     	;# 
  1139  1F46                     	;# 
  1140  1F47                     	;# 
  1141  1F48                     	;# 
  1142  1F49                     	;# 
  1143  1F4A                     	;# 
  1144  1F4B                     	;# 
  1145  1F4C                     	;# 
  1146  1F4E                     	;# 
  1147  1F4F                     	;# 
  1148  1F50                     	;# 
  1149  1F51                     	;# 
  1150  1F52                     	;# 
  1151  1F53                     	;# 
  1152  1F54                     	;# 
  1153  1F55                     	;# 
  1154  1F56                     	;# 
  1155  1F57                     	;# 
  1156  1F59                     	;# 
  1157  1F5A                     	;# 
  1158  1F5B                     	;# 
  1159  1F5C                     	;# 
  1160  1F5D                     	;# 
  1161  1F61                     	;# 
  1162  1F62                     	;# 
  1163  1F64                     	;# 
  1164  1F65                     	;# 
  1165  1F66                     	;# 
  1166  1F67                     	;# 
  1167  1F68                     	;# 
  1168  1F69                     	;# 
  1169  1F6A                     	;# 
  1170  1F6B                     	;# 
  1171  1F6C                     	;# 
  1172  1F6D                     	;# 
  1173  1FE4                     	;# 
  1174  1FE5                     	;# 
  1175  1FE6                     	;# 
  1176  1FE7                     	;# 
  1177  1FE8                     	;# 
  1178  1FE9                     	;# 
  1179  1FEA                     	;# 
  1180  1FEB                     	;# 
  1181  1FED                     	;# 
  1182  1FEE                     	;# 
  1183  1FEF                     	;# 
  1184  0018                     _LATCbits	set	24
  1185  0011                     _TRISAbits	set	17
  1186  000F                     _PORTDbits	set	15
  1187  000E                     _PORTCbits	set	14
  1188  0014                     _TRISDbits	set	20
  1189  0013                     _TRISCbits	set	19
  1190  008C                     _ADRESL	set	140
  1191  008D                     _ADRESH	set	141
  1192  009E                     _ADPCH	set	158
  1193  009A                     _ADREFbits	set	154
  1194  0093                     _ADCON0bits	set	147
  1195  0893                     _OSCFRQbits	set	2195
  1196  1F38                     _ANSELAbits	set	7992
  1197  1F4E                     _ANSELCbits	set	8014
  1198  1F59                     _ANSELD	set	8025
  1199  1F4E                     _ANSELC	set	8014
  1200                           
  1201                           	psect	stringtext1
  1202  2000                     __pstringtext1:	
  1203  2000                     STR_2:	
  1204  2000  3454               	retlw	84	;'T'
  1205  2001  3465               	retlw	101	;'e'
  1206  2002  346D               	retlw	109	;'m'
  1207  2003  3470               	retlw	112	;'p'
  1208  2004  3457               	retlw	87	;'W'
  1209  2005  3469               	retlw	105	;'i'
  1210  2006  3473               	retlw	115	;'s'
  1211  2007  3468               	retlw	104	;'h'
  1212  2008  343D               	retlw	61	;'='
  1213  2009  3425               	retlw	37	;'%'
  1214  200A  3430               	retlw	48	;'0'
  1215  200B  3434               	retlw	52	;'4'
  1216  200C  342E               	retlw	46	;'.'
  1217  200D  3430               	retlw	48	;'0'
  1218  200E  3466               	retlw	102	;'f'
  1219  200F  3400               	retlw	0
  1220                           
  1221                           	psect	stringtext2
  1222  2010                     __pstringtext2:	
  1223  2010                     STR_1:	
  1224  2010  3452               	retlw	82	;'R'
  1225  2011  3465               	retlw	101	;'e'
  1226  2012  3461               	retlw	97	;'a'
  1227  2013  346C               	retlw	108	;'l'
  1228  2014  343D               	retlw	61	;'='
  1229  2015  3425               	retlw	37	;'%'
  1230  2016  3430               	retlw	48	;'0'
  1231  2017  3434               	retlw	52	;'4'
  1232  2018  342E               	retlw	46	;'.'
  1233  2019  3430               	retlw	48	;'0'
  1234  201A  3466               	retlw	102	;'f'
  1235  201B  3400               	retlw	0
  1236                           
  1237                           	psect	stringtext3
  1238  201C                     __pstringtext3:	
  1239  201C                     STR_3:	
  1240  201C  3449               	retlw	73	;'I'
  1241  201D  344E               	retlw	78	;'N'
  1242  201E  3446               	retlw	70	;'F'
  1243  201F  3400               	retlw	0
  1244                           
  1245                           	psect	stringtext4
  1246  2020                     __pstringtext4:	
  1247  2020                     STR_7:	
  1248  2020  344E               	retlw	78	;'N'
  1249  2021  3441               	retlw	65	;'A'
  1250  2022  344E               	retlw	78	;'N'
  1251  2023  3400               	retlw	0
  1252                           
  1253                           	psect	stringtext5
  1254  2024                     __pstringtext5:	
  1255  2024                     STR_4:	
  1256  2024  3469               	retlw	105	;'i'
  1257  2025  346E               	retlw	110	;'n'
  1258  2026  3466               	retlw	102	;'f'
  1259  2027  3400               	retlw	0
  1260                           
  1261                           	psect	stringtext6
  1262  2028                     __pstringtext6:	
  1263  2028                     STR_8:	
  1264  2028  346E               	retlw	110	;'n'
  1265  2029  3461               	retlw	97	;'a'
  1266  202A  346E               	retlw	110	;'n'
  1267  202B  3400               	retlw	0
  1268                           
  1269                           	psect	stringtext7
  1270  202C                     __pstringtext7:	
  1271  202C                     STR_11:	
  1272  202C  346C               	retlw	108	;'l'
  1273  202D  3466               	retlw	102	;'f'
  1274  202E  3400               	retlw	0
  1275                           
  1276                           	psect	stringtext8
  1277  0000                     __pstringtext8:	
  1278  202C                     
  1279                           ; #config settings
  1280  0000                     
  1281                           	psect	cinit
  1282  07E6                     start_initialization:	
  1283  07E6                     __initialization:	
  1284                           
  1285                           ; Clear objects allocated to BANK1
  1286  07E6  0141               	movlb	1	; select bank1
  1287  07E7  01EE               	clrf	__pbssBANK1& (0+127)
  1288  07E8  01EF               	clrf	(__pbssBANK1+1)& (0+127)
  1289                           
  1290                           ; Clear objects allocated to BANK2
  1291  07E9  3064               	movlw	low __pbssBANK2
  1292  07EA  0084               	movwf	4
  1293  07EB  3001               	movlw	high __pbssBANK2
  1294  07EC  0085               	movwf	5
  1295  07ED  300A               	movlw	10
  1296  07EE  3180  2005  3187   	fcall	clear_ram0
  1297                           
  1298                           ; Clear objects allocated to BANK3
  1299  07F1  0143               	movlb	3	; select bank3
  1300  07F2  01A0               	clrf	__pbssBANK3& (0+127)
  1301  07F3  01A1               	clrf	(__pbssBANK3+1)& (0+127)
  1302  07F4  01A2               	clrf	(__pbssBANK3+2)& (0+127)
  1303  07F5  01A3               	clrf	(__pbssBANK3+3)& (0+127)
  1304                           
  1305                           ; Clear objects allocated to BANK4
  1306  07F6  3020               	movlw	low __pbssBANK4
  1307  07F7  0084               	movwf	4
  1308  07F8  3002               	movlw	high __pbssBANK4
  1309  07F9  0085               	movwf	5
  1310  07FA  3050               	movlw	80
  1311  07FB  3180  2005         	fcall	clear_ram0
  1312  07FD                     end_of_initialization:	
  1313                           ;End of C runtime variable initialization code
  1314                           
  1315  07FD                     __end_of__initialization:	
  1316  07FD  0140               	movlb	0
  1317  07FE  318A  2A83         	ljmp	_main	;jump to C main() function
  1318                           
  1319                           	psect	bssBANK1
  1320  00EE                     __pbssBANK1:	
  1321  00EE                     _flags:	
  1322  00EE                     	ds	2
  1323                           
  1324                           	psect	bssBANK2
  1325  0164                     __pbssBANK2:	
  1326  0164                     ___fpclassifyf@F453:	
  1327  0164                     	ds	4
  1328  0168                     _nout:	
  1329  0168                     	ds	2
  1330  016A                     _width:	
  1331  016A                     	ds	2
  1332  016C                     _prec:	
  1333  016C                     	ds	2
  1334                           
  1335                           	psect	bssBANK3
  1336  01A0                     __pbssBANK3:	
  1337  01A0                     floorf@F514:	
  1338  01A0                     	ds	4
  1339                           
  1340                           	psect	bssBANK4
  1341  0220                     __pbssBANK4:	
  1342  0220                     _dbuf:	
  1343  0220                     	ds	80
  1344                           
  1345                           	psect	clrtext
  1346  0005                     clear_ram0:	
  1347                           ;	Called with FSR0 containing the base address, and
  1348                           ;	WREG with the size to clear
  1349                           
  1350  0005  0064               	clrwdt	;clear the watchdog before getting into this loop
  1351  0006                     clrloop0:	
  1352  0006  0180               	clrf	0	;clear RAM location pointed to by FSR
  1353  0007  3101               	addfsr 0,1
  1354  0008  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
  1355  0009  2806               	goto	clrloop0	;have we reached the end yet?
  1356  000A  3400               	retlw	0	;all done for this memory range, return
  1357                           
  1358                           	psect	cstackBANK2
  1359  0120                     __pcstackBANK2:	
  1360  0120                     vfpfcnvrt@done:	
  1361                           
  1362                           ; 2 bytes @ 0x0
  1363  0120                     	ds	2
  1364  0122                     _vfpfcnvrt$665:	
  1365                           
  1366                           ; 2 bytes @ 0x2
  1367  0122                     	ds	2
  1368  0124                     _vfpfcnvrt$666:	
  1369                           
  1370                           ; 2 bytes @ 0x4
  1371  0124                     	ds	2
  1372  0126                     _vfpfcnvrt$670:	
  1373                           
  1374                           ; 2 bytes @ 0x6
  1375  0126                     	ds	2
  1376  0128                     vfpfcnvrt@f:	
  1377                           
  1378                           ; 4 bytes @ 0x8
  1379  0128                     	ds	4
  1380  012C                     vfpfcnvrt@ct:	
  1381                           
  1382                           ; 3 bytes @ 0xC
  1383  012C                     	ds	3
  1384  012F                     vfpfcnvrt@c:	
  1385                           
  1386                           ; 1 bytes @ 0xF
  1387  012F                     	ds	1
  1388  0130                     vfpfcnvrt@fp:	
  1389                           
  1390                           ; 1 bytes @ 0x10
  1391  0130                     	ds	1
  1392  0131                     ?_sprintf:	
  1393  0131                     sprintf@fmt:	
  1394                           ; 2 bytes @ 0x11
  1395                           
  1396                           
  1397                           ; 2 bytes @ 0x11
  1398  0131                     	ds	6
  1399  0137                     sprintf@ret:	
  1400                           
  1401                           ; 2 bytes @ 0x17
  1402  0137                     	ds	2
  1403  0139                     sprintf@s:	
  1404                           
  1405                           ; 1 bytes @ 0x19
  1406  0139                     	ds	1
  1407  013A                     sprintf@ap:	
  1408                           
  1409                           ; 1 bytes @ 0x1A
  1410  013A                     	ds	1
  1411  013B                     sprintf@f:	
  1412                           
  1413                           ; 5 bytes @ 0x1B
  1414  013B                     	ds	5
  1415  0140                     main@buffer1:	
  1416                           
  1417                           ; 16 bytes @ 0x20
  1418  0140                     	ds	16
  1419  0150                     main@volt:	
  1420                           
  1421                           ; 4 bytes @ 0x30
  1422  0150                     	ds	4
  1423  0154                     _main$1282:	
  1424                           
  1425                           ; 4 bytes @ 0x34
  1426  0154                     	ds	4
  1427  0158                     main@temp_reference:	
  1428                           
  1429                           ; 4 bytes @ 0x38
  1430  0158                     	ds	4
  1431  015C                     main@temp_lm35:	
  1432                           
  1433                           ; 4 bytes @ 0x3C
  1434  015C                     	ds	4
  1435  0160                     main@adc1:	
  1436                           
  1437                           ; 2 bytes @ 0x40
  1438  0160                     	ds	2
  1439  0162                     main@adc2:	
  1440                           
  1441                           ; 2 bytes @ 0x42
  1442  0162                     	ds	2
  1443                           
  1444                           	psect	cstackBANK1
  1445  00A0                     __pcstackBANK1:	
  1446  00A0                     ??_efgtoa:	
  1447                           
  1448                           ; 1 bytes @ 0x0
  1449  00A0                     	ds	4
  1450  00A4                     efgtoa@ou:	
  1451                           
  1452                           ; 4 bytes @ 0x4
  1453  00A4                     	ds	4
  1454  00A8                     _efgtoa$639:	
  1455                           
  1456                           ; 2 bytes @ 0x8
  1457  00A8                     	ds	2
  1458  00AA                     _efgtoa$640:	
  1459                           
  1460                           ; 2 bytes @ 0xA
  1461  00AA                     	ds	2
  1462  00AC                     _efgtoa$645:	
  1463                           
  1464                           ; 2 bytes @ 0xC
  1465  00AC                     	ds	2
  1466  00AE                     _efgtoa$649:	
  1467                           
  1468                           ; 2 bytes @ 0xE
  1469  00AE                     	ds	2
  1470  00B0                     _efgtoa$650:	
  1471                           
  1472                           ; 2 bytes @ 0x10
  1473  00B0                     	ds	2
  1474  00B2                     _efgtoa$651:	
  1475                           
  1476                           ; 2 bytes @ 0x12
  1477  00B2                     	ds	2
  1478  00B4                     efgtoa@t:	
  1479                           
  1480                           ; 2 bytes @ 0x14
  1481  00B4                     	ds	2
  1482  00B6                     efgtoa@pp:	
  1483                           
  1484                           ; 2 bytes @ 0x16
  1485  00B6                     	ds	2
  1486  00B8                     efgtoa@m:	
  1487                           
  1488                           ; 2 bytes @ 0x18
  1489  00B8                     	ds	2
  1490  00BA                     efgtoa@ne:	
  1491                           
  1492                           ; 2 bytes @ 0x1A
  1493  00BA                     	ds	2
  1494  00BC                     efgtoa@d:	
  1495                           
  1496                           ; 2 bytes @ 0x1C
  1497  00BC                     	ds	2
  1498  00BE                     efgtoa@sign:	
  1499                           
  1500                           ; 2 bytes @ 0x1E
  1501  00BE                     	ds	2
  1502  00C0                     efgtoa@fp:	
  1503                           
  1504                           ; 1 bytes @ 0x20
  1505  00C0                     	ds	1
  1506  00C1                     efgtoa@p:	
  1507                           
  1508                           ; 2 bytes @ 0x21
  1509  00C1                     	ds	2
  1510  00C3                     efgtoa@nmode:	
  1511                           
  1512                           ; 1 bytes @ 0x23
  1513  00C3                     	ds	1
  1514  00C4                     efgtoa@w:	
  1515                           
  1516                           ; 2 bytes @ 0x24
  1517  00C4                     	ds	2
  1518  00C6                     efgtoa@mode:	
  1519                           
  1520                           ; 1 bytes @ 0x26
  1521  00C6                     	ds	1
  1522  00C7                     efgtoa@h:	
  1523                           
  1524                           ; 4 bytes @ 0x27
  1525  00C7                     	ds	4
  1526  00CB                     efgtoa@l:	
  1527                           
  1528                           ; 4 bytes @ 0x2B
  1529  00CB                     	ds	4
  1530  00CF                     efgtoa@i:	
  1531                           
  1532                           ; 2 bytes @ 0x2F
  1533  00CF                     	ds	2
  1534  00D1                     efgtoa@g:	
  1535                           
  1536                           ; 4 bytes @ 0x31
  1537  00D1                     	ds	4
  1538  00D5                     efgtoa@e:	
  1539                           
  1540                           ; 2 bytes @ 0x35
  1541  00D5                     	ds	2
  1542  00D7                     efgtoa@n:	
  1543                           
  1544                           ; 2 bytes @ 0x37
  1545  00D7                     	ds	2
  1546  00D9                     efgtoa@u:	
  1547                           
  1548                           ; 4 bytes @ 0x39
  1549  00D9                     	ds	4
  1550  00DD                     ??_vfpfcnvrt:	
  1551                           
  1552                           ; 1 bytes @ 0x3D
  1553  00DD                     	ds	6
  1554  00E3                     ?_vfprintf:	
  1555  00E3                     vfprintf@fmt:	
  1556                           ; 2 bytes @ 0x43
  1557                           
  1558                           
  1559                           ; 2 bytes @ 0x43
  1560  00E3                     	ds	2
  1561  00E5                     vfprintf@ap:	
  1562                           
  1563                           ; 1 bytes @ 0x45
  1564  00E5                     	ds	1
  1565  00E6                     ??_vfprintf:	
  1566                           
  1567                           ; 1 bytes @ 0x46
  1568  00E6                     	ds	2
  1569  00E8                     vfprintf@fp:	
  1570                           
  1571                           ; 1 bytes @ 0x48
  1572  00E8                     	ds	1
  1573  00E9                     vfprintf@cfmt:	
  1574                           
  1575                           ; 2 bytes @ 0x49
  1576  00E9                     	ds	2
  1577  00EB                     ??_main:	
  1578                           
  1579                           ; 1 bytes @ 0x4B
  1580  00EB                     	ds	3
  1581                           
  1582                           	psect	cstackCOMMON
  1583  0070                     __pcstackCOMMON:	
  1584  0070                     ?___fleq:	
  1585  0070                     ?_Lcd_Cmd:	
  1586                           ; 1 bit 
  1587                           
  1588  0070                     ??_Lcd_Cmd:	
  1589                           ; 1 bytes @ 0x0
  1590                           
  1591  0070                     ?_Lcd_Chr_CP:	
  1592                           ; 1 bytes @ 0x0
  1593                           
  1594  0070                     ??_Lcd_Chr_CP:	
  1595                           ; 1 bytes @ 0x0
  1596                           
  1597  0070                     ?_strcpy:	
  1598                           ; 1 bytes @ 0x0
  1599                           
  1600  0070                     ?_putch:	
  1601                           ; 1 bytes @ 0x0
  1602                           
  1603  0070                     ??_putch:	
  1604                           ; 1 bytes @ 0x0
  1605                           
  1606  0070                     ?_Lcd_Init:	
  1607                           ; 1 bytes @ 0x0
  1608                           
  1609  0070                     ?_main:	
  1610                           ; 1 bytes @ 0x0
  1611                           
  1612  0070                     ?_fputc:	
  1613                           ; 1 bytes @ 0x0
  1614                           
  1615  0070                     ?_strlen:	
  1616                           ; 2 bytes @ 0x0
  1617                           
  1618  0070                     ?___fpclassifyf:	
  1619                           ; 2 bytes @ 0x0
  1620                           
  1621  0070                     ?_isupper:	
  1622                           ; 2 bytes @ 0x0
  1623                           
  1624  0070                     ?_isdigit:	
  1625                           ; 2 bytes @ 0x0
  1626                           
  1627  0070                     ?_strncmp:	
  1628                           ; 2 bytes @ 0x0
  1629                           
  1630  0070                     ?__Umul8_16:	
  1631                           ; 2 bytes @ 0x0
  1632                           
  1633  0070                     ?_isspace:	
  1634                           ; 2 bytes @ 0x0
  1635                           
  1636  0070                     ?___wmul:	
  1637                           ; 2 bytes @ 0x0
  1638                           
  1639  0070                     ?___awdiv:	
  1640                           ; 2 bytes @ 0x0
  1641                           
  1642  0070                     ?___awmod:	
  1643                           ; 2 bytes @ 0x0
  1644                           
  1645  0070                     ?___flneg:	
  1646                           ; 2 bytes @ 0x0
  1647                           
  1648  0070                     ?___fltol:	
  1649                           ; 4 bytes @ 0x0
  1650                           
  1651  0070                     ?___fladd:	
  1652                           ; 4 bytes @ 0x0
  1653                           
  1654  0070                     ?___xxtofl:	
  1655                           ; 4 bytes @ 0x0
  1656                           
  1657  0070                     putch@c:	
  1658                           ; 4 bytes @ 0x0
  1659                           
  1660  0070                     __Umul8_16@multiplicand:	
  1661                           ; 1 bytes @ 0x0
  1662                           
  1663  0070                     ___wmul@multiplier:	
  1664                           ; 1 bytes @ 0x0
  1665                           
  1666  0070                     ___awdiv@divisor:	
  1667                           ; 2 bytes @ 0x0
  1668                           
  1669  0070                     ___awmod@divisor:	
  1670                           ; 2 bytes @ 0x0
  1671                           
  1672  0070                     isdigit@c:	
  1673                           ; 2 bytes @ 0x0
  1674                           
  1675  0070                     isspace@c:	
  1676                           ; 2 bytes @ 0x0
  1677                           
  1678  0070                     isupper@c:	
  1679                           ; 2 bytes @ 0x0
  1680                           
  1681  0070                     fputc@c:	
  1682                           ; 2 bytes @ 0x0
  1683                           
  1684  0070                     strcpy@src:	
  1685                           ; 2 bytes @ 0x0
  1686                           
  1687  0070                     strncmp@_r:	
  1688                           ; 2 bytes @ 0x0
  1689                           
  1690  0070                     ___fleq@ff1:	
  1691                           ; 2 bytes @ 0x0
  1692                           
  1693  0070                     ___flneg@f1:	
  1694                           ; 4 bytes @ 0x0
  1695                           
  1696  0070                     ___fltol@f1:	
  1697                           ; 4 bytes @ 0x0
  1698                           
  1699  0070                     ___fladd@b:	
  1700                           ; 4 bytes @ 0x0
  1701                           
  1702  0070                     ___xxtofl@val:	
  1703                           ; 4 bytes @ 0x0
  1704                           
  1705  0070                     ___fpclassifyf@x:	
  1706                           ; 4 bytes @ 0x0
  1707                           
  1708                           
  1709                           ; 4 bytes @ 0x0
  1710  0070                     	ds	2
  1711  0072                     ??_strlen:	
  1712  0072                     ??_isupper:	
  1713                           ; 1 bytes @ 0x2
  1714                           
  1715  0072                     ??_strcpy:	
  1716                           ; 1 bytes @ 0x2
  1717                           
  1718  0072                     ??_isdigit:	
  1719                           ; 1 bytes @ 0x2
  1720                           
  1721  0072                     ??__Umul8_16:	
  1722                           ; 1 bytes @ 0x2
  1723                           
  1724  0072                     ??_isspace:	
  1725                           ; 1 bytes @ 0x2
  1726                           
  1727  0072                     Lcd_Chr_CP@data:	
  1728                           ; 1 bytes @ 0x2
  1729                           
  1730  0072                     Lcd_Cmd@data:	
  1731                           ; 1 bytes @ 0x2
  1732                           
  1733  0072                     fputc@fp:	
  1734                           ; 1 bytes @ 0x2
  1735                           
  1736  0072                     ___wmul@multiplicand:	
  1737                           ; 1 bytes @ 0x2
  1738                           
  1739  0072                     ___awdiv@dividend:	
  1740                           ; 2 bytes @ 0x2
  1741                           
  1742  0072                     ___awmod@dividend:	
  1743                           ; 2 bytes @ 0x2
  1744                           
  1745  0072                     strncmp@n:	
  1746                           ; 2 bytes @ 0x2
  1747                           
  1748                           
  1749                           ; 2 bytes @ 0x2
  1750  0072                     	ds	1
  1751  0073                     ??_fputc:	
  1752  0073                     ??_Lcd_Init:	
  1753                           ; 1 bytes @ 0x3
  1754                           
  1755  0073                     ?_Lcd_Out2:	
  1756                           ; 1 bytes @ 0x3
  1757                           
  1758  0073                     Lcd_Out2@x:	
  1759                           ; 1 bytes @ 0x3
  1760                           
  1761                           
  1762                           ; 1 bytes @ 0x3
  1763  0073                     	ds	1
  1764  0074                     ??___fpclassifyf:	
  1765  0074                     ??_strncmp:	
  1766                           ; 1 bytes @ 0x4
  1767                           
  1768  0074                     ??___wmul:	
  1769                           ; 1 bytes @ 0x4
  1770                           
  1771  0074                     ??___awdiv:	
  1772                           ; 1 bytes @ 0x4
  1773                           
  1774  0074                     ??___awmod:	
  1775                           ; 1 bytes @ 0x4
  1776                           
  1777  0074                     ??___flneg:	
  1778                           ; 1 bytes @ 0x4
  1779                           
  1780  0074                     ??___fltol:	
  1781                           ; 1 bytes @ 0x4
  1782                           
  1783  0074                     ??___xxtofl:	
  1784                           ; 1 bytes @ 0x4
  1785                           
  1786  0074                     Lcd_Init@data:	
  1787                           ; 1 bytes @ 0x4
  1788                           
  1789  0074                     Lcd_Out2@buffer:	
  1790                           ; 1 bytes @ 0x4
  1791                           
  1792  0074                     _isspace$1005:	
  1793                           ; 1 bytes @ 0x4
  1794                           
  1795  0074                     ___wmul@product:	
  1796                           ; 1 bytes @ 0x4
  1797                           
  1798  0074                     strcpy@s:	
  1799                           ; 2 bytes @ 0x4
  1800                           
  1801  0074                     __Umul8_16@product:	
  1802                           ; 2 bytes @ 0x4
  1803                           
  1804  0074                     ___fleq@ff2:	
  1805                           ; 2 bytes @ 0x4
  1806                           
  1807  0074                     ___fladd@a:	
  1808                           ; 4 bytes @ 0x4
  1809                           
  1810                           
  1811                           ; 4 bytes @ 0x4
  1812  0074                     	ds	1
  1813  0075                     ??_Lcd_Out2:	
  1814  0075                     ___awdiv@counter:	
  1815                           ; 1 bytes @ 0x5
  1816                           
  1817  0075                     ___awmod@counter:	
  1818                           ; 1 bytes @ 0x5
  1819                           
  1820                           
  1821                           ; 1 bytes @ 0x5
  1822  0075                     	ds	1
  1823  0076                     ?_tolower:	
  1824  0076                     ?_atoi:	
  1825                           ; 2 bytes @ 0x6
  1826                           
  1827  0076                     ___awdiv@sign:	
  1828                           ; 2 bytes @ 0x6
  1829                           
  1830  0076                     ___awmod@sign:	
  1831                           ; 1 bytes @ 0x6
  1832                           
  1833  0076                     strcpy@d:	
  1834                           ; 1 bytes @ 0x6
  1835                           
  1836  0076                     strlen@a:	
  1837                           ; 1 bytes @ 0x6
  1838                           
  1839  0076                     strncmp@_l:	
  1840                           ; 1 bytes @ 0x6
  1841                           
  1842  0076                     atoi@s:	
  1843                           ; 1 bytes @ 0x6
  1844                           
  1845  0076                     tolower@c:	
  1846                           ; 2 bytes @ 0x6
  1847                           
  1848  0076                     __Umul8_16@word_mpld:	
  1849                           ; 2 bytes @ 0x6
  1850                           
  1851                           
  1852                           ; 2 bytes @ 0x6
  1853  0076                     	ds	1
  1854  0077                     Lcd_Out2@y:	
  1855  0077                     strcpy@dest:	
  1856                           ; 1 bytes @ 0x7
  1857                           
  1858  0077                     strlen@s:	
  1859                           ; 1 bytes @ 0x7
  1860                           
  1861  0077                     ___awdiv@quotient:	
  1862                           ; 1 bytes @ 0x7
  1863                           
  1864  0077                     strncmp@r:	
  1865                           ; 2 bytes @ 0x7
  1866                           
  1867                           
  1868                           ; 2 bytes @ 0x7
  1869  0077                     	ds	1
  1870  0078                     ??_tolower:	
  1871  0078                     ??_atoi:	
  1872                           ; 1 bytes @ 0x8
  1873                           
  1874  0078                     ??___fleq:	
  1875                           ; 1 bytes @ 0x8
  1876                           
  1877  0078                     ?_fputs:	
  1878                           ; 1 bytes @ 0x8
  1879                           
  1880  0078                     Lcd_Out2@data:	
  1881                           ; 2 bytes @ 0x8
  1882                           
  1883  0078                     ___fladd@signs:	
  1884                           ; 1 bytes @ 0x8
  1885                           
  1886  0078                     ___xxtofl@sign:	
  1887                           ; 1 bytes @ 0x8
  1888                           
  1889  0078                     fputs@fp:	
  1890                           ; 1 bytes @ 0x8
  1891                           
  1892  0078                     __Umul8_16@multiplier:	
  1893                           ; 1 bytes @ 0x8
  1894                           
  1895                           
  1896                           ; 1 bytes @ 0x8
  1897  0078                     	ds	1
  1898  0079                     ??_fputs:	
  1899  0079                     ___fltol@sign1:	
  1900                           ; 1 bytes @ 0x9
  1901                           
  1902  0079                     ___fladd@aexp:	
  1903                           ; 1 bytes @ 0x9
  1904                           
  1905  0079                     ___xxtofl@exp:	
  1906                           ; 1 bytes @ 0x9
  1907                           
  1908  0079                     strncmp@l:	
  1909                           ; 1 bytes @ 0x9
  1910                           
  1911                           
  1912                           ; 1 bytes @ 0x9
  1913  0079                     	ds	1
  1914  007A                     ___fltol@exp1:	
  1915  007A                     ___fladd@bexp:	
  1916                           ; 1 bytes @ 0xA
  1917                           
  1918  007A                     ___xxtofl@arg:	
  1919                           ; 1 bytes @ 0xA
  1920                           
  1921                           
  1922                           ; 4 bytes @ 0xA
  1923  007A                     	ds	1
  1924  007B                     ___fladd@grs:	
  1925                           
  1926                           ; 1 bytes @ 0xB
  1927  007B                     	ds	1
  1928  007C                     ??_pad:	
  1929  007C                     _tolower$1090:	
  1930                           ; 1 bytes @ 0xC
  1931                           
  1932                           
  1933                           ; 2 bytes @ 0xC
  1934  007C                     	ds	2
  1935  007E                     ??___flsub:	
  1936                           
  1937                           	psect	cstackBANK0
  1938  0020                     __pcstackBANK0:	
  1939                           ; 1 bytes @ 0xE
  1940                           
  1941  0020                     ??___fladd:	
  1942  0020                     ?___flmul:	
  1943                           ; 1 bytes @ 0x0
  1944                           
  1945  0020                     fputs@c:	
  1946                           ; 4 bytes @ 0x0
  1947                           
  1948  0020                     ___fpclassifyf@e:	
  1949                           ; 1 bytes @ 0x0
  1950                           
  1951  0020                     atoi@neg:	
  1952                           ; 2 bytes @ 0x0
  1953                           
  1954  0020                     ___flmul@b:	
  1955                           ; 2 bytes @ 0x0
  1956                           
  1957                           
  1958                           ; 4 bytes @ 0x0
  1959  0020                     	ds	1
  1960  0021                     fputs@i:	
  1961                           
  1962                           ; 2 bytes @ 0x1
  1963  0021                     	ds	1
  1964  0022                     _atoi$974:	
  1965  0022                     ___fpclassifyf@u:	
  1966                           ; 2 bytes @ 0x2
  1967                           
  1968                           
  1969                           ; 4 bytes @ 0x2
  1970  0022                     	ds	1
  1971  0023                     fputs@s:	
  1972                           
  1973                           ; 1 bytes @ 0x3
  1974  0023                     	ds	1
  1975  0024                     ?_pad:	
  1976  0024                     pad@buf:	
  1977                           ; 2 bytes @ 0x4
  1978                           
  1979  0024                     _atoi$976:	
  1980                           ; 1 bytes @ 0x4
  1981                           
  1982  0024                     ___flmul@a:	
  1983                           ; 2 bytes @ 0x4
  1984                           
  1985                           
  1986                           ; 4 bytes @ 0x4
  1987  0024                     	ds	1
  1988  0025                     pad@p:	
  1989                           
  1990                           ; 2 bytes @ 0x5
  1991  0025                     	ds	1
  1992  0026                     _atoi$975:	
  1993                           
  1994                           ; 1 bytes @ 0x6
  1995  0026                     	ds	1
  1996  0027                     pad@i:	
  1997  0027                     atoi@n:	
  1998                           ; 2 bytes @ 0x7
  1999                           
  2000                           
  2001                           ; 2 bytes @ 0x7
  2002  0027                     	ds	1
  2003  0028                     ??___flmul:	
  2004                           
  2005                           ; 1 bytes @ 0x8
  2006  0028                     	ds	1
  2007  0029                     pad@w:	
  2008                           
  2009                           ; 2 bytes @ 0x9
  2010  0029                     	ds	2
  2011  002B                     pad@fp:	
  2012                           
  2013                           ; 1 bytes @ 0xB
  2014  002B                     	ds	2
  2015  002D                     ___flmul@sign:	
  2016                           
  2017                           ; 1 bytes @ 0xD
  2018  002D                     	ds	1
  2019  002E                     ___flmul@grs:	
  2020                           
  2021                           ; 4 bytes @ 0xE
  2022  002E                     	ds	4
  2023  0032                     ___flmul@aexp:	
  2024                           
  2025                           ; 1 bytes @ 0x12
  2026  0032                     	ds	1
  2027  0033                     ___flmul@bexp:	
  2028                           
  2029                           ; 1 bytes @ 0x13
  2030  0033                     	ds	1
  2031  0034                     ___flmul@prod:	
  2032                           
  2033                           ; 4 bytes @ 0x14
  2034  0034                     	ds	4
  2035  0038                     ___flmul@temp:	
  2036                           
  2037                           ; 2 bytes @ 0x18
  2038  0038                     	ds	2
  2039  003A                     ?___flge:	
  2040  003A                     ?___flsub:	
  2041                           ; 1 bit 
  2042                           
  2043  003A                     ?___fldiv:	
  2044                           ; 4 bytes @ 0x1A
  2045                           
  2046  003A                     ___flge@ff1:	
  2047                           ; 4 bytes @ 0x1A
  2048                           
  2049  003A                     ___flsub@a:	
  2050                           ; 4 bytes @ 0x1A
  2051                           
  2052  003A                     ___fldiv@a:	
  2053                           ; 4 bytes @ 0x1A
  2054                           
  2055                           
  2056                           ; 4 bytes @ 0x1A
  2057  003A                     	ds	4
  2058  003E                     ___flge@ff2:	
  2059  003E                     ___flsub@b:	
  2060                           ; 4 bytes @ 0x1E
  2061                           
  2062  003E                     ___fldiv@b:	
  2063                           ; 4 bytes @ 0x1E
  2064                           
  2065                           
  2066                           ; 4 bytes @ 0x1E
  2067  003E                     	ds	4
  2068  0042                     ??___flge:	
  2069  0042                     ??___fldiv:	
  2070                           ; 1 bytes @ 0x22
  2071                           
  2072                           
  2073                           ; 1 bytes @ 0x22
  2074  0042                     	ds	5
  2075  0047                     ___fldiv@rem:	
  2076                           
  2077                           ; 4 bytes @ 0x27
  2078  0047                     	ds	4
  2079  004B                     ___fldiv@sign:	
  2080                           
  2081                           ; 1 bytes @ 0x2B
  2082  004B                     	ds	1
  2083  004C                     ___fldiv@new_exp:	
  2084                           
  2085                           ; 2 bytes @ 0x2C
  2086  004C                     	ds	2
  2087  004E                     ___fldiv@grs:	
  2088                           
  2089                           ; 4 bytes @ 0x2E
  2090  004E                     	ds	4
  2091  0052                     ___fldiv@bexp:	
  2092                           
  2093                           ; 1 bytes @ 0x32
  2094  0052                     	ds	1
  2095  0053                     ___fldiv@aexp:	
  2096                           
  2097                           ; 1 bytes @ 0x33
  2098  0053                     	ds	1
  2099  0054                     ?_floorf:	
  2100  0054                     floorf@x:	
  2101                           ; 4 bytes @ 0x34
  2102                           
  2103                           
  2104                           ; 4 bytes @ 0x34
  2105  0054                     	ds	4
  2106  0058                     ??_floorf:	
  2107                           
  2108                           ; 1 bytes @ 0x38
  2109  0058                     	ds	6
  2110  005E                     floorf@m:	
  2111                           
  2112                           ; 4 bytes @ 0x3E
  2113  005E                     	ds	4
  2114  0062                     floorf@e:	
  2115                           
  2116                           ; 2 bytes @ 0x42
  2117  0062                     	ds	2
  2118  0064                     floorf@u:	
  2119                           
  2120                           ; 4 bytes @ 0x44
  2121  0064                     	ds	4
  2122  0068                     ?_efgtoa:	
  2123  0068                     efgtoa@f:	
  2124                           ; 2 bytes @ 0x48
  2125                           
  2126                           
  2127                           ; 4 bytes @ 0x48
  2128  0068                     	ds	4
  2129  006C                     efgtoa@c:	
  2130                           
  2131                           ; 1 bytes @ 0x4C
  2132  006C                     	ds	1
  2133  006D                     ?_vfpfcnvrt:	
  2134  006D                     vfpfcnvrt@fmt:	
  2135                           ; 2 bytes @ 0x4D
  2136                           
  2137                           
  2138                           ; 1 bytes @ 0x4D
  2139  006D                     	ds	1
  2140  006E                     vfpfcnvrt@ap:	
  2141                           
  2142                           ; 1 bytes @ 0x4E
  2143  006E                     	ds	1
  2144  006F                     ??_sprintf:	
  2145                           
  2146                           ; 1 bytes @ 0x4F
  2147  006F                     	ds	1
  2148                           
  2149                           	psect	maintext
  2150  0A83                     __pmaintext:	
  2151 ;;
  2152 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
  2153 ;;
  2154 ;; *************** function _main *****************
  2155 ;; Defined at:
  2156 ;;		line 19 in file "main.c"
  2157 ;; Parameters:    Size  Location     Type
  2158 ;;		None
  2159 ;; Auto vars:     Size  Location     Type
  2160 ;;  buffer1        16   32[BANK2 ] unsigned char [16]
  2161 ;;  temp_lm35       4   60[BANK2 ] float 
  2162 ;;  temp_referen    4   56[BANK2 ] float 
  2163 ;;  volt            4   48[BANK2 ] float 
  2164 ;;  adc2            2   66[BANK2 ] int 
  2165 ;;  adc1            2   64[BANK2 ] int 
  2166 ;; Return value:  Size  Location     Type
  2167 ;;                  1    wreg      void 
  2168 ;; Registers used:
  2169 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2170 ;; Tracked objects:
  2171 ;;		On entry : B3F/0
  2172 ;;		On exit  : 0/0
  2173 ;;		Unchanged: 0/0
  2174 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
  2175 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  2176 ;;      Locals:         0       0       0      36       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  2177 ;;      Temps:          0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  2178 ;;      Totals:         0       0       3      36       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  2179 ;;Total ram usage:       39 bytes
  2180 ;; Hardware stack levels required when called:    8
  2181 ;; This function calls:
  2182 ;;		_Lcd_Cmd
  2183 ;;		_Lcd_Init
  2184 ;;		_Lcd_Out2
  2185 ;;		___fladd
  2186 ;;		___fldiv
  2187 ;;		___flge
  2188 ;;		___flmul
  2189 ;;		___xxtofl
  2190 ;;		_sprintf
  2191 ;; This function is called by:
  2192 ;;		Startup code after reset
  2193 ;; This function uses a non-reentrant model
  2194 ;;
  2195                           
  2196                           
  2197                           ;psect for function _main
  2198  0A83                     _main:	
  2199                           
  2200                           ;main.c: 22:     int adc1, adc2;;main.c: 23:     float temp_reference, temp_lm35, volt;;
      +                          main.c: 24:     unsigned char buffer1[16];;main.c: 28:      OSCFRQbits.HFFRQ=0b110;
  2201                           
  2202                           ;incstack = 0
  2203                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  2204  0A83  0151               	movlb	17	; select bank17
  2205  0A84  0813               	movf	19,w	;volatile
  2206  0A85  39F8               	andlw	-8
  2207  0A86  3806               	iorlw	6
  2208  0A87  0093               	movwf	19	;volatile
  2209                           
  2210                           ;main.c: 33:     ANSELC=0b00000000;
  2211  0A88  017E               	movlb	62	; select bank62
  2212  0A89  01CE               	clrf	78	;volatile
  2213                           
  2214                           ;main.c: 34:     ANSELD=0b00000000;
  2215  0A8A  01D9               	clrf	89	;volatile
  2216                           
  2217                           ;main.c: 37:     ANSELCbits.ANSC2=0;
  2218  0A8B  114E               	bcf	78,2	;volatile
  2219                           
  2220                           ;main.c: 38:     TRISCbits.TRISC2=0;
  2221  0A8C  0140               	movlb	0	; select bank0
  2222  0A8D  1113               	bcf	19,2	;volatile
  2223                           
  2224                           ;main.c: 41:  ANSELAbits.ANSA0=1;
  2225  0A8E  017E               	movlb	62	; select bank62
  2226  0A8F  1438               	bsf	56,0	;volatile
  2227                           
  2228                           ;main.c: 42:     TRISAbits.TRISA0=1;
  2229  0A90  0140               	movlb	0	; select bank0
  2230  0A91  1411               	bsf	17,0	;volatile
  2231                           
  2232                           ;main.c: 43:     TRISAbits.TRISA1=1;
  2233  0A92  1491               	bsf	17,1	;volatile
  2234                           
  2235                           ;main.c: 44:     ANSELAbits.ANSA1=1;
  2236  0A93  017E               	movlb	62	; select bank62
  2237  0A94  14B8               	bsf	56,1	;volatile
  2238                           
  2239                           ;main.c: 48:       ADCON0bits.ADON=1;
  2240  0A95  0141               	movlb	1	; select bank1
  2241  0A96  1793               	bsf	19,7	;volatile
  2242                           
  2243                           ;main.c: 49:       ADCON0bits.ADCONT=0;
  2244  0A97  1313               	bcf	19,6	;volatile
  2245                           
  2246                           ;main.c: 50:       ADCON0bits.ADCS=1;
  2247  0A98  1613               	bsf	19,4	;volatile
  2248                           
  2249                           ;main.c: 51:       ADCON0bits.ADFRM=1;
  2250  0A99  0813               	movf	19,w	;volatile
  2251  0A9A  39F3               	andlw	-13
  2252  0A9B  3804               	iorlw	4
  2253  0A9C  0093               	movwf	19	;volatile
  2254                           
  2255                           ;main.c: 52:       ADREFbits.ADNREF=0;
  2256  0A9D  121A               	bcf	26,4	;volatile
  2257                           
  2258                           ;main.c: 53:       ADREFbits.ADPREF=0b00;
  2259  0A9E  30FC               	movlw	-4
  2260  0A9F  059A               	andwf	26,f	;volatile
  2261                           
  2262                           ;main.c: 59:       Lcd_Init();
  2263  0AA0  3180  200B  318A   	fcall	_Lcd_Init
  2264                           
  2265                           ;main.c: 60:     Lcd_Cmd(1);
  2266  0AA3  3001               	movlw	1
  2267  0AA4  3191  216B  318A   	fcall	_Lcd_Cmd
  2268                           
  2269                           ;main.c: 61:     Lcd_Cmd(12);
  2270  0AA7  300C               	movlw	12
  2271  0AA8  3191  216B  318A   	fcall	_Lcd_Cmd
  2272                           
  2273                           ;main.c: 62:     _delay((unsigned long)((100)*(32000000/4000.0)));
  2274  0AAB  3005               	movlw	5
  2275  0AAC  0141               	movlb	1	; select bank1
  2276  0AAD  00EC               	movwf	(??_main^(0+128)+1)
  2277  0AAE  300F               	movlw	15
  2278  0AAF  00EB               	movwf	??_main^(0+128)
  2279  0AB0  30F1               	movlw	241
  2280  0AB1                     u6057:	
  2281  0AB1  0B89               	decfsz	9,f
  2282  0AB2  2AB1               	goto	u6057
  2283  0AB3  0BEB               	decfsz	??_main^(0+128),f
  2284  0AB4  2AB1               	goto	u6057
  2285  0AB5  0BEC               	decfsz	(??_main^(0+128)+1),f
  2286  0AB6  2AB1               	goto	u6057
  2287  0AB7                     l4217:	
  2288                           ;main.c: 65:         while (1){
  2289                           
  2290                           
  2291                           ;main.c: 67:             ADPCH=0b000001;
  2292  0AB7  3001               	movlw	1
  2293  0AB8  0141               	movlb	1	; select bank1
  2294  0AB9  009E               	movwf	30	;volatile
  2295                           
  2296                           ;main.c: 68:                 _delay((unsigned long)((20)*(32000000/4000000.0)));
  2297  0ABA  3035               	movlw	53
  2298  0ABB                     u6067:	
  2299  0ABB  0B89               	decfsz	9,f
  2300  0ABC  2ABB               	goto	u6067
  2301  0ABD  0000               	nop
  2302                           
  2303                           ;main.c: 69:          ADCON0bits.ADGO=1;
  2304  0ABE  0141               	movlb	1	; select bank1
  2305  0ABF  1413               	bsf	19,0	;volatile
  2306  0AC0                     l83:	
  2307                           ;main.c: 70:          while(ADCON0bits.ADGO==1);
  2308                           
  2309  0AC0  1813               	btfsc	19,0	;volatile
  2310  0AC1  2AC0               	goto	l83
  2311                           
  2312                           ;main.c: 71:          adc1=ADRESH;
  2313  0AC2  080D               	movf	13,w	;volatile
  2314  0AC3  00EB               	movwf	??_main^(0+128)
  2315  0AC4  01EC               	clrf	(??_main^(0+128)+1)
  2316  0AC5  086B               	movf	??_main^(0+128),w
  2317  0AC6  0142               	movlb	2	; select bank2
  2318  0AC7  00E0               	movwf	main@adc1^(0+256)
  2319  0AC8  0141               	movlb	1	; select bank1
  2320  0AC9  086C               	movf	(??_main+1)^(0+128),w
  2321  0ACA  0142               	movlb	2	; select bank2
  2322  0ACB  00E1               	movwf	(main@adc1+1)^(0+256)
  2323                           
  2324                           ;main.c: 72:          adc1=adc1<<8;
  2325  0ACC  0861               	movf	(main@adc1+1)^(0+256),w
  2326  0ACD  0141               	movlb	1	; select bank1
  2327  0ACE  00EC               	movwf	(??_main^(0+128)+1)
  2328  0ACF  0142               	movlb	2	; select bank2
  2329  0AD0  0860               	movf	main@adc1^(0+256),w
  2330  0AD1  0141               	movlb	1	; select bank1
  2331  0AD2  00EB               	movwf	??_main^(0+128)
  2332  0AD3  086B               	movf	??_main^(0+128),w
  2333  0AD4  00EC               	movwf	(??_main^(0+128)+1)
  2334  0AD5  01EB               	clrf	??_main^(0+128)
  2335  0AD6  086B               	movf	??_main^(0+128),w
  2336  0AD7  0142               	movlb	2	; select bank2
  2337  0AD8  00E0               	movwf	main@adc1^(0+256)
  2338  0AD9  0141               	movlb	1	; select bank1
  2339  0ADA  086C               	movf	(??_main+1)^(0+128),w
  2340  0ADB  0142               	movlb	2	; select bank2
  2341  0ADC  00E1               	movwf	(main@adc1+1)^(0+256)
  2342                           
  2343                           ;main.c: 73:          adc1=adc1+ADRESL;
  2344  0ADD  0141               	movlb	1	; select bank1
  2345  0ADE  080C               	movf	12,w	;volatile
  2346  0ADF  0142               	movlb	2	; select bank2
  2347  0AE0  0760               	addwf	main@adc1^(0+256),w
  2348  0AE1  0141               	movlb	1	; select bank1
  2349  0AE2  00EB               	movwf	??_main^(0+128)
  2350  0AE3  0142               	movlb	2	; select bank2
  2351  0AE4  0861               	movf	(main@adc1+1)^(0+256),w
  2352  0AE5  1803               	skipnc
  2353  0AE6  0A61               	incf	(main@adc1+1)^(0+256),w
  2354  0AE7  0141               	movlb	1	; select bank1
  2355  0AE8  00EC               	movwf	(??_main^(0+128)+1)
  2356  0AE9  086B               	movf	??_main^(0+128),w
  2357  0AEA  0142               	movlb	2	; select bank2
  2358  0AEB  00E0               	movwf	main@adc1^(0+256)
  2359  0AEC  0141               	movlb	1	; select bank1
  2360  0AED  086C               	movf	(??_main+1)^(0+128),w
  2361  0AEE  0142               	movlb	2	; select bank2
  2362  0AEF  00E1               	movwf	(main@adc1+1)^(0+256)
  2363                           
  2364                           ;main.c: 74:          volt=adc1*5.0/1024.0;
  2365  0AF0  3044               	movlw	68
  2366  0AF1  0140               	movlb	0	; select bank0
  2367  0AF2  00BD               	movwf	___fldiv@a+3
  2368  0AF3  3080               	movlw	128
  2369  0AF4  00BC               	movwf	___fldiv@a+2
  2370  0AF5  3000               	movlw	0
  2371  0AF6  00BB               	movwf	___fldiv@a+1
  2372  0AF7  3000               	movlw	0
  2373  0AF8  00BA               	movwf	___fldiv@a
  2374  0AF9  3040               	movlw	64
  2375  0AFA  00A3               	movwf	___flmul@b+3
  2376  0AFB  30A0               	movlw	160
  2377  0AFC  00A2               	movwf	___flmul@b+2
  2378  0AFD  3000               	movlw	0
  2379  0AFE  00A1               	movwf	___flmul@b+1
  2380  0AFF  3000               	movlw	0
  2381  0B00  00A0               	movwf	___flmul@b
  2382  0B01  0142               	movlb	2	; select bank2
  2383  0B02  0860               	movf	main@adc1^(0+256),w
  2384  0B03  00F0               	movwf	___xxtofl@val
  2385  0B04  0861               	movf	(main@adc1+1)^(0+256),w
  2386  0B05  00F1               	movwf	___xxtofl@val+1
  2387  0B06  0D89               	rlf	9,f
  2388  0B07  3B89               	subwfb	9,f
  2389  0B08  0989               	comf	9,f
  2390  0B09  00F2               	movwf	___xxtofl@val+2
  2391  0B0A  00F3               	movwf	___xxtofl@val+3
  2392  0B0B  3001               	movlw	1
  2393  0B0C  3191  21FE  318A   	fcall	___xxtofl
  2394  0B0F  0873               	movf	?___xxtofl+3,w
  2395  0B10  0140               	movlb	0	; select bank0
  2396  0B11  00A7               	movwf	___flmul@a+3
  2397  0B12  0872               	movf	?___xxtofl+2,w
  2398  0B13  00A6               	movwf	___flmul@a+2
  2399  0B14  0871               	movf	?___xxtofl+1,w
  2400  0B15  00A5               	movwf	___flmul@a+1
  2401  0B16  0870               	movf	?___xxtofl,w
  2402  0B17  00A4               	movwf	___flmul@a
  2403  0B18  3188  2057  318A   	fcall	___flmul
  2404  0B1B  0140               	movlb	0	; select bank0
  2405  0B1C  0823               	movf	?___flmul+3,w
  2406  0B1D  00C1               	movwf	___fldiv@b+3
  2407  0B1E  0822               	movf	?___flmul+2,w
  2408  0B1F  00C0               	movwf	___fldiv@b+2
  2409  0B20  0821               	movf	?___flmul+1,w
  2410  0B21  00BF               	movwf	___fldiv@b+1
  2411  0B22  0820               	movf	?___flmul,w
  2412  0B23  00BE               	movwf	___fldiv@b
  2413  0B24  3194  246C  318A   	fcall	___fldiv
  2414  0B27  0140               	movlb	0	; select bank0
  2415  0B28  083D               	movf	?___fldiv+3,w
  2416  0B29  0142               	movlb	2	; select bank2
  2417  0B2A  00D3               	movwf	(main@volt+3)^(0+256)
  2418  0B2B  0140               	movlb	0	; select bank0
  2419  0B2C  083C               	movf	?___fldiv+2,w
  2420  0B2D  0142               	movlb	2	; select bank2
  2421  0B2E  00D2               	movwf	(main@volt+2)^(0+256)
  2422  0B2F  0140               	movlb	0	; select bank0
  2423  0B30  083B               	movf	?___fldiv+1,w
  2424  0B31  0142               	movlb	2	; select bank2
  2425  0B32  00D1               	movwf	(main@volt+1)^(0+256)
  2426  0B33  0140               	movlb	0	; select bank0
  2427  0B34  083A               	movf	?___fldiv,w
  2428  0B35  0142               	movlb	2	; select bank2
  2429  0B36  00D0               	movwf	main@volt^(0+256)
  2430                           
  2431                           ;main.c: 75:          temp_lm35=volt*100;
  2432  0B37  3042               	movlw	66
  2433  0B38  0140               	movlb	0	; select bank0
  2434  0B39  00A3               	movwf	___flmul@b+3
  2435  0B3A  30C8               	movlw	200
  2436  0B3B  00A2               	movwf	___flmul@b+2
  2437  0B3C  3000               	movlw	0
  2438  0B3D  00A1               	movwf	___flmul@b+1
  2439  0B3E  3000               	movlw	0
  2440  0B3F  00A0               	movwf	___flmul@b
  2441  0B40  0142               	movlb	2	; select bank2
  2442  0B41  0853               	movf	(main@volt+3)^(0+256),w
  2443  0B42  0140               	movlb	0	; select bank0
  2444  0B43  00A7               	movwf	___flmul@a+3
  2445  0B44  0142               	movlb	2	; select bank2
  2446  0B45  0852               	movf	(main@volt+2)^(0+256),w
  2447  0B46  0140               	movlb	0	; select bank0
  2448  0B47  00A6               	movwf	___flmul@a+2
  2449  0B48  0142               	movlb	2	; select bank2
  2450  0B49  0851               	movf	(main@volt+1)^(0+256),w
  2451  0B4A  0140               	movlb	0	; select bank0
  2452  0B4B  00A5               	movwf	___flmul@a+1
  2453  0B4C  0142               	movlb	2	; select bank2
  2454  0B4D  0850               	movf	main@volt^(0+256),w
  2455  0B4E  0140               	movlb	0	; select bank0
  2456  0B4F  00A4               	movwf	___flmul@a
  2457  0B50  3188  2057  318A   	fcall	___flmul
  2458  0B53  0140               	movlb	0	; select bank0
  2459  0B54  0823               	movf	?___flmul+3,w
  2460  0B55  0142               	movlb	2	; select bank2
  2461  0B56  00DF               	movwf	(main@temp_lm35+3)^(0+256)
  2462  0B57  0140               	movlb	0	; select bank0
  2463  0B58  0822               	movf	?___flmul+2,w
  2464  0B59  0142               	movlb	2	; select bank2
  2465  0B5A  00DE               	movwf	(main@temp_lm35+2)^(0+256)
  2466  0B5B  0140               	movlb	0	; select bank0
  2467  0B5C  0821               	movf	?___flmul+1,w
  2468  0B5D  0142               	movlb	2	; select bank2
  2469  0B5E  00DD               	movwf	(main@temp_lm35+1)^(0+256)
  2470  0B5F  0140               	movlb	0	; select bank0
  2471  0B60  0820               	movf	?___flmul,w
  2472  0B61  0142               	movlb	2	; select bank2
  2473  0B62  00DC               	movwf	main@temp_lm35^(0+256)
  2474                           
  2475                           ;main.c: 79:           ADPCH=0b000000;
  2476  0B63  0141               	movlb	1	; select bank1
  2477  0B64  019E               	clrf	30	;volatile
  2478                           
  2479                           ;main.c: 80:           _delay((unsigned long)((20)*(32000000/4000000.0)));
  2480  0B65  3035               	movlw	53
  2481  0B66                     u6077:	
  2482  0B66  0B89               	decfsz	9,f
  2483  0B67  2B66               	goto	u6077
  2484  0B68  0000               	nop
  2485                           
  2486                           ;main.c: 81:            ADCON0bits.ADGO=1;
  2487  0B69  0141               	movlb	1	; select bank1
  2488  0B6A  1413               	bsf	19,0	;volatile
  2489  0B6B                     l86:	
  2490                           ;main.c: 82:            while(ADCON0bits.ADGO==1);
  2491                           
  2492  0B6B  1813               	btfsc	19,0	;volatile
  2493  0B6C  2B6B               	goto	l86
  2494                           
  2495                           ;main.c: 83:          adc2=ADRESH;
  2496  0B6D  080D               	movf	13,w	;volatile
  2497  0B6E  00EB               	movwf	??_main^(0+128)
  2498  0B6F  01EC               	clrf	(??_main^(0+128)+1)
  2499  0B70  086B               	movf	??_main^(0+128),w
  2500  0B71  0142               	movlb	2	; select bank2
  2501  0B72  00E2               	movwf	main@adc2^(0+256)
  2502  0B73  0141               	movlb	1	; select bank1
  2503  0B74  086C               	movf	(??_main+1)^(0+128),w
  2504  0B75  0142               	movlb	2	; select bank2
  2505  0B76  00E3               	movwf	(main@adc2+1)^(0+256)
  2506                           
  2507                           ;main.c: 84:          adc2=adc2<<8;
  2508  0B77  0863               	movf	(main@adc2+1)^(0+256),w
  2509  0B78  0141               	movlb	1	; select bank1
  2510  0B79  00EC               	movwf	(??_main^(0+128)+1)
  2511  0B7A  0142               	movlb	2	; select bank2
  2512  0B7B  0862               	movf	main@adc2^(0+256),w
  2513  0B7C  0141               	movlb	1	; select bank1
  2514  0B7D  00EB               	movwf	??_main^(0+128)
  2515  0B7E  086B               	movf	??_main^(0+128),w
  2516  0B7F  00EC               	movwf	(??_main^(0+128)+1)
  2517  0B80  01EB               	clrf	??_main^(0+128)
  2518  0B81  086B               	movf	??_main^(0+128),w
  2519  0B82  0142               	movlb	2	; select bank2
  2520  0B83  00E2               	movwf	main@adc2^(0+256)
  2521  0B84  0141               	movlb	1	; select bank1
  2522  0B85  086C               	movf	(??_main+1)^(0+128),w
  2523  0B86  0142               	movlb	2	; select bank2
  2524  0B87  00E3               	movwf	(main@adc2+1)^(0+256)
  2525                           
  2526                           ;main.c: 85:          adc2=adc2+ADRESL;
  2527  0B88  0141               	movlb	1	; select bank1
  2528  0B89  080C               	movf	12,w	;volatile
  2529  0B8A  0142               	movlb	2	; select bank2
  2530  0B8B  0762               	addwf	main@adc2^(0+256),w
  2531  0B8C  0141               	movlb	1	; select bank1
  2532  0B8D  00EB               	movwf	??_main^(0+128)
  2533  0B8E  0142               	movlb	2	; select bank2
  2534  0B8F  0863               	movf	(main@adc2+1)^(0+256),w
  2535  0B90  1803               	skipnc
  2536  0B91  0A63               	incf	(main@adc2+1)^(0+256),w
  2537  0B92  0141               	movlb	1	; select bank1
  2538  0B93  00EC               	movwf	(??_main^(0+128)+1)
  2539  0B94  086B               	movf	??_main^(0+128),w
  2540  0B95  0142               	movlb	2	; select bank2
  2541  0B96  00E2               	movwf	main@adc2^(0+256)
  2542  0B97  0141               	movlb	1	; select bank1
  2543  0B98  086C               	movf	(??_main+1)^(0+128),w
  2544  0B99  0142               	movlb	2	; select bank2
  2545  0B9A  00E3               	movwf	(main@adc2+1)^(0+256)
  2546                           
  2547                           ;main.c: 86:          temp_reference=(adc2*5.0/1024.0)*16;
  2548  0B9B  3044               	movlw	68
  2549  0B9C  0140               	movlb	0	; select bank0
  2550  0B9D  00BD               	movwf	___fldiv@a+3
  2551  0B9E  3080               	movlw	128
  2552  0B9F  00BC               	movwf	___fldiv@a+2
  2553  0BA0  3000               	movlw	0
  2554  0BA1  00BB               	movwf	___fldiv@a+1
  2555  0BA2  3000               	movlw	0
  2556  0BA3  00BA               	movwf	___fldiv@a
  2557  0BA4  3040               	movlw	64
  2558  0BA5  00A3               	movwf	___flmul@b+3
  2559  0BA6  30A0               	movlw	160
  2560  0BA7  00A2               	movwf	___flmul@b+2
  2561  0BA8  3000               	movlw	0
  2562  0BA9  00A1               	movwf	___flmul@b+1
  2563  0BAA  3000               	movlw	0
  2564  0BAB  00A0               	movwf	___flmul@b
  2565  0BAC  0142               	movlb	2	; select bank2
  2566  0BAD  0862               	movf	main@adc2^(0+256),w
  2567  0BAE  00F0               	movwf	___xxtofl@val
  2568  0BAF  0863               	movf	(main@adc2+1)^(0+256),w
  2569  0BB0  00F1               	movwf	___xxtofl@val+1
  2570  0BB1  0D89               	rlf	9,f
  2571  0BB2  3B89               	subwfb	9,f
  2572  0BB3  0989               	comf	9,f
  2573  0BB4  00F2               	movwf	___xxtofl@val+2
  2574  0BB5  00F3               	movwf	___xxtofl@val+3
  2575  0BB6  3001               	movlw	1
  2576  0BB7  3191  21FE  318A   	fcall	___xxtofl
  2577  0BBA  0873               	movf	?___xxtofl+3,w
  2578  0BBB  0140               	movlb	0	; select bank0
  2579  0BBC  00A7               	movwf	___flmul@a+3
  2580  0BBD  0872               	movf	?___xxtofl+2,w
  2581  0BBE  00A6               	movwf	___flmul@a+2
  2582  0BBF  0871               	movf	?___xxtofl+1,w
  2583  0BC0  00A5               	movwf	___flmul@a+1
  2584  0BC1  0870               	movf	?___xxtofl,w
  2585  0BC2  00A4               	movwf	___flmul@a
  2586  0BC3  3188  2057  318A   	fcall	___flmul
  2587  0BC6  0140               	movlb	0	; select bank0
  2588  0BC7  0823               	movf	?___flmul+3,w
  2589  0BC8  00C1               	movwf	___fldiv@b+3
  2590  0BC9  0822               	movf	?___flmul+2,w
  2591  0BCA  00C0               	movwf	___fldiv@b+2
  2592  0BCB  0821               	movf	?___flmul+1,w
  2593  0BCC  00BF               	movwf	___fldiv@b+1
  2594  0BCD  0820               	movf	?___flmul,w
  2595  0BCE  00BE               	movwf	___fldiv@b
  2596  0BCF  3194  246C  318A   	fcall	___fldiv
  2597  0BD2  0140               	movlb	0	; select bank0
  2598  0BD3  083D               	movf	?___fldiv+3,w
  2599  0BD4  0142               	movlb	2	; select bank2
  2600  0BD5  00D7               	movwf	(_main$1282+3)^(0+256)
  2601  0BD6  0140               	movlb	0	; select bank0
  2602  0BD7  083C               	movf	?___fldiv+2,w
  2603  0BD8  0142               	movlb	2	; select bank2
  2604  0BD9  00D6               	movwf	(_main$1282+2)^(0+256)
  2605  0BDA  0140               	movlb	0	; select bank0
  2606  0BDB  083B               	movf	?___fldiv+1,w
  2607  0BDC  0142               	movlb	2	; select bank2
  2608  0BDD  00D5               	movwf	(_main$1282+1)^(0+256)
  2609  0BDE  0140               	movlb	0	; select bank0
  2610  0BDF  083A               	movf	?___fldiv,w
  2611  0BE0  0142               	movlb	2	; select bank2
  2612  0BE1  00D4               	movwf	_main$1282^(0+256)
  2613                           
  2614                           ;main.c: 86:          temp_reference=(adc2*5.0/1024.0)*16;
  2615  0BE2  3041               	movlw	65
  2616  0BE3  0140               	movlb	0	; select bank0
  2617  0BE4  00A3               	movwf	___flmul@b+3
  2618  0BE5  3080               	movlw	128
  2619  0BE6  00A2               	movwf	___flmul@b+2
  2620  0BE7  3000               	movlw	0
  2621  0BE8  00A1               	movwf	___flmul@b+1
  2622  0BE9  3000               	movlw	0
  2623  0BEA  00A0               	movwf	___flmul@b
  2624  0BEB  0142               	movlb	2	; select bank2
  2625  0BEC  0857               	movf	(_main$1282+3)^(0+256),w
  2626  0BED  0140               	movlb	0	; select bank0
  2627  0BEE  00A7               	movwf	___flmul@a+3
  2628  0BEF  0142               	movlb	2	; select bank2
  2629  0BF0  0856               	movf	(_main$1282+2)^(0+256),w
  2630  0BF1  0140               	movlb	0	; select bank0
  2631  0BF2  00A6               	movwf	___flmul@a+2
  2632  0BF3  0142               	movlb	2	; select bank2
  2633  0BF4  0855               	movf	(_main$1282+1)^(0+256),w
  2634  0BF5  0140               	movlb	0	; select bank0
  2635  0BF6  00A5               	movwf	___flmul@a+1
  2636  0BF7  0142               	movlb	2	; select bank2
  2637  0BF8  0854               	movf	_main$1282^(0+256),w
  2638  0BF9  0140               	movlb	0	; select bank0
  2639  0BFA  00A4               	movwf	___flmul@a
  2640  0BFB  3188  2057  318A   	fcall	___flmul
  2641  0BFE  0140               	movlb	0	; select bank0
  2642  0BFF  0823               	movf	?___flmul+3,w
  2643  0C00  0142               	movlb	2	; select bank2
  2644  0C01  00DB               	movwf	(main@temp_reference+3)^(0+256)
  2645  0C02  0140               	movlb	0	; select bank0
  2646  0C03  0822               	movf	?___flmul+2,w
  2647  0C04  0142               	movlb	2	; select bank2
  2648  0C05  00DA               	movwf	(main@temp_reference+2)^(0+256)
  2649  0C06  0140               	movlb	0	; select bank0
  2650  0C07  0821               	movf	?___flmul+1,w
  2651  0C08  0142               	movlb	2	; select bank2
  2652  0C09  00D9               	movwf	(main@temp_reference+1)^(0+256)
  2653  0C0A  0140               	movlb	0	; select bank0
  2654  0C0B  0820               	movf	?___flmul,w
  2655  0C0C  0142               	movlb	2	; select bank2
  2656  0C0D  00D8               	movwf	main@temp_reference^(0+256)
  2657                           
  2658                           ;main.c: 89:           sprintf(buffer1,"Real=%04.0f",temp_lm35);
  2659  0C0E  3010               	movlw	low (STR_1| (0+32768))
  2660  0C0F  00B1               	movwf	sprintf@fmt^(0+256)
  2661  0C10  30A0               	movlw	high (STR_1| (0+32768))
  2662  0C11  00B2               	movwf	(sprintf@fmt^(0+256)+1)
  2663  0C12  085F               	movf	(main@temp_lm35+3)^(0+256),w
  2664  0C13  00B6               	movwf	((?_sprintf+3)^(0+256)+2)
  2665  0C14  085E               	movf	(main@temp_lm35+2)^(0+256),w
  2666  0C15  00B5               	movwf	((?_sprintf+2)^(0+256)+2)
  2667  0C16  085D               	movf	(main@temp_lm35+1)^(0+256),w
  2668  0C17  00B4               	movwf	((?_sprintf+1)^(0+256)+2)
  2669  0C18  085C               	movf	main@temp_lm35^(0+256),w
  2670  0C19  00B3               	movwf	(?_sprintf^(0+256)+2)
  2671  0C1A  3040               	movlw	(low (main@buffer1| (0+256)))& (0+255)
  2672  0C1B  319E  2664  318A   	fcall	_sprintf
  2673                           
  2674                           ;main.c: 90:          Lcd_Out2(2,1,buffer1);
  2675  0C1E  01F3               	clrf	Lcd_Out2@x
  2676  0C1F  0AF3               	incf	Lcd_Out2@x,f
  2677  0C20  3040               	movlw	(low (main@buffer1| (0+256)))& (0+255)
  2678  0C21  0141               	movlb	1	; select bank1
  2679  0C22  00EB               	movwf	??_main^(0+128)
  2680  0C23  086B               	movf	??_main^(0+128),w
  2681  0C24  00F4               	movwf	Lcd_Out2@buffer
  2682  0C25  3002               	movlw	2
  2683  0C26  319E  2698  318A   	fcall	_Lcd_Out2
  2684                           
  2685                           ;main.c: 91:          _delay((unsigned long)((100)*(32000000/4000.0)));
  2686  0C29  3005               	movlw	5
  2687  0C2A  0141               	movlb	1	; select bank1
  2688  0C2B  00EC               	movwf	(??_main^(0+128)+1)
  2689  0C2C  300F               	movlw	15
  2690  0C2D  00EB               	movwf	??_main^(0+128)
  2691  0C2E  30F1               	movlw	241
  2692  0C2F                     u6087:	
  2693  0C2F  0B89               	decfsz	9,f
  2694  0C30  2C2F               	goto	u6087
  2695  0C31  0BEB               	decfsz	??_main^(0+128),f
  2696  0C32  2C2F               	goto	u6087
  2697  0C33  0BEC               	decfsz	(??_main^(0+128)+1),f
  2698  0C34  2C2F               	goto	u6087
  2699                           
  2700                           ;main.c: 94:           sprintf(buffer1,"TempWish=%04.0f",temp_reference);
  2701  0C35  3000               	movlw	low (STR_2| (0+32768))
  2702  0C36  0142               	movlb	2	; select bank2
  2703  0C37  00B1               	movwf	sprintf@fmt^(0+256)
  2704  0C38  30A0               	movlw	high (STR_2| (0+32768))
  2705  0C39  00B2               	movwf	(sprintf@fmt^(0+256)+1)
  2706  0C3A  085B               	movf	(main@temp_reference+3)^(0+256),w
  2707  0C3B  00B6               	movwf	((?_sprintf+3)^(0+256)+2)
  2708  0C3C  085A               	movf	(main@temp_reference+2)^(0+256),w
  2709  0C3D  00B5               	movwf	((?_sprintf+2)^(0+256)+2)
  2710  0C3E  0859               	movf	(main@temp_reference+1)^(0+256),w
  2711  0C3F  00B4               	movwf	((?_sprintf+1)^(0+256)+2)
  2712  0C40  0858               	movf	main@temp_reference^(0+256),w
  2713  0C41  00B3               	movwf	(?_sprintf^(0+256)+2)
  2714  0C42  3040               	movlw	(low (main@buffer1| (0+256)))& (0+255)
  2715  0C43  319E  2664  318A   	fcall	_sprintf
  2716                           
  2717                           ;main.c: 95:          Lcd_Out2(1,2,buffer1);
  2718  0C46  3002               	movlw	2
  2719  0C47  0141               	movlb	1	; select bank1
  2720  0C48  00EB               	movwf	??_main^(0+128)
  2721  0C49  086B               	movf	??_main^(0+128),w
  2722  0C4A  00F3               	movwf	Lcd_Out2@x
  2723  0C4B  3040               	movlw	(low (main@buffer1| (0+256)))& (0+255)
  2724  0C4C  00EC               	movwf	(??_main+1)^(0+128)
  2725  0C4D  086C               	movf	(??_main+1)^(0+128),w
  2726  0C4E  00F4               	movwf	Lcd_Out2@buffer
  2727  0C4F  3001               	movlw	1
  2728  0C50  319E  2698  318A   	fcall	_Lcd_Out2
  2729                           
  2730                           ;main.c: 96:          _delay((unsigned long)((100)*(32000000/4000.0)));
  2731  0C53  3005               	movlw	5
  2732  0C54  0141               	movlb	1	; select bank1
  2733  0C55  00EC               	movwf	(??_main^(0+128)+1)
  2734  0C56  300F               	movlw	15
  2735  0C57  00EB               	movwf	??_main^(0+128)
  2736  0C58  30F1               	movlw	241
  2737  0C59                     u6097:	
  2738  0C59  0B89               	decfsz	9,f
  2739  0C5A  2C59               	goto	u6097
  2740  0C5B  0BEB               	decfsz	??_main^(0+128),f
  2741  0C5C  2C59               	goto	u6097
  2742  0C5D  0BEC               	decfsz	(??_main^(0+128)+1),f
  2743  0C5E  2C59               	goto	u6097
  2744                           
  2745                           ;main.c: 100:     if (temp_reference - 5 > temp_lm35 )
  2746  0C5F  0142               	movlb	2	; select bank2
  2747  0C60  085F               	movf	(main@temp_lm35+3)^(0+256),w
  2748  0C61  0140               	movlb	0	; select bank0
  2749  0C62  00BD               	movwf	___flge@ff1+3
  2750  0C63  0142               	movlb	2	; select bank2
  2751  0C64  085E               	movf	(main@temp_lm35+2)^(0+256),w
  2752  0C65  0140               	movlb	0	; select bank0
  2753  0C66  00BC               	movwf	___flge@ff1+2
  2754  0C67  0142               	movlb	2	; select bank2
  2755  0C68  085D               	movf	(main@temp_lm35+1)^(0+256),w
  2756  0C69  0140               	movlb	0	; select bank0
  2757  0C6A  00BB               	movwf	___flge@ff1+1
  2758  0C6B  0142               	movlb	2	; select bank2
  2759  0C6C  085C               	movf	main@temp_lm35^(0+256),w
  2760  0C6D  0140               	movlb	0	; select bank0
  2761  0C6E  00BA               	movwf	___flge@ff1
  2762  0C6F  30C0               	movlw	192
  2763  0C70  00F3               	movwf	___fladd@b+3
  2764  0C71  30A0               	movlw	160
  2765  0C72  00F2               	movwf	___fladd@b+2
  2766  0C73  3000               	movlw	0
  2767  0C74  00F1               	movwf	___fladd@b+1
  2768  0C75  3000               	movlw	0
  2769  0C76  00F0               	movwf	___fladd@b
  2770  0C77  0142               	movlb	2	; select bank2
  2771  0C78  085B               	movf	(main@temp_reference+3)^(0+256),w
  2772  0C79  00F7               	movwf	___fladd@a+3
  2773  0C7A  085A               	movf	(main@temp_reference+2)^(0+256),w
  2774  0C7B  00F6               	movwf	___fladd@a+2
  2775  0C7C  0859               	movf	(main@temp_reference+1)^(0+256),w
  2776  0C7D  00F5               	movwf	___fladd@a+1
  2777  0C7E  0858               	movf	main@temp_reference^(0+256),w
  2778  0C7F  00F4               	movwf	___fladd@a
  2779  0C80  3195  25FF  318A   	fcall	___fladd
  2780  0C83  0873               	movf	?___fladd+3,w
  2781  0C84  0140               	movlb	0	; select bank0
  2782  0C85  00C1               	movwf	___flge@ff2+3
  2783  0C86  0872               	movf	?___fladd+2,w
  2784  0C87  00C0               	movwf	___flge@ff2+2
  2785  0C88  0871               	movf	?___fladd+1,w
  2786  0C89  00BF               	movwf	___flge@ff2+1
  2787  0C8A  0870               	movf	?___fladd,w
  2788  0C8B  00BE               	movwf	___flge@ff2
  2789  0C8C  3193  232A  318A   	fcall	___flge
  2790  0C8F  1803               	btfsc	3,0
  2791  0C90  2C94               	goto	l89
  2792                           
  2793                           ;main.c: 101:     {;main.c: 102:         LATCbits.LATC2=0;
  2794  0C91  0140               	movlb	0	; select bank0
  2795  0C92  1118               	bcf	24,2	;volatile
  2796                           
  2797                           ;main.c: 103:     }
  2798  0C93  2C96               	goto	l4253
  2799  0C94                     l89:	
  2800                           ;main.c: 104:     else
  2801                           
  2802                           
  2803                           ;main.c: 105:         LATCbits.LATC2=1;
  2804  0C94  0140               	movlb	0	; select bank0
  2805  0C95  1518               	bsf	24,2	;volatile
  2806  0C96                     l4253:	
  2807                           
  2808                           ;main.c: 108:      if(temp_reference + 5 < temp_lm35)
  2809  0C96  3040               	movlw	64
  2810  0C97  00F3               	movwf	___fladd@b+3
  2811  0C98  30A0               	movlw	160
  2812  0C99  00F2               	movwf	___fladd@b+2
  2813  0C9A  3000               	movlw	0
  2814  0C9B  00F1               	movwf	___fladd@b+1
  2815  0C9C  3000               	movlw	0
  2816  0C9D  00F0               	movwf	___fladd@b
  2817  0C9E  0142               	movlb	2	; select bank2
  2818  0C9F  085B               	movf	(main@temp_reference+3)^(0+256),w
  2819  0CA0  00F7               	movwf	___fladd@a+3
  2820  0CA1  085A               	movf	(main@temp_reference+2)^(0+256),w
  2821  0CA2  00F6               	movwf	___fladd@a+2
  2822  0CA3  0859               	movf	(main@temp_reference+1)^(0+256),w
  2823  0CA4  00F5               	movwf	___fladd@a+1
  2824  0CA5  0858               	movf	main@temp_reference^(0+256),w
  2825  0CA6  00F4               	movwf	___fladd@a
  2826  0CA7  3195  25FF  318A   	fcall	___fladd
  2827  0CAA  0873               	movf	?___fladd+3,w
  2828  0CAB  0140               	movlb	0	; select bank0
  2829  0CAC  00BD               	movwf	___flge@ff1+3
  2830  0CAD  0872               	movf	?___fladd+2,w
  2831  0CAE  00BC               	movwf	___flge@ff1+2
  2832  0CAF  0871               	movf	?___fladd+1,w
  2833  0CB0  00BB               	movwf	___flge@ff1+1
  2834  0CB1  0870               	movf	?___fladd,w
  2835  0CB2  00BA               	movwf	___flge@ff1
  2836  0CB3  0142               	movlb	2	; select bank2
  2837  0CB4  085F               	movf	(main@temp_lm35+3)^(0+256),w
  2838  0CB5  0140               	movlb	0	; select bank0
  2839  0CB6  00C1               	movwf	___flge@ff2+3
  2840  0CB7  0142               	movlb	2	; select bank2
  2841  0CB8  085E               	movf	(main@temp_lm35+2)^(0+256),w
  2842  0CB9  0140               	movlb	0	; select bank0
  2843  0CBA  00C0               	movwf	___flge@ff2+2
  2844  0CBB  0142               	movlb	2	; select bank2
  2845  0CBC  085D               	movf	(main@temp_lm35+1)^(0+256),w
  2846  0CBD  0140               	movlb	0	; select bank0
  2847  0CBE  00BF               	movwf	___flge@ff2+1
  2848  0CBF  0142               	movlb	2	; select bank2
  2849  0CC0  085C               	movf	main@temp_lm35^(0+256),w
  2850  0CC1  0140               	movlb	0	; select bank0
  2851  0CC2  00BE               	movwf	___flge@ff2
  2852  0CC3  3193  232A  318A   	fcall	___flge
  2853  0CC6  1803               	btfsc	3,0
  2854  0CC7  2CCB               	goto	l91
  2855                           
  2856                           ;main.c: 109:     {;main.c: 110:         LATCbits.LATC2=1;
  2857  0CC8  0140               	movlb	0	; select bank0
  2858  0CC9  1518               	bsf	24,2	;volatile
  2859                           
  2860                           ;main.c: 112:     }
  2861  0CCA  2AB7               	goto	l4217
  2862  0CCB                     l91:	
  2863                           ;main.c: 113:      else
  2864                           
  2865                           
  2866                           ;main.c: 114:          LATCbits.LATC2=0;
  2867  0CCB  0140               	movlb	0	; select bank0
  2868  0CCC  1118               	bcf	24,2	;volatile
  2869                           
  2870                           ;main.c: 117:         }
  2871  0CCD  2AB7               	goto	l4217
  2872  0CCE                     __end_of_main:	
  2873                           ;main.c: 119:     return;
  2874                           
  2875                           
  2876                           	psect	text1
  2877  1E64                     __ptext1:	
  2878 ;; *************** function _sprintf *****************
  2879 ;; Defined at:
  2880 ;;		line 9 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\nf_sprintf.c"
  2881 ;; Parameters:    Size  Location     Type
  2882 ;;  s               1    wreg     PTR unsigned char 
  2883 ;;		 -> main@buffer1(16), 
  2884 ;;  fmt             2   17[BANK2 ] PTR const unsigned char 
  2885 ;;		 -> STR_2(16), STR_1(12), 
  2886 ;; Auto vars:     Size  Location     Type
  2887 ;;  s               1   25[BANK2 ] PTR unsigned char 
  2888 ;;		 -> main@buffer1(16), 
  2889 ;;  f               5   27[BANK2 ] struct _IO_FILE
  2890 ;;  ret             2   23[BANK2 ] int 
  2891 ;;  ap              1   26[BANK2 ] PTR void [1]
  2892 ;;		 -> ?_sprintf(2), 
  2893 ;; Return value:  Size  Location     Type
  2894 ;;                  2   17[BANK2 ] int 
  2895 ;; Registers used:
  2896 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2897 ;; Tracked objects:
  2898 ;;		On entry : 0/0
  2899 ;;		On exit  : 0/0
  2900 ;;		Unchanged: 0/0
  2901 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
  2902 ;;      Params:         0       0       0       6       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  2903 ;;      Locals:         0       0       0       9       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  2904 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  2905 ;;      Totals:         0       1       0      15       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  2906 ;;Total ram usage:       16 bytes
  2907 ;; Hardware stack levels used:    1
  2908 ;; Hardware stack levels required when called:    7
  2909 ;; This function calls:
  2910 ;;		_vfprintf
  2911 ;; This function is called by:
  2912 ;;		_main
  2913 ;; This function uses a non-reentrant model
  2914 ;;
  2915                           
  2916                           
  2917                           ;psect for function _sprintf
  2918  1E64                     _sprintf:	
  2919                           
  2920                           ;incstack = 0
  2921                           ; Regs used in _sprintf: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  2922                           ;sprintf@s stored from wreg
  2923  1E64  0142               	movlb	2	; select bank2
  2924  1E65  00B9               	movwf	sprintf@s^(0+256)
  2925  1E66  3033               	movlw	(low ((?_sprintf| (0+256)+2)))& (0+255)
  2926  1E67  0140               	movlb	0	; select bank0
  2927  1E68  00EF               	movwf	??_sprintf
  2928  1E69  086F               	movf	??_sprintf,w
  2929  1E6A  0142               	movlb	2	; select bank2
  2930  1E6B  00BA               	movwf	sprintf@ap^(0+256)
  2931  1E6C  0839               	movf	sprintf@s^(0+256),w
  2932  1E6D  0140               	movlb	0	; select bank0
  2933  1E6E  00EF               	movwf	??_sprintf
  2934  1E6F  086F               	movf	??_sprintf,w
  2935  1E70  0142               	movlb	2	; select bank2
  2936  1E71  00BB               	movwf	sprintf@f^(0+256)
  2937  1E72  01BC               	clrf	(sprintf@f^(0+256)+1)
  2938  1E73  01BD               	clrf	((sprintf@f+1)^(0+256)+1)
  2939  1E74  01BE               	clrf	(sprintf@f^(0+256)+3)
  2940  1E75  01BF               	clrf	((sprintf@f+1)^(0+256)+3)
  2941  1E76  0832               	movf	(sprintf@fmt+1)^(0+256),w
  2942  1E77  0141               	movlb	1	; select bank1
  2943  1E78  00E4               	movwf	(vfprintf@fmt+1)^(0+128)
  2944  1E79  0142               	movlb	2	; select bank2
  2945  1E7A  0831               	movf	sprintf@fmt^(0+256),w
  2946  1E7B  0141               	movlb	1	; select bank1
  2947  1E7C  00E3               	movwf	vfprintf@fmt^(0+128)
  2948  1E7D  303A               	movlw	(low (sprintf@ap| (0+256)))& (0+255)
  2949  1E7E  0140               	movlb	0	; select bank0
  2950  1E7F  00EF               	movwf	??_sprintf
  2951  1E80  086F               	movf	??_sprintf,w
  2952  1E81  0141               	movlb	1	; select bank1
  2953  1E82  00E5               	movwf	vfprintf@ap^(0+128)
  2954  1E83  303B               	movlw	(low (sprintf@f| (0+256)))& (0+255)
  2955  1E84  319E  2630         	fcall	_vfprintf
  2956  1E86  0141               	movlb	1	; select bank1
  2957  1E87  0864               	movf	(?_vfprintf+1)^(0+128),w
  2958  1E88  0142               	movlb	2	; select bank2
  2959  1E89  00B8               	movwf	(sprintf@ret+1)^(0+256)
  2960  1E8A  0141               	movlb	1	; select bank1
  2961  1E8B  0863               	movf	?_vfprintf^(0+128),w
  2962  1E8C  0142               	movlb	2	; select bank2
  2963  1E8D  00B7               	movwf	sprintf@ret^(0+256)
  2964  1E8E  083C               	movf	(sprintf@f^(0+256)+1),w
  2965  1E8F  0739               	addwf	sprintf@s^(0+256),w
  2966  1E90  0140               	movlb	0	; select bank0
  2967  1E91  00EF               	movwf	??_sprintf
  2968  1E92  086F               	movf	??_sprintf,w
  2969  1E93  0086               	movwf	6
  2970  1E94  3001               	movlw	1	; select bank2/3
  2971  1E95  0087               	movwf	7
  2972  1E96  0181               	clrf	1
  2973  1E97  0008               	return
  2974  1E98                     __end_of_sprintf:	
  2975                           ;	Return value of _sprintf is never used
  2976                           
  2977                           
  2978                           	psect	text2
  2979  1E30                     __ptext2:	
  2980 ;; *************** function _vfprintf *****************
  2981 ;; Defined at:
  2982 ;;		line 1368 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c"
  2983 ;; Parameters:    Size  Location     Type
  2984 ;;  fp              1    wreg     PTR struct _IO_FILE
  2985 ;;		 -> sprintf@f(5), 
  2986 ;;  fmt             2   67[BANK1 ] PTR const unsigned char 
  2987 ;;		 -> STR_2(16), STR_1(12), 
  2988 ;;  ap              1   69[BANK1 ] PTR PTR void 
  2989 ;;		 -> sprintf@ap(1), 
  2990 ;; Auto vars:     Size  Location     Type
  2991 ;;  fp              1   72[BANK1 ] PTR struct _IO_FILE
  2992 ;;		 -> sprintf@f(5), 
  2993 ;;  cfmt            2   73[BANK1 ] PTR unsigned char 
  2994 ;;		 -> STR_2(16), STR_1(12), 
  2995 ;; Return value:  Size  Location     Type
  2996 ;;                  2   67[BANK1 ] int 
  2997 ;; Registers used:
  2998 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2999 ;; Tracked objects:
  3000 ;;		On entry : 0/0
  3001 ;;		On exit  : 0/0
  3002 ;;		Unchanged: 0/0
  3003 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
  3004 ;;      Params:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  3005 ;;      Locals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  3006 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  3007 ;;      Totals:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  3008 ;;Total ram usage:        8 bytes
  3009 ;; Hardware stack levels used:    1
  3010 ;; Hardware stack levels required when called:    6
  3011 ;; This function calls:
  3012 ;;		_vfpfcnvrt
  3013 ;; This function is called by:
  3014 ;;		_sprintf
  3015 ;; This function uses a non-reentrant model
  3016 ;;
  3017                           
  3018                           
  3019                           ;psect for function _vfprintf
  3020  1E30                     _vfprintf:	
  3021                           
  3022                           ;incstack = 0
  3023                           ; Regs used in _vfprintf: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  3024                           ;vfprintf@fp stored from wreg
  3025  1E30  0141               	movlb	1	; select bank1
  3026  1E31  00E8               	movwf	vfprintf@fp^(0+128)
  3027                           
  3028                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 1368: int v
      +                          fprintf(FILE *fp, const char *fmt, va_list ap);C:\Program Files (x86)\Microchip\xc8\v2.0
      +                          0\pic\sources\c99\common\doprnt.c: 1369: {;C:\Program Files (x86)\Microchip\xc8\v2.00\pi
      +                          c\sources\c99\common\doprnt.c: 1371:     char *cfmt;;C:\Program Files (x86)\Microchip\xc
      +                          8\v2.00\pic\sources\c99\common\doprnt.c: 1373:     cfmt = (char *)fmt;
  3029  1E32  0864               	movf	(vfprintf@fmt+1)^(0+128),w
  3030  1E33  00EA               	movwf	(vfprintf@cfmt+1)^(0+128)
  3031  1E34  0863               	movf	vfprintf@fmt^(0+128),w
  3032  1E35  00E9               	movwf	vfprintf@cfmt^(0+128)
  3033                           
  3034                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 1374:     n
      +                          out = 0;
  3035  1E36  0142               	movlb	2	; select bank2
  3036  1E37  01E8               	clrf	_nout^(0+256)
  3037  1E38  01E9               	clrf	(_nout+1)^(0+256)
  3038  1E39                     l4019:	
  3039                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 1377:     }
  3040                           
  3041                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 1375:     w
      +                          hile (*cfmt) {
  3042                           
  3043                           
  3044                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 1375:     w
      +                          hile (*cfmt) {
  3045  1E39  0141               	movlb	1	; select bank1
  3046  1E3A  0869               	movf	vfprintf@cfmt^(0+128),w
  3047  1E3B  0084               	movwf	4
  3048  1E3C  086A               	movf	(vfprintf@cfmt+1)^(0+128),w
  3049  1E3D  0085               	movwf	5
  3050  1E3E  0012               	moviw fsr0++
  3051  1E3F  1903               	btfsc	3,2
  3052  1E40  2E5B               	goto	l4021
  3053                           
  3054                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 1376:      
      +                             nout += vfpfcnvrt(fp, &cfmt, ap);
  3055  1E41  30E9               	movlw	(low (vfprintf@cfmt| 0))& (0+255)
  3056  1E42  0141               	movlb	1	; select bank1
  3057  1E43  00E6               	movwf	??_vfprintf^(0+128)
  3058  1E44  0866               	movf	??_vfprintf^(0+128),w
  3059  1E45  0140               	movlb	0	; select bank0
  3060  1E46  00ED               	movwf	vfpfcnvrt@fmt
  3061  1E47  0141               	movlb	1	; select bank1
  3062  1E48  0865               	movf	vfprintf@ap^(0+128),w
  3063  1E49  00E7               	movwf	(??_vfprintf+1)^(0+128)
  3064  1E4A  0867               	movf	(??_vfprintf+1)^(0+128),w
  3065  1E4B  0140               	movlb	0	; select bank0
  3066  1E4C  00EE               	movwf	vfpfcnvrt@ap
  3067  1E4D  0141               	movlb	1	; select bank1
  3068  1E4E  0868               	movf	vfprintf@fp^(0+128),w
  3069  1E4F  318C  24CE  319E   	fcall	_vfpfcnvrt
  3070  1E52  0140               	movlb	0	; select bank0
  3071  1E53  086D               	movf	?_vfpfcnvrt,w
  3072  1E54  0142               	movlb	2	; select bank2
  3073  1E55  07E8               	addwf	_nout^(0+256),f
  3074  1E56  0140               	movlb	0	; select bank0
  3075  1E57  086E               	movf	?_vfpfcnvrt+1,w
  3076  1E58  0142               	movlb	2	; select bank2
  3077  1E59  3DE9               	addwfc	(_nout+1)^(0+256),f
  3078  1E5A  2E39               	goto	l4019
  3079  1E5B                     l4021:	
  3080                           
  3081                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 1378:     r
      +                          eturn nout;
  3082  1E5B  0142               	movlb	2	; select bank2
  3083  1E5C  0869               	movf	(_nout+1)^(0+256),w
  3084  1E5D  0141               	movlb	1	; select bank1
  3085  1E5E  00E4               	movwf	(?_vfprintf+1)^(0+128)
  3086  1E5F  0142               	movlb	2	; select bank2
  3087  1E60  0868               	movf	_nout^(0+256),w
  3088  1E61  0141               	movlb	1	; select bank1
  3089  1E62  00E3               	movwf	?_vfprintf^(0+128)
  3090  1E63  0008               	return
  3091  1E64                     __end_of_vfprintf:	
  3092                           
  3093                           	psect	text3
  3094  0CCE                     __ptext3:	
  3095 ;; *************** function _vfpfcnvrt *****************
  3096 ;; Defined at:
  3097 ;;		line 670 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c"
  3098 ;; Parameters:    Size  Location     Type
  3099 ;;  fp              1    wreg     PTR struct _IO_FILE
  3100 ;;		 -> sprintf@f(5), 
  3101 ;;  fmt             1   77[BANK0 ] PTR PTR unsigned char 
  3102 ;;		 -> vfprintf@cfmt(2), 
  3103 ;;  ap              1   78[BANK0 ] PTR PTR void 
  3104 ;;		 -> sprintf@ap(1), 
  3105 ;; Auto vars:     Size  Location     Type
  3106 ;;  fp              1   16[BANK2 ] PTR struct _IO_FILE
  3107 ;;		 -> sprintf@f(5), 
  3108 ;;  f               4    8[BANK2 ] PTR struct _IO_FILE
  3109 ;;  llu             4    0        unsigned long 
  3110 ;;  ll              4    0        long 
  3111 ;;  ct              3   12[BANK2 ] unsigned char [3]
  3112 ;;  done            2    0[BANK2 ] int 
  3113 ;;  vp              2    0        PTR void 
  3114 ;;  i               2    0        int 
  3115 ;;  cp              2    0        PTR unsigned char 
  3116 ;;  c               1   15[BANK2 ] unsigned char 
  3117 ;; Return value:  Size  Location     Type
  3118 ;;                  2   77[BANK0 ] int 
  3119 ;; Registers used:
  3120 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3121 ;; Tracked objects:
  3122 ;;		On entry : 0/0
  3123 ;;		On exit  : 0/0
  3124 ;;		Unchanged: 0/0
  3125 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
  3126 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  3127 ;;      Locals:         0       0       0      17       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  3128 ;;      Temps:          0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  3129 ;;      Totals:         0       2       6      17       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  3130 ;;Total ram usage:       25 bytes
  3131 ;; Hardware stack levels used:    1
  3132 ;; Hardware stack levels required when called:    5
  3133 ;; This function calls:
  3134 ;;		_atoi
  3135 ;;		_efgtoa
  3136 ;;		_fputc
  3137 ;;		_isdigit
  3138 ;;		_isupper
  3139 ;;		_strncmp
  3140 ;;		_tolower
  3141 ;; This function is called by:
  3142 ;;		_vfprintf
  3143 ;; This function uses a non-reentrant model
  3144 ;;
  3145                           
  3146                           
  3147                           ;psect for function _vfpfcnvrt
  3148  0CCE                     _vfpfcnvrt:	
  3149                           
  3150                           ;incstack = 0
  3151                           ; Regs used in _vfpfcnvrt: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  3152                           ;vfpfcnvrt@fp stored from wreg
  3153  0CCE  0142               	movlb	2	; select bank2
  3154  0CCF  00B0               	movwf	vfpfcnvrt@fp^(0+256)
  3155                           
  3156                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 670: static
      +                           int vfpfcnvrt(FILE *fp, char *fmt[], va_list ap);C:\Program Files (x86)\Microchip\xc8\v
      +                          2.00\pic\sources\c99\common\doprnt.c: 671: {;C:\Program Files (x86)\Microchip\xc8\v2.00\
      +                          pic\sources\c99\common\doprnt.c: 672:     char c, *cp, ct[3];;C:\Program Files (x86)\Mic
      +                          rochip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 673:     int done, i;;C:\Program Files
      +                           (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 674:     long long ll;
  3157  0CD0  0140               	movlb	0	; select bank0
  3158  0CD1  086D               	movf	vfpfcnvrt@fmt,w
  3159  0CD2  0086               	movwf	6
  3160  0CD3  0187               	clrf	7
  3161  0CD4  3F40               	moviw [0]fsr1
  3162  0CD5  0141               	movlb	1	; select bank1
  3163  0CD6  00DD               	movwf	??_vfpfcnvrt^(0+128)
  3164  0CD7  3F41               	moviw [1]fsr1
  3165  0CD8  00DE               	movwf	(??_vfpfcnvrt^(0+128)+1)
  3166  0CD9  085D               	movf	??_vfpfcnvrt^(0+128),w
  3167  0CDA  0084               	movwf	4
  3168  0CDB  085E               	movf	(??_vfpfcnvrt+1)^(0+128),w
  3169  0CDC  0085               	movwf	5
  3170  0CDD  0012               	moviw fsr0++
  3171  0CDE  3A25               	xorlw	37
  3172  0CDF  1D03               	btfss	3,2
  3173  0CE0  2FD6               	goto	l3955
  3174                           
  3175                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 681:       
      +                            ++*fmt;
  3176  0CE1  0140               	movlb	0	; select bank0
  3177  0CE2  086D               	movf	vfpfcnvrt@fmt,w
  3178  0CE3  0086               	movwf	6
  3179  0CE4  0187               	clrf	7
  3180  0CE5  3001               	movlw	1
  3181  0CE6  0781               	addwf	1,f
  3182  0CE7  3141               	addfsr 1,1
  3183  0CE8  1803               	skipnc
  3184  0CE9  0A81               	incf	1,f
  3185                           
  3186                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 683:       
      +                            flags = width = 0;
  3187  0CEA  0142               	movlb	2	; select bank2
  3188  0CEB  01EA               	clrf	_width^(0+256)
  3189  0CEC  01EB               	clrf	(_width+1)^(0+256)
  3190  0CED  0141               	movlb	1	; select bank1
  3191  0CEE  01EE               	clrf	_flags^(0+128)
  3192  0CEF  01EF               	clrf	(_flags+1)^(0+128)
  3193                           
  3194                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 684:       
      +                            prec = -1;
  3195  0CF0  30FF               	movlw	255
  3196  0CF1  0142               	movlb	2	; select bank2
  3197  0CF2  00EC               	movwf	_prec^(0+256)
  3198  0CF3  30FF               	movlw	255
  3199  0CF4  00ED               	movwf	(_prec^(0+256)+1)
  3200                           
  3201                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 688:       
      +                            done = 0;
  3202  0CF5  01A0               	clrf	vfpfcnvrt@done^(0+256)
  3203  0CF6  01A1               	clrf	(vfpfcnvrt@done+1)^(0+256)
  3204                           
  3205                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 689:       
      +                            while (!done) {
  3206  0CF7  2D10               	goto	l3851
  3207  0CF8                     l323:	
  3208                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 691:       
      +                                    case '-' :
  3209                           
  3210                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 690:       
      +                                switch ((*fmt)[0]) {
  3211                           
  3212                           
  3213                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 692:       
      +                                        flags |= (1 << 0);
  3214  0CF8  146E               	bsf	_flags^(0+128),0
  3215  0CF9  2D01               	goto	l3843
  3216  0CFA                     l325:	
  3217                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 695:       
      +                                    case '0' :
  3218                           
  3219                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 694:       
      +                                        break;
  3220                           
  3221                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 693:       
      +                                        ++*fmt;
  3222                           
  3223                           
  3224                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 696:       
      +                                        flags |= (1 << 1);
  3225  0CFA  14EE               	bsf	_flags^(0+128),1
  3226  0CFB  2D01               	goto	l3843
  3227  0CFC                     l326:	
  3228                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 699:       
      +                                    case '+' :
  3229                           
  3230                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 698:       
      +                                        break;
  3231                           
  3232                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 697:       
      +                                        ++*fmt;
  3233                           
  3234                           
  3235                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 700:       
      +                                        flags |= (1 << 2);
  3236  0CFC  156E               	bsf	_flags^(0+128),2
  3237  0CFD  2D01               	goto	l3843
  3238  0CFE                     l327:	
  3239                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 703:       
      +                                    case ' ' :
  3240                           
  3241                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 702:       
      +                                        break;
  3242                           
  3243                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 701:       
      +                                        ++*fmt;
  3244                           
  3245                           
  3246                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 704:       
      +                                        flags |= (1 << 3);
  3247  0CFE  15EE               	bsf	_flags^(0+128),3
  3248  0CFF  2D01               	goto	l3843
  3249  0D00                     l328:	
  3250                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 707:       
      +                                    case '#' :
  3251                           
  3252                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 706:       
      +                                        break;
  3253                           
  3254                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 705:       
      +                                        ++*fmt;
  3255                           
  3256                           
  3257                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 708:       
      +                                        flags |= (1 << 4);
  3258  0D00  166E               	bsf	_flags^(0+128),4
  3259  0D01                     l3843:	
  3260                           
  3261                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 709:       
      +                                        ++*fmt;
  3262  0D01  0140               	movlb	0	; select bank0
  3263  0D02  086D               	movf	vfpfcnvrt@fmt,w
  3264  0D03  0086               	movwf	6
  3265  0D04  0187               	clrf	7
  3266  0D05  3001               	movlw	1
  3267  0D06  0781               	addwf	1,f
  3268  0D07  3141               	addfsr 1,1
  3269  0D08  1803               	skipnc
  3270  0D09  0A81               	incf	1,f
  3271                           
  3272                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 710:       
      +                                        break;
  3273  0D0A  2D10               	goto	l3851
  3274  0D0B                     l3845:	
  3275                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 711:       
      +                                    default:
  3276                           
  3277                           
  3278                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 712:       
      +                                        done = 1;
  3279  0D0B  3001               	movlw	1
  3280  0D0C  0142               	movlb	2	; select bank2
  3281  0D0D  00A0               	movwf	vfpfcnvrt@done^(0+256)
  3282  0D0E  3000               	movlw	0
  3283  0D0F  00A1               	movwf	(vfpfcnvrt@done^(0+256)+1)
  3284  0D10                     l3851:	
  3285                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 715:       
      +                            }
  3286                           
  3287                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 714:       
      +                                }
  3288                           
  3289                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 713:       
      +                                        break;
  3290                           
  3291                           
  3292                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 689:       
      +                            while (!done) {
  3293  0D10  0142               	movlb	2	; select bank2
  3294  0D11  0820               	movf	vfpfcnvrt@done^(0+256),w
  3295  0D12  0421               	iorwf	(vfpfcnvrt@done+1)^(0+256),w
  3296  0D13  1D03               	btfss	3,2
  3297  0D14  2D3C               	goto	l330
  3298  0D15  0140               	movlb	0	; select bank0
  3299  0D16  086D               	movf	vfpfcnvrt@fmt,w
  3300  0D17  0086               	movwf	6
  3301  0D18  0187               	clrf	7
  3302  0D19  3F40               	moviw [0]fsr1
  3303  0D1A  0141               	movlb	1	; select bank1
  3304  0D1B  00DD               	movwf	??_vfpfcnvrt^(0+128)
  3305  0D1C  3F41               	moviw [1]fsr1
  3306  0D1D  00DE               	movwf	(??_vfpfcnvrt^(0+128)+1)
  3307  0D1E  085D               	movf	??_vfpfcnvrt^(0+128),w
  3308  0D1F  0084               	movwf	4
  3309  0D20  085E               	movf	(??_vfpfcnvrt+1)^(0+128),w
  3310  0D21  0085               	movwf	5
  3311  0D22  0800               	movf	0,w	;code access
  3312  0D23  00DF               	movwf	(??_vfpfcnvrt+2)^(0+128)
  3313  0D24  01E0               	clrf	((??_vfpfcnvrt+2)^(0+128)+1)
  3314                           
  3315                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3316                           ; Switch size 1, requested type "space"
  3317                           ; Number of cases is 1, Range of values is 0 to 0
  3318                           ; switch strategies available:
  3319                           ; Name         Instructions Cycles
  3320                           ; simple_byte            4     3 (average)
  3321                           ; direct_byte            8     6 (fixed)
  3322                           ; jumptable            260     6 (fixed)
  3323                           ;	Chosen strategy is simple_byte
  3324  0D25  0860               	movf	(??_vfpfcnvrt+3)^(0+128),w
  3325  0D26  3A00               	xorlw	0	; case 0
  3326  0D27  1903               	skipnz
  3327  0D28  2D2A               	goto	l4327
  3328  0D29  2D0B               	goto	l3845
  3329  0D2A                     l4327:	
  3330                           
  3331                           ; Switch size 1, requested type "space"
  3332                           ; Number of cases is 5, Range of values is 32 to 48
  3333                           ; switch strategies available:
  3334                           ; Name         Instructions Cycles
  3335                           ; simple_byte           16     9 (average)
  3336                           ; direct_byte           43     9 (fixed)
  3337                           ; jumptable            263     9 (fixed)
  3338                           ;	Chosen strategy is simple_byte
  3339  0D2A  085F               	movf	(??_vfpfcnvrt+2)^(0+128),w
  3340  0D2B  3A20               	xorlw	32	; case 32
  3341  0D2C  1903               	skipnz
  3342  0D2D  2CFE               	goto	l327
  3343  0D2E  3A03               	xorlw	3	; case 35
  3344  0D2F  1903               	skipnz
  3345  0D30  2D00               	goto	l328
  3346  0D31  3A08               	xorlw	8	; case 43
  3347  0D32  1903               	skipnz
  3348  0D33  2CFC               	goto	l326
  3349  0D34  3A06               	xorlw	6	; case 45
  3350  0D35  1903               	skipnz
  3351  0D36  2CF8               	goto	l323
  3352  0D37  3A1D               	xorlw	29	; case 48
  3353  0D38  1903               	skipnz
  3354  0D39  2CFA               	goto	l325
  3355  0D3A  2D0B               	goto	l3845
  3356  0D3B  2D10               	goto	l3851
  3357  0D3C                     l330:	
  3358                           
  3359                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 716:       
      +                            if (flags & (1 << 0)) {
  3360  0D3C  0141               	movlb	1	; select bank1
  3361  0D3D  1C6E               	btfss	_flags^(0+128),0
  3362  0D3E  2D43               	goto	l3855
  3363                           
  3364                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 717:       
      +                                flags &= ~(1 << 1);
  3365  0D3F  30FD               	movlw	253
  3366  0D40  05EE               	andwf	_flags^(0+128),f
  3367  0D41  30FF               	movlw	255
  3368  0D42  05EF               	andwf	(_flags+1)^(0+128),f
  3369  0D43                     l3855:	
  3370                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 718:       
      +                            }
  3371                           
  3372                           
  3373                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 723:       
      +                            if ((*fmt)[0] == '*') {
  3374  0D43  0140               	movlb	0	; select bank0
  3375  0D44  086D               	movf	vfpfcnvrt@fmt,w
  3376  0D45  0086               	movwf	6
  3377  0D46  0187               	clrf	7
  3378  0D47  3F40               	moviw [0]fsr1
  3379  0D48  0141               	movlb	1	; select bank1
  3380  0D49  00DD               	movwf	??_vfpfcnvrt^(0+128)
  3381  0D4A  3F41               	moviw [1]fsr1
  3382  0D4B  00DE               	movwf	(??_vfpfcnvrt^(0+128)+1)
  3383  0D4C  085D               	movf	??_vfpfcnvrt^(0+128),w
  3384  0D4D  0084               	movwf	4
  3385  0D4E  085E               	movf	(??_vfpfcnvrt+1)^(0+128),w
  3386  0D4F  0085               	movwf	5
  3387  0D50  0012               	moviw fsr0++
  3388  0D51  3A2A               	xorlw	42
  3389  0D52  1D03               	btfss	3,2
  3390  0D53  2D77               	goto	l3867
  3391                           
  3392                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 724:       
      +                                ++*fmt;
  3393  0D54  0140               	movlb	0	; select bank0
  3394  0D55  086D               	movf	vfpfcnvrt@fmt,w
  3395  0D56  0086               	movwf	6
  3396  0D57  0187               	clrf	7
  3397  0D58  3001               	movlw	1
  3398  0D59  0781               	addwf	1,f
  3399  0D5A  3141               	addfsr 1,1
  3400  0D5B  1803               	skipnc
  3401  0D5C  0A81               	incf	1,f
  3402                           
  3403                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 725:       
      +                                width = (*(int *)__va_arg(*(int **)ap, (int)0));
  3404  0D5D  086E               	movf	vfpfcnvrt@ap,w
  3405  0D5E  0086               	movwf	6
  3406  0D5F  3001               	movlw	1	; select bank2/3
  3407  0D60  0087               	movwf	7
  3408  0D61  0801               	movf	1,w
  3409  0D62  0084               	movwf	4
  3410  0D63  3001               	movlw	1	; select bank2/3
  3411  0D64  0085               	movwf	5
  3412  0D65  3002               	movlw	2
  3413  0D66  0781               	addwf	1,f
  3414  0D67  3F00               	moviw [0]fsr0
  3415  0D68  0142               	movlb	2	; select bank2
  3416  0D69  00EA               	movwf	_width^(0+256)
  3417  0D6A  3F01               	moviw [1]fsr0
  3418  0D6B  00EB               	movwf	(_width+1)^(0+256)
  3419                           
  3420                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 726:       
      +                                if (width < 0) {
  3421  0D6C  1FEB               	btfss	(_width+1)^(0+256),7
  3422  0D6D  2DBC               	goto	l3877
  3423                           
  3424                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 727:       
      +                                    flags |= (1 << 0);
  3425  0D6E  0141               	movlb	1	; select bank1
  3426  0D6F  146E               	bsf	_flags^(0+128),0
  3427                           
  3428                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 728:       
      +                                    width = -width;
  3429  0D70  0142               	movlb	2	; select bank2
  3430  0D71  09EA               	comf	_width^(0+256),f
  3431  0D72  09EB               	comf	(_width+1)^(0+256),f
  3432  0D73  0AEA               	incf	_width^(0+256),f
  3433  0D74  1903               	skipnz
  3434  0D75  0AEB               	incf	(_width+1)^(0+256),f
  3435                           
  3436                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 730:       
      +                            } else {
  3437                           
  3438                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 729:       
      +                                }
  3439  0D76  2DBC               	goto	l3877
  3440  0D77                     l3867:	
  3441                           
  3442                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 731:       
      +                                width = atoi(*fmt);
  3443  0D77  0140               	movlb	0	; select bank0
  3444  0D78  086D               	movf	vfpfcnvrt@fmt,w
  3445  0D79  0086               	movwf	6
  3446  0D7A  0187               	clrf	7
  3447  0D7B  3F40               	moviw [0]fsr1
  3448  0D7C  00F6               	movwf	atoi@s
  3449  0D7D  3F41               	moviw [1]fsr1
  3450  0D7E  00F7               	movwf	atoi@s+1
  3451  0D7F  3193  23C4  318C   	fcall	_atoi
  3452  0D82  0877               	movf	?_atoi+1,w
  3453  0D83  0142               	movlb	2	; select bank2
  3454  0D84  00EB               	movwf	(_width+1)^(0+256)
  3455  0D85  0876               	movf	?_atoi,w
  3456  0D86  00EA               	movwf	_width^(0+256)
  3457                           
  3458                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 732:       
      +                                while ((0 ? isdigit((*fmt)[0]) : ((unsigned)((*fmt)[0])-'0') < 10)) {
  3459  0D87  2D91               	goto	l3871
  3460  0D88                     l3869:	
  3461                           
  3462                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 733:       
      +                                    ++*fmt;
  3463  0D88  0140               	movlb	0	; select bank0
  3464  0D89  086D               	movf	vfpfcnvrt@fmt,w
  3465  0D8A  0086               	movwf	6
  3466  0D8B  0187               	clrf	7
  3467  0D8C  3001               	movlw	1
  3468  0D8D  0781               	addwf	1,f
  3469  0D8E  3141               	addfsr 1,1
  3470  0D8F  1803               	skipnc
  3471  0D90  0A81               	incf	1,f
  3472  0D91                     l3871:	
  3473                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 732:       
      +                                while ((0 ? isdigit((*fmt)[0]) : ((unsigned)((*fmt)[0])-'0') < 10)) {
  3474                           
  3475  0D91  0140               	movlb	0	; select bank0
  3476  0D92  086D               	movf	vfpfcnvrt@fmt,w
  3477  0D93  0086               	movwf	6
  3478  0D94  0187               	clrf	7
  3479  0D95  3F40               	moviw [0]fsr1
  3480  0D96  0141               	movlb	1	; select bank1
  3481  0D97  00DD               	movwf	??_vfpfcnvrt^(0+128)
  3482  0D98  3F41               	moviw [1]fsr1
  3483  0D99  00DE               	movwf	(??_vfpfcnvrt^(0+128)+1)
  3484  0D9A  085D               	movf	??_vfpfcnvrt^(0+128),w
  3485  0D9B  0084               	movwf	4
  3486  0D9C  085E               	movf	(??_vfpfcnvrt+1)^(0+128),w
  3487  0D9D  0085               	movwf	5
  3488  0D9E  0800               	movf	0,w	;code access
  3489  0D9F  3ED0               	addlw	208
  3490  0DA0  00DF               	movwf	(??_vfpfcnvrt+2)^(0+128)
  3491  0DA1  30FF               	movlw	255
  3492  0DA2  1803               	skipnc
  3493  0DA3  3000               	movlw	0
  3494  0DA4  00E0               	movwf	((??_vfpfcnvrt+2)^(0+128)+1)
  3495  0DA5  3000               	movlw	0
  3496  0DA6  0260               	subwf	(??_vfpfcnvrt+3)^(0+128),w
  3497  0DA7  300A               	movlw	10
  3498  0DA8  1903               	skipnz
  3499  0DA9  025F               	subwf	(??_vfpfcnvrt+2)^(0+128),w
  3500  0DAA  1803               	btfsc	3,0
  3501  0DAB  2DAE               	goto	u5540
  3502  0DAC  3001               	movlw	1
  3503  0DAD  2DAF               	goto	u5550
  3504  0DAE                     u5540:	
  3505  0DAE  3000               	movlw	0
  3506  0DAF                     u5550:	
  3507  0DAF  00E1               	movwf	(??_vfpfcnvrt+4)^(0+128)
  3508  0DB0  01E2               	clrf	((??_vfpfcnvrt+4)^(0+128)+1)
  3509  0DB1  0861               	movf	(??_vfpfcnvrt+4)^(0+128),w
  3510  0DB2  0142               	movlb	2	; select bank2
  3511  0DB3  00A2               	movwf	_vfpfcnvrt$665^(0+256)
  3512  0DB4  0141               	movlb	1	; select bank1
  3513  0DB5  0862               	movf	(??_vfpfcnvrt+5)^(0+128),w
  3514  0DB6  0142               	movlb	2	; select bank2
  3515  0DB7  00A3               	movwf	(_vfpfcnvrt$665+1)^(0+256)
  3516  0DB8  0822               	movf	_vfpfcnvrt$665^(0+256),w
  3517  0DB9  0423               	iorwf	(_vfpfcnvrt$665+1)^(0+256),w
  3518  0DBA  1D03               	btfss	3,2
  3519  0DBB  2D88               	goto	l3869
  3520  0DBC                     l3877:	
  3521                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 735:       
      +                            }
  3522                           
  3523                           
  3524                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 740:       
      +                            if ((*fmt)[0] == '.') {
  3525  0DBC  0140               	movlb	0	; select bank0
  3526  0DBD  086D               	movf	vfpfcnvrt@fmt,w
  3527  0DBE  0086               	movwf	6
  3528  0DBF  0187               	clrf	7
  3529  0DC0  3F40               	moviw [0]fsr1
  3530  0DC1  0141               	movlb	1	; select bank1
  3531  0DC2  00DD               	movwf	??_vfpfcnvrt^(0+128)
  3532  0DC3  3F41               	moviw [1]fsr1
  3533  0DC4  00DE               	movwf	(??_vfpfcnvrt^(0+128)+1)
  3534  0DC5  085D               	movf	??_vfpfcnvrt^(0+128),w
  3535  0DC6  0084               	movwf	4
  3536  0DC7  085E               	movf	(??_vfpfcnvrt+1)^(0+128),w
  3537  0DC8  0085               	movwf	5
  3538  0DC9  0012               	moviw fsr0++
  3539  0DCA  3A2E               	xorlw	46
  3540  0DCB  1D03               	btfss	3,2
  3541  0DCC  2E47               	goto	l3899
  3542                           
  3543                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 741:       
      +                                prec = 0;
  3544  0DCD  0142               	movlb	2	; select bank2
  3545  0DCE  01EC               	clrf	_prec^(0+256)
  3546  0DCF  01ED               	clrf	(_prec+1)^(0+256)
  3547                           
  3548                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 742:       
      +                                ++*fmt;
  3549  0DD0  0140               	movlb	0	; select bank0
  3550  0DD1  086D               	movf	vfpfcnvrt@fmt,w
  3551  0DD2  0086               	movwf	6
  3552  0DD3  0187               	clrf	7
  3553  0DD4  3001               	movlw	1
  3554  0DD5  0781               	addwf	1,f
  3555  0DD6  3141               	addfsr 1,1
  3556  0DD7  1803               	skipnc
  3557  0DD8  0A81               	incf	1,f
  3558                           
  3559                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 743:       
      +                                if ((*fmt)[0] == '*') {
  3560  0DD9  086D               	movf	vfpfcnvrt@fmt,w
  3561  0DDA  0086               	movwf	6
  3562  0DDB  0187               	clrf	7
  3563  0DDC  3F40               	moviw [0]fsr1
  3564  0DDD  0141               	movlb	1	; select bank1
  3565  0DDE  00DD               	movwf	??_vfpfcnvrt^(0+128)
  3566  0DDF  3F41               	moviw [1]fsr1
  3567  0DE0  00DE               	movwf	(??_vfpfcnvrt^(0+128)+1)
  3568  0DE1  085D               	movf	??_vfpfcnvrt^(0+128),w
  3569  0DE2  0084               	movwf	4
  3570  0DE3  085E               	movf	(??_vfpfcnvrt+1)^(0+128),w
  3571  0DE4  0085               	movwf	5
  3572  0DE5  0012               	moviw fsr0++
  3573  0DE6  3A2A               	xorlw	42
  3574  0DE7  1D03               	btfss	3,2
  3575  0DE8  2E02               	goto	l3889
  3576                           
  3577                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 744:       
      +                                    ++*fmt;
  3578  0DE9  0140               	movlb	0	; select bank0
  3579  0DEA  086D               	movf	vfpfcnvrt@fmt,w
  3580  0DEB  0086               	movwf	6
  3581  0DEC  0187               	clrf	7
  3582  0DED  3001               	movlw	1
  3583  0DEE  0781               	addwf	1,f
  3584  0DEF  3141               	addfsr 1,1
  3585  0DF0  1803               	skipnc
  3586  0DF1  0A81               	incf	1,f
  3587                           
  3588                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 745:       
      +                                    prec = (*(int *)__va_arg(*(int **)ap, (int)0));
  3589  0DF2  086E               	movf	vfpfcnvrt@ap,w
  3590  0DF3  0086               	movwf	6
  3591  0DF4  3001               	movlw	1	; select bank2/3
  3592  0DF5  0087               	movwf	7
  3593  0DF6  0801               	movf	1,w
  3594  0DF7  0084               	movwf	4
  3595  0DF8  3001               	movlw	1	; select bank2/3
  3596  0DF9  0085               	movwf	5
  3597  0DFA  3002               	movlw	2
  3598  0DFB  0781               	addwf	1,f
  3599  0DFC  3F00               	moviw [0]fsr0
  3600  0DFD  0142               	movlb	2	; select bank2
  3601  0DFE  00EC               	movwf	_prec^(0+256)
  3602  0DFF  3F01               	moviw [1]fsr0
  3603  0E00  00ED               	movwf	(_prec+1)^(0+256)
  3604                           
  3605                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 746:       
      +                                } else {
  3606  0E01  2E47               	goto	l3899
  3607  0E02                     l3889:	
  3608                           
  3609                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 747:       
      +                                    prec = atoi(*fmt);
  3610  0E02  0140               	movlb	0	; select bank0
  3611  0E03  086D               	movf	vfpfcnvrt@fmt,w
  3612  0E04  0086               	movwf	6
  3613  0E05  0187               	clrf	7
  3614  0E06  3F40               	moviw [0]fsr1
  3615  0E07  00F6               	movwf	atoi@s
  3616  0E08  3F41               	moviw [1]fsr1
  3617  0E09  00F7               	movwf	atoi@s+1
  3618  0E0A  3193  23C4  318C   	fcall	_atoi
  3619  0E0D  0877               	movf	?_atoi+1,w
  3620  0E0E  0142               	movlb	2	; select bank2
  3621  0E0F  00ED               	movwf	(_prec+1)^(0+256)
  3622  0E10  0876               	movf	?_atoi,w
  3623  0E11  00EC               	movwf	_prec^(0+256)
  3624                           
  3625                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 748:       
      +                                    while ((0 ? isdigit((*fmt)[0]) : ((unsigned)((*fmt)[0])-'0') < 10)) {
  3626  0E12  2E1C               	goto	l3893
  3627  0E13                     l3891:	
  3628                           
  3629                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 749:       
      +                                        ++*fmt;
  3630  0E13  0140               	movlb	0	; select bank0
  3631  0E14  086D               	movf	vfpfcnvrt@fmt,w
  3632  0E15  0086               	movwf	6
  3633  0E16  0187               	clrf	7
  3634  0E17  3001               	movlw	1
  3635  0E18  0781               	addwf	1,f
  3636  0E19  3141               	addfsr 1,1
  3637  0E1A  1803               	skipnc
  3638  0E1B  0A81               	incf	1,f
  3639  0E1C                     l3893:	
  3640                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 748:       
      +                                    while ((0 ? isdigit((*fmt)[0]) : ((unsigned)((*fmt)[0])-'0') < 10)) {
  3641                           
  3642  0E1C  0140               	movlb	0	; select bank0
  3643  0E1D  086D               	movf	vfpfcnvrt@fmt,w
  3644  0E1E  0086               	movwf	6
  3645  0E1F  0187               	clrf	7
  3646  0E20  3F40               	moviw [0]fsr1
  3647  0E21  0141               	movlb	1	; select bank1
  3648  0E22  00DD               	movwf	??_vfpfcnvrt^(0+128)
  3649  0E23  3F41               	moviw [1]fsr1
  3650  0E24  00DE               	movwf	(??_vfpfcnvrt^(0+128)+1)
  3651  0E25  085D               	movf	??_vfpfcnvrt^(0+128),w
  3652  0E26  0084               	movwf	4
  3653  0E27  085E               	movf	(??_vfpfcnvrt+1)^(0+128),w
  3654  0E28  0085               	movwf	5
  3655  0E29  0800               	movf	0,w	;code access
  3656  0E2A  3ED0               	addlw	208
  3657  0E2B  00DF               	movwf	(??_vfpfcnvrt+2)^(0+128)
  3658  0E2C  30FF               	movlw	255
  3659  0E2D  1803               	skipnc
  3660  0E2E  3000               	movlw	0
  3661  0E2F  00E0               	movwf	((??_vfpfcnvrt+2)^(0+128)+1)
  3662  0E30  3000               	movlw	0
  3663  0E31  0260               	subwf	(??_vfpfcnvrt+3)^(0+128),w
  3664  0E32  300A               	movlw	10
  3665  0E33  1903               	skipnz
  3666  0E34  025F               	subwf	(??_vfpfcnvrt+2)^(0+128),w
  3667  0E35  1803               	btfsc	3,0
  3668  0E36  2E39               	goto	u5590
  3669  0E37  3001               	movlw	1
  3670  0E38  2E3A               	goto	u5600
  3671  0E39                     u5590:	
  3672  0E39  3000               	movlw	0
  3673  0E3A                     u5600:	
  3674  0E3A  00E1               	movwf	(??_vfpfcnvrt+4)^(0+128)
  3675  0E3B  01E2               	clrf	((??_vfpfcnvrt+4)^(0+128)+1)
  3676  0E3C  0861               	movf	(??_vfpfcnvrt+4)^(0+128),w
  3677  0E3D  0142               	movlb	2	; select bank2
  3678  0E3E  00A4               	movwf	_vfpfcnvrt$666^(0+256)
  3679  0E3F  0141               	movlb	1	; select bank1
  3680  0E40  0862               	movf	(??_vfpfcnvrt+5)^(0+128),w
  3681  0E41  0142               	movlb	2	; select bank2
  3682  0E42  00A5               	movwf	(_vfpfcnvrt$666+1)^(0+256)
  3683  0E43  0824               	movf	_vfpfcnvrt$666^(0+256),w
  3684  0E44  0425               	iorwf	(_vfpfcnvrt$666+1)^(0+256),w
  3685  0E45  1D03               	btfss	3,2
  3686  0E46  2E13               	goto	l3891
  3687  0E47                     l3899:	
  3688                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 752:       
      +                            }
  3689                           
  3690                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 751:       
      +                                }
  3691                           
  3692                           
  3693                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 757:       
      +                            ct[0] = tolower((int)(*fmt)[0]);
  3694  0E47  0140               	movlb	0	; select bank0
  3695  0E48  086D               	movf	vfpfcnvrt@fmt,w
  3696  0E49  0086               	movwf	6
  3697  0E4A  0187               	clrf	7
  3698  0E4B  3F40               	moviw [0]fsr1
  3699  0E4C  0141               	movlb	1	; select bank1
  3700  0E4D  00DD               	movwf	??_vfpfcnvrt^(0+128)
  3701  0E4E  3F41               	moviw [1]fsr1
  3702  0E4F  00DE               	movwf	(??_vfpfcnvrt^(0+128)+1)
  3703  0E50  085D               	movf	??_vfpfcnvrt^(0+128),w
  3704  0E51  0084               	movwf	4
  3705  0E52  085E               	movf	(??_vfpfcnvrt+1)^(0+128),w
  3706  0E53  0085               	movwf	5
  3707  0E54  0800               	movf	0,w	;code access
  3708  0E55  00DF               	movwf	(??_vfpfcnvrt+2)^(0+128)
  3709  0E56  01E0               	clrf	((??_vfpfcnvrt+2)^(0+128)+1)
  3710  0E57  085F               	movf	(??_vfpfcnvrt+2)^(0+128),w
  3711  0E58  00F6               	movwf	tolower@c
  3712  0E59  0860               	movf	(??_vfpfcnvrt+3)^(0+128),w
  3713  0E5A  00F7               	movwf	tolower@c+1
  3714  0E5B  319D  25C4  318C   	fcall	_tolower
  3715  0E5E  0876               	movf	?_tolower,w
  3716  0E5F  0141               	movlb	1	; select bank1
  3717  0E60  00E1               	movwf	(??_vfpfcnvrt+4)^(0+128)
  3718  0E61  0861               	movf	(??_vfpfcnvrt+4)^(0+128),w
  3719  0E62  0142               	movlb	2	; select bank2
  3720  0E63  00AC               	movwf	vfpfcnvrt@ct^(0+256)
  3721                           
  3722                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 758:       
      +                            if (ct[0]) {
  3723  0E64  082C               	movf	vfpfcnvrt@ct^(0+256),w
  3724  0E65  1903               	btfsc	3,2
  3725  0E66  2EAA               	goto	l3909
  3726                           
  3727                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 759:       
      +                                ct[1] = tolower((int)(*fmt)[1]);
  3728  0E67  0140               	movlb	0	; select bank0
  3729  0E68  086D               	movf	vfpfcnvrt@fmt,w
  3730  0E69  0086               	movwf	6
  3731  0E6A  0187               	clrf	7
  3732  0E6B  3F40               	moviw [0]fsr1
  3733  0E6C  0141               	movlb	1	; select bank1
  3734  0E6D  00DD               	movwf	??_vfpfcnvrt^(0+128)
  3735  0E6E  3F41               	moviw [1]fsr1
  3736  0E6F  00DE               	movwf	(??_vfpfcnvrt^(0+128)+1)
  3737  0E70  3001               	movlw	1
  3738  0E71  075D               	addwf	??_vfpfcnvrt^(0+128),w
  3739  0E72  0084               	movwf	4
  3740  0E73  085E               	movf	(??_vfpfcnvrt^(0+128)+1),w
  3741  0E74  1803               	skipnc
  3742  0E75  0A5E               	incf	(??_vfpfcnvrt^(0+128)+1),w
  3743  0E76  0085               	movwf	5
  3744  0E77  0800               	movf	0,w	;code access
  3745  0E78  00DF               	movwf	(??_vfpfcnvrt+2)^(0+128)
  3746  0E79  01E0               	clrf	((??_vfpfcnvrt+2)^(0+128)+1)
  3747  0E7A  085F               	movf	(??_vfpfcnvrt+2)^(0+128),w
  3748  0E7B  00F6               	movwf	tolower@c
  3749  0E7C  0860               	movf	(??_vfpfcnvrt+3)^(0+128),w
  3750  0E7D  00F7               	movwf	tolower@c+1
  3751  0E7E  319D  25C4  318C   	fcall	_tolower
  3752  0E81  0876               	movf	?_tolower,w
  3753  0E82  0141               	movlb	1	; select bank1
  3754  0E83  00E1               	movwf	(??_vfpfcnvrt+4)^(0+128)
  3755  0E84  0861               	movf	(??_vfpfcnvrt+4)^(0+128),w
  3756  0E85  0142               	movlb	2	; select bank2
  3757  0E86  00AD               	movwf	(vfpfcnvrt@ct^(0+256)+1)
  3758                           
  3759                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 760:       
      +                                if (ct[1]) {
  3760  0E87  082D               	movf	(vfpfcnvrt@ct^(0+256)+1),w
  3761  0E88  1903               	btfsc	3,2
  3762  0E89  2EAA               	goto	l3909
  3763                           
  3764                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 761:       
      +                                    ct[2] = tolower((int)(*fmt)[2]);
  3765  0E8A  0140               	movlb	0	; select bank0
  3766  0E8B  086D               	movf	vfpfcnvrt@fmt,w
  3767  0E8C  0086               	movwf	6
  3768  0E8D  0187               	clrf	7
  3769  0E8E  3F40               	moviw [0]fsr1
  3770  0E8F  0141               	movlb	1	; select bank1
  3771  0E90  00DD               	movwf	??_vfpfcnvrt^(0+128)
  3772  0E91  3F41               	moviw [1]fsr1
  3773  0E92  00DE               	movwf	(??_vfpfcnvrt^(0+128)+1)
  3774  0E93  3002               	movlw	2
  3775  0E94  075D               	addwf	??_vfpfcnvrt^(0+128),w
  3776  0E95  0084               	movwf	4
  3777  0E96  085E               	movf	(??_vfpfcnvrt^(0+128)+1),w
  3778  0E97  1803               	skipnc
  3779  0E98  0A5E               	incf	(??_vfpfcnvrt^(0+128)+1),w
  3780  0E99  0085               	movwf	5
  3781  0E9A  0800               	movf	0,w	;code access
  3782  0E9B  00DF               	movwf	(??_vfpfcnvrt+2)^(0+128)
  3783  0E9C  01E0               	clrf	((??_vfpfcnvrt+2)^(0+128)+1)
  3784  0E9D  085F               	movf	(??_vfpfcnvrt+2)^(0+128),w
  3785  0E9E  00F6               	movwf	tolower@c
  3786  0E9F  0860               	movf	(??_vfpfcnvrt+3)^(0+128),w
  3787  0EA0  00F7               	movwf	tolower@c+1
  3788  0EA1  319D  25C4  318C   	fcall	_tolower
  3789  0EA4  0876               	movf	?_tolower,w
  3790  0EA5  0141               	movlb	1	; select bank1
  3791  0EA6  00E1               	movwf	(??_vfpfcnvrt+4)^(0+128)
  3792  0EA7  0861               	movf	(??_vfpfcnvrt+4)^(0+128),w
  3793  0EA8  0142               	movlb	2	; select bank2
  3794  0EA9  00AE               	movwf	(vfpfcnvrt@ct^(0+256)+2)
  3795  0EAA                     l3909:	
  3796                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 763:       
      +                            }
  3797                           
  3798                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 762:       
      +                                }
  3799                           
  3800                           
  3801                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 920:       
      +                            if (ct[0] == 'f') {
  3802  0EAA  3066               	movlw	102
  3803  0EAB  062C               	xorwf	vfpfcnvrt@ct^(0+256),w
  3804  0EAC  1D03               	btfss	3,2
  3805  0EAD  2EFC               	goto	l3921
  3806                           
  3807                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 922:       
      +                                c = (*fmt)[0];
  3808  0EAE  0140               	movlb	0	; select bank0
  3809  0EAF  086D               	movf	vfpfcnvrt@fmt,w
  3810  0EB0  0086               	movwf	6
  3811  0EB1  0187               	clrf	7
  3812  0EB2  3F40               	moviw [0]fsr1
  3813  0EB3  0141               	movlb	1	; select bank1
  3814  0EB4  00DD               	movwf	??_vfpfcnvrt^(0+128)
  3815  0EB5  3F41               	moviw [1]fsr1
  3816  0EB6  00DE               	movwf	(??_vfpfcnvrt^(0+128)+1)
  3817  0EB7  085D               	movf	??_vfpfcnvrt^(0+128),w
  3818  0EB8  0084               	movwf	4
  3819  0EB9  085E               	movf	(??_vfpfcnvrt+1)^(0+128),w
  3820  0EBA  0085               	movwf	5
  3821  0EBB  0800               	movf	0,w	;code access
  3822  0EBC  00DF               	movwf	(??_vfpfcnvrt+2)^(0+128)
  3823  0EBD  085F               	movf	(??_vfpfcnvrt+2)^(0+128),w
  3824  0EBE  0142               	movlb	2	; select bank2
  3825  0EBF  00AF               	movwf	vfpfcnvrt@c^(0+256)
  3826                           
  3827                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 923:       
      +                                ++*fmt;
  3828  0EC0  0140               	movlb	0	; select bank0
  3829  0EC1  086D               	movf	vfpfcnvrt@fmt,w
  3830  0EC2  0086               	movwf	6
  3831  0EC3  0187               	clrf	7
  3832  0EC4  3001               	movlw	1
  3833  0EC5  0781               	addwf	1,f
  3834  0EC6  3141               	addfsr 1,1
  3835  0EC7  1803               	skipnc
  3836  0EC8  0A81               	incf	1,f
  3837                           
  3838                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 924:       
      +                                f = (long double)(*(double *)__va_arg(*(double **)ap, (double)0));
  3839  0EC9  086E               	movf	vfpfcnvrt@ap,w
  3840  0ECA  0086               	movwf	6
  3841  0ECB  3001               	movlw	1	; select bank2/3
  3842  0ECC  0087               	movwf	7
  3843  0ECD  0801               	movf	1,w
  3844  0ECE  0084               	movwf	4
  3845  0ECF  3001               	movlw	1	; select bank2/3
  3846  0ED0  0085               	movwf	5
  3847  0ED1  3004               	movlw	4
  3848  0ED2  0781               	addwf	1,f
  3849  0ED3  3F00               	moviw [0]fsr0
  3850  0ED4  0142               	movlb	2	; select bank2
  3851  0ED5  00A8               	movwf	vfpfcnvrt@f^(0+256)
  3852  0ED6  3F01               	moviw [1]fsr0
  3853  0ED7  00A9               	movwf	(vfpfcnvrt@f+1)^(0+256)
  3854  0ED8  3F02               	moviw [2]fsr0
  3855  0ED9  00AA               	movwf	(vfpfcnvrt@f+2)^(0+256)
  3856  0EDA  3F03               	moviw [3]fsr0
  3857  0EDB  00AB               	movwf	(vfpfcnvrt@f+3)^(0+256)
  3858                           
  3859                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 926:       
      +                                return efgtoa(fp, f, c);
  3860  0EDC  082B               	movf	(vfpfcnvrt@f+3)^(0+256),w
  3861  0EDD  0140               	movlb	0	; select bank0
  3862  0EDE  00EB               	movwf	efgtoa@f+3
  3863  0EDF  0142               	movlb	2	; select bank2
  3864  0EE0  082A               	movf	(vfpfcnvrt@f+2)^(0+256),w
  3865  0EE1  0140               	movlb	0	; select bank0
  3866  0EE2  00EA               	movwf	efgtoa@f+2
  3867  0EE3  0142               	movlb	2	; select bank2
  3868  0EE4  0829               	movf	(vfpfcnvrt@f+1)^(0+256),w
  3869  0EE5  0140               	movlb	0	; select bank0
  3870  0EE6  00E9               	movwf	efgtoa@f+1
  3871  0EE7  0142               	movlb	2	; select bank2
  3872  0EE8  0828               	movf	vfpfcnvrt@f^(0+256),w
  3873  0EE9  0140               	movlb	0	; select bank0
  3874  0EEA  00E8               	movwf	efgtoa@f
  3875  0EEB  0142               	movlb	2	; select bank2
  3876  0EEC  082F               	movf	vfpfcnvrt@c^(0+256),w
  3877  0EED  0141               	movlb	1	; select bank1
  3878  0EEE  00DD               	movwf	??_vfpfcnvrt^(0+128)
  3879  0EEF  085D               	movf	??_vfpfcnvrt^(0+128),w
  3880  0EF0  0140               	movlb	0	; select bank0
  3881  0EF1  00EC               	movwf	efgtoa@c
  3882  0EF2  0142               	movlb	2	; select bank2
  3883  0EF3  0830               	movf	vfpfcnvrt@fp^(0+256),w
  3884  0EF4  3181  218C         	fcall	_efgtoa
  3885  0EF6  0140               	movlb	0	; select bank0
  3886  0EF7  0869               	movf	?_efgtoa+1,w
  3887  0EF8  00EE               	movwf	?_vfpfcnvrt+1
  3888  0EF9  0868               	movf	?_efgtoa,w
  3889  0EFA  00ED               	movwf	?_vfpfcnvrt
  3890  0EFB  0008               	return
  3891  0EFC                     l3921:	
  3892                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 927:       
      +                            }
  3893                           
  3894                           
  3895                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 928:       
      +                            if (!strncmp(ct, "lf", ((sizeof("lf")/sizeof("lf"[0]))-1))) {
  3896  0EFC  302C               	movlw	low (STR_11| (0+32768))
  3897  0EFD  00F0               	movwf	strncmp@_r
  3898  0EFE  30A0               	movlw	high (STR_11| (0+32768))
  3899  0EFF  00F1               	movwf	strncmp@_r+1
  3900  0F00  3002               	movlw	2
  3901  0F01  00F2               	movwf	strncmp@n
  3902  0F02  3000               	movlw	0
  3903  0F03  00F3               	movwf	strncmp@n+1
  3904  0F04  302C               	movlw	(low (vfpfcnvrt@ct| (0+256)))& (0+255)
  3905  0F05  3190  201B  318C   	fcall	_strncmp
  3906  0F08  0870               	movf	?_strncmp,w
  3907  0F09  0471               	iorwf	?_strncmp+1,w
  3908  0F0A  1D03               	btfss	3,2
  3909  0F0B  2F9E               	goto	l3939
  3910                           
  3911                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 931:       
      +                                if ((0 ? isupper((int)(*fmt)[0]) : ((unsigned)((int)(*fmt)[0])-'A') < 26)) {
  3912  0F0C  0140               	movlb	0	; select bank0
  3913  0F0D  086D               	movf	vfpfcnvrt@fmt,w
  3914  0F0E  0086               	movwf	6
  3915  0F0F  0187               	clrf	7
  3916  0F10  3F40               	moviw [0]fsr1
  3917  0F11  0141               	movlb	1	; select bank1
  3918  0F12  00DD               	movwf	??_vfpfcnvrt^(0+128)
  3919  0F13  3F41               	moviw [1]fsr1
  3920  0F14  00DE               	movwf	(??_vfpfcnvrt^(0+128)+1)
  3921  0F15  3001               	movlw	1
  3922  0F16  075D               	addwf	??_vfpfcnvrt^(0+128),w
  3923  0F17  0084               	movwf	4
  3924  0F18  085E               	movf	(??_vfpfcnvrt^(0+128)+1),w
  3925  0F19  1803               	skipnc
  3926  0F1A  0A5E               	incf	(??_vfpfcnvrt^(0+128)+1),w
  3927  0F1B  0085               	movwf	5
  3928  0F1C  0800               	movf	0,w	;code access
  3929  0F1D  00DF               	movwf	(??_vfpfcnvrt+2)^(0+128)
  3930  0F1E  085F               	movf	(??_vfpfcnvrt+2)^(0+128),w
  3931  0F1F  0142               	movlb	2	; select bank2
  3932  0F20  00AF               	movwf	vfpfcnvrt@c^(0+256)
  3933  0F21  0140               	movlb	0	; select bank0
  3934  0F22  086D               	movf	vfpfcnvrt@fmt,w
  3935  0F23  0086               	movwf	6
  3936  0F24  0187               	clrf	7
  3937  0F25  3F40               	moviw [0]fsr1
  3938  0F26  0141               	movlb	1	; select bank1
  3939  0F27  00DD               	movwf	??_vfpfcnvrt^(0+128)
  3940  0F28  3F41               	moviw [1]fsr1
  3941  0F29  00DE               	movwf	(??_vfpfcnvrt^(0+128)+1)
  3942  0F2A  085D               	movf	??_vfpfcnvrt^(0+128),w
  3943  0F2B  0084               	movwf	4
  3944  0F2C  085E               	movf	(??_vfpfcnvrt+1)^(0+128),w
  3945  0F2D  0085               	movwf	5
  3946  0F2E  0800               	movf	0,w	;code access
  3947  0F2F  3EBF               	addlw	191
  3948  0F30  00DF               	movwf	(??_vfpfcnvrt+2)^(0+128)
  3949  0F31  30FF               	movlw	255
  3950  0F32  1803               	skipnc
  3951  0F33  3000               	movlw	0
  3952  0F34  00E0               	movwf	((??_vfpfcnvrt+2)^(0+128)+1)
  3953  0F35  3000               	movlw	0
  3954  0F36  0260               	subwf	(??_vfpfcnvrt+3)^(0+128),w
  3955  0F37  301A               	movlw	26
  3956  0F38  1903               	skipnz
  3957  0F39  025F               	subwf	(??_vfpfcnvrt+2)^(0+128),w
  3958  0F3A  1803               	btfsc	3,0
  3959  0F3B  2F3E               	goto	u5660
  3960  0F3C  3001               	movlw	1
  3961  0F3D  2F3F               	goto	u5670
  3962  0F3E                     u5660:	
  3963  0F3E  3000               	movlw	0
  3964  0F3F                     u5670:	
  3965  0F3F  00E1               	movwf	(??_vfpfcnvrt+4)^(0+128)
  3966  0F40  01E2               	clrf	((??_vfpfcnvrt+4)^(0+128)+1)
  3967  0F41  0861               	movf	(??_vfpfcnvrt+4)^(0+128),w
  3968  0F42  0142               	movlb	2	; select bank2
  3969  0F43  00A6               	movwf	_vfpfcnvrt$670^(0+256)
  3970  0F44  0141               	movlb	1	; select bank1
  3971  0F45  0862               	movf	(??_vfpfcnvrt+5)^(0+128),w
  3972  0F46  0142               	movlb	2	; select bank2
  3973  0F47  00A7               	movwf	(_vfpfcnvrt$670+1)^(0+256)
  3974  0F48  0826               	movf	_vfpfcnvrt$670^(0+256),w
  3975  0F49  0427               	iorwf	(_vfpfcnvrt$670+1)^(0+256),w
  3976  0F4A  1903               	btfsc	3,2
  3977  0F4B  2F60               	goto	l3931
  3978                           
  3979                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 932:       
      +                                    f = (*(long double *)__va_arg(*(long double **)ap, (long double)0));
  3980  0F4C  0140               	movlb	0	; select bank0
  3981  0F4D  086E               	movf	vfpfcnvrt@ap,w
  3982  0F4E  0086               	movwf	6
  3983  0F4F  3001               	movlw	1	; select bank2/3
  3984  0F50  0087               	movwf	7
  3985  0F51  0801               	movf	1,w
  3986  0F52  0084               	movwf	4
  3987  0F53  3001               	movlw	1	; select bank2/3
  3988  0F54  0085               	movwf	5
  3989  0F55  3004               	movlw	4
  3990  0F56  0781               	addwf	1,f
  3991  0F57  3F00               	moviw [0]fsr0
  3992  0F58  0142               	movlb	2	; select bank2
  3993  0F59  00A8               	movwf	vfpfcnvrt@f^(0+256)
  3994  0F5A  3F01               	moviw [1]fsr0
  3995  0F5B  00A9               	movwf	(vfpfcnvrt@f+1)^(0+256)
  3996  0F5C  3F02               	moviw [2]fsr0
  3997  0F5D  00AA               	movwf	(vfpfcnvrt@f+2)^(0+256)
  3998  0F5E  3F03               	moviw [3]fsr0
  3999  0F5F  2F73               	goto	L1
  4000  0F60                     l3931:	
  4001                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 933:       
      +                                } else {
  4002                           
  4003                           
  4004                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 934:       
      +                                    f = (long double)(*(double *)__va_arg(*(double **)ap, (double)0));
  4005  0F60  0140               	movlb	0	; select bank0
  4006  0F61  086E               	movf	vfpfcnvrt@ap,w
  4007  0F62  0086               	movwf	6
  4008  0F63  3001               	movlw	1	; select bank2/3
  4009  0F64  0087               	movwf	7
  4010  0F65  0801               	movf	1,w
  4011  0F66  0084               	movwf	4
  4012  0F67  3001               	movlw	1	; select bank2/3
  4013  0F68  0085               	movwf	5
  4014  0F69  3004               	movlw	4
  4015  0F6A  0781               	addwf	1,f
  4016  0F6B  3F00               	moviw [0]fsr0
  4017  0F6C  0142               	movlb	2	; select bank2
  4018  0F6D  00A8               	movwf	vfpfcnvrt@f^(0+256)
  4019  0F6E  3F01               	moviw [1]fsr0
  4020  0F6F  00A9               	movwf	(vfpfcnvrt@f+1)^(0+256)
  4021  0F70  3F02               	moviw [2]fsr0
  4022  0F71  00AA               	movwf	(vfpfcnvrt@f+2)^(0+256)
  4023  0F72  3F03               	moviw [3]fsr0
  4024  0F73                     L1:	
  4025  0F73  00AB               	movwf	(vfpfcnvrt@f+3)^(0+256)
  4026                           
  4027                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 936:       
      +                                *fmt += ((sizeof("lf")/sizeof("lf"[0]))-1);
  4028                           
  4029                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 935:       
      +                                }
  4030  0F74  0140               	movlb	0	; select bank0
  4031  0F75  086D               	movf	vfpfcnvrt@fmt,w
  4032  0F76  0086               	movwf	6
  4033  0F77  0187               	clrf	7
  4034  0F78  3002               	movlw	2
  4035  0F79  0781               	addwf	1,f
  4036  0F7A  3141               	addfsr 1,1
  4037  0F7B  1803               	skipnc
  4038  0F7C  0A81               	incf	1,f
  4039                           
  4040                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 938:       
      +                                return efgtoa(fp, f, c);
  4041  0F7D  0142               	movlb	2	; select bank2
  4042  0F7E  082B               	movf	(vfpfcnvrt@f+3)^(0+256),w
  4043  0F7F  0140               	movlb	0	; select bank0
  4044  0F80  00EB               	movwf	efgtoa@f+3
  4045  0F81  0142               	movlb	2	; select bank2
  4046  0F82  082A               	movf	(vfpfcnvrt@f+2)^(0+256),w
  4047  0F83  0140               	movlb	0	; select bank0
  4048  0F84  00EA               	movwf	efgtoa@f+2
  4049  0F85  0142               	movlb	2	; select bank2
  4050  0F86  0829               	movf	(vfpfcnvrt@f+1)^(0+256),w
  4051  0F87  0140               	movlb	0	; select bank0
  4052  0F88  00E9               	movwf	efgtoa@f+1
  4053  0F89  0142               	movlb	2	; select bank2
  4054  0F8A  0828               	movf	vfpfcnvrt@f^(0+256),w
  4055  0F8B  0140               	movlb	0	; select bank0
  4056  0F8C  00E8               	movwf	efgtoa@f
  4057  0F8D  0142               	movlb	2	; select bank2
  4058  0F8E  082F               	movf	vfpfcnvrt@c^(0+256),w
  4059  0F8F  0141               	movlb	1	; select bank1
  4060  0F90  00DD               	movwf	??_vfpfcnvrt^(0+128)
  4061  0F91  085D               	movf	??_vfpfcnvrt^(0+128),w
  4062  0F92  0140               	movlb	0	; select bank0
  4063  0F93  00EC               	movwf	efgtoa@c
  4064  0F94  0142               	movlb	2	; select bank2
  4065  0F95  0830               	movf	vfpfcnvrt@fp^(0+256),w
  4066  0F96  3181  218C         	fcall	_efgtoa
  4067  0F98  0140               	movlb	0	; select bank0
  4068  0F99  0869               	movf	?_efgtoa+1,w
  4069  0F9A  00EE               	movwf	?_vfpfcnvrt+1
  4070  0F9B  0868               	movf	?_efgtoa,w
  4071  0F9C  00ED               	movwf	?_vfpfcnvrt
  4072  0F9D  0008               	return
  4073  0F9E                     l3939:	
  4074                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 939:       
      +                            }
  4075                           
  4076                           
  4077                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 1350:      
      +                             if ((*fmt)[0] == '%') {
  4078  0F9E  0140               	movlb	0	; select bank0
  4079  0F9F  086D               	movf	vfpfcnvrt@fmt,w
  4080  0FA0  0086               	movwf	6
  4081  0FA1  0187               	clrf	7
  4082  0FA2  3F40               	moviw [0]fsr1
  4083  0FA3  0141               	movlb	1	; select bank1
  4084  0FA4  00DD               	movwf	??_vfpfcnvrt^(0+128)
  4085  0FA5  3F41               	moviw [1]fsr1
  4086  0FA6  00DE               	movwf	(??_vfpfcnvrt^(0+128)+1)
  4087  0FA7  085D               	movf	??_vfpfcnvrt^(0+128),w
  4088  0FA8  0084               	movwf	4
  4089  0FA9  085E               	movf	(??_vfpfcnvrt+1)^(0+128),w
  4090  0FAA  0085               	movwf	5
  4091  0FAB  0012               	moviw fsr0++
  4092  0FAC  3A25               	xorlw	37
  4093  0FAD  1D03               	btfss	3,2
  4094  0FAE  2FCA               	goto	l3949
  4095                           
  4096                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 1351:      
      +                                 ++*fmt;
  4097  0FAF  0140               	movlb	0	; select bank0
  4098  0FB0  086D               	movf	vfpfcnvrt@fmt,w
  4099  0FB1  0086               	movwf	6
  4100  0FB2  0187               	clrf	7
  4101  0FB3  3001               	movlw	1
  4102  0FB4  0781               	addwf	1,f
  4103  0FB5  3141               	addfsr 1,1
  4104  0FB6  1803               	skipnc
  4105  0FB7  0A81               	incf	1,f
  4106                           
  4107                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 1352:      
      +                                 fputc((int)'%', fp);
  4108  0FB8  3025               	movlw	37
  4109  0FB9  00F0               	movwf	fputc@c
  4110  0FBA  3000               	movlw	0
  4111  0FBB  00F1               	movwf	fputc@c+1
  4112  0FBC  0142               	movlb	2	; select bank2
  4113  0FBD  0830               	movf	vfpfcnvrt@fp^(0+256),w
  4114  0FBE  0141               	movlb	1	; select bank1
  4115  0FBF  00DD               	movwf	??_vfpfcnvrt^(0+128)
  4116  0FC0  085D               	movf	??_vfpfcnvrt^(0+128),w
  4117  0FC1  00F2               	movwf	fputc@fp
  4118  0FC2  319F  2764         	fcall	_fputc
  4119                           
  4120                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 1353:      
      +                                 return 1;
  4121  0FC4  3001               	movlw	1
  4122  0FC5  0140               	movlb	0	; select bank0
  4123  0FC6  00ED               	movwf	?_vfpfcnvrt
  4124  0FC7  3000               	movlw	0
  4125  0FC8  00EE               	movwf	?_vfpfcnvrt+1
  4126  0FC9  0008               	return
  4127  0FCA                     l3949:	
  4128                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 1354:      
      +                             }
  4129                           
  4130                           
  4131                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 1357:      
      +                             ++*fmt;
  4132  0FCA  0140               	movlb	0	; select bank0
  4133  0FCB  086D               	movf	vfpfcnvrt@fmt,w
  4134  0FCC  0086               	movwf	6
  4135  0FCD  0187               	clrf	7
  4136  0FCE  3001               	movlw	1
  4137  0FCF  0781               	addwf	1,f
  4138  0FD0  3141               	addfsr 1,1
  4139  0FD1  1803               	skipnc
  4140  0FD2  0A81               	incf	1,f
  4141                           
  4142                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 1358:      
      +                             return 0;
  4143  0FD3  01ED               	clrf	?_vfpfcnvrt
  4144  0FD4  01EE               	clrf	?_vfpfcnvrt+1
  4145  0FD5  0008               	return
  4146  0FD6                     l3955:	
  4147                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 1359:     }
  4148                           
  4149                           
  4150                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 1362:     f
      +                          putc((int)(*fmt)[0], fp);
  4151  0FD6  0140               	movlb	0	; select bank0
  4152  0FD7  086D               	movf	vfpfcnvrt@fmt,w
  4153  0FD8  0086               	movwf	6
  4154  0FD9  0187               	clrf	7
  4155  0FDA  3F40               	moviw [0]fsr1
  4156  0FDB  0141               	movlb	1	; select bank1
  4157  0FDC  00DD               	movwf	??_vfpfcnvrt^(0+128)
  4158  0FDD  3F41               	moviw [1]fsr1
  4159  0FDE  00DE               	movwf	(??_vfpfcnvrt^(0+128)+1)
  4160  0FDF  085D               	movf	??_vfpfcnvrt^(0+128),w
  4161  0FE0  0084               	movwf	4
  4162  0FE1  085E               	movf	(??_vfpfcnvrt+1)^(0+128),w
  4163  0FE2  0085               	movwf	5
  4164  0FE3  0800               	movf	0,w	;code access
  4165  0FE4  00DF               	movwf	(??_vfpfcnvrt+2)^(0+128)
  4166  0FE5  01E0               	clrf	((??_vfpfcnvrt+2)^(0+128)+1)
  4167  0FE6  085F               	movf	(??_vfpfcnvrt+2)^(0+128),w
  4168  0FE7  00F0               	movwf	fputc@c
  4169  0FE8  0860               	movf	(??_vfpfcnvrt+3)^(0+128),w
  4170  0FE9  00F1               	movwf	fputc@c+1
  4171  0FEA  0142               	movlb	2	; select bank2
  4172  0FEB  0830               	movf	vfpfcnvrt@fp^(0+256),w
  4173  0FEC  0141               	movlb	1	; select bank1
  4174  0FED  00E1               	movwf	(??_vfpfcnvrt+4)^(0+128)
  4175  0FEE  0861               	movf	(??_vfpfcnvrt+4)^(0+128),w
  4176  0FEF  00F2               	movwf	fputc@fp
  4177  0FF0  319F  2764         	fcall	_fputc
  4178                           
  4179                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 1363:     +
      +                          +*fmt;
  4180  0FF2  0140               	movlb	0	; select bank0
  4181  0FF3  086D               	movf	vfpfcnvrt@fmt,w
  4182  0FF4  0086               	movwf	6
  4183  0FF5  0187               	clrf	7
  4184  0FF6  3001               	movlw	1
  4185  0FF7  0781               	addwf	1,f
  4186  0FF8  3141               	addfsr 1,1
  4187  0FF9  1803               	skipnc
  4188  0FFA  0A81               	incf	1,f
  4189                           
  4190                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 1364:     r
      +                          eturn 1;
  4191  0FFB  3001               	movlw	1
  4192  0FFC  00ED               	movwf	?_vfpfcnvrt
  4193  0FFD  3000               	movlw	0
  4194  0FFE  00EE               	movwf	?_vfpfcnvrt+1
  4195  0FFF  0008               	return
  4196  1000                     __end_of_vfpfcnvrt:	
  4197                           
  4198                           	psect	text4
  4199  101B                     __ptext4:	
  4200 ;; *************** function _strncmp *****************
  4201 ;; Defined at:
  4202 ;;		line 3 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\strncmp.c"
  4203 ;; Parameters:    Size  Location     Type
  4204 ;;  _l              1    wreg     PTR const unsigned char 
  4205 ;;		 -> vfpfcnvrt@ct(3), 
  4206 ;;  _r              2    0[COMMON] PTR const unsigned char 
  4207 ;;		 -> STR_13(3), 
  4208 ;;  n               2    2[COMMON] unsigned int 
  4209 ;; Auto vars:     Size  Location     Type
  4210 ;;  _l              1    6[COMMON] PTR const unsigned char 
  4211 ;;		 -> vfpfcnvrt@ct(3), 
  4212 ;;  r               2    7[COMMON] PTR const unsigned char 
  4213 ;;		 -> STR_13(3), 
  4214 ;;  l               1    9[COMMON] PTR const unsigned char 
  4215 ;;		 -> vfpfcnvrt@ct(3), 
  4216 ;; Return value:  Size  Location     Type
  4217 ;;                  2    0[COMMON] int 
  4218 ;; Registers used:
  4219 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath
  4220 ;; Tracked objects:
  4221 ;;		On entry : 0/0
  4222 ;;		On exit  : 0/0
  4223 ;;		Unchanged: 0/0
  4224 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
  4225 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  4226 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  4227 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  4228 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  4229 ;;Total ram usage:       10 bytes
  4230 ;; Hardware stack levels used:    1
  4231 ;; This function calls:
  4232 ;;		Nothing
  4233 ;; This function is called by:
  4234 ;;		_vfpfcnvrt
  4235 ;; This function uses a non-reentrant model
  4236 ;;
  4237                           
  4238                           
  4239                           ;psect for function _strncmp
  4240  101B                     _strncmp:	
  4241                           
  4242                           ;incstack = 0
  4243                           ; Regs used in _strncmp: [wreg-fsr1h+status,2+status,0+pclath]
  4244                           ;strncmp@_l stored from wreg
  4245  101B  00F6               	movwf	strncmp@_l
  4246  101C  0876               	movf	strncmp@_l,w
  4247  101D  00F4               	movwf	??_strncmp
  4248  101E  0874               	movf	??_strncmp,w
  4249  101F  00F9               	movwf	strncmp@l
  4250  1020  0871               	movf	strncmp@_r+1,w
  4251  1021  00F8               	movwf	strncmp@r+1
  4252  1022  0870               	movf	strncmp@_r,w
  4253  1023  00F7               	movwf	strncmp@r
  4254  1024  3001               	movlw	1
  4255  1025  02F2               	subwf	strncmp@n,f
  4256  1026  3000               	movlw	0
  4257  1027  3BF3               	subwfb	strncmp@n+1,f
  4258  1028  0A72               	incf	strncmp@n,w
  4259  1029  1D03               	skipz
  4260  102A  283D               	goto	l3813
  4261  102B  0A73               	incf	strncmp@n+1,w
  4262  102C  1D03               	btfss	3,2
  4263  102D  283D               	goto	l3813
  4264  102E  01F0               	clrf	?_strncmp
  4265  102F  01F1               	clrf	?_strncmp+1
  4266  1030  0008               	return
  4267  1031                     l3807:	
  4268  1031  3001               	movlw	1
  4269  1032  00F4               	movwf	??_strncmp
  4270  1033  0874               	movf	??_strncmp,w
  4271  1034  07F9               	addwf	strncmp@l,f
  4272  1035  3001               	movlw	1
  4273  1036  07F7               	addwf	strncmp@r,f
  4274  1037  3000               	movlw	0
  4275  1038  3DF8               	addwfc	strncmp@r+1,f
  4276  1039  3001               	movlw	1
  4277  103A  02F2               	subwf	strncmp@n,f
  4278  103B  3000               	movlw	0
  4279  103C  3BF3               	subwfb	strncmp@n+1,f
  4280  103D                     l3813:	
  4281  103D  0879               	movf	strncmp@l,w
  4282  103E  0086               	movwf	6
  4283  103F  3001               	movlw	1	; select bank2/3
  4284  1040  0087               	movwf	7
  4285  1041  0801               	movf	1,w
  4286  1042  1903               	btfsc	3,2
  4287  1043  285D               	goto	l3821
  4288  1044  0877               	movf	strncmp@r,w
  4289  1045  0084               	movwf	4
  4290  1046  0878               	movf	strncmp@r+1,w
  4291  1047  0085               	movwf	5
  4292  1048  0012               	moviw fsr0++
  4293  1049  1903               	btfsc	3,2
  4294  104A  285D               	goto	l3821
  4295  104B  0872               	movf	strncmp@n,w
  4296  104C  0473               	iorwf	strncmp@n+1,w
  4297  104D  1903               	btfsc	3,2
  4298  104E  285D               	goto	l3821
  4299  104F  0877               	movf	strncmp@r,w
  4300  1050  0084               	movwf	4
  4301  1051  0878               	movf	strncmp@r+1,w
  4302  1052  0085               	movwf	5
  4303  1053  0800               	movf	0,w	;code access
  4304  1054  00F4               	movwf	??_strncmp
  4305  1055  0879               	movf	strncmp@l,w
  4306  1056  0086               	movwf	6
  4307  1057  3001               	movlw	1	; select bank2/3
  4308  1058  0087               	movwf	7
  4309  1059  0801               	movf	1,w
  4310  105A  0674               	xorwf	??_strncmp,w
  4311  105B  1903               	skipnz
  4312  105C  2831               	goto	l3807
  4313  105D                     l3821:	
  4314  105D  0877               	movf	strncmp@r,w
  4315  105E  0084               	movwf	4
  4316  105F  0878               	movf	strncmp@r+1,w
  4317  1060  0085               	movwf	5
  4318  1061  0800               	movf	0,w	;code access
  4319  1062  00F4               	movwf	??_strncmp
  4320  1063  01F5               	clrf	??_strncmp+1
  4321  1064  09F4               	comf	??_strncmp,f
  4322  1065  09F5               	comf	??_strncmp+1,f
  4323  1066  0AF4               	incf	??_strncmp,f
  4324  1067  1903               	skipnz
  4325  1068  0AF5               	incf	??_strncmp+1,f
  4326  1069  0879               	movf	strncmp@l,w
  4327  106A  0086               	movwf	6
  4328  106B  3001               	movlw	1	; select bank2/3
  4329  106C  0087               	movwf	7
  4330  106D  0801               	movf	1,w
  4331  106E  0774               	addwf	??_strncmp,w
  4332  106F  00F0               	movwf	?_strncmp
  4333  1070  0875               	movf	??_strncmp+1,w
  4334  1071  1803               	skipnc
  4335  1072  0A75               	incf	??_strncmp+1,w
  4336  1073  00F1               	movwf	?_strncmp+1
  4337  1074  0008               	return
  4338  1075                     __end_of_strncmp:	
  4339                           
  4340                           	psect	text5
  4341  018C                     __ptext5:	
  4342 ;; *************** function _efgtoa *****************
  4343 ;; Defined at:
  4344 ;;		line 319 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c"
  4345 ;; Parameters:    Size  Location     Type
  4346 ;;  fp              1    wreg     PTR struct _IO_FILE
  4347 ;;		 -> sprintf@f(5), 
  4348 ;;  f               4   72[BANK0 ] PTR struct _IO_FILE
  4349 ;;  c               1   76[BANK0 ] unsigned char 
  4350 ;; Auto vars:     Size  Location     Type
  4351 ;;  fp              1   32[BANK1 ] PTR struct _IO_FILE
  4352 ;;		 -> sprintf@f(5), 
  4353 ;;  u               4   57[BANK1 ] PTR struct _IO_FILE
  4354 ;;  g               4   49[BANK1 ] PTR struct _IO_FILE
  4355 ;;  l               4   43[BANK1 ] PTR struct _IO_FILE
  4356 ;;  h               4   39[BANK1 ] PTR struct _IO_FILE
  4357 ;;  ou              4    4[BANK1 ] PTR struct _IO_FILE
  4358 ;;  n               2   55[BANK1 ] int 
  4359 ;;  e               2   53[BANK1 ] int 
  4360 ;;  i               2   47[BANK1 ] int 
  4361 ;;  w               2   36[BANK1 ] int 
  4362 ;;  p               2   33[BANK1 ] int 
  4363 ;;  sign            2   30[BANK1 ] int 
  4364 ;;  d               2   28[BANK1 ] int 
  4365 ;;  ne              2   26[BANK1 ] int 
  4366 ;;  m               2   24[BANK1 ] int 
  4367 ;;  pp              2   22[BANK1 ] int 
  4368 ;;  t               2   20[BANK1 ] int 
  4369 ;;  mode            1   38[BANK1 ] unsigned char 
  4370 ;;  nmode           1   35[BANK1 ] unsigned char 
  4371 ;; Return value:  Size  Location     Type
  4372 ;;                  2   72[BANK0 ] int 
  4373 ;; Registers used:
  4374 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4375 ;; Tracked objects:
  4376 ;;		On entry : 0/0
  4377 ;;		On exit  : 0/0
  4378 ;;		Unchanged: 0/0
  4379 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
  4380 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  4381 ;;      Locals:         0       0      57       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  4382 ;;      Temps:          0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  4383 ;;      Totals:         0       5      61       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  4384 ;;Total ram usage:       66 bytes
  4385 ;; Hardware stack levels used:    1
  4386 ;; Hardware stack levels required when called:    4
  4387 ;; This function calls:
  4388 ;;		___awdiv
  4389 ;;		___awmod
  4390 ;;		___fladd
  4391 ;;		___fldiv
  4392 ;;		___fleq
  4393 ;;		___flge
  4394 ;;		___flmul
  4395 ;;		___flneg
  4396 ;;		___flsub
  4397 ;;		___fltol
  4398 ;;		___fpclassifyf
  4399 ;;		_floorf
  4400 ;;		_isupper
  4401 ;;		_pad
  4402 ;;		_strcpy
  4403 ;;		_tolower
  4404 ;; This function is called by:
  4405 ;;		_vfpfcnvrt
  4406 ;; This function uses a non-reentrant model
  4407 ;;
  4408                           
  4409                           
  4410                           ;psect for function _efgtoa
  4411  018C                     _efgtoa:	
  4412                           
  4413                           ;incstack = 0
  4414                           ; Regs used in _efgtoa: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4415                           ;efgtoa@fp stored from wreg
  4416  018C  0141               	movlb	1	; select bank1
  4417  018D  00C0               	movwf	efgtoa@fp^(0+128)
  4418                           
  4419                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 319: static
      +                           int efgtoa(FILE *fp, long double f, char c);C:\Program Files (x86)\Microchip\xc8\v2.00\
      +                          pic\sources\c99\common\doprnt.c: 320: {;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\s
      +                          ources\c99\common\doprnt.c: 321:     char mode, nmode;;C:\Program Files (x86)\Microchip\
      +                          xc8\v2.00\pic\sources\c99\common\doprnt.c: 322:     int d, e, i, m, n, ne, p, pp, sign, 
      +                          t, w;;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 323:  
      +                             long double g, h, l, ou, u;
  4420  018E  01BE               	clrf	efgtoa@sign^(0+128)
  4421  018F  01BF               	clrf	(efgtoa@sign+1)^(0+128)
  4422                           
  4423                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 327:     g 
      +                          = f;
  4424  0190  0140               	movlb	0	; select bank0
  4425  0191  086B               	movf	efgtoa@f+3,w
  4426  0192  0141               	movlb	1	; select bank1
  4427  0193  00D4               	movwf	(efgtoa@g+3)^(0+128)
  4428  0194  0140               	movlb	0	; select bank0
  4429  0195  086A               	movf	efgtoa@f+2,w
  4430  0196  0141               	movlb	1	; select bank1
  4431  0197  00D3               	movwf	(efgtoa@g+2)^(0+128)
  4432  0198  0140               	movlb	0	; select bank0
  4433  0199  0869               	movf	efgtoa@f+1,w
  4434  019A  0141               	movlb	1	; select bank1
  4435  019B  00D2               	movwf	(efgtoa@g+1)^(0+128)
  4436  019C  0140               	movlb	0	; select bank0
  4437  019D  0868               	movf	efgtoa@f,w
  4438  019E  0141               	movlb	1	; select bank1
  4439  019F  00D1               	movwf	efgtoa@g^(0+128)
  4440                           
  4441                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 328:     if
      +                           (g < 0.0) {
  4442  01A0  0854               	movf	(efgtoa@g+3)^(0+128),w
  4443  01A1  0140               	movlb	0	; select bank0
  4444  01A2  00BD               	movwf	___flge@ff1+3
  4445  01A3  0141               	movlb	1	; select bank1
  4446  01A4  0853               	movf	(efgtoa@g+2)^(0+128),w
  4447  01A5  0140               	movlb	0	; select bank0
  4448  01A6  00BC               	movwf	___flge@ff1+2
  4449  01A7  0141               	movlb	1	; select bank1
  4450  01A8  0852               	movf	(efgtoa@g+1)^(0+128),w
  4451  01A9  0140               	movlb	0	; select bank0
  4452  01AA  00BB               	movwf	___flge@ff1+1
  4453  01AB  0141               	movlb	1	; select bank1
  4454  01AC  0851               	movf	efgtoa@g^(0+128),w
  4455  01AD  0140               	movlb	0	; select bank0
  4456  01AE  00BA               	movwf	___flge@ff1
  4457  01AF  3000               	movlw	0
  4458  01B0  00C1               	movwf	___flge@ff2+3
  4459  01B1  3000               	movlw	0
  4460  01B2  00C0               	movwf	___flge@ff2+2
  4461  01B3  3000               	movlw	0
  4462  01B4  00BF               	movwf	___flge@ff2+1
  4463  01B5  3000               	movlw	0
  4464  01B6  00BE               	movwf	___flge@ff2
  4465  01B7  3193  232A  3181   	fcall	___flge
  4466  01BA  1803               	btfsc	3,0
  4467  01BB  29D5               	goto	l3471
  4468                           
  4469                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 329:       
      +                            sign = 1;
  4470  01BC  3001               	movlw	1
  4471  01BD  0141               	movlb	1	; select bank1
  4472  01BE  00BE               	movwf	efgtoa@sign^(0+128)
  4473  01BF  3000               	movlw	0
  4474  01C0  00BF               	movwf	(efgtoa@sign^(0+128)+1)
  4475                           
  4476                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 330:       
      +                            g = -g;
  4477  01C1  0854               	movf	(efgtoa@g+3)^(0+128),w
  4478  01C2  00F3               	movwf	___flneg@f1+3
  4479  01C3  0853               	movf	(efgtoa@g+2)^(0+128),w
  4480  01C4  00F2               	movwf	___flneg@f1+2
  4481  01C5  0852               	movf	(efgtoa@g+1)^(0+128),w
  4482  01C6  00F1               	movwf	___flneg@f1+1
  4483  01C7  0851               	movf	efgtoa@g^(0+128),w
  4484  01C8  00F0               	movwf	___flneg@f1
  4485  01C9  319D  2514  3181   	fcall	___flneg
  4486  01CC  0873               	movf	?___flneg+3,w
  4487  01CD  0141               	movlb	1	; select bank1
  4488  01CE  00D4               	movwf	(efgtoa@g+3)^(0+128)
  4489  01CF  0872               	movf	?___flneg+2,w
  4490  01D0  00D3               	movwf	(efgtoa@g+2)^(0+128)
  4491  01D1  0871               	movf	?___flneg+1,w
  4492  01D2  00D2               	movwf	(efgtoa@g+1)^(0+128)
  4493  01D3  0870               	movf	?___flneg,w
  4494  01D4  00D1               	movwf	efgtoa@g^(0+128)
  4495  01D5                     l3471:	
  4496                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 331:     }
  4497                           
  4498                           
  4499                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 334:     n 
      +                          = 0;
  4500  01D5  0141               	movlb	1	; select bank1
  4501  01D6  01D7               	clrf	efgtoa@n^(0+128)
  4502  01D7  01D8               	clrf	(efgtoa@n+1)^(0+128)
  4503                           
  4504                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 335:     w 
      +                          = width;
  4505  01D8  0142               	movlb	2	; select bank2
  4506  01D9  086B               	movf	(_width+1)^(0+256),w
  4507  01DA  0141               	movlb	1	; select bank1
  4508  01DB  00C5               	movwf	(efgtoa@w+1)^(0+128)
  4509  01DC  0142               	movlb	2	; select bank2
  4510  01DD  086A               	movf	_width^(0+256),w
  4511  01DE  0141               	movlb	1	; select bank1
  4512  01DF  00C4               	movwf	efgtoa@w^(0+128)
  4513                           
  4514                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 336:     if
      +                           (sign || (flags & (1 << 2))) {
  4515  01E0  083E               	movf	efgtoa@sign^(0+128),w
  4516  01E1  043F               	iorwf	(efgtoa@sign+1)^(0+128),w
  4517  01E2  1D03               	btfss	3,2
  4518  01E3  29E6               	goto	l3479
  4519  01E4  1D6E               	btfss	_flags^(0+128),2
  4520  01E5  2A01               	goto	l3491
  4521  01E6                     l3479:	
  4522                           
  4523                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 337:       
      +                            dbuf[n] = sign ? '-' : '+';
  4524  01E6  083E               	movf	efgtoa@sign^(0+128),w
  4525  01E7  043F               	iorwf	(efgtoa@sign+1)^(0+128),w
  4526  01E8  1D03               	btfss	3,2
  4527  01E9  29EC               	goto	l3483
  4528  01EA  302B               	movlw	43
  4529  01EB  29ED               	goto	L2
  4530  01EC                     l3483:	
  4531  01EC  302D               	movlw	45
  4532  01ED                     L2:	
  4533  01ED  00A8               	movwf	_efgtoa$639^(0+128)
  4534  01EE  3000               	movlw	0
  4535  01EF  00A9               	movwf	(_efgtoa$639^(0+128)+1)
  4536  01F0  0828               	movf	_efgtoa$639^(0+128),w
  4537  01F1  00A0               	movwf	??_efgtoa^(0+128)
  4538  01F2  0857               	movf	efgtoa@n^(0+128),w
  4539  01F3  3E20               	addlw	(low (_dbuf| (0+512)))& (0+255)
  4540  01F4  0086               	movwf	6
  4541  01F5  3002               	movlw	2	; select bank4/5
  4542  01F6  0087               	movwf	7
  4543  01F7  0820               	movf	??_efgtoa^(0+128),w
  4544  01F8  0081               	movwf	1
  4545                           
  4546                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 338:       
      +                            ++n;
  4547  01F9  3001               	movlw	1
  4548  01FA  07D7               	addwf	efgtoa@n^(0+128),f
  4549  01FB  3000               	movlw	0
  4550  01FC  3DD8               	addwfc	(efgtoa@n+1)^(0+128),f
  4551                           
  4552                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 339:       
      +                            --w;
  4553  01FD  30FF               	movlw	255
  4554  01FE  07C4               	addwf	efgtoa@w^(0+128),f
  4555  01FF  30FF               	movlw	255
  4556  0200  3DC5               	addwfc	(efgtoa@w+1)^(0+128),f
  4557  0201                     l3491:	
  4558                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 340:     }
  4559                           
  4560                           
  4561                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 344:       
      +                            if ((0 ? isupper((int)c) : ((unsigned)((int)c)-'A') < 26)) {
  4562  0201  0854               	movf	(efgtoa@g+3)^(0+128),w
  4563  0202  00F3               	movwf	___fpclassifyf@x+3
  4564  0203  0853               	movf	(efgtoa@g+2)^(0+128),w
  4565  0204  00F2               	movwf	___fpclassifyf@x+2
  4566  0205  0852               	movf	(efgtoa@g+1)^(0+128),w
  4567  0206  00F1               	movwf	___fpclassifyf@x+1
  4568  0207  0851               	movf	efgtoa@g^(0+128),w
  4569  0208  00F0               	movwf	___fpclassifyf@x
  4570  0209  3190  2075  3181   	fcall	___fpclassifyf
  4571  020C  0370               	decf	?___fpclassifyf,w
  4572  020D  0471               	iorwf	?___fpclassifyf+1,w
  4573  020E  1D03               	btfss	3,2
  4574  020F  2A58               	goto	l3509
  4575  0210  0140               	movlb	0	; select bank0
  4576  0211  086C               	movf	efgtoa@c,w
  4577  0212  3EBF               	addlw	191
  4578  0213  0141               	movlb	1	; select bank1
  4579  0214  00A0               	movwf	??_efgtoa^(0+128)
  4580  0215  30FF               	movlw	255
  4581  0216  1803               	skipnc
  4582  0217  3000               	movlw	0
  4583  0218  00A1               	movwf	(??_efgtoa^(0+128)+1)
  4584  0219  3000               	movlw	0
  4585  021A  0221               	subwf	(??_efgtoa+1)^(0+128),w
  4586  021B  301A               	movlw	26
  4587  021C  1903               	skipnz
  4588  021D  0220               	subwf	??_efgtoa^(0+128),w
  4589  021E  1803               	btfsc	3,0
  4590  021F  2A22               	goto	u4900
  4591  0220  3001               	movlw	1
  4592  0221  2A23               	goto	u4910
  4593  0222                     u4900:	
  4594  0222  3000               	movlw	0
  4595  0223                     u4910:	
  4596  0223  00A2               	movwf	(??_efgtoa+2)^(0+128)
  4597  0224  01A3               	clrf	((??_efgtoa+2)^(0+128)+1)
  4598  0225  0822               	movf	(??_efgtoa+2)^(0+128),w
  4599  0226  00AA               	movwf	_efgtoa$640^(0+128)
  4600  0227  0823               	movf	(??_efgtoa+3)^(0+128),w
  4601  0228  00AB               	movwf	(_efgtoa$640+1)^(0+128)
  4602  0229  082A               	movf	_efgtoa$640^(0+128),w
  4603  022A  042B               	iorwf	(_efgtoa$640+1)^(0+128),w
  4604  022B  1903               	btfsc	3,2
  4605  022C  2A32               	goto	l3501
  4606                           
  4607                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 345:       
      +                                strcpy(&dbuf[n], "INF");
  4608  022D  301C               	movlw	low (STR_3| (0+32768))
  4609  022E  00F0               	movwf	strcpy@src
  4610  022F  30A0               	movlw	high (STR_3| (0+32768))
  4611  0230  00F1               	movwf	strcpy@src+1
  4612  0231  2A37               	goto	L7
  4613  0232                     l3501:	
  4614                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 346:       
      +                            } else {
  4615                           
  4616                           
  4617                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 347:       
      +                                strcpy(&dbuf[n], "inf");
  4618  0232  3024               	movlw	low (STR_4| (0+32768))
  4619  0233  00F0               	movwf	strcpy@src
  4620  0234  30A0               	movlw	high (STR_4| (0+32768))
  4621  0235  00F1               	movwf	strcpy@src+1
  4622  0236  0141               	movlb	1	; select bank1
  4623  0237                     L7:	
  4624  0237  0857               	movf	efgtoa@n^(0+128),w
  4625  0238  3E20               	addlw	(low (_dbuf| (0+512)))& (0+255)
  4626  0239  319D  25A5  3181   	fcall	_strcpy
  4627                           
  4628                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 349:       
      +                            w -= ((sizeof("inf")/sizeof("inf"[0]))-1);
  4629                           
  4630                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 348:       
      +                            }
  4631  023C  30FD               	movlw	253
  4632  023D  0141               	movlb	1	; select bank1
  4633  023E  07C4               	addwf	efgtoa@w^(0+128),f
  4634  023F  30FF               	movlw	255
  4635  0240  3DC5               	addwfc	(efgtoa@w+1)^(0+128),f
  4636                           
  4637                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 350:       
      +                            return pad(fp, &dbuf[0], w);
  4638  0241  3020               	movlw	(low (_dbuf| (0+512)))& (0+255)
  4639  0242  00A0               	movwf	??_efgtoa^(0+128)
  4640  0243  0820               	movf	??_efgtoa^(0+128),w
  4641  0244  0140               	movlb	0	; select bank0
  4642  0245  00A4               	movwf	pad@buf
  4643  0246  0141               	movlb	1	; select bank1
  4644  0247  0845               	movf	(efgtoa@w+1)^(0+128),w
  4645  0248  0140               	movlb	0	; select bank0
  4646  0249  00A6               	movwf	pad@p+1
  4647  024A  0141               	movlb	1	; select bank1
  4648  024B  0844               	movf	efgtoa@w^(0+128),w
  4649  024C  0140               	movlb	0	; select bank0
  4650  024D  00A5               	movwf	pad@p
  4651  024E  0141               	movlb	1	; select bank1
  4652  024F  0840               	movf	efgtoa@fp^(0+128),w
  4653  0250  319F  27B0         	fcall	_pad
  4654  0252  0140               	movlb	0	; select bank0
  4655  0253  0825               	movf	?_pad+1,w
  4656  0254  00E9               	movwf	?_efgtoa+1
  4657  0255  0824               	movf	?_pad,w
  4658  0256  00E8               	movwf	?_efgtoa
  4659  0257  0008               	return
  4660  0258                     l3509:	
  4661                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 351:     }
  4662                           
  4663                           
  4664                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 353:       
      +                            if ((0 ? isupper((int)c) : ((unsigned)((int)c)-'A') < 26)) {
  4665  0258  0141               	movlb	1	; select bank1
  4666  0259  0854               	movf	(efgtoa@g+3)^(0+128),w
  4667  025A  00F3               	movwf	___fpclassifyf@x+3
  4668  025B  0853               	movf	(efgtoa@g+2)^(0+128),w
  4669  025C  00F2               	movwf	___fpclassifyf@x+2
  4670  025D  0852               	movf	(efgtoa@g+1)^(0+128),w
  4671  025E  00F1               	movwf	___fpclassifyf@x+1
  4672  025F  0851               	movf	efgtoa@g^(0+128),w
  4673  0260  00F0               	movwf	___fpclassifyf@x
  4674  0261  3190  2075  3181   	fcall	___fpclassifyf
  4675  0264  0870               	movf	?___fpclassifyf,w
  4676  0265  0471               	iorwf	?___fpclassifyf+1,w
  4677  0266  1D03               	btfss	3,2
  4678  0267  2AB0               	goto	l3527
  4679  0268  0140               	movlb	0	; select bank0
  4680  0269  086C               	movf	efgtoa@c,w
  4681  026A  3EBF               	addlw	191
  4682  026B  0141               	movlb	1	; select bank1
  4683  026C  00A0               	movwf	??_efgtoa^(0+128)
  4684  026D  30FF               	movlw	255
  4685  026E  1803               	skipnc
  4686  026F  3000               	movlw	0
  4687  0270  00A1               	movwf	(??_efgtoa^(0+128)+1)
  4688  0271  3000               	movlw	0
  4689  0272  0221               	subwf	(??_efgtoa+1)^(0+128),w
  4690  0273  301A               	movlw	26
  4691  0274  1903               	skipnz
  4692  0275  0220               	subwf	??_efgtoa^(0+128),w
  4693  0276  1803               	btfsc	3,0
  4694  0277  2A7A               	goto	u4940
  4695  0278  3001               	movlw	1
  4696  0279  2A7B               	goto	u4950
  4697  027A                     u4940:	
  4698  027A  3000               	movlw	0
  4699  027B                     u4950:	
  4700  027B  00A2               	movwf	(??_efgtoa+2)^(0+128)
  4701  027C  01A3               	clrf	((??_efgtoa+2)^(0+128)+1)
  4702  027D  0822               	movf	(??_efgtoa+2)^(0+128),w
  4703  027E  00AC               	movwf	_efgtoa$645^(0+128)
  4704  027F  0823               	movf	(??_efgtoa+3)^(0+128),w
  4705  0280  00AD               	movwf	(_efgtoa$645+1)^(0+128)
  4706  0281  082C               	movf	_efgtoa$645^(0+128),w
  4707  0282  042D               	iorwf	(_efgtoa$645+1)^(0+128),w
  4708  0283  1903               	btfsc	3,2
  4709  0284  2A8A               	goto	l3519
  4710                           
  4711                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 354:       
      +                                strcpy(&dbuf[n], "NAN");
  4712  0285  3020               	movlw	low (STR_7| (0+32768))
  4713  0286  00F0               	movwf	strcpy@src
  4714  0287  30A0               	movlw	high (STR_7| (0+32768))
  4715  0288  00F1               	movwf	strcpy@src+1
  4716  0289  2A8F               	goto	L8
  4717  028A                     l3519:	
  4718                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 355:       
      +                            } else {
  4719                           
  4720                           
  4721                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 356:       
      +                                strcpy(&dbuf[n], "nan");
  4722  028A  3028               	movlw	low (STR_8| (0+32768))
  4723  028B  00F0               	movwf	strcpy@src
  4724  028C  30A0               	movlw	high (STR_8| (0+32768))
  4725  028D  00F1               	movwf	strcpy@src+1
  4726  028E  0141               	movlb	1	; select bank1
  4727  028F                     L8:	
  4728  028F  0857               	movf	efgtoa@n^(0+128),w
  4729  0290  3E20               	addlw	(low (_dbuf| (0+512)))& (0+255)
  4730  0291  319D  25A5  3181   	fcall	_strcpy
  4731                           
  4732                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 358:       
      +                            w -= ((sizeof("inf")/sizeof("inf"[0]))-1);
  4733                           
  4734                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 357:       
      +                            }
  4735  0294  30FD               	movlw	253
  4736  0295  0141               	movlb	1	; select bank1
  4737  0296  07C4               	addwf	efgtoa@w^(0+128),f
  4738  0297  30FF               	movlw	255
  4739  0298  3DC5               	addwfc	(efgtoa@w+1)^(0+128),f
  4740                           
  4741                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 359:       
      +                            return pad(fp, &dbuf[0], w);
  4742  0299  3020               	movlw	(low (_dbuf| (0+512)))& (0+255)
  4743  029A  00A0               	movwf	??_efgtoa^(0+128)
  4744  029B  0820               	movf	??_efgtoa^(0+128),w
  4745  029C  0140               	movlb	0	; select bank0
  4746  029D  00A4               	movwf	pad@buf
  4747  029E  0141               	movlb	1	; select bank1
  4748  029F  0845               	movf	(efgtoa@w+1)^(0+128),w
  4749  02A0  0140               	movlb	0	; select bank0
  4750  02A1  00A6               	movwf	pad@p+1
  4751  02A2  0141               	movlb	1	; select bank1
  4752  02A3  0844               	movf	efgtoa@w^(0+128),w
  4753  02A4  0140               	movlb	0	; select bank0
  4754  02A5  00A5               	movwf	pad@p
  4755  02A6  0141               	movlb	1	; select bank1
  4756  02A7  0840               	movf	efgtoa@fp^(0+128),w
  4757  02A8  319F  27B0         	fcall	_pad
  4758  02AA  0140               	movlb	0	; select bank0
  4759  02AB  0825               	movf	?_pad+1,w
  4760  02AC  00E9               	movwf	?_efgtoa+1
  4761  02AD  0824               	movf	?_pad,w
  4762  02AE  00E8               	movwf	?_efgtoa
  4763  02AF  0008               	return
  4764  02B0                     l3527:	
  4765                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 360:     }
  4766                           
  4767                           
  4768                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 363:     u 
      +                          = 1.0;
  4769  02B0  303F               	movlw	63
  4770  02B1  0141               	movlb	1	; select bank1
  4771  02B2  00DC               	movwf	(efgtoa@u+3)^(0+128)
  4772  02B3  3080               	movlw	128
  4773  02B4  00DB               	movwf	(efgtoa@u+2)^(0+128)
  4774  02B5  3000               	movlw	0
  4775  02B6  00DA               	movwf	(efgtoa@u+1)^(0+128)
  4776  02B7  3000               	movlw	0
  4777  02B8  00D9               	movwf	efgtoa@u^(0+128)
  4778                           
  4779                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 364:     e 
      +                          = 0;
  4780  02B9  01D5               	clrf	efgtoa@e^(0+128)
  4781  02BA  01D6               	clrf	(efgtoa@e+1)^(0+128)
  4782                           
  4783                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 365:     if
      +                           (!(g == 0.0)) {
  4784  02BB  0854               	movf	(efgtoa@g+3)^(0+128),w
  4785  02BC  00F3               	movwf	___fleq@ff1+3
  4786  02BD  0853               	movf	(efgtoa@g+2)^(0+128),w
  4787  02BE  00F2               	movwf	___fleq@ff1+2
  4788  02BF  0852               	movf	(efgtoa@g+1)^(0+128),w
  4789  02C0  00F1               	movwf	___fleq@ff1+1
  4790  02C1  0851               	movf	efgtoa@g^(0+128),w
  4791  02C2  00F0               	movwf	___fleq@ff1
  4792  02C3  3000               	movlw	0
  4793  02C4  00F7               	movwf	___fleq@ff2+3
  4794  02C5  3000               	movlw	0
  4795  02C6  00F6               	movwf	___fleq@ff2+2
  4796  02C7  3000               	movlw	0
  4797  02C8  00F5               	movwf	___fleq@ff2+1
  4798  02C9  3000               	movlw	0
  4799  02CA  00F4               	movwf	___fleq@ff2
  4800  02CB  319F  271C  3181   	fcall	___fleq
  4801  02CE  1C03               	btfss	3,0
  4802  02CF  2B01               	goto	l3539
  4803  02D0  2B90               	goto	l3547
  4804  02D1                     l3535:	
  4805                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 366:       
      +                            while (!(g < (u*10.0))) {
  4806                           
  4807                           
  4808                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 367:       
      +                                u = u*10.0;
  4809  02D1  3041               	movlw	65
  4810  02D2  0140               	movlb	0	; select bank0
  4811  02D3  00A3               	movwf	___flmul@b+3
  4812  02D4  3020               	movlw	32
  4813  02D5  00A2               	movwf	___flmul@b+2
  4814  02D6  3000               	movlw	0
  4815  02D7  00A1               	movwf	___flmul@b+1
  4816  02D8  3000               	movlw	0
  4817  02D9  00A0               	movwf	___flmul@b
  4818  02DA  0141               	movlb	1	; select bank1
  4819  02DB  085C               	movf	(efgtoa@u+3)^(0+128),w
  4820  02DC  0140               	movlb	0	; select bank0
  4821  02DD  00A7               	movwf	___flmul@a+3
  4822  02DE  0141               	movlb	1	; select bank1
  4823  02DF  085B               	movf	(efgtoa@u+2)^(0+128),w
  4824  02E0  0140               	movlb	0	; select bank0
  4825  02E1  00A6               	movwf	___flmul@a+2
  4826  02E2  0141               	movlb	1	; select bank1
  4827  02E3  085A               	movf	(efgtoa@u+1)^(0+128),w
  4828  02E4  0140               	movlb	0	; select bank0
  4829  02E5  00A5               	movwf	___flmul@a+1
  4830  02E6  0141               	movlb	1	; select bank1
  4831  02E7  0859               	movf	efgtoa@u^(0+128),w
  4832  02E8  0140               	movlb	0	; select bank0
  4833  02E9  00A4               	movwf	___flmul@a
  4834  02EA  3188  2057  3181   	fcall	___flmul
  4835  02ED  0140               	movlb	0	; select bank0
  4836  02EE  0823               	movf	?___flmul+3,w
  4837  02EF  0141               	movlb	1	; select bank1
  4838  02F0  00DC               	movwf	(efgtoa@u+3)^(0+128)
  4839  02F1  0140               	movlb	0	; select bank0
  4840  02F2  0822               	movf	?___flmul+2,w
  4841  02F3  0141               	movlb	1	; select bank1
  4842  02F4  00DB               	movwf	(efgtoa@u+2)^(0+128)
  4843  02F5  0140               	movlb	0	; select bank0
  4844  02F6  0821               	movf	?___flmul+1,w
  4845  02F7  0141               	movlb	1	; select bank1
  4846  02F8  00DA               	movwf	(efgtoa@u+1)^(0+128)
  4847  02F9  0140               	movlb	0	; select bank0
  4848  02FA  0820               	movf	?___flmul,w
  4849  02FB  0141               	movlb	1	; select bank1
  4850  02FC  00D9               	movwf	efgtoa@u^(0+128)
  4851                           
  4852                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 368:       
      +                                ++e;
  4853  02FD  3001               	movlw	1
  4854  02FE  07D5               	addwf	efgtoa@e^(0+128),f
  4855  02FF  3000               	movlw	0
  4856  0300  3DD6               	addwfc	(efgtoa@e+1)^(0+128),f
  4857  0301                     l3539:	
  4858                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 369:       
      +                            }
  4859                           
  4860                           
  4861                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 366:       
      +                            while (!(g < (u*10.0))) {
  4862  0301  0141               	movlb	1	; select bank1
  4863  0302  0854               	movf	(efgtoa@g+3)^(0+128),w
  4864  0303  0140               	movlb	0	; select bank0
  4865  0304  00BD               	movwf	___flge@ff1+3
  4866  0305  0141               	movlb	1	; select bank1
  4867  0306  0853               	movf	(efgtoa@g+2)^(0+128),w
  4868  0307  0140               	movlb	0	; select bank0
  4869  0308  00BC               	movwf	___flge@ff1+2
  4870  0309  0141               	movlb	1	; select bank1
  4871  030A  0852               	movf	(efgtoa@g+1)^(0+128),w
  4872  030B  0140               	movlb	0	; select bank0
  4873  030C  00BB               	movwf	___flge@ff1+1
  4874  030D  0141               	movlb	1	; select bank1
  4875  030E  0851               	movf	efgtoa@g^(0+128),w
  4876  030F  0140               	movlb	0	; select bank0
  4877  0310  00BA               	movwf	___flge@ff1
  4878  0311  3041               	movlw	65
  4879  0312  00A3               	movwf	___flmul@b+3
  4880  0313  3020               	movlw	32
  4881  0314  00A2               	movwf	___flmul@b+2
  4882  0315  3000               	movlw	0
  4883  0316  00A1               	movwf	___flmul@b+1
  4884  0317  3000               	movlw	0
  4885  0318  00A0               	movwf	___flmul@b
  4886  0319  0141               	movlb	1	; select bank1
  4887  031A  085C               	movf	(efgtoa@u+3)^(0+128),w
  4888  031B  0140               	movlb	0	; select bank0
  4889  031C  00A7               	movwf	___flmul@a+3
  4890  031D  0141               	movlb	1	; select bank1
  4891  031E  085B               	movf	(efgtoa@u+2)^(0+128),w
  4892  031F  0140               	movlb	0	; select bank0
  4893  0320  00A6               	movwf	___flmul@a+2
  4894  0321  0141               	movlb	1	; select bank1
  4895  0322  085A               	movf	(efgtoa@u+1)^(0+128),w
  4896  0323  0140               	movlb	0	; select bank0
  4897  0324  00A5               	movwf	___flmul@a+1
  4898  0325  0141               	movlb	1	; select bank1
  4899  0326  0859               	movf	efgtoa@u^(0+128),w
  4900  0327  0140               	movlb	0	; select bank0
  4901  0328  00A4               	movwf	___flmul@a
  4902  0329  3188  2057  3181   	fcall	___flmul
  4903  032C  0140               	movlb	0	; select bank0
  4904  032D  0823               	movf	?___flmul+3,w
  4905  032E  00C1               	movwf	___flge@ff2+3
  4906  032F  0822               	movf	?___flmul+2,w
  4907  0330  00C0               	movwf	___flge@ff2+2
  4908  0331  0821               	movf	?___flmul+1,w
  4909  0332  00BF               	movwf	___flge@ff2+1
  4910  0333  0820               	movf	?___flmul,w
  4911  0334  00BE               	movwf	___flge@ff2
  4912  0335  3193  232A  3181   	fcall	___flge
  4913  0338  1C03               	btfss	3,0
  4914  0339  2B6B               	goto	l3545
  4915  033A  2AD1               	goto	l3535
  4916  033B                     l3541:	
  4917                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 370:       
      +                            while (g < u) {
  4918                           
  4919                           
  4920                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 371:       
      +                                u = u/10.0;
  4921  033B  3041               	movlw	65
  4922  033C  0140               	movlb	0	; select bank0
  4923  033D  00BD               	movwf	___fldiv@a+3
  4924  033E  3020               	movlw	32
  4925  033F  00BC               	movwf	___fldiv@a+2
  4926  0340  3000               	movlw	0
  4927  0341  00BB               	movwf	___fldiv@a+1
  4928  0342  3000               	movlw	0
  4929  0343  00BA               	movwf	___fldiv@a
  4930  0344  0141               	movlb	1	; select bank1
  4931  0345  085C               	movf	(efgtoa@u+3)^(0+128),w
  4932  0346  0140               	movlb	0	; select bank0
  4933  0347  00C1               	movwf	___fldiv@b+3
  4934  0348  0141               	movlb	1	; select bank1
  4935  0349  085B               	movf	(efgtoa@u+2)^(0+128),w
  4936  034A  0140               	movlb	0	; select bank0
  4937  034B  00C0               	movwf	___fldiv@b+2
  4938  034C  0141               	movlb	1	; select bank1
  4939  034D  085A               	movf	(efgtoa@u+1)^(0+128),w
  4940  034E  0140               	movlb	0	; select bank0
  4941  034F  00BF               	movwf	___fldiv@b+1
  4942  0350  0141               	movlb	1	; select bank1
  4943  0351  0859               	movf	efgtoa@u^(0+128),w
  4944  0352  0140               	movlb	0	; select bank0
  4945  0353  00BE               	movwf	___fldiv@b
  4946  0354  3194  246C  3181   	fcall	___fldiv
  4947  0357  0140               	movlb	0	; select bank0
  4948  0358  083D               	movf	?___fldiv+3,w
  4949  0359  0141               	movlb	1	; select bank1
  4950  035A  00DC               	movwf	(efgtoa@u+3)^(0+128)
  4951  035B  0140               	movlb	0	; select bank0
  4952  035C  083C               	movf	?___fldiv+2,w
  4953  035D  0141               	movlb	1	; select bank1
  4954  035E  00DB               	movwf	(efgtoa@u+2)^(0+128)
  4955  035F  0140               	movlb	0	; select bank0
  4956  0360  083B               	movf	?___fldiv+1,w
  4957  0361  0141               	movlb	1	; select bank1
  4958  0362  00DA               	movwf	(efgtoa@u+1)^(0+128)
  4959  0363  0140               	movlb	0	; select bank0
  4960  0364  083A               	movf	?___fldiv,w
  4961  0365  0141               	movlb	1	; select bank1
  4962  0366  00D9               	movwf	efgtoa@u^(0+128)
  4963                           
  4964                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 372:       
      +                                --e;
  4965  0367  30FF               	movlw	255
  4966  0368  07D5               	addwf	efgtoa@e^(0+128),f
  4967  0369  30FF               	movlw	255
  4968  036A  3DD6               	addwfc	(efgtoa@e+1)^(0+128),f
  4969  036B                     l3545:	
  4970                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 373:       
      +                            }
  4971                           
  4972                           
  4973                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 370:       
      +                            while (g < u) {
  4974  036B  0141               	movlb	1	; select bank1
  4975  036C  0854               	movf	(efgtoa@g+3)^(0+128),w
  4976  036D  0140               	movlb	0	; select bank0
  4977  036E  00BD               	movwf	___flge@ff1+3
  4978  036F  0141               	movlb	1	; select bank1
  4979  0370  0853               	movf	(efgtoa@g+2)^(0+128),w
  4980  0371  0140               	movlb	0	; select bank0
  4981  0372  00BC               	movwf	___flge@ff1+2
  4982  0373  0141               	movlb	1	; select bank1
  4983  0374  0852               	movf	(efgtoa@g+1)^(0+128),w
  4984  0375  0140               	movlb	0	; select bank0
  4985  0376  00BB               	movwf	___flge@ff1+1
  4986  0377  0141               	movlb	1	; select bank1
  4987  0378  0851               	movf	efgtoa@g^(0+128),w
  4988  0379  0140               	movlb	0	; select bank0
  4989  037A  00BA               	movwf	___flge@ff1
  4990  037B  0141               	movlb	1	; select bank1
  4991  037C  085C               	movf	(efgtoa@u+3)^(0+128),w
  4992  037D  0140               	movlb	0	; select bank0
  4993  037E  00C1               	movwf	___flge@ff2+3
  4994  037F  0141               	movlb	1	; select bank1
  4995  0380  085B               	movf	(efgtoa@u+2)^(0+128),w
  4996  0381  0140               	movlb	0	; select bank0
  4997  0382  00C0               	movwf	___flge@ff2+2
  4998  0383  0141               	movlb	1	; select bank1
  4999  0384  085A               	movf	(efgtoa@u+1)^(0+128),w
  5000  0385  0140               	movlb	0	; select bank0
  5001  0386  00BF               	movwf	___flge@ff2+1
  5002  0387  0141               	movlb	1	; select bank1
  5003  0388  0859               	movf	efgtoa@u^(0+128),w
  5004  0389  0140               	movlb	0	; select bank0
  5005  038A  00BE               	movwf	___flge@ff2
  5006  038B  3193  232A  3181   	fcall	___flge
  5007  038E  1C03               	btfss	3,0
  5008  038F  2B3B               	goto	l3541
  5009  0390                     l3547:	
  5010                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 374:     }
  5011                           
  5012                           
  5013                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 377:     mo
      +                          de = tolower((int)c);
  5014  0390  0140               	movlb	0	; select bank0
  5015  0391  086C               	movf	efgtoa@c,w
  5016  0392  0141               	movlb	1	; select bank1
  5017  0393  00A0               	movwf	??_efgtoa^(0+128)
  5018  0394  01A1               	clrf	(??_efgtoa^(0+128)+1)
  5019  0395  0820               	movf	??_efgtoa^(0+128),w
  5020  0396  00F6               	movwf	tolower@c
  5021  0397  0821               	movf	(??_efgtoa+1)^(0+128),w
  5022  0398  00F7               	movwf	tolower@c+1
  5023  0399  319D  25C4  3181   	fcall	_tolower
  5024  039C  0876               	movf	?_tolower,w
  5025  039D  0141               	movlb	1	; select bank1
  5026  039E  00A2               	movwf	(??_efgtoa+2)^(0+128)
  5027  039F  0822               	movf	(??_efgtoa+2)^(0+128),w
  5028  03A0  00C6               	movwf	efgtoa@mode^(0+128)
  5029                           
  5030                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 378:     nm
      +                          ode = mode;
  5031  03A1  0846               	movf	efgtoa@mode^(0+128),w
  5032  03A2  00A0               	movwf	??_efgtoa^(0+128)
  5033  03A3  0820               	movf	??_efgtoa^(0+128),w
  5034  03A4  00C3               	movwf	efgtoa@nmode^(0+128)
  5035                           
  5036                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 379:     if
      +                           (mode == 'g') {
  5037  03A5  3067               	movlw	103
  5038  03A6  0646               	xorwf	efgtoa@mode^(0+128),w
  5039  03A7  1D03               	btfss	3,2
  5040  03A8  2BC1               	goto	l258
  5041                           
  5042                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 380:   if (
      +                          prec == 0) {
  5043  03A9  0142               	movlb	2	; select bank2
  5044  03AA  086C               	movf	_prec^(0+256),w
  5045  03AB  046D               	iorwf	(_prec+1)^(0+256),w
  5046  03AC  1D03               	btfss	3,2
  5047  03AD  2BB2               	goto	l259
  5048                           
  5049                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 381:    pre
      +                          c = 1;
  5050  03AE  3001               	movlw	1
  5051  03AF  00EC               	movwf	_prec^(0+256)
  5052  03B0  3000               	movlw	0
  5053  03B1  00ED               	movwf	(_prec^(0+256)+1)
  5054  03B2                     l259:	
  5055                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 382:   }
  5056                           
  5057                           
  5058                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 383:       
      +                            p = (0 < prec) ? prec : 6;
  5059  03B2  086D               	movf	(_prec+1)^(0+256),w
  5060  03B3  3A80               	xorlw	128
  5061  03B4  0141               	movlb	1	; select bank1
  5062  03B5  00A0               	movwf	??_efgtoa^(0+128)
  5063  03B6  3080               	movlw	128
  5064  03B7  0220               	subwf	??_efgtoa^(0+128),w
  5065  03B8  1D03               	skipz
  5066  03B9  2BBD               	goto	u5025
  5067  03BA  3001               	movlw	1
  5068  03BB  0142               	movlb	2	; select bank2
  5069  03BC  026C               	subwf	_prec^(0+256),w
  5070  03BD                     u5025:	
  5071  03BD  1C03               	btfss	3,0
  5072  03BE  2BCC               	goto	l3563
  5073  03BF  0142               	movlb	2	; select bank2
  5074  03C0  2BC4               	goto	l3561
  5075  03C1                     l258:	
  5076                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 384:     } 
      +                          else {
  5077                           
  5078                           
  5079                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 385:       
      +                            p = (prec < 0) ? 6 : prec;
  5080  03C1  0142               	movlb	2	; select bank2
  5081  03C2  1BED               	btfsc	(_prec+1)^(0+256),7
  5082  03C3  2BCC               	goto	l3563
  5083  03C4                     l3561:	
  5084  03C4  086D               	movf	(_prec+1)^(0+256),w
  5085  03C5  0141               	movlb	1	; select bank1
  5086  03C6  00C2               	movwf	(efgtoa@p+1)^(0+128)
  5087  03C7  0142               	movlb	2	; select bank2
  5088  03C8  086C               	movf	_prec^(0+256),w
  5089  03C9  0141               	movlb	1	; select bank1
  5090  03CA  00C1               	movwf	efgtoa@p^(0+128)
  5091  03CB  2BD1               	goto	l3565
  5092  03CC                     l3563:	
  5093  03CC  3006               	movlw	6
  5094  03CD  0141               	movlb	1	; select bank1
  5095  03CE  00C1               	movwf	efgtoa@p^(0+128)
  5096  03CF  3000               	movlw	0
  5097  03D0  00C2               	movwf	(efgtoa@p^(0+128)+1)
  5098  03D1                     l3565:	
  5099                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 386:     }
  5100                           
  5101                           
  5102                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 389:     if
      +                           (mode == 'g') {
  5103  03D1  3067               	movlw	103
  5104  03D2  0646               	xorwf	efgtoa@mode^(0+128),w
  5105  03D3  1D03               	btfss	3,2
  5106  03D4  2BFA               	goto	l269
  5107                           
  5108                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 390:       
      +                            if (!(e < -4) && !((p - 1) < e)) {
  5109  03D5  0856               	movf	(efgtoa@e+1)^(0+128),w
  5110  03D6  3A80               	xorlw	128
  5111  03D7  00A0               	movwf	??_efgtoa^(0+128)
  5112  03D8  307F               	movlw	127
  5113  03D9  0220               	subwf	??_efgtoa^(0+128),w
  5114  03DA  1D03               	skipz
  5115  03DB  2BDE               	goto	u5055
  5116  03DC  30FC               	movlw	252
  5117  03DD  0255               	subwf	efgtoa@e^(0+128),w
  5118  03DE                     u5055:	
  5119  03DE  1C03               	skipc
  5120  03DF  2BF5               	goto	l3573
  5121  03E0  0141               	movlb	1	; select bank1
  5122  03E1  0841               	movf	efgtoa@p^(0+128),w
  5123  03E2  3EFF               	addlw	255
  5124  03E3  00A0               	movwf	??_efgtoa^(0+128)
  5125  03E4  30FF               	movlw	255
  5126  03E5  3D42               	addwfc	(efgtoa@p+1)^(0+128),w
  5127  03E6  00A1               	movwf	(??_efgtoa+1)^(0+128)
  5128  03E7  0821               	movf	(??_efgtoa+1)^(0+128),w
  5129  03E8  3A80               	xorlw	128
  5130  03E9  00A2               	movwf	(??_efgtoa+2)^(0+128)
  5131  03EA  0856               	movf	(efgtoa@e+1)^(0+128),w
  5132  03EB  3A80               	xorlw	128
  5133  03EC  0222               	subwf	(??_efgtoa+2)^(0+128),w
  5134  03ED  1D03               	skipz
  5135  03EE  2BF1               	goto	u5065
  5136  03EF  0855               	movf	efgtoa@e^(0+128),w
  5137  03F0  0220               	subwf	??_efgtoa^(0+128),w
  5138  03F1                     u5065:	
  5139  03F1  1C03               	skipc
  5140  03F2  2BF5               	goto	l3573
  5141                           
  5142                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 391:       
      +                                nmode = 'f';
  5143  03F3  3066               	movlw	102
  5144  03F4  2BF6               	goto	L3
  5145  03F5                     l3573:	
  5146                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 392:       
      +                            } else {
  5147                           
  5148                           
  5149                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 393:       
      +                                nmode = 'e';
  5150  03F5  3065               	movlw	101
  5151  03F6                     L3:	
  5152  03F6  0141               	movlb	1	; select bank1
  5153  03F7  00A0               	movwf	??_efgtoa^(0+128)
  5154  03F8  0820               	movf	??_efgtoa^(0+128),w
  5155  03F9  00C3               	movwf	efgtoa@nmode^(0+128)
  5156  03FA                     l269:	
  5157                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 395:     }
  5158                           
  5159                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 394:       
      +                            }
  5160                           
  5161                           
  5162                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 398:     m 
      +                          = p;
  5163  03FA  0842               	movf	(efgtoa@p+1)^(0+128),w
  5164  03FB  00B9               	movwf	(efgtoa@m+1)^(0+128)
  5165  03FC  0841               	movf	efgtoa@p^(0+128),w
  5166  03FD  00B8               	movwf	efgtoa@m^(0+128)
  5167                           
  5168                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 399:     if
      +                           (!(mode == 'g') || ((nmode == 'f') && (e < 0))) {
  5169  03FE  3067               	movlw	103
  5170  03FF  0646               	xorwf	efgtoa@mode^(0+128),w
  5171  0400  1D03               	btfss	3,2
  5172  0401  2C07               	goto	l3581
  5173  0402  3066               	movlw	102
  5174  0403  0643               	xorwf	efgtoa@nmode^(0+128),w
  5175  0404  1903               	btfsc	3,2
  5176  0405  1FD6               	btfss	(efgtoa@e+1)^(0+128),7
  5177  0406  2C0B               	goto	l3583
  5178  0407                     l3581:	
  5179                           
  5180                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 400:       
      +                            ++m;
  5181  0407  3001               	movlw	1
  5182  0408  07B8               	addwf	efgtoa@m^(0+128),f
  5183  0409  3000               	movlw	0
  5184  040A  3DB9               	addwfc	(efgtoa@m+1)^(0+128),f
  5185  040B                     l3583:	
  5186                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 401:     }
  5187                           
  5188                           
  5189                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 404:     if
      +                           (nmode == 'f') {
  5190  040B  3066               	movlw	102
  5191  040C  0643               	xorwf	efgtoa@nmode^(0+128),w
  5192  040D  1D03               	btfss	3,2
  5193  040E  2C23               	goto	l3595
  5194                           
  5195                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 405:       
      +                            if (e < 0) {
  5196  040F  1FD6               	btfss	(efgtoa@e+1)^(0+128),7
  5197  0410  2C1B               	goto	l3591
  5198                           
  5199                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 406:       
      +                                u = 1.0;
  5200  0411  303F               	movlw	63
  5201  0412  00DC               	movwf	(efgtoa@u+3)^(0+128)
  5202  0413  3080               	movlw	128
  5203  0414  00DB               	movwf	(efgtoa@u+2)^(0+128)
  5204  0415  3000               	movlw	0
  5205  0416  00DA               	movwf	(efgtoa@u+1)^(0+128)
  5206  0417  3000               	movlw	0
  5207  0418  00D9               	movwf	efgtoa@u^(0+128)
  5208                           
  5209                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 407:       
      +                                e = 0;
  5210  0419  01D5               	clrf	efgtoa@e^(0+128)
  5211  041A  01D6               	clrf	(efgtoa@e+1)^(0+128)
  5212  041B                     l3591:	
  5213                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 408:       
      +                            }
  5214                           
  5215                           
  5216                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 409:       
      +                            if (!(mode == 'g')) {
  5217  041B  3067               	movlw	103
  5218  041C  0646               	xorwf	efgtoa@mode^(0+128),w
  5219  041D  1903               	btfsc	3,2
  5220  041E  2C23               	goto	l3595
  5221                           
  5222                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 410:       
      +                                m += e;
  5223  041F  0855               	movf	efgtoa@e^(0+128),w
  5224  0420  07B8               	addwf	efgtoa@m^(0+128),f
  5225  0421  0856               	movf	(efgtoa@e+1)^(0+128),w
  5226  0422  3DB9               	addwfc	(efgtoa@m+1)^(0+128),f
  5227  0423                     l3595:	
  5228                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 412:     }
  5229                           
  5230                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 411:       
      +                            }
  5231                           
  5232                           
  5233                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 415:     i 
      +                          = 0;
  5234  0423  01CF               	clrf	efgtoa@i^(0+128)
  5235  0424  01D0               	clrf	(efgtoa@i+1)^(0+128)
  5236                           
  5237                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 416:     h 
      +                          = g;
  5238  0425  0854               	movf	(efgtoa@g+3)^(0+128),w
  5239  0426  00CA               	movwf	(efgtoa@h+3)^(0+128)
  5240  0427  0853               	movf	(efgtoa@g+2)^(0+128),w
  5241  0428  00C9               	movwf	(efgtoa@h+2)^(0+128)
  5242  0429  0852               	movf	(efgtoa@g+1)^(0+128),w
  5243  042A  00C8               	movwf	(efgtoa@h+1)^(0+128)
  5244  042B  0851               	movf	efgtoa@g^(0+128),w
  5245  042C  00C7               	movwf	efgtoa@h^(0+128)
  5246                           
  5247                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 417:     ou
      +                           = u;
  5248  042D  085C               	movf	(efgtoa@u+3)^(0+128),w
  5249  042E  00A7               	movwf	(efgtoa@ou+3)^(0+128)
  5250  042F  085B               	movf	(efgtoa@u+2)^(0+128),w
  5251  0430  00A6               	movwf	(efgtoa@ou+2)^(0+128)
  5252  0431  085A               	movf	(efgtoa@u+1)^(0+128),w
  5253  0432  00A5               	movwf	(efgtoa@ou+1)^(0+128)
  5254  0433  0859               	movf	efgtoa@u^(0+128),w
  5255  0434  00A4               	movwf	efgtoa@ou^(0+128)
  5256  0435                     l3605:	
  5257                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 424:     }
  5258                           
  5259                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 418:     wh
      +                          ile (i < m) {
  5260                           
  5261                           
  5262                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 418:     wh
      +                          ile (i < m) {
  5263  0435  0850               	movf	(efgtoa@i+1)^(0+128),w
  5264  0436  3A80               	xorlw	128
  5265  0437  00A0               	movwf	??_efgtoa^(0+128)
  5266  0438  0839               	movf	(efgtoa@m+1)^(0+128),w
  5267  0439  3A80               	xorlw	128
  5268  043A  0220               	subwf	??_efgtoa^(0+128),w
  5269  043B  1D03               	skipz
  5270  043C  2C3F               	goto	u5135
  5271  043D  0838               	movf	efgtoa@m^(0+128),w
  5272  043E  024F               	subwf	efgtoa@i^(0+128),w
  5273  043F                     u5135:	
  5274  043F  1803               	btfsc	3,0
  5275  0440  2D0F               	goto	l3607
  5276                           
  5277                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 419:       
      +                            l = floorf(h/u);
  5278  0441  0141               	movlb	1	; select bank1
  5279  0442  085C               	movf	(efgtoa@u+3)^(0+128),w
  5280  0443  0140               	movlb	0	; select bank0
  5281  0444  00BD               	movwf	___fldiv@a+3
  5282  0445  0141               	movlb	1	; select bank1
  5283  0446  085B               	movf	(efgtoa@u+2)^(0+128),w
  5284  0447  0140               	movlb	0	; select bank0
  5285  0448  00BC               	movwf	___fldiv@a+2
  5286  0449  0141               	movlb	1	; select bank1
  5287  044A  085A               	movf	(efgtoa@u+1)^(0+128),w
  5288  044B  0140               	movlb	0	; select bank0
  5289  044C  00BB               	movwf	___fldiv@a+1
  5290  044D  0141               	movlb	1	; select bank1
  5291  044E  0859               	movf	efgtoa@u^(0+128),w
  5292  044F  0140               	movlb	0	; select bank0
  5293  0450  00BA               	movwf	___fldiv@a
  5294  0451  0141               	movlb	1	; select bank1
  5295  0452  084A               	movf	(efgtoa@h+3)^(0+128),w
  5296  0453  0140               	movlb	0	; select bank0
  5297  0454  00C1               	movwf	___fldiv@b+3
  5298  0455  0141               	movlb	1	; select bank1
  5299  0456  0849               	movf	(efgtoa@h+2)^(0+128),w
  5300  0457  0140               	movlb	0	; select bank0
  5301  0458  00C0               	movwf	___fldiv@b+2
  5302  0459  0141               	movlb	1	; select bank1
  5303  045A  0848               	movf	(efgtoa@h+1)^(0+128),w
  5304  045B  0140               	movlb	0	; select bank0
  5305  045C  00BF               	movwf	___fldiv@b+1
  5306  045D  0141               	movlb	1	; select bank1
  5307  045E  0847               	movf	efgtoa@h^(0+128),w
  5308  045F  0140               	movlb	0	; select bank0
  5309  0460  00BE               	movwf	___fldiv@b
  5310  0461  3194  246C  3181   	fcall	___fldiv
  5311  0464  0140               	movlb	0	; select bank0
  5312  0465  083D               	movf	?___fldiv+3,w
  5313  0466  00D7               	movwf	floorf@x+3
  5314  0467  083C               	movf	?___fldiv+2,w
  5315  0468  00D6               	movwf	floorf@x+2
  5316  0469  083B               	movf	?___fldiv+1,w
  5317  046A  00D5               	movwf	floorf@x+1
  5318  046B  083A               	movf	?___fldiv,w
  5319  046C  00D4               	movwf	floorf@x
  5320  046D  3180  20B4  3181   	fcall	_floorf
  5321  0470  0140               	movlb	0	; select bank0
  5322  0471  0857               	movf	?_floorf+3,w
  5323  0472  0141               	movlb	1	; select bank1
  5324  0473  00CE               	movwf	(efgtoa@l+3)^(0+128)
  5325  0474  0140               	movlb	0	; select bank0
  5326  0475  0856               	movf	?_floorf+2,w
  5327  0476  0141               	movlb	1	; select bank1
  5328  0477  00CD               	movwf	(efgtoa@l+2)^(0+128)
  5329  0478  0140               	movlb	0	; select bank0
  5330  0479  0855               	movf	?_floorf+1,w
  5331  047A  0141               	movlb	1	; select bank1
  5332  047B  00CC               	movwf	(efgtoa@l+1)^(0+128)
  5333  047C  0140               	movlb	0	; select bank0
  5334  047D  0854               	movf	?_floorf,w
  5335  047E  0141               	movlb	1	; select bank1
  5336  047F  00CB               	movwf	efgtoa@l^(0+128)
  5337                           
  5338                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 420:       
      +                            d = (int)l;
  5339  0480  084E               	movf	(efgtoa@l+3)^(0+128),w
  5340  0481  00F3               	movwf	___fltol@f1+3
  5341  0482  084D               	movf	(efgtoa@l+2)^(0+128),w
  5342  0483  00F2               	movwf	___fltol@f1+2
  5343  0484  084C               	movf	(efgtoa@l+1)^(0+128),w
  5344  0485  00F1               	movwf	___fltol@f1+1
  5345  0486  084B               	movf	efgtoa@l^(0+128),w
  5346  0487  00F0               	movwf	___fltol@f1
  5347  0488  3190  20ED  3181   	fcall	___fltol
  5348  048B  0871               	movf	?___fltol+1,w
  5349  048C  0141               	movlb	1	; select bank1
  5350  048D  00BD               	movwf	(efgtoa@d+1)^(0+128)
  5351  048E  0870               	movf	?___fltol,w
  5352  048F  00BC               	movwf	efgtoa@d^(0+128)
  5353                           
  5354                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 421:       
      +                            h -= l*u;
  5355  0490  084E               	movf	(efgtoa@l+3)^(0+128),w
  5356  0491  0140               	movlb	0	; select bank0
  5357  0492  00A7               	movwf	___flmul@a+3
  5358  0493  0141               	movlb	1	; select bank1
  5359  0494  084D               	movf	(efgtoa@l+2)^(0+128),w
  5360  0495  0140               	movlb	0	; select bank0
  5361  0496  00A6               	movwf	___flmul@a+2
  5362  0497  0141               	movlb	1	; select bank1
  5363  0498  084C               	movf	(efgtoa@l+1)^(0+128),w
  5364  0499  0140               	movlb	0	; select bank0
  5365  049A  00A5               	movwf	___flmul@a+1
  5366  049B  0141               	movlb	1	; select bank1
  5367  049C  084B               	movf	efgtoa@l^(0+128),w
  5368  049D  0140               	movlb	0	; select bank0
  5369  049E  00A4               	movwf	___flmul@a
  5370  049F  0141               	movlb	1	; select bank1
  5371  04A0  085C               	movf	(efgtoa@u+3)^(0+128),w
  5372  04A1  0140               	movlb	0	; select bank0
  5373  04A2  00A3               	movwf	___flmul@b+3
  5374  04A3  0141               	movlb	1	; select bank1
  5375  04A4  085B               	movf	(efgtoa@u+2)^(0+128),w
  5376  04A5  0140               	movlb	0	; select bank0
  5377  04A6  00A2               	movwf	___flmul@b+2
  5378  04A7  0141               	movlb	1	; select bank1
  5379  04A8  085A               	movf	(efgtoa@u+1)^(0+128),w
  5380  04A9  0140               	movlb	0	; select bank0
  5381  04AA  00A1               	movwf	___flmul@b+1
  5382  04AB  0141               	movlb	1	; select bank1
  5383  04AC  0859               	movf	efgtoa@u^(0+128),w
  5384  04AD  0140               	movlb	0	; select bank0
  5385  04AE  00A0               	movwf	___flmul@b
  5386  04AF  3188  2057  3181   	fcall	___flmul
  5387  04B2  0140               	movlb	0	; select bank0
  5388  04B3  0823               	movf	?___flmul+3,w
  5389  04B4  00BD               	movwf	___flsub@a+3
  5390  04B5  0822               	movf	?___flmul+2,w
  5391  04B6  00BC               	movwf	___flsub@a+2
  5392  04B7  0821               	movf	?___flmul+1,w
  5393  04B8  00BB               	movwf	___flsub@a+1
  5394  04B9  0820               	movf	?___flmul,w
  5395  04BA  00BA               	movwf	___flsub@a
  5396  04BB  0141               	movlb	1	; select bank1
  5397  04BC  084A               	movf	(efgtoa@h+3)^(0+128),w
  5398  04BD  0140               	movlb	0	; select bank0
  5399  04BE  00C1               	movwf	___flsub@b+3
  5400  04BF  0141               	movlb	1	; select bank1
  5401  04C0  0849               	movf	(efgtoa@h+2)^(0+128),w
  5402  04C1  0140               	movlb	0	; select bank0
  5403  04C2  00C0               	movwf	___flsub@b+2
  5404  04C3  0141               	movlb	1	; select bank1
  5405  04C4  0848               	movf	(efgtoa@h+1)^(0+128),w
  5406  04C5  0140               	movlb	0	; select bank0
  5407  04C6  00BF               	movwf	___flsub@b+1
  5408  04C7  0141               	movlb	1	; select bank1
  5409  04C8  0847               	movf	efgtoa@h^(0+128),w
  5410  04C9  0140               	movlb	0	; select bank0
  5411  04CA  00BE               	movwf	___flsub@b
  5412  04CB  319D  2586  3181   	fcall	___flsub
  5413  04CE  0140               	movlb	0	; select bank0
  5414  04CF  083D               	movf	?___flsub+3,w
  5415  04D0  0141               	movlb	1	; select bank1
  5416  04D1  00CA               	movwf	(efgtoa@h+3)^(0+128)
  5417  04D2  0140               	movlb	0	; select bank0
  5418  04D3  083C               	movf	?___flsub+2,w
  5419  04D4  0141               	movlb	1	; select bank1
  5420  04D5  00C9               	movwf	(efgtoa@h+2)^(0+128)
  5421  04D6  0140               	movlb	0	; select bank0
  5422  04D7  083B               	movf	?___flsub+1,w
  5423  04D8  0141               	movlb	1	; select bank1
  5424  04D9  00C8               	movwf	(efgtoa@h+1)^(0+128)
  5425  04DA  0140               	movlb	0	; select bank0
  5426  04DB  083A               	movf	?___flsub,w
  5427  04DC  0141               	movlb	1	; select bank1
  5428  04DD  00C7               	movwf	efgtoa@h^(0+128)
  5429                           
  5430                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 422:       
      +                            u = u/10.0;
  5431  04DE  3041               	movlw	65
  5432  04DF  0140               	movlb	0	; select bank0
  5433  04E0  00BD               	movwf	___fldiv@a+3
  5434  04E1  3020               	movlw	32
  5435  04E2  00BC               	movwf	___fldiv@a+2
  5436  04E3  3000               	movlw	0
  5437  04E4  00BB               	movwf	___fldiv@a+1
  5438  04E5  3000               	movlw	0
  5439  04E6  00BA               	movwf	___fldiv@a
  5440  04E7  0141               	movlb	1	; select bank1
  5441  04E8  085C               	movf	(efgtoa@u+3)^(0+128),w
  5442  04E9  0140               	movlb	0	; select bank0
  5443  04EA  00C1               	movwf	___fldiv@b+3
  5444  04EB  0141               	movlb	1	; select bank1
  5445  04EC  085B               	movf	(efgtoa@u+2)^(0+128),w
  5446  04ED  0140               	movlb	0	; select bank0
  5447  04EE  00C0               	movwf	___fldiv@b+2
  5448  04EF  0141               	movlb	1	; select bank1
  5449  04F0  085A               	movf	(efgtoa@u+1)^(0+128),w
  5450  04F1  0140               	movlb	0	; select bank0
  5451  04F2  00BF               	movwf	___fldiv@b+1
  5452  04F3  0141               	movlb	1	; select bank1
  5453  04F4  0859               	movf	efgtoa@u^(0+128),w
  5454  04F5  0140               	movlb	0	; select bank0
  5455  04F6  00BE               	movwf	___fldiv@b
  5456  04F7  3194  246C  3181   	fcall	___fldiv
  5457  04FA  0140               	movlb	0	; select bank0
  5458  04FB  083D               	movf	?___fldiv+3,w
  5459  04FC  0141               	movlb	1	; select bank1
  5460  04FD  00DC               	movwf	(efgtoa@u+3)^(0+128)
  5461  04FE  0140               	movlb	0	; select bank0
  5462  04FF  083C               	movf	?___fldiv+2,w
  5463  0500  0141               	movlb	1	; select bank1
  5464  0501  00DB               	movwf	(efgtoa@u+2)^(0+128)
  5465  0502  0140               	movlb	0	; select bank0
  5466  0503  083B               	movf	?___fldiv+1,w
  5467  0504  0141               	movlb	1	; select bank1
  5468  0505  00DA               	movwf	(efgtoa@u+1)^(0+128)
  5469  0506  0140               	movlb	0	; select bank0
  5470  0507  083A               	movf	?___fldiv,w
  5471  0508  0141               	movlb	1	; select bank1
  5472  0509  00D9               	movwf	efgtoa@u^(0+128)
  5473                           
  5474                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 423:       
      +                            ++i;
  5475  050A  3001               	movlw	1
  5476  050B  07CF               	addwf	efgtoa@i^(0+128),f
  5477  050C  3000               	movlw	0
  5478  050D  3DD0               	addwfc	(efgtoa@i+1)^(0+128),f
  5479  050E  2C35               	goto	l3605
  5480  050F                     l3607:	
  5481                           
  5482                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 427:     l 
      +                          = u*5.0;
  5483  050F  3040               	movlw	64
  5484  0510  0140               	movlb	0	; select bank0
  5485  0511  00A3               	movwf	___flmul@b+3
  5486  0512  30A0               	movlw	160
  5487  0513  00A2               	movwf	___flmul@b+2
  5488  0514  3000               	movlw	0
  5489  0515  00A1               	movwf	___flmul@b+1
  5490  0516  3000               	movlw	0
  5491  0517  00A0               	movwf	___flmul@b
  5492  0518  0141               	movlb	1	; select bank1
  5493  0519  085C               	movf	(efgtoa@u+3)^(0+128),w
  5494  051A  0140               	movlb	0	; select bank0
  5495  051B  00A7               	movwf	___flmul@a+3
  5496  051C  0141               	movlb	1	; select bank1
  5497  051D  085B               	movf	(efgtoa@u+2)^(0+128),w
  5498  051E  0140               	movlb	0	; select bank0
  5499  051F  00A6               	movwf	___flmul@a+2
  5500  0520  0141               	movlb	1	; select bank1
  5501  0521  085A               	movf	(efgtoa@u+1)^(0+128),w
  5502  0522  0140               	movlb	0	; select bank0
  5503  0523  00A5               	movwf	___flmul@a+1
  5504  0524  0141               	movlb	1	; select bank1
  5505  0525  0859               	movf	efgtoa@u^(0+128),w
  5506  0526  0140               	movlb	0	; select bank0
  5507  0527  00A4               	movwf	___flmul@a
  5508  0528  3188  2057  3181   	fcall	___flmul
  5509  052B  0140               	movlb	0	; select bank0
  5510  052C  0823               	movf	?___flmul+3,w
  5511  052D  0141               	movlb	1	; select bank1
  5512  052E  00CE               	movwf	(efgtoa@l+3)^(0+128)
  5513  052F  0140               	movlb	0	; select bank0
  5514  0530  0822               	movf	?___flmul+2,w
  5515  0531  0141               	movlb	1	; select bank1
  5516  0532  00CD               	movwf	(efgtoa@l+2)^(0+128)
  5517  0533  0140               	movlb	0	; select bank0
  5518  0534  0821               	movf	?___flmul+1,w
  5519  0535  0141               	movlb	1	; select bank1
  5520  0536  00CC               	movwf	(efgtoa@l+1)^(0+128)
  5521  0537  0140               	movlb	0	; select bank0
  5522  0538  0820               	movf	?___flmul,w
  5523  0539  0141               	movlb	1	; select bank1
  5524  053A  00CB               	movwf	efgtoa@l^(0+128)
  5525                           
  5526                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 428:     if
      +                           (h < l) {
  5527  053B  084A               	movf	(efgtoa@h+3)^(0+128),w
  5528  053C  0140               	movlb	0	; select bank0
  5529  053D  00BD               	movwf	___flge@ff1+3
  5530  053E  0141               	movlb	1	; select bank1
  5531  053F  0849               	movf	(efgtoa@h+2)^(0+128),w
  5532  0540  0140               	movlb	0	; select bank0
  5533  0541  00BC               	movwf	___flge@ff1+2
  5534  0542  0141               	movlb	1	; select bank1
  5535  0543  0848               	movf	(efgtoa@h+1)^(0+128),w
  5536  0544  0140               	movlb	0	; select bank0
  5537  0545  00BB               	movwf	___flge@ff1+1
  5538  0546  0141               	movlb	1	; select bank1
  5539  0547  0847               	movf	efgtoa@h^(0+128),w
  5540  0548  0140               	movlb	0	; select bank0
  5541  0549  00BA               	movwf	___flge@ff1
  5542  054A  0141               	movlb	1	; select bank1
  5543  054B  084E               	movf	(efgtoa@l+3)^(0+128),w
  5544  054C  0140               	movlb	0	; select bank0
  5545  054D  00C1               	movwf	___flge@ff2+3
  5546  054E  0141               	movlb	1	; select bank1
  5547  054F  084D               	movf	(efgtoa@l+2)^(0+128),w
  5548  0550  0140               	movlb	0	; select bank0
  5549  0551  00C0               	movwf	___flge@ff2+2
  5550  0552  0141               	movlb	1	; select bank1
  5551  0553  084C               	movf	(efgtoa@l+1)^(0+128),w
  5552  0554  0140               	movlb	0	; select bank0
  5553  0555  00BF               	movwf	___flge@ff2+1
  5554  0556  0141               	movlb	1	; select bank1
  5555  0557  084B               	movf	efgtoa@l^(0+128),w
  5556  0558  0140               	movlb	0	; select bank0
  5557  0559  00BE               	movwf	___flge@ff2
  5558  055A  3193  232A  3181   	fcall	___flge
  5559  055D  1803               	btfsc	3,0
  5560  055E  2D62               	goto	l3611
  5561                           
  5562                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 429:       
      +                            l = 0.0;
  5563  055F  3000               	movlw	0
  5564  0560  0141               	movlb	1	; select bank1
  5565  0561  2D7C               	goto	L4
  5566  0562                     l3611:	
  5567                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 430:     } 
      +                          else {
  5568                           
  5569                           
  5570                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 432:       
      +                            if ((h == l) && !(d % 2)) {
  5571  0562  0141               	movlb	1	; select bank1
  5572  0563  084A               	movf	(efgtoa@h+3)^(0+128),w
  5573  0564  00F3               	movwf	___fleq@ff1+3
  5574  0565  0849               	movf	(efgtoa@h+2)^(0+128),w
  5575  0566  00F2               	movwf	___fleq@ff1+2
  5576  0567  0848               	movf	(efgtoa@h+1)^(0+128),w
  5577  0568  00F1               	movwf	___fleq@ff1+1
  5578  0569  0847               	movf	efgtoa@h^(0+128),w
  5579  056A  00F0               	movwf	___fleq@ff1
  5580  056B  084E               	movf	(efgtoa@l+3)^(0+128),w
  5581  056C  00F7               	movwf	___fleq@ff2+3
  5582  056D  084D               	movf	(efgtoa@l+2)^(0+128),w
  5583  056E  00F6               	movwf	___fleq@ff2+2
  5584  056F  084C               	movf	(efgtoa@l+1)^(0+128),w
  5585  0570  00F5               	movwf	___fleq@ff2+1
  5586  0571  084B               	movf	efgtoa@l^(0+128),w
  5587  0572  00F4               	movwf	___fleq@ff2
  5588  0573  319F  271C  3181   	fcall	___fleq
  5589  0576  1C03               	btfss	3,0
  5590  0577  2D83               	goto	l3617
  5591  0578  0141               	movlb	1	; select bank1
  5592  0579  183C               	btfsc	efgtoa@d^(0+128),0
  5593  057A  2D83               	goto	l3617
  5594                           
  5595                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 433:       
      +                                l = 0.0;
  5596  057B  3000               	movlw	0
  5597  057C                     L4:	
  5598  057C  00CE               	movwf	(efgtoa@l+3)^(0+128)
  5599  057D  3000               	movlw	0
  5600  057E  00CD               	movwf	(efgtoa@l+2)^(0+128)
  5601  057F  3000               	movlw	0
  5602  0580  00CC               	movwf	(efgtoa@l+1)^(0+128)
  5603  0581  3000               	movlw	0
  5604  0582  00CB               	movwf	efgtoa@l^(0+128)
  5605  0583                     l3617:	
  5606                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 435:     }
  5607                           
  5608                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 434:       
      +                            }
  5609                           
  5610                           
  5611                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 438:     h 
      +                          = g + l;
  5612  0583  0141               	movlb	1	; select bank1
  5613  0584  084E               	movf	(efgtoa@l+3)^(0+128),w
  5614  0585  00F3               	movwf	___fladd@b+3
  5615  0586  084D               	movf	(efgtoa@l+2)^(0+128),w
  5616  0587  00F2               	movwf	___fladd@b+2
  5617  0588  084C               	movf	(efgtoa@l+1)^(0+128),w
  5618  0589  00F1               	movwf	___fladd@b+1
  5619  058A  084B               	movf	efgtoa@l^(0+128),w
  5620  058B  00F0               	movwf	___fladd@b
  5621  058C  0854               	movf	(efgtoa@g+3)^(0+128),w
  5622  058D  00F7               	movwf	___fladd@a+3
  5623  058E  0853               	movf	(efgtoa@g+2)^(0+128),w
  5624  058F  00F6               	movwf	___fladd@a+2
  5625  0590  0852               	movf	(efgtoa@g+1)^(0+128),w
  5626  0591  00F5               	movwf	___fladd@a+1
  5627  0592  0851               	movf	efgtoa@g^(0+128),w
  5628  0593  00F4               	movwf	___fladd@a
  5629  0594  3195  25FF  3181   	fcall	___fladd
  5630  0597  0873               	movf	?___fladd+3,w
  5631  0598  0141               	movlb	1	; select bank1
  5632  0599  00CA               	movwf	(efgtoa@h+3)^(0+128)
  5633  059A  0872               	movf	?___fladd+2,w
  5634  059B  00C9               	movwf	(efgtoa@h+2)^(0+128)
  5635  059C  0871               	movf	?___fladd+1,w
  5636  059D  00C8               	movwf	(efgtoa@h+1)^(0+128)
  5637  059E  0870               	movf	?___fladd,w
  5638  059F  00C7               	movwf	efgtoa@h^(0+128)
  5639                           
  5640                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 441:     u 
      +                          = ou;
  5641  05A0  0827               	movf	(efgtoa@ou+3)^(0+128),w
  5642  05A1  00DC               	movwf	(efgtoa@u+3)^(0+128)
  5643  05A2  0826               	movf	(efgtoa@ou+2)^(0+128),w
  5644  05A3  00DB               	movwf	(efgtoa@u+2)^(0+128)
  5645  05A4  0825               	movf	(efgtoa@ou+1)^(0+128),w
  5646  05A5  00DA               	movwf	(efgtoa@u+1)^(0+128)
  5647  05A6  0824               	movf	efgtoa@ou^(0+128),w
  5648  05A7  00D9               	movwf	efgtoa@u^(0+128)
  5649                           
  5650                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 442:     ne
      +                           = (nmode == 'e') ? 0 : e;
  5651  05A8  3065               	movlw	101
  5652  05A9  0643               	xorwf	efgtoa@nmode^(0+128),w
  5653  05AA  1903               	btfsc	3,2
  5654  05AB  2DB1               	goto	l3625
  5655  05AC  0856               	movf	(efgtoa@e+1)^(0+128),w
  5656  05AD  00BB               	movwf	(efgtoa@ne+1)^(0+128)
  5657  05AE  0855               	movf	efgtoa@e^(0+128),w
  5658  05AF  00BA               	movwf	efgtoa@ne^(0+128)
  5659  05B0  2DB3               	goto	l287
  5660  05B1                     l3625:	
  5661  05B1  01BA               	clrf	efgtoa@ne^(0+128)
  5662  05B2  01BB               	clrf	(efgtoa@ne+1)^(0+128)
  5663  05B3                     l287:	
  5664                           
  5665                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 443:     pp
      +                           = 0;
  5666  05B3  01B6               	clrf	efgtoa@pp^(0+128)
  5667  05B4  01B7               	clrf	(efgtoa@pp+1)^(0+128)
  5668                           
  5669                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 444:     t 
      +                          = 0;
  5670  05B5  01B4               	clrf	efgtoa@t^(0+128)
  5671  05B6  01B5               	clrf	(efgtoa@t+1)^(0+128)
  5672                           
  5673                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 445:     i 
      +                          = 0;
  5674  05B7  01CF               	clrf	efgtoa@i^(0+128)
  5675  05B8  01D0               	clrf	(efgtoa@i+1)^(0+128)
  5676                           
  5677                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 446:     wh
      +                          ile ((i < m) && (n < (80 - 5))) {
  5678  05B9  2EE1               	goto	l3675
  5679  05BA                     l3627:	
  5680                           
  5681                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 447:       
      +                            l = floorf(h/u);
  5682  05BA  0141               	movlb	1	; select bank1
  5683  05BB  085C               	movf	(efgtoa@u+3)^(0+128),w
  5684  05BC  0140               	movlb	0	; select bank0
  5685  05BD  00BD               	movwf	___fldiv@a+3
  5686  05BE  0141               	movlb	1	; select bank1
  5687  05BF  085B               	movf	(efgtoa@u+2)^(0+128),w
  5688  05C0  0140               	movlb	0	; select bank0
  5689  05C1  00BC               	movwf	___fldiv@a+2
  5690  05C2  0141               	movlb	1	; select bank1
  5691  05C3  085A               	movf	(efgtoa@u+1)^(0+128),w
  5692  05C4  0140               	movlb	0	; select bank0
  5693  05C5  00BB               	movwf	___fldiv@a+1
  5694  05C6  0141               	movlb	1	; select bank1
  5695  05C7  0859               	movf	efgtoa@u^(0+128),w
  5696  05C8  0140               	movlb	0	; select bank0
  5697  05C9  00BA               	movwf	___fldiv@a
  5698  05CA  0141               	movlb	1	; select bank1
  5699  05CB  084A               	movf	(efgtoa@h+3)^(0+128),w
  5700  05CC  0140               	movlb	0	; select bank0
  5701  05CD  00C1               	movwf	___fldiv@b+3
  5702  05CE  0141               	movlb	1	; select bank1
  5703  05CF  0849               	movf	(efgtoa@h+2)^(0+128),w
  5704  05D0  0140               	movlb	0	; select bank0
  5705  05D1  00C0               	movwf	___fldiv@b+2
  5706  05D2  0141               	movlb	1	; select bank1
  5707  05D3  0848               	movf	(efgtoa@h+1)^(0+128),w
  5708  05D4  0140               	movlb	0	; select bank0
  5709  05D5  00BF               	movwf	___fldiv@b+1
  5710  05D6  0141               	movlb	1	; select bank1
  5711  05D7  0847               	movf	efgtoa@h^(0+128),w
  5712  05D8  0140               	movlb	0	; select bank0
  5713  05D9  00BE               	movwf	___fldiv@b
  5714  05DA  3194  246C  3181   	fcall	___fldiv
  5715  05DD  0140               	movlb	0	; select bank0
  5716  05DE  083D               	movf	?___fldiv+3,w
  5717  05DF  00D7               	movwf	floorf@x+3
  5718  05E0  083C               	movf	?___fldiv+2,w
  5719  05E1  00D6               	movwf	floorf@x+2
  5720  05E2  083B               	movf	?___fldiv+1,w
  5721  05E3  00D5               	movwf	floorf@x+1
  5722  05E4  083A               	movf	?___fldiv,w
  5723  05E5  00D4               	movwf	floorf@x
  5724  05E6  3180  20B4  3181   	fcall	_floorf
  5725  05E9  0140               	movlb	0	; select bank0
  5726  05EA  0857               	movf	?_floorf+3,w
  5727  05EB  0141               	movlb	1	; select bank1
  5728  05EC  00CE               	movwf	(efgtoa@l+3)^(0+128)
  5729  05ED  0140               	movlb	0	; select bank0
  5730  05EE  0856               	movf	?_floorf+2,w
  5731  05EF  0141               	movlb	1	; select bank1
  5732  05F0  00CD               	movwf	(efgtoa@l+2)^(0+128)
  5733  05F1  0140               	movlb	0	; select bank0
  5734  05F2  0855               	movf	?_floorf+1,w
  5735  05F3  0141               	movlb	1	; select bank1
  5736  05F4  00CC               	movwf	(efgtoa@l+1)^(0+128)
  5737  05F5  0140               	movlb	0	; select bank0
  5738  05F6  0854               	movf	?_floorf,w
  5739  05F7  0141               	movlb	1	; select bank1
  5740  05F8  00CB               	movwf	efgtoa@l^(0+128)
  5741                           
  5742                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 448:       
      +                            d = (int)l;
  5743  05F9  084E               	movf	(efgtoa@l+3)^(0+128),w
  5744  05FA  00F3               	movwf	___fltol@f1+3
  5745  05FB  084D               	movf	(efgtoa@l+2)^(0+128),w
  5746  05FC  00F2               	movwf	___fltol@f1+2
  5747  05FD  084C               	movf	(efgtoa@l+1)^(0+128),w
  5748  05FE  00F1               	movwf	___fltol@f1+1
  5749  05FF  084B               	movf	efgtoa@l^(0+128),w
  5750  0600  00F0               	movwf	___fltol@f1
  5751  0601  3190  20ED  3181   	fcall	___fltol
  5752  0604  0871               	movf	?___fltol+1,w
  5753  0605  0141               	movlb	1	; select bank1
  5754  0606  00BD               	movwf	(efgtoa@d+1)^(0+128)
  5755  0607  0870               	movf	?___fltol,w
  5756  0608  00BC               	movwf	efgtoa@d^(0+128)
  5757                           
  5758                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 449:       
      +                            if (!(flags & (1 << 4)) && !d && (mode == 'g') && (ne < 0)) {
  5759  0609  1A6E               	btfsc	_flags^(0+128),4
  5760  060A  2E19               	goto	l3639
  5761  060B  083C               	movf	efgtoa@d^(0+128),w
  5762  060C  043D               	iorwf	(efgtoa@d+1)^(0+128),w
  5763  060D  1D03               	btfss	3,2
  5764  060E  2E19               	goto	l3639
  5765  060F  3067               	movlw	103
  5766  0610  0646               	xorwf	efgtoa@mode^(0+128),w
  5767  0611  1903               	btfsc	3,2
  5768  0612  1FBB               	btfss	(efgtoa@ne+1)^(0+128),7
  5769  0613  2E19               	goto	l3639
  5770                           
  5771                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 450:       
      +                                ++t;
  5772  0614  3001               	movlw	1
  5773  0615  07B4               	addwf	efgtoa@t^(0+128),f
  5774  0616  3000               	movlw	0
  5775  0617  3DB5               	addwfc	(efgtoa@t+1)^(0+128),f
  5776                           
  5777                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 451:       
      +                            } else {
  5778  0618  2E5F               	goto	l3667
  5779  0619                     l3639:	
  5780                           
  5781                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 452:       
      +                                if (!pp && (ne < 0)) {
  5782  0619  0836               	movf	efgtoa@pp^(0+128),w
  5783  061A  0437               	iorwf	(efgtoa@pp+1)^(0+128),w
  5784  061B  1903               	btfsc	3,2
  5785  061C  1FBB               	btfss	(efgtoa@ne+1)^(0+128),7
  5786  061D  2E33               	goto	l3659
  5787                           
  5788                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 453:       
      +                                    dbuf[n++] = '.';
  5789  061E  302E               	movlw	46
  5790  061F  00A0               	movwf	??_efgtoa^(0+128)
  5791  0620  0857               	movf	efgtoa@n^(0+128),w
  5792  0621  3E20               	addlw	(low (_dbuf| (0+512)))& (0+255)
  5793  0622  0086               	movwf	6
  5794  0623  3002               	movlw	2	; select bank4/5
  5795  0624  0087               	movwf	7
  5796  0625  0820               	movf	??_efgtoa^(0+128),w
  5797  0626  0081               	movwf	1
  5798  0627  3001               	movlw	1
  5799  0628  07D7               	addwf	efgtoa@n^(0+128),f
  5800  0629  3000               	movlw	0
  5801  062A  3DD8               	addwfc	(efgtoa@n+1)^(0+128),f
  5802                           
  5803                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 454:       
      +                                    --w;
  5804  062B  30FF               	movlw	255
  5805  062C  07C4               	addwf	efgtoa@w^(0+128),f
  5806  062D  30FF               	movlw	255
  5807  062E  3DC5               	addwfc	(efgtoa@w+1)^(0+128),f
  5808                           
  5809                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 455:       
      +                                    pp = 1;
  5810  062F  3001               	movlw	1
  5811  0630  00B6               	movwf	efgtoa@pp^(0+128)
  5812  0631  3000               	movlw	0
  5813  0632  00B7               	movwf	(efgtoa@pp^(0+128)+1)
  5814  0633                     l3659:	
  5815                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 461:       
      +                                }
  5816                           
  5817                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 457:       
      +                                while (t) {
  5818                           
  5819                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 456:       
      +                                }
  5820                           
  5821                           
  5822                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 457:       
      +                                while (t) {
  5823  0633  0834               	movf	efgtoa@t^(0+128),w
  5824  0634  0435               	iorwf	(efgtoa@t+1)^(0+128),w
  5825  0635  1903               	btfsc	3,2
  5826  0636  2E4D               	goto	l3661
  5827                           
  5828                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 458:       
      +                                    dbuf[n++] = '0';
  5829  0637  3030               	movlw	48
  5830  0638  00A0               	movwf	??_efgtoa^(0+128)
  5831  0639  0857               	movf	efgtoa@n^(0+128),w
  5832  063A  3E20               	addlw	(low (_dbuf| (0+512)))& (0+255)
  5833  063B  0086               	movwf	6
  5834  063C  3002               	movlw	2	; select bank4/5
  5835  063D  0087               	movwf	7
  5836  063E  0820               	movf	??_efgtoa^(0+128),w
  5837  063F  0081               	movwf	1
  5838  0640  3001               	movlw	1
  5839  0641  07D7               	addwf	efgtoa@n^(0+128),f
  5840  0642  3000               	movlw	0
  5841  0643  3DD8               	addwfc	(efgtoa@n+1)^(0+128),f
  5842                           
  5843                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 459:       
      +                                    --w;
  5844  0644  30FF               	movlw	255
  5845  0645  07C4               	addwf	efgtoa@w^(0+128),f
  5846  0646  30FF               	movlw	255
  5847  0647  3DC5               	addwfc	(efgtoa@w+1)^(0+128),f
  5848                           
  5849                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 460:       
      +                                    --t;
  5850  0648  30FF               	movlw	255
  5851  0649  07B4               	addwf	efgtoa@t^(0+128),f
  5852  064A  30FF               	movlw	255
  5853  064B  3DB5               	addwfc	(efgtoa@t+1)^(0+128),f
  5854  064C  2E33               	goto	l3659
  5855  064D                     l3661:	
  5856                           
  5857                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 462:       
      +                                dbuf[n++] = '0' + d;
  5858  064D  083C               	movf	efgtoa@d^(0+128),w
  5859  064E  3E30               	addlw	48
  5860  064F  00A0               	movwf	??_efgtoa^(0+128)
  5861  0650  0857               	movf	efgtoa@n^(0+128),w
  5862  0651  3E20               	addlw	(low (_dbuf| (0+512)))& (0+255)
  5863  0652  0086               	movwf	6
  5864  0653  3002               	movlw	2	; select bank4/5
  5865  0654  0087               	movwf	7
  5866  0655  0820               	movf	??_efgtoa^(0+128),w
  5867  0656  0081               	movwf	1
  5868  0657  3001               	movlw	1
  5869  0658  07D7               	addwf	efgtoa@n^(0+128),f
  5870  0659  3000               	movlw	0
  5871  065A  3DD8               	addwfc	(efgtoa@n+1)^(0+128),f
  5872                           
  5873                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 463:       
      +                                --w;
  5874  065B  30FF               	movlw	255
  5875  065C  07C4               	addwf	efgtoa@w^(0+128),f
  5876  065D  30FF               	movlw	255
  5877  065E  3DC5               	addwfc	(efgtoa@w+1)^(0+128),f
  5878  065F                     l3667:	
  5879                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 464:       
      +                            }
  5880                           
  5881                           
  5882                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 465:       
      +                            h -= l*u;
  5883  065F  084E               	movf	(efgtoa@l+3)^(0+128),w
  5884  0660  0140               	movlb	0	; select bank0
  5885  0661  00A7               	movwf	___flmul@a+3
  5886  0662  0141               	movlb	1	; select bank1
  5887  0663  084D               	movf	(efgtoa@l+2)^(0+128),w
  5888  0664  0140               	movlb	0	; select bank0
  5889  0665  00A6               	movwf	___flmul@a+2
  5890  0666  0141               	movlb	1	; select bank1
  5891  0667  084C               	movf	(efgtoa@l+1)^(0+128),w
  5892  0668  0140               	movlb	0	; select bank0
  5893  0669  00A5               	movwf	___flmul@a+1
  5894  066A  0141               	movlb	1	; select bank1
  5895  066B  084B               	movf	efgtoa@l^(0+128),w
  5896  066C  0140               	movlb	0	; select bank0
  5897  066D  00A4               	movwf	___flmul@a
  5898  066E  0141               	movlb	1	; select bank1
  5899  066F  085C               	movf	(efgtoa@u+3)^(0+128),w
  5900  0670  0140               	movlb	0	; select bank0
  5901  0671  00A3               	movwf	___flmul@b+3
  5902  0672  0141               	movlb	1	; select bank1
  5903  0673  085B               	movf	(efgtoa@u+2)^(0+128),w
  5904  0674  0140               	movlb	0	; select bank0
  5905  0675  00A2               	movwf	___flmul@b+2
  5906  0676  0141               	movlb	1	; select bank1
  5907  0677  085A               	movf	(efgtoa@u+1)^(0+128),w
  5908  0678  0140               	movlb	0	; select bank0
  5909  0679  00A1               	movwf	___flmul@b+1
  5910  067A  0141               	movlb	1	; select bank1
  5911  067B  0859               	movf	efgtoa@u^(0+128),w
  5912  067C  0140               	movlb	0	; select bank0
  5913  067D  00A0               	movwf	___flmul@b
  5914  067E  3188  2057  3181   	fcall	___flmul
  5915  0681  0140               	movlb	0	; select bank0
  5916  0682  0823               	movf	?___flmul+3,w
  5917  0683  00BD               	movwf	___flsub@a+3
  5918  0684  0822               	movf	?___flmul+2,w
  5919  0685  00BC               	movwf	___flsub@a+2
  5920  0686  0821               	movf	?___flmul+1,w
  5921  0687  00BB               	movwf	___flsub@a+1
  5922  0688  0820               	movf	?___flmul,w
  5923  0689  00BA               	movwf	___flsub@a
  5924  068A  0141               	movlb	1	; select bank1
  5925  068B  084A               	movf	(efgtoa@h+3)^(0+128),w
  5926  068C  0140               	movlb	0	; select bank0
  5927  068D  00C1               	movwf	___flsub@b+3
  5928  068E  0141               	movlb	1	; select bank1
  5929  068F  0849               	movf	(efgtoa@h+2)^(0+128),w
  5930  0690  0140               	movlb	0	; select bank0
  5931  0691  00C0               	movwf	___flsub@b+2
  5932  0692  0141               	movlb	1	; select bank1
  5933  0693  0848               	movf	(efgtoa@h+1)^(0+128),w
  5934  0694  0140               	movlb	0	; select bank0
  5935  0695  00BF               	movwf	___flsub@b+1
  5936  0696  0141               	movlb	1	; select bank1
  5937  0697  0847               	movf	efgtoa@h^(0+128),w
  5938  0698  0140               	movlb	0	; select bank0
  5939  0699  00BE               	movwf	___flsub@b
  5940  069A  319D  2586  3181   	fcall	___flsub
  5941  069D  0140               	movlb	0	; select bank0
  5942  069E  083D               	movf	?___flsub+3,w
  5943  069F  0141               	movlb	1	; select bank1
  5944  06A0  00CA               	movwf	(efgtoa@h+3)^(0+128)
  5945  06A1  0140               	movlb	0	; select bank0
  5946  06A2  083C               	movf	?___flsub+2,w
  5947  06A3  0141               	movlb	1	; select bank1
  5948  06A4  00C9               	movwf	(efgtoa@h+2)^(0+128)
  5949  06A5  0140               	movlb	0	; select bank0
  5950  06A6  083B               	movf	?___flsub+1,w
  5951  06A7  0141               	movlb	1	; select bank1
  5952  06A8  00C8               	movwf	(efgtoa@h+1)^(0+128)
  5953  06A9  0140               	movlb	0	; select bank0
  5954  06AA  083A               	movf	?___flsub,w
  5955  06AB  0141               	movlb	1	; select bank1
  5956  06AC  00C7               	movwf	efgtoa@h^(0+128)
  5957                           
  5958                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 466:       
      +                            u = u/10.0;
  5959  06AD  3041               	movlw	65
  5960  06AE  0140               	movlb	0	; select bank0
  5961  06AF  00BD               	movwf	___fldiv@a+3
  5962  06B0  3020               	movlw	32
  5963  06B1  00BC               	movwf	___fldiv@a+2
  5964  06B2  3000               	movlw	0
  5965  06B3  00BB               	movwf	___fldiv@a+1
  5966  06B4  3000               	movlw	0
  5967  06B5  00BA               	movwf	___fldiv@a
  5968  06B6  0141               	movlb	1	; select bank1
  5969  06B7  085C               	movf	(efgtoa@u+3)^(0+128),w
  5970  06B8  0140               	movlb	0	; select bank0
  5971  06B9  00C1               	movwf	___fldiv@b+3
  5972  06BA  0141               	movlb	1	; select bank1
  5973  06BB  085B               	movf	(efgtoa@u+2)^(0+128),w
  5974  06BC  0140               	movlb	0	; select bank0
  5975  06BD  00C0               	movwf	___fldiv@b+2
  5976  06BE  0141               	movlb	1	; select bank1
  5977  06BF  085A               	movf	(efgtoa@u+1)^(0+128),w
  5978  06C0  0140               	movlb	0	; select bank0
  5979  06C1  00BF               	movwf	___fldiv@b+1
  5980  06C2  0141               	movlb	1	; select bank1
  5981  06C3  0859               	movf	efgtoa@u^(0+128),w
  5982  06C4  0140               	movlb	0	; select bank0
  5983  06C5  00BE               	movwf	___fldiv@b
  5984  06C6  3194  246C  3181   	fcall	___fldiv
  5985  06C9  0140               	movlb	0	; select bank0
  5986  06CA  083D               	movf	?___fldiv+3,w
  5987  06CB  0141               	movlb	1	; select bank1
  5988  06CC  00DC               	movwf	(efgtoa@u+3)^(0+128)
  5989  06CD  0140               	movlb	0	; select bank0
  5990  06CE  083C               	movf	?___fldiv+2,w
  5991  06CF  0141               	movlb	1	; select bank1
  5992  06D0  00DB               	movwf	(efgtoa@u+2)^(0+128)
  5993  06D1  0140               	movlb	0	; select bank0
  5994  06D2  083B               	movf	?___fldiv+1,w
  5995  06D3  0141               	movlb	1	; select bank1
  5996  06D4  00DA               	movwf	(efgtoa@u+1)^(0+128)
  5997  06D5  0140               	movlb	0	; select bank0
  5998  06D6  083A               	movf	?___fldiv,w
  5999  06D7  0141               	movlb	1	; select bank1
  6000  06D8  00D9               	movwf	efgtoa@u^(0+128)
  6001                           
  6002                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 467:       
      +                            --ne;
  6003  06D9  30FF               	movlw	255
  6004  06DA  07BA               	addwf	efgtoa@ne^(0+128),f
  6005  06DB  30FF               	movlw	255
  6006  06DC  3DBB               	addwfc	(efgtoa@ne+1)^(0+128),f
  6007                           
  6008                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 468:       
      +                            ++i;
  6009  06DD  3001               	movlw	1
  6010  06DE  07CF               	addwf	efgtoa@i^(0+128),f
  6011  06DF  3000               	movlw	0
  6012  06E0  3DD0               	addwfc	(efgtoa@i+1)^(0+128),f
  6013  06E1                     l3675:	
  6014                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 469:     }
  6015                           
  6016                           
  6017                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 446:     wh
      +                          ile ((i < m) && (n < (80 - 5))) {
  6018  06E1  0850               	movf	(efgtoa@i+1)^(0+128),w
  6019  06E2  3A80               	xorlw	128
  6020  06E3  00A0               	movwf	??_efgtoa^(0+128)
  6021  06E4  0839               	movf	(efgtoa@m+1)^(0+128),w
  6022  06E5  3A80               	xorlw	128
  6023  06E6  0220               	subwf	??_efgtoa^(0+128),w
  6024  06E7  1D03               	skipz
  6025  06E8  2EEB               	goto	u5255
  6026  06E9  0838               	movf	efgtoa@m^(0+128),w
  6027  06EA  024F               	subwf	efgtoa@i^(0+128),w
  6028  06EB                     u5255:	
  6029  06EB  1803               	skipnc
  6030  06EC  2EF9               	goto	l3679
  6031  06ED  0141               	movlb	1	; select bank1
  6032  06EE  0858               	movf	(efgtoa@n+1)^(0+128),w
  6033  06EF  3A80               	xorlw	128
  6034  06F0  00A0               	movwf	??_efgtoa^(0+128)
  6035  06F1  3080               	movlw	128
  6036  06F2  0220               	subwf	??_efgtoa^(0+128),w
  6037  06F3  1D03               	skipz
  6038  06F4  2EF7               	goto	u5265
  6039  06F5  304B               	movlw	75
  6040  06F6  0257               	subwf	efgtoa@n^(0+128),w
  6041  06F7                     u5265:	
  6042  06F7  1C03               	skipc
  6043  06F8  2DBA               	goto	l3627
  6044  06F9                     l3679:	
  6045                           
  6046                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 470:     if
      +                           (!pp && (flags & (1 << 4))) {
  6047  06F9  0141               	movlb	1	; select bank1
  6048  06FA  0836               	movf	efgtoa@pp^(0+128),w
  6049  06FB  0437               	iorwf	(efgtoa@pp+1)^(0+128),w
  6050  06FC  1903               	btfsc	3,2
  6051  06FD  1E6E               	btfss	_flags^(0+128),4
  6052  06FE  2F0C               	goto	l3687
  6053                           
  6054                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 471:       
      +                            dbuf[n++] = '.';
  6055  06FF  302E               	movlw	46
  6056  0700  00A0               	movwf	??_efgtoa^(0+128)
  6057  0701  0857               	movf	efgtoa@n^(0+128),w
  6058  0702  3E20               	addlw	(low (_dbuf| (0+512)))& (0+255)
  6059  0703  0086               	movwf	6
  6060  0704  3002               	movlw	2	; select bank4/5
  6061  0705  0087               	movwf	7
  6062  0706  0820               	movf	??_efgtoa^(0+128),w
  6063  0707  0081               	movwf	1
  6064  0708  3001               	movlw	1
  6065  0709  07D7               	addwf	efgtoa@n^(0+128),f
  6066  070A  3000               	movlw	0
  6067  070B  3DD8               	addwfc	(efgtoa@n+1)^(0+128),f
  6068  070C                     l3687:	
  6069                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 472:     }
  6070                           
  6071                           
  6072                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 473:     db
      +                          uf[n] = '\0';
  6073  070C  0857               	movf	efgtoa@n^(0+128),w
  6074  070D  3E20               	addlw	(low (_dbuf| (0+512)))& (0+255)
  6075  070E  0086               	movwf	6
  6076  070F  3002               	movlw	2	; select bank4/5
  6077  0710  0087               	movwf	7
  6078  0711  0181               	clrf	1
  6079                           
  6080                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 476:     if
      +                           (nmode == 'e') {
  6081  0712  3065               	movlw	101
  6082  0713  0643               	xorwf	efgtoa@nmode^(0+128),w
  6083  0714  1D03               	btfss	3,2
  6084  0715  2FCE               	goto	l3749
  6085                           
  6086                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 477:       
      +                            i = sizeof(dbuf) - 1;
  6087  0716  304F               	movlw	79
  6088  0717  00CF               	movwf	efgtoa@i^(0+128)
  6089  0718  3000               	movlw	0
  6090  0719  00D0               	movwf	(efgtoa@i^(0+128)+1)
  6091                           
  6092                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 478:       
      +                            dbuf[i] = '\0';
  6093  071A  084F               	movf	efgtoa@i^(0+128),w
  6094  071B  3E20               	addlw	(low (_dbuf| (0+512)))& (0+255)
  6095  071C  0086               	movwf	6
  6096  071D  3002               	movlw	2	; select bank4/5
  6097  071E  0087               	movwf	7
  6098  071F  0181               	clrf	1
  6099                           
  6100                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 479:       
      +                            sign = 0;
  6101  0720  01BE               	clrf	efgtoa@sign^(0+128)
  6102  0721  01BF               	clrf	(efgtoa@sign+1)^(0+128)
  6103                           
  6104                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 480:       
      +                            if (e < 0) {
  6105  0722  1FD6               	btfss	(efgtoa@e+1)^(0+128),7
  6106  0723  2F2D               	goto	l3703
  6107                           
  6108                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 481:       
      +                                sign = 1;
  6109  0724  3001               	movlw	1
  6110  0725  00BE               	movwf	efgtoa@sign^(0+128)
  6111  0726  3000               	movlw	0
  6112  0727  00BF               	movwf	(efgtoa@sign^(0+128)+1)
  6113                           
  6114                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 482:       
      +                                e = -e;
  6115  0728  09D5               	comf	efgtoa@e^(0+128),f
  6116  0729  09D6               	comf	(efgtoa@e+1)^(0+128),f
  6117  072A  0AD5               	incf	efgtoa@e^(0+128),f
  6118  072B  1903               	skipnz
  6119  072C  0AD6               	incf	(efgtoa@e+1)^(0+128),f
  6120  072D                     l3703:	
  6121                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 483:       
      +                            }
  6122                           
  6123                           
  6124                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 484:       
      +                            p = 2;
  6125  072D  3002               	movlw	2
  6126  072E  00C1               	movwf	efgtoa@p^(0+128)
  6127  072F  3000               	movlw	0
  6128  0730  00C2               	movwf	(efgtoa@p^(0+128)+1)
  6129  0731                     l3715:	
  6130                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 491:       
      +                            }
  6131                           
  6132                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 485:       
      +                            while (e || (0 < p)) {
  6133                           
  6134                           
  6135                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 485:       
      +                            while (e || (0 < p)) {
  6136  0731  0855               	movf	efgtoa@e^(0+128),w
  6137  0732  0456               	iorwf	(efgtoa@e+1)^(0+128),w
  6138  0733  1903               	btfsc	3,2
  6139  0734  2F69               	goto	l3717
  6140  0735                     l3705:	
  6141                           
  6142                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 486:       
      +                                --i;
  6143  0735  30FF               	movlw	255
  6144  0736  0141               	movlb	1	; select bank1
  6145  0737  07CF               	addwf	efgtoa@i^(0+128),f
  6146  0738  30FF               	movlw	255
  6147  0739  3DD0               	addwfc	(efgtoa@i+1)^(0+128),f
  6148                           
  6149                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 487:       
      +                                dbuf[i] = '0' + (e % 10);
  6150  073A  300A               	movlw	10
  6151  073B  00F0               	movwf	___awmod@divisor
  6152  073C  3000               	movlw	0
  6153  073D  00F1               	movwf	___awmod@divisor+1
  6154  073E  0856               	movf	(efgtoa@e+1)^(0+128),w
  6155  073F  00F3               	movwf	___awmod@dividend+1
  6156  0740  0855               	movf	efgtoa@e^(0+128),w
  6157  0741  00F2               	movwf	___awmod@dividend
  6158  0742  319E  26D7  3181   	fcall	___awmod
  6159  0745  0870               	movf	?___awmod,w
  6160  0746  3E30               	addlw	48
  6161  0747  0141               	movlb	1	; select bank1
  6162  0748  00A0               	movwf	??_efgtoa^(0+128)
  6163  0749  084F               	movf	efgtoa@i^(0+128),w
  6164  074A  3E20               	addlw	(low (_dbuf| (0+512)))& (0+255)
  6165  074B  0086               	movwf	6
  6166  074C  3002               	movlw	2	; select bank4/5
  6167  074D  0087               	movwf	7
  6168  074E  0820               	movf	??_efgtoa^(0+128),w
  6169  074F  0081               	movwf	1
  6170                           
  6171                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 488:       
      +                                e = e / 10;
  6172  0750  300A               	movlw	10
  6173  0751  00F0               	movwf	___awdiv@divisor
  6174  0752  3000               	movlw	0
  6175  0753  00F1               	movwf	___awdiv@divisor+1
  6176  0754  0856               	movf	(efgtoa@e+1)^(0+128),w
  6177  0755  00F3               	movwf	___awdiv@dividend+1
  6178  0756  0855               	movf	efgtoa@e^(0+128),w
  6179  0757  00F2               	movwf	___awdiv@dividend
  6180  0758  3188  2006  3181   	fcall	___awdiv
  6181  075B  0871               	movf	?___awdiv+1,w
  6182  075C  0141               	movlb	1	; select bank1
  6183  075D  00D6               	movwf	(efgtoa@e+1)^(0+128)
  6184  075E  0870               	movf	?___awdiv,w
  6185  075F  00D5               	movwf	efgtoa@e^(0+128)
  6186                           
  6187                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 489:       
      +                                --p;
  6188  0760  30FF               	movlw	255
  6189  0761  07C1               	addwf	efgtoa@p^(0+128),f
  6190  0762  30FF               	movlw	255
  6191  0763  3DC2               	addwfc	(efgtoa@p+1)^(0+128),f
  6192                           
  6193                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 490:       
      +                                --w;
  6194  0764  30FF               	movlw	255
  6195  0765  07C4               	addwf	efgtoa@w^(0+128),f
  6196  0766  30FF               	movlw	255
  6197  0767  3DC5               	addwfc	(efgtoa@w+1)^(0+128),f
  6198  0768  2F31               	goto	l3715
  6199  0769                     l3717:	
  6200  0769  0842               	movf	(efgtoa@p+1)^(0+128),w
  6201  076A  3A80               	xorlw	128
  6202  076B  00A0               	movwf	??_efgtoa^(0+128)
  6203  076C  3080               	movlw	128
  6204  076D  0220               	subwf	??_efgtoa^(0+128),w
  6205  076E  1D03               	skipz
  6206  076F  2F72               	goto	u5325
  6207  0770  3001               	movlw	1
  6208  0771  0241               	subwf	efgtoa@p^(0+128),w
  6209  0772                     u5325:	
  6210  0772  1803               	skipnc
  6211  0773  2F35               	goto	l3705
  6212                           
  6213                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 492:       
      +                            --i;
  6214  0774  30FF               	movlw	255
  6215  0775  0141               	movlb	1	; select bank1
  6216  0776  07CF               	addwf	efgtoa@i^(0+128),f
  6217  0777  30FF               	movlw	255
  6218  0778  3DD0               	addwfc	(efgtoa@i+1)^(0+128),f
  6219                           
  6220                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 493:       
      +                            dbuf[i] = sign ? '-' : '+';
  6221  0779  083E               	movf	efgtoa@sign^(0+128),w
  6222  077A  043F               	iorwf	(efgtoa@sign+1)^(0+128),w
  6223  077B  1D03               	btfss	3,2
  6224  077C  2F7F               	goto	l3725
  6225  077D  302B               	movlw	43
  6226  077E  2F80               	goto	L5
  6227  077F                     l3725:	
  6228  077F  302D               	movlw	45
  6229  0780                     L5:	
  6230  0780  00AE               	movwf	_efgtoa$649^(0+128)
  6231  0781  3000               	movlw	0
  6232  0782  00AF               	movwf	(_efgtoa$649^(0+128)+1)
  6233  0783  082E               	movf	_efgtoa$649^(0+128),w
  6234  0784  00A0               	movwf	??_efgtoa^(0+128)
  6235  0785  084F               	movf	efgtoa@i^(0+128),w
  6236  0786  3E20               	addlw	(low (_dbuf| (0+512)))& (0+255)
  6237  0787  0086               	movwf	6
  6238  0788  3002               	movlw	2	; select bank4/5
  6239  0789  0087               	movwf	7
  6240  078A  0820               	movf	??_efgtoa^(0+128),w
  6241  078B  0081               	movwf	1
  6242                           
  6243                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 494:       
      +                            --w;
  6244  078C  30FF               	movlw	255
  6245  078D  07C4               	addwf	efgtoa@w^(0+128),f
  6246  078E  30FF               	movlw	255
  6247  078F  3DC5               	addwfc	(efgtoa@w+1)^(0+128),f
  6248                           
  6249                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 496:       
      +                            dbuf[i] = (0 ? isupper((int)c) : ((unsigned)((int)c)-'A') < 26) ? 'E' : 'e';
  6250  0790  30FF               	movlw	255
  6251  0791  07CF               	addwf	efgtoa@i^(0+128),f
  6252  0792  30FF               	movlw	255
  6253  0793  3DD0               	addwfc	(efgtoa@i+1)^(0+128),f
  6254  0794  0140               	movlb	0	; select bank0
  6255  0795  086C               	movf	efgtoa@c,w
  6256  0796  3EBF               	addlw	191
  6257  0797  0141               	movlb	1	; select bank1
  6258  0798  00A0               	movwf	??_efgtoa^(0+128)
  6259  0799  30FF               	movlw	255
  6260  079A  1803               	skipnc
  6261  079B  3000               	movlw	0
  6262  079C  00A1               	movwf	(??_efgtoa^(0+128)+1)
  6263  079D  3000               	movlw	0
  6264  079E  0221               	subwf	(??_efgtoa+1)^(0+128),w
  6265  079F  301A               	movlw	26
  6266  07A0  1903               	skipnz
  6267  07A1  0220               	subwf	??_efgtoa^(0+128),w
  6268  07A2  1803               	btfsc	3,0
  6269  07A3  2FA6               	goto	u5340
  6270  07A4  3001               	movlw	1
  6271  07A5  2FA7               	goto	u5350
  6272  07A6                     u5340:	
  6273  07A6  3000               	movlw	0
  6274  07A7                     u5350:	
  6275  07A7  00A2               	movwf	(??_efgtoa+2)^(0+128)
  6276  07A8  01A3               	clrf	((??_efgtoa+2)^(0+128)+1)
  6277  07A9  0822               	movf	(??_efgtoa+2)^(0+128),w
  6278  07AA  00B2               	movwf	_efgtoa$651^(0+128)
  6279  07AB  0823               	movf	(??_efgtoa+3)^(0+128),w
  6280  07AC  00B3               	movwf	(_efgtoa$651+1)^(0+128)
  6281  07AD  0832               	movf	_efgtoa$651^(0+128),w
  6282  07AE  0433               	iorwf	(_efgtoa$651+1)^(0+128),w
  6283  07AF  1D03               	btfss	3,2
  6284  07B0  2FB3               	goto	l3741
  6285  07B1  3065               	movlw	101
  6286  07B2  2FB4               	goto	L6
  6287  07B3                     l3741:	
  6288  07B3  3045               	movlw	69
  6289  07B4                     L6:	
  6290  07B4  00B0               	movwf	_efgtoa$650^(0+128)
  6291  07B5  3000               	movlw	0
  6292  07B6  00B1               	movwf	(_efgtoa$650^(0+128)+1)
  6293  07B7  0830               	movf	_efgtoa$650^(0+128),w
  6294  07B8  00A0               	movwf	??_efgtoa^(0+128)
  6295  07B9  084F               	movf	efgtoa@i^(0+128),w
  6296  07BA  3E20               	addlw	(low (_dbuf| (0+512)))& (0+255)
  6297  07BB  0086               	movwf	6
  6298  07BC  3002               	movlw	2	; select bank4/5
  6299  07BD  0087               	movwf	7
  6300  07BE  0820               	movf	??_efgtoa^(0+128),w
  6301  07BF  0081               	movwf	1
  6302                           
  6303                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 497:       
      +                            --w;
  6304  07C0  30FF               	movlw	255
  6305  07C1  07C4               	addwf	efgtoa@w^(0+128),f
  6306  07C2  30FF               	movlw	255
  6307  07C3  3DC5               	addwfc	(efgtoa@w+1)^(0+128),f
  6308                           
  6309                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 498:       
      +                            strcpy(&dbuf[n], &dbuf[i]);
  6310  07C4  084F               	movf	efgtoa@i^(0+128),w
  6311  07C5  3E20               	addlw	(low (_dbuf| (0+512)))& (0+255)
  6312  07C6  00F0               	movwf	strcpy@src
  6313  07C7  3002               	movlw	2
  6314  07C8  00F1               	movwf	strcpy@src+1
  6315  07C9  0857               	movf	efgtoa@n^(0+128),w
  6316  07CA  3E20               	addlw	(low (_dbuf| (0+512)))& (0+255)
  6317  07CB  319D  25A5  3181   	fcall	_strcpy
  6318  07CE                     l3749:	
  6319                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 499:     }
  6320                           
  6321                           
  6322                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 502:     re
      +                          turn pad(fp, &dbuf[0], w);
  6323  07CE  3020               	movlw	(low (_dbuf| (0+512)))& (0+255)
  6324  07CF  0141               	movlb	1	; select bank1
  6325  07D0  00A0               	movwf	??_efgtoa^(0+128)
  6326  07D1  0820               	movf	??_efgtoa^(0+128),w
  6327  07D2  0140               	movlb	0	; select bank0
  6328  07D3  00A4               	movwf	pad@buf
  6329  07D4  0141               	movlb	1	; select bank1
  6330  07D5  0845               	movf	(efgtoa@w+1)^(0+128),w
  6331  07D6  0140               	movlb	0	; select bank0
  6332  07D7  00A6               	movwf	pad@p+1
  6333  07D8  0141               	movlb	1	; select bank1
  6334  07D9  0844               	movf	efgtoa@w^(0+128),w
  6335  07DA  0140               	movlb	0	; select bank0
  6336  07DB  00A5               	movwf	pad@p
  6337  07DC  0141               	movlb	1	; select bank1
  6338  07DD  0840               	movf	efgtoa@fp^(0+128),w
  6339  07DE  319F  27B0         	fcall	_pad
  6340  07E0  0140               	movlb	0	; select bank0
  6341  07E1  0825               	movf	?_pad+1,w
  6342  07E2  00E9               	movwf	?_efgtoa+1
  6343  07E3  0824               	movf	?_pad,w
  6344  07E4  00E8               	movwf	?_efgtoa
  6345  07E5  0008               	return
  6346  07E6                     __end_of_efgtoa:	
  6347                           
  6348                           	psect	text6
  6349  1DC4                     __ptext6:	
  6350 ;; *************** function _tolower *****************
  6351 ;; Defined at:
  6352 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\tolower.c"
  6353 ;; Parameters:    Size  Location     Type
  6354 ;;  c               2    6[COMMON] int 
  6355 ;; Auto vars:     Size  Location     Type
  6356 ;;		None
  6357 ;; Return value:  Size  Location     Type
  6358 ;;                  2    6[COMMON] int 
  6359 ;; Registers used:
  6360 ;;		wreg, status,2, status,0, pclath, cstack
  6361 ;; Tracked objects:
  6362 ;;		On entry : 0/0
  6363 ;;		On exit  : 0/0
  6364 ;;		Unchanged: 0/0
  6365 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
  6366 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  6367 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  6368 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  6369 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  6370 ;;Total ram usage:        8 bytes
  6371 ;; Hardware stack levels used:    1
  6372 ;; Hardware stack levels required when called:    1
  6373 ;; This function calls:
  6374 ;;		_isupper
  6375 ;; This function is called by:
  6376 ;;		_efgtoa
  6377 ;;		_vfpfcnvrt
  6378 ;; This function uses a non-reentrant model
  6379 ;;
  6380                           
  6381                           
  6382                           ;psect for function _tolower
  6383  1DC4                     _tolower:	
  6384                           
  6385                           ;incstack = 0
  6386                           ; Regs used in _tolower: [wreg+status,2+status,0+pclath+cstack]
  6387  1DC4  0876               	movf	tolower@c,w
  6388  1DC5  3EBF               	addlw	191
  6389  1DC6  00F8               	movwf	??_tolower
  6390  1DC7  30FF               	movlw	255
  6391  1DC8  3D77               	addwfc	tolower@c+1,w
  6392  1DC9  00F9               	movwf	??_tolower+1
  6393  1DCA  3000               	movlw	0
  6394  1DCB  0279               	subwf	??_tolower+1,w
  6395  1DCC  301A               	movlw	26
  6396  1DCD  1903               	skipnz
  6397  1DCE  0278               	subwf	??_tolower,w
  6398  1DCF  1803               	btfsc	3,0
  6399  1DD0  2DD3               	goto	u3700
  6400  1DD1  3001               	movlw	1
  6401  1DD2  2DD4               	goto	u3710
  6402  1DD3                     u3700:	
  6403  1DD3  3000               	movlw	0
  6404  1DD4                     u3710:	
  6405  1DD4  00FA               	movwf	??_tolower+2
  6406  1DD5  01FB               	clrf	??_tolower+3
  6407  1DD6  087A               	movf	??_tolower+2,w
  6408  1DD7  00FC               	movwf	_tolower$1090
  6409  1DD8  087B               	movf	??_tolower+3,w
  6410  1DD9  00FD               	movwf	_tolower$1090+1
  6411  1DDA  087C               	movf	_tolower$1090,w
  6412  1DDB  047D               	iorwf	_tolower$1090+1,w
  6413  1DDC  1903               	btfsc	3,2
  6414  1DDD  0008               	return
  6415  1DDE  3020               	movlw	32
  6416  1DDF  0476               	iorwf	tolower@c,w
  6417  1DE0  00F6               	movwf	?_tolower
  6418  1DE1  3000               	movlw	0
  6419  1DE2  0477               	iorwf	tolower@c+1,w
  6420  1DE3  00F7               	movwf	?_tolower+1
  6421  1DE4  0008               	return
  6422  1DE5                     __end_of_tolower:	
  6423                           
  6424                           	psect	text7
  6425  1D34                     __ptext7:	
  6426 ;; *************** function _isupper *****************
  6427 ;; Defined at:
  6428 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\isupper.c"
  6429 ;; Parameters:    Size  Location     Type
  6430 ;;  c               2    0[COMMON] int 
  6431 ;; Auto vars:     Size  Location     Type
  6432 ;;		None
  6433 ;; Return value:  Size  Location     Type
  6434 ;;                  2    0[COMMON] int 
  6435 ;; Registers used:
  6436 ;;		wreg, status,2, status,0
  6437 ;; Tracked objects:
  6438 ;;		On entry : 0/0
  6439 ;;		On exit  : 0/0
  6440 ;;		Unchanged: 0/0
  6441 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
  6442 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  6443 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  6444 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  6445 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  6446 ;;Total ram usage:        6 bytes
  6447 ;; Hardware stack levels used:    1
  6448 ;; This function calls:
  6449 ;;		Nothing
  6450 ;; This function is called by:
  6451 ;;		_efgtoa
  6452 ;;		_vfpfcnvrt
  6453 ;;		_tolower
  6454 ;; This function uses a non-reentrant model
  6455 ;;
  6456                           
  6457                           
  6458                           ;psect for function _isupper
  6459  1D34                     _isupper:	
  6460                           
  6461                           ;incstack = 0
  6462                           ; Regs used in _isupper: [wreg+status,2+status,0]
  6463  1D34  0870               	movf	isupper@c,w
  6464  1D35  3EBF               	addlw	191
  6465  1D36  00F2               	movwf	??_isupper
  6466  1D37  30FF               	movlw	255
  6467  1D38  3D71               	addwfc	isupper@c+1,w
  6468  1D39  00F3               	movwf	??_isupper+1
  6469  1D3A  3000               	movlw	0
  6470  1D3B  0273               	subwf	??_isupper+1,w
  6471  1D3C  301A               	movlw	26
  6472  1D3D  1903               	skipnz
  6473  1D3E  0272               	subwf	??_isupper,w
  6474  1D3F  1803               	btfsc	3,0
  6475  1D40  2D43               	goto	u3090
  6476  1D41  3001               	movlw	1
  6477  1D42  2D44               	goto	u3100
  6478  1D43                     u3090:	
  6479  1D43  3000               	movlw	0
  6480  1D44                     u3100:	
  6481  1D44  00F4               	movwf	??_isupper+2
  6482  1D45  01F5               	clrf	??_isupper+3
  6483  1D46  0874               	movf	??_isupper+2,w
  6484  1D47  00F0               	movwf	?_isupper
  6485  1D48  0875               	movf	??_isupper+3,w
  6486  1D49  00F1               	movwf	?_isupper+1
  6487  1D4A  0008               	return
  6488  1D4B                     __end_of_isupper:	
  6489                           
  6490                           	psect	text8
  6491  1DA5                     __ptext8:	
  6492 ;; *************** function _strcpy *****************
  6493 ;; Defined at:
  6494 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\strcpy.c"
  6495 ;; Parameters:    Size  Location     Type
  6496 ;;  dest            1    wreg     PTR unsigned char 
  6497 ;;		 -> dbuf(80), 
  6498 ;;  src             2    0[COMMON] PTR const unsigned char 
  6499 ;;		 -> STR_8(4), STR_7(4), STR_4(4), STR_3(4), 
  6500 ;;		 -> dbuf(80), 
  6501 ;; Auto vars:     Size  Location     Type
  6502 ;;  dest            1    7[COMMON] PTR unsigned char 
  6503 ;;		 -> dbuf(80), 
  6504 ;;  s               2    4[COMMON] PTR const unsigned char 
  6505 ;;		 -> STR_8(4), STR_7(4), STR_4(4), STR_3(4), 
  6506 ;;		 -> dbuf(80), 
  6507 ;;  d               1    6[COMMON] PTR unsigned char 
  6508 ;;		 -> dbuf(80), 
  6509 ;; Return value:  Size  Location     Type
  6510 ;;                  1    wreg      PTR unsigned char 
  6511 ;; Registers used:
  6512 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath
  6513 ;; Tracked objects:
  6514 ;;		On entry : 0/0
  6515 ;;		On exit  : 0/0
  6516 ;;		Unchanged: 0/0
  6517 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
  6518 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  6519 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  6520 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  6521 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  6522 ;;Total ram usage:        8 bytes
  6523 ;; Hardware stack levels used:    1
  6524 ;; This function calls:
  6525 ;;		Nothing
  6526 ;; This function is called by:
  6527 ;;		_efgtoa
  6528 ;; This function uses a non-reentrant model
  6529 ;;
  6530                           
  6531                           
  6532                           ;psect for function _strcpy
  6533  1DA5                     _strcpy:	
  6534                           
  6535                           ;incstack = 0
  6536                           ; Regs used in _strcpy: [wreg-fsr1h+status,2+status,0+pclath]
  6537                           ;strcpy@dest stored from wreg
  6538  1DA5  00F7               	movwf	strcpy@dest
  6539  1DA6  0871               	movf	strcpy@src+1,w
  6540  1DA7  00F5               	movwf	strcpy@s+1
  6541  1DA8  0870               	movf	strcpy@src,w
  6542  1DA9  00F4               	movwf	strcpy@s
  6543  1DAA  0877               	movf	strcpy@dest,w
  6544  1DAB  00F2               	movwf	??_strcpy
  6545  1DAC  0872               	movf	??_strcpy,w
  6546  1DAD  00F6               	movwf	strcpy@d
  6547  1DAE                     l2939:	
  6548  1DAE  0876               	movf	strcpy@d,w
  6549  1DAF  0086               	movwf	6
  6550  1DB0  3002               	movlw	2	; select bank4/5
  6551  1DB1  0087               	movwf	7
  6552  1DB2  0AF6               	incf	strcpy@d,f
  6553  1DB3  0875               	movf	strcpy@s+1,w
  6554  1DB4  00F3               	movwf	??_strcpy+1
  6555  1DB5  0874               	movf	strcpy@s,w
  6556  1DB6  00F2               	movwf	??_strcpy
  6557  1DB7  0AF4               	incf	strcpy@s,f
  6558  1DB8  1903               	skipnz
  6559  1DB9  0AF5               	incf	strcpy@s+1,f
  6560  1DBA  0872               	movf	??_strcpy,w
  6561  1DBB  0084               	movwf	4
  6562  1DBC  0873               	movf	??_strcpy+1,w
  6563  1DBD  0085               	movwf	5
  6564  1DBE  0800               	movf	0,w	;code access
  6565  1DBF  3FC0               	movwi [0]fsr1
  6566  1DC0  0889               	movf	9,f
  6567  1DC1  1903               	btfsc	3,2
  6568  1DC2  0008               	return
  6569  1DC3  2DAE               	goto	l2939
  6570  1DC4                     __end_of_strcpy:	
  6571                           ;	Return value of _strcpy is never used
  6572                           
  6573                           
  6574                           	psect	text9
  6575  1FB0                     __ptext9:	
  6576 ;; *************** function _pad *****************
  6577 ;; Defined at:
  6578 ;;		line 72 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c"
  6579 ;; Parameters:    Size  Location     Type
  6580 ;;  fp              1    wreg     PTR struct _IO_FILE
  6581 ;;		 -> sprintf@f(5), 
  6582 ;;  buf             1    4[BANK0 ] PTR unsigned char 
  6583 ;;		 -> dbuf(80), 
  6584 ;;  p               2    5[BANK0 ] int 
  6585 ;; Auto vars:     Size  Location     Type
  6586 ;;  fp              1   11[BANK0 ] PTR struct _IO_FILE
  6587 ;;		 -> sprintf@f(5), 
  6588 ;;  w               2    9[BANK0 ] int 
  6589 ;;  i               2    7[BANK0 ] int 
  6590 ;; Return value:  Size  Location     Type
  6591 ;;                  2    4[BANK0 ] int 
  6592 ;; Registers used:
  6593 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6594 ;; Tracked objects:
  6595 ;;		On entry : 0/0
  6596 ;;		On exit  : 0/0
  6597 ;;		Unchanged: 0/0
  6598 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
  6599 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  6600 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  6601 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  6602 ;;      Totals:         1       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  6603 ;;Total ram usage:        9 bytes
  6604 ;; Hardware stack levels used:    1
  6605 ;; Hardware stack levels required when called:    3
  6606 ;; This function calls:
  6607 ;;		_fputc
  6608 ;;		_fputs
  6609 ;;		_strlen
  6610 ;; This function is called by:
  6611 ;;		_efgtoa
  6612 ;; This function uses a non-reentrant model
  6613 ;;
  6614                           
  6615                           
  6616                           ;psect for function _pad
  6617  1FB0                     _pad:	
  6618                           
  6619                           ;incstack = 0
  6620                           ; Regs used in _pad: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  6621                           ;pad@fp stored from wreg
  6622  1FB0  0140               	movlb	0	; select bank0
  6623  1FB1  00AB               	movwf	pad@fp
  6624                           
  6625                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 72: static 
      +                          int pad(FILE *fp, char *buf, int p);C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sourc
      +                          es\c99\common\doprnt.c: 73: {;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99
      +                          \common\doprnt.c: 74:     int i, w;;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sourc
      +                          es\c99\common\doprnt.c: 77:     if (flags & (1 << 0)) {
  6626  1FB2  0141               	movlb	1	; select bank1
  6627  1FB3  1C6E               	btfss	_flags^(0+128),0
  6628  1FB4  2FBE               	goto	l2895
  6629                           
  6630                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 78:        
      +                           fputs((const char *)buf, fp);
  6631  1FB5  0140               	movlb	0	; select bank0
  6632  1FB6  082B               	movf	pad@fp,w
  6633  1FB7  00FC               	movwf	??_pad
  6634  1FB8  087C               	movf	??_pad,w
  6635  1FB9  00F8               	movwf	fputs@fp
  6636  1FBA  0824               	movf	pad@buf,w
  6637  1FBB  319E  260A  319F   	fcall	_fputs
  6638  1FBE                     l2895:	
  6639                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 79:     }
  6640                           
  6641                           
  6642                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 82:     w =
      +                           (p < 0) ? 0 : p;
  6643  1FBE  0140               	movlb	0	; select bank0
  6644  1FBF  1BA6               	btfsc	pad@p+1,7
  6645  1FC0  2FC6               	goto	l2899
  6646  1FC1  0826               	movf	pad@p+1,w
  6647  1FC2  00AA               	movwf	pad@w+1
  6648  1FC3  0825               	movf	pad@p,w
  6649  1FC4  00A9               	movwf	pad@w
  6650  1FC5  2FC8               	goto	l220
  6651  1FC6                     l2899:	
  6652  1FC6  01A9               	clrf	pad@w
  6653  1FC7  01AA               	clrf	pad@w+1
  6654  1FC8                     l220:	
  6655                           
  6656                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 83:     i =
      +                           0;
  6657  1FC8  01A7               	clrf	pad@i
  6658  1FC9  01A8               	clrf	pad@i+1
  6659  1FCA                     l2905:	
  6660                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 87:     }
  6661                           
  6662                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 84:     whi
      +                          le (i < w) {
  6663                           
  6664                           
  6665                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 84:     whi
      +                          le (i < w) {
  6666  1FCA  0828               	movf	pad@i+1,w
  6667  1FCB  3A80               	xorlw	128
  6668  1FCC  00FC               	movwf	??_pad
  6669  1FCD  082A               	movf	pad@w+1,w
  6670  1FCE  3A80               	xorlw	128
  6671  1FCF  027C               	subwf	??_pad,w
  6672  1FD0  1D03               	skipz
  6673  1FD1  2FD4               	goto	u3595
  6674  1FD2  0829               	movf	pad@w,w
  6675  1FD3  0227               	subwf	pad@i,w
  6676  1FD4                     u3595:	
  6677  1FD4  1803               	btfsc	3,0
  6678  1FD5  2FE8               	goto	l223
  6679                           
  6680                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 85:        
      +                           fputc(' ', fp);
  6681  1FD6  3020               	movlw	32
  6682  1FD7  00F0               	movwf	fputc@c
  6683  1FD8  3000               	movlw	0
  6684  1FD9  00F1               	movwf	fputc@c+1
  6685  1FDA  0140               	movlb	0	; select bank0
  6686  1FDB  082B               	movf	pad@fp,w
  6687  1FDC  00FC               	movwf	??_pad
  6688  1FDD  087C               	movf	??_pad,w
  6689  1FDE  00F2               	movwf	fputc@fp
  6690  1FDF  319F  2764  319F   	fcall	_fputc
  6691                           
  6692                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 86:        
      +                           ++i;
  6693  1FE2  3001               	movlw	1
  6694  1FE3  0140               	movlb	0	; select bank0
  6695  1FE4  07A7               	addwf	pad@i,f
  6696  1FE5  3000               	movlw	0
  6697  1FE6  3DA8               	addwfc	pad@i+1,f
  6698  1FE7  2FCA               	goto	l2905
  6699  1FE8                     l223:	
  6700                           
  6701                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 90:     if 
      +                          (!(flags & (1 << 0))) {
  6702  1FE8  0141               	movlb	1	; select bank1
  6703  1FE9  186E               	btfsc	_flags^(0+128),0
  6704  1FEA  2FF4               	goto	l2909
  6705                           
  6706                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 91:        
      +                           fputs((const char *)buf, fp);
  6707  1FEB  0140               	movlb	0	; select bank0
  6708  1FEC  082B               	movf	pad@fp,w
  6709  1FED  00FC               	movwf	??_pad
  6710  1FEE  087C               	movf	??_pad,w
  6711  1FEF  00F8               	movwf	fputs@fp
  6712  1FF0  0824               	movf	pad@buf,w
  6713  1FF1  319E  260A  319F   	fcall	_fputs
  6714  1FF4                     l2909:	
  6715                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 92:     }
  6716                           
  6717                           
  6718                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 94:     ret
      +                          urn strlen(buf) + w;
  6719  1FF4  0140               	movlb	0	; select bank0
  6720  1FF5  0824               	movf	pad@buf,w
  6721  1FF6  319D  25E5         	fcall	_strlen
  6722  1FF8  0140               	movlb	0	; select bank0
  6723  1FF9  0829               	movf	pad@w,w
  6724  1FFA  0770               	addwf	?_strlen,w
  6725  1FFB  00A4               	movwf	?_pad
  6726  1FFC  082A               	movf	pad@w+1,w
  6727  1FFD  3D71               	addwfc	?_strlen+1,w
  6728  1FFE  00A5               	movwf	?_pad+1
  6729  1FFF  0008               	return
  6730  2000                     __end_of_pad:	
  6731                           
  6732                           	psect	text10
  6733  1DE5                     __ptext10:	
  6734 ;; *************** function _strlen *****************
  6735 ;; Defined at:
  6736 ;;		line 12 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\strlen.c"
  6737 ;; Parameters:    Size  Location     Type
  6738 ;;  s               1    wreg     PTR const unsigned char 
  6739 ;;		 -> dbuf(80), 
  6740 ;; Auto vars:     Size  Location     Type
  6741 ;;  s               1    7[COMMON] PTR const unsigned char 
  6742 ;;		 -> dbuf(80), 
  6743 ;;  a               1    6[COMMON] PTR const unsigned char 
  6744 ;;		 -> dbuf(80), 
  6745 ;; Return value:  Size  Location     Type
  6746 ;;                  2    0[COMMON] unsigned int 
  6747 ;; Registers used:
  6748 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  6749 ;; Tracked objects:
  6750 ;;		On entry : 0/0
  6751 ;;		On exit  : 0/0
  6752 ;;		Unchanged: 0/0
  6753 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
  6754 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  6755 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  6756 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  6757 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  6758 ;;Total ram usage:        8 bytes
  6759 ;; Hardware stack levels used:    1
  6760 ;; This function calls:
  6761 ;;		Nothing
  6762 ;; This function is called by:
  6763 ;;		_pad
  6764 ;; This function uses a non-reentrant model
  6765 ;;
  6766                           
  6767                           
  6768                           ;psect for function _strlen
  6769  1DE5                     _strlen:	
  6770                           
  6771                           ;incstack = 0
  6772                           ; Regs used in _strlen: [wreg+fsr1l+fsr1h+status,2+status,0]
  6773                           ;strlen@s stored from wreg
  6774  1DE5  00F7               	movwf	strlen@s
  6775  1DE6  0877               	movf	strlen@s,w
  6776  1DE7  00F2               	movwf	??_strlen
  6777  1DE8  0872               	movf	??_strlen,w
  6778  1DE9  00F6               	movwf	strlen@a
  6779  1DEA                     l2673:	
  6780  1DEA  0877               	movf	strlen@s,w
  6781  1DEB  0086               	movwf	6
  6782  1DEC  3002               	movlw	2	; select bank4/5
  6783  1DED  0087               	movwf	7
  6784  1DEE  0801               	movf	1,w
  6785  1DEF  1903               	btfsc	3,2
  6786  1DF0  2DF6               	goto	l2675
  6787  1DF1  3001               	movlw	1
  6788  1DF2  00F2               	movwf	??_strlen
  6789  1DF3  0872               	movf	??_strlen,w
  6790  1DF4  07F7               	addwf	strlen@s,f
  6791  1DF5  2DEA               	goto	l2673
  6792  1DF6                     l2675:	
  6793  1DF6  0876               	movf	strlen@a,w
  6794  1DF7  00F2               	movwf	??_strlen
  6795  1DF8  3002               	movlw	2
  6796  1DF9  00F3               	movwf	??_strlen+1
  6797  1DFA  09F2               	comf	??_strlen,f
  6798  1DFB  09F3               	comf	??_strlen+1,f
  6799  1DFC  0AF2               	incf	??_strlen,f
  6800  1DFD  1903               	skipnz
  6801  1DFE  0AF3               	incf	??_strlen+1,f
  6802  1DFF  0877               	movf	strlen@s,w
  6803  1E00  00F4               	movwf	??_strlen+2
  6804  1E01  3002               	movlw	2
  6805  1E02  00F5               	movwf	??_strlen+3
  6806  1E03  0872               	movf	??_strlen,w
  6807  1E04  0774               	addwf	??_strlen+2,w
  6808  1E05  00F0               	movwf	?_strlen
  6809  1E06  0873               	movf	??_strlen+1,w
  6810  1E07  3D75               	addwfc	??_strlen+3,w
  6811  1E08  00F1               	movwf	?_strlen+1
  6812  1E09  0008               	return
  6813  1E0A                     __end_of_strlen:	
  6814                           
  6815                           	psect	text11
  6816  1E0A                     __ptext11:	
  6817 ;; *************** function _fputs *****************
  6818 ;; Defined at:
  6819 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\nf_fputs.c"
  6820 ;; Parameters:    Size  Location     Type
  6821 ;;  s               1    wreg     PTR const unsigned char 
  6822 ;;		 -> dbuf(80), 
  6823 ;;  fp              1    8[COMMON] PTR struct _IO_FILE
  6824 ;;		 -> sprintf@f(5), 
  6825 ;; Auto vars:     Size  Location     Type
  6826 ;;  s               1    3[BANK0 ] PTR const unsigned char 
  6827 ;;		 -> dbuf(80), 
  6828 ;;  i               2    1[BANK0 ] int 
  6829 ;;  c               1    0[BANK0 ] unsigned char 
  6830 ;; Return value:  Size  Location     Type
  6831 ;;                  2    8[COMMON] int 
  6832 ;; Registers used:
  6833 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6834 ;; Tracked objects:
  6835 ;;		On entry : 0/0
  6836 ;;		On exit  : 0/0
  6837 ;;		Unchanged: 0/0
  6838 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
  6839 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  6840 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  6841 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  6842 ;;      Totals:         4       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  6843 ;;Total ram usage:        8 bytes
  6844 ;; Hardware stack levels used:    1
  6845 ;; Hardware stack levels required when called:    2
  6846 ;; This function calls:
  6847 ;;		_fputc
  6848 ;; This function is called by:
  6849 ;;		_pad
  6850 ;; This function uses a non-reentrant model
  6851 ;;
  6852                           
  6853                           
  6854                           ;psect for function _fputs
  6855  1E0A                     _fputs:	
  6856                           
  6857                           ;incstack = 0
  6858                           ; Regs used in _fputs: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  6859                           ;fputs@s stored from wreg
  6860  1E0A  0140               	movlb	0	; select bank0
  6861  1E0B  00A3               	movwf	fputs@s
  6862  1E0C  01A1               	clrf	fputs@i
  6863  1E0D  01A2               	clrf	fputs@i+1
  6864  1E0E                     l2667:	
  6865  1E0E  0821               	movf	fputs@i,w
  6866  1E0F  0723               	addwf	fputs@s,w
  6867  1E10  00F9               	movwf	??_fputs
  6868  1E11  0879               	movf	??_fputs,w
  6869  1E12  0086               	movwf	6
  6870  1E13  3002               	movlw	2	; select bank4/5
  6871  1E14  0087               	movwf	7
  6872  1E15  0801               	movf	1,w
  6873  1E16  00FA               	movwf	??_fputs+1
  6874  1E17  087A               	movf	??_fputs+1,w
  6875  1E18  00A0               	movwf	fputs@c
  6876  1E19  0820               	movf	fputs@c,w
  6877  1E1A  1903               	btfsc	3,2
  6878  1E1B  0008               	return
  6879  1E1C  0820               	movf	fputs@c,w
  6880  1E1D  00F9               	movwf	??_fputs
  6881  1E1E  01FA               	clrf	??_fputs+1
  6882  1E1F  0879               	movf	??_fputs,w
  6883  1E20  00F0               	movwf	fputc@c
  6884  1E21  087A               	movf	??_fputs+1,w
  6885  1E22  00F1               	movwf	fputc@c+1
  6886  1E23  0878               	movf	fputs@fp,w
  6887  1E24  00FB               	movwf	??_fputs+2
  6888  1E25  087B               	movf	??_fputs+2,w
  6889  1E26  00F2               	movwf	fputc@fp
  6890  1E27  319F  2764  319E   	fcall	_fputc
  6891  1E2A  3001               	movlw	1
  6892  1E2B  0140               	movlb	0	; select bank0
  6893  1E2C  07A1               	addwf	fputs@i,f
  6894  1E2D  3000               	movlw	0
  6895  1E2E  3DA2               	addwfc	fputs@i+1,f
  6896  1E2F  2E0E               	goto	l2667
  6897  1E30                     __end_of_fputs:	
  6898                           ;	Return value of _fputs is never used
  6899                           
  6900                           
  6901                           	psect	text12
  6902  1F64                     __ptext12:	
  6903 ;; *************** function _fputc *****************
  6904 ;; Defined at:
  6905 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\nf_fputc.c"
  6906 ;; Parameters:    Size  Location     Type
  6907 ;;  c               2    0[COMMON] int 
  6908 ;;  fp              1    2[COMMON] PTR struct _IO_FILE
  6909 ;;		 -> sprintf@f(5), 
  6910 ;; Auto vars:     Size  Location     Type
  6911 ;;		None
  6912 ;; Return value:  Size  Location     Type
  6913 ;;                  2    0[COMMON] int 
  6914 ;; Registers used:
  6915 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6916 ;; Tracked objects:
  6917 ;;		On entry : 0/0
  6918 ;;		On exit  : 0/0
  6919 ;;		Unchanged: 0/0
  6920 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
  6921 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  6922 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  6923 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  6924 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  6925 ;;Total ram usage:        8 bytes
  6926 ;; Hardware stack levels used:    1
  6927 ;; Hardware stack levels required when called:    1
  6928 ;; This function calls:
  6929 ;;		_putch
  6930 ;; This function is called by:
  6931 ;;		_pad
  6932 ;;		_vfpfcnvrt
  6933 ;;		_fputs
  6934 ;; This function uses a non-reentrant model
  6935 ;;
  6936                           
  6937                           
  6938                           ;psect for function _fputc
  6939  1F64                     _fputc:	
  6940                           
  6941                           ;incstack = 0
  6942                           ; Regs used in _fputc: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  6943  1F64  0872               	movf	fputc@fp,w
  6944  1F65  1D03               	btfss	3,2
  6945  1F66  0872               	movf	fputc@fp,w
  6946  1F67  1D03               	btfss	3,2
  6947  1F68  2F6D               	goto	l2651
  6948  1F69  0870               	movf	fputc@c,w
  6949  1F6A  3180  2004         	fcall	_putch
  6950  1F6C  0008               	return
  6951  1F6D                     l2651:	
  6952  1F6D  0872               	movf	fputc@fp,w
  6953  1F6E  3E03               	addlw	3
  6954  1F6F  0086               	movwf	6
  6955  1F70  3001               	movlw	1	; select bank2/3
  6956  1F71  0087               	movwf	7
  6957  1F72  0016               	moviw fsr1++
  6958  1F73  0401               	iorwf	1,w
  6959  1F74  1903               	btfsc	3,2
  6960  1F75  2F93               	goto	l2655
  6961  1F76  0872               	movf	fputc@fp,w
  6962  1F77  3E03               	addlw	3
  6963  1F78  0086               	movwf	6
  6964  1F79  3001               	movlw	1	; select bank2/3
  6965  1F7A  0087               	movwf	7
  6966  1F7B  3F40               	moviw [0]fsr1
  6967  1F7C  00F3               	movwf	??_fputc
  6968  1F7D  3F41               	moviw [1]fsr1
  6969  1F7E  00F4               	movwf	??_fputc+1
  6970  1F7F  0A72               	incf	fputc@fp,w
  6971  1F80  0086               	movwf	6
  6972  1F81  3001               	movlw	1	; select bank2/3
  6973  1F82  0087               	movwf	7
  6974  1F83  3F40               	moviw [0]fsr1
  6975  1F84  00F5               	movwf	??_fputc+2
  6976  1F85  3F41               	moviw [1]fsr1
  6977  1F86  00F6               	movwf	??_fputc+3
  6978  1F87  0876               	movf	??_fputc+3,w
  6979  1F88  3A80               	xorlw	128
  6980  1F89  00F7               	movwf	??_fputc+4
  6981  1F8A  0874               	movf	??_fputc+1,w
  6982  1F8B  3A80               	xorlw	128
  6983  1F8C  0277               	subwf	??_fputc+4,w
  6984  1F8D  1D03               	skipz
  6985  1F8E  2F91               	goto	u3065
  6986  1F8F  0873               	movf	??_fputc,w
  6987  1F90  0275               	subwf	??_fputc+2,w
  6988  1F91                     u3065:	
  6989  1F91  1803               	skipnc
  6990  1F92  0008               	return
  6991  1F93                     l2655:	
  6992  1F93  0870               	movf	fputc@c,w
  6993  1F94  00F3               	movwf	??_fputc
  6994  1F95  0872               	movf	fputc@fp,w
  6995  1F96  0086               	movwf	6
  6996  1F97  3001               	movlw	1	; select bank2/3
  6997  1F98  0087               	movwf	7
  6998  1F99  0A72               	incf	fputc@fp,w
  6999  1F9A  0084               	movwf	4
  7000  1F9B  3001               	movlw	1	; select bank2/3
  7001  1F9C  0085               	movwf	5
  7002  1F9D  0800               	movf	0,w
  7003  1F9E  0701               	addwf	1,w
  7004  1F9F  00F4               	movwf	??_fputc+1
  7005  1FA0  0874               	movf	??_fputc+1,w
  7006  1FA1  0086               	movwf	6
  7007  1FA2  3001               	movlw	1	; select bank2/3
  7008  1FA3  0087               	movwf	7
  7009  1FA4  0873               	movf	??_fputc,w
  7010  1FA5  0081               	movwf	1
  7011  1FA6  0A72               	incf	fputc@fp,w
  7012  1FA7  0086               	movwf	6
  7013  1FA8  3001               	movlw	1	; select bank2/3
  7014  1FA9  0087               	movwf	7
  7015  1FAA  3001               	movlw	1
  7016  1FAB  0781               	addwf	1,f
  7017  1FAC  3141               	addfsr 1,1
  7018  1FAD  1803               	skipnc
  7019  1FAE  0A81               	incf	1,f
  7020  1FAF  0008               	return
  7021  1FB0                     __end_of_fputc:	
  7022                           ;	Return value of _fputc is never used
  7023                           
  7024                           
  7025                           	psect	text13
  7026  0004                     __ptext13:	
  7027 ;; *************** function _putch *****************
  7028 ;; Defined at:
  7029 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\putch.c"
  7030 ;; Parameters:    Size  Location     Type
  7031 ;;  c               1    wreg     unsigned char 
  7032 ;; Auto vars:     Size  Location     Type
  7033 ;;  c               1    0[COMMON] unsigned char 
  7034 ;; Return value:  Size  Location     Type
  7035 ;;                  1    wreg      void 
  7036 ;; Registers used:
  7037 ;;		wreg
  7038 ;; Tracked objects:
  7039 ;;		On entry : 0/0
  7040 ;;		On exit  : 0/0
  7041 ;;		Unchanged: 0/0
  7042 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
  7043 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  7044 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  7045 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  7046 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  7047 ;;Total ram usage:        0 bytes
  7048 ;; Hardware stack levels used:    1
  7049 ;; This function calls:
  7050 ;;		Nothing
  7051 ;; This function is called by:
  7052 ;;		_fputc
  7053 ;; This function uses a non-reentrant model
  7054 ;;
  7055                           
  7056                           
  7057                           ;psect for function _putch
  7058  0004                     _putch:	
  7059                           
  7060                           ;incstack = 0
  7061                           ; Regs used in _putch: [wreg]
  7062  0004  0008               	return
  7063  0005                     __end_of_putch:	
  7064                           
  7065                           	psect	text14
  7066  00B4                     __ptext14:	
  7067 ;; *************** function _floorf *****************
  7068 ;; Defined at:
  7069 ;;		line 3 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\floorf.c"
  7070 ;; Parameters:    Size  Location     Type
  7071 ;;  x               4   52[BANK0 ] float 
  7072 ;; Auto vars:     Size  Location     Type
  7073 ;;  u               4   68[BANK0 ] struct .
  7074 ;;  m               4   62[BANK0 ] unsigned long 
  7075 ;;  e               2   66[BANK0 ] int 
  7076 ;; Return value:  Size  Location     Type
  7077 ;;                  4   52[BANK0 ] float 
  7078 ;; Registers used:
  7079 ;;		wreg, status,2, status,0
  7080 ;; Tracked objects:
  7081 ;;		On entry : 0/0
  7082 ;;		On exit  : 0/0
  7083 ;;		Unchanged: 0/0
  7084 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
  7085 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  7086 ;;      Locals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  7087 ;;      Temps:          0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  7088 ;;      Totals:         0      20       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  7089 ;;Total ram usage:       20 bytes
  7090 ;; Hardware stack levels used:    1
  7091 ;; This function calls:
  7092 ;;		Nothing
  7093 ;; This function is called by:
  7094 ;;		_efgtoa
  7095 ;; This function uses a non-reentrant model
  7096 ;;
  7097                           
  7098                           
  7099                           ;psect for function _floorf
  7100  00B4                     _floorf:	
  7101                           
  7102                           ;incstack = 0
  7103                           ; Regs used in _floorf: [wreg+status,2+status,0]
  7104  00B4  0143               	movlb	3	; select bank3
  7105  00B5  0823               	movf	(floorf@F514+3)^(0+384),w
  7106  00B6  0140               	movlb	0	; select bank0
  7107  00B7  00E7               	movwf	floorf@u+3
  7108  00B8  0143               	movlb	3	; select bank3
  7109  00B9  0822               	movf	(floorf@F514+2)^(0+384),w
  7110  00BA  0140               	movlb	0	; select bank0
  7111  00BB  00E6               	movwf	floorf@u+2
  7112  00BC  0143               	movlb	3	; select bank3
  7113  00BD  0821               	movf	(floorf@F514+1)^(0+384),w
  7114  00BE  0140               	movlb	0	; select bank0
  7115  00BF  00E5               	movwf	floorf@u+1
  7116  00C0  0143               	movlb	3	; select bank3
  7117  00C1  0820               	movf	floorf@F514^(0+384),w
  7118  00C2  0140               	movlb	0	; select bank0
  7119  00C3  00E4               	movwf	floorf@u
  7120  00C4  0857               	movf	floorf@x+3,w
  7121  00C5  00E7               	movwf	floorf@u+3
  7122  00C6  0856               	movf	floorf@x+2,w
  7123  00C7  00E6               	movwf	floorf@u+2
  7124  00C8  0855               	movf	floorf@x+1,w
  7125  00C9  00E5               	movwf	floorf@u+1
  7126  00CA  0854               	movf	floorf@x,w
  7127  00CB  00E4               	movwf	floorf@u
  7128  00CC  0864               	movf	floorf@u,w
  7129  00CD  00D8               	movwf	??_floorf
  7130  00CE  0865               	movf	floorf@u+1,w
  7131  00CF  00D9               	movwf	??_floorf+1
  7132  00D0  0866               	movf	floorf@u+2,w
  7133  00D1  00DA               	movwf	??_floorf+2
  7134  00D2  0867               	movf	floorf@u+3,w
  7135  00D3  00DB               	movwf	??_floorf+3
  7136  00D4  3017               	movlw	23
  7137  00D5                     u3735:	
  7138  00D5  36DB               	lsrf	??_floorf+3,f
  7139  00D6  0CDA               	rrf	??_floorf+2,f
  7140  00D7  0CD9               	rrf	??_floorf+1,f
  7141  00D8  0CD8               	rrf	??_floorf,f
  7142  00D9  0B89               	decfsz	9,f
  7143  00DA  28D5               	goto	u3735
  7144  00DB  30FF               	movlw	255
  7145  00DC  0558               	andwf	??_floorf,w
  7146  00DD  00DC               	movwf	??_floorf+4
  7147  00DE  3000               	movlw	0
  7148  00DF  0559               	andwf	??_floorf+1,w
  7149  00E0  00DD               	movwf	??_floorf+5
  7150  00E1  085C               	movf	??_floorf+4,w
  7151  00E2  3E81               	addlw	129
  7152  00E3  00E2               	movwf	floorf@e
  7153  00E4  30FF               	movlw	255
  7154  00E5  3D5D               	addwfc	??_floorf+5,w
  7155  00E6  00E3               	movwf	floorf@e+1
  7156  00E7  0863               	movf	floorf@e+1,w
  7157  00E8  3A80               	xorlw	128
  7158  00E9  00D8               	movwf	??_floorf
  7159  00EA  3080               	movlw	128
  7160  00EB  0258               	subwf	??_floorf,w
  7161  00EC  1D03               	skipz
  7162  00ED  28F0               	goto	u3745
  7163  00EE  3017               	movlw	23
  7164  00EF  0262               	subwf	floorf@e,w
  7165  00F0                     u3745:	
  7166  00F0  1803               	btfsc	3,0
  7167  00F1  0008               	return
  7168  00F2  0140               	movlb	0	; select bank0
  7169  00F3  1BE3               	btfsc	floorf@e+1,7
  7170  00F4  294D               	goto	l2971
  7171  00F5  30FF               	movlw	255
  7172  00F6  00D8               	movwf	??_floorf
  7173  00F7  30FF               	movlw	255
  7174  00F8  00D9               	movwf	??_floorf+1
  7175  00F9  307F               	movlw	127
  7176  00FA  00DA               	movwf	??_floorf+2
  7177  00FB  3000               	movlw	0
  7178  00FC  00DB               	movwf	??_floorf+3
  7179  00FD  0A62               	incf	floorf@e,w
  7180  00FE  2903               	goto	u3760
  7181  00FF                     u3765:	
  7182  00FF  37DB               	asrf	??_floorf+3,f
  7183  0100  0CDA               	rrf	??_floorf+2,f
  7184  0101  0CD9               	rrf	??_floorf+1,f
  7185  0102  0CD8               	rrf	??_floorf,f
  7186  0103                     u3760:	
  7187  0103  0B89               	decfsz	9,f
  7188  0104  28FF               	goto	u3765
  7189  0105  085B               	movf	??_floorf+3,w
  7190  0106  00E1               	movwf	floorf@m+3
  7191  0107  085A               	movf	??_floorf+2,w
  7192  0108  00E0               	movwf	floorf@m+2
  7193  0109  0859               	movf	??_floorf+1,w
  7194  010A  00DF               	movwf	floorf@m+1
  7195  010B  0858               	movf	??_floorf,w
  7196  010C  00DE               	movwf	floorf@m
  7197  010D  0864               	movf	floorf@u,w
  7198  010E  055E               	andwf	floorf@m,w
  7199  010F  00D8               	movwf	??_floorf
  7200  0110  0865               	movf	floorf@u+1,w
  7201  0111  055F               	andwf	floorf@m+1,w
  7202  0112  00D9               	movwf	??_floorf+1
  7203  0113  0866               	movf	floorf@u+2,w
  7204  0114  0560               	andwf	floorf@m+2,w
  7205  0115  00DA               	movwf	??_floorf+2
  7206  0116  0867               	movf	floorf@u+3,w
  7207  0117  0561               	andwf	floorf@m+3,w
  7208  0118  00DB               	movwf	??_floorf+3
  7209  0119  085B               	movf	??_floorf+3,w
  7210  011A  045A               	iorwf	??_floorf+2,w
  7211  011B  0459               	iorwf	??_floorf+1,w
  7212  011C  0458               	iorwf	??_floorf,w
  7213  011D  1903               	btfsc	3,2
  7214  011E  0008               	return
  7215  011F  0864               	movf	floorf@u,w
  7216  0120  00D8               	movwf	??_floorf
  7217  0121  0865               	movf	floorf@u+1,w
  7218  0122  00D9               	movwf	??_floorf+1
  7219  0123  0866               	movf	floorf@u+2,w
  7220  0124  00DA               	movwf	??_floorf+2
  7221  0125  0867               	movf	floorf@u+3,w
  7222  0126  00DB               	movwf	??_floorf+3
  7223  0127  301F               	movlw	31
  7224  0128                     u3785:	
  7225  0128  36DB               	lsrf	??_floorf+3,f
  7226  0129  0CDA               	rrf	??_floorf+2,f
  7227  012A  0CD9               	rrf	??_floorf+1,f
  7228  012B  0CD8               	rrf	??_floorf,f
  7229  012C  0B89               	decfsz	9,f
  7230  012D  2928               	goto	u3785
  7231  012E  085B               	movf	??_floorf+3,w
  7232  012F  045A               	iorwf	??_floorf+2,w
  7233  0130  0459               	iorwf	??_floorf+1,w
  7234  0131  0458               	iorwf	??_floorf,w
  7235  0132  1903               	skipnz
  7236  0133  293C               	goto	l2969
  7237  0134  085E               	movf	floorf@m,w
  7238  0135  07E4               	addwf	floorf@u,f
  7239  0136  085F               	movf	floorf@m+1,w
  7240  0137  3DE5               	addwfc	floorf@u+1,f
  7241  0138  0860               	movf	floorf@m+2,w
  7242  0139  3DE6               	addwfc	floorf@u+2,f
  7243  013A  0861               	movf	floorf@m+3,w
  7244  013B  3DE7               	addwfc	floorf@u+3,f
  7245  013C                     l2969:	
  7246  013C  095E               	comf	floorf@m,w
  7247  013D  00D8               	movwf	??_floorf
  7248  013E  095F               	comf	floorf@m+1,w
  7249  013F  00D9               	movwf	??_floorf+1
  7250  0140  0960               	comf	floorf@m+2,w
  7251  0141  00DA               	movwf	??_floorf+2
  7252  0142  0961               	comf	floorf@m+3,w
  7253  0143  00DB               	movwf	??_floorf+3
  7254  0144  0858               	movf	??_floorf,w
  7255  0145  05E4               	andwf	floorf@u,f
  7256  0146  0859               	movf	??_floorf+1,w
  7257  0147  05E5               	andwf	floorf@u+1,f
  7258  0148  085A               	movf	??_floorf+2,w
  7259  0149  05E6               	andwf	floorf@u+2,f
  7260  014A  085B               	movf	??_floorf+3,w
  7261  014B  05E7               	andwf	floorf@u+3,f
  7262  014C  2983               	goto	l856
  7263  014D                     l2971:	
  7264  014D  0864               	movf	floorf@u,w
  7265  014E  00D8               	movwf	??_floorf
  7266  014F  0865               	movf	floorf@u+1,w
  7267  0150  00D9               	movwf	??_floorf+1
  7268  0151  0866               	movf	floorf@u+2,w
  7269  0152  00DA               	movwf	??_floorf+2
  7270  0153  0867               	movf	floorf@u+3,w
  7271  0154  00DB               	movwf	??_floorf+3
  7272  0155  301F               	movlw	31
  7273  0156                     u3805:	
  7274  0156  36DB               	lsrf	??_floorf+3,f
  7275  0157  0CDA               	rrf	??_floorf+2,f
  7276  0158  0CD9               	rrf	??_floorf+1,f
  7277  0159  0CD8               	rrf	??_floorf,f
  7278  015A  0B89               	decfsz	9,f
  7279  015B  2956               	goto	u3805
  7280  015C  085B               	movf	??_floorf+3,w
  7281  015D  045A               	iorwf	??_floorf+2,w
  7282  015E  0459               	iorwf	??_floorf+1,w
  7283  015F  0458               	iorwf	??_floorf,w
  7284  0160  1D03               	skipz
  7285  0161  2966               	goto	l2975
  7286  0162  3000               	movlw	0
  7287  0163  00E7               	movwf	floorf@u+3
  7288  0164  3000               	movlw	0
  7289  0165  297E               	goto	L9
  7290  0166                     l2975:	
  7291  0166  0864               	movf	floorf@u,w
  7292  0167  00D8               	movwf	??_floorf
  7293  0168  0865               	movf	floorf@u+1,w
  7294  0169  00D9               	movwf	??_floorf+1
  7295  016A  0866               	movf	floorf@u+2,w
  7296  016B  00DA               	movwf	??_floorf+2
  7297  016C  0867               	movf	floorf@u+3,w
  7298  016D  00DB               	movwf	??_floorf+3
  7299  016E  3001               	movlw	1
  7300  016F                     u3825:	
  7301  016F  35D8               	lslf	??_floorf,f
  7302  0170  0DD9               	rlf	??_floorf+1,f
  7303  0171  0DDA               	rlf	??_floorf+2,f
  7304  0172  0DDB               	rlf	??_floorf+3,f
  7305  0173  0B89               	decfsz	9,f
  7306  0174  296F               	goto	u3825
  7307  0175  085B               	movf	??_floorf+3,w
  7308  0176  045A               	iorwf	??_floorf+2,w
  7309  0177  0459               	iorwf	??_floorf+1,w
  7310  0178  0458               	iorwf	??_floorf,w
  7311  0179  1903               	skipnz
  7312  017A  2983               	goto	l856
  7313  017B  30BF               	movlw	191
  7314  017C  00E7               	movwf	floorf@u+3
  7315  017D  3080               	movlw	128
  7316  017E                     L9:	
  7317  017E  00E6               	movwf	floorf@u+2
  7318  017F  3000               	movlw	0
  7319  0180  00E5               	movwf	floorf@u+1
  7320  0181  3000               	movlw	0
  7321  0182  00E4               	movwf	floorf@u
  7322  0183                     l856:	
  7323  0183  0867               	movf	floorf@u+3,w
  7324  0184  00D7               	movwf	?_floorf+3
  7325  0185  0866               	movf	floorf@u+2,w
  7326  0186  00D6               	movwf	?_floorf+2
  7327  0187  0865               	movf	floorf@u+1,w
  7328  0188  00D5               	movwf	?_floorf+1
  7329  0189  0864               	movf	floorf@u,w
  7330  018A  00D4               	movwf	?_floorf
  7331  018B  0008               	return
  7332  018C                     __end_of_floorf:	
  7333                           
  7334                           	psect	text15
  7335  1075                     __ptext15:	
  7336 ;; *************** function ___fpclassifyf *****************
  7337 ;; Defined at:
  7338 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\__fpclassifyf.c"
  7339 ;; Parameters:    Size  Location     Type
  7340 ;;  x               4    0[COMMON] float 
  7341 ;; Auto vars:     Size  Location     Type
  7342 ;;  u               4    2[BANK0 ] struct .
  7343 ;;  e               2    0[BANK0 ] int 
  7344 ;; Return value:  Size  Location     Type
  7345 ;;                  2    0[COMMON] int 
  7346 ;; Registers used:
  7347 ;;		wreg, status,2, status,0
  7348 ;; Tracked objects:
  7349 ;;		On entry : 0/0
  7350 ;;		On exit  : 0/0
  7351 ;;		Unchanged: 0/0
  7352 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
  7353 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  7354 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  7355 ;;      Temps:          6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  7356 ;;      Totals:        10       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  7357 ;;Total ram usage:       16 bytes
  7358 ;; Hardware stack levels used:    1
  7359 ;; This function calls:
  7360 ;;		Nothing
  7361 ;; This function is called by:
  7362 ;;		_efgtoa
  7363 ;; This function uses a non-reentrant model
  7364 ;;
  7365                           
  7366                           
  7367                           ;psect for function ___fpclassifyf
  7368  1075                     ___fpclassifyf:	
  7369                           
  7370                           ;incstack = 0
  7371                           ; Regs used in ___fpclassifyf: [wreg+status,2+status,0]
  7372  1075  0142               	movlb	2	; select bank2
  7373  1076  0867               	movf	(___fpclassifyf@F453+3)^(0+256),w
  7374  1077  0140               	movlb	0	; select bank0
  7375  1078  00A5               	movwf	___fpclassifyf@u+3
  7376  1079  0142               	movlb	2	; select bank2
  7377  107A  0866               	movf	(___fpclassifyf@F453+2)^(0+256),w
  7378  107B  0140               	movlb	0	; select bank0
  7379  107C  00A4               	movwf	___fpclassifyf@u+2
  7380  107D  0142               	movlb	2	; select bank2
  7381  107E  0865               	movf	(___fpclassifyf@F453+1)^(0+256),w
  7382  107F  0140               	movlb	0	; select bank0
  7383  1080  00A3               	movwf	___fpclassifyf@u+1
  7384  1081  0142               	movlb	2	; select bank2
  7385  1082  0864               	movf	___fpclassifyf@F453^(0+256),w
  7386  1083  0140               	movlb	0	; select bank0
  7387  1084  00A2               	movwf	___fpclassifyf@u
  7388  1085  0873               	movf	___fpclassifyf@x+3,w
  7389  1086  00A5               	movwf	___fpclassifyf@u+3
  7390  1087  0872               	movf	___fpclassifyf@x+2,w
  7391  1088  00A4               	movwf	___fpclassifyf@u+2
  7392  1089  0871               	movf	___fpclassifyf@x+1,w
  7393  108A  00A3               	movwf	___fpclassifyf@u+1
  7394  108B  0870               	movf	___fpclassifyf@x,w
  7395  108C  00A2               	movwf	___fpclassifyf@u
  7396  108D  0822               	movf	___fpclassifyf@u,w
  7397  108E  00F4               	movwf	??___fpclassifyf
  7398  108F  0823               	movf	___fpclassifyf@u+1,w
  7399  1090  00F5               	movwf	??___fpclassifyf+1
  7400  1091  0824               	movf	___fpclassifyf@u+2,w
  7401  1092  00F6               	movwf	??___fpclassifyf+2
  7402  1093  0825               	movf	___fpclassifyf@u+3,w
  7403  1094  00F7               	movwf	??___fpclassifyf+3
  7404  1095  3017               	movlw	23
  7405  1096                     u3615:	
  7406  1096  36F7               	lsrf	??___fpclassifyf+3,f
  7407  1097  0CF6               	rrf	??___fpclassifyf+2,f
  7408  1098  0CF5               	rrf	??___fpclassifyf+1,f
  7409  1099  0CF4               	rrf	??___fpclassifyf,f
  7410  109A  0B89               	decfsz	9,f
  7411  109B  2896               	goto	u3615
  7412  109C  30FF               	movlw	255
  7413  109D  0574               	andwf	??___fpclassifyf,w
  7414  109E  00A0               	movwf	___fpclassifyf@e
  7415  109F  3000               	movlw	0
  7416  10A0  0575               	andwf	??___fpclassifyf+1,w
  7417  10A1  00A1               	movwf	___fpclassifyf@e+1
  7418  10A2  0820               	movf	___fpclassifyf@e,w
  7419  10A3  0421               	iorwf	___fpclassifyf@e+1,w
  7420  10A4  1D03               	btfss	3,2
  7421  10A5  28C5               	goto	l2927
  7422  10A6  0822               	movf	___fpclassifyf@u,w
  7423  10A7  00F4               	movwf	??___fpclassifyf
  7424  10A8  0823               	movf	___fpclassifyf@u+1,w
  7425  10A9  00F5               	movwf	??___fpclassifyf+1
  7426  10AA  0824               	movf	___fpclassifyf@u+2,w
  7427  10AB  00F6               	movwf	??___fpclassifyf+2
  7428  10AC  0825               	movf	___fpclassifyf@u+3,w
  7429  10AD  00F7               	movwf	??___fpclassifyf+3
  7430  10AE  3001               	movlw	1
  7431  10AF                     u3635:	
  7432  10AF  35F4               	lslf	??___fpclassifyf,f
  7433  10B0  0DF5               	rlf	??___fpclassifyf+1,f
  7434  10B1  0DF6               	rlf	??___fpclassifyf+2,f
  7435  10B2  0DF7               	rlf	??___fpclassifyf+3,f
  7436  10B3  0B89               	decfsz	9,f
  7437  10B4  28AF               	goto	u3635
  7438  10B5  0877               	movf	??___fpclassifyf+3,w
  7439  10B6  0476               	iorwf	??___fpclassifyf+2,w
  7440  10B7  0475               	iorwf	??___fpclassifyf+1,w
  7441  10B8  0474               	iorwf	??___fpclassifyf,w
  7442  10B9  1D03               	skipz
  7443  10BA  28C0               	goto	l2923
  7444  10BB  3002               	movlw	2
  7445  10BC  00F0               	movwf	?___fpclassifyf
  7446  10BD  3000               	movlw	0
  7447  10BE  00F1               	movwf	?___fpclassifyf+1
  7448  10BF  0008               	return
  7449  10C0                     l2923:	
  7450  10C0  3003               	movlw	3
  7451  10C1  00F0               	movwf	?___fpclassifyf
  7452  10C2  3000               	movlw	0
  7453  10C3  00F1               	movwf	?___fpclassifyf+1
  7454  10C4  0008               	return
  7455  10C5                     l2927:	
  7456  10C5  0A20               	incf	___fpclassifyf@e,w
  7457  10C6  0421               	iorwf	___fpclassifyf@e+1,w
  7458  10C7  1D03               	btfss	3,2
  7459  10C8  28E8               	goto	l2933
  7460  10C9  0822               	movf	___fpclassifyf@u,w
  7461  10CA  00F4               	movwf	??___fpclassifyf
  7462  10CB  0823               	movf	___fpclassifyf@u+1,w
  7463  10CC  00F5               	movwf	??___fpclassifyf+1
  7464  10CD  0824               	movf	___fpclassifyf@u+2,w
  7465  10CE  00F6               	movwf	??___fpclassifyf+2
  7466  10CF  0825               	movf	___fpclassifyf@u+3,w
  7467  10D0  00F7               	movwf	??___fpclassifyf+3
  7468  10D1  3009               	movlw	9
  7469  10D2                     u3665:	
  7470  10D2  35F4               	lslf	??___fpclassifyf,f
  7471  10D3  0DF5               	rlf	??___fpclassifyf+1,f
  7472  10D4  0DF6               	rlf	??___fpclassifyf+2,f
  7473  10D5  0DF7               	rlf	??___fpclassifyf+3,f
  7474  10D6  0B89               	decfsz	9,f
  7475  10D7  28D2               	goto	u3665
  7476  10D8  0877               	movf	??___fpclassifyf+3,w
  7477  10D9  0476               	iorwf	??___fpclassifyf+2,w
  7478  10DA  0475               	iorwf	??___fpclassifyf+1,w
  7479  10DB  0474               	iorwf	??___fpclassifyf,w
  7480  10DC  1D03               	btfss	3,2
  7481  10DD  28E0               	goto	u3670
  7482  10DE  3001               	movlw	1
  7483  10DF  28E1               	goto	u3680
  7484  10E0                     u3670:	
  7485  10E0  3000               	movlw	0
  7486  10E1                     u3680:	
  7487  10E1  00F8               	movwf	??___fpclassifyf+4
  7488  10E2  01F9               	clrf	??___fpclassifyf+5
  7489  10E3  0878               	movf	??___fpclassifyf+4,w
  7490  10E4  00F0               	movwf	?___fpclassifyf
  7491  10E5  0879               	movf	??___fpclassifyf+5,w
  7492  10E6  00F1               	movwf	?___fpclassifyf+1
  7493  10E7  0008               	return
  7494  10E8                     l2933:	
  7495  10E8  3004               	movlw	4
  7496  10E9  00F0               	movwf	?___fpclassifyf
  7497  10EA  3000               	movlw	0
  7498  10EB  00F1               	movwf	?___fpclassifyf+1
  7499  10EC  0008               	return
  7500  10ED                     __end_of___fpclassifyf:	
  7501                           
  7502                           	psect	text16
  7503  10ED                     __ptext16:	
  7504 ;; *************** function ___fltol *****************
  7505 ;; Defined at:
  7506 ;;		line 43 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\fltol.c"
  7507 ;; Parameters:    Size  Location     Type
  7508 ;;  f1              4    0[COMMON] int 
  7509 ;; Auto vars:     Size  Location     Type
  7510 ;;  exp1            1   10[COMMON] unsigned char 
  7511 ;;  sign1           1    9[COMMON] unsigned char 
  7512 ;; Return value:  Size  Location     Type
  7513 ;;                  4    0[COMMON] long 
  7514 ;; Registers used:
  7515 ;;		wreg, status,2, status,0
  7516 ;; Tracked objects:
  7517 ;;		On entry : 0/0
  7518 ;;		On exit  : 0/0
  7519 ;;		Unchanged: 0/0
  7520 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
  7521 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  7522 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  7523 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  7524 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  7525 ;;Total ram usage:       11 bytes
  7526 ;; Hardware stack levels used:    1
  7527 ;; This function calls:
  7528 ;;		Nothing
  7529 ;; This function is called by:
  7530 ;;		_efgtoa
  7531 ;; This function uses a non-reentrant model
  7532 ;;
  7533                           
  7534                           
  7535                           ;psect for function ___fltol
  7536  10ED                     ___fltol:	
  7537                           
  7538                           ;incstack = 0
  7539                           ; Regs used in ___fltol: [wreg+status,2+status,0]
  7540  10ED  0870               	movf	___fltol@f1,w
  7541  10EE  00F4               	movwf	??___fltol
  7542  10EF  0871               	movf	___fltol@f1+1,w
  7543  10F0  00F5               	movwf	??___fltol+1
  7544  10F1  0872               	movf	___fltol@f1+2,w
  7545  10F2  00F6               	movwf	??___fltol+2
  7546  10F3  0873               	movf	___fltol@f1+3,w
  7547  10F4  00F7               	movwf	??___fltol+3
  7548  10F5  1003               	clrc
  7549  10F6  0D76               	rlf	??___fltol+2,w
  7550  10F7  0D77               	rlf	??___fltol+3,w
  7551  10F8  00F8               	movwf	??___fltol+4
  7552  10F9  0878               	movf	??___fltol+4,w
  7553  10FA  00FA               	movwf	___fltol@exp1
  7554  10FB  087A               	movf	___fltol@exp1,w
  7555  10FC  1D03               	btfss	3,2
  7556  10FD  2907               	goto	l3133
  7557  10FE  3000               	movlw	0
  7558  10FF  00F3               	movwf	?___fltol+3
  7559  1100  3000               	movlw	0
  7560  1101  00F2               	movwf	?___fltol+2
  7561  1102  3000               	movlw	0
  7562  1103  00F1               	movwf	?___fltol+1
  7563  1104  3000               	movlw	0
  7564  1105  00F0               	movwf	?___fltol
  7565  1106  0008               	return
  7566  1107                     l3133:	
  7567  1107  0870               	movf	___fltol@f1,w
  7568  1108  00F4               	movwf	??___fltol
  7569  1109  0871               	movf	___fltol@f1+1,w
  7570  110A  00F5               	movwf	??___fltol+1
  7571  110B  0872               	movf	___fltol@f1+2,w
  7572  110C  00F6               	movwf	??___fltol+2
  7573  110D  0873               	movf	___fltol@f1+3,w
  7574  110E  00F7               	movwf	??___fltol+3
  7575  110F  301F               	movlw	31
  7576  1110                     u4195:	
  7577  1110  36F7               	lsrf	??___fltol+3,f
  7578  1111  0CF6               	rrf	??___fltol+2,f
  7579  1112  0CF5               	rrf	??___fltol+1,f
  7580  1113  0CF4               	rrf	??___fltol,f
  7581  1114  0B89               	decfsz	9,f
  7582  1115  2910               	goto	u4195
  7583  1116  0874               	movf	??___fltol,w
  7584  1117  00F8               	movwf	??___fltol+4
  7585  1118  0878               	movf	??___fltol+4,w
  7586  1119  00F9               	movwf	___fltol@sign1
  7587  111A  17F2               	bsf	___fltol@f1+2,7
  7588  111B  30FF               	movlw	255
  7589  111C  05F0               	andwf	___fltol@f1,f
  7590  111D  30FF               	movlw	255
  7591  111E  05F1               	andwf	___fltol@f1+1,f
  7592  111F  30FF               	movlw	255
  7593  1120  05F2               	andwf	___fltol@f1+2,f
  7594  1121  3000               	movlw	0
  7595  1122  05F3               	andwf	___fltol@f1+3,f
  7596  1123  3096               	movlw	150
  7597  1124  02FA               	subwf	___fltol@exp1,f
  7598  1125  1FFA               	btfss	___fltol@exp1,7
  7599  1126  2943               	goto	l3151
  7600  1127  087A               	movf	___fltol@exp1,w
  7601  1128  3A80               	xorlw	128
  7602  1129  3E97               	addlw	151
  7603  112A  1803               	skipnc
  7604  112B  2935               	goto	l3149
  7605  112C  3000               	movlw	0
  7606  112D  00F3               	movwf	?___fltol+3
  7607  112E  3000               	movlw	0
  7608  112F  00F2               	movwf	?___fltol+2
  7609  1130  3000               	movlw	0
  7610  1131  00F1               	movwf	?___fltol+1
  7611  1132  3000               	movlw	0
  7612  1133  00F0               	movwf	?___fltol
  7613  1134  0008               	return
  7614  1135                     l3149:	
  7615  1135  3001               	movlw	1
  7616  1136                     u4225:	
  7617  1136  36F3               	lsrf	___fltol@f1+3,f
  7618  1137  0CF2               	rrf	___fltol@f1+2,f
  7619  1138  0CF1               	rrf	___fltol@f1+1,f
  7620  1139  0CF0               	rrf	___fltol@f1,f
  7621  113A  0B89               	decfsz	9,f
  7622  113B  2936               	goto	u4225
  7623  113C  3001               	movlw	1
  7624  113D  00F4               	movwf	??___fltol
  7625  113E  0874               	movf	??___fltol,w
  7626  113F  07FA               	addwf	___fltol@exp1,f
  7627  1140  1903               	btfsc	3,2
  7628  1141  295C               	goto	l3159
  7629  1142  2935               	goto	l3149
  7630  1143                     l3151:	
  7631  1143  3020               	movlw	32
  7632  1144  027A               	subwf	___fltol@exp1,w
  7633  1145  1C03               	skipc
  7634  1146  2959               	goto	l574
  7635  1147  3000               	movlw	0
  7636  1148  00F3               	movwf	?___fltol+3
  7637  1149  3000               	movlw	0
  7638  114A  00F2               	movwf	?___fltol+2
  7639  114B  3000               	movlw	0
  7640  114C  00F1               	movwf	?___fltol+1
  7641  114D  3000               	movlw	0
  7642  114E  00F0               	movwf	?___fltol
  7643  114F  0008               	return
  7644  1150                     l3157:	
  7645  1150  3001               	movlw	1
  7646  1151                     u4255:	
  7647  1151  35F0               	lslf	___fltol@f1,f
  7648  1152  0DF1               	rlf	___fltol@f1+1,f
  7649  1153  0DF2               	rlf	___fltol@f1+2,f
  7650  1154  0DF3               	rlf	___fltol@f1+3,f
  7651  1155  0B89               	decfsz	9,f
  7652  1156  2951               	goto	u4255
  7653  1157  3001               	movlw	1
  7654  1158  02FA               	subwf	___fltol@exp1,f
  7655  1159                     l574:	
  7656  1159  087A               	movf	___fltol@exp1,w
  7657  115A  1D03               	btfss	3,2
  7658  115B  2950               	goto	l3157
  7659  115C                     l3159:	
  7660  115C  0879               	movf	___fltol@sign1,w
  7661  115D  1903               	btfsc	3,2
  7662  115E  0008               	return
  7663  115F  09F0               	comf	___fltol@f1,f
  7664  1160  09F1               	comf	___fltol@f1+1,f
  7665  1161  09F2               	comf	___fltol@f1+2,f
  7666  1162  09F3               	comf	___fltol@f1+3,f
  7667  1163  0AF0               	incf	___fltol@f1,f
  7668  1164  1903               	skipnz
  7669  1165  0AF1               	incf	___fltol@f1+1,f
  7670  1166  1903               	skipnz
  7671  1167  0AF2               	incf	___fltol@f1+2,f
  7672  1168  1903               	skipnz
  7673  1169  0AF3               	incf	___fltol@f1+3,f
  7674  116A  0008               	return
  7675  116B                     __end_of___fltol:	
  7676                           
  7677                           	psect	text17
  7678  1D86                     __ptext17:	
  7679 ;; *************** function ___flsub *****************
  7680 ;; Defined at:
  7681 ;;		line 242 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\sprcadd.c"
  7682 ;; Parameters:    Size  Location     Type
  7683 ;;  a               4   26[BANK0 ] long 
  7684 ;;  b               4   30[BANK0 ] long 
  7685 ;; Auto vars:     Size  Location     Type
  7686 ;;		None
  7687 ;; Return value:  Size  Location     Type
  7688 ;;                  4   26[BANK0 ] long 
  7689 ;; Registers used:
  7690 ;;		wreg, status,2, status,0, pclath, cstack
  7691 ;; Tracked objects:
  7692 ;;		On entry : 0/0
  7693 ;;		On exit  : 0/0
  7694 ;;		Unchanged: 0/0
  7695 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
  7696 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  7697 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  7698 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  7699 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  7700 ;;Total ram usage:        8 bytes
  7701 ;; Hardware stack levels used:    1
  7702 ;; Hardware stack levels required when called:    1
  7703 ;; This function calls:
  7704 ;;		___fladd
  7705 ;; This function is called by:
  7706 ;;		_efgtoa
  7707 ;; This function uses a non-reentrant model
  7708 ;;
  7709                           
  7710                           
  7711                           ;psect for function ___flsub
  7712  1D86                     ___flsub:	
  7713                           
  7714                           ;incstack = 0
  7715                           ; Regs used in ___flsub: [wreg+status,2+status,0+pclath+cstack]
  7716  1D86  3080               	movlw	128
  7717  1D87  0140               	movlb	0	; select bank0
  7718  1D88  06BD               	xorwf	___flsub@a+3,f
  7719  1D89  0841               	movf	___flsub@b+3,w
  7720  1D8A  00F3               	movwf	___fladd@b+3
  7721  1D8B  0840               	movf	___flsub@b+2,w
  7722  1D8C  00F2               	movwf	___fladd@b+2
  7723  1D8D  083F               	movf	___flsub@b+1,w
  7724  1D8E  00F1               	movwf	___fladd@b+1
  7725  1D8F  083E               	movf	___flsub@b,w
  7726  1D90  00F0               	movwf	___fladd@b
  7727  1D91  083D               	movf	___flsub@a+3,w
  7728  1D92  00F7               	movwf	___fladd@a+3
  7729  1D93  083C               	movf	___flsub@a+2,w
  7730  1D94  00F6               	movwf	___fladd@a+2
  7731  1D95  083B               	movf	___flsub@a+1,w
  7732  1D96  00F5               	movwf	___fladd@a+1
  7733  1D97  083A               	movf	___flsub@a,w
  7734  1D98  00F4               	movwf	___fladd@a
  7735  1D99  3195  25FF         	fcall	___fladd
  7736  1D9B  0873               	movf	?___fladd+3,w
  7737  1D9C  0140               	movlb	0	; select bank0
  7738  1D9D  00BD               	movwf	?___flsub+3
  7739  1D9E  0872               	movf	?___fladd+2,w
  7740  1D9F  00BC               	movwf	?___flsub+2
  7741  1DA0  0871               	movf	?___fladd+1,w
  7742  1DA1  00BB               	movwf	?___flsub+1
  7743  1DA2  0870               	movf	?___fladd,w
  7744  1DA3  00BA               	movwf	?___flsub
  7745  1DA4  0008               	return
  7746  1DA5                     __end_of___flsub:	
  7747                           
  7748                           	psect	text18
  7749  15FF                     __ptext18:	
  7750 ;; *************** function ___fladd *****************
  7751 ;; Defined at:
  7752 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\sprcadd.c"
  7753 ;; Parameters:    Size  Location     Type
  7754 ;;  b               4    0[COMMON] long 
  7755 ;;  a               4    4[COMMON] long 
  7756 ;; Auto vars:     Size  Location     Type
  7757 ;;  grs             1   11[COMMON] unsigned char 
  7758 ;;  bexp            1   10[COMMON] unsigned char 
  7759 ;;  aexp            1    9[COMMON] unsigned char 
  7760 ;;  signs           1    8[COMMON] unsigned char 
  7761 ;; Return value:  Size  Location     Type
  7762 ;;                  4    0[COMMON] unsigned char 
  7763 ;; Registers used:
  7764 ;;		wreg, status,2, status,0
  7765 ;; Tracked objects:
  7766 ;;		On entry : 0/0
  7767 ;;		On exit  : 0/0
  7768 ;;		Unchanged: 0/0
  7769 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
  7770 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  7771 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  7772 ;;      Temps:          0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  7773 ;;      Totals:        12      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  7774 ;;Total ram usage:       24 bytes
  7775 ;; Hardware stack levels used:    1
  7776 ;; This function calls:
  7777 ;;		Nothing
  7778 ;; This function is called by:
  7779 ;;		_main
  7780 ;;		_efgtoa
  7781 ;;		___flsub
  7782 ;; This function uses a non-reentrant model
  7783 ;;
  7784                           
  7785                           
  7786                           ;psect for function ___fladd
  7787  15FF                     ___fladd:	
  7788                           
  7789                           ;incstack = 0
  7790                           ; Regs used in ___fladd: [wreg+status,2+status,0]
  7791  15FF  0873               	movf	___fladd@b+3,w
  7792  1600  3980               	andlw	128
  7793  1601  0140               	movlb	0	; select bank0
  7794  1602  00A0               	movwf	??___fladd
  7795  1603  0820               	movf	??___fladd,w
  7796  1604  00F8               	movwf	___fladd@signs
  7797  1605  3573               	lslf	___fladd@b+3,w
  7798  1606  00A0               	movwf	??___fladd
  7799  1607  0820               	movf	??___fladd,w
  7800  1608  00FA               	movwf	___fladd@bexp
  7801  1609  1BF2               	btfsc	___fladd@b+2,7
  7802  160A  147A               	bsf	___fladd@bexp,0
  7803  160B  087A               	movf	___fladd@bexp,w
  7804  160C  1903               	btfsc	3,2
  7805  160D  2E1C               	goto	l2701
  7806  160E  0A7A               	incf	___fladd@bexp,w
  7807  160F  1D03               	btfss	3,2
  7808  1610  2E19               	goto	l2697
  7809  1611  3000               	movlw	0
  7810  1612  00F3               	movwf	___fladd@b+3
  7811  1613  3000               	movlw	0
  7812  1614  00F2               	movwf	___fladd@b+2
  7813  1615  3000               	movlw	0
  7814  1616  00F1               	movwf	___fladd@b+1
  7815  1617  3000               	movlw	0
  7816  1618  00F0               	movwf	___fladd@b
  7817  1619                     l2697:	
  7818  1619  17F2               	bsf	___fladd@b+2,7
  7819  161A  01F3               	clrf	___fladd@b+3
  7820  161B  2E24               	goto	l2703
  7821  161C                     l2701:	
  7822  161C  3000               	movlw	0
  7823  161D  00F3               	movwf	___fladd@b+3
  7824  161E  3000               	movlw	0
  7825  161F  00F2               	movwf	___fladd@b+2
  7826  1620  3000               	movlw	0
  7827  1621  00F1               	movwf	___fladd@b+1
  7828  1622  3000               	movlw	0
  7829  1623  00F0               	movwf	___fladd@b
  7830  1624                     l2703:	
  7831  1624  0877               	movf	___fladd@a+3,w
  7832  1625  3980               	andlw	128
  7833  1626  00A0               	movwf	??___fladd
  7834  1627  0820               	movf	??___fladd,w
  7835  1628  00F9               	movwf	___fladd@aexp
  7836  1629  0879               	movf	___fladd@aexp,w
  7837  162A  0678               	xorwf	___fladd@signs,w
  7838  162B  1D03               	btfss	3,2
  7839  162C  1778               	bsf	___fladd@signs,6
  7840  162D  3577               	lslf	___fladd@a+3,w
  7841  162E  00A0               	movwf	??___fladd
  7842  162F  0820               	movf	??___fladd,w
  7843  1630  00F9               	movwf	___fladd@aexp
  7844  1631  1BF6               	btfsc	___fladd@a+2,7
  7845  1632  1479               	bsf	___fladd@aexp,0
  7846  1633  0879               	movf	___fladd@aexp,w
  7847  1634  1903               	btfsc	3,2
  7848  1635  2E44               	goto	l2725
  7849  1636  0A79               	incf	___fladd@aexp,w
  7850  1637  1D03               	btfss	3,2
  7851  1638  2E41               	goto	l2721
  7852  1639  3000               	movlw	0
  7853  163A  00F7               	movwf	___fladd@a+3
  7854  163B  3000               	movlw	0
  7855  163C  00F6               	movwf	___fladd@a+2
  7856  163D  3000               	movlw	0
  7857  163E  00F5               	movwf	___fladd@a+1
  7858  163F  3000               	movlw	0
  7859  1640  00F4               	movwf	___fladd@a
  7860  1641                     l2721:	
  7861  1641  17F6               	bsf	___fladd@a+2,7
  7862  1642  01F7               	clrf	___fladd@a+3
  7863  1643  2E4C               	goto	l674
  7864  1644                     l2725:	
  7865  1644  3000               	movlw	0
  7866  1645  00F7               	movwf	___fladd@a+3
  7867  1646  3000               	movlw	0
  7868  1647  00F6               	movwf	___fladd@a+2
  7869  1648  3000               	movlw	0
  7870  1649  00F5               	movwf	___fladd@a+1
  7871  164A  3000               	movlw	0
  7872  164B  00F4               	movwf	___fladd@a
  7873  164C                     l674:	
  7874  164C  087A               	movf	___fladd@bexp,w
  7875  164D  0279               	subwf	___fladd@aexp,w
  7876  164E  1803               	skipnc
  7877  164F  2E92               	goto	l2761
  7878  1650  1F78               	btfss	___fladd@signs,6
  7879  1651  2E56               	goto	l2731
  7880  1652  3080               	movlw	128
  7881  1653  00A0               	movwf	??___fladd
  7882  1654  0820               	movf	??___fladd,w
  7883  1655  06F8               	xorwf	___fladd@signs,f
  7884  1656                     l2731:	
  7885  1656  087A               	movf	___fladd@bexp,w
  7886  1657  00A0               	movwf	??___fladd
  7887  1658  0820               	movf	??___fladd,w
  7888  1659  00FB               	movwf	___fladd@grs
  7889  165A  0879               	movf	___fladd@aexp,w
  7890  165B  00A0               	movwf	??___fladd
  7891  165C  0820               	movf	??___fladd,w
  7892  165D  00FA               	movwf	___fladd@bexp
  7893  165E  087B               	movf	___fladd@grs,w
  7894  165F  00A0               	movwf	??___fladd
  7895  1660  0820               	movf	??___fladd,w
  7896  1661  00F9               	movwf	___fladd@aexp
  7897  1662  0870               	movf	___fladd@b,w
  7898  1663  00A0               	movwf	??___fladd
  7899  1664  0820               	movf	??___fladd,w
  7900  1665  00FB               	movwf	___fladd@grs
  7901  1666  0874               	movf	___fladd@a,w
  7902  1667  00A0               	movwf	??___fladd
  7903  1668  0820               	movf	??___fladd,w
  7904  1669  00F0               	movwf	___fladd@b
  7905  166A  087B               	movf	___fladd@grs,w
  7906  166B  00A0               	movwf	??___fladd
  7907  166C  0820               	movf	??___fladd,w
  7908  166D  00F4               	movwf	___fladd@a
  7909  166E  0871               	movf	___fladd@b+1,w
  7910  166F  00A0               	movwf	??___fladd
  7911  1670  0820               	movf	??___fladd,w
  7912  1671  00FB               	movwf	___fladd@grs
  7913  1672  0875               	movf	___fladd@a+1,w
  7914  1673  00A0               	movwf	??___fladd
  7915  1674  0820               	movf	??___fladd,w
  7916  1675  00F1               	movwf	___fladd@b+1
  7917  1676  087B               	movf	___fladd@grs,w
  7918  1677  00A0               	movwf	??___fladd
  7919  1678  0820               	movf	??___fladd,w
  7920  1679  00F5               	movwf	___fladd@a+1
  7921  167A  0872               	movf	___fladd@b+2,w
  7922  167B  00A0               	movwf	??___fladd
  7923  167C  0820               	movf	??___fladd,w
  7924  167D  00FB               	movwf	___fladd@grs
  7925  167E  0876               	movf	___fladd@a+2,w
  7926  167F  00A0               	movwf	??___fladd
  7927  1680  0820               	movf	??___fladd,w
  7928  1681  00F2               	movwf	___fladd@b+2
  7929  1682  087B               	movf	___fladd@grs,w
  7930  1683  00A0               	movwf	??___fladd
  7931  1684  0820               	movf	??___fladd,w
  7932  1685  00F6               	movwf	___fladd@a+2
  7933  1686  0873               	movf	___fladd@b+3,w
  7934  1687  00A0               	movwf	??___fladd
  7935  1688  0820               	movf	??___fladd,w
  7936  1689  00FB               	movwf	___fladd@grs
  7937  168A  0877               	movf	___fladd@a+3,w
  7938  168B  00A0               	movwf	??___fladd
  7939  168C  0820               	movf	??___fladd,w
  7940  168D  00F3               	movwf	___fladd@b+3
  7941  168E  087B               	movf	___fladd@grs,w
  7942  168F  00A0               	movwf	??___fladd
  7943  1690  0820               	movf	??___fladd,w
  7944  1691  00F7               	movwf	___fladd@a+3
  7945  1692                     l2761:	
  7946  1692  01FB               	clrf	___fladd@grs
  7947  1693  087A               	movf	___fladd@bexp,w
  7948  1694  00A0               	movwf	??___fladd
  7949  1695  01A1               	clrf	??___fladd+1
  7950  1696  09A0               	comf	??___fladd,f
  7951  1697  09A1               	comf	??___fladd+1,f
  7952  1698  0AA0               	incf	??___fladd,f
  7953  1699  1903               	skipnz
  7954  169A  0AA1               	incf	??___fladd+1,f
  7955  169B  0879               	movf	___fladd@aexp,w
  7956  169C  0720               	addwf	??___fladd,w
  7957  169D  00A2               	movwf	??___fladd+2
  7958  169E  0821               	movf	??___fladd+1,w
  7959  169F  1803               	skipnc
  7960  16A0  0A21               	incf	??___fladd+1,w
  7961  16A1  00A3               	movwf	??___fladd+3
  7962  16A2  0823               	movf	??___fladd+3,w
  7963  16A3  3A80               	xorlw	128
  7964  16A4  00A4               	movwf	??___fladd+4
  7965  16A5  3080               	movlw	128
  7966  16A6  0224               	subwf	??___fladd+4,w
  7967  16A7  1D03               	skipz
  7968  16A8  2EAB               	goto	u3205
  7969  16A9  301A               	movlw	26
  7970  16AA  0222               	subwf	??___fladd+2,w
  7971  16AB                     u3205:	
  7972  16AB  1C03               	skipc
  7973  16AC  2EE1               	goto	l2779
  7974  16AD  0873               	movf	___fladd@b+3,w
  7975  16AE  0472               	iorwf	___fladd@b+2,w
  7976  16AF  0471               	iorwf	___fladd@b+1,w
  7977  16B0  0470               	iorwf	___fladd@b,w
  7978  16B1  1903               	btfsc	3,2
  7979  16B2  2EB5               	goto	u3210
  7980  16B3  3001               	movlw	1
  7981  16B4  2EB6               	goto	u3220
  7982  16B5                     u3210:	
  7983  16B5  3000               	movlw	0
  7984  16B6                     u3220:	
  7985  16B6  0140               	movlb	0	; select bank0
  7986  16B7  00A0               	movwf	??___fladd
  7987  16B8  0820               	movf	??___fladd,w
  7988  16B9  00FB               	movwf	___fladd@grs
  7989  16BA  3000               	movlw	0
  7990  16BB  00F3               	movwf	___fladd@b+3
  7991  16BC  3000               	movlw	0
  7992  16BD  00F2               	movwf	___fladd@b+2
  7993  16BE  3000               	movlw	0
  7994  16BF  00F1               	movwf	___fladd@b+1
  7995  16C0  3000               	movlw	0
  7996  16C1  00F0               	movwf	___fladd@b
  7997  16C2  0879               	movf	___fladd@aexp,w
  7998  16C3  00A0               	movwf	??___fladd
  7999  16C4  0820               	movf	??___fladd,w
  8000  16C5  00FA               	movwf	___fladd@bexp
  8001  16C6  2EE5               	goto	l678
  8002  16C7                     l680:	
  8003  16C7  1C7B               	btfss	___fladd@grs,0
  8004  16C8  2ED0               	goto	l2769
  8005  16C9  367B               	lsrf	___fladd@grs,w
  8006  16CA  3801               	iorlw	1
  8007  16CB  0140               	movlb	0	; select bank0
  8008  16CC  00A0               	movwf	??___fladd
  8009  16CD  0820               	movf	??___fladd,w
  8010  16CE  00FB               	movwf	___fladd@grs
  8011  16CF  2ED2               	goto	l2771
  8012  16D0                     l2769:	
  8013  16D0  1003               	clrc
  8014  16D1  0CFB               	rrf	___fladd@grs,f
  8015  16D2                     l2771:	
  8016  16D2  1870               	btfsc	___fladd@b,0
  8017  16D3  17FB               	bsf	___fladd@grs,7
  8018  16D4  3001               	movlw	1
  8019  16D5  0140               	movlb	0	; select bank0
  8020  16D6  00A0               	movwf	??___fladd
  8021  16D7                     u3255:	
  8022  16D7  37F3               	asrf	___fladd@b+3,f
  8023  16D8  0CF2               	rrf	___fladd@b+2,f
  8024  16D9  0CF1               	rrf	___fladd@b+1,f
  8025  16DA  0CF0               	rrf	___fladd@b,f
  8026  16DB  0BA0               	decfsz	??___fladd& (0+127),f
  8027  16DC  2ED7               	goto	u3255
  8028  16DD  3001               	movlw	1
  8029  16DE  00A0               	movwf	??___fladd
  8030  16DF  0820               	movf	??___fladd,w
  8031  16E0  07FA               	addwf	___fladd@bexp,f
  8032  16E1                     l2779:	
  8033  16E1  0879               	movf	___fladd@aexp,w
  8034  16E2  027A               	subwf	___fladd@bexp,w
  8035  16E3  1C03               	skipc
  8036  16E4  2EC7               	goto	l680
  8037  16E5                     l678:	
  8038  16E5  1B78               	btfsc	___fladd@signs,6
  8039  16E6  2F18               	goto	l2805
  8040  16E7  087A               	movf	___fladd@bexp,w
  8041  16E8  1D03               	btfss	3,2
  8042  16E9  2EF3               	goto	l2787
  8043  16EA  3000               	movlw	0
  8044  16EB  00F3               	movwf	?___fladd+3
  8045  16EC  3000               	movlw	0
  8046  16ED  00F2               	movwf	?___fladd+2
  8047  16EE  3000               	movlw	0
  8048  16EF  00F1               	movwf	?___fladd+1
  8049  16F0  3000               	movlw	0
  8050  16F1  00F0               	movwf	?___fladd
  8051  16F2  0008               	return
  8052  16F3                     l2787:	
  8053  16F3  0874               	movf	___fladd@a,w
  8054  16F4  07F0               	addwf	___fladd@b,f
  8055  16F5  0875               	movf	___fladd@a+1,w
  8056  16F6  3DF1               	addwfc	___fladd@b+1,f
  8057  16F7  0876               	movf	___fladd@a+2,w
  8058  16F8  3DF2               	addwfc	___fladd@b+2,f
  8059  16F9  0877               	movf	___fladd@a+3,w
  8060  16FA  3DF3               	addwfc	___fladd@b+3,f
  8061  16FB  1C73               	btfss	___fladd@b+3,0
  8062  16FC  2FA6               	goto	l2839
  8063  16FD  1C7B               	btfss	___fladd@grs,0
  8064  16FE  2F06               	goto	l2795
  8065  16FF  367B               	lsrf	___fladd@grs,w
  8066  1700  3801               	iorlw	1
  8067  1701  0140               	movlb	0	; select bank0
  8068  1702  00A0               	movwf	??___fladd
  8069  1703  0820               	movf	??___fladd,w
  8070  1704  00FB               	movwf	___fladd@grs
  8071  1705  2F08               	goto	l2797
  8072  1706                     l2795:	
  8073  1706  1003               	clrc
  8074  1707  0CFB               	rrf	___fladd@grs,f
  8075  1708                     l2797:	
  8076  1708  1870               	btfsc	___fladd@b,0
  8077  1709  17FB               	bsf	___fladd@grs,7
  8078  170A  3001               	movlw	1
  8079  170B  0140               	movlb	0	; select bank0
  8080  170C  00A0               	movwf	??___fladd
  8081  170D                     u3325:	
  8082  170D  37F3               	asrf	___fladd@b+3,f
  8083  170E  0CF2               	rrf	___fladd@b+2,f
  8084  170F  0CF1               	rrf	___fladd@b+1,f
  8085  1710  0CF0               	rrf	___fladd@b,f
  8086  1711  0BA0               	decfsz	??___fladd& (0+127),f
  8087  1712  2F0D               	goto	u3325
  8088  1713  3001               	movlw	1
  8089  1714  00A0               	movwf	??___fladd
  8090  1715  0820               	movf	??___fladd,w
  8091  1716  07FA               	addwf	___fladd@bexp,f
  8092  1717  2FA6               	goto	l2839
  8093  1718                     l2805:	
  8094  1718  0873               	movf	___fladd@b+3,w
  8095  1719  3A80               	xorlw	128
  8096  171A  0140               	movlb	0	; select bank0
  8097  171B  00A0               	movwf	??___fladd
  8098  171C  0877               	movf	___fladd@a+3,w
  8099  171D  3A80               	xorlw	128
  8100  171E  0220               	subwf	??___fladd,w
  8101  171F  1D03               	skipz
  8102  1720  2F2B               	goto	u3333
  8103  1721  0876               	movf	___fladd@a+2,w
  8104  1722  0272               	subwf	___fladd@b+2,w
  8105  1723  1D03               	skipz
  8106  1724  2F2B               	goto	u3333
  8107  1725  0875               	movf	___fladd@a+1,w
  8108  1726  0271               	subwf	___fladd@b+1,w
  8109  1727  1D03               	skipz
  8110  1728  2F2B               	goto	u3333
  8111  1729  0874               	movf	___fladd@a,w
  8112  172A  0270               	subwf	___fladd@b,w
  8113  172B                     u3333:	
  8114  172B  1803               	skipnc
  8115  172C  2F76               	goto	l2815
  8116  172D  30FF               	movlw	255
  8117  172E  00A0               	movwf	??___fladd
  8118  172F  30FF               	movlw	255
  8119  1730  00A1               	movwf	??___fladd+1
  8120  1731  30FF               	movlw	255
  8121  1732  00A2               	movwf	??___fladd+2
  8122  1733  30FF               	movlw	255
  8123  1734  00A3               	movwf	??___fladd+3
  8124  1735  0874               	movf	___fladd@a,w
  8125  1736  00A4               	movwf	??___fladd+4
  8126  1737  0875               	movf	___fladd@a+1,w
  8127  1738  00A5               	movwf	??___fladd+5
  8128  1739  0876               	movf	___fladd@a+2,w
  8129  173A  00A6               	movwf	??___fladd+6
  8130  173B  0877               	movf	___fladd@a+3,w
  8131  173C  00A7               	movwf	??___fladd+7
  8132  173D  0970               	comf	___fladd@b,w
  8133  173E  00A8               	movwf	??___fladd+8
  8134  173F  0971               	comf	___fladd@b+1,w
  8135  1740  00A9               	movwf	??___fladd+9
  8136  1741  0972               	comf	___fladd@b+2,w
  8137  1742  00AA               	movwf	??___fladd+10
  8138  1743  0973               	comf	___fladd@b+3,w
  8139  1744  00AB               	movwf	??___fladd+11
  8140  1745  0AA8               	incf	??___fladd+8,f
  8141  1746  1903               	skipnz
  8142  1747  0AA9               	incf	??___fladd+9,f
  8143  1748  1903               	skipnz
  8144  1749  0AAA               	incf	??___fladd+10,f
  8145  174A  1903               	skipnz
  8146  174B  0AAB               	incf	??___fladd+11,f
  8147  174C  0828               	movf	??___fladd+8,w
  8148  174D  07A4               	addwf	??___fladd+4,f
  8149  174E  0829               	movf	??___fladd+9,w
  8150  174F  3DA5               	addwfc	??___fladd+5,f
  8151  1750  082A               	movf	??___fladd+10,w
  8152  1751  3DA6               	addwfc	??___fladd+6,f
  8153  1752  082B               	movf	??___fladd+11,w
  8154  1753  3DA7               	addwfc	??___fladd+7,f
  8155  1754  0824               	movf	??___fladd+4,w
  8156  1755  07A0               	addwf	??___fladd,f
  8157  1756  0825               	movf	??___fladd+5,w
  8158  1757  3DA1               	addwfc	??___fladd+1,f
  8159  1758  0826               	movf	??___fladd+6,w
  8160  1759  3DA2               	addwfc	??___fladd+2,f
  8161  175A  0827               	movf	??___fladd+7,w
  8162  175B  3DA3               	addwfc	??___fladd+3,f
  8163  175C  0823               	movf	??___fladd+3,w
  8164  175D  00F3               	movwf	___fladd@b+3
  8165  175E  0822               	movf	??___fladd+2,w
  8166  175F  00F2               	movwf	___fladd@b+2
  8167  1760  0821               	movf	??___fladd+1,w
  8168  1761  00F1               	movwf	___fladd@b+1
  8169  1762  0820               	movf	??___fladd,w
  8170  1763  00F0               	movwf	___fladd@b
  8171  1764  3080               	movlw	128
  8172  1765  00A0               	movwf	??___fladd
  8173  1766  0820               	movf	??___fladd,w
  8174  1767  06F8               	xorwf	___fladd@signs,f
  8175  1768  09FB               	comf	___fladd@grs,f
  8176  1769  0AFB               	incf	___fladd@grs,f
  8177  176A  087B               	movf	___fladd@grs,w
  8178  176B  1D03               	btfss	3,2
  8179  176C  2F7E               	goto	l695
  8180  176D  3001               	movlw	1
  8181  176E  07F0               	addwf	___fladd@b,f
  8182  176F  3000               	movlw	0
  8183  1770  3DF1               	addwfc	___fladd@b+1,f
  8184  1771  3000               	movlw	0
  8185  1772  3DF2               	addwfc	___fladd@b+2,f
  8186  1773  3000               	movlw	0
  8187  1774  3DF3               	addwfc	___fladd@b+3,f
  8188  1775  2F7E               	goto	l695
  8189  1776                     l2815:	
  8190  1776  0874               	movf	___fladd@a,w
  8191  1777  02F0               	subwf	___fladd@b,f
  8192  1778  0875               	movf	___fladd@a+1,w
  8193  1779  3BF1               	subwfb	___fladd@b+1,f
  8194  177A  0876               	movf	___fladd@a+2,w
  8195  177B  3BF2               	subwfb	___fladd@b+2,f
  8196  177C  0877               	movf	___fladd@a+3,w
  8197  177D  3BF3               	subwfb	___fladd@b+3,f
  8198  177E                     l695:	
  8199  177E  0873               	movf	___fladd@b+3,w
  8200  177F  0472               	iorwf	___fladd@b+2,w
  8201  1780  0471               	iorwf	___fladd@b+1,w
  8202  1781  0470               	iorwf	___fladd@b,w
  8203  1782  1D03               	skipz
  8204  1783  2FA4               	goto	l2837
  8205  1784  087B               	movf	___fladd@grs,w
  8206  1785  1D03               	btfss	3,2
  8207  1786  2FA4               	goto	l2837
  8208  1787  3000               	movlw	0
  8209  1788  00F3               	movwf	?___fladd+3
  8210  1789  3000               	movlw	0
  8211  178A  00F2               	movwf	?___fladd+2
  8212  178B  3000               	movlw	0
  8213  178C  00F1               	movwf	?___fladd+1
  8214  178D  3000               	movlw	0
  8215  178E  00F0               	movwf	?___fladd
  8216  178F  0008               	return
  8217  1790                     l2823:	
  8218  1790  3001               	movlw	1
  8219  1791                     u3375:	
  8220  1791  35F0               	lslf	___fladd@b,f
  8221  1792  0DF1               	rlf	___fladd@b+1,f
  8222  1793  0DF2               	rlf	___fladd@b+2,f
  8223  1794  0DF3               	rlf	___fladd@b+3,f
  8224  1795  0B89               	decfsz	9,f
  8225  1796  2F91               	goto	u3375
  8226  1797  1BFB               	btfsc	___fladd@grs,7
  8227  1798  1470               	bsf	___fladd@b,0
  8228  1799  1C7B               	btfss	___fladd@grs,0
  8229  179A  2F9D               	goto	l2831
  8230  179B  1403               	setc
  8231  179C  2F9E               	goto	L10
  8232  179D                     l2831:	
  8233  179D  1003               	clrc
  8234  179E                     L10:	
  8235  179E  0DFB               	rlf	___fladd@grs,f
  8236  179F  087A               	movf	___fladd@bexp,w
  8237  17A0  1903               	btfsc	3,2
  8238  17A1  2FA4               	goto	l2837
  8239  17A2  3001               	movlw	1
  8240  17A3  02FA               	subwf	___fladd@bexp,f
  8241  17A4                     l2837:	
  8242  17A4  1FF2               	btfss	___fladd@b+2,7
  8243  17A5  2F90               	goto	l2823
  8244  17A6                     l2839:	
  8245  17A6  01F9               	clrf	___fladd@aexp
  8246  17A7  1FFB               	btfss	___fladd@grs,7
  8247  17A8  2FB1               	goto	l2849
  8248  17A9  087B               	movf	___fladd@grs,w
  8249  17AA  397F               	andlw	127
  8250  17AB  1D03               	btfss	3,2
  8251  17AC  2FAF               	goto	l2847
  8252  17AD  1C70               	btfss	___fladd@b,0
  8253  17AE  2FB1               	goto	l2849
  8254  17AF                     l2847:	
  8255  17AF  01F9               	clrf	___fladd@aexp
  8256  17B0  0AF9               	incf	___fladd@aexp,f
  8257  17B1                     l2849:	
  8258  17B1  0879               	movf	___fladd@aexp,w
  8259  17B2  1903               	btfsc	3,2
  8260  17B3  2FDE               	goto	l708
  8261  17B4  3001               	movlw	1
  8262  17B5  07F0               	addwf	___fladd@b,f
  8263  17B6  3000               	movlw	0
  8264  17B7  3DF1               	addwfc	___fladd@b+1,f
  8265  17B8  3000               	movlw	0
  8266  17B9  3DF2               	addwfc	___fladd@b+2,f
  8267  17BA  3000               	movlw	0
  8268  17BB  3DF3               	addwfc	___fladd@b+3,f
  8269  17BC  1C73               	btfss	___fladd@b+3,0
  8270  17BD  2FDE               	goto	l708
  8271  17BE  0870               	movf	___fladd@b,w
  8272  17BF  0140               	movlb	0	; select bank0
  8273  17C0  00A0               	movwf	??___fladd
  8274  17C1  0871               	movf	___fladd@b+1,w
  8275  17C2  00A1               	movwf	??___fladd+1
  8276  17C3  0872               	movf	___fladd@b+2,w
  8277  17C4  00A2               	movwf	??___fladd+2
  8278  17C5  0873               	movf	___fladd@b+3,w
  8279  17C6  00A3               	movwf	??___fladd+3
  8280  17C7  3001               	movlw	1
  8281  17C8  00A4               	movwf	??___fladd+4
  8282  17C9                     u3475:	
  8283  17C9  37A3               	asrf	??___fladd+3,f
  8284  17CA  0CA2               	rrf	??___fladd+2,f
  8285  17CB  0CA1               	rrf	??___fladd+1,f
  8286  17CC  0CA0               	rrf	??___fladd,f
  8287  17CD  0BA4               	decfsz	??___fladd+4,f
  8288  17CE  2FC9               	goto	u3475
  8289  17CF  0823               	movf	??___fladd+3,w
  8290  17D0  00F3               	movwf	___fladd@b+3
  8291  17D1  0822               	movf	??___fladd+2,w
  8292  17D2  00F2               	movwf	___fladd@b+2
  8293  17D3  0821               	movf	??___fladd+1,w
  8294  17D4  00F1               	movwf	___fladd@b+1
  8295  17D5  0820               	movf	??___fladd,w
  8296  17D6  00F0               	movwf	___fladd@b
  8297  17D7  0A7A               	incf	___fladd@bexp,w
  8298  17D8  1903               	btfsc	3,2
  8299  17D9  2FDE               	goto	l708
  8300  17DA  3001               	movlw	1
  8301  17DB  00A0               	movwf	??___fladd
  8302  17DC  0820               	movf	??___fladd,w
  8303  17DD  07FA               	addwf	___fladd@bexp,f
  8304  17DE                     l708:	
  8305  17DE  0A7A               	incf	___fladd@bexp,w
  8306  17DF  1D03               	btfss	3,2
  8307  17E0  087A               	movf	___fladd@bexp,w
  8308  17E1  1D03               	btfss	3,2
  8309  17E2  2FEE               	goto	l2867
  8310  17E3  3000               	movlw	0
  8311  17E4  00F3               	movwf	___fladd@b+3
  8312  17E5  3000               	movlw	0
  8313  17E6  00F2               	movwf	___fladd@b+2
  8314  17E7  3000               	movlw	0
  8315  17E8  00F1               	movwf	___fladd@b+1
  8316  17E9  3000               	movlw	0
  8317  17EA  00F0               	movwf	___fladd@b
  8318  17EB  087A               	movf	___fladd@bexp,w
  8319  17EC  1903               	btfsc	3,2
  8320  17ED  01F8               	clrf	___fladd@signs
  8321  17EE                     l2867:	
  8322  17EE  1C7A               	btfss	___fladd@bexp,0
  8323  17EF  2FF2               	goto	l2871
  8324  17F0  17F2               	bsf	___fladd@b+2,7
  8325  17F1  2FF7               	goto	l716
  8326  17F2                     l2871:	
  8327  17F2  307F               	movlw	127
  8328  17F3  0140               	movlb	0	; select bank0
  8329  17F4  00A0               	movwf	??___fladd
  8330  17F5  0820               	movf	??___fladd,w
  8331  17F6  05F2               	andwf	___fladd@b+2,f
  8332  17F7                     l716:	
  8333  17F7  367A               	lsrf	___fladd@bexp,w
  8334  17F8  0140               	movlb	0	; select bank0
  8335  17F9  00A0               	movwf	??___fladd
  8336  17FA  0820               	movf	??___fladd,w
  8337  17FB  00F3               	movwf	___fladd@b+3
  8338  17FC  1FF8               	btfss	___fladd@signs,7
  8339  17FD  0008               	return
  8340  17FE  17F3               	bsf	___fladd@b+3,7
  8341  17FF  0008               	return
  8342  1800                     __end_of___fladd:	
  8343                           
  8344                           	psect	text19
  8345  1D14                     __ptext19:	
  8346 ;; *************** function ___flneg *****************
  8347 ;; Defined at:
  8348 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\flneg.c"
  8349 ;; Parameters:    Size  Location     Type
  8350 ;;  f1              4    0[COMMON] unsigned char 
  8351 ;; Auto vars:     Size  Location     Type
  8352 ;;		None
  8353 ;; Return value:  Size  Location     Type
  8354 ;;                  4    0[COMMON] unsigned char 
  8355 ;; Registers used:
  8356 ;;		wreg
  8357 ;; Tracked objects:
  8358 ;;		On entry : 0/0
  8359 ;;		On exit  : 0/0
  8360 ;;		Unchanged: 0/0
  8361 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
  8362 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  8363 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  8364 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  8365 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  8366 ;;Total ram usage:        4 bytes
  8367 ;; Hardware stack levels used:    1
  8368 ;; This function calls:
  8369 ;;		Nothing
  8370 ;; This function is called by:
  8371 ;;		_efgtoa
  8372 ;; This function uses a non-reentrant model
  8373 ;;
  8374                           
  8375                           
  8376                           ;psect for function ___flneg
  8377  1D14                     ___flneg:	
  8378                           
  8379                           ;incstack = 0
  8380                           ; Regs used in ___flneg: [wreg]
  8381  1D14  0873               	movf	___flneg@f1+3,w
  8382  1D15  0472               	iorwf	___flneg@f1+2,w
  8383  1D16  0471               	iorwf	___flneg@f1+1,w
  8384  1D17  0470               	iorwf	___flneg@f1,w
  8385  1D18  1903               	skipnz
  8386  1D19  0008               	return
  8387  1D1A  3080               	movlw	128
  8388  1D1B  06F3               	xorwf	___flneg@f1+3,f
  8389  1D1C  0008               	return
  8390  1D1D                     __end_of___flneg:	
  8391                           
  8392                           	psect	text20
  8393  0857                     __ptext20:	
  8394 ;; *************** function ___flmul *****************
  8395 ;; Defined at:
  8396 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\sprcmul.c"
  8397 ;; Parameters:    Size  Location     Type
  8398 ;;  b               4    0[BANK0 ] unsigned char 
  8399 ;;  a               4    4[BANK0 ] unsigned char 
  8400 ;; Auto vars:     Size  Location     Type
  8401 ;;  prod            4   20[BANK0 ] struct .
  8402 ;;  grs             4   14[BANK0 ] unsigned long 
  8403 ;;  temp            2   24[BANK0 ] struct .
  8404 ;;  bexp            1   19[BANK0 ] unsigned char 
  8405 ;;  aexp            1   18[BANK0 ] unsigned char 
  8406 ;;  sign            1   13[BANK0 ] unsigned char 
  8407 ;; Return value:  Size  Location     Type
  8408 ;;                  4    0[BANK0 ] unsigned char 
  8409 ;; Registers used:
  8410 ;;		wreg, status,2, status,0, pclath, cstack
  8411 ;; Tracked objects:
  8412 ;;		On entry : 0/0
  8413 ;;		On exit  : 0/0
  8414 ;;		Unchanged: 0/0
  8415 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
  8416 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  8417 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  8418 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  8419 ;;      Totals:         0      26       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  8420 ;;Total ram usage:       26 bytes
  8421 ;; Hardware stack levels used:    1
  8422 ;; Hardware stack levels required when called:    1
  8423 ;; This function calls:
  8424 ;;		__Umul8_16
  8425 ;; This function is called by:
  8426 ;;		_main
  8427 ;;		_efgtoa
  8428 ;; This function uses a non-reentrant model
  8429 ;;
  8430                           
  8431                           
  8432                           ;psect for function ___flmul
  8433  0857                     ___flmul:	
  8434                           
  8435                           ;incstack = 0
  8436                           ; Regs used in ___flmul: [wreg+status,2+status,0+pclath+cstack]
  8437  0857  0140               	movlb	0	; select bank0
  8438  0858  0823               	movf	___flmul@b+3,w
  8439  0859  3980               	andlw	128
  8440  085A  00A8               	movwf	??___flmul
  8441  085B  0828               	movf	??___flmul,w
  8442  085C  00AD               	movwf	___flmul@sign
  8443  085D  3523               	lslf	___flmul@b+3,w
  8444  085E  00A8               	movwf	??___flmul
  8445  085F  0828               	movf	??___flmul,w
  8446  0860  00B3               	movwf	___flmul@bexp
  8447  0861  1BA2               	btfsc	___flmul@b+2,7
  8448  0862  1433               	bsf	___flmul@bexp,0
  8449  0863  0833               	movf	___flmul@bexp,w
  8450  0864  1903               	btfsc	3,2
  8451  0865  2873               	goto	l3325
  8452  0866  0A33               	incf	___flmul@bexp,w
  8453  0867  1D03               	btfss	3,2
  8454  0868  2871               	goto	l3323
  8455  0869  3000               	movlw	0
  8456  086A  00A3               	movwf	___flmul@b+3
  8457  086B  3000               	movlw	0
  8458  086C  00A2               	movwf	___flmul@b+2
  8459  086D  3000               	movlw	0
  8460  086E  00A1               	movwf	___flmul@b+1
  8461  086F  3000               	movlw	0
  8462  0870  00A0               	movwf	___flmul@b
  8463  0871                     l3323:	
  8464  0871  17A2               	bsf	___flmul@b+2,7
  8465  0872  287B               	goto	l3327
  8466  0873                     l3325:	
  8467  0873  3000               	movlw	0
  8468  0874  00A3               	movwf	___flmul@b+3
  8469  0875  3000               	movlw	0
  8470  0876  00A2               	movwf	___flmul@b+2
  8471  0877  3000               	movlw	0
  8472  0878  00A1               	movwf	___flmul@b+1
  8473  0879  3000               	movlw	0
  8474  087A  00A0               	movwf	___flmul@b
  8475  087B                     l3327:	
  8476  087B  0827               	movf	___flmul@a+3,w
  8477  087C  3980               	andlw	128
  8478  087D  00A8               	movwf	??___flmul
  8479  087E  0828               	movf	??___flmul,w
  8480  087F  06AD               	xorwf	___flmul@sign,f
  8481  0880  3527               	lslf	___flmul@a+3,w
  8482  0881  00A8               	movwf	??___flmul
  8483  0882  0828               	movf	??___flmul,w
  8484  0883  00B2               	movwf	___flmul@aexp
  8485  0884  1BA6               	btfsc	___flmul@a+2,7
  8486  0885  1432               	bsf	___flmul@aexp,0
  8487  0886  0832               	movf	___flmul@aexp,w
  8488  0887  1903               	btfsc	3,2
  8489  0888  2896               	goto	l3343
  8490  0889  0A32               	incf	___flmul@aexp,w
  8491  088A  1D03               	btfss	3,2
  8492  088B  2894               	goto	l3341
  8493  088C  3000               	movlw	0
  8494  088D  00A7               	movwf	___flmul@a+3
  8495  088E  3000               	movlw	0
  8496  088F  00A6               	movwf	___flmul@a+2
  8497  0890  3000               	movlw	0
  8498  0891  00A5               	movwf	___flmul@a+1
  8499  0892  3000               	movlw	0
  8500  0893  00A4               	movwf	___flmul@a
  8501  0894                     l3341:	
  8502  0894  17A6               	bsf	___flmul@a+2,7
  8503  0895  289E               	goto	l3345
  8504  0896                     l3343:	
  8505  0896  3000               	movlw	0
  8506  0897  00A7               	movwf	___flmul@a+3
  8507  0898  3000               	movlw	0
  8508  0899  00A6               	movwf	___flmul@a+2
  8509  089A  3000               	movlw	0
  8510  089B  00A5               	movwf	___flmul@a+1
  8511  089C  3000               	movlw	0
  8512  089D  00A4               	movwf	___flmul@a
  8513  089E                     l3345:	
  8514  089E  0832               	movf	___flmul@aexp,w
  8515  089F  1D03               	btfss	3,2
  8516  08A0  0833               	movf	___flmul@bexp,w
  8517  08A1  1D03               	btfss	3,2
  8518  08A2  28AC               	goto	l3353
  8519  08A3  3000               	movlw	0
  8520  08A4  00A3               	movwf	?___flmul+3
  8521  08A5  3000               	movlw	0
  8522  08A6  00A2               	movwf	?___flmul+2
  8523  08A7  3000               	movlw	0
  8524  08A8  00A1               	movwf	?___flmul+1
  8525  08A9  3000               	movlw	0
  8526  08AA  00A0               	movwf	?___flmul
  8527  08AB  0008               	return
  8528  08AC                     l3353:	
  8529  08AC  0820               	movf	___flmul@b,w
  8530  08AD  00A8               	movwf	??___flmul
  8531  08AE  0828               	movf	??___flmul,w
  8532  08AF  00F0               	movwf	__Umul8_16@multiplicand
  8533  08B0  0826               	movf	___flmul@a+2,w
  8534  08B1  319D  2567  3188   	fcall	__Umul8_16
  8535  08B4  0871               	movf	?__Umul8_16+1,w
  8536  08B5  0140               	movlb	0	; select bank0
  8537  08B6  00B9               	movwf	___flmul@temp+1
  8538  08B7  0870               	movf	?__Umul8_16,w
  8539  08B8  00B8               	movwf	___flmul@temp
  8540  08B9  0838               	movf	___flmul@temp,w
  8541  08BA  00A8               	movwf	??___flmul
  8542  08BB  01A9               	clrf	??___flmul+1
  8543  08BC  01AA               	clrf	??___flmul+2
  8544  08BD  01AB               	clrf	??___flmul+3
  8545  08BE  082B               	movf	??___flmul+3,w
  8546  08BF  00B1               	movwf	___flmul@grs+3
  8547  08C0  082A               	movf	??___flmul+2,w
  8548  08C1  00B0               	movwf	___flmul@grs+2
  8549  08C2  0829               	movf	??___flmul+1,w
  8550  08C3  00AF               	movwf	___flmul@grs+1
  8551  08C4  0828               	movf	??___flmul,w
  8552  08C5  00AE               	movwf	___flmul@grs
  8553  08C6  0839               	movf	___flmul@temp+1,w
  8554  08C7  00A8               	movwf	??___flmul
  8555  08C8  01A9               	clrf	??___flmul+1
  8556  08C9  01AA               	clrf	??___flmul+2
  8557  08CA  01AB               	clrf	??___flmul+3
  8558  08CB  082B               	movf	??___flmul+3,w
  8559  08CC  00B7               	movwf	___flmul@prod+3
  8560  08CD  082A               	movf	??___flmul+2,w
  8561  08CE  00B6               	movwf	___flmul@prod+2
  8562  08CF  0829               	movf	??___flmul+1,w
  8563  08D0  00B5               	movwf	___flmul@prod+1
  8564  08D1  0828               	movf	??___flmul,w
  8565  08D2  00B4               	movwf	___flmul@prod
  8566  08D3  0821               	movf	___flmul@b+1,w
  8567  08D4  00A8               	movwf	??___flmul
  8568  08D5  0828               	movf	??___flmul,w
  8569  08D6  00F0               	movwf	__Umul8_16@multiplicand
  8570  08D7  0825               	movf	___flmul@a+1,w
  8571  08D8  319D  2567  3188   	fcall	__Umul8_16
  8572  08DB  0871               	movf	?__Umul8_16+1,w
  8573  08DC  0140               	movlb	0	; select bank0
  8574  08DD  00B9               	movwf	___flmul@temp+1
  8575  08DE  0870               	movf	?__Umul8_16,w
  8576  08DF  00B8               	movwf	___flmul@temp
  8577  08E0  0838               	movf	___flmul@temp,w
  8578  08E1  00A8               	movwf	??___flmul
  8579  08E2  01A9               	clrf	??___flmul+1
  8580  08E3  01AA               	clrf	??___flmul+2
  8581  08E4  01AB               	clrf	??___flmul+3
  8582  08E5  0828               	movf	??___flmul,w
  8583  08E6  07AE               	addwf	___flmul@grs,f
  8584  08E7  0829               	movf	??___flmul+1,w
  8585  08E8  3DAF               	addwfc	___flmul@grs+1,f
  8586  08E9  082A               	movf	??___flmul+2,w
  8587  08EA  3DB0               	addwfc	___flmul@grs+2,f
  8588  08EB  082B               	movf	??___flmul+3,w
  8589  08EC  3DB1               	addwfc	___flmul@grs+3,f
  8590  08ED  0839               	movf	___flmul@temp+1,w
  8591  08EE  00A8               	movwf	??___flmul
  8592  08EF  01A9               	clrf	??___flmul+1
  8593  08F0  01AA               	clrf	??___flmul+2
  8594  08F1  01AB               	clrf	??___flmul+3
  8595  08F2  0828               	movf	??___flmul,w
  8596  08F3  07B4               	addwf	___flmul@prod,f
  8597  08F4  0829               	movf	??___flmul+1,w
  8598  08F5  3DB5               	addwfc	___flmul@prod+1,f
  8599  08F6  082A               	movf	??___flmul+2,w
  8600  08F7  3DB6               	addwfc	___flmul@prod+2,f
  8601  08F8  082B               	movf	??___flmul+3,w
  8602  08F9  3DB7               	addwfc	___flmul@prod+3,f
  8603  08FA  0822               	movf	___flmul@b+2,w
  8604  08FB  00A8               	movwf	??___flmul
  8605  08FC  0828               	movf	??___flmul,w
  8606  08FD  00F0               	movwf	__Umul8_16@multiplicand
  8607  08FE  0824               	movf	___flmul@a,w
  8608  08FF  319D  2567  3188   	fcall	__Umul8_16
  8609  0902  0871               	movf	?__Umul8_16+1,w
  8610  0903  0140               	movlb	0	; select bank0
  8611  0904  00B9               	movwf	___flmul@temp+1
  8612  0905  0870               	movf	?__Umul8_16,w
  8613  0906  00B8               	movwf	___flmul@temp
  8614  0907  0838               	movf	___flmul@temp,w
  8615  0908  00A8               	movwf	??___flmul
  8616  0909  01A9               	clrf	??___flmul+1
  8617  090A  01AA               	clrf	??___flmul+2
  8618  090B  01AB               	clrf	??___flmul+3
  8619  090C  0828               	movf	??___flmul,w
  8620  090D  07AE               	addwf	___flmul@grs,f
  8621  090E  0829               	movf	??___flmul+1,w
  8622  090F  3DAF               	addwfc	___flmul@grs+1,f
  8623  0910  082A               	movf	??___flmul+2,w
  8624  0911  3DB0               	addwfc	___flmul@grs+2,f
  8625  0912  082B               	movf	??___flmul+3,w
  8626  0913  3DB1               	addwfc	___flmul@grs+3,f
  8627  0914  0839               	movf	___flmul@temp+1,w
  8628  0915  00A8               	movwf	??___flmul
  8629  0916  01A9               	clrf	??___flmul+1
  8630  0917  01AA               	clrf	??___flmul+2
  8631  0918  01AB               	clrf	??___flmul+3
  8632  0919  0828               	movf	??___flmul,w
  8633  091A  07B4               	addwf	___flmul@prod,f
  8634  091B  0829               	movf	??___flmul+1,w
  8635  091C  3DB5               	addwfc	___flmul@prod+1,f
  8636  091D  082A               	movf	??___flmul+2,w
  8637  091E  3DB6               	addwfc	___flmul@prod+2,f
  8638  091F  082B               	movf	??___flmul+3,w
  8639  0920  3DB7               	addwfc	___flmul@prod+3,f
  8640  0921  3008               	movlw	8
  8641  0922                     u4655:	
  8642  0922  35AE               	lslf	___flmul@grs,f
  8643  0923  0DAF               	rlf	___flmul@grs+1,f
  8644  0924  0DB0               	rlf	___flmul@grs+2,f
  8645  0925  0DB1               	rlf	___flmul@grs+3,f
  8646  0926  0B89               	decfsz	9,f
  8647  0927  2922               	goto	u4655
  8648  0928  0821               	movf	___flmul@b+1,w
  8649  0929  00A8               	movwf	??___flmul
  8650  092A  0828               	movf	??___flmul,w
  8651  092B  00F0               	movwf	__Umul8_16@multiplicand
  8652  092C  0824               	movf	___flmul@a,w
  8653  092D  319D  2567  3188   	fcall	__Umul8_16
  8654  0930  0871               	movf	?__Umul8_16+1,w
  8655  0931  0140               	movlb	0	; select bank0
  8656  0932  00B9               	movwf	___flmul@temp+1
  8657  0933  0870               	movf	?__Umul8_16,w
  8658  0934  00B8               	movwf	___flmul@temp
  8659  0935  0838               	movf	___flmul@temp,w
  8660  0936  07AE               	addwf	___flmul@grs,f
  8661  0937  0839               	movf	___flmul@temp+1,w
  8662  0938  3DAF               	addwfc	___flmul@grs+1,f
  8663  0939  3000               	movlw	0
  8664  093A  3DB0               	addwfc	___flmul@grs+2,f
  8665  093B  3DB1               	addwfc	___flmul@grs+3,f
  8666  093C  0820               	movf	___flmul@b,w
  8667  093D  00A8               	movwf	??___flmul
  8668  093E  0828               	movf	??___flmul,w
  8669  093F  00F0               	movwf	__Umul8_16@multiplicand
  8670  0940  0825               	movf	___flmul@a+1,w
  8671  0941  319D  2567  3188   	fcall	__Umul8_16
  8672  0944  0871               	movf	?__Umul8_16+1,w
  8673  0945  0140               	movlb	0	; select bank0
  8674  0946  00B9               	movwf	___flmul@temp+1
  8675  0947  0870               	movf	?__Umul8_16,w
  8676  0948  00B8               	movwf	___flmul@temp
  8677  0949  0838               	movf	___flmul@temp,w
  8678  094A  07AE               	addwf	___flmul@grs,f
  8679  094B  0839               	movf	___flmul@temp+1,w
  8680  094C  3DAF               	addwfc	___flmul@grs+1,f
  8681  094D  3000               	movlw	0
  8682  094E  3DB0               	addwfc	___flmul@grs+2,f
  8683  094F  3DB1               	addwfc	___flmul@grs+3,f
  8684  0950  3008               	movlw	8
  8685  0951                     u4665:	
  8686  0951  35AE               	lslf	___flmul@grs,f
  8687  0952  0DAF               	rlf	___flmul@grs+1,f
  8688  0953  0DB0               	rlf	___flmul@grs+2,f
  8689  0954  0DB1               	rlf	___flmul@grs+3,f
  8690  0955  0B89               	decfsz	9,f
  8691  0956  2951               	goto	u4665
  8692  0957  0820               	movf	___flmul@b,w
  8693  0958  00A8               	movwf	??___flmul
  8694  0959  0828               	movf	??___flmul,w
  8695  095A  00F0               	movwf	__Umul8_16@multiplicand
  8696  095B  0824               	movf	___flmul@a,w
  8697  095C  319D  2567  3188   	fcall	__Umul8_16
  8698  095F  0871               	movf	?__Umul8_16+1,w
  8699  0960  0140               	movlb	0	; select bank0
  8700  0961  00B9               	movwf	___flmul@temp+1
  8701  0962  0870               	movf	?__Umul8_16,w
  8702  0963  00B8               	movwf	___flmul@temp
  8703  0964  0838               	movf	___flmul@temp,w
  8704  0965  07AE               	addwf	___flmul@grs,f
  8705  0966  0839               	movf	___flmul@temp+1,w
  8706  0967  3DAF               	addwfc	___flmul@grs+1,f
  8707  0968  3000               	movlw	0
  8708  0969  3DB0               	addwfc	___flmul@grs+2,f
  8709  096A  3DB1               	addwfc	___flmul@grs+3,f
  8710  096B  0821               	movf	___flmul@b+1,w
  8711  096C  00A8               	movwf	??___flmul
  8712  096D  0828               	movf	??___flmul,w
  8713  096E  00F0               	movwf	__Umul8_16@multiplicand
  8714  096F  0826               	movf	___flmul@a+2,w
  8715  0970  319D  2567  3188   	fcall	__Umul8_16
  8716  0973  0871               	movf	?__Umul8_16+1,w
  8717  0974  0140               	movlb	0	; select bank0
  8718  0975  00B9               	movwf	___flmul@temp+1
  8719  0976  0870               	movf	?__Umul8_16,w
  8720  0977  00B8               	movwf	___flmul@temp
  8721  0978  0838               	movf	___flmul@temp,w
  8722  0979  07B4               	addwf	___flmul@prod,f
  8723  097A  0839               	movf	___flmul@temp+1,w
  8724  097B  3DB5               	addwfc	___flmul@prod+1,f
  8725  097C  3000               	movlw	0
  8726  097D  3DB6               	addwfc	___flmul@prod+2,f
  8727  097E  3DB7               	addwfc	___flmul@prod+3,f
  8728  097F  0822               	movf	___flmul@b+2,w
  8729  0980  00A8               	movwf	??___flmul
  8730  0981  0828               	movf	??___flmul,w
  8731  0982  00F0               	movwf	__Umul8_16@multiplicand
  8732  0983  0825               	movf	___flmul@a+1,w
  8733  0984  319D  2567  3188   	fcall	__Umul8_16
  8734  0987  0871               	movf	?__Umul8_16+1,w
  8735  0988  0140               	movlb	0	; select bank0
  8736  0989  00B9               	movwf	___flmul@temp+1
  8737  098A  0870               	movf	?__Umul8_16,w
  8738  098B  00B8               	movwf	___flmul@temp
  8739  098C  0838               	movf	___flmul@temp,w
  8740  098D  07B4               	addwf	___flmul@prod,f
  8741  098E  0839               	movf	___flmul@temp+1,w
  8742  098F  3DB5               	addwfc	___flmul@prod+1,f
  8743  0990  3000               	movlw	0
  8744  0991  3DB6               	addwfc	___flmul@prod+2,f
  8745  0992  3DB7               	addwfc	___flmul@prod+3,f
  8746  0993  0822               	movf	___flmul@b+2,w
  8747  0994  00A8               	movwf	??___flmul
  8748  0995  0828               	movf	??___flmul,w
  8749  0996  00F0               	movwf	__Umul8_16@multiplicand
  8750  0997  0826               	movf	___flmul@a+2,w
  8751  0998  319D  2567  3188   	fcall	__Umul8_16
  8752  099B  0871               	movf	?__Umul8_16+1,w
  8753  099C  0140               	movlb	0	; select bank0
  8754  099D  00B9               	movwf	___flmul@temp+1
  8755  099E  0870               	movf	?__Umul8_16,w
  8756  099F  00B8               	movwf	___flmul@temp
  8757  09A0  0838               	movf	___flmul@temp,w
  8758  09A1  00A8               	movwf	??___flmul
  8759  09A2  0839               	movf	___flmul@temp+1,w
  8760  09A3  00A9               	movwf	??___flmul+1
  8761  09A4  01AA               	clrf	??___flmul+2
  8762  09A5  01AB               	clrf	??___flmul+3
  8763  09A6  3008               	movlw	8
  8764  09A7                     u4675:	
  8765  09A7  35A8               	lslf	??___flmul,f
  8766  09A8  0DA9               	rlf	??___flmul+1,f
  8767  09A9  0DAA               	rlf	??___flmul+2,f
  8768  09AA  0DAB               	rlf	??___flmul+3,f
  8769  09AB  0B89               	decfsz	9,f
  8770  09AC  29A7               	goto	u4675
  8771  09AD  0828               	movf	??___flmul,w
  8772  09AE  07B4               	addwf	___flmul@prod,f
  8773  09AF  0829               	movf	??___flmul+1,w
  8774  09B0  3DB5               	addwfc	___flmul@prod+1,f
  8775  09B1  082A               	movf	??___flmul+2,w
  8776  09B2  3DB6               	addwfc	___flmul@prod+2,f
  8777  09B3  082B               	movf	??___flmul+3,w
  8778  09B4  3DB7               	addwfc	___flmul@prod+3,f
  8779  09B5  082E               	movf	___flmul@grs,w
  8780  09B6  00A8               	movwf	??___flmul
  8781  09B7  082F               	movf	___flmul@grs+1,w
  8782  09B8  00A9               	movwf	??___flmul+1
  8783  09B9  0830               	movf	___flmul@grs+2,w
  8784  09BA  00AA               	movwf	??___flmul+2
  8785  09BB  0831               	movf	___flmul@grs+3,w
  8786  09BC  00AB               	movwf	??___flmul+3
  8787  09BD  3018               	movlw	24
  8788  09BE                     u4685:	
  8789  09BE  36AB               	lsrf	??___flmul+3,f
  8790  09BF  0CAA               	rrf	??___flmul+2,f
  8791  09C0  0CA9               	rrf	??___flmul+1,f
  8792  09C1  0CA8               	rrf	??___flmul,f
  8793  09C2  0B89               	decfsz	9,f
  8794  09C3  29BE               	goto	u4685
  8795  09C4  0828               	movf	??___flmul,w
  8796  09C5  07B4               	addwf	___flmul@prod,f
  8797  09C6  0829               	movf	??___flmul+1,w
  8798  09C7  3DB5               	addwfc	___flmul@prod+1,f
  8799  09C8  082A               	movf	??___flmul+2,w
  8800  09C9  3DB6               	addwfc	___flmul@prod+2,f
  8801  09CA  082B               	movf	??___flmul+3,w
  8802  09CB  3DB7               	addwfc	___flmul@prod+3,f
  8803  09CC  3008               	movlw	8
  8804  09CD                     u4695:	
  8805  09CD  35AE               	lslf	___flmul@grs,f
  8806  09CE  0DAF               	rlf	___flmul@grs+1,f
  8807  09CF  0DB0               	rlf	___flmul@grs+2,f
  8808  09D0  0DB1               	rlf	___flmul@grs+3,f
  8809  09D1  0B89               	decfsz	9,f
  8810  09D2  29CD               	goto	u4695
  8811  09D3  0833               	movf	___flmul@bexp,w
  8812  09D4  0732               	addwf	___flmul@aexp,w
  8813  09D5  00A8               	movwf	??___flmul
  8814  09D6  01A9               	clrf	??___flmul+1
  8815  09D7  0DA9               	rlf	??___flmul+1,f
  8816  09D8  0828               	movf	??___flmul,w
  8817  09D9  3E82               	addlw	130
  8818  09DA  00B8               	movwf	___flmul@temp
  8819  09DB  30FF               	movlw	255
  8820  09DC  3D29               	addwfc	??___flmul+1,w
  8821  09DD  00B9               	movwf	___flmul@temp+1
  8822  09DE                     l3405:	
  8823  09DE  1BB6               	btfsc	___flmul@prod+2,7
  8824  09DF  29F5               	goto	l3407
  8825  09E0  3001               	movlw	1
  8826  09E1                     u4705:	
  8827  09E1  35B4               	lslf	___flmul@prod,f
  8828  09E2  0DB5               	rlf	___flmul@prod+1,f
  8829  09E3  0DB6               	rlf	___flmul@prod+2,f
  8830  09E4  0DB7               	rlf	___flmul@prod+3,f
  8831  09E5  0B89               	decfsz	9,f
  8832  09E6  29E1               	goto	u4705
  8833  09E7  1BB1               	btfsc	___flmul@grs+3,7
  8834  09E8  1434               	bsf	___flmul@prod,0
  8835  09E9  3001               	movlw	1
  8836  09EA                     u4725:	
  8837  09EA  35AE               	lslf	___flmul@grs,f
  8838  09EB  0DAF               	rlf	___flmul@grs+1,f
  8839  09EC  0DB0               	rlf	___flmul@grs+2,f
  8840  09ED  0DB1               	rlf	___flmul@grs+3,f
  8841  09EE  0B89               	decfsz	9,f
  8842  09EF  29EA               	goto	u4725
  8843  09F0  30FF               	movlw	255
  8844  09F1  07B8               	addwf	___flmul@temp,f
  8845  09F2  30FF               	movlw	255
  8846  09F3  3DB9               	addwfc	___flmul@temp+1,f
  8847  09F4  29DE               	goto	l3405
  8848  09F5                     l3407:	
  8849  09F5  01B2               	clrf	___flmul@aexp
  8850  09F6  1FB1               	btfss	___flmul@grs+3,7
  8851  09F7  2A0E               	goto	l3417
  8852  09F8  30FF               	movlw	255
  8853  09F9  052E               	andwf	___flmul@grs,w
  8854  09FA  00A8               	movwf	??___flmul
  8855  09FB  30FF               	movlw	255
  8856  09FC  052F               	andwf	___flmul@grs+1,w
  8857  09FD  00A9               	movwf	??___flmul+1
  8858  09FE  30FF               	movlw	255
  8859  09FF  0530               	andwf	___flmul@grs+2,w
  8860  0A00  00AA               	movwf	??___flmul+2
  8861  0A01  307F               	movlw	127
  8862  0A02  0531               	andwf	___flmul@grs+3,w
  8863  0A03  00AB               	movwf	??___flmul+3
  8864  0A04  082B               	movf	??___flmul+3,w
  8865  0A05  042A               	iorwf	??___flmul+2,w
  8866  0A06  0429               	iorwf	??___flmul+1,w
  8867  0A07  0428               	iorwf	??___flmul,w
  8868  0A08  1D03               	btfss	3,2
  8869  0A09  2A0C               	goto	l3415
  8870  0A0A  1C34               	btfss	___flmul@prod,0
  8871  0A0B  2A0E               	goto	l3417
  8872  0A0C                     l3415:	
  8873  0A0C  01B2               	clrf	___flmul@aexp
  8874  0A0D  0AB2               	incf	___flmul@aexp,f
  8875  0A0E                     l3417:	
  8876  0A0E  0832               	movf	___flmul@aexp,w
  8877  0A0F  1903               	btfsc	3,2
  8878  0A10  2A37               	goto	l3427
  8879  0A11  3001               	movlw	1
  8880  0A12  07B4               	addwf	___flmul@prod,f
  8881  0A13  3000               	movlw	0
  8882  0A14  3DB5               	addwfc	___flmul@prod+1,f
  8883  0A15  3000               	movlw	0
  8884  0A16  3DB6               	addwfc	___flmul@prod+2,f
  8885  0A17  3000               	movlw	0
  8886  0A18  3DB7               	addwfc	___flmul@prod+3,f
  8887  0A19  1C37               	btfss	___flmul@prod+3,0
  8888  0A1A  2A37               	goto	l3427
  8889  0A1B  0834               	movf	___flmul@prod,w
  8890  0A1C  00A8               	movwf	??___flmul
  8891  0A1D  0835               	movf	___flmul@prod+1,w
  8892  0A1E  00A9               	movwf	??___flmul+1
  8893  0A1F  0836               	movf	___flmul@prod+2,w
  8894  0A20  00AA               	movwf	??___flmul+2
  8895  0A21  0837               	movf	___flmul@prod+3,w
  8896  0A22  00AB               	movwf	??___flmul+3
  8897  0A23  3001               	movlw	1
  8898  0A24  00AC               	movwf	??___flmul+4
  8899  0A25                     u4795:	
  8900  0A25  37AB               	asrf	??___flmul+3,f
  8901  0A26  0CAA               	rrf	??___flmul+2,f
  8902  0A27  0CA9               	rrf	??___flmul+1,f
  8903  0A28  0CA8               	rrf	??___flmul,f
  8904  0A29  0BAC               	decfsz	??___flmul+4,f
  8905  0A2A  2A25               	goto	u4795
  8906  0A2B  082B               	movf	??___flmul+3,w
  8907  0A2C  00B7               	movwf	___flmul@prod+3
  8908  0A2D  082A               	movf	??___flmul+2,w
  8909  0A2E  00B6               	movwf	___flmul@prod+2
  8910  0A2F  0829               	movf	??___flmul+1,w
  8911  0A30  00B5               	movwf	___flmul@prod+1
  8912  0A31  0828               	movf	??___flmul,w
  8913  0A32  00B4               	movwf	___flmul@prod
  8914  0A33  3001               	movlw	1
  8915  0A34  07B8               	addwf	___flmul@temp,f
  8916  0A35  3000               	movlw	0
  8917  0A36  3DB9               	addwfc	___flmul@temp+1,f
  8918  0A37                     l3427:	
  8919  0A37  0839               	movf	___flmul@temp+1,w
  8920  0A38  3A80               	xorlw	128
  8921  0A39  00A8               	movwf	??___flmul
  8922  0A3A  3080               	movlw	128
  8923  0A3B  0228               	subwf	??___flmul,w
  8924  0A3C  1D03               	skipz
  8925  0A3D  2A40               	goto	u4805
  8926  0A3E  30FF               	movlw	255
  8927  0A3F  0238               	subwf	___flmul@temp,w
  8928  0A40                     u4805:	
  8929  0A40  1C03               	skipc
  8930  0A41  2A4C               	goto	l3431
  8931  0A42  307F               	movlw	127
  8932  0A43  0140               	movlb	0	; select bank0
  8933  0A44  00B7               	movwf	___flmul@prod+3
  8934  0A45  3080               	movlw	128
  8935  0A46  00B6               	movwf	___flmul@prod+2
  8936  0A47  3000               	movlw	0
  8937  0A48  00B5               	movwf	___flmul@prod+1
  8938  0A49  3000               	movlw	0
  8939  0A4A  00B4               	movwf	___flmul@prod
  8940  0A4B  2A76               	goto	l782
  8941  0A4C                     l3431:	
  8942  0A4C  0140               	movlb	0	; select bank0
  8943  0A4D  0839               	movf	___flmul@temp+1,w
  8944  0A4E  3A80               	xorlw	128
  8945  0A4F  00A8               	movwf	??___flmul
  8946  0A50  3080               	movlw	128
  8947  0A51  0228               	subwf	??___flmul,w
  8948  0A52  1D03               	skipz
  8949  0A53  2A56               	goto	u4815
  8950  0A54  3001               	movlw	1
  8951  0A55  0238               	subwf	___flmul@temp,w
  8952  0A56                     u4815:	
  8953  0A56  1803               	skipnc
  8954  0A57  2A63               	goto	l3437
  8955  0A58  3000               	movlw	0
  8956  0A59  0140               	movlb	0	; select bank0
  8957  0A5A  00B7               	movwf	___flmul@prod+3
  8958  0A5B  3000               	movlw	0
  8959  0A5C  00B6               	movwf	___flmul@prod+2
  8960  0A5D  3000               	movlw	0
  8961  0A5E  00B5               	movwf	___flmul@prod+1
  8962  0A5F  3000               	movlw	0
  8963  0A60  00B4               	movwf	___flmul@prod
  8964  0A61  01AD               	clrf	___flmul@sign
  8965  0A62  2A76               	goto	l782
  8966  0A63                     l3437:	
  8967  0A63  0140               	movlb	0	; select bank0
  8968  0A64  0838               	movf	___flmul@temp,w
  8969  0A65  00A8               	movwf	??___flmul
  8970  0A66  0828               	movf	??___flmul,w
  8971  0A67  00B3               	movwf	___flmul@bexp
  8972  0A68  30FF               	movlw	255
  8973  0A69  05B4               	andwf	___flmul@prod,f
  8974  0A6A  30FF               	movlw	255
  8975  0A6B  05B5               	andwf	___flmul@prod+1,f
  8976  0A6C  307F               	movlw	127
  8977  0A6D  05B6               	andwf	___flmul@prod+2,f
  8978  0A6E  3000               	movlw	0
  8979  0A6F  05B7               	andwf	___flmul@prod+3,f
  8980  0A70  1833               	btfsc	___flmul@bexp,0
  8981  0A71  17B6               	bsf	___flmul@prod+2,7
  8982  0A72  3633               	lsrf	___flmul@bexp,w
  8983  0A73  00A8               	movwf	??___flmul
  8984  0A74  0828               	movf	??___flmul,w
  8985  0A75  00B7               	movwf	___flmul@prod+3
  8986  0A76                     l782:	
  8987  0A76  082D               	movf	___flmul@sign,w
  8988  0A77  00A8               	movwf	??___flmul
  8989  0A78  0828               	movf	??___flmul,w
  8990  0A79  04B7               	iorwf	___flmul@prod+3,f
  8991  0A7A  0837               	movf	___flmul@prod+3,w
  8992  0A7B  00A3               	movwf	?___flmul+3
  8993  0A7C  0836               	movf	___flmul@prod+2,w
  8994  0A7D  00A2               	movwf	?___flmul+2
  8995  0A7E  0835               	movf	___flmul@prod+1,w
  8996  0A7F  00A1               	movwf	?___flmul+1
  8997  0A80  0834               	movf	___flmul@prod,w
  8998  0A81  00A0               	movwf	?___flmul
  8999  0A82  0008               	return
  9000  0A83                     __end_of___flmul:	
  9001                           
  9002                           	psect	text21
  9003  1D67                     __ptext21:	
  9004 ;; *************** function __Umul8_16 *****************
  9005 ;; Defined at:
  9006 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\Umul8_16.c"
  9007 ;; Parameters:    Size  Location     Type
  9008 ;;  multiplier      1    wreg     unsigned char 
  9009 ;;  multiplicand    1    0[COMMON] unsigned char 
  9010 ;; Auto vars:     Size  Location     Type
  9011 ;;  multiplier      1    8[COMMON] unsigned char 
  9012 ;;  word_mpld       2    6[COMMON] unsigned int 
  9013 ;;  product         2    4[COMMON] unsigned int 
  9014 ;; Return value:  Size  Location     Type
  9015 ;;                  2    0[COMMON] unsigned int 
  9016 ;; Registers used:
  9017 ;;		wreg, status,2, status,0
  9018 ;; Tracked objects:
  9019 ;;		On entry : 0/0
  9020 ;;		On exit  : 0/0
  9021 ;;		Unchanged: 0/0
  9022 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
  9023 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  9024 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  9025 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  9026 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  9027 ;;Total ram usage:        9 bytes
  9028 ;; Hardware stack levels used:    1
  9029 ;; This function calls:
  9030 ;;		Nothing
  9031 ;; This function is called by:
  9032 ;;		___flmul
  9033 ;; This function uses a non-reentrant model
  9034 ;;
  9035                           
  9036                           
  9037                           ;psect for function __Umul8_16
  9038  1D67                     __Umul8_16:	
  9039                           
  9040                           ;incstack = 0
  9041                           ; Regs used in __Umul8_16: [wreg+status,2+status,0]
  9042                           ;__Umul8_16@multiplier stored from wreg
  9043  1D67  00F8               	movwf	__Umul8_16@multiplier
  9044  1D68  01F4               	clrf	__Umul8_16@product
  9045  1D69  01F5               	clrf	__Umul8_16@product+1
  9046  1D6A  0870               	movf	__Umul8_16@multiplicand,w
  9047  1D6B  00F2               	movwf	??__Umul8_16
  9048  1D6C  01F3               	clrf	??__Umul8_16+1
  9049  1D6D  0872               	movf	??__Umul8_16,w
  9050  1D6E  00F6               	movwf	__Umul8_16@word_mpld
  9051  1D6F  0873               	movf	??__Umul8_16+1,w
  9052  1D70  00F7               	movwf	__Umul8_16@word_mpld+1
  9053  1D71                     l2881:	
  9054  1D71  1C78               	btfss	__Umul8_16@multiplier,0
  9055  1D72  2D77               	goto	l947
  9056  1D73  0876               	movf	__Umul8_16@word_mpld,w
  9057  1D74  07F4               	addwf	__Umul8_16@product,f
  9058  1D75  0877               	movf	__Umul8_16@word_mpld+1,w
  9059  1D76  3DF5               	addwfc	__Umul8_16@product+1,f
  9060  1D77                     l947:	
  9061  1D77  3001               	movlw	1
  9062  1D78                     u3555:	
  9063  1D78  35F6               	lslf	__Umul8_16@word_mpld,f
  9064  1D79  0DF7               	rlf	__Umul8_16@word_mpld+1,f
  9065  1D7A  0B89               	decfsz	9,f
  9066  1D7B  2D78               	goto	u3555
  9067  1D7C  1003               	clrc
  9068  1D7D  0CF8               	rrf	__Umul8_16@multiplier,f
  9069  1D7E  0878               	movf	__Umul8_16@multiplier,w
  9070  1D7F  1D03               	btfss	3,2
  9071  1D80  2D71               	goto	l2881
  9072  1D81  0875               	movf	__Umul8_16@product+1,w
  9073  1D82  00F1               	movwf	?__Umul8_16+1
  9074  1D83  0874               	movf	__Umul8_16@product,w
  9075  1D84  00F0               	movwf	?__Umul8_16
  9076  1D85  0008               	return
  9077  1D86                     __end_of__Umul8_16:	
  9078                           
  9079                           	psect	text22
  9080  132A                     __ptext22:	
  9081 ;; *************** function ___flge *****************
  9082 ;; Defined at:
  9083 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\flge.c"
  9084 ;; Parameters:    Size  Location     Type
  9085 ;;  ff1             4   26[BANK0 ] unsigned int 
  9086 ;;  ff2             4   30[BANK0 ] unsigned int 
  9087 ;; Auto vars:     Size  Location     Type
  9088 ;;		None
  9089 ;; Return value:  Size  Location     Type
  9090 ;;		None               void
  9091 ;; Registers used:
  9092 ;;		wreg, status,2, status,0
  9093 ;; Tracked objects:
  9094 ;;		On entry : 0/0
  9095 ;;		On exit  : 0/0
  9096 ;;		Unchanged: 0/0
  9097 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
  9098 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  9099 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  9100 ;;      Temps:          0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  9101 ;;      Totals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  9102 ;;Total ram usage:       16 bytes
  9103 ;; Hardware stack levels used:    1
  9104 ;; This function calls:
  9105 ;;		Nothing
  9106 ;; This function is called by:
  9107 ;;		_main
  9108 ;;		_efgtoa
  9109 ;; This function uses a non-reentrant model
  9110 ;;
  9111                           
  9112                           
  9113                           ;psect for function ___flge
  9114  132A                     ___flge:	
  9115                           
  9116                           ;incstack = 0
  9117                           ; Regs used in ___flge: [wreg+status,2+status,0]
  9118  132A  3000               	movlw	0
  9119  132B  0140               	movlb	0	; select bank0
  9120  132C  053A               	andwf	___flge@ff1,w
  9121  132D  00C2               	movwf	??___flge
  9122  132E  3000               	movlw	0
  9123  132F  053B               	andwf	___flge@ff1+1,w
  9124  1330  00C3               	movwf	??___flge+1
  9125  1331  3080               	movlw	128
  9126  1332  053C               	andwf	___flge@ff1+2,w
  9127  1333  00C4               	movwf	??___flge+2
  9128  1334  307F               	movlw	127
  9129  1335  053D               	andwf	___flge@ff1+3,w
  9130  1336  00C5               	movwf	??___flge+3
  9131  1337  0845               	movf	??___flge+3,w
  9132  1338  0444               	iorwf	??___flge+2,w
  9133  1339  0443               	iorwf	??___flge+1,w
  9134  133A  0442               	iorwf	??___flge,w
  9135  133B  1D03               	skipz
  9136  133C  2B45               	goto	l551
  9137  133D  3000               	movlw	0
  9138  133E  00BD               	movwf	___flge@ff1+3
  9139  133F  3000               	movlw	0
  9140  1340  00BC               	movwf	___flge@ff1+2
  9141  1341  3000               	movlw	0
  9142  1342  00BB               	movwf	___flge@ff1+1
  9143  1343  3000               	movlw	0
  9144  1344  00BA               	movwf	___flge@ff1
  9145  1345                     l551:	
  9146  1345  3000               	movlw	0
  9147  1346  053E               	andwf	___flge@ff2,w
  9148  1347  00C2               	movwf	??___flge
  9149  1348  3000               	movlw	0
  9150  1349  053F               	andwf	___flge@ff2+1,w
  9151  134A  00C3               	movwf	??___flge+1
  9152  134B  3080               	movlw	128
  9153  134C  0540               	andwf	___flge@ff2+2,w
  9154  134D  00C4               	movwf	??___flge+2
  9155  134E  307F               	movlw	127
  9156  134F  0541               	andwf	___flge@ff2+3,w
  9157  1350  00C5               	movwf	??___flge+3
  9158  1351  0845               	movf	??___flge+3,w
  9159  1352  0444               	iorwf	??___flge+2,w
  9160  1353  0443               	iorwf	??___flge+1,w
  9161  1354  0442               	iorwf	??___flge,w
  9162  1355  1D03               	skipz
  9163  1356  2B5F               	goto	l3099
  9164  1357  3000               	movlw	0
  9165  1358  00C1               	movwf	___flge@ff2+3
  9166  1359  3000               	movlw	0
  9167  135A  00C0               	movwf	___flge@ff2+2
  9168  135B  3000               	movlw	0
  9169  135C  00BF               	movwf	___flge@ff2+1
  9170  135D  3000               	movlw	0
  9171  135E  00BE               	movwf	___flge@ff2
  9172  135F                     l3099:	
  9173  135F  1FBD               	btfss	___flge@ff1+3,7
  9174  1360  2B88               	goto	l3103
  9175  1361  3000               	movlw	0
  9176  1362  00C2               	movwf	??___flge
  9177  1363  3000               	movlw	0
  9178  1364  00C3               	movwf	??___flge+1
  9179  1365  3000               	movlw	0
  9180  1366  00C4               	movwf	??___flge+2
  9181  1367  3080               	movlw	128
  9182  1368  00C5               	movwf	??___flge+3
  9183  1369  093A               	comf	___flge@ff1,w
  9184  136A  00C6               	movwf	??___flge+4
  9185  136B  093B               	comf	___flge@ff1+1,w
  9186  136C  00C7               	movwf	??___flge+5
  9187  136D  093C               	comf	___flge@ff1+2,w
  9188  136E  00C8               	movwf	??___flge+6
  9189  136F  093D               	comf	___flge@ff1+3,w
  9190  1370  00C9               	movwf	??___flge+7
  9191  1371  0AC6               	incf	??___flge+4,f
  9192  1372  1903               	skipnz
  9193  1373  0AC7               	incf	??___flge+5,f
  9194  1374  1903               	skipnz
  9195  1375  0AC8               	incf	??___flge+6,f
  9196  1376  1903               	skipnz
  9197  1377  0AC9               	incf	??___flge+7,f
  9198  1378  0846               	movf	??___flge+4,w
  9199  1379  07C2               	addwf	??___flge,f
  9200  137A  0847               	movf	??___flge+5,w
  9201  137B  3DC3               	addwfc	??___flge+1,f
  9202  137C  0848               	movf	??___flge+6,w
  9203  137D  3DC4               	addwfc	??___flge+2,f
  9204  137E  0849               	movf	??___flge+7,w
  9205  137F  3DC5               	addwfc	??___flge+3,f
  9206  1380  0845               	movf	??___flge+3,w
  9207  1381  00BD               	movwf	___flge@ff1+3
  9208  1382  0844               	movf	??___flge+2,w
  9209  1383  00BC               	movwf	___flge@ff1+2
  9210  1384  0843               	movf	??___flge+1,w
  9211  1385  00BB               	movwf	___flge@ff1+1
  9212  1386  0842               	movf	??___flge,w
  9213  1387  00BA               	movwf	___flge@ff1
  9214  1388                     l3103:	
  9215  1388  1FC1               	btfss	___flge@ff2+3,7
  9216  1389  2BB1               	goto	l3107
  9217  138A  3000               	movlw	0
  9218  138B  00C2               	movwf	??___flge
  9219  138C  3000               	movlw	0
  9220  138D  00C3               	movwf	??___flge+1
  9221  138E  3000               	movlw	0
  9222  138F  00C4               	movwf	??___flge+2
  9223  1390  3080               	movlw	128
  9224  1391  00C5               	movwf	??___flge+3
  9225  1392  093E               	comf	___flge@ff2,w
  9226  1393  00C6               	movwf	??___flge+4
  9227  1394  093F               	comf	___flge@ff2+1,w
  9228  1395  00C7               	movwf	??___flge+5
  9229  1396  0940               	comf	___flge@ff2+2,w
  9230  1397  00C8               	movwf	??___flge+6
  9231  1398  0941               	comf	___flge@ff2+3,w
  9232  1399  00C9               	movwf	??___flge+7
  9233  139A  0AC6               	incf	??___flge+4,f
  9234  139B  1903               	skipnz
  9235  139C  0AC7               	incf	??___flge+5,f
  9236  139D  1903               	skipnz
  9237  139E  0AC8               	incf	??___flge+6,f
  9238  139F  1903               	skipnz
  9239  13A0  0AC9               	incf	??___flge+7,f
  9240  13A1  0846               	movf	??___flge+4,w
  9241  13A2  07C2               	addwf	??___flge,f
  9242  13A3  0847               	movf	??___flge+5,w
  9243  13A4  3DC3               	addwfc	??___flge+1,f
  9244  13A5  0848               	movf	??___flge+6,w
  9245  13A6  3DC4               	addwfc	??___flge+2,f
  9246  13A7  0849               	movf	??___flge+7,w
  9247  13A8  3DC5               	addwfc	??___flge+3,f
  9248  13A9  0845               	movf	??___flge+3,w
  9249  13AA  00C1               	movwf	___flge@ff2+3
  9250  13AB  0844               	movf	??___flge+2,w
  9251  13AC  00C0               	movwf	___flge@ff2+2
  9252  13AD  0843               	movf	??___flge+1,w
  9253  13AE  00BF               	movwf	___flge@ff2+1
  9254  13AF  0842               	movf	??___flge,w
  9255  13B0  00BE               	movwf	___flge@ff2
  9256  13B1                     l3107:	
  9257  13B1  3080               	movlw	128
  9258  13B2  06BD               	xorwf	___flge@ff1+3,f
  9259  13B3  3080               	movlw	128
  9260  13B4  06C1               	xorwf	___flge@ff2+3,f
  9261  13B5  0841               	movf	___flge@ff2+3,w
  9262  13B6  023D               	subwf	___flge@ff1+3,w
  9263  13B7  1D03               	skipz
  9264  13B8  0008               	return
  9265  13B9  0840               	movf	___flge@ff2+2,w
  9266  13BA  023C               	subwf	___flge@ff1+2,w
  9267  13BB  1D03               	skipz
  9268  13BC  0008               	return
  9269  13BD  083F               	movf	___flge@ff2+1,w
  9270  13BE  023B               	subwf	___flge@ff1+1,w
  9271  13BF  1D03               	skipz
  9272  13C0  0008               	return
  9273  13C1  083E               	movf	___flge@ff2,w
  9274  13C2  023A               	subwf	___flge@ff1,w
  9275  13C3  0008               	return
  9276  13C4                     __end_of___flge:	
  9277                           
  9278                           	psect	text23
  9279  1F1C                     __ptext23:	
  9280 ;; *************** function ___fleq *****************
  9281 ;; Defined at:
  9282 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\fleq.c"
  9283 ;; Parameters:    Size  Location     Type
  9284 ;;  ff1             4    0[COMMON] unsigned int 
  9285 ;;  ff2             4    4[COMMON] unsigned int 
  9286 ;; Auto vars:     Size  Location     Type
  9287 ;;		None
  9288 ;; Return value:  Size  Location     Type
  9289 ;;		None               void
  9290 ;; Registers used:
  9291 ;;		wreg, status,2, status,0
  9292 ;; Tracked objects:
  9293 ;;		On entry : 0/0
  9294 ;;		On exit  : 0/0
  9295 ;;		Unchanged: 0/0
  9296 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
  9297 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  9298 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  9299 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  9300 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  9301 ;;Total ram usage:       12 bytes
  9302 ;; Hardware stack levels used:    1
  9303 ;; This function calls:
  9304 ;;		Nothing
  9305 ;; This function is called by:
  9306 ;;		_efgtoa
  9307 ;; This function uses a non-reentrant model
  9308 ;;
  9309                           
  9310                           
  9311                           ;psect for function ___fleq
  9312  1F1C                     ___fleq:	
  9313                           
  9314                           ;incstack = 0
  9315                           ; Regs used in ___fleq: [wreg+status,2+status,0]
  9316  1F1C  3000               	movlw	0
  9317  1F1D  0570               	andwf	___fleq@ff1,w
  9318  1F1E  00F8               	movwf	??___fleq
  9319  1F1F  3000               	movlw	0
  9320  1F20  0571               	andwf	___fleq@ff1+1,w
  9321  1F21  00F9               	movwf	??___fleq+1
  9322  1F22  3080               	movlw	128
  9323  1F23  0572               	andwf	___fleq@ff1+2,w
  9324  1F24  00FA               	movwf	??___fleq+2
  9325  1F25  307F               	movlw	127
  9326  1F26  0573               	andwf	___fleq@ff1+3,w
  9327  1F27  00FB               	movwf	??___fleq+3
  9328  1F28  087B               	movf	??___fleq+3,w
  9329  1F29  047A               	iorwf	??___fleq+2,w
  9330  1F2A  0479               	iorwf	??___fleq+1,w
  9331  1F2B  0478               	iorwf	??___fleq,w
  9332  1F2C  1D03               	skipz
  9333  1F2D  2F36               	goto	l542
  9334  1F2E  3000               	movlw	0
  9335  1F2F  00F3               	movwf	___fleq@ff1+3
  9336  1F30  3000               	movlw	0
  9337  1F31  00F2               	movwf	___fleq@ff1+2
  9338  1F32  3000               	movlw	0
  9339  1F33  00F1               	movwf	___fleq@ff1+1
  9340  1F34  3000               	movlw	0
  9341  1F35  00F0               	movwf	___fleq@ff1
  9342  1F36                     l542:	
  9343  1F36  3000               	movlw	0
  9344  1F37  0574               	andwf	___fleq@ff2,w
  9345  1F38  00F8               	movwf	??___fleq
  9346  1F39  3000               	movlw	0
  9347  1F3A  0575               	andwf	___fleq@ff2+1,w
  9348  1F3B  00F9               	movwf	??___fleq+1
  9349  1F3C  3080               	movlw	128
  9350  1F3D  0576               	andwf	___fleq@ff2+2,w
  9351  1F3E  00FA               	movwf	??___fleq+2
  9352  1F3F  307F               	movlw	127
  9353  1F40  0577               	andwf	___fleq@ff2+3,w
  9354  1F41  00FB               	movwf	??___fleq+3
  9355  1F42  087B               	movf	??___fleq+3,w
  9356  1F43  047A               	iorwf	??___fleq+2,w
  9357  1F44  0479               	iorwf	??___fleq+1,w
  9358  1F45  0478               	iorwf	??___fleq,w
  9359  1F46  1D03               	skipz
  9360  1F47  2F50               	goto	l543
  9361  1F48  3000               	movlw	0
  9362  1F49  00F7               	movwf	___fleq@ff2+3
  9363  1F4A  3000               	movlw	0
  9364  1F4B  00F6               	movwf	___fleq@ff2+2
  9365  1F4C  3000               	movlw	0
  9366  1F4D  00F5               	movwf	___fleq@ff2+1
  9367  1F4E  3000               	movlw	0
  9368  1F4F  00F4               	movwf	___fleq@ff2
  9369  1F50                     l543:	
  9370  1F50  0877               	movf	___fleq@ff2+3,w
  9371  1F51  0673               	xorwf	___fleq@ff1+3,w
  9372  1F52  1D03               	skipz
  9373  1F53  2F5E               	goto	u4115
  9374  1F54  0876               	movf	___fleq@ff2+2,w
  9375  1F55  0672               	xorwf	___fleq@ff1+2,w
  9376  1F56  1D03               	skipz
  9377  1F57  2F5E               	goto	u4115
  9378  1F58  0875               	movf	___fleq@ff2+1,w
  9379  1F59  0671               	xorwf	___fleq@ff1+1,w
  9380  1F5A  1D03               	skipz
  9381  1F5B  2F5E               	goto	u4115
  9382  1F5C  0874               	movf	___fleq@ff2,w
  9383  1F5D  0670               	xorwf	___fleq@ff1,w
  9384  1F5E                     u4115:	
  9385  1F5E  1903               	skipnz
  9386  1F5F  2F62               	goto	l3089
  9387  1F60  1003               	clrc
  9388  1F61  0008               	return
  9389  1F62                     l3089:	
  9390  1F62  1403               	setc
  9391  1F63  0008               	return
  9392  1F64                     __end_of___fleq:	
  9393                           
  9394                           	psect	text24
  9395  146C                     __ptext24:	
  9396 ;; *************** function ___fldiv *****************
  9397 ;; Defined at:
  9398 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\sprcdiv.c"
  9399 ;; Parameters:    Size  Location     Type
  9400 ;;  a               4   26[BANK0 ] unsigned int 
  9401 ;;  b               4   30[BANK0 ] unsigned int 
  9402 ;; Auto vars:     Size  Location     Type
  9403 ;;  grs             4   46[BANK0 ] unsigned long 
  9404 ;;  rem             4   39[BANK0 ] unsigned long 
  9405 ;;  new_exp         2   44[BANK0 ] int 
  9406 ;;  aexp            1   51[BANK0 ] unsigned char 
  9407 ;;  bexp            1   50[BANK0 ] unsigned char 
  9408 ;;  sign            1   43[BANK0 ] unsigned char 
  9409 ;; Return value:  Size  Location     Type
  9410 ;;                  4   26[BANK0 ] unsigned char 
  9411 ;; Registers used:
  9412 ;;		wreg, status,2, status,0
  9413 ;; Tracked objects:
  9414 ;;		On entry : 0/0
  9415 ;;		On exit  : 0/0
  9416 ;;		Unchanged: 0/0
  9417 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
  9418 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  9419 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  9420 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  9421 ;;      Totals:         0      26       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  9422 ;;Total ram usage:       26 bytes
  9423 ;; Hardware stack levels used:    1
  9424 ;; This function calls:
  9425 ;;		Nothing
  9426 ;; This function is called by:
  9427 ;;		_main
  9428 ;;		_efgtoa
  9429 ;; This function uses a non-reentrant model
  9430 ;;
  9431                           
  9432                           
  9433                           ;psect for function ___fldiv
  9434  146C                     ___fldiv:	
  9435                           
  9436                           ;incstack = 0
  9437                           ; Regs used in ___fldiv: [wreg+status,2+status,0]
  9438  146C  0140               	movlb	0	; select bank0
  9439  146D  0841               	movf	___fldiv@b+3,w
  9440  146E  3980               	andlw	128
  9441  146F  00C2               	movwf	??___fldiv
  9442  1470  0842               	movf	??___fldiv,w
  9443  1471  00CB               	movwf	___fldiv@sign
  9444  1472  3541               	lslf	___fldiv@b+3,w
  9445  1473  00C2               	movwf	??___fldiv
  9446  1474  0842               	movf	??___fldiv,w
  9447  1475  00D2               	movwf	___fldiv@bexp
  9448  1476  1BC0               	btfsc	___fldiv@b+2,7
  9449  1477  1452               	bsf	___fldiv@bexp,0
  9450  1478  0852               	movf	___fldiv@bexp,w
  9451  1479  1903               	btfsc	3,2
  9452  147A  2C89               	goto	l3187
  9453  147B  0A52               	incf	___fldiv@bexp,w
  9454  147C  1D03               	btfss	3,2
  9455  147D  2C86               	goto	l3183
  9456  147E  3000               	movlw	0
  9457  147F  00C1               	movwf	___fldiv@b+3
  9458  1480  3000               	movlw	0
  9459  1481  00C0               	movwf	___fldiv@b+2
  9460  1482  3000               	movlw	0
  9461  1483  00BF               	movwf	___fldiv@b+1
  9462  1484  3000               	movlw	0
  9463  1485  00BE               	movwf	___fldiv@b
  9464  1486                     l3183:	
  9465  1486  17C0               	bsf	___fldiv@b+2,7
  9466  1487  01C1               	clrf	___fldiv@b+3
  9467  1488  2C91               	goto	l3189
  9468  1489                     l3187:	
  9469  1489  3000               	movlw	0
  9470  148A  00C1               	movwf	___fldiv@b+3
  9471  148B  3000               	movlw	0
  9472  148C  00C0               	movwf	___fldiv@b+2
  9473  148D  3000               	movlw	0
  9474  148E  00BF               	movwf	___fldiv@b+1
  9475  148F  3000               	movlw	0
  9476  1490  00BE               	movwf	___fldiv@b
  9477  1491                     l3189:	
  9478  1491  083D               	movf	___fldiv@a+3,w
  9479  1492  3980               	andlw	128
  9480  1493  00C2               	movwf	??___fldiv
  9481  1494  0842               	movf	??___fldiv,w
  9482  1495  06CB               	xorwf	___fldiv@sign,f
  9483  1496  353D               	lslf	___fldiv@a+3,w
  9484  1497  00C2               	movwf	??___fldiv
  9485  1498  0842               	movf	??___fldiv,w
  9486  1499  00D3               	movwf	___fldiv@aexp
  9487  149A  1BBC               	btfsc	___fldiv@a+2,7
  9488  149B  1453               	bsf	___fldiv@aexp,0
  9489  149C  0853               	movf	___fldiv@aexp,w
  9490  149D  1903               	btfsc	3,2
  9491  149E  2CAD               	goto	l3207
  9492  149F  0A53               	incf	___fldiv@aexp,w
  9493  14A0  1D03               	btfss	3,2
  9494  14A1  2CAA               	goto	l3203
  9495  14A2  3000               	movlw	0
  9496  14A3  00BD               	movwf	___fldiv@a+3
  9497  14A4  3000               	movlw	0
  9498  14A5  00BC               	movwf	___fldiv@a+2
  9499  14A6  3000               	movlw	0
  9500  14A7  00BB               	movwf	___fldiv@a+1
  9501  14A8  3000               	movlw	0
  9502  14A9  00BA               	movwf	___fldiv@a
  9503  14AA                     l3203:	
  9504  14AA  17BC               	bsf	___fldiv@a+2,7
  9505  14AB  01BD               	clrf	___fldiv@a+3
  9506  14AC  2CB5               	goto	l730
  9507  14AD                     l3207:	
  9508  14AD  3000               	movlw	0
  9509  14AE  00BD               	movwf	___fldiv@a+3
  9510  14AF  3000               	movlw	0
  9511  14B0  00BC               	movwf	___fldiv@a+2
  9512  14B1  3000               	movlw	0
  9513  14B2  00BB               	movwf	___fldiv@a+1
  9514  14B3  3000               	movlw	0
  9515  14B4  00BA               	movwf	___fldiv@a
  9516  14B5                     l730:	
  9517  14B5  083D               	movf	___fldiv@a+3,w
  9518  14B6  043C               	iorwf	___fldiv@a+2,w
  9519  14B7  043B               	iorwf	___fldiv@a+1,w
  9520  14B8  043A               	iorwf	___fldiv@a,w
  9521  14B9  1D03               	skipz
  9522  14BA  2CD4               	goto	l3217
  9523  14BB  3000               	movlw	0
  9524  14BC  00C1               	movwf	___fldiv@b+3
  9525  14BD  3000               	movlw	0
  9526  14BE  00C0               	movwf	___fldiv@b+2
  9527  14BF  3000               	movlw	0
  9528  14C0  00BF               	movwf	___fldiv@b+1
  9529  14C1  3000               	movlw	0
  9530  14C2  00BE               	movwf	___fldiv@b
  9531  14C3  3080               	movlw	128
  9532  14C4  04C0               	iorwf	___fldiv@b+2,f
  9533  14C5  307F               	movlw	127
  9534  14C6  04C1               	iorwf	___fldiv@b+3,f
  9535  14C7  084B               	movf	___fldiv@sign,w
  9536  14C8  00C2               	movwf	??___fldiv
  9537  14C9  0842               	movf	??___fldiv,w
  9538  14CA  04C1               	iorwf	___fldiv@b+3,f
  9539  14CB  0841               	movf	___fldiv@b+3,w
  9540  14CC  00BD               	movwf	?___fldiv+3
  9541  14CD  0840               	movf	___fldiv@b+2,w
  9542  14CE  00BC               	movwf	?___fldiv+2
  9543  14CF  083F               	movf	___fldiv@b+1,w
  9544  14D0  00BB               	movwf	?___fldiv+1
  9545  14D1  083E               	movf	___fldiv@b,w
  9546  14D2  00BA               	movwf	?___fldiv
  9547  14D3  0008               	return
  9548  14D4                     l3217:	
  9549  14D4  0852               	movf	___fldiv@bexp,w
  9550  14D5  1D03               	btfss	3,2
  9551  14D6  2CE8               	goto	l3223
  9552  14D7  3000               	movlw	0
  9553  14D8  00C1               	movwf	___fldiv@b+3
  9554  14D9  3000               	movlw	0
  9555  14DA  00C0               	movwf	___fldiv@b+2
  9556  14DB  3000               	movlw	0
  9557  14DC  00BF               	movwf	___fldiv@b+1
  9558  14DD  3000               	movlw	0
  9559  14DE  00BE               	movwf	___fldiv@b
  9560  14DF  0841               	movf	___fldiv@b+3,w
  9561  14E0  00BD               	movwf	?___fldiv+3
  9562  14E1  0840               	movf	___fldiv@b+2,w
  9563  14E2  00BC               	movwf	?___fldiv+2
  9564  14E3  083F               	movf	___fldiv@b+1,w
  9565  14E4  00BB               	movwf	?___fldiv+1
  9566  14E5  083E               	movf	___fldiv@b,w
  9567  14E6  00BA               	movwf	?___fldiv
  9568  14E7  0008               	return
  9569  14E8                     l3223:	
  9570  14E8  0853               	movf	___fldiv@aexp,w
  9571  14E9  00C2               	movwf	??___fldiv
  9572  14EA  01C3               	clrf	??___fldiv+1
  9573  14EB  09C2               	comf	??___fldiv,f
  9574  14EC  09C3               	comf	??___fldiv+1,f
  9575  14ED  0AC2               	incf	??___fldiv,f
  9576  14EE  1903               	skipnz
  9577  14EF  0AC3               	incf	??___fldiv+1,f
  9578  14F0  0852               	movf	___fldiv@bexp,w
  9579  14F1  0742               	addwf	??___fldiv,w
  9580  14F2  00C4               	movwf	??___fldiv+2
  9581  14F3  0843               	movf	??___fldiv+1,w
  9582  14F4  1803               	skipnc
  9583  14F5  0A43               	incf	??___fldiv+1,w
  9584  14F6  00C5               	movwf	??___fldiv+3
  9585  14F7  0844               	movf	??___fldiv+2,w
  9586  14F8  3E7F               	addlw	127
  9587  14F9  00CC               	movwf	___fldiv@new_exp
  9588  14FA  3000               	movlw	0
  9589  14FB  3D45               	addwfc	??___fldiv+3,w
  9590  14FC  00CD               	movwf	___fldiv@new_exp+1
  9591  14FD  0841               	movf	___fldiv@b+3,w
  9592  14FE  00CA               	movwf	___fldiv@rem+3
  9593  14FF  0840               	movf	___fldiv@b+2,w
  9594  1500  00C9               	movwf	___fldiv@rem+2
  9595  1501  083F               	movf	___fldiv@b+1,w
  9596  1502  00C8               	movwf	___fldiv@rem+1
  9597  1503  083E               	movf	___fldiv@b,w
  9598  1504  00C7               	movwf	___fldiv@rem
  9599  1505  3000               	movlw	0
  9600  1506  00C1               	movwf	___fldiv@b+3
  9601  1507  3000               	movlw	0
  9602  1508  00C0               	movwf	___fldiv@b+2
  9603  1509  3000               	movlw	0
  9604  150A  00BF               	movwf	___fldiv@b+1
  9605  150B  3000               	movlw	0
  9606  150C  00BE               	movwf	___fldiv@b
  9607  150D  3000               	movlw	0
  9608  150E  00D1               	movwf	___fldiv@grs+3
  9609  150F  3000               	movlw	0
  9610  1510  00D0               	movwf	___fldiv@grs+2
  9611  1511  3000               	movlw	0
  9612  1512  00CF               	movwf	___fldiv@grs+1
  9613  1513  3000               	movlw	0
  9614  1514  00CE               	movwf	___fldiv@grs
  9615  1515  01D3               	clrf	___fldiv@aexp
  9616  1516                     l3251:	
  9617  1516  301A               	movlw	26
  9618  1517  0253               	subwf	___fldiv@aexp,w
  9619  1518  1803               	btfsc	3,0
  9620  1519  2D52               	goto	l3253
  9621  151A  0853               	movf	___fldiv@aexp,w
  9622  151B  1903               	btfsc	3,2
  9623  151C  2D34               	goto	l3243
  9624  151D  3001               	movlw	1
  9625  151E                     u4375:	
  9626  151E  35C7               	lslf	___fldiv@rem,f
  9627  151F  0DC8               	rlf	___fldiv@rem+1,f
  9628  1520  0DC9               	rlf	___fldiv@rem+2,f
  9629  1521  0DCA               	rlf	___fldiv@rem+3,f
  9630  1522  0B89               	decfsz	9,f
  9631  1523  2D1E               	goto	u4375
  9632  1524  3001               	movlw	1
  9633  1525                     u4385:	
  9634  1525  35BE               	lslf	___fldiv@b,f
  9635  1526  0DBF               	rlf	___fldiv@b+1,f
  9636  1527  0DC0               	rlf	___fldiv@b+2,f
  9637  1528  0DC1               	rlf	___fldiv@b+3,f
  9638  1529  0B89               	decfsz	9,f
  9639  152A  2D25               	goto	u4385
  9640  152B  1BD1               	btfsc	___fldiv@grs+3,7
  9641  152C  143E               	bsf	___fldiv@b,0
  9642  152D  3001               	movlw	1
  9643  152E                     u4405:	
  9644  152E  35CE               	lslf	___fldiv@grs,f
  9645  152F  0DCF               	rlf	___fldiv@grs+1,f
  9646  1530  0DD0               	rlf	___fldiv@grs+2,f
  9647  1531  0DD1               	rlf	___fldiv@grs+3,f
  9648  1532  0B89               	decfsz	9,f
  9649  1533  2D2E               	goto	u4405
  9650  1534                     l3243:	
  9651  1534  083D               	movf	___fldiv@a+3,w
  9652  1535  024A               	subwf	___fldiv@rem+3,w
  9653  1536  1D03               	skipz
  9654  1537  2D42               	goto	u4415
  9655  1538  083C               	movf	___fldiv@a+2,w
  9656  1539  0249               	subwf	___fldiv@rem+2,w
  9657  153A  1D03               	skipz
  9658  153B  2D42               	goto	u4415
  9659  153C  083B               	movf	___fldiv@a+1,w
  9660  153D  0248               	subwf	___fldiv@rem+1,w
  9661  153E  1D03               	skipz
  9662  153F  2D42               	goto	u4415
  9663  1540  083A               	movf	___fldiv@a,w
  9664  1541  0247               	subwf	___fldiv@rem,w
  9665  1542                     u4415:	
  9666  1542  1C03               	skipc
  9667  1543  2D4D               	goto	l3249
  9668  1544  1751               	bsf	___fldiv@grs+3,6
  9669  1545  083A               	movf	___fldiv@a,w
  9670  1546  02C7               	subwf	___fldiv@rem,f
  9671  1547  083B               	movf	___fldiv@a+1,w
  9672  1548  3BC8               	subwfb	___fldiv@rem+1,f
  9673  1549  083C               	movf	___fldiv@a+2,w
  9674  154A  3BC9               	subwfb	___fldiv@rem+2,f
  9675  154B  083D               	movf	___fldiv@a+3,w
  9676  154C  3BCA               	subwfb	___fldiv@rem+3,f
  9677  154D                     l3249:	
  9678  154D  3001               	movlw	1
  9679  154E  00C2               	movwf	??___fldiv
  9680  154F  0842               	movf	??___fldiv,w
  9681  1550  07D3               	addwf	___fldiv@aexp,f
  9682  1551  2D16               	goto	l3251
  9683  1552                     l3253:	
  9684  1552  084A               	movf	___fldiv@rem+3,w
  9685  1553  0449               	iorwf	___fldiv@rem+2,w
  9686  1554  0448               	iorwf	___fldiv@rem+1,w
  9687  1555  0447               	iorwf	___fldiv@rem,w
  9688  1556  1D03               	btfss	3,2
  9689  1557  144E               	bsf	___fldiv@grs,0
  9690  1558                     l3267:	
  9691  1558  1BC0               	btfsc	___fldiv@b+2,7
  9692  1559  2D6F               	goto	l3269
  9693  155A  3001               	movlw	1
  9694  155B                     u4445:	
  9695  155B  35BE               	lslf	___fldiv@b,f
  9696  155C  0DBF               	rlf	___fldiv@b+1,f
  9697  155D  0DC0               	rlf	___fldiv@b+2,f
  9698  155E  0DC1               	rlf	___fldiv@b+3,f
  9699  155F  0B89               	decfsz	9,f
  9700  1560  2D5B               	goto	u4445
  9701  1561  1BD1               	btfsc	___fldiv@grs+3,7
  9702  1562  143E               	bsf	___fldiv@b,0
  9703  1563  3001               	movlw	1
  9704  1564                     u4465:	
  9705  1564  35CE               	lslf	___fldiv@grs,f
  9706  1565  0DCF               	rlf	___fldiv@grs+1,f
  9707  1566  0DD0               	rlf	___fldiv@grs+2,f
  9708  1567  0DD1               	rlf	___fldiv@grs+3,f
  9709  1568  0B89               	decfsz	9,f
  9710  1569  2D64               	goto	u4465
  9711  156A  30FF               	movlw	255
  9712  156B  07CC               	addwf	___fldiv@new_exp,f
  9713  156C  30FF               	movlw	255
  9714  156D  3DCD               	addwfc	___fldiv@new_exp+1,f
  9715  156E  2D58               	goto	l3267
  9716  156F                     l3269:	
  9717  156F  01D3               	clrf	___fldiv@aexp
  9718  1570  1FD1               	btfss	___fldiv@grs+3,7
  9719  1571  2D88               	goto	l3279
  9720  1572  30FF               	movlw	255
  9721  1573  054E               	andwf	___fldiv@grs,w
  9722  1574  00C2               	movwf	??___fldiv
  9723  1575  30FF               	movlw	255
  9724  1576  054F               	andwf	___fldiv@grs+1,w
  9725  1577  00C3               	movwf	??___fldiv+1
  9726  1578  30FF               	movlw	255
  9727  1579  0550               	andwf	___fldiv@grs+2,w
  9728  157A  00C4               	movwf	??___fldiv+2
  9729  157B  307F               	movlw	127
  9730  157C  0551               	andwf	___fldiv@grs+3,w
  9731  157D  00C5               	movwf	??___fldiv+3
  9732  157E  0845               	movf	??___fldiv+3,w
  9733  157F  0444               	iorwf	??___fldiv+2,w
  9734  1580  0443               	iorwf	??___fldiv+1,w
  9735  1581  0442               	iorwf	??___fldiv,w
  9736  1582  1D03               	btfss	3,2
  9737  1583  2D86               	goto	l3277
  9738  1584  1C3E               	btfss	___fldiv@b,0
  9739  1585  2D88               	goto	l3279
  9740  1586                     l3277:	
  9741  1586  01D3               	clrf	___fldiv@aexp
  9742  1587  0AD3               	incf	___fldiv@aexp,f
  9743  1588                     l3279:	
  9744  1588  0853               	movf	___fldiv@aexp,w
  9745  1589  1903               	btfsc	3,2
  9746  158A  2DB1               	goto	l3289
  9747  158B  3001               	movlw	1
  9748  158C  07BE               	addwf	___fldiv@b,f
  9749  158D  3000               	movlw	0
  9750  158E  3DBF               	addwfc	___fldiv@b+1,f
  9751  158F  3000               	movlw	0
  9752  1590  3DC0               	addwfc	___fldiv@b+2,f
  9753  1591  3000               	movlw	0
  9754  1592  3DC1               	addwfc	___fldiv@b+3,f
  9755  1593  1C41               	btfss	___fldiv@b+3,0
  9756  1594  2DB1               	goto	l3289
  9757  1595  083E               	movf	___fldiv@b,w
  9758  1596  00C2               	movwf	??___fldiv
  9759  1597  083F               	movf	___fldiv@b+1,w
  9760  1598  00C3               	movwf	??___fldiv+1
  9761  1599  0840               	movf	___fldiv@b+2,w
  9762  159A  00C4               	movwf	??___fldiv+2
  9763  159B  0841               	movf	___fldiv@b+3,w
  9764  159C  00C5               	movwf	??___fldiv+3
  9765  159D  3001               	movlw	1
  9766  159E  00C6               	movwf	??___fldiv+4
  9767  159F                     u4535:	
  9768  159F  37C5               	asrf	??___fldiv+3,f
  9769  15A0  0CC4               	rrf	??___fldiv+2,f
  9770  15A1  0CC3               	rrf	??___fldiv+1,f
  9771  15A2  0CC2               	rrf	??___fldiv,f
  9772  15A3  0BC6               	decfsz	??___fldiv+4,f
  9773  15A4  2D9F               	goto	u4535
  9774  15A5  0845               	movf	??___fldiv+3,w
  9775  15A6  00C1               	movwf	___fldiv@b+3
  9776  15A7  0844               	movf	??___fldiv+2,w
  9777  15A8  00C0               	movwf	___fldiv@b+2
  9778  15A9  0843               	movf	??___fldiv+1,w
  9779  15AA  00BF               	movwf	___fldiv@b+1
  9780  15AB  0842               	movf	??___fldiv,w
  9781  15AC  00BE               	movwf	___fldiv@b
  9782  15AD  3001               	movlw	1
  9783  15AE  07CC               	addwf	___fldiv@new_exp,f
  9784  15AF  3000               	movlw	0
  9785  15B0  3DCD               	addwfc	___fldiv@new_exp+1,f
  9786  15B1                     l3289:	
  9787  15B1  084D               	movf	___fldiv@new_exp+1,w
  9788  15B2  3A80               	xorlw	128
  9789  15B3  00C2               	movwf	??___fldiv
  9790  15B4  3080               	movlw	128
  9791  15B5  0242               	subwf	??___fldiv,w
  9792  15B6  1D03               	skipz
  9793  15B7  2DBA               	goto	u4545
  9794  15B8  30FF               	movlw	255
  9795  15B9  024C               	subwf	___fldiv@new_exp,w
  9796  15BA                     u4545:	
  9797  15BA  1C03               	skipc
  9798  15BB  2DC9               	goto	l751
  9799  15BC  30FF               	movlw	255
  9800  15BD  0140               	movlb	0	; select bank0
  9801  15BE  00CC               	movwf	___fldiv@new_exp
  9802  15BF  3000               	movlw	0
  9803  15C0  00CD               	movwf	___fldiv@new_exp+1
  9804  15C1  3000               	movlw	0
  9805  15C2  00C1               	movwf	___fldiv@b+3
  9806  15C3  3000               	movlw	0
  9807  15C4  00C0               	movwf	___fldiv@b+2
  9808  15C5  3000               	movlw	0
  9809  15C6  00BF               	movwf	___fldiv@b+1
  9810  15C7  3000               	movlw	0
  9811  15C8  00BE               	movwf	___fldiv@b
  9812  15C9                     l751:	
  9813  15C9  0140               	movlb	0	; select bank0
  9814  15CA  084D               	movf	___fldiv@new_exp+1,w
  9815  15CB  3A80               	xorlw	128
  9816  15CC  00C2               	movwf	??___fldiv
  9817  15CD  3080               	movlw	128
  9818  15CE  0242               	subwf	??___fldiv,w
  9819  15CF  1D03               	skipz
  9820  15D0  2DD3               	goto	u4555
  9821  15D1  3001               	movlw	1
  9822  15D2  024C               	subwf	___fldiv@new_exp,w
  9823  15D3                     u4555:	
  9824  15D3  1803               	skipnc
  9825  15D4  2DE1               	goto	l752
  9826  15D5  0140               	movlb	0	; select bank0
  9827  15D6  01CC               	clrf	___fldiv@new_exp
  9828  15D7  01CD               	clrf	___fldiv@new_exp+1
  9829  15D8  3000               	movlw	0
  9830  15D9  00C1               	movwf	___fldiv@b+3
  9831  15DA  3000               	movlw	0
  9832  15DB  00C0               	movwf	___fldiv@b+2
  9833  15DC  3000               	movlw	0
  9834  15DD  00BF               	movwf	___fldiv@b+1
  9835  15DE  3000               	movlw	0
  9836  15DF  00BE               	movwf	___fldiv@b
  9837  15E0  01CB               	clrf	___fldiv@sign
  9838  15E1                     l752:	
  9839  15E1  0140               	movlb	0	; select bank0
  9840  15E2  084C               	movf	___fldiv@new_exp,w
  9841  15E3  00C2               	movwf	??___fldiv
  9842  15E4  0842               	movf	??___fldiv,w
  9843  15E5  00D2               	movwf	___fldiv@bexp
  9844  15E6  1C52               	btfss	___fldiv@bexp,0
  9845  15E7  2DEA               	goto	l3303
  9846  15E8  17C0               	bsf	___fldiv@b+2,7
  9847  15E9  2DEE               	goto	l754
  9848  15EA                     l3303:	
  9849  15EA  307F               	movlw	127
  9850  15EB  00C2               	movwf	??___fldiv
  9851  15EC  0842               	movf	??___fldiv,w
  9852  15ED  05C0               	andwf	___fldiv@b+2,f
  9853  15EE                     l754:	
  9854  15EE  3652               	lsrf	___fldiv@bexp,w
  9855  15EF  00C2               	movwf	??___fldiv
  9856  15F0  0842               	movf	??___fldiv,w
  9857  15F1  00C1               	movwf	___fldiv@b+3
  9858  15F2  084B               	movf	___fldiv@sign,w
  9859  15F3  00C2               	movwf	??___fldiv
  9860  15F4  0842               	movf	??___fldiv,w
  9861  15F5  04C1               	iorwf	___fldiv@b+3,f
  9862  15F6  0841               	movf	___fldiv@b+3,w
  9863  15F7  00BD               	movwf	?___fldiv+3
  9864  15F8  0840               	movf	___fldiv@b+2,w
  9865  15F9  00BC               	movwf	?___fldiv+2
  9866  15FA  083F               	movf	___fldiv@b+1,w
  9867  15FB  00BB               	movwf	?___fldiv+1
  9868  15FC  083E               	movf	___fldiv@b,w
  9869  15FD  00BA               	movwf	?___fldiv
  9870  15FE  0008               	return
  9871  15FF                     __end_of___fldiv:	
  9872                           
  9873                           	psect	text25
  9874  1ED7                     __ptext25:	
  9875 ;; *************** function ___awmod *****************
  9876 ;; Defined at:
  9877 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\awmod.c"
  9878 ;; Parameters:    Size  Location     Type
  9879 ;;  divisor         2    0[COMMON] int 
  9880 ;;  dividend        2    2[COMMON] int 
  9881 ;; Auto vars:     Size  Location     Type
  9882 ;;  sign            1    6[COMMON] unsigned char 
  9883 ;;  counter         1    5[COMMON] unsigned char 
  9884 ;; Return value:  Size  Location     Type
  9885 ;;                  2    0[COMMON] int 
  9886 ;; Registers used:
  9887 ;;		wreg, status,2, status,0
  9888 ;; Tracked objects:
  9889 ;;		On entry : 0/0
  9890 ;;		On exit  : 0/0
  9891 ;;		Unchanged: 0/0
  9892 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
  9893 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  9894 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  9895 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  9896 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  9897 ;;Total ram usage:        7 bytes
  9898 ;; Hardware stack levels used:    1
  9899 ;; This function calls:
  9900 ;;		Nothing
  9901 ;; This function is called by:
  9902 ;;		_efgtoa
  9903 ;; This function uses a non-reentrant model
  9904 ;;
  9905                           
  9906                           
  9907                           ;psect for function ___awmod
  9908  1ED7                     ___awmod:	
  9909                           
  9910                           ;incstack = 0
  9911                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  9912  1ED7  01F6               	clrf	___awmod@sign
  9913  1ED8  1FF3               	btfss	___awmod@dividend+1,7
  9914  1ED9  2EE1               	goto	l3051
  9915  1EDA  09F2               	comf	___awmod@dividend,f
  9916  1EDB  09F3               	comf	___awmod@dividend+1,f
  9917  1EDC  0AF2               	incf	___awmod@dividend,f
  9918  1EDD  1903               	skipnz
  9919  1EDE  0AF3               	incf	___awmod@dividend+1,f
  9920  1EDF  01F6               	clrf	___awmod@sign
  9921  1EE0  0AF6               	incf	___awmod@sign,f
  9922  1EE1                     l3051:	
  9923  1EE1  1FF1               	btfss	___awmod@divisor+1,7
  9924  1EE2  2EE8               	goto	l3055
  9925  1EE3  09F0               	comf	___awmod@divisor,f
  9926  1EE4  09F1               	comf	___awmod@divisor+1,f
  9927  1EE5  0AF0               	incf	___awmod@divisor,f
  9928  1EE6  1903               	skipnz
  9929  1EE7  0AF1               	incf	___awmod@divisor+1,f
  9930  1EE8                     l3055:	
  9931  1EE8  0870               	movf	___awmod@divisor,w
  9932  1EE9  0471               	iorwf	___awmod@divisor+1,w
  9933  1EEA  1903               	btfsc	3,2
  9934  1EEB  2F0F               	goto	l3073
  9935  1EEC  01F5               	clrf	___awmod@counter
  9936  1EED  0AF5               	incf	___awmod@counter,f
  9937  1EEE                     l3063:	
  9938  1EEE  1BF1               	btfsc	___awmod@divisor+1,7
  9939  1EEF  2EFA               	goto	l3065
  9940  1EF0  3001               	movlw	1
  9941  1EF1                     u4035:	
  9942  1EF1  35F0               	lslf	___awmod@divisor,f
  9943  1EF2  0DF1               	rlf	___awmod@divisor+1,f
  9944  1EF3  0B89               	decfsz	9,f
  9945  1EF4  2EF1               	goto	u4035
  9946  1EF5  3001               	movlw	1
  9947  1EF6  00F4               	movwf	??___awmod
  9948  1EF7  0874               	movf	??___awmod,w
  9949  1EF8  07F5               	addwf	___awmod@counter,f
  9950  1EF9  2EEE               	goto	l3063
  9951  1EFA                     l3065:	
  9952  1EFA  0871               	movf	___awmod@divisor+1,w
  9953  1EFB  0273               	subwf	___awmod@dividend+1,w
  9954  1EFC  1D03               	skipz
  9955  1EFD  2F00               	goto	u4055
  9956  1EFE  0870               	movf	___awmod@divisor,w
  9957  1EFF  0272               	subwf	___awmod@dividend,w
  9958  1F00                     u4055:	
  9959  1F00  1C03               	skipc
  9960  1F01  2F06               	goto	l3069
  9961  1F02  0870               	movf	___awmod@divisor,w
  9962  1F03  02F2               	subwf	___awmod@dividend,f
  9963  1F04  0871               	movf	___awmod@divisor+1,w
  9964  1F05  3BF3               	subwfb	___awmod@dividend+1,f
  9965  1F06                     l3069:	
  9966  1F06  3001               	movlw	1
  9967  1F07                     u4065:	
  9968  1F07  36F1               	lsrf	___awmod@divisor+1,f
  9969  1F08  0CF0               	rrf	___awmod@divisor,f
  9970  1F09  0B89               	decfsz	9,f
  9971  1F0A  2F07               	goto	u4065
  9972  1F0B  3001               	movlw	1
  9973  1F0C  02F5               	subwf	___awmod@counter,f
  9974  1F0D  1D03               	btfss	3,2
  9975  1F0E  2EFA               	goto	l3065
  9976  1F0F                     l3073:	
  9977  1F0F  0876               	movf	___awmod@sign,w
  9978  1F10  1903               	btfsc	3,2
  9979  1F11  2F17               	goto	l3077
  9980  1F12  09F2               	comf	___awmod@dividend,f
  9981  1F13  09F3               	comf	___awmod@dividend+1,f
  9982  1F14  0AF2               	incf	___awmod@dividend,f
  9983  1F15  1903               	skipnz
  9984  1F16  0AF3               	incf	___awmod@dividend+1,f
  9985  1F17                     l3077:	
  9986  1F17  0873               	movf	___awmod@dividend+1,w
  9987  1F18  00F1               	movwf	?___awmod+1
  9988  1F19  0872               	movf	___awmod@dividend,w
  9989  1F1A  00F0               	movwf	?___awmod
  9990  1F1B  0008               	return
  9991  1F1C                     __end_of___awmod:	
  9992                           
  9993                           	psect	text26
  9994  0806                     __ptext26:	
  9995 ;; *************** function ___awdiv *****************
  9996 ;; Defined at:
  9997 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\awdiv.c"
  9998 ;; Parameters:    Size  Location     Type
  9999 ;;  divisor         2    0[COMMON] int 
 10000 ;;  dividend        2    2[COMMON] int 
 10001 ;; Auto vars:     Size  Location     Type
 10002 ;;  quotient        2    7[COMMON] int 
 10003 ;;  sign            1    6[COMMON] unsigned char 
 10004 ;;  counter         1    5[COMMON] unsigned char 
 10005 ;; Return value:  Size  Location     Type
 10006 ;;                  2    0[COMMON] int 
 10007 ;; Registers used:
 10008 ;;		wreg, status,2, status,0
 10009 ;; Tracked objects:
 10010 ;;		On entry : 0/0
 10011 ;;		On exit  : 0/0
 10012 ;;		Unchanged: 0/0
 10013 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
 10014 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 10015 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 10016 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 10017 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 10018 ;;Total ram usage:        9 bytes
 10019 ;; Hardware stack levels used:    1
 10020 ;; This function calls:
 10021 ;;		Nothing
 10022 ;; This function is called by:
 10023 ;;		_efgtoa
 10024 ;; This function uses a non-reentrant model
 10025 ;;
 10026                           
 10027                           
 10028                           ;psect for function ___awdiv
 10029  0806                     ___awdiv:	
 10030                           
 10031                           ;incstack = 0
 10032                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
 10033  0806  01F6               	clrf	___awdiv@sign
 10034  0807  1FF1               	btfss	___awdiv@divisor+1,7
 10035  0808  2810               	goto	l3007
 10036  0809  09F0               	comf	___awdiv@divisor,f
 10037  080A  09F1               	comf	___awdiv@divisor+1,f
 10038  080B  0AF0               	incf	___awdiv@divisor,f
 10039  080C  1903               	skipnz
 10040  080D  0AF1               	incf	___awdiv@divisor+1,f
 10041  080E  01F6               	clrf	___awdiv@sign
 10042  080F  0AF6               	incf	___awdiv@sign,f
 10043  0810                     l3007:	
 10044  0810  1FF3               	btfss	___awdiv@dividend+1,7
 10045  0811  281B               	goto	l3013
 10046  0812  09F2               	comf	___awdiv@dividend,f
 10047  0813  09F3               	comf	___awdiv@dividend+1,f
 10048  0814  0AF2               	incf	___awdiv@dividend,f
 10049  0815  1903               	skipnz
 10050  0816  0AF3               	incf	___awdiv@dividend+1,f
 10051  0817  3001               	movlw	1
 10052  0818  00F4               	movwf	??___awdiv
 10053  0819  0874               	movf	??___awdiv,w
 10054  081A  06F6               	xorwf	___awdiv@sign,f
 10055  081B                     l3013:	
 10056  081B  01F7               	clrf	___awdiv@quotient
 10057  081C  01F8               	clrf	___awdiv@quotient+1
 10058  081D  0870               	movf	___awdiv@divisor,w
 10059  081E  0471               	iorwf	___awdiv@divisor+1,w
 10060  081F  1903               	btfsc	3,2
 10061  0820  284A               	goto	l3035
 10062  0821  01F5               	clrf	___awdiv@counter
 10063  0822  0AF5               	incf	___awdiv@counter,f
 10064  0823                     l3023:	
 10065  0823  1BF1               	btfsc	___awdiv@divisor+1,7
 10066  0824  282F               	goto	l3025
 10067  0825  3001               	movlw	1
 10068  0826                     u3935:	
 10069  0826  35F0               	lslf	___awdiv@divisor,f
 10070  0827  0DF1               	rlf	___awdiv@divisor+1,f
 10071  0828  0B89               	decfsz	9,f
 10072  0829  2826               	goto	u3935
 10073  082A  3001               	movlw	1
 10074  082B  00F4               	movwf	??___awdiv
 10075  082C  0874               	movf	??___awdiv,w
 10076  082D  07F5               	addwf	___awdiv@counter,f
 10077  082E  2823               	goto	l3023
 10078  082F                     l3025:	
 10079  082F  3001               	movlw	1
 10080  0830                     u3955:	
 10081  0830  35F7               	lslf	___awdiv@quotient,f
 10082  0831  0DF8               	rlf	___awdiv@quotient+1,f
 10083  0832  0B89               	decfsz	9,f
 10084  0833  2830               	goto	u3955
 10085  0834  0871               	movf	___awdiv@divisor+1,w
 10086  0835  0273               	subwf	___awdiv@dividend+1,w
 10087  0836  1D03               	skipz
 10088  0837  283A               	goto	u3965
 10089  0838  0870               	movf	___awdiv@divisor,w
 10090  0839  0272               	subwf	___awdiv@dividend,w
 10091  083A                     u3965:	
 10092  083A  1C03               	skipc
 10093  083B  2841               	goto	l3031
 10094  083C  0870               	movf	___awdiv@divisor,w
 10095  083D  02F2               	subwf	___awdiv@dividend,f
 10096  083E  0871               	movf	___awdiv@divisor+1,w
 10097  083F  3BF3               	subwfb	___awdiv@dividend+1,f
 10098  0840  1477               	bsf	___awdiv@quotient,0
 10099  0841                     l3031:	
 10100  0841  3001               	movlw	1
 10101  0842                     u3975:	
 10102  0842  36F1               	lsrf	___awdiv@divisor+1,f
 10103  0843  0CF0               	rrf	___awdiv@divisor,f
 10104  0844  0B89               	decfsz	9,f
 10105  0845  2842               	goto	u3975
 10106  0846  3001               	movlw	1
 10107  0847  02F5               	subwf	___awdiv@counter,f
 10108  0848  1D03               	btfss	3,2
 10109  0849  282F               	goto	l3025
 10110  084A                     l3035:	
 10111  084A  0876               	movf	___awdiv@sign,w
 10112  084B  1903               	btfsc	3,2
 10113  084C  2852               	goto	l3039
 10114  084D  09F7               	comf	___awdiv@quotient,f
 10115  084E  09F8               	comf	___awdiv@quotient+1,f
 10116  084F  0AF7               	incf	___awdiv@quotient,f
 10117  0850  1903               	skipnz
 10118  0851  0AF8               	incf	___awdiv@quotient+1,f
 10119  0852                     l3039:	
 10120  0852  0878               	movf	___awdiv@quotient+1,w
 10121  0853  00F1               	movwf	?___awdiv+1
 10122  0854  0877               	movf	___awdiv@quotient,w
 10123  0855  00F0               	movwf	?___awdiv
 10124  0856  0008               	return
 10125  0857                     __end_of___awdiv:	
 10126                           
 10127                           	psect	text27
 10128  13C4                     __ptext27:	
 10129 ;; *************** function _atoi *****************
 10130 ;; Defined at:
 10131 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\atoi.c"
 10132 ;; Parameters:    Size  Location     Type
 10133 ;;  s               2    6[COMMON] PTR const unsigned char 
 10134 ;;		 -> STR_2(16), STR_1(12), 
 10135 ;; Auto vars:     Size  Location     Type
 10136 ;;  n               2    7[BANK0 ] int 
 10137 ;;  neg             2    0[BANK0 ] int 
 10138 ;; Return value:  Size  Location     Type
 10139 ;;                  2    6[COMMON] int 
 10140 ;; Registers used:
 10141 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 10142 ;; Tracked objects:
 10143 ;;		On entry : 0/0
 10144 ;;		On exit  : 0/0
 10145 ;;		Unchanged: 0/0
 10146 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
 10147 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 10148 ;;      Locals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 10149 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 10150 ;;      Totals:         6       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 10151 ;;Total ram usage:       15 bytes
 10152 ;; Hardware stack levels used:    1
 10153 ;; Hardware stack levels required when called:    1
 10154 ;; This function calls:
 10155 ;;		___wmul
 10156 ;;		_isdigit
 10157 ;;		_isspace
 10158 ;; This function is called by:
 10159 ;;		_vfpfcnvrt
 10160 ;; This function uses a non-reentrant model
 10161 ;;
 10162                           
 10163                           
 10164                           ;psect for function _atoi
 10165  13C4                     _atoi:	
 10166                           
 10167                           ;incstack = 0
 10168                           ; Regs used in _atoi: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 10169  13C4  0140               	movlb	0	; select bank0
 10170  13C5  01A7               	clrf	atoi@n
 10171  13C6  01A8               	clrf	atoi@n+1
 10172  13C7  01A0               	clrf	atoi@neg
 10173  13C8  01A1               	clrf	atoi@neg+1
 10174  13C9                     l3757:	
 10175  13C9  01A6               	clrf	_atoi$975
 10176  13CA  0AA6               	incf	_atoi$975,f
 10177  13CB  0876               	movf	atoi@s,w
 10178  13CC  0084               	movwf	4
 10179  13CD  0877               	movf	atoi@s+1,w
 10180  13CE  0085               	movwf	5
 10181  13CF  0012               	moviw fsr0++
 10182  13D0  3A20               	xorlw	32
 10183  13D1  1903               	btfsc	3,2
 10184  13D2  2BE5               	goto	l3765
 10185  13D3  0876               	movf	atoi@s,w
 10186  13D4  0084               	movwf	4
 10187  13D5  0877               	movf	atoi@s+1,w
 10188  13D6  0085               	movwf	5
 10189  13D7  0800               	movf	0,w	;code access
 10190  13D8  3EF7               	addlw	247
 10191  13D9  00F8               	movwf	??_atoi
 10192  13DA  30FF               	movlw	255
 10193  13DB  1803               	skipnc
 10194  13DC  3000               	movlw	0
 10195  13DD  00F9               	movwf	??_atoi+1
 10196  13DE  3000               	movlw	0
 10197  13DF  0279               	subwf	??_atoi+1,w
 10198  13E0  3005               	movlw	5
 10199  13E1  1903               	skipnz
 10200  13E2  0278               	subwf	??_atoi,w
 10201  13E3  1803               	btfsc	3,0
 10202  13E4  01A6               	clrf	_atoi$975
 10203  13E5                     l3765:	
 10204  13E5  0826               	movf	_atoi$975,w
 10205  13E6  00F8               	movwf	??_atoi
 10206  13E7  01F9               	clrf	??_atoi+1
 10207  13E8  0878               	movf	??_atoi,w
 10208  13E9  00A2               	movwf	_atoi$974
 10209  13EA  0879               	movf	??_atoi+1,w
 10210  13EB  00A3               	movwf	_atoi$974+1
 10211  13EC  0822               	movf	_atoi$974,w
 10212  13ED  0423               	iorwf	_atoi$974+1,w
 10213  13EE  1903               	btfsc	3,2
 10214  13EF  2BFB               	goto	l3773
 10215  13F0  3001               	movlw	1
 10216  13F1  07F6               	addwf	atoi@s,f
 10217  13F2  3000               	movlw	0
 10218  13F3  3DF7               	addwfc	atoi@s+1,f
 10219  13F4  2BC9               	goto	l3757
 10220  13F5                     l3771:	
 10221  13F5  3001               	movlw	1
 10222  13F6  0140               	movlb	0	; select bank0
 10223  13F7  00A0               	movwf	atoi@neg
 10224  13F8  3000               	movlw	0
 10225  13F9  00A1               	movwf	atoi@neg+1
 10226  13FA                     l833:	
 10227  13FA  2C33               	goto	l3777
 10228  13FB                     l3773:	
 10229  13FB  0876               	movf	atoi@s,w
 10230  13FC  0084               	movwf	4
 10231  13FD  0877               	movf	atoi@s+1,w
 10232  13FE  0085               	movwf	5
 10233  13FF  0800               	movf	0,w	;code access
 10234  1400  00F8               	movwf	??_atoi
 10235  1401  01F9               	clrf	??_atoi+1
 10236                           
 10237                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 10238                           ; Switch size 1, requested type "space"
 10239                           ; Number of cases is 1, Range of values is 0 to 0
 10240                           ; switch strategies available:
 10241                           ; Name         Instructions Cycles
 10242                           ; simple_byte            4     3 (average)
 10243                           ; direct_byte            8     6 (fixed)
 10244                           ; jumptable            260     6 (fixed)
 10245                           ;	Chosen strategy is simple_byte
 10246  1402  0879               	movf	??_atoi+1,w
 10247  1403  3A00               	xorlw	0	; case 0
 10248  1404  1903               	skipnz
 10249  1405  2C07               	goto	l4329
 10250  1406  2C37               	goto	l3779
 10251  1407                     l4329:	
 10252                           
 10253                           ; Switch size 1, requested type "space"
 10254                           ; Number of cases is 2, Range of values is 43 to 45
 10255                           ; switch strategies available:
 10256                           ; Name         Instructions Cycles
 10257                           ; simple_byte            7     4 (average)
 10258                           ; direct_byte           15     9 (fixed)
 10259                           ; jumptable            263     9 (fixed)
 10260                           ;	Chosen strategy is simple_byte
 10261  1407  0878               	movf	??_atoi,w
 10262  1408  3A2B               	xorlw	43	; case 43
 10263  1409  1903               	skipnz
 10264  140A  2BFA               	goto	l833
 10265  140B  3A06               	xorlw	6	; case 45
 10266  140C  1903               	skipnz
 10267  140D  2BF5               	goto	l3771
 10268  140E  2C37               	goto	l3779
 10269  140F  2C37               	goto	l3779
 10270  1410                     l3775:	
 10271  1410  0876               	movf	atoi@s,w
 10272  1411  0084               	movwf	4
 10273  1412  0877               	movf	atoi@s+1,w
 10274  1413  0085               	movwf	5
 10275  1414  0800               	movf	0,w	;code access
 10276  1415  3ED0               	addlw	208
 10277  1416  00F8               	movwf	??_atoi
 10278  1417  30FF               	movlw	255
 10279  1418  1803               	skipnc
 10280  1419  3000               	movlw	0
 10281  141A  00F9               	movwf	??_atoi+1
 10282  141B  09F8               	comf	??_atoi,f
 10283  141C  09F9               	comf	??_atoi+1,f
 10284  141D  0AF8               	incf	??_atoi,f
 10285  141E  1903               	skipnz
 10286  141F  0AF9               	incf	??_atoi+1,f
 10287  1420  0140               	movlb	0	; select bank0
 10288  1421  0828               	movf	atoi@n+1,w
 10289  1422  00F1               	movwf	___wmul@multiplier+1
 10290  1423  0827               	movf	atoi@n,w
 10291  1424  00F0               	movwf	___wmul@multiplier
 10292  1425  300A               	movlw	10
 10293  1426  00F2               	movwf	___wmul@multiplicand
 10294  1427  3000               	movlw	0
 10295  1428  00F3               	movwf	___wmul@multiplicand+1
 10296  1429  3190  2000  3193   	fcall	___wmul
 10297  142C  0878               	movf	??_atoi,w
 10298  142D  0770               	addwf	?___wmul,w
 10299  142E  0140               	movlb	0	; select bank0
 10300  142F  00A7               	movwf	atoi@n
 10301  1430  0879               	movf	??_atoi+1,w
 10302  1431  3D71               	addwfc	?___wmul+1,w
 10303  1432  00A8               	movwf	atoi@n+1
 10304  1433                     l3777:	
 10305  1433  3001               	movlw	1
 10306  1434  07F6               	addwf	atoi@s,f
 10307  1435  3000               	movlw	0
 10308  1436  3DF7               	addwfc	atoi@s+1,f
 10309  1437                     l3779:	
 10310  1437  0876               	movf	atoi@s,w
 10311  1438  0084               	movwf	4
 10312  1439  0877               	movf	atoi@s+1,w
 10313  143A  0085               	movwf	5
 10314  143B  0800               	movf	0,w	;code access
 10315  143C  3ED0               	addlw	208
 10316  143D  00F8               	movwf	??_atoi
 10317  143E  30FF               	movlw	255
 10318  143F  1803               	skipnc
 10319  1440  3000               	movlw	0
 10320  1441  00F9               	movwf	??_atoi+1
 10321  1442  3000               	movlw	0
 10322  1443  0279               	subwf	??_atoi+1,w
 10323  1444  300A               	movlw	10
 10324  1445  1903               	skipnz
 10325  1446  0278               	subwf	??_atoi,w
 10326  1447  1803               	btfsc	3,0
 10327  1448  2C4B               	goto	u5400
 10328  1449  3001               	movlw	1
 10329  144A  2C4C               	goto	u5410
 10330  144B                     u5400:	
 10331  144B  3000               	movlw	0
 10332  144C                     u5410:	
 10333  144C  00FA               	movwf	??_atoi+2
 10334  144D  01FB               	clrf	??_atoi+3
 10335  144E  087A               	movf	??_atoi+2,w
 10336  144F  0140               	movlb	0	; select bank0
 10337  1450  00A4               	movwf	_atoi$976
 10338  1451  087B               	movf	??_atoi+3,w
 10339  1452  00A5               	movwf	_atoi$976+1
 10340  1453  0824               	movf	_atoi$976,w
 10341  1454  0425               	iorwf	_atoi$976+1,w
 10342  1455  1D03               	btfss	3,2
 10343  1456  2C10               	goto	l3775
 10344  1457  0820               	movf	atoi@neg,w
 10345  1458  0421               	iorwf	atoi@neg+1,w
 10346  1459  1D03               	btfss	3,2
 10347  145A  2C67               	goto	l3789
 10348  145B  0927               	comf	atoi@n,w
 10349  145C  00F8               	movwf	??_atoi
 10350  145D  0928               	comf	atoi@n+1,w
 10351  145E  00F9               	movwf	??_atoi+1
 10352  145F  0AF8               	incf	??_atoi,f
 10353  1460  1903               	skipnz
 10354  1461  0AF9               	incf	??_atoi+1,f
 10355  1462  0878               	movf	??_atoi,w
 10356  1463  00F6               	movwf	?_atoi
 10357  1464  0879               	movf	??_atoi+1,w
 10358  1465  00F7               	movwf	?_atoi+1
 10359  1466  0008               	return
 10360  1467                     l3789:	
 10361  1467  0828               	movf	atoi@n+1,w
 10362  1468  00F7               	movwf	?_atoi+1
 10363  1469  0827               	movf	atoi@n,w
 10364  146A  00F6               	movwf	?_atoi
 10365  146B  0008               	return
 10366  146C                     __end_of_atoi:	
 10367                           
 10368                           	psect	text28
 10369  1D4B                     __ptext28:	
 10370 ;; *************** function _isspace *****************
 10371 ;; Defined at:
 10372 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\isspace.c"
 10373 ;; Parameters:    Size  Location     Type
 10374 ;;  c               2    0[COMMON] int 
 10375 ;; Auto vars:     Size  Location     Type
 10376 ;;		None
 10377 ;; Return value:  Size  Location     Type
 10378 ;;                  2    0[COMMON] int 
 10379 ;; Registers used:
 10380 ;;		wreg, status,2, status,0
 10381 ;; Tracked objects:
 10382 ;;		On entry : 0/0
 10383 ;;		On exit  : 0/0
 10384 ;;		Unchanged: 0/0
 10385 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
 10386 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 10387 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 10388 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 10389 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 10390 ;;Total ram usage:        5 bytes
 10391 ;; Hardware stack levels used:    1
 10392 ;; This function calls:
 10393 ;;		Nothing
 10394 ;; This function is called by:
 10395 ;;		_atoi
 10396 ;; This function uses a non-reentrant model
 10397 ;;
 10398                           
 10399                           
 10400                           ;psect for function _isspace
 10401  1D4B                     _isspace:	
 10402                           
 10403                           ;incstack = 0
 10404                           ; Regs used in _isspace: [wreg+status,2+status,0]
 10405  1D4B  01F4               	clrf	_isspace$1005
 10406  1D4C  0AF4               	incf	_isspace$1005,f
 10407  1D4D  3020               	movlw	32
 10408  1D4E  0670               	xorwf	isspace@c,w
 10409  1D4F  0471               	iorwf	isspace@c+1,w
 10410  1D50  1903               	btfsc	3,2
 10411  1D51  2D5F               	goto	l3457
 10412  1D52  0870               	movf	isspace@c,w
 10413  1D53  3EF7               	addlw	247
 10414  1D54  00F2               	movwf	??_isspace
 10415  1D55  30FF               	movlw	255
 10416  1D56  3D71               	addwfc	isspace@c+1,w
 10417  1D57  00F3               	movwf	??_isspace+1
 10418  1D58  3000               	movlw	0
 10419  1D59  0273               	subwf	??_isspace+1,w
 10420  1D5A  3005               	movlw	5
 10421  1D5B  1903               	skipnz
 10422  1D5C  0272               	subwf	??_isspace,w
 10423  1D5D  1803               	btfsc	3,0
 10424  1D5E  01F4               	clrf	_isspace$1005
 10425  1D5F                     l3457:	
 10426  1D5F  0874               	movf	_isspace$1005,w
 10427  1D60  00F2               	movwf	??_isspace
 10428  1D61  01F3               	clrf	??_isspace+1
 10429  1D62  0872               	movf	??_isspace,w
 10430  1D63  00F0               	movwf	?_isspace
 10431  1D64  0873               	movf	??_isspace+1,w
 10432  1D65  00F1               	movwf	?_isspace+1
 10433  1D66  0008               	return
 10434  1D67                     __end_of_isspace:	
 10435                           
 10436                           	psect	text29
 10437  1D1D                     __ptext29:	
 10438 ;; *************** function _isdigit *****************
 10439 ;; Defined at:
 10440 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\isdigit.c"
 10441 ;; Parameters:    Size  Location     Type
 10442 ;;  c               2    0[COMMON] int 
 10443 ;; Auto vars:     Size  Location     Type
 10444 ;;		None
 10445 ;; Return value:  Size  Location     Type
 10446 ;;                  2    0[COMMON] int 
 10447 ;; Registers used:
 10448 ;;		wreg, status,2, status,0
 10449 ;; Tracked objects:
 10450 ;;		On entry : 0/0
 10451 ;;		On exit  : 0/0
 10452 ;;		Unchanged: 0/0
 10453 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
 10454 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 10455 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 10456 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 10457 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 10458 ;;Total ram usage:        6 bytes
 10459 ;; Hardware stack levels used:    1
 10460 ;; This function calls:
 10461 ;;		Nothing
 10462 ;; This function is called by:
 10463 ;;		_vfpfcnvrt
 10464 ;;		_atoi
 10465 ;; This function uses a non-reentrant model
 10466 ;;
 10467                           
 10468                           
 10469                           ;psect for function _isdigit
 10470  1D1D                     _isdigit:	
 10471                           
 10472                           ;incstack = 0
 10473                           ; Regs used in _isdigit: [wreg+status,2+status,0]
 10474  1D1D  0870               	movf	isdigit@c,w
 10475  1D1E  3ED0               	addlw	208
 10476  1D1F  00F2               	movwf	??_isdigit
 10477  1D20  30FF               	movlw	255
 10478  1D21  3D71               	addwfc	isdigit@c+1,w
 10479  1D22  00F3               	movwf	??_isdigit+1
 10480  1D23  3000               	movlw	0
 10481  1D24  0273               	subwf	??_isdigit+1,w
 10482  1D25  300A               	movlw	10
 10483  1D26  1903               	skipnz
 10484  1D27  0272               	subwf	??_isdigit,w
 10485  1D28  1803               	btfsc	3,0
 10486  1D29  2D2C               	goto	u3840
 10487  1D2A  3001               	movlw	1
 10488  1D2B  2D2D               	goto	u3850
 10489  1D2C                     u3840:	
 10490  1D2C  3000               	movlw	0
 10491  1D2D                     u3850:	
 10492  1D2D  00F4               	movwf	??_isdigit+2
 10493  1D2E  01F5               	clrf	??_isdigit+3
 10494  1D2F  0874               	movf	??_isdigit+2,w
 10495  1D30  00F0               	movwf	?_isdigit
 10496  1D31  0875               	movf	??_isdigit+3,w
 10497  1D32  00F1               	movwf	?_isdigit+1
 10498  1D33  0008               	return
 10499  1D34                     __end_of_isdigit:	
 10500                           
 10501                           	psect	text30
 10502  1000                     __ptext30:	
 10503 ;; *************** function ___wmul *****************
 10504 ;; Defined at:
 10505 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\Umul16.c"
 10506 ;; Parameters:    Size  Location     Type
 10507 ;;  multiplier      2    0[COMMON] unsigned int 
 10508 ;;  multiplicand    2    2[COMMON] unsigned int 
 10509 ;; Auto vars:     Size  Location     Type
 10510 ;;  product         2    4[COMMON] unsigned int 
 10511 ;; Return value:  Size  Location     Type
 10512 ;;                  2    0[COMMON] unsigned int 
 10513 ;; Registers used:
 10514 ;;		wreg, status,2, status,0
 10515 ;; Tracked objects:
 10516 ;;		On entry : 0/0
 10517 ;;		On exit  : 0/0
 10518 ;;		Unchanged: 0/0
 10519 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
 10520 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 10521 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 10522 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 10523 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 10524 ;;Total ram usage:        6 bytes
 10525 ;; Hardware stack levels used:    1
 10526 ;; This function calls:
 10527 ;;		Nothing
 10528 ;; This function is called by:
 10529 ;;		_atoi
 10530 ;; This function uses a non-reentrant model
 10531 ;;
 10532                           
 10533                           
 10534                           ;psect for function ___wmul
 10535  1000                     ___wmul:	
 10536                           
 10537                           ;incstack = 0
 10538                           ; Regs used in ___wmul: [wreg+status,2+status,0]
 10539  1000  01F4               	clrf	___wmul@product
 10540  1001  01F5               	clrf	___wmul@product+1
 10541  1002                     l2987:	
 10542  1002  1C70               	btfss	___wmul@multiplier,0
 10543  1003  2808               	goto	l373
 10544  1004  0872               	movf	___wmul@multiplicand,w
 10545  1005  07F4               	addwf	___wmul@product,f
 10546  1006  0873               	movf	___wmul@multiplicand+1,w
 10547  1007  3DF5               	addwfc	___wmul@product+1,f
 10548  1008                     l373:	
 10549  1008  3001               	movlw	1
 10550  1009                     u3875:	
 10551  1009  35F2               	lslf	___wmul@multiplicand,f
 10552  100A  0DF3               	rlf	___wmul@multiplicand+1,f
 10553  100B  0B89               	decfsz	9,f
 10554  100C  2809               	goto	u3875
 10555  100D  3001               	movlw	1
 10556  100E                     u3885:	
 10557  100E  36F1               	lsrf	___wmul@multiplier+1,f
 10558  100F  0CF0               	rrf	___wmul@multiplier,f
 10559  1010  0B89               	decfsz	9,f
 10560  1011  280E               	goto	u3885
 10561  1012  0870               	movf	___wmul@multiplier,w
 10562  1013  0471               	iorwf	___wmul@multiplier+1,w
 10563  1014  1D03               	btfss	3,2
 10564  1015  2802               	goto	l2987
 10565  1016  0875               	movf	___wmul@product+1,w
 10566  1017  00F1               	movwf	?___wmul+1
 10567  1018  0874               	movf	___wmul@product,w
 10568  1019  00F0               	movwf	?___wmul
 10569  101A  0008               	return
 10570  101B                     __end_of___wmul:	
 10571                           
 10572                           	psect	text31
 10573  11FE                     __ptext31:	
 10574 ;; *************** function ___xxtofl *****************
 10575 ;; Defined at:
 10576 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\xxtofl.c"
 10577 ;; Parameters:    Size  Location     Type
 10578 ;;  sign            1    wreg     unsigned char 
 10579 ;;  val             4    0[COMMON] long 
 10580 ;; Auto vars:     Size  Location     Type
 10581 ;;  sign            1    8[COMMON] unsigned char 
 10582 ;;  arg             4   10[COMMON] unsigned long 
 10583 ;;  exp             1    9[COMMON] unsigned char 
 10584 ;; Return value:  Size  Location     Type
 10585 ;;                  4    0[COMMON] unsigned char 
 10586 ;; Registers used:
 10587 ;;		wreg, status,2, status,0
 10588 ;; Tracked objects:
 10589 ;;		On entry : 0/0
 10590 ;;		On exit  : 0/0
 10591 ;;		Unchanged: 0/0
 10592 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
 10593 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 10594 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 10595 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 10596 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 10597 ;;Total ram usage:       14 bytes
 10598 ;; Hardware stack levels used:    1
 10599 ;; This function calls:
 10600 ;;		Nothing
 10601 ;; This function is called by:
 10602 ;;		_main
 10603 ;; This function uses a non-reentrant model
 10604 ;;
 10605                           
 10606                           
 10607                           ;psect for function ___xxtofl
 10608  11FE                     ___xxtofl:	
 10609                           
 10610                           ;incstack = 0
 10611                           ; Regs used in ___xxtofl: [wreg+status,2+status,0]
 10612                           ;___xxtofl@sign stored from wreg
 10613  11FE  00F8               	movwf	___xxtofl@sign
 10614  11FF  0878               	movf	___xxtofl@sign,w
 10615  1200  1D03               	btfss	3,2
 10616  1201  1FF3               	btfss	___xxtofl@val+3,7
 10617  1202  2A13               	goto	l4119
 10618  1203  0970               	comf	___xxtofl@val,w
 10619  1204  00FA               	movwf	___xxtofl@arg
 10620  1205  0971               	comf	___xxtofl@val+1,w
 10621  1206  00FB               	movwf	___xxtofl@arg+1
 10622  1207  0972               	comf	___xxtofl@val+2,w
 10623  1208  00FC               	movwf	___xxtofl@arg+2
 10624  1209  0973               	comf	___xxtofl@val+3,w
 10625  120A  00FD               	movwf	___xxtofl@arg+3
 10626  120B  0AFA               	incf	___xxtofl@arg,f
 10627  120C  1903               	skipnz
 10628  120D  0AFB               	incf	___xxtofl@arg+1,f
 10629  120E  1903               	skipnz
 10630  120F  0AFC               	incf	___xxtofl@arg+2,f
 10631  1210  1903               	skipnz
 10632  1211  0AFD               	incf	___xxtofl@arg+3,f
 10633  1212  2A1B               	goto	l789
 10634  1213                     l4119:	
 10635  1213  0873               	movf	___xxtofl@val+3,w
 10636  1214  00FD               	movwf	___xxtofl@arg+3
 10637  1215  0872               	movf	___xxtofl@val+2,w
 10638  1216  00FC               	movwf	___xxtofl@arg+2
 10639  1217  0871               	movf	___xxtofl@val+1,w
 10640  1218  00FB               	movwf	___xxtofl@arg+1
 10641  1219  0870               	movf	___xxtofl@val,w
 10642  121A  00FA               	movwf	___xxtofl@arg
 10643  121B                     l789:	
 10644  121B  0873               	movf	___xxtofl@val+3,w
 10645  121C  0472               	iorwf	___xxtofl@val+2,w
 10646  121D  0471               	iorwf	___xxtofl@val+1,w
 10647  121E  0470               	iorwf	___xxtofl@val,w
 10648  121F  1D03               	skipz
 10649  1220  2A2A               	goto	l4125
 10650  1221  3000               	movlw	0
 10651  1222  00F3               	movwf	?___xxtofl+3
 10652  1223  3000               	movlw	0
 10653  1224  00F2               	movwf	?___xxtofl+2
 10654  1225  3000               	movlw	0
 10655  1226  00F1               	movwf	?___xxtofl+1
 10656  1227  3000               	movlw	0
 10657  1228  00F0               	movwf	?___xxtofl
 10658  1229  0008               	return
 10659  122A                     l4125:	
 10660  122A  3096               	movlw	150
 10661  122B  00F4               	movwf	??___xxtofl
 10662  122C  0874               	movf	??___xxtofl,w
 10663  122D  00F9               	movwf	___xxtofl@exp
 10664  122E                     l4129:	
 10665  122E  30FE               	movlw	254
 10666  122F  057D               	andwf	___xxtofl@arg+3,w
 10667  1230  1903               	btfsc	3,2
 10668  1231  2A51               	goto	l795
 10669  1232  3001               	movlw	1
 10670  1233  00F4               	movwf	??___xxtofl
 10671  1234  0874               	movf	??___xxtofl,w
 10672  1235  07F9               	addwf	___xxtofl@exp,f
 10673  1236  3001               	movlw	1
 10674  1237                     u5895:	
 10675  1237  36FD               	lsrf	___xxtofl@arg+3,f
 10676  1238  0CFC               	rrf	___xxtofl@arg+2,f
 10677  1239  0CFB               	rrf	___xxtofl@arg+1,f
 10678  123A  0CFA               	rrf	___xxtofl@arg,f
 10679  123B  0B89               	decfsz	9,f
 10680  123C  2A37               	goto	u5895
 10681  123D  2A2E               	goto	l4129
 10682  123E                     l4131:	
 10683  123E  3001               	movlw	1
 10684  123F  00F4               	movwf	??___xxtofl
 10685  1240  0874               	movf	??___xxtofl,w
 10686  1241  07F9               	addwf	___xxtofl@exp,f
 10687  1242  3001               	movlw	1
 10688  1243  07FA               	addwf	___xxtofl@arg,f
 10689  1244  3000               	movlw	0
 10690  1245  3DFB               	addwfc	___xxtofl@arg+1,f
 10691  1246  3000               	movlw	0
 10692  1247  3DFC               	addwfc	___xxtofl@arg+2,f
 10693  1248  3000               	movlw	0
 10694  1249  3DFD               	addwfc	___xxtofl@arg+3,f
 10695  124A  3001               	movlw	1
 10696  124B                     u5915:	
 10697  124B  36FD               	lsrf	___xxtofl@arg+3,f
 10698  124C  0CFC               	rrf	___xxtofl@arg+2,f
 10699  124D  0CFB               	rrf	___xxtofl@arg+1,f
 10700  124E  0CFA               	rrf	___xxtofl@arg,f
 10701  124F  0B89               	decfsz	9,f
 10702  1250  2A4B               	goto	u5915
 10703  1251                     l795:	
 10704  1251  30FF               	movlw	255
 10705  1252  057D               	andwf	___xxtofl@arg+3,w
 10706  1253  1903               	btfsc	3,2
 10707  1254  2A5F               	goto	l4139
 10708  1255  2A3E               	goto	l4131
 10709  1256                     l4137:	
 10710  1256  3001               	movlw	1
 10711  1257  02F9               	subwf	___xxtofl@exp,f
 10712  1258  3001               	movlw	1
 10713  1259                     u5935:	
 10714  1259  35FA               	lslf	___xxtofl@arg,f
 10715  125A  0DFB               	rlf	___xxtofl@arg+1,f
 10716  125B  0DFC               	rlf	___xxtofl@arg+2,f
 10717  125C  0DFD               	rlf	___xxtofl@arg+3,f
 10718  125D  0B89               	decfsz	9,f
 10719  125E  2A59               	goto	u5935
 10720  125F                     l4139:	
 10721  125F  1BFC               	btfsc	___xxtofl@arg+2,7
 10722  1260  2A65               	goto	l802
 10723  1261  3002               	movlw	2
 10724  1262  0279               	subwf	___xxtofl@exp,w
 10725  1263  1803               	skipnc
 10726  1264  2A56               	goto	l4137
 10727  1265                     l802:	
 10728  1265  1879               	btfsc	___xxtofl@exp,0
 10729  1266  2A6F               	goto	l803
 10730  1267  30FF               	movlw	255
 10731  1268  05FA               	andwf	___xxtofl@arg,f
 10732  1269  30FF               	movlw	255
 10733  126A  05FB               	andwf	___xxtofl@arg+1,f
 10734  126B  307F               	movlw	127
 10735  126C  05FC               	andwf	___xxtofl@arg+2,f
 10736  126D  30FF               	movlw	255
 10737  126E  05FD               	andwf	___xxtofl@arg+3,f
 10738  126F                     l803:	
 10739  126F  1003               	clrc
 10740  1270  0CF9               	rrf	___xxtofl@exp,f
 10741  1271  0879               	movf	___xxtofl@exp,w
 10742  1272  00F4               	movwf	??___xxtofl
 10743  1273  01F5               	clrf	??___xxtofl+1
 10744  1274  01F6               	clrf	??___xxtofl+2
 10745  1275  01F7               	clrf	??___xxtofl+3
 10746  1276  3018               	movlw	24
 10747  1277                     u5975:	
 10748  1277  35F4               	lslf	??___xxtofl,f
 10749  1278  0DF5               	rlf	??___xxtofl+1,f
 10750  1279  0DF6               	rlf	??___xxtofl+2,f
 10751  127A  0DF7               	rlf	??___xxtofl+3,f
 10752  127B  0B89               	decfsz	9,f
 10753  127C  2A77               	goto	u5975
 10754  127D  0874               	movf	??___xxtofl,w
 10755  127E  04FA               	iorwf	___xxtofl@arg,f
 10756  127F  0875               	movf	??___xxtofl+1,w
 10757  1280  04FB               	iorwf	___xxtofl@arg+1,f
 10758  1281  0876               	movf	??___xxtofl+2,w
 10759  1282  04FC               	iorwf	___xxtofl@arg+2,f
 10760  1283  0877               	movf	??___xxtofl+3,w
 10761  1284  04FD               	iorwf	___xxtofl@arg+3,f
 10762  1285  0878               	movf	___xxtofl@sign,w
 10763  1286  1D03               	btfss	3,2
 10764  1287  1FF3               	btfss	___xxtofl@val+3,7
 10765  1288  2A8A               	goto	l4153
 10766  1289  17FD               	bsf	___xxtofl@arg+3,7
 10767  128A                     l4153:	
 10768  128A  087D               	movf	___xxtofl@arg+3,w
 10769  128B  00F3               	movwf	?___xxtofl+3
 10770  128C  087C               	movf	___xxtofl@arg+2,w
 10771  128D  00F2               	movwf	?___xxtofl+2
 10772  128E  087B               	movf	___xxtofl@arg+1,w
 10773  128F  00F1               	movwf	?___xxtofl+1
 10774  1290  087A               	movf	___xxtofl@arg,w
 10775  1291  00F0               	movwf	?___xxtofl
 10776  1292  0008               	return
 10777  1293                     __end_of___xxtofl:	
 10778                           
 10779                           	psect	text32
 10780  1E98                     __ptext32:	
 10781 ;; *************** function _Lcd_Out2 *****************
 10782 ;; Defined at:
 10783 ;;		line 115 in file "./flex_lcd.h"
 10784 ;; Parameters:    Size  Location     Type
 10785 ;;  y               1    wreg     unsigned char 
 10786 ;;  x               1    3[COMMON] unsigned char 
 10787 ;;  buffer          1    4[COMMON] PTR unsigned char 
 10788 ;;		 -> main@buffer1(16), 
 10789 ;; Auto vars:     Size  Location     Type
 10790 ;;  y               1    7[COMMON] unsigned char 
 10791 ;;  data            1    8[COMMON] unsigned char 
 10792 ;; Return value:  Size  Location     Type
 10793 ;;                  1    wreg      void 
 10794 ;; Registers used:
 10795 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 10796 ;; Tracked objects:
 10797 ;;		On entry : 0/0
 10798 ;;		On exit  : 0/0
 10799 ;;		Unchanged: 0/0
 10800 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
 10801 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 10802 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 10803 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 10804 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 10805 ;;Total ram usage:        6 bytes
 10806 ;; Hardware stack levels used:    1
 10807 ;; Hardware stack levels required when called:    1
 10808 ;; This function calls:
 10809 ;;		_Lcd_Chr_CP
 10810 ;;		_Lcd_Cmd
 10811 ;; This function is called by:
 10812 ;;		_main
 10813 ;; This function uses a non-reentrant model
 10814 ;;
 10815                           
 10816                           
 10817                           ;psect for function _Lcd_Out2
 10818  1E98                     _Lcd_Out2:	
 10819                           
 10820                           ;incstack = 0
 10821                           ; Regs used in _Lcd_Out2: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 10822                           ;Lcd_Out2@y stored from wreg
 10823  1E98  00F7               	movwf	Lcd_Out2@y
 10824                           
 10825                           ;./flex_lcd.h: 115: void Lcd_Out2(unsigned char y, unsigned char x, char *buffer);./flex
      +                          _lcd.h: 116: {;./flex_lcd.h: 117: unsigned char data;;./flex_lcd.h: 118: switch (y)
 10826  1E99  2EA9               	goto	l4087
 10827  1E9A                     l4077:	
 10828                           ;./flex_lcd.h: 119: {;./flex_lcd.h: 120:     case 1: data = 128 + x; break;
 10829                           
 10830  1E9A  0873               	movf	Lcd_Out2@x,w
 10831  1E9B  3E80               	addlw	128
 10832  1E9C  2EA5               	goto	L14
 10833  1E9D                     l4079:	
 10834                           ;./flex_lcd.h: 121:     case 2: data = 192 + x; break;
 10835                           
 10836  1E9D  0873               	movf	Lcd_Out2@x,w
 10837  1E9E  3EC0               	addlw	192
 10838  1E9F  2EA5               	goto	L14
 10839  1EA0                     l4081:	
 10840                           ;./flex_lcd.h: 122:     case 3: data = 148 + x; break;
 10841                           
 10842  1EA0  0873               	movf	Lcd_Out2@x,w
 10843  1EA1  3E94               	addlw	148
 10844  1EA2  2EA5               	goto	L14
 10845  1EA3                     l4083:	
 10846                           ;./flex_lcd.h: 123:     case 4: data = 212 + x; break;
 10847                           
 10848  1EA3  0873               	movf	Lcd_Out2@x,w
 10849  1EA4  3ED4               	addlw	212
 10850  1EA5                     L14:	
 10851  1EA5  00F5               	movwf	??_Lcd_Out2
 10852  1EA6  0875               	movf	??_Lcd_Out2,w
 10853  1EA7  00F8               	movwf	Lcd_Out2@data
 10854                           
 10855                           ;./flex_lcd.h: 125: }
 10856                           
 10857                           ;./flex_lcd.h: 124:     default: break;
 10858  1EA8  2EBF               	goto	l4089
 10859  1EA9                     l4087:	
 10860  1EA9  0877               	movf	Lcd_Out2@y,w
 10861  1EAA  00F5               	movwf	??_Lcd_Out2
 10862  1EAB  01F6               	clrf	??_Lcd_Out2+1
 10863                           
 10864                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 10865                           ; Switch size 1, requested type "space"
 10866                           ; Number of cases is 1, Range of values is 0 to 0
 10867                           ; switch strategies available:
 10868                           ; Name         Instructions Cycles
 10869                           ; simple_byte            4     3 (average)
 10870                           ; direct_byte            8     6 (fixed)
 10871                           ; jumptable            260     6 (fixed)
 10872                           ;	Chosen strategy is simple_byte
 10873  1EAC  0876               	movf	??_Lcd_Out2+1,w
 10874  1EAD  3A00               	xorlw	0	; case 0
 10875  1EAE  1903               	skipnz
 10876  1EAF  2EB1               	goto	l4331
 10877  1EB0  2EBF               	goto	l4089
 10878  1EB1                     l4331:	
 10879                           
 10880                           ; Switch size 1, requested type "space"
 10881                           ; Number of cases is 4, Range of values is 1 to 4
 10882                           ; switch strategies available:
 10883                           ; Name         Instructions Cycles
 10884                           ; simple_byte           13     7 (average)
 10885                           ; direct_byte           17     9 (fixed)
 10886                           ; jumptable            263     9 (fixed)
 10887                           ;	Chosen strategy is simple_byte
 10888  1EB1  0875               	movf	??_Lcd_Out2,w
 10889  1EB2  3A01               	xorlw	1	; case 1
 10890  1EB3  1903               	skipnz
 10891  1EB4  2E9A               	goto	l4077
 10892  1EB5  3A03               	xorlw	3	; case 2
 10893  1EB6  1903               	skipnz
 10894  1EB7  2E9D               	goto	l4079
 10895  1EB8  3A01               	xorlw	1	; case 3
 10896  1EB9  1903               	skipnz
 10897  1EBA  2EA0               	goto	l4081
 10898  1EBB  3A07               	xorlw	7	; case 4
 10899  1EBC  1903               	skipnz
 10900  1EBD  2EA3               	goto	l4083
 10901  1EBE  2EBF               	goto	l4089
 10902  1EBF                     l4089:	
 10903                           
 10904                           ;./flex_lcd.h: 126: Lcd_Cmd(data);
 10905  1EBF  0878               	movf	Lcd_Out2@data,w
 10906  1EC0  3191  216B  319E   	fcall	_Lcd_Cmd
 10907  1EC3                     l4095:	
 10908                           ;./flex_lcd.h: 131: }
 10909                           
 10910                           ;./flex_lcd.h: 127: while(*buffer)
 10911                           
 10912                           
 10913                           ;./flex_lcd.h: 127: while(*buffer)
 10914  1EC3  0874               	movf	Lcd_Out2@buffer,w
 10915  1EC4  0086               	movwf	6
 10916  1EC5  3001               	movlw	1	; select bank2/3
 10917  1EC6  0087               	movwf	7
 10918  1EC7  0801               	movf	1,w
 10919  1EC8  1903               	btfsc	3,2
 10920  1EC9  0008               	return
 10921                           
 10922                           ;./flex_lcd.h: 128: {;./flex_lcd.h: 129:     Lcd_Chr_CP(*buffer);
 10923  1ECA  0874               	movf	Lcd_Out2@buffer,w
 10924  1ECB  0086               	movwf	6
 10925  1ECC  3001               	movlw	1	; select bank2/3
 10926  1ECD  0087               	movwf	7
 10927  1ECE  0801               	movf	1,w
 10928  1ECF  3192  2293  319E   	fcall	_Lcd_Chr_CP
 10929                           
 10930                           ;./flex_lcd.h: 130:     buffer++;
 10931  1ED2  3001               	movlw	1
 10932  1ED3  00F5               	movwf	??_Lcd_Out2
 10933  1ED4  0875               	movf	??_Lcd_Out2,w
 10934  1ED5  07F4               	addwf	Lcd_Out2@buffer,f
 10935  1ED6  2EC3               	goto	l4095
 10936  1ED7                     __end_of_Lcd_Out2:	
 10937                           ;./flex_lcd.h: 132: return;
 10938                           
 10939                           
 10940                           	psect	text33
 10941  1293                     __ptext33:	
 10942 ;; *************** function _Lcd_Chr_CP *****************
 10943 ;; Defined at:
 10944 ;;		line 136 in file "./flex_lcd.h"
 10945 ;; Parameters:    Size  Location     Type
 10946 ;;  data            1    wreg     unsigned char 
 10947 ;; Auto vars:     Size  Location     Type
 10948 ;;  data            1    2[COMMON] unsigned char 
 10949 ;; Return value:  Size  Location     Type
 10950 ;;                  1    wreg      void 
 10951 ;; Registers used:
 10952 ;;		wreg, status,2, status,0
 10953 ;; Tracked objects:
 10954 ;;		On entry : 0/0
 10955 ;;		On exit  : 0/0
 10956 ;;		Unchanged: 0/0
 10957 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
 10958 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 10959 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 10960 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 10961 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 10962 ;;Total ram usage:        3 bytes
 10963 ;; Hardware stack levels used:    1
 10964 ;; This function calls:
 10965 ;;		Nothing
 10966 ;; This function is called by:
 10967 ;;		_Lcd_Out2
 10968 ;;		_Lcd_Out
 10969 ;; This function uses a non-reentrant model
 10970 ;;
 10971                           
 10972                           
 10973                           ;psect for function _Lcd_Chr_CP
 10974  1293                     _Lcd_Chr_CP:	
 10975                           
 10976                           ;incstack = 0
 10977                           ; Regs used in _Lcd_Chr_CP: [wreg+status,2+status,0]
 10978                           ;Lcd_Chr_CP@data stored from wreg
 10979  1293  00F2               	movwf	Lcd_Chr_CP@data
 10980                           
 10981                           ;./flex_lcd.h: 137: PORTDbits.RD3 = 0; PORTDbits.RD2 = 1;
 10982  1294  0140               	movlb	0	; select bank0
 10983  1295  118F               	bcf	15,3	;volatile
 10984  1296  150F               	bsf	15,2	;volatile
 10985                           
 10986                           ;./flex_lcd.h: 138: PORTCbits.RC3 = (data & 0b10000000)>>7; PORTDbits.RD0 = (data & 0b01
      +                          000000)>>6;
 10987  1297  0872               	movf	Lcd_Chr_CP@data,w
 10988  1298  00F0               	movwf	??_Lcd_Chr_CP
 10989  1299  3007               	movlw	7
 10990  129A                     u5765:	
 10991  129A  36F0               	lsrf	??_Lcd_Chr_CP,f
 10992  129B  0B89               	decfsz	9,f
 10993  129C  2A9A               	goto	u5765
 10994  129D  0870               	movf	??_Lcd_Chr_CP,w
 10995  129E  3901               	andlw	1
 10996  129F  00F1               	movwf	??_Lcd_Chr_CP+1
 10997  12A0  0DF1               	rlf	??_Lcd_Chr_CP+1,f
 10998  12A1  0DF1               	rlf	??_Lcd_Chr_CP+1,f
 10999  12A2  0DF1               	rlf	??_Lcd_Chr_CP+1,f
 11000  12A3  080E               	movf	14,w	;volatile
 11001  12A4  0671               	xorwf	??_Lcd_Chr_CP+1,w
 11002  12A5  39F7               	andlw	-9
 11003  12A6  0671               	xorwf	??_Lcd_Chr_CP+1,w
 11004  12A7  008E               	movwf	14	;volatile
 11005  12A8  0872               	movf	Lcd_Chr_CP@data,w
 11006  12A9  00F0               	movwf	??_Lcd_Chr_CP
 11007  12AA  3006               	movlw	6
 11008  12AB                     u5775:	
 11009  12AB  36F0               	lsrf	??_Lcd_Chr_CP,f
 11010  12AC  0B89               	decfsz	9,f
 11011  12AD  2AAB               	goto	u5775
 11012  12AE  3001               	movlw	1
 11013  12AF  0570               	andwf	??_Lcd_Chr_CP,w
 11014  12B0  00F1               	movwf	??_Lcd_Chr_CP+1
 11015  12B1  080F               	movf	15,w	;volatile
 11016  12B2  0671               	xorwf	??_Lcd_Chr_CP+1,w
 11017  12B3  39FE               	andlw	-2
 11018  12B4  0671               	xorwf	??_Lcd_Chr_CP+1,w
 11019  12B5  008F               	movwf	15	;volatile
 11020                           
 11021                           ;./flex_lcd.h: 139: PORTDbits.RD1 = (data & 0b00100000)>>5; PORTCbits.RC4 = (data & 0b00
      +                          010000)>>4;
 11022  12B6  0872               	movf	Lcd_Chr_CP@data,w
 11023  12B7  00F0               	movwf	??_Lcd_Chr_CP
 11024  12B8  3005               	movlw	5
 11025  12B9                     u5785:	
 11026  12B9  36F0               	lsrf	??_Lcd_Chr_CP,f
 11027  12BA  0B89               	decfsz	9,f
 11028  12BB  2AB9               	goto	u5785
 11029  12BC  0870               	movf	??_Lcd_Chr_CP,w
 11030  12BD  3901               	andlw	1
 11031  12BE  00F1               	movwf	??_Lcd_Chr_CP+1
 11032  12BF  0DF1               	rlf	??_Lcd_Chr_CP+1,f
 11033  12C0  080F               	movf	15,w	;volatile
 11034  12C1  0671               	xorwf	??_Lcd_Chr_CP+1,w
 11035  12C2  39FD               	andlw	-3
 11036  12C3  0671               	xorwf	??_Lcd_Chr_CP+1,w
 11037  12C4  008F               	movwf	15	;volatile
 11038  12C5  0872               	movf	Lcd_Chr_CP@data,w
 11039  12C6  00F0               	movwf	??_Lcd_Chr_CP
 11040  12C7  3004               	movlw	4
 11041  12C8                     u5795:	
 11042  12C8  36F0               	lsrf	??_Lcd_Chr_CP,f
 11043  12C9  0B89               	decfsz	9,f
 11044  12CA  2AC8               	goto	u5795
 11045  12CB  0870               	movf	??_Lcd_Chr_CP,w
 11046  12CC  3901               	andlw	1
 11047  12CD  00F1               	movwf	??_Lcd_Chr_CP+1
 11048  12CE  0EF1               	swapf	??_Lcd_Chr_CP+1,f
 11049  12CF  080E               	movf	14,w	;volatile
 11050  12D0  0671               	xorwf	??_Lcd_Chr_CP+1,w
 11051  12D1  39EF               	andlw	-17
 11052  12D2  0671               	xorwf	??_Lcd_Chr_CP+1,w
 11053  12D3  008E               	movwf	14	;volatile
 11054                           
 11055                           ;./flex_lcd.h: 140: _delay(10);
 11056  12D4  3003               	movlw	3
 11057  12D5                     u6107:	
 11058  12D5  0B89               	decfsz	9,f
 11059  12D6  2AD5               	goto	u6107
 11060  12D7  0000               	nop
 11061                           
 11062                           ;./flex_lcd.h: 141: PORTDbits.RD3 = 1; _delay((unsigned long)((5)*(32000000/4000000.0)))
      +                          ; PORTDbits.RD3 = 0;
 11063  12D8  0140               	movlb	0	; select bank0
 11064  12D9  158F               	bsf	15,3	;volatile
 11065  12DA  300D               	movlw	13
 11066  12DB                     u6117:	
 11067  12DB  0B89               	decfsz	9,f
 11068  12DC  2ADB               	goto	u6117
 11069  12DD  0000               	nop
 11070  12DE  0140               	movlb	0	; select bank0
 11071  12DF  118F               	bcf	15,3	;volatile
 11072                           
 11073                           ;./flex_lcd.h: 142: PORTCbits.RC3 = (data & 0b00001000)>>3; PORTDbits.RD0 = (data & 0b00
      +                          000100)>>2;
 11074  12E0  0872               	movf	Lcd_Chr_CP@data,w
 11075  12E1  00F0               	movwf	??_Lcd_Chr_CP
 11076  12E2  3003               	movlw	3
 11077  12E3                     u5805:	
 11078  12E3  36F0               	lsrf	??_Lcd_Chr_CP,f
 11079  12E4  0B89               	decfsz	9,f
 11080  12E5  2AE3               	goto	u5805
 11081  12E6  0870               	movf	??_Lcd_Chr_CP,w
 11082  12E7  3901               	andlw	1
 11083  12E8  00F1               	movwf	??_Lcd_Chr_CP+1
 11084  12E9  0DF1               	rlf	??_Lcd_Chr_CP+1,f
 11085  12EA  0DF1               	rlf	??_Lcd_Chr_CP+1,f
 11086  12EB  0DF1               	rlf	??_Lcd_Chr_CP+1,f
 11087  12EC  080E               	movf	14,w	;volatile
 11088  12ED  0671               	xorwf	??_Lcd_Chr_CP+1,w
 11089  12EE  39F7               	andlw	-9
 11090  12EF  0671               	xorwf	??_Lcd_Chr_CP+1,w
 11091  12F0  008E               	movwf	14	;volatile
 11092  12F1  0872               	movf	Lcd_Chr_CP@data,w
 11093  12F2  00F0               	movwf	??_Lcd_Chr_CP
 11094  12F3  3002               	movlw	2
 11095  12F4                     u5815:	
 11096  12F4  36F0               	lsrf	??_Lcd_Chr_CP,f
 11097  12F5  0B89               	decfsz	9,f
 11098  12F6  2AF4               	goto	u5815
 11099  12F7  3001               	movlw	1
 11100  12F8  0570               	andwf	??_Lcd_Chr_CP,w
 11101  12F9  00F1               	movwf	??_Lcd_Chr_CP+1
 11102  12FA  080F               	movf	15,w	;volatile
 11103  12FB  0671               	xorwf	??_Lcd_Chr_CP+1,w
 11104  12FC  39FE               	andlw	-2
 11105  12FD  0671               	xorwf	??_Lcd_Chr_CP+1,w
 11106  12FE  008F               	movwf	15	;volatile
 11107                           
 11108                           ;./flex_lcd.h: 143: PORTDbits.RD1 = (data & 0b00000010)>>1; PORTCbits.RC4 = (data & 0b00
      +                          000001);
 11109  12FF  3672               	lsrf	Lcd_Chr_CP@data,w
 11110  1300  3901               	andlw	1
 11111  1301  00F0               	movwf	??_Lcd_Chr_CP
 11112  1302  0DF0               	rlf	??_Lcd_Chr_CP,f
 11113  1303  080F               	movf	15,w	;volatile
 11114  1304  0670               	xorwf	??_Lcd_Chr_CP,w
 11115  1305  39FD               	andlw	-3
 11116  1306  0670               	xorwf	??_Lcd_Chr_CP,w
 11117  1307  008F               	movwf	15	;volatile
 11118  1308  0872               	movf	Lcd_Chr_CP@data,w
 11119  1309  3901               	andlw	1
 11120  130A  00F0               	movwf	??_Lcd_Chr_CP
 11121  130B  0EF0               	swapf	??_Lcd_Chr_CP,f
 11122  130C  080E               	movf	14,w	;volatile
 11123  130D  0670               	xorwf	??_Lcd_Chr_CP,w
 11124  130E  39EF               	andlw	-17
 11125  130F  0670               	xorwf	??_Lcd_Chr_CP,w
 11126  1310  008E               	movwf	14	;volatile
 11127                           
 11128                           ;./flex_lcd.h: 144: _delay(10);
 11129  1311  3003               	movlw	3
 11130  1312                     u6127:	
 11131  1312  0B89               	decfsz	9,f
 11132  1313  2B12               	goto	u6127
 11133  1314  0000               	nop
 11134                           
 11135                           ;./flex_lcd.h: 145: PORTDbits.RD3 = 1; _delay((unsigned long)((5)*(32000000/4000000.0)))
      +                          ; PORTDbits.RD3 = 0;
 11136  1315  0140               	movlb	0	; select bank0
 11137  1316  158F               	bsf	15,3	;volatile
 11138  1317  300D               	movlw	13
 11139  1318                     u6137:	
 11140  1318  0B89               	decfsz	9,f
 11141  1319  2B18               	goto	u6137
 11142  131A  0000               	nop
 11143  131B  0140               	movlb	0	; select bank0
 11144  131C  118F               	bcf	15,3	;volatile
 11145                           
 11146                           ;./flex_lcd.h: 146: _delay((unsigned long)((5)*(32000000/4000000.0))); _delay((unsigned 
      +                          long)((5500)*(32000000/4000000.0)));
 11147  131D  300D               	movlw	13
 11148  131E                     u6147:	
 11149  131E  0B89               	decfsz	9,f
 11150  131F  2B1E               	goto	u6147
 11151  1320  0000               	nop
 11152  1321  303A               	movlw	58
 11153  1322  00F0               	movwf	??_Lcd_Chr_CP
 11154  1323  3023               	movlw	35
 11155  1324                     u6157:	
 11156  1324  0B89               	decfsz	9,f
 11157  1325  2B24               	goto	u6157
 11158  1326  0BF0               	decfsz	??_Lcd_Chr_CP,f
 11159  1327  2B24               	goto	u6157
 11160  1328  0000               	nop
 11161  1329  0008               	return
 11162  132A                     __end_of_Lcd_Chr_CP:	
 11163                           
 11164                           	psect	text34
 11165  000B                     __ptext34:	
 11166 ;; *************** function _Lcd_Init *****************
 11167 ;; Defined at:
 11168 ;;		line 52 in file "./flex_lcd.h"
 11169 ;; Parameters:    Size  Location     Type
 11170 ;;		None
 11171 ;; Auto vars:     Size  Location     Type
 11172 ;;  data            1    4[COMMON] unsigned char 
 11173 ;; Return value:  Size  Location     Type
 11174 ;;                  1    wreg      void 
 11175 ;; Registers used:
 11176 ;;		wreg, status,2, status,0, pclath, cstack
 11177 ;; Tracked objects:
 11178 ;;		On entry : 0/0
 11179 ;;		On exit  : 0/0
 11180 ;;		Unchanged: 0/0
 11181 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
 11182 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 11183 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 11184 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 11185 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 11186 ;;Total ram usage:        2 bytes
 11187 ;; Hardware stack levels used:    1
 11188 ;; Hardware stack levels required when called:    1
 11189 ;; This function calls:
 11190 ;;		_Lcd_Cmd
 11191 ;; This function is called by:
 11192 ;;		_main
 11193 ;; This function uses a non-reentrant model
 11194 ;;
 11195                           
 11196                           
 11197                           ;psect for function _Lcd_Init
 11198  000B                     _Lcd_Init:	
 11199                           
 11200                           ;./flex_lcd.h: 53: unsigned char data;;./flex_lcd.h: 54: TRISCbits.TRISC3 = 0;
 11201                           
 11202                           ;incstack = 0
 11203                           ; Regs used in _Lcd_Init: [wreg+status,2+status,0+pclath+cstack]
 11204  000B  0140               	movlb	0	; select bank0
 11205  000C  1193               	bcf	19,3	;volatile
 11206                           
 11207                           ;./flex_lcd.h: 55: TRISDbits.TRISD0 = 0;
 11208  000D  1014               	bcf	20,0	;volatile
 11209                           
 11210                           ;./flex_lcd.h: 56: TRISDbits.TRISD1 = 0;
 11211  000E  1094               	bcf	20,1	;volatile
 11212                           
 11213                           ;./flex_lcd.h: 57: TRISCbits.TRISC4 = 0;
 11214  000F  1213               	bcf	19,4	;volatile
 11215                           
 11216                           ;./flex_lcd.h: 58: TRISDbits.TRISD3 = 0;
 11217  0010  1194               	bcf	20,3	;volatile
 11218                           
 11219                           ;./flex_lcd.h: 59: TRISDbits.TRISD2 = 0;
 11220  0011  1114               	bcf	20,2	;volatile
 11221                           
 11222                           ;./flex_lcd.h: 60: PORTCbits.RC3 = 0;
 11223  0012  118E               	bcf	14,3	;volatile
 11224                           
 11225                           ;./flex_lcd.h: 61: PORTDbits.RD0 = 0;
 11226  0013  100F               	bcf	15,0	;volatile
 11227                           
 11228                           ;./flex_lcd.h: 62: PORTDbits.RD1 = 0;
 11229  0014  108F               	bcf	15,1	;volatile
 11230                           
 11231                           ;./flex_lcd.h: 63: PORTCbits.RC4 = 0;
 11232  0015  120E               	bcf	14,4	;volatile
 11233                           
 11234                           ;./flex_lcd.h: 64: PORTDbits.RD3 = 0;
 11235  0016  118F               	bcf	15,3	;volatile
 11236                           
 11237                           ;./flex_lcd.h: 65: PORTDbits.RD2 = 0;
 11238  0017  110F               	bcf	15,2	;volatile
 11239                           
 11240                           ;./flex_lcd.h: 66: _delay((unsigned long)((5500)*(32000000/4000000.0)));
 11241  0018  303A               	movlw	58
 11242  0019  00F3               	movwf	??_Lcd_Init
 11243  001A  3023               	movlw	35
 11244  001B                     u6167:	
 11245  001B  0B89               	decfsz	9,f
 11246  001C  281B               	goto	u6167
 11247  001D  0BF3               	decfsz	??_Lcd_Init,f
 11248  001E  281B               	goto	u6167
 11249  001F  0000               	nop
 11250                           
 11251                           ;./flex_lcd.h: 67: _delay((unsigned long)((5500)*(32000000/4000000.0)));
 11252  0020  303A               	movlw	58
 11253  0021  00F3               	movwf	??_Lcd_Init
 11254  0022  3023               	movlw	35
 11255  0023                     u6177:	
 11256  0023  0B89               	decfsz	9,f
 11257  0024  2823               	goto	u6177
 11258  0025  0BF3               	decfsz	??_Lcd_Init,f
 11259  0026  2823               	goto	u6177
 11260  0027  0000               	nop
 11261                           
 11262                           ;./flex_lcd.h: 68: _delay((unsigned long)((5500)*(32000000/4000000.0)));
 11263  0028  303A               	movlw	58
 11264  0029  00F3               	movwf	??_Lcd_Init
 11265  002A  3023               	movlw	35
 11266  002B                     u6187:	
 11267  002B  0B89               	decfsz	9,f
 11268  002C  282B               	goto	u6187
 11269  002D  0BF3               	decfsz	??_Lcd_Init,f
 11270  002E  282B               	goto	u6187
 11271  002F  0000               	nop
 11272                           
 11273                           ;./flex_lcd.h: 69: _delay((unsigned long)((5500)*(32000000/4000000.0)));
 11274  0030  303A               	movlw	58
 11275  0031  00F3               	movwf	??_Lcd_Init
 11276  0032  3023               	movlw	35
 11277  0033                     u6197:	
 11278  0033  0B89               	decfsz	9,f
 11279  0034  2833               	goto	u6197
 11280  0035  0BF3               	decfsz	??_Lcd_Init,f
 11281  0036  2833               	goto	u6197
 11282  0037  0000               	nop
 11283                           
 11284                           ;./flex_lcd.h: 70: _delay((unsigned long)((5500)*(32000000/4000000.0)));
 11285  0038  303A               	movlw	58
 11286  0039  00F3               	movwf	??_Lcd_Init
 11287  003A  3023               	movlw	35
 11288  003B                     u6207:	
 11289  003B  0B89               	decfsz	9,f
 11290  003C  283B               	goto	u6207
 11291  003D  0BF3               	decfsz	??_Lcd_Init,f
 11292  003E  283B               	goto	u6207
 11293  003F  0000               	nop
 11294                           
 11295                           ;./flex_lcd.h: 71: _delay((unsigned long)((5500)*(32000000/4000000.0)));
 11296  0040  303A               	movlw	58
 11297  0041  00F3               	movwf	??_Lcd_Init
 11298  0042  3023               	movlw	35
 11299  0043                     u6217:	
 11300  0043  0B89               	decfsz	9,f
 11301  0044  2843               	goto	u6217
 11302  0045  0BF3               	decfsz	??_Lcd_Init,f
 11303  0046  2843               	goto	u6217
 11304  0047  0000               	nop
 11305                           
 11306                           ;./flex_lcd.h: 72: for(data = 1; data < 4; data ++)
 11307  0048  01F4               	clrf	Lcd_Init@data
 11308  0049  0AF4               	incf	Lcd_Init@data,f
 11309  004A  3004               	movlw	4
 11310  004B  0274               	subwf	Lcd_Init@data,w
 11311  004C  1803               	btfsc	3,0
 11312  004D  2876               	goto	l44
 11313  004E                     l43:	
 11314                           
 11315                           ;./flex_lcd.h: 73: {;./flex_lcd.h: 74:     PORTCbits.RC3 = 0; PORTDbits.RD0 = 0; PORTDbi
      +                          ts.RD1 = 1; PORTCbits.RC4 = 1; PORTDbits.RD3 = 0;
 11316  004E  0140               	movlb	0	; select bank0
 11317  004F  118E               	bcf	14,3	;volatile
 11318  0050  100F               	bcf	15,0	;volatile
 11319  0051  148F               	bsf	15,1	;volatile
 11320  0052  160E               	bsf	14,4	;volatile
 11321  0053  118F               	bcf	15,3	;volatile
 11322                           
 11323                           ;./flex_lcd.h: 75:     PORTDbits.RD2 = 0; PORTCbits.RC3 = 0; PORTDbits.RD0 = 0; PORTDbit
      +                          s.RD1 = 1; PORTCbits.RC4 = 1;
 11324  0054  110F               	bcf	15,2	;volatile
 11325  0055  118E               	bcf	14,3	;volatile
 11326  0056  100F               	bcf	15,0	;volatile
 11327  0057  148F               	bsf	15,1	;volatile
 11328  0058  160E               	bsf	14,4	;volatile
 11329                           
 11330                           ;./flex_lcd.h: 76:     PORTDbits.RD3 = 1; PORTDbits.RD2 = 0;
 11331  0059  158F               	bsf	15,3	;volatile
 11332  005A  110F               	bcf	15,2	;volatile
 11333                           
 11334                           ;./flex_lcd.h: 77:     _delay((unsigned long)((5)*(32000000/4000000.0)));
 11335  005B  300D               	movlw	13
 11336  005C                     u6227:	
 11337  005C  0B89               	decfsz	9,f
 11338  005D  285C               	goto	u6227
 11339  005E  0000               	nop
 11340                           
 11341                           ;./flex_lcd.h: 78:     PORTCbits.RC3 = 0; PORTDbits.RD0 = 0; PORTDbits.RD1 = 1; PORTCbit
      +                          s.RC4 = 1; PORTDbits.RD3 = 0;
 11342  005F  0140               	movlb	0	; select bank0
 11343  0060  118E               	bcf	14,3	;volatile
 11344  0061  100F               	bcf	15,0	;volatile
 11345  0062  148F               	bsf	15,1	;volatile
 11346  0063  160E               	bsf	14,4	;volatile
 11347  0064  118F               	bcf	15,3	;volatile
 11348                           
 11349                           ;./flex_lcd.h: 79:     PORTDbits.RD2 = 0;
 11350  0065  110F               	bcf	15,2	;volatile
 11351                           
 11352                           ;./flex_lcd.h: 80:     _delay((unsigned long)((5500)*(32000000/4000000.0)));
 11353  0066  303A               	movlw	58
 11354  0067  00F3               	movwf	??_Lcd_Init
 11355  0068  3023               	movlw	35
 11356  0069                     u6237:	
 11357  0069  0B89               	decfsz	9,f
 11358  006A  2869               	goto	u6237
 11359  006B  0BF3               	decfsz	??_Lcd_Init,f
 11360  006C  2869               	goto	u6237
 11361  006D  0000               	nop
 11362                           
 11363                           ;./flex_lcd.h: 81: }
 11364  006E  3001               	movlw	1
 11365  006F  00F3               	movwf	??_Lcd_Init
 11366  0070  0873               	movf	??_Lcd_Init,w
 11367  0071  07F4               	addwf	Lcd_Init@data,f
 11368  0072  3004               	movlw	4
 11369  0073  0274               	subwf	Lcd_Init@data,w
 11370  0074  1C03               	skipc
 11371  0075  284E               	goto	l43
 11372  0076                     l44:	
 11373                           
 11374                           ;./flex_lcd.h: 82: PORTCbits.RC3 = 0; PORTDbits.RD0 = 0; PORTDbits.RD1 = 1; PORTCbits.RC
      +                          4 = 0; PORTDbits.RD3 = 0; PORTDbits.RD2 = 0;
 11375  0076  0140               	movlb	0	; select bank0
 11376  0077  118E               	bcf	14,3	;volatile
 11377  0078  100F               	bcf	15,0	;volatile
 11378  0079  148F               	bsf	15,1	;volatile
 11379  007A  120E               	bcf	14,4	;volatile
 11380  007B  118F               	bcf	15,3	;volatile
 11381  007C  110F               	bcf	15,2	;volatile
 11382                           
 11383                           ;./flex_lcd.h: 83: PORTCbits.RC3 = 0; PORTDbits.RD0 = 0; PORTDbits.RD1 = 1; PORTCbits.RC
      +                          4 = 0; PORTDbits.RD3 = 1; PORTDbits.RD2 = 0;
 11384  007D  118E               	bcf	14,3	;volatile
 11385  007E  100F               	bcf	15,0	;volatile
 11386  007F  148F               	bsf	15,1	;volatile
 11387  0080  120E               	bcf	14,4	;volatile
 11388  0081  158F               	bsf	15,3	;volatile
 11389  0082  110F               	bcf	15,2	;volatile
 11390                           
 11391                           ;./flex_lcd.h: 84: _delay((unsigned long)((5)*(32000000/4000000.0)));
 11392  0083  300D               	movlw	13
 11393  0084                     u6247:	
 11394  0084  0B89               	decfsz	9,f
 11395  0085  2884               	goto	u6247
 11396  0086  0000               	nop
 11397                           
 11398                           ;./flex_lcd.h: 85: PORTCbits.RC3 = 0; PORTDbits.RD0 = 0; PORTDbits.RD1 = 1; PORTCbits.RC
      +                          4 = 0; PORTDbits.RD3 = 0; PORTDbits.RD2 = 0;
 11399  0087  0140               	movlb	0	; select bank0
 11400  0088  118E               	bcf	14,3	;volatile
 11401  0089  100F               	bcf	15,0	;volatile
 11402  008A  148F               	bsf	15,1	;volatile
 11403  008B  120E               	bcf	14,4	;volatile
 11404  008C  118F               	bcf	15,3	;volatile
 11405  008D  110F               	bcf	15,2	;volatile
 11406                           
 11407                           ;./flex_lcd.h: 86: _delay((unsigned long)((5500)*(32000000/4000000.0)));
 11408  008E  303A               	movlw	58
 11409  008F  00F3               	movwf	??_Lcd_Init
 11410  0090  3023               	movlw	35
 11411  0091                     u6257:	
 11412  0091  0B89               	decfsz	9,f
 11413  0092  2891               	goto	u6257
 11414  0093  0BF3               	decfsz	??_Lcd_Init,f
 11415  0094  2891               	goto	u6257
 11416  0095  0000               	nop
 11417                           
 11418                           ;./flex_lcd.h: 87: data = 40; Lcd_Cmd(data);
 11419  0096  3028               	movlw	40
 11420  0097  00F3               	movwf	??_Lcd_Init
 11421  0098  0873               	movf	??_Lcd_Init,w
 11422  0099  00F4               	movwf	Lcd_Init@data
 11423  009A  0874               	movf	Lcd_Init@data,w
 11424  009B  3191  216B  3180   	fcall	_Lcd_Cmd
 11425                           
 11426                           ;./flex_lcd.h: 88: data = 16; Lcd_Cmd(data);
 11427  009E  3010               	movlw	16
 11428  009F  00F3               	movwf	??_Lcd_Init
 11429  00A0  0873               	movf	??_Lcd_Init,w
 11430  00A1  00F4               	movwf	Lcd_Init@data
 11431  00A2  0874               	movf	Lcd_Init@data,w
 11432  00A3  3191  216B  3180   	fcall	_Lcd_Cmd
 11433                           
 11434                           ;./flex_lcd.h: 89: data = 1; Lcd_Cmd(data);
 11435  00A6  01F4               	clrf	Lcd_Init@data
 11436  00A7  0AF4               	incf	Lcd_Init@data,f
 11437  00A8  0874               	movf	Lcd_Init@data,w
 11438  00A9  3191  216B  3180   	fcall	_Lcd_Cmd
 11439                           
 11440                           ;./flex_lcd.h: 90: data = 15; Lcd_Cmd(data);
 11441  00AC  300F               	movlw	15
 11442  00AD  00F3               	movwf	??_Lcd_Init
 11443  00AE  0873               	movf	??_Lcd_Init,w
 11444  00AF  00F4               	movwf	Lcd_Init@data
 11445  00B0  0874               	movf	Lcd_Init@data,w
 11446  00B1  3191  216B         	fcall	_Lcd_Cmd
 11447  00B3  0008               	return
 11448  00B4                     __end_of_Lcd_Init:	
 11449                           
 11450                           	psect	text35
 11451  116B                     __ptext35:	
 11452 ;; *************** function _Lcd_Cmd *****************
 11453 ;; Defined at:
 11454 ;;		line 150 in file "./flex_lcd.h"
 11455 ;; Parameters:    Size  Location     Type
 11456 ;;  data            1    wreg     unsigned char 
 11457 ;; Auto vars:     Size  Location     Type
 11458 ;;  data            1    2[COMMON] unsigned char 
 11459 ;; Return value:  Size  Location     Type
 11460 ;;                  1    wreg      void 
 11461 ;; Registers used:
 11462 ;;		wreg, status,2, status,0
 11463 ;; Tracked objects:
 11464 ;;		On entry : 0/0
 11465 ;;		On exit  : 0/0
 11466 ;;		Unchanged: 0/0
 11467 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
 11468 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 11469 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 11470 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 11471 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 11472 ;;Total ram usage:        3 bytes
 11473 ;; Hardware stack levels used:    1
 11474 ;; This function calls:
 11475 ;;		Nothing
 11476 ;; This function is called by:
 11477 ;;		_Lcd_Init
 11478 ;;		_Lcd_Out2
 11479 ;;		_main
 11480 ;;		_Lcd_Out
 11481 ;; This function uses a non-reentrant model
 11482 ;;
 11483                           
 11484                           
 11485                           ;psect for function _Lcd_Cmd
 11486  116B                     _Lcd_Cmd:	
 11487                           
 11488                           ;incstack = 0
 11489                           ; Regs used in _Lcd_Cmd: [wreg+status,2+status,0]
 11490                           ;Lcd_Cmd@data stored from wreg
 11491  116B  00F2               	movwf	Lcd_Cmd@data
 11492                           
 11493                           ;./flex_lcd.h: 151: PORTDbits.RD3 = 0; PORTDbits.RD2 = 0;
 11494  116C  0140               	movlb	0	; select bank0
 11495  116D  118F               	bcf	15,3	;volatile
 11496  116E  110F               	bcf	15,2	;volatile
 11497                           
 11498                           ;./flex_lcd.h: 152: PORTCbits.RC3 = (data & 0b10000000)>>7; PORTDbits.RD0 = (data & 0b01
      +                          000000)>>6;
 11499  116F  0872               	movf	Lcd_Cmd@data,w
 11500  1170  00F0               	movwf	??_Lcd_Cmd
 11501  1171  3007               	movlw	7
 11502  1172                     u5705:	
 11503  1172  36F0               	lsrf	??_Lcd_Cmd,f
 11504  1173  0B89               	decfsz	9,f
 11505  1174  2972               	goto	u5705
 11506  1175  0870               	movf	??_Lcd_Cmd,w
 11507  1176  3901               	andlw	1
 11508  1177  00F1               	movwf	??_Lcd_Cmd+1
 11509  1178  0DF1               	rlf	??_Lcd_Cmd+1,f
 11510  1179  0DF1               	rlf	??_Lcd_Cmd+1,f
 11511  117A  0DF1               	rlf	??_Lcd_Cmd+1,f
 11512  117B  080E               	movf	14,w	;volatile
 11513  117C  0671               	xorwf	??_Lcd_Cmd+1,w
 11514  117D  39F7               	andlw	-9
 11515  117E  0671               	xorwf	??_Lcd_Cmd+1,w
 11516  117F  008E               	movwf	14	;volatile
 11517  1180  0872               	movf	Lcd_Cmd@data,w
 11518  1181  00F0               	movwf	??_Lcd_Cmd
 11519  1182  3006               	movlw	6
 11520  1183                     u5715:	
 11521  1183  36F0               	lsrf	??_Lcd_Cmd,f
 11522  1184  0B89               	decfsz	9,f
 11523  1185  2983               	goto	u5715
 11524  1186  3001               	movlw	1
 11525  1187  0570               	andwf	??_Lcd_Cmd,w
 11526  1188  00F1               	movwf	??_Lcd_Cmd+1
 11527  1189  080F               	movf	15,w	;volatile
 11528  118A  0671               	xorwf	??_Lcd_Cmd+1,w
 11529  118B  39FE               	andlw	-2
 11530  118C  0671               	xorwf	??_Lcd_Cmd+1,w
 11531  118D  008F               	movwf	15	;volatile
 11532                           
 11533                           ;./flex_lcd.h: 153: PORTDbits.RD1 = (data & 0b00100000)>>5; PORTCbits.RC4 = (data & 0b00
      +                          010000)>>4;
 11534  118E  0872               	movf	Lcd_Cmd@data,w
 11535  118F  00F0               	movwf	??_Lcd_Cmd
 11536  1190  3005               	movlw	5
 11537  1191                     u5725:	
 11538  1191  36F0               	lsrf	??_Lcd_Cmd,f
 11539  1192  0B89               	decfsz	9,f
 11540  1193  2991               	goto	u5725
 11541  1194  0870               	movf	??_Lcd_Cmd,w
 11542  1195  3901               	andlw	1
 11543  1196  00F1               	movwf	??_Lcd_Cmd+1
 11544  1197  0DF1               	rlf	??_Lcd_Cmd+1,f
 11545  1198  080F               	movf	15,w	;volatile
 11546  1199  0671               	xorwf	??_Lcd_Cmd+1,w
 11547  119A  39FD               	andlw	-3
 11548  119B  0671               	xorwf	??_Lcd_Cmd+1,w
 11549  119C  008F               	movwf	15	;volatile
 11550  119D  0872               	movf	Lcd_Cmd@data,w
 11551  119E  00F0               	movwf	??_Lcd_Cmd
 11552  119F  3004               	movlw	4
 11553  11A0                     u5735:	
 11554  11A0  36F0               	lsrf	??_Lcd_Cmd,f
 11555  11A1  0B89               	decfsz	9,f
 11556  11A2  29A0               	goto	u5735
 11557  11A3  0870               	movf	??_Lcd_Cmd,w
 11558  11A4  3901               	andlw	1
 11559  11A5  00F1               	movwf	??_Lcd_Cmd+1
 11560  11A6  0EF1               	swapf	??_Lcd_Cmd+1,f
 11561  11A7  080E               	movf	14,w	;volatile
 11562  11A8  0671               	xorwf	??_Lcd_Cmd+1,w
 11563  11A9  39EF               	andlw	-17
 11564  11AA  0671               	xorwf	??_Lcd_Cmd+1,w
 11565  11AB  008E               	movwf	14	;volatile
 11566                           
 11567                           ;./flex_lcd.h: 154: _delay(10);
 11568  11AC  3003               	movlw	3
 11569  11AD                     u6267:	
 11570  11AD  0B89               	decfsz	9,f
 11571  11AE  29AD               	goto	u6267
 11572  11AF  0000               	nop
 11573                           
 11574                           ;./flex_lcd.h: 155: PORTDbits.RD3 = 1; _delay((unsigned long)((5)*(32000000/4000000.0)))
      +                          ; PORTDbits.RD3 = 0;
 11575  11B0  0140               	movlb	0	; select bank0
 11576  11B1  158F               	bsf	15,3	;volatile
 11577  11B2  300D               	movlw	13
 11578  11B3                     u6277:	
 11579  11B3  0B89               	decfsz	9,f
 11580  11B4  29B3               	goto	u6277
 11581  11B5  0000               	nop
 11582  11B6  0140               	movlb	0	; select bank0
 11583  11B7  118F               	bcf	15,3	;volatile
 11584                           
 11585                           ;./flex_lcd.h: 156: PORTCbits.RC3 = (data & 0b00001000)>>3; PORTDbits.RD0 = (data & 0b00
      +                          000100)>>2;
 11586  11B8  0872               	movf	Lcd_Cmd@data,w
 11587  11B9  00F0               	movwf	??_Lcd_Cmd
 11588  11BA  3003               	movlw	3
 11589  11BB                     u5745:	
 11590  11BB  36F0               	lsrf	??_Lcd_Cmd,f
 11591  11BC  0B89               	decfsz	9,f
 11592  11BD  29BB               	goto	u5745
 11593  11BE  0870               	movf	??_Lcd_Cmd,w
 11594  11BF  3901               	andlw	1
 11595  11C0  00F1               	movwf	??_Lcd_Cmd+1
 11596  11C1  0DF1               	rlf	??_Lcd_Cmd+1,f
 11597  11C2  0DF1               	rlf	??_Lcd_Cmd+1,f
 11598  11C3  0DF1               	rlf	??_Lcd_Cmd+1,f
 11599  11C4  080E               	movf	14,w	;volatile
 11600  11C5  0671               	xorwf	??_Lcd_Cmd+1,w
 11601  11C6  39F7               	andlw	-9
 11602  11C7  0671               	xorwf	??_Lcd_Cmd+1,w
 11603  11C8  008E               	movwf	14	;volatile
 11604  11C9  0872               	movf	Lcd_Cmd@data,w
 11605  11CA  00F0               	movwf	??_Lcd_Cmd
 11606  11CB  3002               	movlw	2
 11607  11CC                     u5755:	
 11608  11CC  36F0               	lsrf	??_Lcd_Cmd,f
 11609  11CD  0B89               	decfsz	9,f
 11610  11CE  29CC               	goto	u5755
 11611  11CF  3001               	movlw	1
 11612  11D0  0570               	andwf	??_Lcd_Cmd,w
 11613  11D1  00F1               	movwf	??_Lcd_Cmd+1
 11614  11D2  080F               	movf	15,w	;volatile
 11615  11D3  0671               	xorwf	??_Lcd_Cmd+1,w
 11616  11D4  39FE               	andlw	-2
 11617  11D5  0671               	xorwf	??_Lcd_Cmd+1,w
 11618  11D6  008F               	movwf	15	;volatile
 11619                           
 11620                           ;./flex_lcd.h: 157: PORTDbits.RD1 = (data & 0b00000010)>>1; PORTCbits.RC4 = (data & 0b00
      +                          000001);
 11621  11D7  3672               	lsrf	Lcd_Cmd@data,w
 11622  11D8  3901               	andlw	1
 11623  11D9  00F0               	movwf	??_Lcd_Cmd
 11624  11DA  0DF0               	rlf	??_Lcd_Cmd,f
 11625  11DB  080F               	movf	15,w	;volatile
 11626  11DC  0670               	xorwf	??_Lcd_Cmd,w
 11627  11DD  39FD               	andlw	-3
 11628  11DE  0670               	xorwf	??_Lcd_Cmd,w
 11629  11DF  008F               	movwf	15	;volatile
 11630  11E0  0872               	movf	Lcd_Cmd@data,w
 11631  11E1  3901               	andlw	1
 11632  11E2  00F0               	movwf	??_Lcd_Cmd
 11633  11E3  0EF0               	swapf	??_Lcd_Cmd,f
 11634  11E4  080E               	movf	14,w	;volatile
 11635  11E5  0670               	xorwf	??_Lcd_Cmd,w
 11636  11E6  39EF               	andlw	-17
 11637  11E7  0670               	xorwf	??_Lcd_Cmd,w
 11638  11E8  008E               	movwf	14	;volatile
 11639                           
 11640                           ;./flex_lcd.h: 158: _delay(10);
 11641  11E9  3003               	movlw	3
 11642  11EA                     u6287:	
 11643  11EA  0B89               	decfsz	9,f
 11644  11EB  29EA               	goto	u6287
 11645  11EC  0000               	nop
 11646                           
 11647                           ;./flex_lcd.h: 159: PORTDbits.RD3 = 1; _delay((unsigned long)((5)*(32000000/4000000.0)))
      +                          ; PORTDbits.RD3 = 0;
 11648  11ED  0140               	movlb	0	; select bank0
 11649  11EE  158F               	bsf	15,3	;volatile
 11650  11EF  300D               	movlw	13
 11651  11F0                     u6297:	
 11652  11F0  0B89               	decfsz	9,f
 11653  11F1  29F0               	goto	u6297
 11654  11F2  0000               	nop
 11655  11F3  0140               	movlb	0	; select bank0
 11656  11F4  118F               	bcf	15,3	;volatile
 11657                           
 11658                           ;./flex_lcd.h: 160: _delay((unsigned long)((5500)*(32000000/4000000.0)));
 11659  11F5  303A               	movlw	58
 11660  11F6  00F0               	movwf	??_Lcd_Cmd
 11661  11F7  3023               	movlw	35
 11662  11F8                     u6307:	
 11663  11F8  0B89               	decfsz	9,f
 11664  11F9  29F8               	goto	u6307
 11665  11FA  0BF0               	decfsz	??_Lcd_Cmd,f
 11666  11FB  29F8               	goto	u6307
 11667  11FC  0000               	nop
 11668  11FD  0008               	return
 11669  11FE                     __end_of_Lcd_Cmd:	
 11670  007E                     btemp	set	126	;btemp
 11671  007E                     wtemp0	set	126


Data Sizes:
    Strings     47
    Constant    0
    Data        0
    BSS         96
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     80      80
    BANK1            80     78      80
    BANK2            80     68      78
    BANK3            80      0       4
    BANK4            80      0      80
    BANK5            80      0       0
    BANK6            80      0       0
    BANK7            80      0       0
    BANK8            80      0       0
    BANK9            80      0       0
    BANK10           80      0       0
    BANK11           80      0       0
    BANK12           80      0       0
    BANK13           80      0       0
    BANK14           80      0       0
    BANK15           80      0       0
    BANK16           80      0       0
    BANK17           80      0       0
    BANK18           80      0       0
    BANK19           80      0       0
    BANK20           80      0       0
    BANK21           80      0       0
    BANK22           80      0       0
    BANK23           80      0       0
    BANK24           80      0       0
    BANK25           80      0       0
    BANK26           80      0       0
    BANK27           80      0       0
    BANK28           80      0       0
    BANK29           80      0       0
    BANK30           80      0       0
    BANK31           80      0       0
    BANK32           80      0       0
    BANK33           80      0       0
    BANK34           80      0       0
    BANK35           80      0       0
    BANK36           80      0       0
    BANK37           80      0       0
    BANK38           80      0       0
    BANK39           80      0       0
    BANK40           80      0       0
    BANK41           80      0       0
    BANK42           80      0       0
    BANK43           80      0       0
    BANK44           80      0       0
    BANK45           80      0       0
    BANK46           80      0       0
    BANK47           80      0       0
    BANK48           80      0       0
    BANK49           80      0       0
    BANK50           80      0       0

Pointer List with Targets:

    strncmp@_r	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_13(CODE[3]), 

    strncmp@r	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_13(CODE[3]), 

    strncmp@_l	PTR const unsigned char  size(1) Largest target is 3
		 -> vfpfcnvrt@ct(BANK2[3]), 

    strncmp@l	PTR const unsigned char  size(1) Largest target is 3
		 -> vfpfcnvrt@ct(BANK2[3]), 

    strlen@s	PTR const unsigned char  size(1) Largest target is 80
		 -> dbuf(BANK4[80]), 

    strlen@a	PTR const unsigned char  size(1) Largest target is 80
		 -> dbuf(BANK4[80]), 

    strcpy@dest	PTR unsigned char  size(1) Largest target is 80
		 -> dbuf(BANK4[80]), 

    strcpy@d	PTR unsigned char  size(1) Largest target is 80
		 -> dbuf(BANK4[80]), 

    strcpy@src	PTR const unsigned char  size(2) Largest target is 80
		 -> STR_8(CODE[4]), STR_7(CODE[4]), STR_4(CODE[4]), STR_3(CODE[4]), 
		 -> dbuf(BANK4[80]), 

    strcpy@s	PTR const unsigned char  size(2) Largest target is 80
		 -> STR_8(CODE[4]), STR_7(CODE[4]), STR_4(CODE[4]), STR_3(CODE[4]), 
		 -> dbuf(BANK4[80]), 

    sprintf@fmt	PTR const unsigned char  size(2) Largest target is 16
		 -> STR_2(CODE[16]), STR_1(CODE[12]), 

    sprintf@s	PTR unsigned char  size(1) Largest target is 16
		 -> main@buffer1(BANK2[16]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK2[2]), 

    f.buffer	PTR unsigned char  size(1) Largest target is 16
		 -> main@buffer1(BANK2[16]), 

    fputs@s	PTR const unsigned char  size(1) Largest target is 80
		 -> dbuf(BANK4[80]), 

    fputs@fp	PTR struct _IO_FILE size(1) Largest target is 6
		 -> sprintf@f(BANK2[5]), 

    S1018_IO_FILE$buffer	PTR unsigned char  size(1) Largest target is 16
		 -> main@buffer1(BANK2[16]), 

    fputc@fp.buffer	PTR unsigned char  size(1) Largest target is 16
		 -> main@buffer1(BANK2[16]), 

    fputc@fp	PTR struct _IO_FILE size(1) Largest target is 6
		 -> sprintf@f(BANK2[5]), 

    atoi@s	PTR const unsigned char  size(2) Largest target is 16
		 -> STR_2(CODE[16]), STR_1(CODE[12]), 

    vfprintf@ap	PTR PTR void  size(1) Largest target is 1
		 -> sprintf@ap(BANK2[1]), 

    vfprintf@fp	PTR struct _IO_FILE size(1) Largest target is 6
		 -> sprintf@f(BANK2[5]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 16
		 -> STR_2(CODE[16]), STR_1(CODE[12]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 16
		 -> STR_2(CODE[16]), STR_1(CODE[12]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(1) Largest target is 6
		 -> sprintf@f(BANK2[5]), 

    vfpfcnvrt@ap	PTR PTR void  size(1) Largest target is 1
		 -> sprintf@ap(BANK2[1]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(1) Largest target is 2
		 -> vfprintf@cfmt(BANK1[2]), 

    efgtoa@fp	PTR struct _IO_FILE size(1) Largest target is 6
		 -> sprintf@f(BANK2[5]), 

    sp__strcpy	PTR unsigned char  size(1) Largest target is 80
		 -> dbuf(BANK4[80]), 

    pad@fp	PTR struct _IO_FILE size(1) Largest target is 6
		 -> sprintf@f(BANK2[5]), 

    pad@buf	PTR unsigned char  size(1) Largest target is 80
		 -> dbuf(BANK4[80]), 

    Lcd_Out2@buffer	PTR unsigned char  size(1) Largest target is 16
		 -> main@buffer1(BANK2[16]), 


Critical Paths under _main in COMMON

    _main->___xxtofl
    _vfpfcnvrt->_tolower
    _efgtoa->_tolower
    _tolower->_isupper
    _pad->_fputs
    _fputs->_fputc
    ___flmul->___xxtofl
    ___fldiv->___xxtofl
    _atoi->___wmul
    _atoi->_isdigit
    _Lcd_Out2->_Lcd_Chr_CP
    _Lcd_Out2->_Lcd_Cmd
    _Lcd_Init->_Lcd_Cmd

Critical Paths under _main in BANK0

    _main->_sprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_efgtoa
    _efgtoa->_floorf
    _pad->_fputs
    _floorf->___fldiv
    ___flsub->___flmul
    ___flge->___flmul
    ___fldiv->___flmul

Critical Paths under _main in BANK1

    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_efgtoa

Critical Paths under _main in BANK2

    _main->_sprintf
    _vfprintf->_vfpfcnvrt

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _main in BANK16

    None.

Critical Paths under _main in BANK17

    None.

Critical Paths under _main in BANK18

    None.

Critical Paths under _main in BANK19

    None.

Critical Paths under _main in BANK20

    None.

Critical Paths under _main in BANK21

    None.

Critical Paths under _main in BANK22

    None.

Critical Paths under _main in BANK23

    None.

Critical Paths under _main in BANK24

    None.

Critical Paths under _main in BANK25

    None.

Critical Paths under _main in BANK26

    None.

Critical Paths under _main in BANK27

    None.

Critical Paths under _main in BANK28

    None.

Critical Paths under _main in BANK29

    None.

Critical Paths under _main in BANK30

    None.

Critical Paths under _main in BANK31

    None.

Critical Paths under _main in BANK32

    None.

Critical Paths under _main in BANK33

    None.

Critical Paths under _main in BANK34

    None.

Critical Paths under _main in BANK35

    None.

Critical Paths under _main in BANK36

    None.

Critical Paths under _main in BANK37

    None.

Critical Paths under _main in BANK38

    None.

Critical Paths under _main in BANK39

    None.

Critical Paths under _main in BANK40

    None.

Critical Paths under _main in BANK41

    None.

Critical Paths under _main in BANK42

    None.

Critical Paths under _main in BANK43

    None.

Critical Paths under _main in BANK44

    None.

Critical Paths under _main in BANK45

    None.

Critical Paths under _main in BANK46

    None.

Critical Paths under _main in BANK47

    None.

Critical Paths under _main in BANK48

    None.

Critical Paths under _main in BANK49

    None.

Critical Paths under _main in BANK50

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                39    39      0   41073
                                             75 BANK1      3     3      0
                                             32 BANK2     36    36      0
                            _Lcd_Cmd
                           _Lcd_Init
                           _Lcd_Out2
                            ___fladd
                            ___fldiv
                             ___flge
                            ___flmul
                           ___xxtofl
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             16    10      6   29356
                                             79 BANK0      1     1      0
                                             17 BANK2     15     9      6
                           _vfprintf
 ---------------------------------------------------------------------------------
 (2) _vfprintf                                             8     5      3   28931
                                             67 BANK1      8     5      3
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (3) _vfpfcnvrt                                           39    37      2   28583
                                             77 BANK0      2     0      2
                                             61 BANK1      6     6      0
                                              0 BANK2     17    17      0
                               _atoi
                             _efgtoa
                              _fputc
                            _isdigit
                            _isupper
                            _strncmp
                            _tolower
 ---------------------------------------------------------------------------------
 (4) _strncmp                                             10     6      4     410
                                              0 COMMON    10     6      4
 ---------------------------------------------------------------------------------
 (4) _efgtoa                                              66    61      5   22875
                                             72 BANK0      5     0      5
                                              0 BANK1     61    61      0
                            ___awdiv
                            ___awmod
                            ___fladd
                            ___fldiv
                             ___fleq
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                      ___fpclassifyf
                             _floorf
                            _isupper
                                _pad
                             _strcpy
                            _tolower
 ---------------------------------------------------------------------------------
 (4) _tolower                                              8     6      2     944
                                              6 COMMON     8     6      2
                            _isupper
 ---------------------------------------------------------------------------------
 (5) _isupper                                              6     4      2     465
                                              0 COMMON     6     4      2
 ---------------------------------------------------------------------------------
 (5) _strcpy                                               8     6      2     641
                                              0 COMMON     8     6      2
 ---------------------------------------------------------------------------------
 (5) _pad                                                  9     6      3    2907
                                             12 COMMON     1     1      0
                                              4 BANK0      8     5      3
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (6) _strlen                                               8     6      2     123
                                              0 COMMON     8     6      2
 ---------------------------------------------------------------------------------
 (6) _fputs                                                8     7      1    1149
                                              8 COMMON     4     3      1
                                              0 BANK0      4     4      0
                              _fputc
 ---------------------------------------------------------------------------------
 (4) _fputc                                                8     5      3     834
                                              0 COMMON     8     5      3
                              _putch
 ---------------------------------------------------------------------------------
 (5) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (5) _floorf                                              20    16      4     490
                                             52 BANK0     20    16      4
                            ___fldiv (ARG)
 ---------------------------------------------------------------------------------
 (5) ___fpclassifyf                                       16    12      4     287
                                              0 COMMON    10     6      4
                                              0 BANK0      6     6      0
 ---------------------------------------------------------------------------------
 (5) ___fltol                                             11     7      4     381
                                              0 COMMON    11     7      4
 ---------------------------------------------------------------------------------
 (5) ___flsub                                              8     0      8    2941
                                             26 BANK0      8     0      8
                            ___fladd
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (6) ___fladd                                             24    16      8    2592
                                              0 COMMON    12     4      8
                                              0 BANK0     12    12      0
 ---------------------------------------------------------------------------------
 (5) ___flneg                                              4     0      4     121
                                              0 COMMON     4     0      4
 ---------------------------------------------------------------------------------
 (5) ___flmul                                             26    18      8    3633
                                              0 BANK0     26    18      8
                          __Umul8_16
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (6) __Umul8_16                                            9     7      2     799
                                              0 COMMON     9     7      2
 ---------------------------------------------------------------------------------
 (5) ___flge                                              16     8      8    1094
                                             26 BANK0     16     8      8
                            ___fladd (ARG)
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (5) ___fleq                                              12     4      8     394
                                              0 COMMON    12     4      8
 ---------------------------------------------------------------------------------
 (5) ___fldiv                                             26    18      8    2185
                                             26 BANK0     26    18      8
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (5) ___awmod                                              7     3      4     448
                                              0 COMMON     7     3      4
 ---------------------------------------------------------------------------------
 (5) ___awdiv                                              9     5      4     452
                                              0 COMMON     9     5      4
 ---------------------------------------------------------------------------------
 (4) _atoi                                                15    13      2    1237
                                              6 COMMON     6     4      2
                                              0 BANK0      9     9      0
                             ___wmul
                            _isdigit
                            _isspace
 ---------------------------------------------------------------------------------
 (5) _isspace                                              5     3      2     207
                                              0 COMMON     5     3      2
 ---------------------------------------------------------------------------------
 (4) _isdigit                                              6     4      2     313
                                              0 COMMON     6     4      2
 ---------------------------------------------------------------------------------
 (5) ___wmul                                               6     2      4     244
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (1) ___xxtofl                                            14    10      4     474
                                              0 COMMON    14    10      4
 ---------------------------------------------------------------------------------
 (1) _Lcd_Out2                                             6     4      2     837
                                              3 COMMON     6     4      2
                         _Lcd_Chr_CP
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (2) _Lcd_Chr_CP                                           3     3      0     176
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (1) _Lcd_Init                                             2     2      0     314
                                              3 COMMON     2     2      0
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (2) _Lcd_Cmd                                              3     3      0     176
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Lcd_Cmd
   _Lcd_Init
     _Lcd_Cmd
   _Lcd_Out2
     _Lcd_Chr_CP
     _Lcd_Cmd
   ___fladd
   ___fldiv
     ___flmul (ARG)
       __Umul8_16
       ___xxtofl (ARG)
     ___xxtofl (ARG)
   ___flge
     ___fladd (ARG)
     ___flmul (ARG)
       __Umul8_16
       ___xxtofl (ARG)
   ___flmul
     __Umul8_16
     ___xxtofl (ARG)
   ___xxtofl
   _sprintf
     _vfprintf
       _vfpfcnvrt
         _atoi
           ___wmul
           _isdigit
           _isspace
         _efgtoa
           ___awdiv
           ___awmod
           ___fladd
           ___fldiv
             ___flmul (ARG)
               __Umul8_16
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___fleq
           ___flge
             ___fladd (ARG)
             ___flmul (ARG)
               __Umul8_16
               ___xxtofl (ARG)
           ___flmul
             __Umul8_16
             ___xxtofl (ARG)
           ___flneg
           ___flsub
             ___fladd
             ___flmul (ARG)
               __Umul8_16
               ___xxtofl (ARG)
           ___fltol
           ___fpclassifyf
           _floorf
             ___fldiv (ARG)
               ___flmul (ARG)
                 __Umul8_16
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
           _isupper
           _pad
             _fputc
               _putch
             _fputs
               _fputc
                 _putch
             _strlen
           _strcpy
           _tolower
             _isupper
         _fputc
           _putch
         _isdigit
         _isupper
         _strncmp
         _tolower
           _isupper

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             FF0      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      E       E       2      100.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     50      50       5      100.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BANK1               50     4E      50       7      100.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BITBANK2            50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BANK2               50     44      4E       9       97.5%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BITBANK3            50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BANK3               50      0       4      11        5.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITBANK4            50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BANK4               50      0      50      13      100.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITBANK5            50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BANK5               50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITBANK6            50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BANK6               50      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITBANK7            50      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BANK7               50      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITBANK8            50      0       0      20        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BANK8               50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BITBANK9            50      0       0      22        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BANK9               50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BITBANK10           50      0       0      24        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BANK10              50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BITBANK11           50      0       0      26        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BANK11              50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
ABS                  0      0     150      28        0.0%
BITBANK12           50      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BANK12              50      0       0      30        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITBANK13           50      0       0      31        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BANK13              50      0       0      32        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%
BITBANK14           50      0       0      33        0.0%
BITSFR32             0      0       0      33        0.0%
SFR32                0      0       0      33        0.0%
BANK14              50      0       0      34        0.0%
BITSFR33             0      0       0      34        0.0%
SFR33                0      0       0      34        0.0%
BITBANK15           50      0       0      35        0.0%
BITSFR34             0      0       0      35        0.0%
SFR34                0      0       0      35        0.0%
BANK15              50      0       0      36        0.0%
BITSFR35             0      0       0      36        0.0%
SFR35                0      0       0      36        0.0%
BITBANK16           50      0       0      37        0.0%
BITSFR36             0      0       0      37        0.0%
SFR36                0      0       0      37        0.0%
BANK16              50      0       0      38        0.0%
BITSFR37             0      0       0      38        0.0%
SFR37                0      0       0      38        0.0%
BITBANK17           50      0       0      39        0.0%
BITSFR38             0      0       0      39        0.0%
SFR38                0      0       0      39        0.0%
BANK17              50      0       0      40        0.0%
BITSFR39             0      0       0      40        0.0%
SFR39                0      0       0      40        0.0%
BITBANK18           50      0       0      41        0.0%
BITSFR40             0      0       0      41        0.0%
SFR40                0      0       0      41        0.0%
BANK18              50      0       0      42        0.0%
BITSFR41             0      0       0      42        0.0%
SFR41                0      0       0      42        0.0%
BITBANK19           50      0       0      43        0.0%
BITSFR42             0      0       0      43        0.0%
SFR42                0      0       0      43        0.0%
BANK19              50      0       0      44        0.0%
BITSFR43             0      0       0      44        0.0%
SFR43                0      0       0      44        0.0%
BITBANK20           50      0       0      45        0.0%
BITSFR44             0      0       0      45        0.0%
SFR44                0      0       0      45        0.0%
BANK20              50      0       0      46        0.0%
BITSFR45             0      0       0      46        0.0%
SFR45                0      0       0      46        0.0%
BITBANK21           50      0       0      47        0.0%
BITSFR46             0      0       0      47        0.0%
SFR46                0      0       0      47        0.0%
BANK21              50      0       0      48        0.0%
BITSFR47             0      0       0      48        0.0%
SFR47                0      0       0      48        0.0%
BITBANK22           50      0       0      49        0.0%
BITSFR48             0      0       0      49        0.0%
SFR48                0      0       0      49        0.0%
BANK22              50      0       0      50        0.0%
BITSFR49             0      0       0      50        0.0%
SFR49                0      0       0      50        0.0%
BITBANK23           50      0       0      51        0.0%
BITSFR50             0      0       0      51        0.0%
SFR50                0      0       0      51        0.0%
BANK23              50      0       0      52        0.0%
BITSFR51             0      0       0      52        0.0%
SFR51                0      0       0      52        0.0%
BITBANK24           50      0       0      53        0.0%
BITSFR52             0      0       0      53        0.0%
SFR52                0      0       0      53        0.0%
BANK24              50      0       0      54        0.0%
BITSFR53             0      0       0      54        0.0%
SFR53                0      0       0      54        0.0%
BITBANK25           50      0       0      55        0.0%
BITSFR54             0      0       0      55        0.0%
SFR54                0      0       0      55        0.0%
BANK25              50      0       0      56        0.0%
BITSFR55             0      0       0      56        0.0%
SFR55                0      0       0      56        0.0%
BITBANK26           50      0       0      57        0.0%
BITSFR56             0      0       0      57        0.0%
SFR56                0      0       0      57        0.0%
BANK26              50      0       0      58        0.0%
BITSFR57             0      0       0      58        0.0%
SFR57                0      0       0      58        0.0%
BITSFR58             0      0       0      59        0.0%
SFR58                0      0       0      59        0.0%
DATA                 0      0     150      59        0.0%
BITBANK27           50      0       0      60        0.0%
BITSFR59             0      0       0      60        0.0%
SFR59                0      0       0      60        0.0%
BANK27              50      0       0      61        0.0%
BITSFR60             0      0       0      61        0.0%
SFR60                0      0       0      61        0.0%
BITBANK28           50      0       0      62        0.0%
BITSFR61             0      0       0      62        0.0%
SFR61                0      0       0      62        0.0%
BANK28              50      0       0      63        0.0%
BITSFR62             0      0       0      63        0.0%
SFR62                0      0       0      63        0.0%
BITBANK29           50      0       0      64        0.0%
BITSFR63             0      0       0      64        0.0%
SFR63                0      0       0      64        0.0%
BANK29              50      0       0      65        0.0%
BITBANK30           50      0       0      66        0.0%
BANK30              50      0       0      67        0.0%
BITBANK31           50      0       0      68        0.0%
BANK31              50      0       0      69        0.0%
BITBANK32           50      0       0      70        0.0%
BANK32              50      0       0      71        0.0%
BITBANK33           50      0       0      72        0.0%
BANK33              50      0       0      73        0.0%
BITBANK34           50      0       0      74        0.0%
BANK34              50      0       0      75        0.0%
BITBANK35           50      0       0      76        0.0%
BANK35              50      0       0      77        0.0%
BITBANK36           50      0       0      78        0.0%
BANK36              50      0       0      79        0.0%
BITBANK37           50      0       0      80        0.0%
BANK37              50      0       0      81        0.0%
BITBANK38           50      0       0      82        0.0%
BANK38              50      0       0      83        0.0%
BITBANK39           50      0       0      84        0.0%
BANK39              50      0       0      85        0.0%
BITBANK40           50      0       0      86        0.0%
BANK40              50      0       0      87        0.0%
BITBANK41           50      0       0      88        0.0%
BANK41              50      0       0      89        0.0%
BITBANK42           50      0       0      90        0.0%
BANK42              50      0       0      91        0.0%
BITBANK43           50      0       0      92        0.0%
BANK43              50      0       0      93        0.0%
BITBANK44           50      0       0      94        0.0%
BANK44              50      0       0      95        0.0%
BITBANK45           50      0       0      96        0.0%
BANK45              50      0       0      97        0.0%
BITBANK46           50      0       0      98        0.0%
BANK46              50      0       0      99        0.0%
BITBANK47           50      0       0     100        0.0%
BANK47              50      0       0     101        0.0%
BITBANK48           50      0       0     102        0.0%
BANK48              50      0       0     103        0.0%
BITBANK49           50      0       0     104        0.0%
BANK49              50      0       0     105        0.0%
BITBANK50           50      0       0     106        0.0%
BANK50              50      0       0     107        0.0%


Microchip Technology PIC Macro Assembler V2.00 build -1524193055 
Symbol Table                                                                                   Mon Sep 17 14:41:06 2018

           ___fldiv@aexp 0053             ___fldiv@bexp 0052             ___fldiv@sign 004B  
            __CFG_CP$OFF 0000                       l43 004E                       l44 0076  
                     l91 0CCB                       l83 0AC0                       l86 0B6B  
                     l89 0C94             ___awdiv@sign 0076      ___wmul@multiplicand 0072  
    __Umul8_16@word_mpld 0076              __CFG_LVP$ON 0000                      l220 1FC8  
                    l223 1FE8                      l330 0D3C                      l323 0CF8  
                    l325 0CFA                      l326 0CFC                      l327 0CFE  
                    l328 0D00                      l258 03C1                      l259 03B2  
                    l373 1008                      l269 03FA                      l542 1F36  
                    l543 1F50                      l551 1345                      l287 05B3  
                    l802 1265                      l730 14B5                      l803 126F  
                    l716 17F7                      l708 17DE                      l574 1159  
                    l751 15C9                      l752 15E1                      l680 16C7  
                    l833 13FA                      l754 15EE                      l674 164C  
                    l782 0A76                      l678 16E5                      l695 177E  
                    l856 0183                      l795 1251                      l947 1D77  
                    l789 121B             __CFG_CPD$OFF 0000                      _pad 1FB0  
           ___awmod@sign 0076             __CFG_BORV$LO 0000                      wreg 0009  
           ___flmul@aexp 0032             ___flmul@bexp 0033             ___flmul@sign 002D  
           ___flmul@temp 0038             ___flmul@prod 0034             __CFG_ZCD$OFF 0000  
            main@buffer1 0140             ___fltol@exp1 007A                     l3013 081B  
                   l3031 0841                     l3023 0823                     l3007 0810  
                   l3103 1388                     l3025 082F                     l3035 084A  
                   l3051 1EE1                     l3203 14AA                     l3107 13B1  
                   l3133 1107                     l4021 1E5B                     l3039 0852  
                   l3063 1EEE                     l3055 1EE8                     l3303 15EA  
                   l3223 14E8                     l3207 14AD                     l3151 1143  
                   l3065 1EFA                     l3073 1F0F                     l3217 14D4  
                   l4131 123E                     l3243 1534                     l3251 1516  
                   l3323 0871                     l4019 1E39                     l4125 122A  
                   l3077 1F17                     l3069 1F06                     l3253 1552  
                   l3405 09DE                     l3341 0894                     l3325 0873  
                   l2701 161C                     l3157 1150                     l3149 1135  
                   l3501 0232                     l4119 1213                     l3183 1486  
                   l3431 0A4C                     l3415 0A0C                     l3407 09F5  
                   l3343 0896                     l3327 087B                     l2703 1624  
                   l3159 115C                     l4081 1EA0                     l4153 128A  
                   l4137 1256                     l4129 122E                     l3249 154D  
                   l3089 1F62                     l3417 0A0E                     l3353 08AC  
                   l3345 089E                     l2721 1641                     l4217 0AB7  
                   l4331 1EB1                     l4083 1EA3                     l4139 125F  
                   l3267 1558                     l3187 1489                     l3099 135F  
                   l3427 0A37                     l2731 1656                     l2651 1F6D  
                   l3611 0562                     l4077 1E9A                     l3277 1586  
                   l3269 156F                     l3189 1491                     l3437 0A63  
                   l2805 1718                     l2725 1644                     l3605 0435  
                   l3541 033B                     l3509 0258                     l4253 0C96  
                   l4095 1EC3                     l4079 1E9D                     l4087 1EA9  
                   l3279 1588                     l2831 179D                     l2823 1790  
                   l2815 1776                     l2655 1F93                     l3703 072D  
                   l3607 050F                     l3535 02D1                     l3519 028A  
                   l3527 02B0                     l3471 01D5                     l4327 0D2A  
                   l4089 1EBF                     l3457 1D5F                     l4329 1407  
                   l3289 15B1                     l2761 1692                     l2673 1DEA  
                   l2905 1FCA                     l3705 0735                     l3625 05B1  
                   l3617 0583                     l3561 03C4                     l3545 036B  
                   l2771 16D2                     l2923 10C0                     l2667 1E0E  
                   l2675 1DF6                     l3715 0731                     l3627 05BA  
                   l3563 03CC                     l3539 0301                     l3547 0390  
                   l3483 01EC                     l3491 0201                     l2837 17A4  
                   l2933 10E8                     l2909 1FF4                     l3741 07B3  
                   l3725 077F                     l3717 0769                     l3661 064D  
                   l3581 0407                     l3573 03F5                     l3565 03D1  
                   l3821 105D                     l3813 103D                     ?_pad 0024  
                   l2871 17F2                     l2847 17AF                     l2839 17A6  
                   l2927 10C5                     l3639 0619                     l3591 041B  
                   l3583 040B                     l3479 01E6                     l3807 1031  
                   l2881 1D71                     l2849 17B1                     l2769 16D0  
                   l2697 1619                     l3921 0EFC                     l3771 13F5  
                   l2867 17EE                     l2795 1706                     l2787 16F3  
                   l2779 16E1                     l2971 014D                     l2939 1DAE  
                   l3659 0633                     l3667 065F                     l3675 06E1  
                   l3595 0423                     l3931 0F60                     l3843 0D01  
                   l3851 0D10                     l3773 13FB                     l3765 13E5  
                   l3757 13C9                     l2797 1708                     l3749 07CE  
                   l3909 0EAA                     l3845 0D0B                     l3775 1410  
                   l2975 0166                     l2895 1FBE                     l3687 070C  
                   l3679 06F9                     l3871 0D91                     l3855 0D43  
                   l3777 1433                     l2969 013C                     l2987 1002  
                   l3779 1437                     l2899 1FC6                     l3939 0F9E  
                   l3891 0E13                     l3867 0D77                     l3955 0FD6  
                   l3789 1467                     l3949 0FCA                     l3893 0E1C  
                   l3869 0D88                     l3877 0DBC                     l3889 0E02  
                   l3899 0E47                     STR_1 2010                     STR_2 2000  
                   STR_3 201C                     STR_4 2024                     STR_7 2020  
                   STR_8 2028       main@temp_reference 0158                     u3100 1D44  
                   u3210 16B5                     u3220 16B6                     u3205 16AB  
                   u3065 1F91                     u3090 1D43                     u4035 1EF1  
                   u4115 1F5E                     u3333 172B                     u3325 170D  
                   u4055 1F00                     u3255 16D7                     u4065 1F07  
                   u4225 1136                     u5025 03BD                     u3700 1DD3  
                   u4405 152E                     u3710 1DD4                     u4415 1542  
                   u3375 1791                     u4255 1151                     u3615 1096  
                   u5135 043F                     u5055 03DE                     u5400 144B  
                   u5065 03F1                     u5410 144C                     u6107 12D5  
                   u3555 1D78                     u3475 17C9                     u4195 1110  
                   u3635 10AF                     u5340 07A6                     u6117 12DB  
                   u4445 155B                     u3805 0156                     u5325 0772  
                   u3670 10E0                     u5350 07A7                     u6207 003B  
                   u6127 1312                     u4535 159F                     u4375 151E  
                   u3735 00D5                     u5255 06EB                     u3840 1D2C  
                   u3680 10E1                     u3760 0103                     u5600 0E3A  
                   u6217 0043                     u6137 1318                     u4545 15BA  
                   u4465 1564                     u4385 1525                     u4705 09E1  
                   u3665 10D2                     u3825 016F                     u3745 00F0  
                   u5265 06F7                     u6057 0AB1                     u3850 1D2D  
                   u6307 11F8                     u6227 005C                     u6147 131E  
                   u4555 15D3                     u3595 1FD4                     u6067 0ABB  
                   u4900 0222                     u5540 0DAE                     u6237 0069  
                   u6157 1324                     u4805 0A40                     u4725 09EA  
                   u3765 00FF                     u6077 0B66                     u4910 0223  
                   u5550 0DAF                     u6247 0084                     u6167 001B  
                   u3935 0826                     u4815 0A56                     u4655 0922  
                   u6087 0C2F                     u5705 1172                     u6257 0091  
                   u6177 0023                     u4665 0951                     u3785 0128  
                   u6097 0C59                     u6267 11AD                     u5715 1183  
                   u6187 002B                     u3875 1009                     u3955 0830  
                   u4675 09A7                     u4940 027A                     u5660 0F3E  
                   u6277 11B3                     u5725 1191                     u6197 0033  
                   u5805 12E3                     u3885 100E                     u3965 083A  
                   u4685 09BE                     u4950 027B                     u5670 0F3F  
                   u5590 0E39                     u6287 11EA                     u5735 11A0  
                   u5815 12F4                     u3975 0842                     u4695 09CD  
                   u6297 11F0                     u5745 11BB                     u5755 11CC  
                   u5915 124B                     u4795 0A25                     u5765 129A  
                   u5775 12AB                     u5935 1259                     u5785 12B9  
                   u5795 12C8                     u5975 1277                     u5895 1237  
           __CFG_WRT$OFF 0000            __CFG_FCMEN$ON 0000                     _dbuf 0220  
                   _atoi 13C4                     _main 0A83                     _prec 016C  
                   _nout 0168                     pad@i 0027                     pad@p 0025  
                   fsr0h 0005                     fsr1h 0007                     indf0 0000  
                   fsr0l 0004                     indf1 0001                     fsr1l 0006  
                   pad@w 0029                     btemp 007E            __CFG_BOREN$ON 0000  
          ___fpclassifyf 1075                     start 0002          ___fldiv@new_exp 004C  
        __end_of_Lcd_Cmd 11FE             _tolower$1090 007C            __CFG_CSWEN$ON 0000  
          __CFG_MCLRE$ON 0000               _Lcd_Chr_CP 1293                    ??_pad 007C  
         Lcd_Out2@buffer 0074            ___fltol@sign1 0079                    ?_atoi 0076  
        __end_of___fladd 1800                    ?_main 0070                    _ADPCH 009E  
        __end_of___fldiv 15FF          __end_of___awdiv 0857          __end_of___flneg 1D1D  
                  STR_11 202C                    STR_13 202C            __CFG_WDTE$OFF 0000  
        __end_of___awmod 1F1C          __end_of___flmul 0A83          __end_of___flsub 1DA5  
        __end_of___fltol 116B          ___awdiv@divisor 0070          ___awdiv@counter 0075  
           vfpfcnvrt@fmt 006D            __CFG_PWRTE$ON 0000                    _flags 00EE  
                  _fputc 1F64                    _fputs 1E0A          __end_of_isdigit 1D34  
                  atoi@n 0027                    pad@fp 002B                    atoi@s 0076  
                  _width 016A                    _putch 0004          __end_of_isspace 1D67  
        __end_of_isupper 1D4B                    status 0003                    wtemp0 007E  
        __end_of_sprintf 1E98           ?___fpclassifyf 0070          __end_of_tolower 1DE5  
        __end_of_strncmp 1075         __end_of_Lcd_Init 00B4         __end_of_Lcd_Out2 1ED7  
        __initialization 07E6             __end_of_atoi 146C             __end_of_main 0CCE  
                 ??_atoi 0078                   ??_main 00EB                   ?_fputc 0070  
                 ?_fputs 0078                   _ADRESH 008D                   _ADRESL 008C  
       ___awdiv@dividend 0072                   ?_putch 0070                   _ANSELC 1F4E  
                 _ANSELD 1F59           __CFG_WDTCCS$SC 0000                ??_Lcd_Cmd 0070  
          vfpfcnvrt@done 0120         __end_of___xxtofl 1293             vfprintf@cfmt 00E9  
                 ___flge 132A                   ___fleq 1F1C              ?_Lcd_Chr_CP 0070  
              ??___fladd 0020                   ___wmul 1000                ??___fldiv 0042  
              ??___awdiv 0074                ??___flneg 0074           __CFG_STVREN$ON 0000  
              ??___awmod 0074                ??___flmul 0028                ??___flsub 007E  
              ??___fltol 0074                   _efgtoa 018C                   _floorf 00B4  
       ___awdiv@quotient 0077          ___awmod@divisor 0070            main@temp_lm35 015C  
        ___awmod@counter 0075                   pad@buf 0024                   _strcpy 1DA5  
                 _strlen 1DE5                   fputc@c 0070                   fputs@c 0020  
                 fputs@i 0021                   fputs@s 0023                ??_isdigit 0072  
     __size_of__Umul8_16 001F          ___fpclassifyf@e 0020          ___fpclassifyf@u 0022  
        ___fpclassifyf@x 0070                ??_isspace 0072                ??_isupper 0072  
                 putch@c 0070         __end_of_vfprintf 1E64                ??_sprintf 006F  
              ??_tolower 0078                ??_strncmp 0074               ___flge@ff1 003A  
             ___flge@ff2 003E          ??___fpclassifyf 0074             ___xxtofl@arg 007A  
           ___xxtofl@exp 0079             ___xxtofl@val 0070               ___fleq@ff1 0070  
             ___fleq@ff2 0074  __end_of__initialization 07FD               ___flneg@f1 0070  
             ___fltol@f1 0070           __pcstackCOMMON 0070            __end_of_fputc 1FB0  
          __end_of_fputs 1E30            __end_of_putch 0005                ?_Lcd_Init 0070  
              ?_Lcd_Out2 0073                  ??_fputc 0073                  ??_fputs 0079  
    __size_of_Lcd_Chr_CP 0097                  ??_putch 0070               __pbssBANK1 00EE  
             __pbssBANK2 0164               __pbssBANK3 01A0               __pbssBANK4 0220  
      __end_of__Umul8_16 1D86               _efgtoa$640 00AA               _efgtoa$650 00B0  
             _efgtoa$651 00B2               _efgtoa$645 00AC               _efgtoa$639 00A8  
             _efgtoa$649 00AE               __pmaintext 0A83                  ?___flge 003A  
                ?___fleq 0070                  ?___wmul 0070          __CFG_PPS1WAY$ON 0000  
                ?_efgtoa 0068                  ?_floorf 0054      __CFG_RSTOSC$HFINT32 0000  
                ?_strcpy 0070                  ?_strlen 0070                ?___xxtofl 0070  
     __size_of_vfpfcnvrt 0332               ??_Lcd_Init 0073               ??_Lcd_Out2 0075  
                _Lcd_Cmd 116B                _ADREFbits 009A     __CFG_SCANE$available 0000  
        __size_of___flge 009A          __size_of___fleq 0048                  ___fladd 15FF  
                ___fldiv 146C                  ___awdiv 0806                  ___flneg 1D14  
                ___awmod 1ED7                  ___flmul 0857                  ___flsub 1D86  
                ___fltol 10ED          __size_of___wmul 001B                ?_vfprintf 00E3  
        __size_of_efgtoa 065A          __size_of_floorf 00D8                  __ptext1 1E64  
                __ptext2 1E30                  __ptext3 0CCE                  __ptext4 101B  
                __ptext5 018C                  __ptext6 1DC4                  __ptext7 1D34  
                __ptext8 1DA5                  __ptext9 1FB0          __size_of_strcpy 001F  
        __size_of_strlen 0025             __size_of_pad 0050                  _isdigit 1D1D  
             ??___xxtofl 0074         ___awmod@dividend 0072                  _isspace 1D4B  
                _isupper 1D34                  efgtoa@c 006C                  efgtoa@d 00BC  
                efgtoa@e 00D5                  efgtoa@f 0068                  efgtoa@g 00D1  
                efgtoa@h 00C7                  efgtoa@i 00CF                  efgtoa@l 00CB  
                efgtoa@m 00B8                  efgtoa@n 00D7                  efgtoa@p 00C1  
                efgtoa@t 00B4                  efgtoa@u 00D9                  efgtoa@w 00C4  
                atoi@neg 0020                  _sprintf 1E64                  _tolower 1DC4  
                clrloop0 0006                  _strncmp 101B     end_of_initialization 07FD  
                floorf@e 0062                  floorf@m 005E                  floorf@u 0064  
                floorf@x 0054                  fputc@fp 0072                  fputs@fp 0078  
      __end_of_vfpfcnvrt 1000               efgtoa@mode 00C6               efgtoa@sign 00BE  
           ??_Lcd_Chr_CP 0070                Lcd_Out2@x 0073                Lcd_Out2@y 0077  
             ??_vfprintf 00E6    __CFG_WDTCPS$WDTCPS_31 0000                  strcpy@d 0076  
                strlen@a 0076                  strcpy@s 0074                  strlen@s 0077  
              _PORTCbits 000E                _PORTDbits 000F              ___fladd@grs 007B  
          ___xxtofl@sign 0078                _TRISAbits 0011                _TRISCbits 0013  
              _TRISDbits 0014              ___fldiv@grs 004E              ___fldiv@rem 0047  
       __CFG_FEXTOSC$OFF 0000       __end_of_Lcd_Chr_CP 132A              ___flmul@grs 002E  
         __end_of___flge 13C4           __end_of___fleq 1F64              vfpfcnvrt@ap 006E  
            vfpfcnvrt@ct 012C              vfpfcnvrt@fp 0130           __end_of___wmul 101B  
         __end_of_efgtoa 07E6           __end_of_floorf 018C               floorf@F514 01A0  
         __end_of_strcpy 1DC4           __end_of_strlen 1E0A      start_initialization 07E6  
            __end_of_pad 2000        __size_of_Lcd_Init 00A9        __size_of_Lcd_Out2 003F  
  __end_of___fpclassifyf 10ED         __CFG_LPBOREN$OFF 0000              vfprintf@fmt 00E3  
               ??___flge 0042                 ??___fleq 0078                 ??___wmul 0074  
               ??_efgtoa 00A0                __Umul8_16 1D67                 ??_floorf 0058  
               ??_strcpy 0072                 ??_strlen 0072                ___fladd@a 0074  
              ___fladd@b 0070                ___fldiv@a 003A                ___fldiv@b 003E  
              ___flmul@a 0024                ___flmul@b 0020                ___flsub@a 003A  
              ___flsub@b 003E                ___latbits 0004            __pcstackBANK0 0020  
          __pcstackBANK1 00A0            __pcstackBANK2 0120        __size_of___xxtofl 0095  
               ?_Lcd_Cmd 0070                _main$1282 0154                 ?___fladd 0070  
               ?___fldiv 003A                 ?___awdiv 0070                 ?___flneg 0070  
               ?___awmod 0070                 ?___flmul 0020                 ?___flsub 003A  
               ?___fltol 0070               ?__Umul8_16 0070        __size_of_vfprintf 0034  
               ?_isdigit 0070                 ?_isspace 0070                 ?_isupper 0070  
               ?_sprintf 0131                 ?_tolower 0076           __size_of_fputc 004C  
         __size_of_fputs 0026                 ?_strncmp 0070           __size_of_putch 0001  
         ___wmul@product 0074                 _LATCbits 0018                clear_ram0 0005  
              _vfpfcnvrt 0CCE             Lcd_Init@data 0074               _ADCON0bits 0093  
      ___wmul@multiplier 0070             _isspace$1005 0074             Lcd_Out2@data 0078  
               _Lcd_Init 000B                 _Lcd_Out2 1E98               vfpfcnvrt@c 012F  
             vfpfcnvrt@f 0128         __size_of_Lcd_Cmd 0093               vfprintf@ap 00E5  
             vfprintf@fp 00E8              ??__Umul8_16 0072         __size_of___fladd 0201  
       __size_of___fldiv 0193         __size_of___awdiv 0051         __size_of___flneg 0009  
       __size_of___awmod 0045         __size_of___flmul 022C         __size_of___flsub 001F  
       __size_of___fltol 007E               ?_vfpfcnvrt 006D               _ANSELAbits 1F38  
             _ANSELCbits 1F4E       ___fpclassifyf@F453 0164               sprintf@fmt 0131  
             sprintf@ret 0137                 ___xxtofl 11FE                 _atoi$974 0022  
               _atoi$975 0026                 _atoi$976 0024         __size_of_isdigit 0017  
         Lcd_Chr_CP@data 0072         __size_of_isspace 001C                 __ptext10 1DE5  
               __ptext11 1E0A                 __ptext20 0857                 __ptext12 1F64  
               __ptext21 1D67                 __ptext13 0004                 __ptext30 1000  
               __ptext22 132A                 __ptext14 00B4                 __ptext31 11FE  
               __ptext23 1F1C                 __ptext15 1075                 __ptext32 1E98  
               __ptext24 146C                 __ptext16 10ED                 __ptext33 1293  
               __ptext25 1ED7                 __ptext17 1D86                 __ptext34 000B  
               __ptext26 0806                 __ptext18 15FF                 __ptext35 116B  
               __ptext27 13C4                 __ptext19 1D14                 __ptext28 1D4B  
               __ptext29 1D1D         __size_of_isupper 0017         __size_of_sprintf 0034  
       __size_of_tolower 0021               strcpy@dest 0077         __size_of_strncmp 005A  
            Lcd_Cmd@data 0072            __size_of_atoi 00A8            __size_of_main 024B  
   __CFG_WDTCWS$WDTCWS_7 0000                 efgtoa@fp 00C0                 efgtoa@ne 00BA  
               efgtoa@pp 00B6                 efgtoa@ou 00A4                 _vfprintf 1E30  
               main@adc1 0160                 main@adc2 0162                 main@volt 0150  
               isdigit@c 0070                sprintf@ap 013A                 isspace@c 0070  
      __CFG_CLKOUTEN$OFF 0000                strcpy@src 0070                 isupper@c 0070  
              strncmp@_l 0076                strncmp@_r 0070               _OSCFRQbits 0893  
            efgtoa@nmode 00C3              ??_vfpfcnvrt 00DD            _vfpfcnvrt$670 0126  
          _vfpfcnvrt$665 0122            _vfpfcnvrt$666 0124            __pstringtext1 2000  
          __pstringtext2 2010            __pstringtext3 201C            __pstringtext4 2020  
          __pstringtext5 2024            __pstringtext6 2028            __pstringtext7 202C  
          __pstringtext8 0000   __Umul8_16@multiplicand 0070                 sprintf@f 013B  
               tolower@c 0076                 sprintf@s 0139   __size_of___fpclassifyf 0078  
               strncmp@l 0079                 strncmp@n 0072                 strncmp@r 0077  
          ___fladd@signs 0078             ___fladd@aexp 0079             ___fladd@bexp 007A  
   __Umul8_16@multiplier 0078        __Umul8_16@product 0074  
