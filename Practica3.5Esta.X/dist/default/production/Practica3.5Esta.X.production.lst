

Microchip Technology PIC LITE Macro Assembler V1.45 build -152302408 
                                                                                               Thu Oct 04 12:06:35 2018

Microchip Technology Omniscient Code Generator v1.45 (Free mode) build 201711160504
     1                           	processor	16F18877
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	idataBANK0,global,class=CODE,delta=2
     5                           	psect	stringtext1,global,class=STRCODE,delta=2
     6                           	psect	stringtext2,global,class=STRCODE,delta=2
     7                           	psect	stringtext3,global,class=STRCODE,delta=2
     8                           	psect	stringtext4,global,class=STRCODE,delta=2
     9                           	psect	cinit,global,class=CODE,merge=1,delta=2
    10                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    11                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
    12                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    13                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    14                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    15                           	psect	text1,local,class=CODE,merge=1,delta=2
    16                           	psect	text2,local,class=CODE,merge=1,delta=2,group=2
    17                           	psect	text3,local,class=CODE,merge=1,delta=2,group=2
    18                           	psect	text4,local,class=CODE,merge=1,delta=2,group=2
    19                           	psect	text5,local,class=CODE,merge=1,delta=2,group=2
    20                           	psect	text6,local,class=CODE,merge=1,delta=2
    21                           	psect	text7,local,class=CODE,merge=1,delta=2
    22                           	psect	text8,local,class=CODE,merge=1,delta=2
    23                           	psect	text9,local,class=CODE,merge=1,delta=2
    24                           	psect	text10,local,class=CODE,merge=1,delta=2
    25                           	psect	intentry,global,class=CODE,delta=2
    26                           	dabs	1,0x7E,2
    27  0000                     
    28                           ; Version 1.45
    29                           ; Generated 16/11/2017 GMT
    30                           ; 
    31                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    32                           ; All rights reserved.
    33                           ; 
    34                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    35                           ; 
    36                           ; Redistribution and use in source and binary forms, with or without modification, are
    37                           ; permitted provided that the following conditions are met:
    38                           ; 
    39                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    40                           ;        conditions and the following disclaimer.
    41                           ; 
    42                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    43                           ;        of conditions and the following disclaimer in the documentation and/or other
    44                           ;        materials provided with the distribution.
    45                           ; 
    46                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    47                           ;        software without specific prior written permission.
    48                           ; 
    49                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    50                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    51                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    52                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    53                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    54                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    55                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    56                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    57                           ; 
    58                           ; 
    59                           ; Code-generator required, PIC16F18877 Definitions
    60                           ; 
    61                           ; SFR Addresses
    62  0000                     	;# 
    63  0001                     	;# 
    64  0002                     	;# 
    65  0003                     	;# 
    66  0004                     	;# 
    67  0005                     	;# 
    68  0006                     	;# 
    69  0007                     	;# 
    70  0008                     	;# 
    71  0009                     	;# 
    72  000A                     	;# 
    73  000B                     	;# 
    74  000C                     	;# 
    75  000D                     	;# 
    76  000E                     	;# 
    77  000F                     	;# 
    78  0010                     	;# 
    79  0011                     	;# 
    80  0012                     	;# 
    81  0013                     	;# 
    82  0014                     	;# 
    83  0015                     	;# 
    84  0016                     	;# 
    85  0017                     	;# 
    86  0018                     	;# 
    87  0019                     	;# 
    88  001A                     	;# 
    89  001C                     	;# 
    90  001C                     	;# 
    91  001D                     	;# 
    92  001D                     	;# 
    93  001E                     	;# 
    94  001F                     	;# 
    95  008C                     	;# 
    96  008C                     	;# 
    97  008D                     	;# 
    98  008E                     	;# 
    99  008E                     	;# 
   100  008F                     	;# 
   101  0090                     	;# 
   102  0090                     	;# 
   103  0091                     	;# 
   104  0093                     	;# 
   105  0094                     	;# 
   106  0095                     	;# 
   107  0096                     	;# 
   108  0097                     	;# 
   109  0098                     	;# 
   110  0099                     	;# 
   111  009A                     	;# 
   112  009B                     	;# 
   113  009C                     	;# 
   114  009D                     	;# 
   115  009E                     	;# 
   116  010C                     	;# 
   117  010D                     	;# 
   118  010E                     	;# 
   119  010E                     	;# 
   120  010F                     	;# 
   121  0110                     	;# 
   122  0110                     	;# 
   123  0111                     	;# 
   124  0112                     	;# 
   125  0112                     	;# 
   126  0113                     	;# 
   127  0114                     	;# 
   128  0114                     	;# 
   129  0115                     	;# 
   130  0116                     	;# 
   131  0116                     	;# 
   132  0117                     	;# 
   133  0119                     	;# 
   134  0119                     	;# 
   135  0119                     	;# 
   136  011A                     	;# 
   137  011A                     	;# 
   138  011A                     	;# 
   139  011B                     	;# 
   140  011B                     	;# 
   141  011B                     	;# 
   142  011B                     	;# 
   143  011B                     	;# 
   144  011C                     	;# 
   145  011C                     	;# 
   146  011C                     	;# 
   147  011D                     	;# 
   148  011D                     	;# 
   149  011D                     	;# 
   150  011E                     	;# 
   151  011E                     	;# 
   152  011E                     	;# 
   153  011F                     	;# 
   154  011F                     	;# 
   155  011F                     	;# 
   156  011F                     	;# 
   157  011F                     	;# 
   158  018C                     	;# 
   159  018D                     	;# 
   160  018E                     	;# 
   161  018F                     	;# 
   162  0190                     	;# 
   163  0191                     	;# 
   164  0192                     	;# 
   165  0196                     	;# 
   166  0197                     	;# 
   167  0198                     	;# 
   168  0199                     	;# 
   169  019A                     	;# 
   170  019B                     	;# 
   171  019C                     	;# 
   172  020C                     	;# 
   173  020C                     	;# 
   174  020D                     	;# 
   175  020E                     	;# 
   176  020F                     	;# 
   177  020F                     	;# 
   178  0210                     	;# 
   179  0210                     	;# 
   180  0211                     	;# 
   181  0211                     	;# 
   182  0212                     	;# 
   183  0212                     	;# 
   184  0213                     	;# 
   185  0214                     	;# 
   186  0215                     	;# 
   187  0215                     	;# 
   188  0216                     	;# 
   189  0216                     	;# 
   190  0217                     	;# 
   191  0217                     	;# 
   192  0218                     	;# 
   193  0218                     	;# 
   194  0219                     	;# 
   195  021A                     	;# 
   196  021B                     	;# 
   197  021B                     	;# 
   198  021C                     	;# 
   199  021C                     	;# 
   200  021D                     	;# 
   201  021D                     	;# 
   202  021E                     	;# 
   203  021F                     	;# 
   204  028C                     	;# 
   205  028C                     	;# 
   206  028D                     	;# 
   207  028D                     	;# 
   208  028E                     	;# 
   209  028F                     	;# 
   210  0290                     	;# 
   211  0290                     	;# 
   212  0291                     	;# 
   213  0292                     	;# 
   214  0292                     	;# 
   215  0293                     	;# 
   216  0293                     	;# 
   217  0294                     	;# 
   218  0295                     	;# 
   219  0296                     	;# 
   220  0296                     	;# 
   221  0297                     	;# 
   222  0298                     	;# 
   223  0298                     	;# 
   224  0299                     	;# 
   225  0299                     	;# 
   226  029A                     	;# 
   227  029B                     	;# 
   228  029C                     	;# 
   229  029C                     	;# 
   230  029D                     	;# 
   231  030C                     	;# 
   232  030C                     	;# 
   233  030D                     	;# 
   234  030E                     	;# 
   235  030F                     	;# 
   236  0310                     	;# 
   237  0310                     	;# 
   238  0311                     	;# 
   239  0312                     	;# 
   240  0313                     	;# 
   241  0314                     	;# 
   242  0314                     	;# 
   243  0315                     	;# 
   244  0316                     	;# 
   245  0317                     	;# 
   246  0318                     	;# 
   247  0318                     	;# 
   248  0319                     	;# 
   249  031A                     	;# 
   250  031B                     	;# 
   251  031C                     	;# 
   252  031C                     	;# 
   253  031D                     	;# 
   254  031E                     	;# 
   255  031F                     	;# 
   256  038C                     	;# 
   257  038D                     	;# 
   258  038E                     	;# 
   259  0390                     	;# 
   260  0391                     	;# 
   261  0392                     	;# 
   262  040C                     	;# 
   263  040D                     	;# 
   264  040E                     	;# 
   265  040F                     	;# 
   266  0410                     	;# 
   267  0411                     	;# 
   268  0416                     	;# 
   269  0416                     	;# 
   270  0417                     	;# 
   271  0418                     	;# 
   272  0418                     	;# 
   273  0419                     	;# 
   274  041A                     	;# 
   275  041A                     	;# 
   276  041B                     	;# 
   277  041C                     	;# 
   278  041C                     	;# 
   279  041D                     	;# 
   280  041E                     	;# 
   281  041F                     	;# 
   282  048C                     	;# 
   283  048C                     	;# 
   284  048D                     	;# 
   285  048E                     	;# 
   286  048F                     	;# 
   287  048F                     	;# 
   288  0490                     	;# 
   289  0491                     	;# 
   290  0492                     	;# 
   291  0492                     	;# 
   292  0493                     	;# 
   293  0494                     	;# 
   294  0495                     	;# 
   295  0495                     	;# 
   296  0496                     	;# 
   297  0497                     	;# 
   298  0498                     	;# 
   299  0499                     	;# 
   300  049A                     	;# 
   301  049B                     	;# 
   302  049C                     	;# 
   303  049D                     	;# 
   304  050C                     	;# 
   305  050C                     	;# 
   306  050D                     	;# 
   307  050E                     	;# 
   308  050F                     	;# 
   309  050F                     	;# 
   310  0510                     	;# 
   311  0511                     	;# 
   312  0512                     	;# 
   313  0512                     	;# 
   314  0513                     	;# 
   315  0514                     	;# 
   316  0515                     	;# 
   317  0515                     	;# 
   318  0516                     	;# 
   319  0517                     	;# 
   320  0518                     	;# 
   321  0519                     	;# 
   322  051A                     	;# 
   323  051B                     	;# 
   324  051C                     	;# 
   325  051D                     	;# 
   326  058C                     	;# 
   327  058C                     	;# 
   328  058D                     	;# 
   329  058E                     	;# 
   330  058F                     	;# 
   331  058F                     	;# 
   332  0590                     	;# 
   333  0591                     	;# 
   334  0592                     	;# 
   335  0593                     	;# 
   336  060C                     	;# 
   337  060D                     	;# 
   338  060E                     	;# 
   339  060F                     	;# 
   340  0610                     	;# 
   341  0611                     	;# 
   342  0612                     	;# 
   343  0613                     	;# 
   344  0614                     	;# 
   345  0616                     	;# 
   346  0617                     	;# 
   347  0618                     	;# 
   348  0619                     	;# 
   349  061A                     	;# 
   350  061B                     	;# 
   351  061C                     	;# 
   352  061D                     	;# 
   353  061E                     	;# 
   354  068C                     	;# 
   355  068D                     	;# 
   356  068E                     	;# 
   357  068F                     	;# 
   358  0690                     	;# 
   359  0691                     	;# 
   360  0692                     	;# 
   361  0693                     	;# 
   362  0694                     	;# 
   363  070C                     	;# 
   364  070D                     	;# 
   365  070E                     	;# 
   366  070F                     	;# 
   367  0710                     	;# 
   368  0711                     	;# 
   369  0712                     	;# 
   370  0713                     	;# 
   371  0714                     	;# 
   372  0716                     	;# 
   373  0717                     	;# 
   374  0718                     	;# 
   375  0719                     	;# 
   376  071A                     	;# 
   377  071B                     	;# 
   378  071C                     	;# 
   379  071D                     	;# 
   380  071E                     	;# 
   381  0796                     	;# 
   382  0797                     	;# 
   383  0798                     	;# 
   384  0799                     	;# 
   385  079A                     	;# 
   386  079B                     	;# 
   387  080C                     	;# 
   388  080D                     	;# 
   389  080E                     	;# 
   390  080F                     	;# 
   391  0810                     	;# 
   392  0811                     	;# 
   393  0812                     	;# 
   394  0813                     	;# 
   395  0814                     	;# 
   396  081A                     	;# 
   397  081B                     	;# 
   398  081C                     	;# 
   399  081D                     	;# 
   400  081E                     	;# 
   401  081F                     	;# 
   402  088C                     	;# 
   403  088D                     	;# 
   404  088E                     	;# 
   405  088F                     	;# 
   406  0890                     	;# 
   407  0891                     	;# 
   408  0892                     	;# 
   409  0893                     	;# 
   410  0895                     	;# 
   411  0896                     	;# 
   412  0897                     	;# 
   413  0898                     	;# 
   414  0899                     	;# 
   415  089A                     	;# 
   416  089B                     	;# 
   417  090C                     	;# 
   418  090E                     	;# 
   419  090F                     	;# 
   420  091F                     	;# 
   421  098F                     	;# 
   422  098F                     	;# 
   423  0990                     	;# 
   424  0991                     	;# 
   425  0992                     	;# 
   426  0993                     	;# 
   427  0994                     	;# 
   428  0995                     	;# 
   429  0996                     	;# 
   430  0997                     	;# 
   431  1E0F                     	;# 
   432  1E10                     	;# 
   433  1E11                     	;# 
   434  1E12                     	;# 
   435  1E13                     	;# 
   436  1E14                     	;# 
   437  1E15                     	;# 
   438  1E16                     	;# 
   439  1E17                     	;# 
   440  1E18                     	;# 
   441  1E19                     	;# 
   442  1E1A                     	;# 
   443  1E1B                     	;# 
   444  1E1C                     	;# 
   445  1E1D                     	;# 
   446  1E1E                     	;# 
   447  1E1F                     	;# 
   448  1E20                     	;# 
   449  1E21                     	;# 
   450  1E22                     	;# 
   451  1E23                     	;# 
   452  1E24                     	;# 
   453  1E25                     	;# 
   454  1E26                     	;# 
   455  1E27                     	;# 
   456  1E28                     	;# 
   457  1E29                     	;# 
   458  1E2A                     	;# 
   459  1E2B                     	;# 
   460  1E2C                     	;# 
   461  1E2D                     	;# 
   462  1E2E                     	;# 
   463  1E2F                     	;# 
   464  1E30                     	;# 
   465  1E31                     	;# 
   466  1E32                     	;# 
   467  1E33                     	;# 
   468  1E34                     	;# 
   469  1E35                     	;# 
   470  1E36                     	;# 
   471  1E37                     	;# 
   472  1E8F                     	;# 
   473  1E90                     	;# 
   474  1E91                     	;# 
   475  1E92                     	;# 
   476  1E93                     	;# 
   477  1E94                     	;# 
   478  1E95                     	;# 
   479  1E96                     	;# 
   480  1E97                     	;# 
   481  1E9C                     	;# 
   482  1E9D                     	;# 
   483  1E9E                     	;# 
   484  1EA1                     	;# 
   485  1EA2                     	;# 
   486  1EA3                     	;# 
   487  1EA4                     	;# 
   488  1EA5                     	;# 
   489  1EA9                     	;# 
   490  1EAA                     	;# 
   491  1EAB                     	;# 
   492  1EAC                     	;# 
   493  1EB1                     	;# 
   494  1EB2                     	;# 
   495  1EB3                     	;# 
   496  1EB8                     	;# 
   497  1EB9                     	;# 
   498  1EBA                     	;# 
   499  1EBB                     	;# 
   500  1EBC                     	;# 
   501  1EBD                     	;# 
   502  1EBE                     	;# 
   503  1EC3                     	;# 
   504  1EC5                     	;# 
   505  1EC6                     	;# 
   506  1EC7                     	;# 
   507  1EC8                     	;# 
   508  1EC9                     	;# 
   509  1ECA                     	;# 
   510  1ECB                     	;# 
   511  1ECC                     	;# 
   512  1F10                     	;# 
   513  1F11                     	;# 
   514  1F12                     	;# 
   515  1F13                     	;# 
   516  1F14                     	;# 
   517  1F15                     	;# 
   518  1F16                     	;# 
   519  1F17                     	;# 
   520  1F18                     	;# 
   521  1F19                     	;# 
   522  1F1A                     	;# 
   523  1F1B                     	;# 
   524  1F1C                     	;# 
   525  1F1D                     	;# 
   526  1F1E                     	;# 
   527  1F1F                     	;# 
   528  1F20                     	;# 
   529  1F21                     	;# 
   530  1F22                     	;# 
   531  1F23                     	;# 
   532  1F24                     	;# 
   533  1F25                     	;# 
   534  1F26                     	;# 
   535  1F27                     	;# 
   536  1F28                     	;# 
   537  1F29                     	;# 
   538  1F2A                     	;# 
   539  1F2B                     	;# 
   540  1F2C                     	;# 
   541  1F2D                     	;# 
   542  1F2E                     	;# 
   543  1F2F                     	;# 
   544  1F30                     	;# 
   545  1F31                     	;# 
   546  1F32                     	;# 
   547  1F38                     	;# 
   548  1F39                     	;# 
   549  1F3A                     	;# 
   550  1F3B                     	;# 
   551  1F3C                     	;# 
   552  1F3D                     	;# 
   553  1F3E                     	;# 
   554  1F3F                     	;# 
   555  1F40                     	;# 
   556  1F41                     	;# 
   557  1F43                     	;# 
   558  1F44                     	;# 
   559  1F45                     	;# 
   560  1F46                     	;# 
   561  1F47                     	;# 
   562  1F48                     	;# 
   563  1F49                     	;# 
   564  1F4A                     	;# 
   565  1F4B                     	;# 
   566  1F4C                     	;# 
   567  1F4E                     	;# 
   568  1F4F                     	;# 
   569  1F50                     	;# 
   570  1F51                     	;# 
   571  1F52                     	;# 
   572  1F53                     	;# 
   573  1F54                     	;# 
   574  1F55                     	;# 
   575  1F56                     	;# 
   576  1F57                     	;# 
   577  1F59                     	;# 
   578  1F5A                     	;# 
   579  1F5B                     	;# 
   580  1F5C                     	;# 
   581  1F5D                     	;# 
   582  1F61                     	;# 
   583  1F62                     	;# 
   584  1F64                     	;# 
   585  1F65                     	;# 
   586  1F66                     	;# 
   587  1F67                     	;# 
   588  1F68                     	;# 
   589  1F69                     	;# 
   590  1F6A                     	;# 
   591  1F6B                     	;# 
   592  1F6C                     	;# 
   593  1F6D                     	;# 
   594  1FE4                     	;# 
   595  1FE5                     	;# 
   596  1FE6                     	;# 
   597  1FE7                     	;# 
   598  1FE8                     	;# 
   599  1FE9                     	;# 
   600  1FEA                     	;# 
   601  1FEB                     	;# 
   602  1FED                     	;# 
   603  1FEE                     	;# 
   604  1FEF                     	;# 
   605                           
   606                           	psect	idataBANK0
   607  0538                     __pidataBANK0:	
   608                           
   609                           ;initializer for _calibracion
   610  0538  3403               	retlw	3
   611  0539  3400               	retlw	0
   612                           
   613                           	psect	stringtext1
   614  0500                     __pstringtext1:	
   615  0500                     _dpowers:	
   616  0500  3401               	retlw	1
   617  0501  3400               	retlw	0
   618  0502  340A               	retlw	10
   619  0503  3400               	retlw	0
   620  0504  3464               	retlw	100
   621  0505  3400               	retlw	0
   622  0506  34E8               	retlw	232
   623  0507  3403               	retlw	3
   624  0508  3410               	retlw	16
   625  0509  3427               	retlw	39
   626  050A                     __end_of_dpowers:	
   627  0017                     _LATBbits	set	23
   628  000C                     _PORTAbits	set	12
   629  0016                     _LATAbits	set	22
   630  0012                     _TRISB	set	18
   631  000D                     _PORTB	set	13
   632  0011                     _TRISAbits	set	17
   633  000C                     _PORTA	set	12
   634  000F                     _PORTD	set	15
   635  000E                     _PORTC	set	14
   636  000F                     _PORTDbits	set	15
   637  000E                     _PORTCbits	set	14
   638  0014                     _TRISDbits	set	20
   639  0013                     _TRISCbits	set	19
   640  020C                     _TMR1	set	524
   641  0211                     _T1CLKbits	set	529
   642  020E                     _T1CONbits	set	526
   643  0710                     _PIR4bits	set	1808
   644  0893                     _OSCFRQbits	set	2195
   645  1F43                     _ANSELB	set	8003
   646  1F38                     _ANSELA	set	7992
   647  1F59                     _ANSELD	set	8025
   648  1F4E                     _ANSELC	set	8014
   649  050A                     STR_3:	
   650  050A  3446               	retlw	70	;'F'
   651  050B  3475               	retlw	117	;'u'
   652  050C  3465               	retlw	101	;'e'
   653  050D  3472               	retlw	114	;'r'
   654  050E  3461               	retlw	97	;'a'
   655  050F  3420               	retlw	32	;' '
   656  0510  3464               	retlw	100	;'d'
   657  0511  3465               	retlw	101	;'e'
   658  0512  3420               	retlw	32	;' '
   659  0513  3472               	retlw	114	;'r'
   660  0514  3461               	retlw	97	;'a'
   661  0515  346E               	retlw	110	;'n'
   662  0516  3467               	retlw	103	;'g'
   663  0517  346F               	retlw	111	;'o'
   664  0518  3400               	retlw	0
   665                           
   666                           	psect	stringtext2
   667  0519                     __pstringtext2:	
   668  0519                     STR_1:	
   669  0519  3444               	retlw	68	;'D'
   670  051A  3469               	retlw	105	;'i'
   671  051B  3473               	retlw	115	;'s'
   672  051C  3474               	retlw	116	;'t'
   673  051D  3461               	retlw	97	;'a'
   674  051E  346E               	retlw	110	;'n'
   675  051F  3463               	retlw	99	;'c'
   676  0520  3469               	retlw	105	;'i'
   677  0521  3461               	retlw	97	;'a'
   678  0522  343D               	retlw	61	;'='
   679  0523  3425               	retlw	37	;'%'
   680  0524  3433               	retlw	51	;'3'
   681  0525  3464               	retlw	100	;'d'
   682  0526  3400               	retlw	0
   683                           
   684                           	psect	stringtext3
   685  0535                     __pstringtext3:	
   686  0535                     STR_2:	
   687  0535  3463               	retlw	99	;'c'
   688  0536  346D               	retlw	109	;'m'
   689  0537  3400               	retlw	0
   690                           
   691                           	psect	stringtext4
   692  0000                     __pstringtext4:	
   693                           
   694                           ; #config settings
   695  0000                     
   696                           	psect	cinit
   697  0012                     start_initialization:	
   698  0012                     __initialization:	
   699                           
   700                           ; Initialize objects allocated to BANK0
   701  0012  3185  2538  3180   	fcall	__pidataBANK0	;fetch initializer
   702  0015  00CF               	movwf	__pdataBANK0& (0+127)
   703  0016  3185  2539         	fcall	__pidataBANK0+1	;fetch initializer
   704  0018  00D0               	movwf	(__pdataBANK0+1)& (0+127)
   705                           
   706                           ; Clear objects allocated to BANK0
   707  0019  01C9               	clrf	__pbssBANK0& (0+127)
   708  001A  01CA               	clrf	(__pbssBANK0+1)& (0+127)
   709  001B  01CB               	clrf	(__pbssBANK0+2)& (0+127)
   710  001C  01CC               	clrf	(__pbssBANK0+3)& (0+127)
   711  001D  01CD               	clrf	(__pbssBANK0+4)& (0+127)
   712  001E  01CE               	clrf	(__pbssBANK0+5)& (0+127)
   713  001F                     end_of_initialization:	
   714                           ;End of C runtime variable initialization code
   715                           
   716  001F                     __end_of__initialization:	
   717  001F  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
   718  0020  0140               	movlb	0
   719  0021  3181  2973         	ljmp	_main	;jump to C main() function
   720                           
   721                           	psect	bssBANK0
   722  0049                     __pbssBANK0:	
   723  0049                     _distancia:	
   724  0049                     	ds	2
   725  004B                     _tiempous:	
   726  004B                     	ds	2
   727  004D                     _tiempons:	
   728  004D                     	ds	2
   729                           
   730                           	psect	dataBANK0
   731  004F                     __pdataBANK0:	
   732  004F                     _calibracion:	
   733  004F                     	ds	2
   734                           
   735                           	psect	cstackCOMMON
   736  0070                     __pcstackCOMMON:	
   737  0070                     ?_isdigit:	
   738  0070                     ?_Lcd_Cmd:	
   739                           ; 1 bit 
   740                           
   741  0070                     ?_Lcd_Chr_CP:	
   742                           ; 1 bytes @ 0x0
   743                           
   744  0070                     ?_Lcd_Init:	
   745                           ; 1 bytes @ 0x0
   746                           
   747  0070                     ?_interrupcion:	
   748                           ; 1 bytes @ 0x0
   749                           
   750  0070                     ??_interrupcion:	
   751                           ; 1 bytes @ 0x0
   752                           
   753                           
   754                           ; 1 bytes @ 0x0
   755  0070                     	ds	1
   756  0071                     ??_Lcd_Cmd:	
   757  0071                     ??_Lcd_Chr_CP:	
   758                           ; 1 bytes @ 0x1
   759                           
   760  0071                     ??_isdigit:	
   761                           ; 1 bytes @ 0x1
   762                           
   763  0071                     ?___wmul:	
   764                           ; 1 bytes @ 0x1
   765                           
   766  0071                     ?___lwdiv:	
   767                           ; 2 bytes @ 0x1
   768                           
   769  0071                     _isdigit$726:	
   770                           ; 2 bytes @ 0x1
   771                           
   772  0071                     ___wmul@multiplier:	
   773                           ; 1 bytes @ 0x1
   774                           
   775  0071                     ___lwdiv@divisor:	
   776                           ; 2 bytes @ 0x1
   777                           
   778                           
   779                           ; 2 bytes @ 0x1
   780  0071                     	ds	1
   781  0072                     isdigit@c:	
   782                           
   783                           ; 1 bytes @ 0x2
   784  0072                     	ds	1
   785  0073                     Lcd_Chr_CP@data:	
   786  0073                     Lcd_Cmd@data:	
   787                           ; 1 bytes @ 0x3
   788                           
   789  0073                     ___wmul@multiplicand:	
   790                           ; 1 bytes @ 0x3
   791                           
   792  0073                     ___lwdiv@dividend:	
   793                           ; 2 bytes @ 0x3
   794                           
   795                           
   796                           ; 2 bytes @ 0x3
   797  0073                     	ds	1
   798  0074                     ??_Lcd_Init:	
   799  0074                     ?_Lcd_Out:	
   800                           ; 1 bytes @ 0x4
   801                           
   802  0074                     ?_Lcd_Out2:	
   803                           ; 1 bytes @ 0x4
   804                           
   805  0074                     Lcd_Out@x:	
   806                           ; 1 bytes @ 0x4
   807                           
   808  0074                     Lcd_Out2@x:	
   809                           ; 1 bytes @ 0x4
   810                           
   811                           
   812                           ; 1 bytes @ 0x4
   813  0074                     	ds	1
   814  0075                     ??___wmul:	
   815  0075                     ??___lwdiv:	
   816                           ; 1 bytes @ 0x5
   817                           
   818  0075                     Lcd_Init@data:	
   819                           ; 1 bytes @ 0x5
   820                           
   821  0075                     Lcd_Out2@buffer:	
   822                           ; 1 bytes @ 0x5
   823                           
   824  0075                     Lcd_Out@buffer:	
   825                           ; 1 bytes @ 0x5
   826                           
   827  0075                     ___wmul@product:	
   828                           ; 2 bytes @ 0x5
   829                           
   830                           
   831                           ; 2 bytes @ 0x5
   832  0075                     	ds	1
   833  0076                     ??_Lcd_Out2:	
   834  0076                     ___lwdiv@quotient:	
   835                           ; 1 bytes @ 0x6
   836                           
   837                           
   838                           ; 2 bytes @ 0x6
   839  0076                     	ds	1
   840  0077                     ??_Lcd_Out:	
   841  0077                     Lcd_Out2@y:	
   842                           ; 1 bytes @ 0x7
   843                           
   844                           
   845                           ; 1 bytes @ 0x7
   846  0077                     	ds	1
   847  0078                     Lcd_Out@y:	
   848  0078                     Lcd_Out2@data:	
   849                           ; 1 bytes @ 0x8
   850                           
   851  0078                     ___lwdiv@counter:	
   852                           ; 1 bytes @ 0x8
   853                           
   854                           
   855                           ; 1 bytes @ 0x8
   856  0078                     	ds	1
   857  0079                     ?___lwmod:	
   858  0079                     Lcd_Out@data:	
   859                           ; 2 bytes @ 0x9
   860                           
   861  0079                     ___lwmod@divisor:	
   862                           ; 1 bytes @ 0x9
   863                           
   864                           
   865                           ; 2 bytes @ 0x9
   866  0079                     	ds	2
   867  007B                     ___lwmod@dividend:	
   868                           
   869                           ; 2 bytes @ 0xB
   870  007B                     	ds	2
   871                           
   872                           	psect	cstackBANK0
   873  0020                     __pcstackBANK0:	
   874  0020                     ??___lwmod:	
   875                           
   876                           ; 1 bytes @ 0x0
   877  0020                     	ds	1
   878  0021                     ___lwmod@counter:	
   879                           
   880                           ; 1 bytes @ 0x1
   881  0021                     	ds	1
   882  0022                     ?_sprintf:	
   883  0022                     sprintf@f:	
   884                           ; 2 bytes @ 0x2
   885                           
   886                           
   887                           ; 2 bytes @ 0x2
   888  0022                     	ds	4
   889  0026                     ??_sprintf:	
   890                           
   891                           ; 1 bytes @ 0x6
   892  0026                     	ds	4
   893  002A                     sprintf@ap:	
   894                           
   895                           ; 1 bytes @ 0xA
   896  002A                     	ds	1
   897  002B                     sprintf@prec:	
   898                           
   899                           ; 1 bytes @ 0xB
   900  002B                     	ds	1
   901  002C                     sprintf@flag:	
   902                           
   903                           ; 1 bytes @ 0xC
   904  002C                     	ds	1
   905  002D                     sprintf@val:	
   906                           
   907                           ; 2 bytes @ 0xD
   908  002D                     	ds	2
   909  002F                     sprintf@sp:	
   910                           
   911                           ; 1 bytes @ 0xF
   912  002F                     	ds	1
   913  0030                     sprintf@width:	
   914                           
   915                           ; 2 bytes @ 0x10
   916  0030                     	ds	2
   917  0032                     sprintf@c:	
   918                           
   919                           ; 1 bytes @ 0x12
   920  0032                     	ds	1
   921  0033                     ?_main:	
   922  0033                     main@argc:	
   923                           ; 2 bytes @ 0x13
   924                           
   925                           
   926                           ; 2 bytes @ 0x13
   927  0033                     	ds	2
   928  0035                     main@argv:	
   929                           
   930                           ; 2 bytes @ 0x15
   931  0035                     	ds	2
   932  0037                     ??_main:	
   933                           
   934                           ; 1 bytes @ 0x17
   935  0037                     	ds	2
   936  0039                     main@buffer1:	
   937                           
   938                           ; 16 bytes @ 0x19
   939  0039                     	ds	16
   940                           
   941                           	psect	maintext
   942  0173                     __pmaintext:	
   943 ;;
   944 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   945 ;;
   946 ;; *************** function _main *****************
   947 ;; Defined at:
   948 ;;		line 27 in file "main.c"
   949 ;; Parameters:    Size  Location     Type
   950 ;;  argc            2   19[BANK0 ] int 
   951 ;;  argv            2   21[BANK0 ] PTR PTR unsigned char 
   952 ;; Auto vars:     Size  Location     Type
   953 ;;  buffer1        16   25[BANK0 ] unsigned char [16]
   954 ;; Return value:  Size  Location     Type
   955 ;;                  2   19[BANK0 ] int 
   956 ;; Registers used:
   957 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
   958 ;; Tracked objects:
   959 ;;		On entry : B3F/0
   960 ;;		On exit  : 0/0
   961 ;;		Unchanged: 0/0
   962 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
   963 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
   964 ;;      Locals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
   965 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
   966 ;;      Totals:         0      22       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
   967 ;;Total ram usage:       22 bytes
   968 ;; Hardware stack levels required when called:    3
   969 ;; This function calls:
   970 ;;		_Lcd_Cmd
   971 ;;		_Lcd_Init
   972 ;;		_Lcd_Out
   973 ;;		_Lcd_Out2
   974 ;;		___lwdiv
   975 ;;		_sprintf
   976 ;; This function is called by:
   977 ;;		Startup code after reset
   978 ;; This function uses a non-reentrant model
   979 ;;
   980                           
   981                           
   982                           ;psect for function _main
   983  0173                     _main:	
   984                           
   985                           ;main.c: 28: OSCFRQbits.HFFRQ=0b110;
   986                           
   987                           ;incstack = 0
   988                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
   989  0173  0151               	movlb	17	; select bank17
   990  0174  0813               	movf	19,w	;volatile
   991  0175  39F8               	andlw	-8
   992  0176  3806               	iorlw	6
   993  0177  0093               	movwf	19	;volatile
   994                           
   995                           ;main.c: 30: PORTC=0;
   996  0178  0140               	movlb	0	; select bank0
   997  0179  018E               	clrf	14	;volatile
   998                           
   999                           ;main.c: 31: PORTD=0;
  1000  017A  018F               	clrf	15	;volatile
  1001                           
  1002                           ;main.c: 32: ANSELC=0b00000000;
  1003  017B  017E               	movlb	62	; select bank62
  1004  017C  01CE               	clrf	78	;volatile
  1005                           
  1006                           ;main.c: 33: ANSELD=0b00000000;
  1007  017D  01D9               	clrf	89	;volatile
  1008                           
  1009                           ;main.c: 35: PORTA=0;
  1010  017E  0140               	movlb	0	; select bank0
  1011  017F  018C               	clrf	12	;volatile
  1012                           
  1013                           ;main.c: 36: ANSELA=0;
  1014  0180  017E               	movlb	62	; select bank62
  1015  0181  01B8               	clrf	56	;volatile
  1016                           
  1017                           ;main.c: 37: TRISAbits.TRISA0=0;
  1018  0182  0140               	movlb	0	; select bank0
  1019  0183  1011               	bcf	17,0	;volatile
  1020                           
  1021                           ;main.c: 38: TRISAbits.TRISA1=1;
  1022  0184  1491               	bsf	17,1	;volatile
  1023                           
  1024                           ;main.c: 40: PORTB=0;
  1025  0185  018D               	clrf	13	;volatile
  1026                           
  1027                           ;main.c: 41: ANSELB=0;
  1028  0186  017E               	movlb	62	; select bank62
  1029  0187  01C3               	clrf	67	;volatile
  1030                           
  1031                           ;main.c: 42: TRISB=0;
  1032  0188  0140               	movlb	0	; select bank0
  1033  0189  0192               	clrf	18	;volatile
  1034                           
  1035                           ;main.c: 51: T1CONbits.CKPS=0b10;
  1036  018A  0144               	movlb	4	; select bank4
  1037  018B  080E               	movf	14,w	;volatile
  1038  018C  39CF               	andlw	-49
  1039  018D  3820               	iorlw	32
  1040  018E  008E               	movwf	14	;volatile
  1041                           
  1042                           ;main.c: 52: T1CLKbits.CS=0b0001;
  1043  018F  0811               	movf	17,w	;volatile
  1044  0190  39F0               	andlw	-16
  1045  0191  3801               	iorlw	1
  1046  0192  0091               	movwf	17	;volatile
  1047                           
  1048                           ;main.c: 53: T1CONbits.nSYNC=1;
  1049  0193  150E               	bsf	14,2	;volatile
  1050                           
  1051                           ;main.c: 58: unsigned char buffer1[16];
  1052                           ;main.c: 59: Lcd_Init();
  1053  0194  3182  2245  3181   	fcall	_Lcd_Init
  1054                           
  1055                           ;main.c: 60: Lcd_Cmd(1);
  1056  0197  3001               	movlw	1
  1057  0198  3183  2385  3181   	fcall	_Lcd_Cmd
  1058                           
  1059                           ;main.c: 61: Lcd_Cmd(12);
  1060  019B  300C               	movlw	12
  1061  019C  3183  2385  3181   	fcall	_Lcd_Cmd
  1062                           
  1063                           ;main.c: 62: _delay((unsigned long)((100)*(32000000/4000.0)));
  1064  019F  3005               	movlw	5
  1065  01A0  0140               	movlb	0	; select bank0
  1066  01A1  00B8               	movwf	??_main+1
  1067  01A2  300F               	movlw	15
  1068  01A3  00B7               	movwf	??_main
  1069  01A4  30F1               	movlw	241
  1070  01A5                     u1097:	
  1071  01A5  0B89               	decfsz	9,f
  1072  01A6  29A5               	goto	u1097
  1073  01A7  0BB7               	decfsz	??_main,f
  1074  01A8  29A5               	goto	u1097
  1075  01A9  0BB8               	decfsz	??_main+1,f
  1076  01AA  29A5               	goto	u1097
  1077  01AB                     l1336:	
  1078                           ;main.c: 64: while(1){
  1079                           
  1080                           
  1081                           ;main.c: 67: TMR1=0;
  1082  01AB  0144               	movlb	4	; select bank4
  1083  01AC  018C               	clrf	12	;volatile
  1084  01AD  018D               	clrf	13	;volatile
  1085                           
  1086                           ;main.c: 68: LATAbits.LATA0=1;
  1087  01AE  0140               	movlb	0	; select bank0
  1088  01AF  1416               	bsf	22,0	;volatile
  1089                           
  1090                           ;main.c: 69: _delay((unsigned long)((10)*(32000000/4000000.0)));
  1091  01B0  301A               	movlw	26
  1092  01B1                     u1107:	
  1093  01B1  0B89               	decfsz	9,f
  1094  01B2  29B1               	goto	u1107
  1095  01B3  3200               	nop2
  1096                           
  1097                           ;main.c: 70: LATAbits.LATA0=0;
  1098  01B4  0140               	movlb	0	; select bank0
  1099  01B5  1016               	bcf	22,0	;volatile
  1100  01B6                     l108:	
  1101                           ;main.c: 71: while(PORTAbits.RA1==0);
  1102                           
  1103  01B6  1C8C               	btfss	12,1	;volatile
  1104  01B7  29B6               	goto	l108
  1105                           
  1106                           ;main.c: 72: T1CONbits.ON=1;
  1107  01B8  0144               	movlb	4	; select bank4
  1108  01B9  140E               	bsf	14,0	;volatile
  1109  01BA                     l111:	
  1110                           ;main.c: 73: while(PORTAbits.RA1);
  1111                           
  1112  01BA  0140               	movlb	0	; select bank0
  1113  01BB  188C               	btfsc	12,1	;volatile
  1114  01BC  29BA               	goto	l111
  1115                           
  1116                           ;main.c: 74: T1CONbits.ON=0;
  1117  01BD  0144               	movlb	4	; select bank4
  1118  01BE  100E               	bcf	14,0	;volatile
  1119                           
  1120                           ;main.c: 78: distancia=((TMR1)/100)-calibracion;
  1121  01BF  0140               	movlb	0	; select bank0
  1122  01C0  094F               	comf	_calibracion,w
  1123  01C1  00B7               	movwf	??_main
  1124  01C2  0950               	comf	_calibracion+1,w
  1125  01C3  00B8               	movwf	??_main+1
  1126  01C4  0AB7               	incf	??_main,f
  1127  01C5  1903               	skipnz
  1128  01C6  0AB8               	incf	??_main+1,f
  1129  01C7  3064               	movlw	100
  1130  01C8  00F1               	movwf	___lwdiv@divisor
  1131  01C9  3000               	movlw	0
  1132  01CA  00F2               	movwf	___lwdiv@divisor+1
  1133  01CB  0144               	movlb	4	; select bank4
  1134  01CC  080D               	movf	13,w	;volatile
  1135  01CD  00F4               	movwf	___lwdiv@dividend+1
  1136  01CE  080C               	movf	12,w	;volatile
  1137  01CF  00F3               	movwf	___lwdiv@dividend
  1138  01D0  3184  2484  3181   	fcall	___lwdiv
  1139  01D3  0140               	movlb	0	; select bank0
  1140  01D4  0837               	movf	??_main,w
  1141  01D5  0771               	addwf	?___lwdiv,w
  1142  01D6  00C9               	movwf	_distancia
  1143  01D7  0838               	movf	??_main+1,w
  1144  01D8  3D72               	addwfc	?___lwdiv+1,w
  1145  01D9  00CA               	movwf	_distancia+1
  1146                           
  1147                           ;main.c: 80: if(distancia>3 && distancia<400){
  1148  01DA  084A               	movf	_distancia+1,w
  1149  01DB  3A80               	xorlw	128
  1150  01DC  00B7               	movwf	??_main
  1151  01DD  3080               	movlw	128
  1152  01DE  0237               	subwf	??_main,w
  1153  01DF  1D03               	skipz
  1154  01E0  29E3               	goto	u1075
  1155  01E1  3004               	movlw	4
  1156  01E2  0249               	subwf	_distancia,w
  1157  01E3                     u1075:	
  1158  01E3  1C03               	skipc
  1159  01E4  2A18               	goto	l114
  1160  01E5  0140               	movlb	0	; select bank0
  1161  01E6  084A               	movf	_distancia+1,w
  1162  01E7  3A80               	xorlw	128
  1163  01E8  00B7               	movwf	??_main
  1164  01E9  3081               	movlw	129
  1165  01EA  0237               	subwf	??_main,w
  1166  01EB  1D03               	skipz
  1167  01EC  29EF               	goto	u1085
  1168  01ED  3090               	movlw	144
  1169  01EE  0249               	subwf	_distancia,w
  1170  01EF                     u1085:	
  1171  01EF  1803               	skipnc
  1172  01F0  2A18               	goto	l114
  1173                           
  1174                           ;main.c: 81: LATBbits.LATB7=1;
  1175  01F1  0140               	movlb	0	; select bank0
  1176  01F2  1797               	bsf	23,7	;volatile
  1177                           
  1178                           ;main.c: 82: LATBbits.LATB6=0;
  1179  01F3  1317               	bcf	23,6	;volatile
  1180                           
  1181                           ;main.c: 83: sprintf(buffer1,"Distancia=%3d",distancia);
  1182  01F4  3019               	movlw	low (STR_1| (0+32768))
  1183  01F5  00A2               	movwf	sprintf@f
  1184  01F6  3085               	movlw	high (STR_1| (0+32768))
  1185  01F7  00A3               	movwf	sprintf@f+1
  1186  01F8  084A               	movf	_distancia+1,w
  1187  01F9  00A5               	movwf	?_sprintf+3
  1188  01FA  0849               	movf	_distancia,w
  1189  01FB  00A4               	movwf	?_sprintf+2
  1190  01FC  3039               	movlw	(low (main@buffer1| 0))& (0+255)
  1191  01FD  3180  2023  3181   	fcall	_sprintf
  1192                           
  1193                           ;main.c: 84: Lcd_Out2(1,0,buffer1);
  1194  0200  01F4               	clrf	Lcd_Out2@x
  1195  0201  3039               	movlw	(low (main@buffer1| 0))& (0+255)
  1196  0202  0140               	movlb	0	; select bank0
  1197  0203  00B7               	movwf	??_main
  1198  0204  0837               	movf	??_main,w
  1199  0205  00F5               	movwf	Lcd_Out2@buffer
  1200  0206  3001               	movlw	1
  1201  0207  3184  244F  3181   	fcall	_Lcd_Out2
  1202                           
  1203                           ;main.c: 85: Lcd_Out(1,14,"cm");
  1204  020A  300E               	movlw	14
  1205  020B  0140               	movlb	0	; select bank0
  1206  020C  00B7               	movwf	??_main
  1207  020D  0837               	movf	??_main,w
  1208  020E  00F4               	movwf	Lcd_Out@x
  1209  020F  3035               	movlw	low (STR_2| (0+32768))
  1210  0210  00F5               	movwf	Lcd_Out@buffer
  1211  0211  3085               	movlw	high (STR_2| (0+32768))
  1212  0212  00F6               	movwf	Lcd_Out@buffer+1
  1213  0213  3001               	movlw	1
  1214  0214  3184  2418  3181   	fcall	_Lcd_Out
  1215                           
  1216                           ;main.c: 86: }else{
  1217  0217  2A38               	goto	l1364
  1218  0218                     l114:	
  1219                           
  1220                           ;main.c: 87: LATBbits.LATB7=0;
  1221  0218  0140               	movlb	0	; select bank0
  1222  0219  1397               	bcf	23,7	;volatile
  1223                           
  1224                           ;main.c: 88: LATBbits.LATB6=1;
  1225  021A  1717               	bsf	23,6	;volatile
  1226                           
  1227                           ;main.c: 89: Lcd_Cmd(1);
  1228  021B  3001               	movlw	1
  1229  021C  3183  2385  3181   	fcall	_Lcd_Cmd
  1230                           
  1231                           ;main.c: 90: Lcd_Out(1,0,"Fuera de rango");
  1232  021F  01F4               	clrf	Lcd_Out@x
  1233  0220  300A               	movlw	low (STR_3| (0+32768))
  1234  0221  00F5               	movwf	Lcd_Out@buffer
  1235  0222  3085               	movlw	high (STR_3| (0+32768))
  1236  0223  00F6               	movwf	Lcd_Out@buffer+1
  1237  0224  3001               	movlw	1
  1238  0225  3184  2418  3181   	fcall	_Lcd_Out
  1239                           
  1240                           ;main.c: 91: _delay((unsigned long)((1000)*(32000000/4000.0)));
  1241  0228  3029               	movlw	41
  1242  0229  0140               	movlb	0	; select bank0
  1243  022A  00B8               	movwf	??_main+1
  1244  022B  3096               	movlw	150
  1245  022C  00B7               	movwf	??_main
  1246  022D  307F               	movlw	127
  1247  022E                     u1117:	
  1248  022E  0B89               	decfsz	9,f
  1249  022F  2A2E               	goto	u1117
  1250  0230  0BB7               	decfsz	??_main,f
  1251  0231  2A2E               	goto	u1117
  1252  0232  0BB8               	decfsz	??_main+1,f
  1253  0233  2A2E               	goto	u1117
  1254                           
  1255                           ;main.c: 92: Lcd_Cmd(1);
  1256  0234  3001               	movlw	1
  1257  0235  3183  2385  3181   	fcall	_Lcd_Cmd
  1258  0238                     l1364:	
  1259                           
  1260                           ;main.c: 93: }
  1261                           ;main.c: 94: _delay((unsigned long)((1000)*(32000000/4000.0)));
  1262  0238  3029               	movlw	41
  1263  0239  0140               	movlb	0	; select bank0
  1264  023A  00B8               	movwf	??_main+1
  1265  023B  3096               	movlw	150
  1266  023C  00B7               	movwf	??_main
  1267  023D  307F               	movlw	127
  1268  023E                     u1127:	
  1269  023E  0B89               	decfsz	9,f
  1270  023F  2A3E               	goto	u1127
  1271  0240  0BB7               	decfsz	??_main,f
  1272  0241  2A3E               	goto	u1127
  1273  0242  0BB8               	decfsz	??_main+1,f
  1274  0243  2A3E               	goto	u1127
  1275  0244  29AB               	goto	l1336
  1276  0245                     __end_of_main:	
  1277                           ;main.c: 95: }
  1278                           ;main.c: 96: return (0);
  1279                           ;	Return value of _main is never used
  1280                           
  1281                           
  1282                           	psect	text1
  1283  0023                     __ptext1:	
  1284 ;; *************** function _sprintf *****************
  1285 ;; Defined at:
  1286 ;;		line 492 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\doprnt.c"
  1287 ;; Parameters:    Size  Location     Type
  1288 ;;  sp              1    wreg     PTR unsigned char 
  1289 ;;		 -> main@buffer1(16), 
  1290 ;;  f               2    2[BANK0 ] PTR const unsigned char 
  1291 ;;		 -> STR_1(14), 
  1292 ;; Auto vars:     Size  Location     Type
  1293 ;;  sp              1   15[BANK0 ] PTR unsigned char 
  1294 ;;		 -> main@buffer1(16), 
  1295 ;;  tmpval          4    0        struct .
  1296 ;;  width           2   16[BANK0 ] int 
  1297 ;;  val             2   13[BANK0 ] unsigned int 
  1298 ;;  cp              2    0        PTR const unsigned char 
  1299 ;;  len             2    0        unsigned int 
  1300 ;;  c               1   18[BANK0 ] char 
  1301 ;;  flag            1   12[BANK0 ] unsigned char 
  1302 ;;  prec            1   11[BANK0 ] char 
  1303 ;;  ap              1   10[BANK0 ] PTR void [1]
  1304 ;;		 -> ?_sprintf(2), 
  1305 ;; Return value:  Size  Location     Type
  1306 ;;                  2    2[BANK0 ] int 
  1307 ;; Registers used:
  1308 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  1309 ;; Tracked objects:
  1310 ;;		On entry : 0/0
  1311 ;;		On exit  : 0/0
  1312 ;;		Unchanged: 0/0
  1313 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
  1314 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  1315 ;;      Locals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  1316 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  1317 ;;      Totals:         0      17       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  1318 ;;Total ram usage:       17 bytes
  1319 ;; Hardware stack levels used:    1
  1320 ;; Hardware stack levels required when called:    2
  1321 ;; This function calls:
  1322 ;;		___lwdiv
  1323 ;;		___lwmod
  1324 ;;		___wmul
  1325 ;;		_isdigit
  1326 ;; This function is called by:
  1327 ;;		_main
  1328 ;; This function uses a non-reentrant model
  1329 ;;
  1330                           
  1331                           
  1332                           ;psect for function _sprintf
  1333  0023                     _sprintf:	
  1334                           
  1335                           ;incstack = 0
  1336                           ; Regs used in _sprintf: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  1337                           ;sprintf@sp stored from wreg
  1338  0023  0140               	movlb	0	; select bank0
  1339  0024  00AF               	movwf	sprintf@sp
  1340                           
  1341                           ;doprnt.c: 494: va_list ap;
  1342                           ;doprnt.c: 499: signed char c;
  1343                           ;doprnt.c: 501: int width;
  1344                           ;doprnt.c: 506: signed char prec;
  1345                           ;doprnt.c: 508: unsigned char flag;
  1346                           ;doprnt.c: 523: union {
  1347                           ;doprnt.c: 524: unsigned long vd;
  1348                           ;doprnt.c: 525: double integ;
  1349                           ;doprnt.c: 526: } tmpval;
  1350                           ;doprnt.c: 528: unsigned int val;
  1351                           ;doprnt.c: 529: unsigned len;
  1352                           ;doprnt.c: 530: const char * cp;
  1353                           ;doprnt.c: 533: *ap = __va_start();
  1354  0025  3024               	movlw	(low ((?_sprintf| 0+2)))& (0+255)
  1355  0026  00A6               	movwf	??_sprintf
  1356  0027  0826               	movf	??_sprintf,w
  1357  0028  00AA               	movwf	sprintf@ap
  1358  0029                     l1292:	
  1359                           ;doprnt.c: 536: while(c = *f++) {
  1360                           
  1361  0029  0140               	movlb	0	; select bank0
  1362  002A  0823               	movf	sprintf@f+1,w
  1363  002B  00A7               	movwf	??_sprintf+1
  1364  002C  0822               	movf	sprintf@f,w
  1365  002D  00A6               	movwf	??_sprintf
  1366  002E  0AA2               	incf	sprintf@f,f
  1367  002F  1903               	skipnz
  1368  0030  0AA3               	incf	sprintf@f+1,f
  1369  0031  0826               	movf	??_sprintf,w
  1370  0032  0084               	movwf	4
  1371  0033  0827               	movf	??_sprintf+1,w
  1372  0034  0085               	movwf	5
  1373  0035  0800               	movf	0,w	;code access
  1374  0036  00A8               	movwf	??_sprintf+2
  1375  0037  0828               	movf	??_sprintf+2,w
  1376  0038  00B2               	movwf	sprintf@c
  1377  0039  0832               	movf	sprintf@c,w
  1378  003A  1903               	btfsc	3,2
  1379  003B  296D               	goto	l1294
  1380                           
  1381                           ;doprnt.c: 538: if(c != '%')
  1382  003C  3025               	movlw	37
  1383  003D  0632               	xorwf	sprintf@c,w
  1384  003E  1903               	btfsc	3,2
  1385  003F  284C               	goto	l1218
  1386                           
  1387                           ;doprnt.c: 540: {
  1388                           ;doprnt.c: 541: ((*sp++ = (c)));
  1389  0040  0832               	movf	sprintf@c,w
  1390  0041  00A6               	movwf	??_sprintf
  1391  0042  082F               	movf	sprintf@sp,w
  1392  0043  0086               	movwf	6
  1393  0044  0187               	clrf	7
  1394  0045  0826               	movf	??_sprintf,w
  1395  0046  0081               	movwf	1
  1396  0047  3001               	movlw	1
  1397  0048  00A6               	movwf	??_sprintf
  1398  0049  0826               	movf	??_sprintf,w
  1399  004A  07AF               	addwf	sprintf@sp,f
  1400                           
  1401                           ;doprnt.c: 542: continue;
  1402  004B  2829               	goto	l1292
  1403  004C                     l1218:	
  1404                           
  1405                           ;doprnt.c: 543: }
  1406                           ;doprnt.c: 546: width = 0;
  1407  004C  01B0               	clrf	sprintf@width
  1408  004D  01B1               	clrf	sprintf@width+1
  1409                           
  1410                           ;doprnt.c: 548: flag = 0;
  1411  004E  01AC               	clrf	sprintf@flag
  1412                           
  1413                           ;doprnt.c: 597: if(isdigit((unsigned)*f)) {
  1414  004F  0822               	movf	sprintf@f,w
  1415  0050  0084               	movwf	4
  1416  0051  0823               	movf	sprintf@f+1,w
  1417  0052  0085               	movwf	5
  1418  0053  0800               	movf	0,w	;code access
  1419  0054  3185  2527  3180   	fcall	_isdigit
  1420  0057  1C03               	btfss	3,0
  1421  0058  288A               	goto	l1234
  1422                           
  1423                           ;doprnt.c: 598: width = 0;
  1424  0059  0140               	movlb	0	; select bank0
  1425  005A  01B0               	clrf	sprintf@width
  1426  005B  01B1               	clrf	sprintf@width+1
  1427  005C                     l1224:	
  1428                           ;doprnt.c: 599: do {
  1429                           
  1430                           
  1431                           ;doprnt.c: 600: width *= 10;
  1432  005C  300A               	movlw	10
  1433  005D  00F1               	movwf	___wmul@multiplier
  1434  005E  3000               	movlw	0
  1435  005F  00F2               	movwf	___wmul@multiplier+1
  1436  0060  0140               	movlb	0	; select bank0
  1437  0061  0831               	movf	sprintf@width+1,w
  1438  0062  00F4               	movwf	___wmul@multiplicand+1
  1439  0063  0830               	movf	sprintf@width,w
  1440  0064  00F3               	movwf	___wmul@multiplicand
  1441  0065  3184  24E5  3180   	fcall	___wmul
  1442  0068  0872               	movf	?___wmul+1,w
  1443  0069  0140               	movlb	0	; select bank0
  1444  006A  00B1               	movwf	sprintf@width+1
  1445  006B  0871               	movf	?___wmul,w
  1446  006C  00B0               	movwf	sprintf@width
  1447                           
  1448                           ;doprnt.c: 601: width += *f++ - '0';
  1449  006D  0822               	movf	sprintf@f,w
  1450  006E  0084               	movwf	4
  1451  006F  0823               	movf	sprintf@f+1,w
  1452  0070  0085               	movwf	5
  1453  0071  0800               	movf	0,w	;code access
  1454  0072  3ED0               	addlw	208
  1455  0073  00A6               	movwf	??_sprintf
  1456  0074  30FF               	movlw	255
  1457  0075  1803               	skipnc
  1458  0076  3000               	movlw	0
  1459  0077  00A7               	movwf	??_sprintf+1
  1460  0078  0826               	movf	??_sprintf,w
  1461  0079  07B0               	addwf	sprintf@width,f
  1462  007A  0827               	movf	??_sprintf+1,w
  1463  007B  3DB1               	addwfc	sprintf@width+1,f
  1464  007C  3001               	movlw	1
  1465  007D  07A2               	addwf	sprintf@f,f
  1466  007E  3000               	movlw	0
  1467  007F  3DA3               	addwfc	sprintf@f+1,f
  1468                           
  1469                           ;doprnt.c: 602: } while(isdigit((unsigned)*f));
  1470  0080  0822               	movf	sprintf@f,w
  1471  0081  0084               	movwf	4
  1472  0082  0823               	movf	sprintf@f+1,w
  1473  0083  0085               	movwf	5
  1474  0084  0800               	movf	0,w	;code access
  1475  0085  3185  2527  3180   	fcall	_isdigit
  1476  0088  1803               	btfsc	3,0
  1477  0089  285C               	goto	l1224
  1478  008A                     l1234:	
  1479                           ;doprnt.c: 822: }
  1480                           
  1481                           ;doprnt.c: 813: continue;
  1482                           
  1483                           ;doprnt.c: 802: default:
  1484                           
  1485                           ;doprnt.c: 698: case 'i':
  1486                           ;doprnt.c: 699: break;
  1487                           
  1488                           ;doprnt.c: 697: case 'd':
  1489                           
  1490                           ;doprnt.c: 638: goto alldone;
  1491                           
  1492                           ;doprnt.c: 637: case 0:
  1493                           
  1494                           ;doprnt.c: 608: }
  1495                           ;doprnt.c: 635: switch(c = *f++) {
  1496                           
  1497  008A  0140               	movlb	0	; select bank0
  1498  008B  0823               	movf	sprintf@f+1,w
  1499  008C  00A7               	movwf	??_sprintf+1
  1500  008D  0822               	movf	sprintf@f,w
  1501  008E  00A6               	movwf	??_sprintf
  1502  008F  0AA2               	incf	sprintf@f,f
  1503  0090  1903               	skipnz
  1504  0091  0AA3               	incf	sprintf@f+1,f
  1505  0092  0826               	movf	??_sprintf,w
  1506  0093  0084               	movwf	4
  1507  0094  0827               	movf	??_sprintf+1,w
  1508  0095  0085               	movwf	5
  1509  0096  0800               	movf	0,w	;code access
  1510  0097  00B2               	movwf	sprintf@c
  1511                           
  1512                           ; Switch size 1, requested type "space"
  1513                           ; Number of cases is 3, Range of values is 0 to 105
  1514                           ; switch strategies available:
  1515                           ; Name         Instructions Cycles
  1516                           ; simple_byte           10     6 (average)
  1517                           ; direct_byte          218     6 (fixed)
  1518                           ; jumptable            260     6 (fixed)
  1519                           ;	Chosen strategy is simple_byte
  1520  0098  3A00               	xorlw	0	; case 0
  1521  0099  1903               	skipnz
  1522  009A  296D               	goto	l1294
  1523  009B  3A64               	xorlw	100	; case 100
  1524  009C  1903               	skipnz
  1525  009D  28A2               	goto	l1236
  1526  009E  3A0D               	xorlw	13	; case 105
  1527  009F  1903               	skipnz
  1528  00A0  28A2               	goto	l1236
  1529  00A1  2829               	goto	l1292
  1530  00A2                     l1236:	
  1531                           
  1532                           ;doprnt.c: 1253: {
  1533                           ;doprnt.c: 1259: val = (int)(*(int *)__va_arg((*(int **)ap), (int)0));
  1534  00A2  0140               	movlb	0	; select bank0
  1535  00A3  082A               	movf	sprintf@ap,w
  1536  00A4  0086               	movwf	6
  1537  00A5  0187               	clrf	7
  1538  00A6  3F40               	moviw [0]fsr1
  1539  00A7  00AD               	movwf	sprintf@val
  1540  00A8  3F41               	moviw [1]fsr1
  1541  00A9  00AE               	movwf	sprintf@val+1
  1542  00AA  3002               	movlw	2
  1543  00AB  00A6               	movwf	??_sprintf
  1544  00AC  0826               	movf	??_sprintf,w
  1545  00AD  07AA               	addwf	sprintf@ap,f
  1546                           
  1547                           ;doprnt.c: 1261: if((int)val < 0) {
  1548  00AE  1FAE               	btfss	sprintf@val+1,7
  1549  00AF  28B9               	goto	l1246
  1550                           
  1551                           ;doprnt.c: 1262: flag |= 0x03;
  1552  00B0  3003               	movlw	3
  1553  00B1  00A6               	movwf	??_sprintf
  1554  00B2  0826               	movf	??_sprintf,w
  1555  00B3  04AC               	iorwf	sprintf@flag,f
  1556                           
  1557                           ;doprnt.c: 1263: val = -val;
  1558  00B4  09AD               	comf	sprintf@val,f
  1559  00B5  09AE               	comf	sprintf@val+1,f
  1560  00B6  0AAD               	incf	sprintf@val,f
  1561  00B7  1903               	skipnz
  1562  00B8  0AAE               	incf	sprintf@val+1,f
  1563  00B9                     l1246:	
  1564                           
  1565                           ;doprnt.c: 1264: }
  1566                           ;doprnt.c: 1266: }
  1567                           ;doprnt.c: 1305: for(c = 1 ; c != sizeof dpowers/sizeof dpowers[0] ; c++)
  1568  00B9  01B2               	clrf	sprintf@c
  1569  00BA  0AB2               	incf	sprintf@c,f
  1570  00BB  3005               	movlw	5
  1571  00BC  0632               	xorwf	sprintf@c,w
  1572  00BD  1903               	btfsc	3,2
  1573  00BE  28DE               	goto	l1258
  1574  00BF                     l1252:	
  1575                           
  1576                           ;doprnt.c: 1306: if(val < dpowers[c])
  1577  00BF  0832               	movf	sprintf@c,w
  1578  00C0  00A6               	movwf	??_sprintf
  1579  00C1  01A7               	clrf	??_sprintf+1
  1580  00C2  35A6               	lslf	??_sprintf,f
  1581  00C3  0DA7               	rlf	??_sprintf+1,f
  1582  00C4  3000               	movlw	low (_dpowers| (0+32768))
  1583  00C5  0726               	addwf	??_sprintf,w
  1584  00C6  0084               	movwf	4
  1585  00C7  3085               	movlw	high (_dpowers| (0+32768))
  1586  00C8  3D27               	addwfc	??_sprintf+1,w
  1587  00C9  0085               	movwf	5
  1588  00CA  3F00               	moviw [0]fsr0
  1589  00CB  00A8               	movwf	??_sprintf+2
  1590  00CC  3F01               	moviw [1]fsr0
  1591  00CD  00A9               	movwf	??_sprintf+3
  1592  00CE  0829               	movf	??_sprintf+3,w
  1593  00CF  022E               	subwf	sprintf@val+1,w
  1594  00D0  1D03               	skipz
  1595  00D1  28D4               	goto	u955
  1596  00D2  0828               	movf	??_sprintf+2,w
  1597  00D3  022D               	subwf	sprintf@val,w
  1598  00D4                     u955:	
  1599  00D4  1C03               	btfss	3,0
  1600  00D5  28DE               	goto	l1258
  1601                           
  1602                           ;doprnt.c: 1307: break;
  1603  00D6  3001               	movlw	1
  1604  00D7  00A6               	movwf	??_sprintf
  1605  00D8  0826               	movf	??_sprintf,w
  1606  00D9  07B2               	addwf	sprintf@c,f
  1607  00DA  3005               	movlw	5
  1608  00DB  0632               	xorwf	sprintf@c,w
  1609  00DC  1D03               	btfss	3,2
  1610  00DD  28BF               	goto	l1252
  1611  00DE                     l1258:	
  1612                           
  1613                           ;doprnt.c: 1345: if(width && flag & 0x03)
  1614  00DE  0830               	movf	sprintf@width,w
  1615  00DF  0431               	iorwf	sprintf@width+1,w
  1616  00E0  1903               	btfsc	3,2
  1617  00E1  28EA               	goto	l146
  1618  00E2  082C               	movf	sprintf@flag,w
  1619  00E3  3903               	andlw	3
  1620  00E4  1903               	btfsc	3,2
  1621  00E5  28EA               	goto	l146
  1622                           
  1623                           ;doprnt.c: 1346: width--;
  1624  00E6  30FF               	movlw	255
  1625  00E7  07B0               	addwf	sprintf@width,f
  1626  00E8  30FF               	movlw	255
  1627  00E9  3DB1               	addwfc	sprintf@width+1,f
  1628  00EA                     l146:	
  1629                           
  1630                           ;doprnt.c: 1381: if(width > c)
  1631  00EA  0832               	movf	sprintf@c,w
  1632  00EB  00A6               	movwf	??_sprintf
  1633  00EC  01A7               	clrf	??_sprintf+1
  1634  00ED  1BA6               	btfsc	??_sprintf,7
  1635  00EE  03A7               	decf	??_sprintf+1,f
  1636  00EF  0827               	movf	??_sprintf+1,w
  1637  00F0  3A80               	xorlw	128
  1638  00F1  00A8               	movwf	??_sprintf+2
  1639  00F2  0831               	movf	sprintf@width+1,w
  1640  00F3  3A80               	xorlw	128
  1641  00F4  0228               	subwf	??_sprintf+2,w
  1642  00F5  1D03               	skipz
  1643  00F6  28F9               	goto	u995
  1644  00F7  0830               	movf	sprintf@width,w
  1645  00F8  0226               	subwf	??_sprintf,w
  1646  00F9                     u995:	
  1647  00F9  1803               	skipnc
  1648  00FA  2906               	goto	l1266
  1649                           
  1650                           ;doprnt.c: 1382: width -= c;
  1651  00FB  0140               	movlb	0	; select bank0
  1652  00FC  0832               	movf	sprintf@c,w
  1653  00FD  00A6               	movwf	??_sprintf
  1654  00FE  01A7               	clrf	??_sprintf+1
  1655  00FF  1BA6               	btfsc	??_sprintf,7
  1656  0100  03A7               	decf	??_sprintf+1,f
  1657  0101  0826               	movf	??_sprintf,w
  1658  0102  02B0               	subwf	sprintf@width,f
  1659  0103  0827               	movf	??_sprintf+1,w
  1660  0104  3BB1               	subwfb	sprintf@width+1,f
  1661  0105  2909               	goto	l1268
  1662  0106                     l1266:	
  1663                           
  1664                           ;doprnt.c: 1383: else
  1665                           ;doprnt.c: 1384: width = 0;
  1666  0106  0140               	movlb	0	; select bank0
  1667  0107  01B0               	clrf	sprintf@width
  1668  0108  01B1               	clrf	sprintf@width+1
  1669  0109                     l1268:	
  1670                           
  1671                           ;doprnt.c: 1422: {
  1672                           ;doprnt.c: 1424: if(width
  1673                           ;doprnt.c: 1428: )
  1674  0109  0830               	movf	sprintf@width,w
  1675  010A  0431               	iorwf	sprintf@width+1,w
  1676  010B  1903               	btfsc	3,2
  1677  010C  2920               	goto	l1276
  1678  010D                     l1270:	
  1679                           ;doprnt.c: 1429: do
  1680                           
  1681                           
  1682                           ;doprnt.c: 1430: ((*sp++ = (' ')));
  1683  010D  3020               	movlw	32
  1684  010E  00A6               	movwf	??_sprintf
  1685  010F  082F               	movf	sprintf@sp,w
  1686  0110  0086               	movwf	6
  1687  0111  0187               	clrf	7
  1688  0112  0826               	movf	??_sprintf,w
  1689  0113  0081               	movwf	1
  1690  0114  3001               	movlw	1
  1691  0115  00A6               	movwf	??_sprintf
  1692  0116  0826               	movf	??_sprintf,w
  1693  0117  07AF               	addwf	sprintf@sp,f
  1694                           
  1695                           ;doprnt.c: 1431: while(--width);
  1696  0118  30FF               	movlw	255
  1697  0119  07B0               	addwf	sprintf@width,f
  1698  011A  30FF               	movlw	255
  1699  011B  3DB1               	addwfc	sprintf@width+1,f
  1700  011C  0830               	movf	sprintf@width,w
  1701  011D  0431               	iorwf	sprintf@width+1,w
  1702  011E  1D03               	btfss	3,2
  1703  011F  290D               	goto	l1270
  1704  0120                     l1276:	
  1705                           
  1706                           ;doprnt.c: 1438: if(flag & 0x03)
  1707  0120  082C               	movf	sprintf@flag,w
  1708  0121  3903               	andlw	3
  1709  0122  1903               	btfsc	3,2
  1710  0123  292F               	goto	l1282
  1711                           
  1712                           ;doprnt.c: 1439: ((*sp++ = ('-')));
  1713  0124  302D               	movlw	45
  1714  0125  00A6               	movwf	??_sprintf
  1715  0126  082F               	movf	sprintf@sp,w
  1716  0127  0086               	movwf	6
  1717  0128  0187               	clrf	7
  1718  0129  0826               	movf	??_sprintf,w
  1719  012A  0081               	movwf	1
  1720  012B  3001               	movlw	1
  1721  012C  00A6               	movwf	??_sprintf
  1722  012D  0826               	movf	??_sprintf,w
  1723  012E  07AF               	addwf	sprintf@sp,f
  1724  012F                     l1282:	
  1725                           
  1726                           ;doprnt.c: 1469: }
  1727                           ;doprnt.c: 1472: prec = c;
  1728  012F  0832               	movf	sprintf@c,w
  1729  0130  00A6               	movwf	??_sprintf
  1730  0131  0826               	movf	??_sprintf,w
  1731  0132  00AB               	movwf	sprintf@prec
  1732  0133                     l1290:	
  1733                           ;doprnt.c: 1474: while(prec--) {
  1734                           
  1735  0133  30FF               	movlw	255
  1736  0134  00A6               	movwf	??_sprintf
  1737  0135  0826               	movf	??_sprintf,w
  1738  0136  07AB               	addwf	sprintf@prec,f
  1739  0137  0A2B               	incf	sprintf@prec,w
  1740  0138  1903               	btfsc	3,2
  1741  0139  2829               	goto	l1292
  1742                           
  1743                           ;doprnt.c: 1478: {
  1744                           ;doprnt.c: 1489: c = (val / dpowers[prec]) % 10 + '0';
  1745  013A  300A               	movlw	10
  1746  013B  00F9               	movwf	___lwmod@divisor
  1747  013C  3000               	movlw	0
  1748  013D  00FA               	movwf	___lwmod@divisor+1
  1749  013E  082B               	movf	sprintf@prec,w
  1750  013F  00A6               	movwf	??_sprintf
  1751  0140  01A7               	clrf	??_sprintf+1
  1752  0141  35A6               	lslf	??_sprintf,f
  1753  0142  0DA7               	rlf	??_sprintf+1,f
  1754  0143  3000               	movlw	low (_dpowers| (0+32768))
  1755  0144  0726               	addwf	??_sprintf,w
  1756  0145  0084               	movwf	4
  1757  0146  3085               	movlw	high (_dpowers| (0+32768))
  1758  0147  3D27               	addwfc	??_sprintf+1,w
  1759  0148  0085               	movwf	5
  1760  0149  3F00               	moviw [0]fsr0
  1761  014A  00F1               	movwf	___lwdiv@divisor
  1762  014B  3F01               	moviw [1]fsr0
  1763  014C  00F2               	movwf	___lwdiv@divisor+1
  1764  014D  082E               	movf	sprintf@val+1,w
  1765  014E  00F4               	movwf	___lwdiv@dividend+1
  1766  014F  082D               	movf	sprintf@val,w
  1767  0150  00F3               	movwf	___lwdiv@dividend
  1768  0151  3184  2484  3180   	fcall	___lwdiv
  1769  0154  0872               	movf	?___lwdiv+1,w
  1770  0155  00FC               	movwf	___lwmod@dividend+1
  1771  0156  0871               	movf	?___lwdiv,w
  1772  0157  00FB               	movwf	___lwmod@dividend
  1773  0158  3184  24B8  3180   	fcall	___lwmod
  1774  015B  0879               	movf	?___lwmod,w
  1775  015C  3E30               	addlw	48
  1776  015D  0140               	movlb	0	; select bank0
  1777  015E  00A8               	movwf	??_sprintf+2
  1778  015F  0828               	movf	??_sprintf+2,w
  1779  0160  00B2               	movwf	sprintf@c
  1780                           
  1781                           ;doprnt.c: 1523: }
  1782                           ;doprnt.c: 1524: ((*sp++ = (c)));
  1783  0161  0832               	movf	sprintf@c,w
  1784  0162  00A6               	movwf	??_sprintf
  1785  0163  082F               	movf	sprintf@sp,w
  1786  0164  0086               	movwf	6
  1787  0165  0187               	clrf	7
  1788  0166  0826               	movf	??_sprintf,w
  1789  0167  0081               	movwf	1
  1790  0168  3001               	movlw	1
  1791  0169  00A6               	movwf	??_sprintf
  1792  016A  0826               	movf	??_sprintf,w
  1793  016B  07AF               	addwf	sprintf@sp,f
  1794  016C  2933               	goto	l1290
  1795  016D                     l1294:	
  1796                           ;doprnt.c: 1525: }
  1797                           ;doprnt.c: 1533: }
  1798                           ;doprnt.c: 1535: alldone:
  1799                           
  1800                           
  1801                           ;doprnt.c: 1538: *sp = 0;
  1802  016D  0140               	movlb	0	; select bank0
  1803  016E  082F               	movf	sprintf@sp,w
  1804  016F  0086               	movwf	6
  1805  0170  0187               	clrf	7
  1806  0171  0181               	clrf	1
  1807  0172  0008               	return
  1808  0173                     __end_of_sprintf:	
  1809                           ;doprnt.c: 1540: return 0;
  1810                           ;	Return value of _sprintf is never used
  1811                           
  1812                           
  1813                           	psect	text2
  1814  0527                     __ptext2:	
  1815 ;; *************** function _isdigit *****************
  1816 ;; Defined at:
  1817 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\isdigit.c"
  1818 ;; Parameters:    Size  Location     Type
  1819 ;;  c               1    wreg     unsigned char 
  1820 ;; Auto vars:     Size  Location     Type
  1821 ;;  c               1    2[COMMON] unsigned char 
  1822 ;; Return value:  Size  Location     Type
  1823 ;;		None               void
  1824 ;; Registers used:
  1825 ;;		wreg, status,2, status,0
  1826 ;; Tracked objects:
  1827 ;;		On entry : 0/0
  1828 ;;		On exit  : 0/0
  1829 ;;		Unchanged: 0/0
  1830 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
  1831 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  1832 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  1833 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  1834 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  1835 ;;Total ram usage:        2 bytes
  1836 ;; Hardware stack levels used:    1
  1837 ;; Hardware stack levels required when called:    1
  1838 ;; This function calls:
  1839 ;;		Nothing
  1840 ;; This function is called by:
  1841 ;;		_sprintf
  1842 ;; This function uses a non-reentrant model
  1843 ;;
  1844                           
  1845                           
  1846                           ;psect for function _isdigit
  1847  0527                     _isdigit:	
  1848                           
  1849                           ;incstack = 0
  1850                           ; Regs used in _isdigit: [wreg+status,2+status,0]
  1851                           ;isdigit@c stored from wreg
  1852  0527  00F2               	movwf	isdigit@c
  1853  0528  01F1               	clrf	_isdigit$726
  1854  0529  303A               	movlw	58
  1855  052A  0272               	subwf	isdigit@c,w
  1856  052B  1803               	skipnc
  1857  052C  2D33               	goto	l1050
  1858  052D  3030               	movlw	48
  1859  052E  0272               	subwf	isdigit@c,w
  1860  052F  1C03               	skipc
  1861  0530  2D33               	goto	l1050
  1862  0531  01F1               	clrf	_isdigit$726
  1863  0532  0AF1               	incf	_isdigit$726,f
  1864  0533                     l1050:	
  1865  0533  0C71               	rrf	_isdigit$726,w
  1866  0534  0008               	return
  1867  0535                     __end_of_isdigit:	
  1868                           
  1869                           	psect	text3
  1870  04E5                     __ptext3:	
  1871 ;; *************** function ___wmul *****************
  1872 ;; Defined at:
  1873 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\Umul16.c"
  1874 ;; Parameters:    Size  Location     Type
  1875 ;;  multiplier      2    1[COMMON] unsigned int 
  1876 ;;  multiplicand    2    3[COMMON] unsigned int 
  1877 ;; Auto vars:     Size  Location     Type
  1878 ;;  product         2    5[COMMON] unsigned int 
  1879 ;; Return value:  Size  Location     Type
  1880 ;;                  2    1[COMMON] unsigned int 
  1881 ;; Registers used:
  1882 ;;		wreg, status,2, status,0
  1883 ;; Tracked objects:
  1884 ;;		On entry : 0/0
  1885 ;;		On exit  : 0/0
  1886 ;;		Unchanged: 0/0
  1887 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
  1888 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  1889 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  1890 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  1891 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  1892 ;;Total ram usage:        6 bytes
  1893 ;; Hardware stack levels used:    1
  1894 ;; Hardware stack levels required when called:    1
  1895 ;; This function calls:
  1896 ;;		Nothing
  1897 ;; This function is called by:
  1898 ;;		_sprintf
  1899 ;; This function uses a non-reentrant model
  1900 ;;
  1901                           
  1902                           
  1903                           ;psect for function ___wmul
  1904  04E5                     ___wmul:	
  1905                           
  1906                           ;incstack = 0
  1907                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  1908  04E5  01F5               	clrf	___wmul@product
  1909  04E6  01F6               	clrf	___wmul@product+1
  1910  04E7                     l1056:	
  1911  04E7  1C71               	btfss	___wmul@multiplier,0
  1912  04E8  2CED               	goto	l239
  1913  04E9  0873               	movf	___wmul@multiplicand,w
  1914  04EA  07F5               	addwf	___wmul@product,f
  1915  04EB  0874               	movf	___wmul@multiplicand+1,w
  1916  04EC  3DF6               	addwfc	___wmul@product+1,f
  1917  04ED                     l239:	
  1918  04ED  3001               	movlw	1
  1919  04EE                     u705:	
  1920  04EE  35F3               	lslf	___wmul@multiplicand,f
  1921  04EF  0DF4               	rlf	___wmul@multiplicand+1,f
  1922  04F0  0B89               	decfsz	9,f
  1923  04F1  2CEE               	goto	u705
  1924  04F2  3001               	movlw	1
  1925  04F3                     u715:	
  1926  04F3  36F2               	lsrf	___wmul@multiplier+1,f
  1927  04F4  0CF1               	rrf	___wmul@multiplier,f
  1928  04F5  0B89               	decfsz	9,f
  1929  04F6  2CF3               	goto	u715
  1930  04F7  0871               	movf	___wmul@multiplier,w
  1931  04F8  0472               	iorwf	___wmul@multiplier+1,w
  1932  04F9  1D03               	btfss	3,2
  1933  04FA  2CE7               	goto	l1056
  1934  04FB  0876               	movf	___wmul@product+1,w
  1935  04FC  00F2               	movwf	?___wmul+1
  1936  04FD  0875               	movf	___wmul@product,w
  1937  04FE  00F1               	movwf	?___wmul
  1938  04FF  0008               	return
  1939  0500                     __end_of___wmul:	
  1940                           
  1941                           	psect	text4
  1942  04B8                     __ptext4:	
  1943 ;; *************** function ___lwmod *****************
  1944 ;; Defined at:
  1945 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\lwmod.c"
  1946 ;; Parameters:    Size  Location     Type
  1947 ;;  divisor         2    9[COMMON] unsigned int 
  1948 ;;  dividend        2   11[COMMON] unsigned int 
  1949 ;; Auto vars:     Size  Location     Type
  1950 ;;  counter         1    1[BANK0 ] unsigned char 
  1951 ;; Return value:  Size  Location     Type
  1952 ;;                  2    9[COMMON] unsigned int 
  1953 ;; Registers used:
  1954 ;;		wreg, status,2, status,0
  1955 ;; Tracked objects:
  1956 ;;		On entry : 0/0
  1957 ;;		On exit  : 0/0
  1958 ;;		Unchanged: 0/0
  1959 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
  1960 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  1961 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  1962 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  1963 ;;      Totals:         4       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  1964 ;;Total ram usage:        6 bytes
  1965 ;; Hardware stack levels used:    1
  1966 ;; Hardware stack levels required when called:    1
  1967 ;; This function calls:
  1968 ;;		Nothing
  1969 ;; This function is called by:
  1970 ;;		_sprintf
  1971 ;; This function uses a non-reentrant model
  1972 ;;
  1973                           
  1974                           
  1975                           ;psect for function ___lwmod
  1976  04B8                     ___lwmod:	
  1977                           
  1978                           ;incstack = 0
  1979                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  1980  04B8  0879               	movf	___lwmod@divisor,w
  1981  04B9  047A               	iorwf	___lwmod@divisor+1,w
  1982  04BA  1903               	btfsc	3,2
  1983  04BB  2CE0               	goto	l1112
  1984  04BC  0140               	movlb	0	; select bank0
  1985  04BD  01A1               	clrf	___lwmod@counter
  1986  04BE  0AA1               	incf	___lwmod@counter,f
  1987  04BF                     l1102:	
  1988  04BF  1BFA               	btfsc	___lwmod@divisor+1,7
  1989  04C0  2CCB               	goto	l1104
  1990  04C1  3001               	movlw	1
  1991  04C2                     u815:	
  1992  04C2  35F9               	lslf	___lwmod@divisor,f
  1993  04C3  0DFA               	rlf	___lwmod@divisor+1,f
  1994  04C4  0B89               	decfsz	9,f
  1995  04C5  2CC2               	goto	u815
  1996  04C6  3001               	movlw	1
  1997  04C7  00A0               	movwf	??___lwmod
  1998  04C8  0820               	movf	??___lwmod,w
  1999  04C9  07A1               	addwf	___lwmod@counter,f
  2000  04CA  2CBF               	goto	l1102
  2001  04CB                     l1104:	
  2002  04CB  087A               	movf	___lwmod@divisor+1,w
  2003  04CC  027C               	subwf	___lwmod@dividend+1,w
  2004  04CD  1D03               	skipz
  2005  04CE  2CD1               	goto	u835
  2006  04CF  0879               	movf	___lwmod@divisor,w
  2007  04D0  027B               	subwf	___lwmod@dividend,w
  2008  04D1                     u835:	
  2009  04D1  1C03               	skipc
  2010  04D2  2CD7               	goto	l1108
  2011  04D3  0879               	movf	___lwmod@divisor,w
  2012  04D4  02FB               	subwf	___lwmod@dividend,f
  2013  04D5  087A               	movf	___lwmod@divisor+1,w
  2014  04D6  3BFC               	subwfb	___lwmod@dividend+1,f
  2015  04D7                     l1108:	
  2016  04D7  3001               	movlw	1
  2017  04D8                     u845:	
  2018  04D8  36FA               	lsrf	___lwmod@divisor+1,f
  2019  04D9  0CF9               	rrf	___lwmod@divisor,f
  2020  04DA  0B89               	decfsz	9,f
  2021  04DB  2CD8               	goto	u845
  2022  04DC  3001               	movlw	1
  2023  04DD  02A1               	subwf	___lwmod@counter,f
  2024  04DE  1D03               	btfss	3,2
  2025  04DF  2CCB               	goto	l1104
  2026  04E0                     l1112:	
  2027  04E0  087C               	movf	___lwmod@dividend+1,w
  2028  04E1  00FA               	movwf	?___lwmod+1
  2029  04E2  087B               	movf	___lwmod@dividend,w
  2030  04E3  00F9               	movwf	?___lwmod
  2031  04E4  0008               	return
  2032  04E5                     __end_of___lwmod:	
  2033                           
  2034                           	psect	text5
  2035  0484                     __ptext5:	
  2036 ;; *************** function ___lwdiv *****************
  2037 ;; Defined at:
  2038 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\lwdiv.c"
  2039 ;; Parameters:    Size  Location     Type
  2040 ;;  divisor         2    1[COMMON] unsigned int 
  2041 ;;  dividend        2    3[COMMON] unsigned int 
  2042 ;; Auto vars:     Size  Location     Type
  2043 ;;  quotient        2    6[COMMON] unsigned int 
  2044 ;;  counter         1    8[COMMON] unsigned char 
  2045 ;; Return value:  Size  Location     Type
  2046 ;;                  2    1[COMMON] unsigned int 
  2047 ;; Registers used:
  2048 ;;		wreg, status,2, status,0
  2049 ;; Tracked objects:
  2050 ;;		On entry : 0/0
  2051 ;;		On exit  : 0/0
  2052 ;;		Unchanged: 0/0
  2053 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
  2054 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  2055 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  2056 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  2057 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  2058 ;;Total ram usage:        8 bytes
  2059 ;; Hardware stack levels used:    1
  2060 ;; Hardware stack levels required when called:    1
  2061 ;; This function calls:
  2062 ;;		Nothing
  2063 ;; This function is called by:
  2064 ;;		_main
  2065 ;;		_sprintf
  2066 ;; This function uses a non-reentrant model
  2067 ;;
  2068                           
  2069                           
  2070                           ;psect for function ___lwdiv
  2071  0484                     ___lwdiv:	
  2072                           
  2073                           ;incstack = 0
  2074                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  2075  0484  01F6               	clrf	___lwdiv@quotient
  2076  0485  01F7               	clrf	___lwdiv@quotient+1
  2077  0486  0871               	movf	___lwdiv@divisor,w
  2078  0487  0472               	iorwf	___lwdiv@divisor+1,w
  2079  0488  1903               	btfsc	3,2
  2080  0489  2CB3               	goto	l1090
  2081  048A  01F8               	clrf	___lwdiv@counter
  2082  048B  0AF8               	incf	___lwdiv@counter,f
  2083  048C                     l1078:	
  2084  048C  1BF2               	btfsc	___lwdiv@divisor+1,7
  2085  048D  2C98               	goto	l1080
  2086  048E  3001               	movlw	1
  2087  048F                     u745:	
  2088  048F  35F1               	lslf	___lwdiv@divisor,f
  2089  0490  0DF2               	rlf	___lwdiv@divisor+1,f
  2090  0491  0B89               	decfsz	9,f
  2091  0492  2C8F               	goto	u745
  2092  0493  3001               	movlw	1
  2093  0494  00F5               	movwf	??___lwdiv
  2094  0495  0875               	movf	??___lwdiv,w
  2095  0496  07F8               	addwf	___lwdiv@counter,f
  2096  0497  2C8C               	goto	l1078
  2097  0498                     l1080:	
  2098  0498  3001               	movlw	1
  2099  0499                     u765:	
  2100  0499  35F6               	lslf	___lwdiv@quotient,f
  2101  049A  0DF7               	rlf	___lwdiv@quotient+1,f
  2102  049B  0B89               	decfsz	9,f
  2103  049C  2C99               	goto	u765
  2104  049D  0872               	movf	___lwdiv@divisor+1,w
  2105  049E  0274               	subwf	___lwdiv@dividend+1,w
  2106  049F  1D03               	skipz
  2107  04A0  2CA3               	goto	u775
  2108  04A1  0871               	movf	___lwdiv@divisor,w
  2109  04A2  0273               	subwf	___lwdiv@dividend,w
  2110  04A3                     u775:	
  2111  04A3  1C03               	skipc
  2112  04A4  2CAA               	goto	l1086
  2113  04A5  0871               	movf	___lwdiv@divisor,w
  2114  04A6  02F3               	subwf	___lwdiv@dividend,f
  2115  04A7  0872               	movf	___lwdiv@divisor+1,w
  2116  04A8  3BF4               	subwfb	___lwdiv@dividend+1,f
  2117  04A9  1476               	bsf	___lwdiv@quotient,0
  2118  04AA                     l1086:	
  2119  04AA  3001               	movlw	1
  2120  04AB                     u785:	
  2121  04AB  36F2               	lsrf	___lwdiv@divisor+1,f
  2122  04AC  0CF1               	rrf	___lwdiv@divisor,f
  2123  04AD  0B89               	decfsz	9,f
  2124  04AE  2CAB               	goto	u785
  2125  04AF  3001               	movlw	1
  2126  04B0  02F8               	subwf	___lwdiv@counter,f
  2127  04B1  1D03               	btfss	3,2
  2128  04B2  2C98               	goto	l1080
  2129  04B3                     l1090:	
  2130  04B3  0877               	movf	___lwdiv@quotient+1,w
  2131  04B4  00F2               	movwf	?___lwdiv+1
  2132  04B5  0876               	movf	___lwdiv@quotient,w
  2133  04B6  00F1               	movwf	?___lwdiv
  2134  04B7  0008               	return
  2135  04B8                     __end_of___lwdiv:	
  2136                           
  2137                           	psect	text6
  2138  044F                     __ptext6:	
  2139 ;; *************** function _Lcd_Out2 *****************
  2140 ;; Defined at:
  2141 ;;		line 115 in file "flex_lcd.h"
  2142 ;; Parameters:    Size  Location     Type
  2143 ;;  y               1    wreg     unsigned char 
  2144 ;;  x               1    4[COMMON] unsigned char 
  2145 ;;  buffer          1    5[COMMON] PTR unsigned char 
  2146 ;;		 -> main@buffer1(16), 
  2147 ;; Auto vars:     Size  Location     Type
  2148 ;;  y               1    7[COMMON] unsigned char 
  2149 ;;  data            1    8[COMMON] unsigned char 
  2150 ;; Return value:  Size  Location     Type
  2151 ;;                  1    wreg      void 
  2152 ;; Registers used:
  2153 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2154 ;; Tracked objects:
  2155 ;;		On entry : 0/0
  2156 ;;		On exit  : 0/0
  2157 ;;		Unchanged: 0/0
  2158 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
  2159 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  2160 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  2161 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  2162 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  2163 ;;Total ram usage:        5 bytes
  2164 ;; Hardware stack levels used:    1
  2165 ;; Hardware stack levels required when called:    2
  2166 ;; This function calls:
  2167 ;;		_Lcd_Chr_CP
  2168 ;;		_Lcd_Cmd
  2169 ;; This function is called by:
  2170 ;;		_main
  2171 ;; This function uses a non-reentrant model
  2172 ;;
  2173                           
  2174                           
  2175                           ;psect for function _Lcd_Out2
  2176  044F                     _Lcd_Out2:	
  2177                           
  2178                           ;incstack = 0
  2179                           ; Regs used in _Lcd_Out2: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  2180                           ;Lcd_Out2@y stored from wreg
  2181  044F  00F7               	movwf	Lcd_Out2@y
  2182                           
  2183                           ;flex_lcd.h: 117: unsigned char data;
  2184                           ;flex_lcd.h: 118: switch (y)
  2185  0450  2C60               	goto	l1200
  2186  0451                     l1190:	
  2187                           ;flex_lcd.h: 119: {
  2188                           ;flex_lcd.h: 120: case 1: data = 128 + x; break;
  2189                           
  2190  0451  0874               	movf	Lcd_Out2@x,w
  2191  0452  3E80               	addlw	128
  2192  0453  2C5C               	goto	L3
  2193  0454                     l1192:	
  2194                           ;flex_lcd.h: 121: case 2: data = 192 + x; break;
  2195                           
  2196  0454  0874               	movf	Lcd_Out2@x,w
  2197  0455  3EC0               	addlw	192
  2198  0456  2C5C               	goto	L3
  2199  0457                     l1194:	
  2200                           ;flex_lcd.h: 122: case 3: data = 148 + x; break;
  2201                           
  2202  0457  0874               	movf	Lcd_Out2@x,w
  2203  0458  3E94               	addlw	148
  2204  0459  2C5C               	goto	L3
  2205  045A                     l1196:	
  2206                           ;flex_lcd.h: 123: case 4: data = 212 + x; break;
  2207                           
  2208  045A  0874               	movf	Lcd_Out2@x,w
  2209  045B  3ED4               	addlw	212
  2210  045C                     L3:	
  2211  045C  00F6               	movwf	??_Lcd_Out2
  2212  045D  0876               	movf	??_Lcd_Out2,w
  2213  045E  00F8               	movwf	Lcd_Out2@data
  2214                           
  2215                           ;flex_lcd.h: 125: }
  2216                           
  2217                           ;flex_lcd.h: 124: default: break;
  2218  045F  2C6E               	goto	l1202
  2219  0460                     l1200:	
  2220  0460  0877               	movf	Lcd_Out2@y,w
  2221                           
  2222                           ; Switch size 1, requested type "space"
  2223                           ; Number of cases is 4, Range of values is 1 to 4
  2224                           ; switch strategies available:
  2225                           ; Name         Instructions Cycles
  2226                           ; simple_byte           13     7 (average)
  2227                           ; direct_byte           17     9 (fixed)
  2228                           ; jumptable            263     9 (fixed)
  2229                           ;	Chosen strategy is simple_byte
  2230  0461  3A01               	xorlw	1	; case 1
  2231  0462  1903               	skipnz
  2232  0463  2C51               	goto	l1190
  2233  0464  3A03               	xorlw	3	; case 2
  2234  0465  1903               	skipnz
  2235  0466  2C54               	goto	l1192
  2236  0467  3A01               	xorlw	1	; case 3
  2237  0468  1903               	skipnz
  2238  0469  2C57               	goto	l1194
  2239  046A  3A07               	xorlw	7	; case 4
  2240  046B  1903               	skipnz
  2241  046C  2C5A               	goto	l1196
  2242  046D  2C6E               	goto	l1202
  2243  046E                     l1202:	
  2244                           
  2245                           ;flex_lcd.h: 126: Lcd_Cmd(data);
  2246  046E  0878               	movf	Lcd_Out2@data,w
  2247  046F  3183  2385  3184   	fcall	_Lcd_Cmd
  2248  0472                     l1208:	
  2249                           ;flex_lcd.h: 127: while(*buffer)
  2250                           
  2251  0472  0875               	movf	Lcd_Out2@buffer,w
  2252  0473  0086               	movwf	6
  2253  0474  0187               	clrf	7
  2254  0475  0801               	movf	1,w
  2255  0476  1903               	btfsc	3,2
  2256  0477  0008               	return
  2257                           
  2258                           ;flex_lcd.h: 128: {
  2259                           ;flex_lcd.h: 129: Lcd_Chr_CP(*buffer);
  2260  0478  0875               	movf	Lcd_Out2@buffer,w
  2261  0479  0086               	movwf	6
  2262  047A  0187               	clrf	7
  2263  047B  0801               	movf	1,w
  2264  047C  3182  22EE  3184   	fcall	_Lcd_Chr_CP
  2265                           
  2266                           ;flex_lcd.h: 130: buffer++;
  2267  047F  3001               	movlw	1
  2268  0480  00F6               	movwf	??_Lcd_Out2
  2269  0481  0876               	movf	??_Lcd_Out2,w
  2270  0482  07F5               	addwf	Lcd_Out2@buffer,f
  2271  0483  2C72               	goto	l1208
  2272  0484                     __end_of_Lcd_Out2:	
  2273                           ;flex_lcd.h: 131: }
  2274                           ;flex_lcd.h: 132: return;
  2275                           
  2276                           
  2277                           	psect	text7
  2278  0418                     __ptext7:	
  2279 ;; *************** function _Lcd_Out *****************
  2280 ;; Defined at:
  2281 ;;		line 94 in file "flex_lcd.h"
  2282 ;; Parameters:    Size  Location     Type
  2283 ;;  y               1    wreg     unsigned char 
  2284 ;;  x               1    4[COMMON] unsigned char 
  2285 ;;  buffer          2    5[COMMON] PTR const unsigned char 
  2286 ;;		 -> STR_3(15), STR_2(3), 
  2287 ;; Auto vars:     Size  Location     Type
  2288 ;;  y               1    8[COMMON] unsigned char 
  2289 ;;  data            1    9[COMMON] unsigned char 
  2290 ;; Return value:  Size  Location     Type
  2291 ;;                  1    wreg      void 
  2292 ;; Registers used:
  2293 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2294 ;; Tracked objects:
  2295 ;;		On entry : 0/0
  2296 ;;		On exit  : 0/0
  2297 ;;		Unchanged: 0/0
  2298 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
  2299 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  2300 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  2301 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  2302 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  2303 ;;Total ram usage:        6 bytes
  2304 ;; Hardware stack levels used:    1
  2305 ;; Hardware stack levels required when called:    2
  2306 ;; This function calls:
  2307 ;;		_Lcd_Chr_CP
  2308 ;;		_Lcd_Cmd
  2309 ;; This function is called by:
  2310 ;;		_main
  2311 ;; This function uses a non-reentrant model
  2312 ;;
  2313                           
  2314                           
  2315                           ;psect for function _Lcd_Out
  2316  0418                     _Lcd_Out:	
  2317                           
  2318                           ;incstack = 0
  2319                           ; Regs used in _Lcd_Out: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2320                           ;Lcd_Out@y stored from wreg
  2321  0418  00F8               	movwf	Lcd_Out@y
  2322                           
  2323                           ;flex_lcd.h: 96: unsigned char data;
  2324                           ;flex_lcd.h: 97: switch (y)
  2325  0419  2C29               	goto	l1178
  2326  041A                     l1168:	
  2327                           ;flex_lcd.h: 98: {
  2328                           ;flex_lcd.h: 99: case 1: data = 128 + x; break;
  2329                           
  2330  041A  0874               	movf	Lcd_Out@x,w
  2331  041B  3E80               	addlw	128
  2332  041C  2C25               	goto	L6
  2333  041D                     l1170:	
  2334                           ;flex_lcd.h: 100: case 2: data = 192 + x; break;
  2335                           
  2336  041D  0874               	movf	Lcd_Out@x,w
  2337  041E  3EC0               	addlw	192
  2338  041F  2C25               	goto	L6
  2339  0420                     l1172:	
  2340                           ;flex_lcd.h: 101: case 3: data = 148 + x; break;
  2341                           
  2342  0420  0874               	movf	Lcd_Out@x,w
  2343  0421  3E94               	addlw	148
  2344  0422  2C25               	goto	L6
  2345  0423                     l1174:	
  2346                           ;flex_lcd.h: 102: case 4: data = 212 + x; break;
  2347                           
  2348  0423  0874               	movf	Lcd_Out@x,w
  2349  0424  3ED4               	addlw	212
  2350  0425                     L6:	
  2351  0425  00F7               	movwf	??_Lcd_Out
  2352  0426  0877               	movf	??_Lcd_Out,w
  2353  0427  00F9               	movwf	Lcd_Out@data
  2354                           
  2355                           ;flex_lcd.h: 104: }
  2356                           
  2357                           ;flex_lcd.h: 103: default: break;
  2358  0428  2C37               	goto	l1180
  2359  0429                     l1178:	
  2360  0429  0878               	movf	Lcd_Out@y,w
  2361                           
  2362                           ; Switch size 1, requested type "space"
  2363                           ; Number of cases is 4, Range of values is 1 to 4
  2364                           ; switch strategies available:
  2365                           ; Name         Instructions Cycles
  2366                           ; simple_byte           13     7 (average)
  2367                           ; direct_byte           17     9 (fixed)
  2368                           ; jumptable            263     9 (fixed)
  2369                           ;	Chosen strategy is simple_byte
  2370  042A  3A01               	xorlw	1	; case 1
  2371  042B  1903               	skipnz
  2372  042C  2C1A               	goto	l1168
  2373  042D  3A03               	xorlw	3	; case 2
  2374  042E  1903               	skipnz
  2375  042F  2C1D               	goto	l1170
  2376  0430  3A01               	xorlw	1	; case 3
  2377  0431  1903               	skipnz
  2378  0432  2C20               	goto	l1172
  2379  0433  3A07               	xorlw	7	; case 4
  2380  0434  1903               	skipnz
  2381  0435  2C23               	goto	l1174
  2382  0436  2C37               	goto	l1180
  2383  0437                     l1180:	
  2384                           
  2385                           ;flex_lcd.h: 105: Lcd_Cmd(data);
  2386  0437  0879               	movf	Lcd_Out@data,w
  2387  0438  3183  2385  3184   	fcall	_Lcd_Cmd
  2388  043B                     l1186:	
  2389                           ;flex_lcd.h: 106: while(*buffer)
  2390                           
  2391  043B  0875               	movf	Lcd_Out@buffer,w
  2392  043C  0084               	movwf	4
  2393  043D  0876               	movf	Lcd_Out@buffer+1,w
  2394  043E  0085               	movwf	5
  2395  043F  0012               	moviw fsr0++
  2396  0440  1903               	btfsc	3,2
  2397  0441  0008               	return
  2398                           
  2399                           ;flex_lcd.h: 107: {
  2400                           ;flex_lcd.h: 108: Lcd_Chr_CP(*buffer);
  2401  0442  0875               	movf	Lcd_Out@buffer,w
  2402  0443  0084               	movwf	4
  2403  0444  0876               	movf	Lcd_Out@buffer+1,w
  2404  0445  0085               	movwf	5
  2405  0446  0800               	movf	0,w	;code access
  2406  0447  3182  22EE  3184   	fcall	_Lcd_Chr_CP
  2407                           
  2408                           ;flex_lcd.h: 109: buffer++;
  2409  044A  3001               	movlw	1
  2410  044B  07F5               	addwf	Lcd_Out@buffer,f
  2411  044C  3000               	movlw	0
  2412  044D  3DF6               	addwfc	Lcd_Out@buffer+1,f
  2413  044E  2C3B               	goto	l1186
  2414  044F                     __end_of_Lcd_Out:	
  2415                           ;flex_lcd.h: 110: }
  2416                           ;flex_lcd.h: 111: return;
  2417                           
  2418                           
  2419                           	psect	text8
  2420  02EE                     __ptext8:	
  2421 ;; *************** function _Lcd_Chr_CP *****************
  2422 ;; Defined at:
  2423 ;;		line 136 in file "flex_lcd.h"
  2424 ;; Parameters:    Size  Location     Type
  2425 ;;  data            1    wreg     unsigned char 
  2426 ;; Auto vars:     Size  Location     Type
  2427 ;;  data            1    3[COMMON] unsigned char 
  2428 ;; Return value:  Size  Location     Type
  2429 ;;                  1    wreg      void 
  2430 ;; Registers used:
  2431 ;;		wreg, status,2, status,0
  2432 ;; Tracked objects:
  2433 ;;		On entry : 0/0
  2434 ;;		On exit  : 0/0
  2435 ;;		Unchanged: 0/0
  2436 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
  2437 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  2438 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  2439 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  2440 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  2441 ;;Total ram usage:        3 bytes
  2442 ;; Hardware stack levels used:    1
  2443 ;; Hardware stack levels required when called:    1
  2444 ;; This function calls:
  2445 ;;		Nothing
  2446 ;; This function is called by:
  2447 ;;		_Lcd_Out
  2448 ;;		_Lcd_Out2
  2449 ;; This function uses a non-reentrant model
  2450 ;;
  2451                           
  2452                           
  2453                           ;psect for function _Lcd_Chr_CP
  2454  02EE                     _Lcd_Chr_CP:	
  2455                           
  2456                           ;incstack = 0
  2457                           ; Regs used in _Lcd_Chr_CP: [wreg+status,2+status,0]
  2458                           ;Lcd_Chr_CP@data stored from wreg
  2459  02EE  00F3               	movwf	Lcd_Chr_CP@data
  2460                           
  2461                           ;flex_lcd.h: 137: PORTDbits.RD3 = 0; PORTDbits.RD2 = 1;
  2462  02EF  0140               	movlb	0	; select bank0
  2463  02F0  118F               	bcf	15,3	;volatile
  2464  02F1  150F               	bsf	15,2	;volatile
  2465                           
  2466                           ;flex_lcd.h: 138: PORTCbits.RC3 = (data & 0b10000000)>>7; PORTDbits.RD0 = (data & 0b0100
      +                          0000)>>6;
  2467  02F2  0873               	movf	Lcd_Chr_CP@data,w
  2468  02F3  00F1               	movwf	??_Lcd_Chr_CP
  2469  02F4  3007               	movlw	7
  2470  02F5                     u615:	
  2471  02F5  36F1               	lsrf	??_Lcd_Chr_CP,f
  2472  02F6  0B89               	decfsz	9,f
  2473  02F7  2AF5               	goto	u615
  2474  02F8  0871               	movf	??_Lcd_Chr_CP,w
  2475  02F9  3901               	andlw	1
  2476  02FA  00F2               	movwf	??_Lcd_Chr_CP+1
  2477  02FB  0DF2               	rlf	??_Lcd_Chr_CP+1,f
  2478  02FC  0DF2               	rlf	??_Lcd_Chr_CP+1,f
  2479  02FD  0DF2               	rlf	??_Lcd_Chr_CP+1,f
  2480  02FE  080E               	movf	14,w	;volatile
  2481  02FF  0672               	xorwf	??_Lcd_Chr_CP+1,w
  2482  0300  39F7               	andlw	-9
  2483  0301  0672               	xorwf	??_Lcd_Chr_CP+1,w
  2484  0302  008E               	movwf	14	;volatile
  2485  0303  0873               	movf	Lcd_Chr_CP@data,w
  2486  0304  00F1               	movwf	??_Lcd_Chr_CP
  2487  0305  3006               	movlw	6
  2488  0306                     u625:	
  2489  0306  36F1               	lsrf	??_Lcd_Chr_CP,f
  2490  0307  0B89               	decfsz	9,f
  2491  0308  2B06               	goto	u625
  2492  0309  3001               	movlw	1
  2493  030A  0571               	andwf	??_Lcd_Chr_CP,w
  2494  030B  00F2               	movwf	??_Lcd_Chr_CP+1
  2495  030C  080F               	movf	15,w	;volatile
  2496  030D  0672               	xorwf	??_Lcd_Chr_CP+1,w
  2497  030E  39FE               	andlw	-2
  2498  030F  0672               	xorwf	??_Lcd_Chr_CP+1,w
  2499  0310  008F               	movwf	15	;volatile
  2500                           
  2501                           ;flex_lcd.h: 139: PORTDbits.RD1 = (data & 0b00100000)>>5; PORTCbits.RC4 = (data & 0b0001
      +                          0000)>>4;
  2502  0311  0873               	movf	Lcd_Chr_CP@data,w
  2503  0312  00F1               	movwf	??_Lcd_Chr_CP
  2504  0313  3005               	movlw	5
  2505  0314                     u635:	
  2506  0314  36F1               	lsrf	??_Lcd_Chr_CP,f
  2507  0315  0B89               	decfsz	9,f
  2508  0316  2B14               	goto	u635
  2509  0317  0871               	movf	??_Lcd_Chr_CP,w
  2510  0318  3901               	andlw	1
  2511  0319  00F2               	movwf	??_Lcd_Chr_CP+1
  2512  031A  0DF2               	rlf	??_Lcd_Chr_CP+1,f
  2513  031B  080F               	movf	15,w	;volatile
  2514  031C  0672               	xorwf	??_Lcd_Chr_CP+1,w
  2515  031D  39FD               	andlw	-3
  2516  031E  0672               	xorwf	??_Lcd_Chr_CP+1,w
  2517  031F  008F               	movwf	15	;volatile
  2518  0320  0873               	movf	Lcd_Chr_CP@data,w
  2519  0321  00F1               	movwf	??_Lcd_Chr_CP
  2520  0322  3004               	movlw	4
  2521  0323                     u645:	
  2522  0323  36F1               	lsrf	??_Lcd_Chr_CP,f
  2523  0324  0B89               	decfsz	9,f
  2524  0325  2B23               	goto	u645
  2525  0326  0871               	movf	??_Lcd_Chr_CP,w
  2526  0327  3901               	andlw	1
  2527  0328  00F2               	movwf	??_Lcd_Chr_CP+1
  2528  0329  0EF2               	swapf	??_Lcd_Chr_CP+1,f
  2529  032A  080E               	movf	14,w	;volatile
  2530  032B  0672               	xorwf	??_Lcd_Chr_CP+1,w
  2531  032C  39EF               	andlw	-17
  2532  032D  0672               	xorwf	??_Lcd_Chr_CP+1,w
  2533  032E  008E               	movwf	14	;volatile
  2534                           
  2535                           ;flex_lcd.h: 140: _delay(10);
  2536  032F  3003               	movlw	3
  2537  0330                     u1137:	
  2538  0330  0B89               	decfsz	9,f
  2539  0331  2B30               	goto	u1137
  2540  0332  0000               	nop
  2541                           
  2542                           ;flex_lcd.h: 141: PORTDbits.RD3 = 1; _delay((unsigned long)((5)*(32000000/4000000.0))); 
      +                          PORTDbits.RD3 = 0;
  2543  0333  0140               	movlb	0	; select bank0
  2544  0334  158F               	bsf	15,3	;volatile
  2545  0335  300D               	movlw	13
  2546  0336                     u1147:	
  2547  0336  0B89               	decfsz	9,f
  2548  0337  2B36               	goto	u1147
  2549  0338  0000               	nop
  2550  0339  0140               	movlb	0	; select bank0
  2551  033A  118F               	bcf	15,3	;volatile
  2552                           
  2553                           ;flex_lcd.h: 142: PORTCbits.RC3 = (data & 0b00001000)>>3; PORTDbits.RD0 = (data & 0b0000
      +                          0100)>>2;
  2554  033B  0873               	movf	Lcd_Chr_CP@data,w
  2555  033C  00F1               	movwf	??_Lcd_Chr_CP
  2556  033D  3003               	movlw	3
  2557  033E                     u655:	
  2558  033E  36F1               	lsrf	??_Lcd_Chr_CP,f
  2559  033F  0B89               	decfsz	9,f
  2560  0340  2B3E               	goto	u655
  2561  0341  0871               	movf	??_Lcd_Chr_CP,w
  2562  0342  3901               	andlw	1
  2563  0343  00F2               	movwf	??_Lcd_Chr_CP+1
  2564  0344  0DF2               	rlf	??_Lcd_Chr_CP+1,f
  2565  0345  0DF2               	rlf	??_Lcd_Chr_CP+1,f
  2566  0346  0DF2               	rlf	??_Lcd_Chr_CP+1,f
  2567  0347  080E               	movf	14,w	;volatile
  2568  0348  0672               	xorwf	??_Lcd_Chr_CP+1,w
  2569  0349  39F7               	andlw	-9
  2570  034A  0672               	xorwf	??_Lcd_Chr_CP+1,w
  2571  034B  008E               	movwf	14	;volatile
  2572  034C  0873               	movf	Lcd_Chr_CP@data,w
  2573  034D  00F1               	movwf	??_Lcd_Chr_CP
  2574  034E  3002               	movlw	2
  2575  034F                     u665:	
  2576  034F  36F1               	lsrf	??_Lcd_Chr_CP,f
  2577  0350  0B89               	decfsz	9,f
  2578  0351  2B4F               	goto	u665
  2579  0352  3001               	movlw	1
  2580  0353  0571               	andwf	??_Lcd_Chr_CP,w
  2581  0354  00F2               	movwf	??_Lcd_Chr_CP+1
  2582  0355  080F               	movf	15,w	;volatile
  2583  0356  0672               	xorwf	??_Lcd_Chr_CP+1,w
  2584  0357  39FE               	andlw	-2
  2585  0358  0672               	xorwf	??_Lcd_Chr_CP+1,w
  2586  0359  008F               	movwf	15	;volatile
  2587                           
  2588                           ;flex_lcd.h: 143: PORTDbits.RD1 = (data & 0b00000010)>>1; PORTCbits.RC4 = (data & 0b0000
      +                          0001);
  2589  035A  3673               	lsrf	Lcd_Chr_CP@data,w
  2590  035B  3901               	andlw	1
  2591  035C  00F1               	movwf	??_Lcd_Chr_CP
  2592  035D  0DF1               	rlf	??_Lcd_Chr_CP,f
  2593  035E  080F               	movf	15,w	;volatile
  2594  035F  0671               	xorwf	??_Lcd_Chr_CP,w
  2595  0360  39FD               	andlw	-3
  2596  0361  0671               	xorwf	??_Lcd_Chr_CP,w
  2597  0362  008F               	movwf	15	;volatile
  2598  0363  0873               	movf	Lcd_Chr_CP@data,w
  2599  0364  3901               	andlw	1
  2600  0365  00F1               	movwf	??_Lcd_Chr_CP
  2601  0366  0EF1               	swapf	??_Lcd_Chr_CP,f
  2602  0367  080E               	movf	14,w	;volatile
  2603  0368  0671               	xorwf	??_Lcd_Chr_CP,w
  2604  0369  39EF               	andlw	-17
  2605  036A  0671               	xorwf	??_Lcd_Chr_CP,w
  2606  036B  008E               	movwf	14	;volatile
  2607                           
  2608                           ;flex_lcd.h: 144: _delay(10);
  2609  036C  3003               	movlw	3
  2610  036D                     u1157:	
  2611  036D  0B89               	decfsz	9,f
  2612  036E  2B6D               	goto	u1157
  2613  036F  0000               	nop
  2614                           
  2615                           ;flex_lcd.h: 145: PORTDbits.RD3 = 1; _delay((unsigned long)((5)*(32000000/4000000.0))); 
      +                          PORTDbits.RD3 = 0;
  2616  0370  0140               	movlb	0	; select bank0
  2617  0371  158F               	bsf	15,3	;volatile
  2618  0372  300D               	movlw	13
  2619  0373                     u1167:	
  2620  0373  0B89               	decfsz	9,f
  2621  0374  2B73               	goto	u1167
  2622  0375  0000               	nop
  2623  0376  0140               	movlb	0	; select bank0
  2624  0377  118F               	bcf	15,3	;volatile
  2625                           
  2626                           ;flex_lcd.h: 146: _delay((unsigned long)((5)*(32000000/4000000.0))); _delay((unsigned lo
      +                          ng)((5500)*(32000000/4000000.0)));
  2627  0378  300D               	movlw	13
  2628  0379                     u1177:	
  2629  0379  0B89               	decfsz	9,f
  2630  037A  2B79               	goto	u1177
  2631  037B  0000               	nop
  2632  037C  303A               	movlw	58
  2633  037D  00F1               	movwf	??_Lcd_Chr_CP
  2634  037E  3023               	movlw	35
  2635  037F                     u1187:	
  2636  037F  0B89               	decfsz	9,f
  2637  0380  2B7F               	goto	u1187
  2638  0381  0BF1               	decfsz	??_Lcd_Chr_CP,f
  2639  0382  2B7F               	goto	u1187
  2640  0383  0000               	nop
  2641  0384  0008               	return
  2642  0385                     __end_of_Lcd_Chr_CP:	
  2643                           
  2644                           	psect	text9
  2645  0245                     __ptext9:	
  2646 ;; *************** function _Lcd_Init *****************
  2647 ;; Defined at:
  2648 ;;		line 52 in file "flex_lcd.h"
  2649 ;; Parameters:    Size  Location     Type
  2650 ;;		None
  2651 ;; Auto vars:     Size  Location     Type
  2652 ;;  data            1    5[COMMON] unsigned char 
  2653 ;; Return value:  Size  Location     Type
  2654 ;;                  1    wreg      void 
  2655 ;; Registers used:
  2656 ;;		wreg, status,2, status,0, pclath, cstack
  2657 ;; Tracked objects:
  2658 ;;		On entry : 0/0
  2659 ;;		On exit  : 0/0
  2660 ;;		Unchanged: 0/0
  2661 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
  2662 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  2663 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  2664 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  2665 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  2666 ;;Total ram usage:        2 bytes
  2667 ;; Hardware stack levels used:    1
  2668 ;; Hardware stack levels required when called:    2
  2669 ;; This function calls:
  2670 ;;		_Lcd_Cmd
  2671 ;; This function is called by:
  2672 ;;		_main
  2673 ;; This function uses a non-reentrant model
  2674 ;;
  2675                           
  2676                           
  2677                           ;psect for function _Lcd_Init
  2678  0245                     _Lcd_Init:	
  2679                           
  2680                           ;flex_lcd.h: 53: unsigned char data;
  2681                           ;flex_lcd.h: 54: TRISCbits.TRISC3 = 0;
  2682                           
  2683                           ;incstack = 0
  2684                           ; Regs used in _Lcd_Init: [wreg+status,2+status,0+pclath+cstack]
  2685  0245  0140               	movlb	0	; select bank0
  2686  0246  1193               	bcf	19,3	;volatile
  2687                           
  2688                           ;flex_lcd.h: 55: TRISDbits.TRISD0 = 0;
  2689  0247  1014               	bcf	20,0	;volatile
  2690                           
  2691                           ;flex_lcd.h: 56: TRISDbits.TRISD1 = 0;
  2692  0248  1094               	bcf	20,1	;volatile
  2693                           
  2694                           ;flex_lcd.h: 57: TRISCbits.TRISC4 = 0;
  2695  0249  1213               	bcf	19,4	;volatile
  2696                           
  2697                           ;flex_lcd.h: 58: TRISDbits.TRISD3 = 0;
  2698  024A  1194               	bcf	20,3	;volatile
  2699                           
  2700                           ;flex_lcd.h: 59: TRISDbits.TRISD2 = 0;
  2701  024B  1114               	bcf	20,2	;volatile
  2702                           
  2703                           ;flex_lcd.h: 60: PORTCbits.RC3 = 0;
  2704  024C  118E               	bcf	14,3	;volatile
  2705                           
  2706                           ;flex_lcd.h: 61: PORTDbits.RD0 = 0;
  2707  024D  100F               	bcf	15,0	;volatile
  2708                           
  2709                           ;flex_lcd.h: 62: PORTDbits.RD1 = 0;
  2710  024E  108F               	bcf	15,1	;volatile
  2711                           
  2712                           ;flex_lcd.h: 63: PORTCbits.RC4 = 0;
  2713  024F  120E               	bcf	14,4	;volatile
  2714                           
  2715                           ;flex_lcd.h: 64: PORTDbits.RD3 = 0;
  2716  0250  118F               	bcf	15,3	;volatile
  2717                           
  2718                           ;flex_lcd.h: 65: PORTDbits.RD2 = 0;
  2719  0251  110F               	bcf	15,2	;volatile
  2720                           
  2721                           ;flex_lcd.h: 66: _delay((unsigned long)((5500)*(32000000/4000000.0)));
  2722  0252  303A               	movlw	58
  2723  0253  00F4               	movwf	??_Lcd_Init
  2724  0254  3023               	movlw	35
  2725  0255                     u1197:	
  2726  0255  0B89               	decfsz	9,f
  2727  0256  2A55               	goto	u1197
  2728  0257  0BF4               	decfsz	??_Lcd_Init,f
  2729  0258  2A55               	goto	u1197
  2730  0259  0000               	nop
  2731                           
  2732                           ;flex_lcd.h: 67: _delay((unsigned long)((5500)*(32000000/4000000.0)));
  2733  025A  303A               	movlw	58
  2734  025B  00F4               	movwf	??_Lcd_Init
  2735  025C  3023               	movlw	35
  2736  025D                     u1207:	
  2737  025D  0B89               	decfsz	9,f
  2738  025E  2A5D               	goto	u1207
  2739  025F  0BF4               	decfsz	??_Lcd_Init,f
  2740  0260  2A5D               	goto	u1207
  2741  0261  0000               	nop
  2742                           
  2743                           ;flex_lcd.h: 68: _delay((unsigned long)((5500)*(32000000/4000000.0)));
  2744  0262  303A               	movlw	58
  2745  0263  00F4               	movwf	??_Lcd_Init
  2746  0264  3023               	movlw	35
  2747  0265                     u1217:	
  2748  0265  0B89               	decfsz	9,f
  2749  0266  2A65               	goto	u1217
  2750  0267  0BF4               	decfsz	??_Lcd_Init,f
  2751  0268  2A65               	goto	u1217
  2752  0269  0000               	nop
  2753                           
  2754                           ;flex_lcd.h: 69: _delay((unsigned long)((5500)*(32000000/4000000.0)));
  2755  026A  303A               	movlw	58
  2756  026B  00F4               	movwf	??_Lcd_Init
  2757  026C  3023               	movlw	35
  2758  026D                     u1227:	
  2759  026D  0B89               	decfsz	9,f
  2760  026E  2A6D               	goto	u1227
  2761  026F  0BF4               	decfsz	??_Lcd_Init,f
  2762  0270  2A6D               	goto	u1227
  2763  0271  0000               	nop
  2764                           
  2765                           ;flex_lcd.h: 70: _delay((unsigned long)((5500)*(32000000/4000000.0)));
  2766  0272  303A               	movlw	58
  2767  0273  00F4               	movwf	??_Lcd_Init
  2768  0274  3023               	movlw	35
  2769  0275                     u1237:	
  2770  0275  0B89               	decfsz	9,f
  2771  0276  2A75               	goto	u1237
  2772  0277  0BF4               	decfsz	??_Lcd_Init,f
  2773  0278  2A75               	goto	u1237
  2774  0279  0000               	nop
  2775                           
  2776                           ;flex_lcd.h: 71: _delay((unsigned long)((5500)*(32000000/4000000.0)));
  2777  027A  303A               	movlw	58
  2778  027B  00F4               	movwf	??_Lcd_Init
  2779  027C  3023               	movlw	35
  2780  027D                     u1247:	
  2781  027D  0B89               	decfsz	9,f
  2782  027E  2A7D               	goto	u1247
  2783  027F  0BF4               	decfsz	??_Lcd_Init,f
  2784  0280  2A7D               	goto	u1247
  2785  0281  0000               	nop
  2786                           
  2787                           ;flex_lcd.h: 72: for(data = 1; data < 4; data ++)
  2788  0282  01F5               	clrf	Lcd_Init@data
  2789  0283  0AF5               	incf	Lcd_Init@data,f
  2790  0284  3004               	movlw	4
  2791  0285  0275               	subwf	Lcd_Init@data,w
  2792  0286  1803               	btfsc	3,0
  2793  0287  2AB0               	goto	l56
  2794  0288                     l55:	
  2795                           
  2796                           ;flex_lcd.h: 73: {
  2797                           ;flex_lcd.h: 74: PORTCbits.RC3 = 0; PORTDbits.RD0 = 0; PORTDbits.RD1 = 1; PORTCbits.RC4 
      +                          = 1; PORTDbits.RD3 = 0;
  2798  0288  0140               	movlb	0	; select bank0
  2799  0289  118E               	bcf	14,3	;volatile
  2800  028A  100F               	bcf	15,0	;volatile
  2801  028B  148F               	bsf	15,1	;volatile
  2802  028C  160E               	bsf	14,4	;volatile
  2803  028D  118F               	bcf	15,3	;volatile
  2804                           
  2805                           ;flex_lcd.h: 75: PORTDbits.RD2 = 0; PORTCbits.RC3 = 0; PORTDbits.RD0 = 0; PORTDbits.RD1 
      +                          = 1; PORTCbits.RC4 = 1;
  2806  028E  110F               	bcf	15,2	;volatile
  2807  028F  118E               	bcf	14,3	;volatile
  2808  0290  100F               	bcf	15,0	;volatile
  2809  0291  148F               	bsf	15,1	;volatile
  2810  0292  160E               	bsf	14,4	;volatile
  2811                           
  2812                           ;flex_lcd.h: 76: PORTDbits.RD3 = 1; PORTDbits.RD2 = 0;
  2813  0293  158F               	bsf	15,3	;volatile
  2814  0294  110F               	bcf	15,2	;volatile
  2815                           
  2816                           ;flex_lcd.h: 77: _delay((unsigned long)((5)*(32000000/4000000.0)));
  2817  0295  300D               	movlw	13
  2818  0296                     u1257:	
  2819  0296  0B89               	decfsz	9,f
  2820  0297  2A96               	goto	u1257
  2821  0298  0000               	nop
  2822                           
  2823                           ;flex_lcd.h: 78: PORTCbits.RC3 = 0; PORTDbits.RD0 = 0; PORTDbits.RD1 = 1; PORTCbits.RC4 
      +                          = 1; PORTDbits.RD3 = 0;
  2824  0299  0140               	movlb	0	; select bank0
  2825  029A  118E               	bcf	14,3	;volatile
  2826  029B  100F               	bcf	15,0	;volatile
  2827  029C  148F               	bsf	15,1	;volatile
  2828  029D  160E               	bsf	14,4	;volatile
  2829  029E  118F               	bcf	15,3	;volatile
  2830                           
  2831                           ;flex_lcd.h: 79: PORTDbits.RD2 = 0;
  2832  029F  110F               	bcf	15,2	;volatile
  2833                           
  2834                           ;flex_lcd.h: 80: _delay((unsigned long)((5500)*(32000000/4000000.0)));
  2835  02A0  303A               	movlw	58
  2836  02A1  00F4               	movwf	??_Lcd_Init
  2837  02A2  3023               	movlw	35
  2838  02A3                     u1267:	
  2839  02A3  0B89               	decfsz	9,f
  2840  02A4  2AA3               	goto	u1267
  2841  02A5  0BF4               	decfsz	??_Lcd_Init,f
  2842  02A6  2AA3               	goto	u1267
  2843  02A7  0000               	nop
  2844  02A8  3001               	movlw	1
  2845  02A9  00F4               	movwf	??_Lcd_Init
  2846  02AA  0874               	movf	??_Lcd_Init,w
  2847  02AB  07F5               	addwf	Lcd_Init@data,f
  2848  02AC  3004               	movlw	4
  2849  02AD  0275               	subwf	Lcd_Init@data,w
  2850  02AE  1C03               	skipc
  2851  02AF  2A88               	goto	l55
  2852  02B0                     l56:	
  2853                           
  2854                           ;flex_lcd.h: 81: }
  2855                           ;flex_lcd.h: 82: PORTCbits.RC3 = 0; PORTDbits.RD0 = 0; PORTDbits.RD1 = 1; PORTCbits.RC4 
      +                          = 0; PORTDbits.RD3 = 0; PORTDbits.RD2 = 0;
  2856  02B0  0140               	movlb	0	; select bank0
  2857  02B1  118E               	bcf	14,3	;volatile
  2858  02B2  100F               	bcf	15,0	;volatile
  2859  02B3  148F               	bsf	15,1	;volatile
  2860  02B4  120E               	bcf	14,4	;volatile
  2861  02B5  118F               	bcf	15,3	;volatile
  2862  02B6  110F               	bcf	15,2	;volatile
  2863                           
  2864                           ;flex_lcd.h: 83: PORTCbits.RC3 = 0; PORTDbits.RD0 = 0; PORTDbits.RD1 = 1; PORTCbits.RC4 
      +                          = 0; PORTDbits.RD3 = 1; PORTDbits.RD2 = 0;
  2865  02B7  118E               	bcf	14,3	;volatile
  2866  02B8  100F               	bcf	15,0	;volatile
  2867  02B9  148F               	bsf	15,1	;volatile
  2868  02BA  120E               	bcf	14,4	;volatile
  2869  02BB  158F               	bsf	15,3	;volatile
  2870  02BC  110F               	bcf	15,2	;volatile
  2871                           
  2872                           ;flex_lcd.h: 84: _delay((unsigned long)((5)*(32000000/4000000.0)));
  2873  02BD  300D               	movlw	13
  2874  02BE                     u1277:	
  2875  02BE  0B89               	decfsz	9,f
  2876  02BF  2ABE               	goto	u1277
  2877  02C0  0000               	nop
  2878                           
  2879                           ;flex_lcd.h: 85: PORTCbits.RC3 = 0; PORTDbits.RD0 = 0; PORTDbits.RD1 = 1; PORTCbits.RC4 
      +                          = 0; PORTDbits.RD3 = 0; PORTDbits.RD2 = 0;
  2880  02C1  0140               	movlb	0	; select bank0
  2881  02C2  118E               	bcf	14,3	;volatile
  2882  02C3  100F               	bcf	15,0	;volatile
  2883  02C4  148F               	bsf	15,1	;volatile
  2884  02C5  120E               	bcf	14,4	;volatile
  2885  02C6  118F               	bcf	15,3	;volatile
  2886  02C7  110F               	bcf	15,2	;volatile
  2887                           
  2888                           ;flex_lcd.h: 86: _delay((unsigned long)((5500)*(32000000/4000000.0)));
  2889  02C8  303A               	movlw	58
  2890  02C9  00F4               	movwf	??_Lcd_Init
  2891  02CA  3023               	movlw	35
  2892  02CB                     u1287:	
  2893  02CB  0B89               	decfsz	9,f
  2894  02CC  2ACB               	goto	u1287
  2895  02CD  0BF4               	decfsz	??_Lcd_Init,f
  2896  02CE  2ACB               	goto	u1287
  2897  02CF  0000               	nop
  2898                           
  2899                           ;flex_lcd.h: 87: data = 40; Lcd_Cmd(data);
  2900  02D0  3028               	movlw	40
  2901  02D1  00F4               	movwf	??_Lcd_Init
  2902  02D2  0874               	movf	??_Lcd_Init,w
  2903  02D3  00F5               	movwf	Lcd_Init@data
  2904  02D4  0875               	movf	Lcd_Init@data,w
  2905  02D5  3183  2385  3182   	fcall	_Lcd_Cmd
  2906                           
  2907                           ;flex_lcd.h: 88: data = 16; Lcd_Cmd(data);
  2908  02D8  3010               	movlw	16
  2909  02D9  00F4               	movwf	??_Lcd_Init
  2910  02DA  0874               	movf	??_Lcd_Init,w
  2911  02DB  00F5               	movwf	Lcd_Init@data
  2912  02DC  0875               	movf	Lcd_Init@data,w
  2913  02DD  3183  2385  3182   	fcall	_Lcd_Cmd
  2914                           
  2915                           ;flex_lcd.h: 89: data = 1; Lcd_Cmd(data);
  2916  02E0  01F5               	clrf	Lcd_Init@data
  2917  02E1  0AF5               	incf	Lcd_Init@data,f
  2918  02E2  0875               	movf	Lcd_Init@data,w
  2919  02E3  3183  2385  3182   	fcall	_Lcd_Cmd
  2920                           
  2921                           ;flex_lcd.h: 90: data = 15; Lcd_Cmd(data);
  2922  02E6  300F               	movlw	15
  2923  02E7  00F4               	movwf	??_Lcd_Init
  2924  02E8  0874               	movf	??_Lcd_Init,w
  2925  02E9  00F5               	movwf	Lcd_Init@data
  2926  02EA  0875               	movf	Lcd_Init@data,w
  2927  02EB  3183  2385         	fcall	_Lcd_Cmd
  2928  02ED  0008               	return
  2929  02EE                     __end_of_Lcd_Init:	
  2930                           
  2931                           	psect	text10
  2932  0385                     __ptext10:	
  2933 ;; *************** function _Lcd_Cmd *****************
  2934 ;; Defined at:
  2935 ;;		line 150 in file "flex_lcd.h"
  2936 ;; Parameters:    Size  Location     Type
  2937 ;;  data            1    wreg     unsigned char 
  2938 ;; Auto vars:     Size  Location     Type
  2939 ;;  data            1    3[COMMON] unsigned char 
  2940 ;; Return value:  Size  Location     Type
  2941 ;;                  1    wreg      void 
  2942 ;; Registers used:
  2943 ;;		wreg, status,2, status,0
  2944 ;; Tracked objects:
  2945 ;;		On entry : 0/0
  2946 ;;		On exit  : 0/0
  2947 ;;		Unchanged: 0/0
  2948 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
  2949 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  2950 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  2951 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  2952 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  2953 ;;Total ram usage:        3 bytes
  2954 ;; Hardware stack levels used:    1
  2955 ;; Hardware stack levels required when called:    1
  2956 ;; This function calls:
  2957 ;;		Nothing
  2958 ;; This function is called by:
  2959 ;;		_Lcd_Init
  2960 ;;		_Lcd_Out
  2961 ;;		_Lcd_Out2
  2962 ;;		_main
  2963 ;; This function uses a non-reentrant model
  2964 ;;
  2965                           
  2966                           
  2967                           ;psect for function _Lcd_Cmd
  2968  0385                     _Lcd_Cmd:	
  2969                           
  2970                           ;incstack = 0
  2971                           ; Regs used in _Lcd_Cmd: [wreg+status,2+status,0]
  2972                           ;Lcd_Cmd@data stored from wreg
  2973  0385  00F3               	movwf	Lcd_Cmd@data
  2974                           
  2975                           ;flex_lcd.h: 151: PORTDbits.RD3 = 0; PORTDbits.RD2 = 0;
  2976  0386  0140               	movlb	0	; select bank0
  2977  0387  118F               	bcf	15,3	;volatile
  2978  0388  110F               	bcf	15,2	;volatile
  2979                           
  2980                           ;flex_lcd.h: 152: PORTCbits.RC3 = (data & 0b10000000)>>7; PORTDbits.RD0 = (data & 0b0100
      +                          0000)>>6;
  2981  0389  0873               	movf	Lcd_Cmd@data,w
  2982  038A  00F1               	movwf	??_Lcd_Cmd
  2983  038B  3007               	movlw	7
  2984  038C                     u555:	
  2985  038C  36F1               	lsrf	??_Lcd_Cmd,f
  2986  038D  0B89               	decfsz	9,f
  2987  038E  2B8C               	goto	u555
  2988  038F  0871               	movf	??_Lcd_Cmd,w
  2989  0390  3901               	andlw	1
  2990  0391  00F2               	movwf	??_Lcd_Cmd+1
  2991  0392  0DF2               	rlf	??_Lcd_Cmd+1,f
  2992  0393  0DF2               	rlf	??_Lcd_Cmd+1,f
  2993  0394  0DF2               	rlf	??_Lcd_Cmd+1,f
  2994  0395  080E               	movf	14,w	;volatile
  2995  0396  0672               	xorwf	??_Lcd_Cmd+1,w
  2996  0397  39F7               	andlw	-9
  2997  0398  0672               	xorwf	??_Lcd_Cmd+1,w
  2998  0399  008E               	movwf	14	;volatile
  2999  039A  0873               	movf	Lcd_Cmd@data,w
  3000  039B  00F1               	movwf	??_Lcd_Cmd
  3001  039C  3006               	movlw	6
  3002  039D                     u565:	
  3003  039D  36F1               	lsrf	??_Lcd_Cmd,f
  3004  039E  0B89               	decfsz	9,f
  3005  039F  2B9D               	goto	u565
  3006  03A0  3001               	movlw	1
  3007  03A1  0571               	andwf	??_Lcd_Cmd,w
  3008  03A2  00F2               	movwf	??_Lcd_Cmd+1
  3009  03A3  080F               	movf	15,w	;volatile
  3010  03A4  0672               	xorwf	??_Lcd_Cmd+1,w
  3011  03A5  39FE               	andlw	-2
  3012  03A6  0672               	xorwf	??_Lcd_Cmd+1,w
  3013  03A7  008F               	movwf	15	;volatile
  3014                           
  3015                           ;flex_lcd.h: 153: PORTDbits.RD1 = (data & 0b00100000)>>5; PORTCbits.RC4 = (data & 0b0001
      +                          0000)>>4;
  3016  03A8  0873               	movf	Lcd_Cmd@data,w
  3017  03A9  00F1               	movwf	??_Lcd_Cmd
  3018  03AA  3005               	movlw	5
  3019  03AB                     u575:	
  3020  03AB  36F1               	lsrf	??_Lcd_Cmd,f
  3021  03AC  0B89               	decfsz	9,f
  3022  03AD  2BAB               	goto	u575
  3023  03AE  0871               	movf	??_Lcd_Cmd,w
  3024  03AF  3901               	andlw	1
  3025  03B0  00F2               	movwf	??_Lcd_Cmd+1
  3026  03B1  0DF2               	rlf	??_Lcd_Cmd+1,f
  3027  03B2  080F               	movf	15,w	;volatile
  3028  03B3  0672               	xorwf	??_Lcd_Cmd+1,w
  3029  03B4  39FD               	andlw	-3
  3030  03B5  0672               	xorwf	??_Lcd_Cmd+1,w
  3031  03B6  008F               	movwf	15	;volatile
  3032  03B7  0873               	movf	Lcd_Cmd@data,w
  3033  03B8  00F1               	movwf	??_Lcd_Cmd
  3034  03B9  3004               	movlw	4
  3035  03BA                     u585:	
  3036  03BA  36F1               	lsrf	??_Lcd_Cmd,f
  3037  03BB  0B89               	decfsz	9,f
  3038  03BC  2BBA               	goto	u585
  3039  03BD  0871               	movf	??_Lcd_Cmd,w
  3040  03BE  3901               	andlw	1
  3041  03BF  00F2               	movwf	??_Lcd_Cmd+1
  3042  03C0  0EF2               	swapf	??_Lcd_Cmd+1,f
  3043  03C1  080E               	movf	14,w	;volatile
  3044  03C2  0672               	xorwf	??_Lcd_Cmd+1,w
  3045  03C3  39EF               	andlw	-17
  3046  03C4  0672               	xorwf	??_Lcd_Cmd+1,w
  3047  03C5  008E               	movwf	14	;volatile
  3048                           
  3049                           ;flex_lcd.h: 154: _delay(10);
  3050  03C6  3003               	movlw	3
  3051  03C7                     u1297:	
  3052  03C7  0B89               	decfsz	9,f
  3053  03C8  2BC7               	goto	u1297
  3054  03C9  0000               	nop
  3055                           
  3056                           ;flex_lcd.h: 155: PORTDbits.RD3 = 1; _delay((unsigned long)((5)*(32000000/4000000.0))); 
      +                          PORTDbits.RD3 = 0;
  3057  03CA  0140               	movlb	0	; select bank0
  3058  03CB  158F               	bsf	15,3	;volatile
  3059  03CC  300D               	movlw	13
  3060  03CD                     u1307:	
  3061  03CD  0B89               	decfsz	9,f
  3062  03CE  2BCD               	goto	u1307
  3063  03CF  0000               	nop
  3064  03D0  0140               	movlb	0	; select bank0
  3065  03D1  118F               	bcf	15,3	;volatile
  3066                           
  3067                           ;flex_lcd.h: 156: PORTCbits.RC3 = (data & 0b00001000)>>3; PORTDbits.RD0 = (data & 0b0000
      +                          0100)>>2;
  3068  03D2  0873               	movf	Lcd_Cmd@data,w
  3069  03D3  00F1               	movwf	??_Lcd_Cmd
  3070  03D4  3003               	movlw	3
  3071  03D5                     u595:	
  3072  03D5  36F1               	lsrf	??_Lcd_Cmd,f
  3073  03D6  0B89               	decfsz	9,f
  3074  03D7  2BD5               	goto	u595
  3075  03D8  0871               	movf	??_Lcd_Cmd,w
  3076  03D9  3901               	andlw	1
  3077  03DA  00F2               	movwf	??_Lcd_Cmd+1
  3078  03DB  0DF2               	rlf	??_Lcd_Cmd+1,f
  3079  03DC  0DF2               	rlf	??_Lcd_Cmd+1,f
  3080  03DD  0DF2               	rlf	??_Lcd_Cmd+1,f
  3081  03DE  080E               	movf	14,w	;volatile
  3082  03DF  0672               	xorwf	??_Lcd_Cmd+1,w
  3083  03E0  39F7               	andlw	-9
  3084  03E1  0672               	xorwf	??_Lcd_Cmd+1,w
  3085  03E2  008E               	movwf	14	;volatile
  3086  03E3  0873               	movf	Lcd_Cmd@data,w
  3087  03E4  00F1               	movwf	??_Lcd_Cmd
  3088  03E5  3002               	movlw	2
  3089  03E6                     u605:	
  3090  03E6  36F1               	lsrf	??_Lcd_Cmd,f
  3091  03E7  0B89               	decfsz	9,f
  3092  03E8  2BE6               	goto	u605
  3093  03E9  3001               	movlw	1
  3094  03EA  0571               	andwf	??_Lcd_Cmd,w
  3095  03EB  00F2               	movwf	??_Lcd_Cmd+1
  3096  03EC  080F               	movf	15,w	;volatile
  3097  03ED  0672               	xorwf	??_Lcd_Cmd+1,w
  3098  03EE  39FE               	andlw	-2
  3099  03EF  0672               	xorwf	??_Lcd_Cmd+1,w
  3100  03F0  008F               	movwf	15	;volatile
  3101                           
  3102                           ;flex_lcd.h: 157: PORTDbits.RD1 = (data & 0b00000010)>>1; PORTCbits.RC4 = (data & 0b0000
      +                          0001);
  3103  03F1  3673               	lsrf	Lcd_Cmd@data,w
  3104  03F2  3901               	andlw	1
  3105  03F3  00F1               	movwf	??_Lcd_Cmd
  3106  03F4  0DF1               	rlf	??_Lcd_Cmd,f
  3107  03F5  080F               	movf	15,w	;volatile
  3108  03F6  0671               	xorwf	??_Lcd_Cmd,w
  3109  03F7  39FD               	andlw	-3
  3110  03F8  0671               	xorwf	??_Lcd_Cmd,w
  3111  03F9  008F               	movwf	15	;volatile
  3112  03FA  0873               	movf	Lcd_Cmd@data,w
  3113  03FB  3901               	andlw	1
  3114  03FC  00F1               	movwf	??_Lcd_Cmd
  3115  03FD  0EF1               	swapf	??_Lcd_Cmd,f
  3116  03FE  080E               	movf	14,w	;volatile
  3117  03FF  0671               	xorwf	??_Lcd_Cmd,w
  3118  0400  39EF               	andlw	-17
  3119  0401  0671               	xorwf	??_Lcd_Cmd,w
  3120  0402  008E               	movwf	14	;volatile
  3121                           
  3122                           ;flex_lcd.h: 158: _delay(10);
  3123  0403  3003               	movlw	3
  3124  0404                     u1317:	
  3125  0404  0B89               	decfsz	9,f
  3126  0405  2C04               	goto	u1317
  3127  0406  0000               	nop
  3128                           
  3129                           ;flex_lcd.h: 159: PORTDbits.RD3 = 1; _delay((unsigned long)((5)*(32000000/4000000.0))); 
      +                          PORTDbits.RD3 = 0;
  3130  0407  0140               	movlb	0	; select bank0
  3131  0408  158F               	bsf	15,3	;volatile
  3132  0409  300D               	movlw	13
  3133  040A                     u1327:	
  3134  040A  0B89               	decfsz	9,f
  3135  040B  2C0A               	goto	u1327
  3136  040C  0000               	nop
  3137  040D  0140               	movlb	0	; select bank0
  3138  040E  118F               	bcf	15,3	;volatile
  3139                           
  3140                           ;flex_lcd.h: 160: _delay((unsigned long)((5500)*(32000000/4000000.0)));
  3141  040F  303A               	movlw	58
  3142  0410  00F1               	movwf	??_Lcd_Cmd
  3143  0411  3023               	movlw	35
  3144  0412                     u1337:	
  3145  0412  0B89               	decfsz	9,f
  3146  0413  2C12               	goto	u1337
  3147  0414  0BF1               	decfsz	??_Lcd_Cmd,f
  3148  0415  2C12               	goto	u1337
  3149  0416  0000               	nop
  3150  0417  0008               	return
  3151  0418                     __end_of_Lcd_Cmd:	
  3152                           
  3153                           	psect	intentry
  3154  0004                     __pintentry:	
  3155 ;; *************** function _interrupcion *****************
  3156 ;; Defined at:
  3157 ;;		line 22 in file "main.c"
  3158 ;; Parameters:    Size  Location     Type
  3159 ;;		None
  3160 ;; Auto vars:     Size  Location     Type
  3161 ;;		None
  3162 ;; Return value:  Size  Location     Type
  3163 ;;                  1    wreg      void 
  3164 ;; Registers used:
  3165 ;;		None
  3166 ;; Tracked objects:
  3167 ;;		On entry : 0/0
  3168 ;;		On exit  : 0/0
  3169 ;;		Unchanged: 0/0
  3170 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
  3171 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  3172 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  3173 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  3174 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  3175 ;;Total ram usage:        1 bytes
  3176 ;; Hardware stack levels used:    1
  3177 ;; This function calls:
  3178 ;;		Nothing
  3179 ;; This function is called by:
  3180 ;;		Interrupt level 1
  3181 ;; This function uses a non-reentrant model
  3182 ;;
  3183                           
  3184  0004                     _interrupcion:	
  3185                           
  3186                           ;incstack = 0
  3187  0004  147E               	bsf	126,0	;set compiler interrupt flag (level 1)
  3188                           
  3189                           ; Regs used in _interrupcion: []
  3190  0005  3180               	pagesel	$
  3191  0006  0140               	movlb	0	; select bank0
  3192  0007  087F               	movf	127,w
  3193  0008  00F0               	movwf	??_interrupcion
  3194                           
  3195                           ;main.c: 24: PIR4bits.TMR1IF=0;
  3196  0009  014E               	movlb	14	; select bank14
  3197  000A  1010               	bcf	16,0	;volatile
  3198  000B  0870               	movf	??_interrupcion,w
  3199  000C  0140               	movlb	0	; select bank0
  3200  000D  00FF               	movwf	127
  3201  000E  107E               	bcf	126,0	;clear compiler interrupt flag (level 1)
  3202  000F  0009               	retfie
  3203  0010                     __end_of_interrupcion:	
  3204  007E                     btemp	set	126	;btemp
  3205  007E                     int$flags	set	126
  3206  007E                     wtemp0	set	126


Data Sizes:
    Strings     32
    Constant    10
    Data        2
    BSS         6
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     13      13
    BANK0            80     41      49
    BANK1            80      0       0
    BANK2            80      0       0
    BANK3            80      0       0
    BANK4            80      0       0
    BANK5            80      0       0
    BANK6            80      0       0
    BANK7            80      0       0
    BANK8            80      0       0
    BANK9            80      0       0
    BANK10           80      0       0
    BANK11           80      0       0
    BANK12           80      0       0
    BANK13           80      0       0
    BANK14           80      0       0
    BANK15           80      0       0
    BANK16           80      0       0
    BANK17           80      0       0
    BANK18           80      0       0
    BANK19           80      0       0
    BANK20           80      0       0
    BANK21           80      0       0
    BANK22           80      0       0
    BANK23           80      0       0
    BANK24           80      0       0
    BANK25           80      0       0
    BANK26           80      0       0
    BANK27           80      0       0
    BANK28           80      0       0
    BANK29           80      0       0
    BANK30           80      0       0
    BANK31           80      0       0
    BANK32           80      0       0
    BANK33           80      0       0
    BANK34           80      0       0
    BANK35           80      0       0
    BANK36           80      0       0
    BANK37           80      0       0
    BANK38           80      0       0
    BANK39           80      0       0
    BANK40           80      0       0
    BANK41           80      0       0
    BANK42           80      0       0
    BANK43           80      0       0
    BANK44           80      0       0
    BANK45           80      0       0
    BANK46           80      0       0
    BANK47           80      0       0
    BANK48           80      0       0
    BANK49           80      0       0
    BANK50           80      0       0

Pointer List with Targets:

    sprintf@f	PTR const unsigned char  size(2) Largest target is 14
		 -> STR_1(CODE[14]), 

    sprintf@sp	PTR unsigned char  size(1) Largest target is 16
		 -> main@buffer1(BANK0[16]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    Lcd_Out2@buffer	PTR unsigned char  size(1) Largest target is 16
		 -> main@buffer1(BANK0[16]), 

    Lcd_Out@buffer	PTR const unsigned char  size(2) Largest target is 15
		 -> STR_3(CODE[15]), STR_2(CODE[3]), 


Critical Paths under _main in COMMON

    _sprintf->___lwmod
    ___lwmod->___lwdiv
    _Lcd_Out2->_Lcd_Chr_CP
    _Lcd_Out2->_Lcd_Cmd
    _Lcd_Out->_Lcd_Chr_CP
    _Lcd_Out->_Lcd_Cmd
    _Lcd_Init->_Lcd_Cmd

Critical Paths under _interrupcion in COMMON

    None.

Critical Paths under _main in BANK0

    _main->_sprintf
    _sprintf->___lwmod

Critical Paths under _interrupcion in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _interrupcion in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _interrupcion in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _interrupcion in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _interrupcion in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _interrupcion in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _interrupcion in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _interrupcion in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _interrupcion in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _interrupcion in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _interrupcion in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _interrupcion in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _interrupcion in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _interrupcion in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _interrupcion in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _interrupcion in BANK15

    None.

Critical Paths under _main in BANK16

    None.

Critical Paths under _interrupcion in BANK16

    None.

Critical Paths under _main in BANK17

    None.

Critical Paths under _interrupcion in BANK17

    None.

Critical Paths under _main in BANK18

    None.

Critical Paths under _interrupcion in BANK18

    None.

Critical Paths under _main in BANK19

    None.

Critical Paths under _interrupcion in BANK19

    None.

Critical Paths under _main in BANK20

    None.

Critical Paths under _interrupcion in BANK20

    None.

Critical Paths under _main in BANK21

    None.

Critical Paths under _interrupcion in BANK21

    None.

Critical Paths under _main in BANK22

    None.

Critical Paths under _interrupcion in BANK22

    None.

Critical Paths under _main in BANK23

    None.

Critical Paths under _interrupcion in BANK23

    None.

Critical Paths under _main in BANK24

    None.

Critical Paths under _interrupcion in BANK24

    None.

Critical Paths under _main in BANK25

    None.

Critical Paths under _interrupcion in BANK25

    None.

Critical Paths under _main in BANK26

    None.

Critical Paths under _interrupcion in BANK26

    None.

Critical Paths under _main in BANK27

    None.

Critical Paths under _interrupcion in BANK27

    None.

Critical Paths under _main in BANK28

    None.

Critical Paths under _interrupcion in BANK28

    None.

Critical Paths under _main in BANK29

    None.

Critical Paths under _interrupcion in BANK29

    None.

Critical Paths under _main in BANK30

    None.

Critical Paths under _interrupcion in BANK30

    None.

Critical Paths under _main in BANK31

    None.

Critical Paths under _interrupcion in BANK31

    None.

Critical Paths under _main in BANK32

    None.

Critical Paths under _interrupcion in BANK32

    None.

Critical Paths under _main in BANK33

    None.

Critical Paths under _interrupcion in BANK33

    None.

Critical Paths under _main in BANK34

    None.

Critical Paths under _interrupcion in BANK34

    None.

Critical Paths under _main in BANK35

    None.

Critical Paths under _interrupcion in BANK35

    None.

Critical Paths under _main in BANK36

    None.

Critical Paths under _interrupcion in BANK36

    None.

Critical Paths under _main in BANK37

    None.

Critical Paths under _interrupcion in BANK37

    None.

Critical Paths under _main in BANK38

    None.

Critical Paths under _interrupcion in BANK38

    None.

Critical Paths under _main in BANK39

    None.

Critical Paths under _interrupcion in BANK39

    None.

Critical Paths under _main in BANK40

    None.

Critical Paths under _interrupcion in BANK40

    None.

Critical Paths under _main in BANK41

    None.

Critical Paths under _interrupcion in BANK41

    None.

Critical Paths under _main in BANK42

    None.

Critical Paths under _interrupcion in BANK42

    None.

Critical Paths under _main in BANK43

    None.

Critical Paths under _interrupcion in BANK43

    None.

Critical Paths under _main in BANK44

    None.

Critical Paths under _interrupcion in BANK44

    None.

Critical Paths under _main in BANK45

    None.

Critical Paths under _interrupcion in BANK45

    None.

Critical Paths under _main in BANK46

    None.

Critical Paths under _interrupcion in BANK46

    None.

Critical Paths under _main in BANK47

    None.

Critical Paths under _interrupcion in BANK47

    None.

Critical Paths under _main in BANK48

    None.

Critical Paths under _interrupcion in BANK48

    None.

Critical Paths under _main in BANK49

    None.

Critical Paths under _interrupcion in BANK49

    None.

Critical Paths under _main in BANK50

    None.

Critical Paths under _interrupcion in BANK50

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                22    18      4    4251
                                             19 BANK0     22    18      4
                            _Lcd_Cmd
                           _Lcd_Init
                            _Lcd_Out
                           _Lcd_Out2
                            ___lwdiv
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             25    21      4    1837
                                              2 BANK0     17    13      4
                            ___lwdiv
                            ___lwmod
                             ___wmul
                            _isdigit
 ---------------------------------------------------------------------------------
 (2) _isdigit                                              2     2      0      68
                                              1 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4     220
                                              1 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (2) ___lwmod                                              6     2      4     287
                                              9 COMMON     4     0      4
                                              0 BANK0      2     2      0
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              8     4      4     418
                                              1 COMMON     8     4      4
 ---------------------------------------------------------------------------------
 (1) _Lcd_Out2                                             5     3      2     661
                                              4 COMMON     5     3      2
                         _Lcd_Chr_CP
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (1) _Lcd_Out                                              6     3      3     789
                                              4 COMMON     6     3      3
                         _Lcd_Chr_CP
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (2) _Lcd_Chr_CP                                           3     3      0     176
                                              1 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (1) _Lcd_Init                                             2     2      0     314
                                              4 COMMON     2     2      0
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (2) _Lcd_Cmd                                              3     3      0     176
                                              1 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _interrupcion                                         1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Lcd_Cmd
   _Lcd_Init
     _Lcd_Cmd
   _Lcd_Out
     _Lcd_Chr_CP
     _Lcd_Cmd
   _Lcd_Out2
     _Lcd_Chr_CP
     _Lcd_Cmd
   ___lwdiv
   _sprintf
     ___lwdiv
     ___lwmod
       ___lwdiv (ARG)
     ___wmul
     _isdigit

 _interrupcion (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             FF0      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      D       D       2       92.9%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     29      31       5       61.3%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BITBANK2            50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BANK2               50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BITBANK3            50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BANK3               50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITBANK4            50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BANK4               50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITBANK5            50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BANK5               50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITBANK6            50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BANK6               50      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITBANK7            50      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BANK7               50      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITBANK8            50      0       0      20        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BANK8               50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BITBANK9            50      0       0      22        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BANK9               50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BITBANK10           50      0       0      24        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BANK10              50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BITBANK11           50      0       0      26        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BANK11              50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
ABS                  0      0      3E      28        0.0%
BITBANK12           50      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BANK12              50      0       0      30        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITBANK13           50      0       0      31        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BANK13              50      0       0      32        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%
BITBANK14           50      0       0      33        0.0%
BITSFR32             0      0       0      33        0.0%
SFR32                0      0       0      33        0.0%
BANK14              50      0       0      34        0.0%
BITSFR33             0      0       0      34        0.0%
SFR33                0      0       0      34        0.0%
BITBANK15           50      0       0      35        0.0%
BITSFR34             0      0       0      35        0.0%
SFR34                0      0       0      35        0.0%
BANK15              50      0       0      36        0.0%
BITSFR35             0      0       0      36        0.0%
SFR35                0      0       0      36        0.0%
BITBANK16           50      0       0      37        0.0%
BITSFR36             0      0       0      37        0.0%
SFR36                0      0       0      37        0.0%
BANK16              50      0       0      38        0.0%
BITSFR37             0      0       0      38        0.0%
SFR37                0      0       0      38        0.0%
BITBANK17           50      0       0      39        0.0%
BITSFR38             0      0       0      39        0.0%
SFR38                0      0       0      39        0.0%
BANK17              50      0       0      40        0.0%
BITSFR39             0      0       0      40        0.0%
SFR39                0      0       0      40        0.0%
BITBANK18           50      0       0      41        0.0%
BITSFR40             0      0       0      41        0.0%
SFR40                0      0       0      41        0.0%
BANK18              50      0       0      42        0.0%
BITSFR41             0      0       0      42        0.0%
SFR41                0      0       0      42        0.0%
BITBANK19           50      0       0      43        0.0%
BITSFR42             0      0       0      43        0.0%
SFR42                0      0       0      43        0.0%
BANK19              50      0       0      44        0.0%
BITSFR43             0      0       0      44        0.0%
SFR43                0      0       0      44        0.0%
BITBANK20           50      0       0      45        0.0%
BITSFR44             0      0       0      45        0.0%
SFR44                0      0       0      45        0.0%
BANK20              50      0       0      46        0.0%
BITSFR45             0      0       0      46        0.0%
SFR45                0      0       0      46        0.0%
BITBANK21           50      0       0      47        0.0%
BITSFR46             0      0       0      47        0.0%
SFR46                0      0       0      47        0.0%
BANK21              50      0       0      48        0.0%
BITSFR47             0      0       0      48        0.0%
SFR47                0      0       0      48        0.0%
BITBANK22           50      0       0      49        0.0%
BITSFR48             0      0       0      49        0.0%
SFR48                0      0       0      49        0.0%
BANK22              50      0       0      50        0.0%
BITSFR49             0      0       0      50        0.0%
SFR49                0      0       0      50        0.0%
BITBANK23           50      0       0      51        0.0%
BITSFR50             0      0       0      51        0.0%
SFR50                0      0       0      51        0.0%
BANK23              50      0       0      52        0.0%
BITSFR51             0      0       0      52        0.0%
SFR51                0      0       0      52        0.0%
BITBANK24           50      0       0      53        0.0%
BITSFR52             0      0       0      53        0.0%
SFR52                0      0       0      53        0.0%
BANK24              50      0       0      54        0.0%
BITSFR53             0      0       0      54        0.0%
SFR53                0      0       0      54        0.0%
BITBANK25           50      0       0      55        0.0%
BITSFR54             0      0       0      55        0.0%
SFR54                0      0       0      55        0.0%
BANK25              50      0       0      56        0.0%
BITSFR55             0      0       0      56        0.0%
SFR55                0      0       0      56        0.0%
BITBANK26           50      0       0      57        0.0%
BITSFR56             0      0       0      57        0.0%
SFR56                0      0       0      57        0.0%
BANK26              50      0       0      58        0.0%
BITSFR57             0      0       0      58        0.0%
SFR57                0      0       0      58        0.0%
BITSFR58             0      0       0      59        0.0%
SFR58                0      0       0      59        0.0%
DATA                 0      0      3E      59        0.0%
BITBANK27           50      0       0      60        0.0%
BITSFR59             0      0       0      60        0.0%
SFR59                0      0       0      60        0.0%
BANK27              50      0       0      61        0.0%
BITSFR60             0      0       0      61        0.0%
SFR60                0      0       0      61        0.0%
BITBANK28           50      0       0      62        0.0%
BITSFR61             0      0       0      62        0.0%
SFR61                0      0       0      62        0.0%
BANK28              50      0       0      63        0.0%
BITSFR62             0      0       0      63        0.0%
SFR62                0      0       0      63        0.0%
BITBANK29           50      0       0      64        0.0%
BITSFR63             0      0       0      64        0.0%
SFR63                0      0       0      64        0.0%
BANK29              50      0       0      65        0.0%
BITBANK30           50      0       0      66        0.0%
BANK30              50      0       0      67        0.0%
BITBANK31           50      0       0      68        0.0%
BANK31              50      0       0      69        0.0%
BITBANK32           50      0       0      70        0.0%
BANK32              50      0       0      71        0.0%
BITBANK33           50      0       0      72        0.0%
BANK33              50      0       0      73        0.0%
BITBANK34           50      0       0      74        0.0%
BANK34              50      0       0      75        0.0%
BITBANK35           50      0       0      76        0.0%
BANK35              50      0       0      77        0.0%
BITBANK36           50      0       0      78        0.0%
BANK36              50      0       0      79        0.0%
BITBANK37           50      0       0      80        0.0%
BANK37              50      0       0      81        0.0%
BITBANK38           50      0       0      82        0.0%
BANK38              50      0       0      83        0.0%
BITBANK39           50      0       0      84        0.0%
BANK39              50      0       0      85        0.0%
BITBANK40           50      0       0      86        0.0%
BANK40              50      0       0      87        0.0%
BITBANK41           50      0       0      88        0.0%
BANK41              50      0       0      89        0.0%
BITBANK42           50      0       0      90        0.0%
BANK42              50      0       0      91        0.0%
BITBANK43           50      0       0      92        0.0%
BANK43              50      0       0      93        0.0%
BITBANK44           50      0       0      94        0.0%
BANK44              50      0       0      95        0.0%
BITBANK45           50      0       0      96        0.0%
BANK45              50      0       0      97        0.0%
BITBANK46           50      0       0      98        0.0%
BANK46              50      0       0      99        0.0%
BITBANK47           50      0       0     100        0.0%
BANK47              50      0       0     101        0.0%
BITBANK48           50      0       0     102        0.0%
BANK48              50      0       0     103        0.0%
BITBANK49           50      0       0     104        0.0%
BANK49              50      0       0     105        0.0%
BITBANK50           50      0       0     106        0.0%
BANK50              50      0       0     107        0.0%


Microchip Technology PIC Macro Assembler V1.45 build -152302408 
Symbol Table                                                                                   Thu Oct 04 12:06:35 2018

            __CFG_CP$OFF 0000                       l55 0288                       l56 02B0  
    ___wmul@multiplicand 0073              __CFG_LVP$ON 0000                      l111 01BA  
                    l114 0218                      l108 01B6                      l146 00EA  
                    l239 04ED             __CFG_CPD$OFF 0000                      u605 03E6  
                    u615 02F5                      u625 0306                      u705 04EE  
                    u555 038C                      u635 0314                      u715 04F3  
                    u565 039D                      u645 0323                      u575 03AB  
                    u655 033E                      u815 04C2                      u585 03BA  
                    u665 034F                      u745 048F                      u595 03D5  
                    u835 04D1                      u765 0499                      u845 04D8  
                    u775 04A3                      u785 04AB                      u955 00D4  
                    u995 00F9             __CFG_BORV$LO 0000                      wreg 0009  
           __CFG_ZCD$OFF 0000              main@buffer1 0039                     l1102 04BF  
                   l1200 0460                     l1104 04CB                     l1112 04E0  
                   l1202 046E                     l1050 0533                     l1108 04D7  
                   l1208 0472                     l1080 0498                     l1056 04E7  
                   l1224 005C                     l1170 041D                     l1090 04B3  
                   l1234 008A                     l1218 004C                     l1172 0420  
                   l1180 0437                     l1252 00BF                     l1236 00A2  
                   l1174 0423                     l1190 0451                     l1086 04AA  
                   l1078 048C                     l1270 010D                     l1246 00B9  
                   l1168 041A                     l1192 0454                     l1336 01AB  
                   l1186 043B                     l1178 0429                     l1194 0457  
                   l1290 0133                     l1282 012F                     l1266 0106  
                   l1258 00DE                     l1196 045A                     l1276 0120  
                   l1268 0109                     l1292 0029                     l1364 0238  
                   l1294 016D                     STR_1 0519                     STR_2 0535  
                   STR_3 050A                     u1107 01B1                     u1117 022E  
                   u1207 025D                     u1127 023E                     u1217 0265  
                   u1137 0330                     u1307 03CD                     u1227 026D  
                   u1147 0336                     u1075 01E3                     u1317 0404  
                   u1237 0275                     u1157 036D                     u1085 01EF  
                   u1327 040A                     u1247 027D                     u1167 0373  
                   u1337 0412                     u1257 0296                     u1177 0379  
                   u1097 01A5                     u1267 02A3                     u1187 037F  
                   u1277 02BE                     u1197 0255                     u1287 02CB  
                   u1297 03C7                     _TMR1 020C             __CFG_WRT$OFF 0000  
          __CFG_FCMEN$ON 0000                     _main 0173                     fsr0h 0005  
                   fsr1h 0007                     indf0 0000                     fsr0l 0004  
                   indf1 0001                     fsr1l 0006                     btemp 007E  
          __CFG_BOREN$ON 0000                     start 0010          __end_of_Lcd_Cmd 0418  
        __end_of_Lcd_Out 044F            __CFG_CSWEN$ON 0000            __CFG_MCLRE$ON 0000  
             _Lcd_Chr_CP 02EE           Lcd_Out2@buffer 0075                    ?_main 0033  
          __CFG_WDTE$OFF 0000          __end_of___lwdiv 04B8          __end_of___lwmod 04E5  
                  _PORTA 000C                    _PORTB 000D                    _PORTC 000E  
                  _PORTD 000F                    _TRISB 0012            __CFG_PWRTE$ON 0000  
        __end_of_dpowers 050A          __end_of_isdigit 0535                    status 0003  
                  wtemp0 007E          __end_of_sprintf 0173         __end_of_Lcd_Init 02EE  
       __end_of_Lcd_Out2 0484          __initialization 0012             __end_of_main 0245  
                 ??_main 0037                   _ANSELA 1F38                   _ANSELB 1F43  
                 _ANSELC 1F4E                   _ANSELD 1F59           __CFG_WDTCCS$SC 0000  
              ??_Lcd_Cmd 0071                ??_Lcd_Out 0077              ?_Lcd_Chr_CP 0070  
                 ___wmul 04E5           __CFG_STVREN$ON 0000                ??___lwdiv 0075  
              ??___lwmod 0020                ??_isdigit 0071                ??_sprintf 0026  
__end_of__initialization 001F           __pcstackCOMMON 0070            ?_interrupcion 0070  
           __pidataBANK0 0538                ?_Lcd_Init 0070                ?_Lcd_Out2 0074  
           sprintf@width 0030      __size_of_Lcd_Chr_CP 0097               __pbssBANK0 0049  
         ??_interrupcion 0070               __pmaintext 0173                  ?___wmul 0071  
        __CFG_PPS1WAY$ON 0000               __pintentry 0004      __CFG_RSTOSC$HFINT32 0000  
             ??_Lcd_Init 0074               ??_Lcd_Out2 0076                  _Lcd_Cmd 0385  
                _Lcd_Out 0418     __CFG_SCANE$available 0000          __size_of___wmul 001B  
                ___lwdiv 0484                  ___lwmod 04B8                  __ptext1 0023  
                __ptext2 0527                  __ptext3 04E5                  __ptext4 04B8  
                __ptext5 0484                  __ptext6 044F                  __ptext7 0418  
                __ptext8 02EE                  __ptext9 0245                _T1CLKbits 0211  
              _T1CONbits 020E                  _dpowers 0500                  _isdigit 0527  
                _sprintf 0023     end_of_initialization 001F             ??_Lcd_Chr_CP 0071  
              Lcd_Out2@x 0074                Lcd_Out2@y 0077    __CFG_WDTCPS$WDTCPS_31 0000  
              _PORTAbits 000C                _PORTCbits 000E                _PORTDbits 000F  
              _TRISAbits 0011                _TRISCbits 0013                _TRISDbits 0014  
   __end_of_interrupcion 0010         __CFG_FEXTOSC$OFF 0000       __end_of_Lcd_Chr_CP 0385  
         __end_of___wmul 0500      start_initialization 0012            Lcd_Out@buffer 0075  
      __size_of_Lcd_Init 00A9        __size_of_Lcd_Out2 0035         __CFG_LPBOREN$OFF 0000  
               ??___wmul 0075              _calibracion 004F              __pdataBANK0 004F  
              ___latbits 0004            __pcstackBANK0 0020                 ?_Lcd_Cmd 0070  
            sprintf@flag 002C                 ?_Lcd_Out 0074              sprintf@prec 002B  
       ___lwdiv@dividend 0073                 ?___lwdiv 0071                 ?___lwmod 0079  
              _distancia 0049    __size_of_interrupcion 000C                 ?_isdigit 0070  
       ___lwdiv@quotient 0076                 ?_sprintf 0022           ___wmul@product 0075  
               _LATAbits 0016                 _LATBbits 0017                 _PIR4bits 0710  
               Lcd_Out@x 0074                 Lcd_Out@y 0078             _interrupcion 0004  
           Lcd_Init@data 0075        ___wmul@multiplier 0071             Lcd_Out2@data 0078  
               _Lcd_Init 0245                 _Lcd_Out2 044F         __size_of_Lcd_Cmd 0093  
       __size_of_Lcd_Out 0037         __size_of___lwdiv 0034         __size_of___lwmod 002D  
            _isdigit$726 0071               sprintf@val 002D         __size_of_isdigit 000E  
         Lcd_Chr_CP@data 0073          ___lwdiv@divisor 0071          ___lwdiv@counter 0078  
               __ptext10 0385         __size_of_sprintf 0150              Lcd_Cmd@data 0073  
          __size_of_main 00D2     __CFG_WDTCWS$WDTCWS_7 0000                 _tiempons 004D  
               _tiempous 004B                 int$flags 007E                 main@argc 0033  
               main@argv 0035              Lcd_Out@data 0079                 isdigit@c 0072  
               intlevel1 0000                sprintf@ap 002A                sprintf@sp 002F  
       ___lwmod@dividend 007B        __CFG_CLKOUTEN$OFF 0000               _OSCFRQbits 0893  
          __pstringtext1 0500            __pstringtext2 0519            __pstringtext3 0535  
          __pstringtext4 0000                 sprintf@c 0032                 sprintf@f 0022  
        ___lwmod@divisor 0079          ___lwmod@counter 0021  
