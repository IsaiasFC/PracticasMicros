

Microchip Technology PIC LITE Macro Assembler V1.45 build -152302408 
                                                                                               Wed Oct 03 15:46:07 2018

Microchip Technology Omniscient Code Generator v1.45 (Free mode) build 201711160504
     1                           	processor	16F18877
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	idataBANK0,global,class=CODE,delta=2
     5                           	psect	idataBANK1,global,class=CODE,delta=2
     6                           	psect	stringtext1,global,class=STRCODE,delta=2
     7                           	psect	stringtext2,global,class=STRCODE,delta=2
     8                           	psect	stringtext3,global,class=STRCODE,delta=2
     9                           	psect	stringtext4,global,class=STRCODE,delta=2
    10                           	psect	cinit,global,class=CODE,merge=1,delta=2
    11                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    12                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
    13                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    14                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1
    15                           	psect	cstackBANK2,global,class=BANK2,space=1,delta=1
    16                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    17                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    18                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    19                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    20                           	psect	text1,local,class=CODE,merge=1,delta=2
    21                           	psect	text2,local,class=CODE,merge=1,delta=2
    22                           	psect	text3,local,class=CODE,merge=1,delta=2,group=2
    23                           	psect	text4,local,class=CODE,merge=1,delta=2
    24                           	psect	text5,local,class=CODE,merge=1,delta=2,group=2
    25                           	psect	text6,local,class=CODE,merge=1,delta=2,group=2
    26                           	psect	text7,local,class=CODE,merge=1,delta=2,group=2
    27                           	psect	text8,local,class=CODE,merge=1,delta=2,group=2
    28                           	psect	text9,local,class=CODE,merge=1,delta=2,group=2
    29                           	psect	text10,local,class=CODE,merge=1,delta=2,group=2
    30                           	psect	text11,local,class=CODE,merge=1,delta=2,group=2
    31                           	psect	text12,local,class=CODE,merge=1,delta=2,group=2
    32                           	psect	text13,local,class=CODE,merge=1,delta=2,group=2
    33                           	psect	text14,local,class=CODE,merge=1,delta=2,group=2
    34                           	psect	text15,local,class=CODE,merge=1,delta=2,group=2
    35                           	psect	text16,local,class=CODE,merge=1,delta=2,group=2
    36                           	psect	text17,local,class=CODE,merge=1,delta=2,group=2
    37                           	psect	text18,local,class=CODE,merge=1,delta=2,group=2
    38                           	psect	text19,local,class=CODE,merge=1,delta=2,group=2
    39                           	psect	text20,local,class=CODE,merge=1,delta=2
    40                           	psect	text21,local,class=CODE,merge=1,delta=2
    41                           	psect	text22,local,class=CODE,merge=1,delta=2
    42                           	psect	text23,local,class=CODE,merge=1,delta=2
    43                           	psect	intentry,global,class=CODE,delta=2
    44                           	psect	text25,local,class=CODE,merge=1,delta=2
    45                           	psect	text26,local,class=CODE,merge=1,delta=2,group=2
    46                           	psect	text27,local,class=CODE,merge=1,delta=2,group=2
    47                           	psect	text28,local,class=CODE,merge=1,delta=2
    48                           	dabs	1,0x7E,2
    49  0000                     
    50                           ; Version 1.45
    51                           ; Generated 16/11/2017 GMT
    52                           ; 
    53                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    54                           ; All rights reserved.
    55                           ; 
    56                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    57                           ; 
    58                           ; Redistribution and use in source and binary forms, with or without modification, are
    59                           ; permitted provided that the following conditions are met:
    60                           ; 
    61                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    62                           ;        conditions and the following disclaimer.
    63                           ; 
    64                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    65                           ;        of conditions and the following disclaimer in the documentation and/or other
    66                           ;        materials provided with the distribution.
    67                           ; 
    68                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    69                           ;        software without specific prior written permission.
    70                           ; 
    71                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    72                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    73                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    74                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    75                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    76                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    77                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    78                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    79                           ; 
    80                           ; 
    81                           ; Code-generator required, PIC16F18877 Definitions
    82                           ; 
    83                           ; SFR Addresses
    84  0000                     	;# 
    85  0001                     	;# 
    86  0002                     	;# 
    87  0003                     	;# 
    88  0004                     	;# 
    89  0005                     	;# 
    90  0006                     	;# 
    91  0007                     	;# 
    92  0008                     	;# 
    93  0009                     	;# 
    94  000A                     	;# 
    95  000B                     	;# 
    96  000C                     	;# 
    97  000D                     	;# 
    98  000E                     	;# 
    99  000F                     	;# 
   100  0010                     	;# 
   101  0011                     	;# 
   102  0012                     	;# 
   103  0013                     	;# 
   104  0014                     	;# 
   105  0015                     	;# 
   106  0016                     	;# 
   107  0017                     	;# 
   108  0018                     	;# 
   109  0019                     	;# 
   110  001A                     	;# 
   111  001C                     	;# 
   112  001C                     	;# 
   113  001D                     	;# 
   114  001D                     	;# 
   115  001E                     	;# 
   116  001F                     	;# 
   117  008C                     	;# 
   118  008C                     	;# 
   119  008D                     	;# 
   120  008E                     	;# 
   121  008E                     	;# 
   122  008F                     	;# 
   123  0090                     	;# 
   124  0090                     	;# 
   125  0091                     	;# 
   126  0093                     	;# 
   127  0094                     	;# 
   128  0095                     	;# 
   129  0096                     	;# 
   130  0097                     	;# 
   131  0098                     	;# 
   132  0099                     	;# 
   133  009A                     	;# 
   134  009B                     	;# 
   135  009C                     	;# 
   136  009D                     	;# 
   137  009E                     	;# 
   138  010C                     	;# 
   139  010D                     	;# 
   140  010E                     	;# 
   141  010E                     	;# 
   142  010F                     	;# 
   143  0110                     	;# 
   144  0110                     	;# 
   145  0111                     	;# 
   146  0112                     	;# 
   147  0112                     	;# 
   148  0113                     	;# 
   149  0114                     	;# 
   150  0114                     	;# 
   151  0115                     	;# 
   152  0116                     	;# 
   153  0116                     	;# 
   154  0117                     	;# 
   155  0119                     	;# 
   156  0119                     	;# 
   157  0119                     	;# 
   158  011A                     	;# 
   159  011A                     	;# 
   160  011A                     	;# 
   161  011B                     	;# 
   162  011B                     	;# 
   163  011B                     	;# 
   164  011B                     	;# 
   165  011B                     	;# 
   166  011C                     	;# 
   167  011C                     	;# 
   168  011C                     	;# 
   169  011D                     	;# 
   170  011D                     	;# 
   171  011D                     	;# 
   172  011E                     	;# 
   173  011E                     	;# 
   174  011E                     	;# 
   175  011F                     	;# 
   176  011F                     	;# 
   177  011F                     	;# 
   178  011F                     	;# 
   179  011F                     	;# 
   180  018C                     	;# 
   181  018D                     	;# 
   182  018E                     	;# 
   183  018F                     	;# 
   184  0190                     	;# 
   185  0191                     	;# 
   186  0192                     	;# 
   187  0196                     	;# 
   188  0197                     	;# 
   189  0198                     	;# 
   190  0199                     	;# 
   191  019A                     	;# 
   192  019B                     	;# 
   193  019C                     	;# 
   194  020C                     	;# 
   195  020C                     	;# 
   196  020D                     	;# 
   197  020E                     	;# 
   198  020F                     	;# 
   199  020F                     	;# 
   200  0210                     	;# 
   201  0210                     	;# 
   202  0211                     	;# 
   203  0211                     	;# 
   204  0212                     	;# 
   205  0212                     	;# 
   206  0213                     	;# 
   207  0214                     	;# 
   208  0215                     	;# 
   209  0215                     	;# 
   210  0216                     	;# 
   211  0216                     	;# 
   212  0217                     	;# 
   213  0217                     	;# 
   214  0218                     	;# 
   215  0218                     	;# 
   216  0219                     	;# 
   217  021A                     	;# 
   218  021B                     	;# 
   219  021B                     	;# 
   220  021C                     	;# 
   221  021C                     	;# 
   222  021D                     	;# 
   223  021D                     	;# 
   224  021E                     	;# 
   225  021F                     	;# 
   226  028C                     	;# 
   227  028C                     	;# 
   228  028D                     	;# 
   229  028D                     	;# 
   230  028E                     	;# 
   231  028F                     	;# 
   232  0290                     	;# 
   233  0290                     	;# 
   234  0291                     	;# 
   235  0292                     	;# 
   236  0292                     	;# 
   237  0293                     	;# 
   238  0293                     	;# 
   239  0294                     	;# 
   240  0295                     	;# 
   241  0296                     	;# 
   242  0296                     	;# 
   243  0297                     	;# 
   244  0298                     	;# 
   245  0298                     	;# 
   246  0299                     	;# 
   247  0299                     	;# 
   248  029A                     	;# 
   249  029B                     	;# 
   250  029C                     	;# 
   251  029C                     	;# 
   252  029D                     	;# 
   253  030C                     	;# 
   254  030C                     	;# 
   255  030D                     	;# 
   256  030E                     	;# 
   257  030F                     	;# 
   258  0310                     	;# 
   259  0310                     	;# 
   260  0311                     	;# 
   261  0312                     	;# 
   262  0313                     	;# 
   263  0314                     	;# 
   264  0314                     	;# 
   265  0315                     	;# 
   266  0316                     	;# 
   267  0317                     	;# 
   268  0318                     	;# 
   269  0318                     	;# 
   270  0319                     	;# 
   271  031A                     	;# 
   272  031B                     	;# 
   273  031C                     	;# 
   274  031C                     	;# 
   275  031D                     	;# 
   276  031E                     	;# 
   277  031F                     	;# 
   278  038C                     	;# 
   279  038D                     	;# 
   280  038E                     	;# 
   281  0390                     	;# 
   282  0391                     	;# 
   283  0392                     	;# 
   284  040C                     	;# 
   285  040D                     	;# 
   286  040E                     	;# 
   287  040F                     	;# 
   288  0410                     	;# 
   289  0411                     	;# 
   290  0416                     	;# 
   291  0416                     	;# 
   292  0417                     	;# 
   293  0418                     	;# 
   294  0418                     	;# 
   295  0419                     	;# 
   296  041A                     	;# 
   297  041A                     	;# 
   298  041B                     	;# 
   299  041C                     	;# 
   300  041C                     	;# 
   301  041D                     	;# 
   302  041E                     	;# 
   303  041F                     	;# 
   304  048C                     	;# 
   305  048C                     	;# 
   306  048D                     	;# 
   307  048E                     	;# 
   308  048F                     	;# 
   309  048F                     	;# 
   310  0490                     	;# 
   311  0491                     	;# 
   312  0492                     	;# 
   313  0492                     	;# 
   314  0493                     	;# 
   315  0494                     	;# 
   316  0495                     	;# 
   317  0495                     	;# 
   318  0496                     	;# 
   319  0497                     	;# 
   320  0498                     	;# 
   321  0499                     	;# 
   322  049A                     	;# 
   323  049B                     	;# 
   324  049C                     	;# 
   325  049D                     	;# 
   326  050C                     	;# 
   327  050C                     	;# 
   328  050D                     	;# 
   329  050E                     	;# 
   330  050F                     	;# 
   331  050F                     	;# 
   332  0510                     	;# 
   333  0511                     	;# 
   334  0512                     	;# 
   335  0512                     	;# 
   336  0513                     	;# 
   337  0514                     	;# 
   338  0515                     	;# 
   339  0515                     	;# 
   340  0516                     	;# 
   341  0517                     	;# 
   342  0518                     	;# 
   343  0519                     	;# 
   344  051A                     	;# 
   345  051B                     	;# 
   346  051C                     	;# 
   347  051D                     	;# 
   348  058C                     	;# 
   349  058C                     	;# 
   350  058D                     	;# 
   351  058E                     	;# 
   352  058F                     	;# 
   353  058F                     	;# 
   354  0590                     	;# 
   355  0591                     	;# 
   356  0592                     	;# 
   357  0593                     	;# 
   358  060C                     	;# 
   359  060D                     	;# 
   360  060E                     	;# 
   361  060F                     	;# 
   362  0610                     	;# 
   363  0611                     	;# 
   364  0612                     	;# 
   365  0613                     	;# 
   366  0614                     	;# 
   367  0616                     	;# 
   368  0617                     	;# 
   369  0618                     	;# 
   370  0619                     	;# 
   371  061A                     	;# 
   372  061B                     	;# 
   373  061C                     	;# 
   374  061D                     	;# 
   375  061E                     	;# 
   376  068C                     	;# 
   377  068D                     	;# 
   378  068E                     	;# 
   379  068F                     	;# 
   380  0690                     	;# 
   381  0691                     	;# 
   382  0692                     	;# 
   383  0693                     	;# 
   384  0694                     	;# 
   385  070C                     	;# 
   386  070D                     	;# 
   387  070E                     	;# 
   388  070F                     	;# 
   389  0710                     	;# 
   390  0711                     	;# 
   391  0712                     	;# 
   392  0713                     	;# 
   393  0714                     	;# 
   394  0716                     	;# 
   395  0717                     	;# 
   396  0718                     	;# 
   397  0719                     	;# 
   398  071A                     	;# 
   399  071B                     	;# 
   400  071C                     	;# 
   401  071D                     	;# 
   402  071E                     	;# 
   403  0796                     	;# 
   404  0797                     	;# 
   405  0798                     	;# 
   406  0799                     	;# 
   407  079A                     	;# 
   408  079B                     	;# 
   409  080C                     	;# 
   410  080D                     	;# 
   411  080E                     	;# 
   412  080F                     	;# 
   413  0810                     	;# 
   414  0811                     	;# 
   415  0812                     	;# 
   416  0813                     	;# 
   417  0814                     	;# 
   418  081A                     	;# 
   419  081B                     	;# 
   420  081C                     	;# 
   421  081D                     	;# 
   422  081E                     	;# 
   423  081F                     	;# 
   424  088C                     	;# 
   425  088D                     	;# 
   426  088E                     	;# 
   427  088F                     	;# 
   428  0890                     	;# 
   429  0891                     	;# 
   430  0892                     	;# 
   431  0893                     	;# 
   432  0895                     	;# 
   433  0896                     	;# 
   434  0897                     	;# 
   435  0898                     	;# 
   436  0899                     	;# 
   437  089A                     	;# 
   438  089B                     	;# 
   439  090C                     	;# 
   440  090E                     	;# 
   441  090F                     	;# 
   442  091F                     	;# 
   443  098F                     	;# 
   444  098F                     	;# 
   445  0990                     	;# 
   446  0991                     	;# 
   447  0992                     	;# 
   448  0993                     	;# 
   449  0994                     	;# 
   450  0995                     	;# 
   451  0996                     	;# 
   452  0997                     	;# 
   453  1E0F                     	;# 
   454  1E10                     	;# 
   455  1E11                     	;# 
   456  1E12                     	;# 
   457  1E13                     	;# 
   458  1E14                     	;# 
   459  1E15                     	;# 
   460  1E16                     	;# 
   461  1E17                     	;# 
   462  1E18                     	;# 
   463  1E19                     	;# 
   464  1E1A                     	;# 
   465  1E1B                     	;# 
   466  1E1C                     	;# 
   467  1E1D                     	;# 
   468  1E1E                     	;# 
   469  1E1F                     	;# 
   470  1E20                     	;# 
   471  1E21                     	;# 
   472  1E22                     	;# 
   473  1E23                     	;# 
   474  1E24                     	;# 
   475  1E25                     	;# 
   476  1E26                     	;# 
   477  1E27                     	;# 
   478  1E28                     	;# 
   479  1E29                     	;# 
   480  1E2A                     	;# 
   481  1E2B                     	;# 
   482  1E2C                     	;# 
   483  1E2D                     	;# 
   484  1E2E                     	;# 
   485  1E2F                     	;# 
   486  1E30                     	;# 
   487  1E31                     	;# 
   488  1E32                     	;# 
   489  1E33                     	;# 
   490  1E34                     	;# 
   491  1E35                     	;# 
   492  1E36                     	;# 
   493  1E37                     	;# 
   494  1E8F                     	;# 
   495  1E90                     	;# 
   496  1E91                     	;# 
   497  1E92                     	;# 
   498  1E93                     	;# 
   499  1E94                     	;# 
   500  1E95                     	;# 
   501  1E96                     	;# 
   502  1E97                     	;# 
   503  1E9C                     	;# 
   504  1E9D                     	;# 
   505  1E9E                     	;# 
   506  1EA1                     	;# 
   507  1EA2                     	;# 
   508  1EA3                     	;# 
   509  1EA4                     	;# 
   510  1EA5                     	;# 
   511  1EA9                     	;# 
   512  1EAA                     	;# 
   513  1EAB                     	;# 
   514  1EAC                     	;# 
   515  1EB1                     	;# 
   516  1EB2                     	;# 
   517  1EB3                     	;# 
   518  1EB8                     	;# 
   519  1EB9                     	;# 
   520  1EBA                     	;# 
   521  1EBB                     	;# 
   522  1EBC                     	;# 
   523  1EBD                     	;# 
   524  1EBE                     	;# 
   525  1EC3                     	;# 
   526  1EC5                     	;# 
   527  1EC6                     	;# 
   528  1EC7                     	;# 
   529  1EC8                     	;# 
   530  1EC9                     	;# 
   531  1ECA                     	;# 
   532  1ECB                     	;# 
   533  1ECC                     	;# 
   534  1F10                     	;# 
   535  1F11                     	;# 
   536  1F12                     	;# 
   537  1F13                     	;# 
   538  1F14                     	;# 
   539  1F15                     	;# 
   540  1F16                     	;# 
   541  1F17                     	;# 
   542  1F18                     	;# 
   543  1F19                     	;# 
   544  1F1A                     	;# 
   545  1F1B                     	;# 
   546  1F1C                     	;# 
   547  1F1D                     	;# 
   548  1F1E                     	;# 
   549  1F1F                     	;# 
   550  1F20                     	;# 
   551  1F21                     	;# 
   552  1F22                     	;# 
   553  1F23                     	;# 
   554  1F24                     	;# 
   555  1F25                     	;# 
   556  1F26                     	;# 
   557  1F27                     	;# 
   558  1F28                     	;# 
   559  1F29                     	;# 
   560  1F2A                     	;# 
   561  1F2B                     	;# 
   562  1F2C                     	;# 
   563  1F2D                     	;# 
   564  1F2E                     	;# 
   565  1F2F                     	;# 
   566  1F30                     	;# 
   567  1F31                     	;# 
   568  1F32                     	;# 
   569  1F38                     	;# 
   570  1F39                     	;# 
   571  1F3A                     	;# 
   572  1F3B                     	;# 
   573  1F3C                     	;# 
   574  1F3D                     	;# 
   575  1F3E                     	;# 
   576  1F3F                     	;# 
   577  1F40                     	;# 
   578  1F41                     	;# 
   579  1F43                     	;# 
   580  1F44                     	;# 
   581  1F45                     	;# 
   582  1F46                     	;# 
   583  1F47                     	;# 
   584  1F48                     	;# 
   585  1F49                     	;# 
   586  1F4A                     	;# 
   587  1F4B                     	;# 
   588  1F4C                     	;# 
   589  1F4E                     	;# 
   590  1F4F                     	;# 
   591  1F50                     	;# 
   592  1F51                     	;# 
   593  1F52                     	;# 
   594  1F53                     	;# 
   595  1F54                     	;# 
   596  1F55                     	;# 
   597  1F56                     	;# 
   598  1F57                     	;# 
   599  1F59                     	;# 
   600  1F5A                     	;# 
   601  1F5B                     	;# 
   602  1F5C                     	;# 
   603  1F5D                     	;# 
   604  1F61                     	;# 
   605  1F62                     	;# 
   606  1F64                     	;# 
   607  1F65                     	;# 
   608  1F66                     	;# 
   609  1F67                     	;# 
   610  1F68                     	;# 
   611  1F69                     	;# 
   612  1F6A                     	;# 
   613  1F6B                     	;# 
   614  1F6C                     	;# 
   615  1F6D                     	;# 
   616  1FE4                     	;# 
   617  1FE5                     	;# 
   618  1FE6                     	;# 
   619  1FE7                     	;# 
   620  1FE8                     	;# 
   621  1FE9                     	;# 
   622  1FEA                     	;# 
   623  1FEB                     	;# 
   624  1FED                     	;# 
   625  1FEE                     	;# 
   626  1FEF                     	;# 
   627                           
   628                           	psect	idataBANK0
   629  07FE                     __pidataBANK0:	
   630                           
   631                           ;initializer for _precarga
   632  07FE  34FE               	retlw	254
   633  07FF  34FF               	retlw	255
   634                           
   635                           	psect	idataBANK1
   636  0002                     __pidataBANK1:	
   637                           
   638                           ;initializer for _realizar
   639  0002  3401               	retlw	1
   640  0003  3400               	retlw	0
   641                           
   642                           	psect	stringtext1
   643  1830                     __pstringtext1:	
   644  1830                     _dpowers:	
   645  1830  3401               	retlw	1
   646  1831  3400               	retlw	0
   647  1832  3400               	retlw	0
   648  1833  3400               	retlw	0
   649  1834  340A               	retlw	10
   650  1835  3400               	retlw	0
   651  1836  3400               	retlw	0
   652  1837  3400               	retlw	0
   653  1838  3464               	retlw	100
   654  1839  3400               	retlw	0
   655  183A  3400               	retlw	0
   656  183B  3400               	retlw	0
   657  183C  34E8               	retlw	232
   658  183D  3403               	retlw	3
   659  183E  3400               	retlw	0
   660  183F  3400               	retlw	0
   661  1840  3410               	retlw	16
   662  1841  3427               	retlw	39
   663  1842  3400               	retlw	0
   664  1843  3400               	retlw	0
   665  1844  34A0               	retlw	160
   666  1845  3486               	retlw	134
   667  1846  3401               	retlw	1
   668  1847  3400               	retlw	0
   669  1848  3440               	retlw	64
   670  1849  3442               	retlw	66
   671  184A  340F               	retlw	15
   672  184B  3400               	retlw	0
   673  184C  3480               	retlw	128
   674  184D  3496               	retlw	150
   675  184E  3498               	retlw	152
   676  184F  3400               	retlw	0
   677  1850  3400               	retlw	0
   678  1851  34E1               	retlw	225
   679  1852  34F5               	retlw	245
   680  1853  3405               	retlw	5
   681  1854  3400               	retlw	0
   682  1855  34CA               	retlw	202
   683  1856  349A               	retlw	154
   684  1857  343B               	retlw	59
   685  1858                     __end_of_dpowers:	
   686                           
   687                           	psect	stringtext2
   688  1858                     __pstringtext2:	
   689  1858                     __powers_:	
   690  1858  3400               	retlw	0
   691  1859  3480               	retlw	128
   692  185A  343F               	retlw	63
   693  185B  3400               	retlw	0
   694  185C  3420               	retlw	32
   695  185D  3441               	retlw	65
   696  185E  3400               	retlw	0
   697  185F  34C8               	retlw	200
   698  1860  3442               	retlw	66
   699  1861  3400               	retlw	0
   700  1862  347A               	retlw	122
   701  1863  3444               	retlw	68
   702  1864  3440               	retlw	64
   703  1865  341C               	retlw	28
   704  1866  3446               	retlw	70
   705  1867  3450               	retlw	80
   706  1868  34C3               	retlw	195
   707  1869  3447               	retlw	71
   708  186A  3424               	retlw	36
   709  186B  3474               	retlw	116
   710  186C  3449               	retlw	73
   711  186D  3497               	retlw	151
   712  186E  3418               	retlw	24
   713  186F  344B               	retlw	75
   714  1870  34BC               	retlw	188
   715  1871  34BE               	retlw	190
   716  1872  344C               	retlw	76
   717  1873  346B               	retlw	107
   718  1874  346E               	retlw	110
   719  1875  344E               	retlw	78
   720  1876  3403               	retlw	3
   721  1877  3415               	retlw	21
   722  1878  3450               	retlw	80
   723  1879  3479               	retlw	121
   724  187A  34AD               	retlw	173
   725  187B  3460               	retlw	96
   726  187C  34F3               	retlw	243
   727  187D  3449               	retlw	73
   728  187E  3471               	retlw	113
   729  187F                     __end_of__powers_:	
   730                           
   731                           	psect	stringtext3
   732  1800                     __pstringtext3:	
   733  1800                     __npowers_:	
   734  1800  3400               	retlw	0
   735  1801  3480               	retlw	128
   736  1802  343F               	retlw	63
   737  1803  34CD               	retlw	205
   738  1804  34CC               	retlw	204
   739  1805  343D               	retlw	61
   740  1806  34D7               	retlw	215
   741  1807  3423               	retlw	35
   742  1808  343C               	retlw	60
   743  1809  3412               	retlw	18
   744  180A  3483               	retlw	131
   745  180B  343A               	retlw	58
   746  180C  34B7               	retlw	183
   747  180D  34D1               	retlw	209
   748  180E  3438               	retlw	56
   749  180F  34C6               	retlw	198
   750  1810  3427               	retlw	39
   751  1811  3437               	retlw	55
   752  1812  3438               	retlw	56
   753  1813  3486               	retlw	134
   754  1814  3435               	retlw	53
   755  1815  34C0               	retlw	192
   756  1816  34D6               	retlw	214
   757  1817  3433               	retlw	51
   758  1818  34CC               	retlw	204
   759  1819  342B               	retlw	43
   760  181A  3432               	retlw	50
   761  181B  3470               	retlw	112
   762  181C  3489               	retlw	137
   763  181D  3430               	retlw	48
   764  181E  34E7               	retlw	231
   765  181F  34DB               	retlw	219
   766  1820  342E               	retlw	46
   767  1821  34E5               	retlw	229
   768  1822  343C               	retlw	60
   769  1823  341E               	retlw	30
   770  1824  3442               	retlw	66
   771  1825  34A2               	retlw	162
   772  1826  340D               	retlw	13
   773  1827                     __end_of__npowers_:	
   774  0016                     _LATAbits	set	22
   775  000B                     _INTCONbits	set	11
   776  0011                     _TRISAbits	set	17
   777  000C                     _PORTA	set	12
   778  000F                     _PORTD	set	15
   779  000E                     _PORTC	set	14
   780  000C                     _PORTAbits	set	12
   781  000F                     _PORTDbits	set	15
   782  000E                     _PORTCbits	set	14
   783  0014                     _TRISDbits	set	20
   784  0013                     _TRISCbits	set	19
   785  020C                     _TMR1	set	524
   786  0211                     _T1CLKbits	set	529
   787  020E                     _T1CONbits	set	526
   788  071A                     _PIE4bits	set	1818
   789  0710                     _PIR4bits	set	1808
   790  0893                     _OSCFRQbits	set	2195
   791  1F38                     _ANSELA	set	7992
   792  1F59                     _ANSELD	set	8025
   793  1F4E                     _ANSELC	set	8014
   794  1827                     STR_1:	
   795  1827  3464               	retlw	100	;'d'
   796  1828  3469               	retlw	105	;'i'
   797  1829  3473               	retlw	115	;'s'
   798  182A  343D               	retlw	61	;'='
   799  182B  3420               	retlw	32	;' '
   800  182C  3425               	retlw	37	;'%'
   801  182D  3433               	retlw	51	;'3'
   802  182E  3466               	retlw	102	;'f'
   803  182F  3400               	retlw	0
   804                           
   805                           	psect	stringtext4
   806  0000                     __pstringtext4:	
   807                           
   808                           ; #config settings
   809  0000                     
   810                           	psect	cinit
   811  005C                     start_initialization:	
   812  005C                     __initialization:	
   813                           
   814                           ; Initialize objects allocated to BANK0
   815  005C  3187  27FE  3180   	fcall	__pidataBANK0	;fetch initializer
   816  005F  00DC               	movwf	__pdataBANK0& (0+127)
   817  0060  3187  27FF  3180   	fcall	__pidataBANK0+1	;fetch initializer
   818  0063  00DD               	movwf	(__pdataBANK0+1)& (0+127)
   819                           
   820                           ; Initialize objects allocated to BANK1
   821  0064  0141               	movlb	1	; select bank1
   822  0065  3180  2002  3180   	fcall	__pidataBANK1	;fetch initializer
   823  0068  00EE               	movwf	__pdataBANK1& (0+127)
   824  0069  3180  2003         	fcall	__pidataBANK1+1	;fetch initializer
   825  006B  00EF               	movwf	(__pdataBANK1+1)& (0+127)
   826                           
   827                           ; Clear objects allocated to BANK0
   828  006C  0140               	movlb	0	; select bank0
   829  006D  01DA               	clrf	__pbssBANK0& (0+127)
   830  006E  01DB               	clrf	(__pbssBANK0+1)& (0+127)
   831                           
   832                           ; Clear objects allocated to BANK1
   833  006F  0141               	movlb	1	; select bank1
   834  0070  01EB               	clrf	__pbssBANK1& (0+127)
   835  0071  01EC               	clrf	(__pbssBANK1+1)& (0+127)
   836  0072  01ED               	clrf	(__pbssBANK1+2)& (0+127)
   837  0073                     end_of_initialization:	
   838                           ;End of C runtime variable initialization code
   839                           
   840  0073                     __end_of__initialization:	
   841  0073  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
   842  0074  0140               	movlb	0
   843  0075  3197  2F05         	ljmp	_main	;jump to C main() function
   844                           
   845                           	psect	bssBANK0
   846  005A                     __pbssBANK0:	
   847  005A                     _ctiempo:	
   848  005A                     	ds	2
   849                           
   850                           	psect	dataBANK0
   851  005C                     __pdataBANK0:	
   852  005C                     _precarga:	
   853  005C                     	ds	2
   854                           
   855                           	psect	bssBANK1
   856  00EB                     __pbssBANK1:	
   857  00EB                     _distancia:	
   858  00EB                     	ds	3
   859                           
   860                           	psect	dataBANK1
   861  00EE                     __pdataBANK1:	
   862  00EE                     _realizar:	
   863  00EE                     	ds	2
   864                           
   865                           	psect	cstackBANK2
   866  0120                     __pcstackBANK2:	
   867  0120                     main@buffer1:	
   868                           
   869                           ; 16 bytes @ 0x0
   870  0120                     	ds	16
   871                           
   872                           	psect	cstackBANK1
   873  00A0                     __pcstackBANK1:	
   874  00A0                     ?_fround:	
   875  00A0                     ?_scale:	
   876                           ; 3 bytes @ 0x0
   877                           
   878                           
   879                           ; 3 bytes @ 0x0
   880  00A0                     	ds	3
   881  00A3                     ??_fround:	
   882  00A3                     _scale$973:	
   883                           ; 1 bytes @ 0x3
   884                           
   885                           
   886                           ; 3 bytes @ 0x3
   887  00A3                     	ds	3
   888  00A6                     scale@scl:	
   889                           
   890                           ; 1 bytes @ 0x6
   891  00A6                     	ds	1
   892  00A7                     ?___fttol:	
   893  00A7                     ___fttol@f1:	
   894                           ; 4 bytes @ 0x7
   895                           
   896  00A7                     _fround$972:	
   897                           ; 3 bytes @ 0x7
   898                           
   899                           
   900                           ; 3 bytes @ 0x7
   901  00A7                     	ds	3
   902  00AA                     _fround$971:	
   903                           
   904                           ; 3 bytes @ 0xA
   905  00AA                     	ds	1
   906  00AB                     ??___fttol:	
   907                           
   908                           ; 1 bytes @ 0xB
   909  00AB                     	ds	2
   910  00AD                     fround@prec:	
   911                           
   912                           ; 1 bytes @ 0xD
   913  00AD                     	ds	1
   914  00AE                     ?___ftadd:	
   915  00AE                     ___ftadd@f1:	
   916                           ; 3 bytes @ 0xE
   917                           
   918                           
   919                           ; 3 bytes @ 0xE
   920  00AE                     	ds	1
   921  00AF                     ___fttol@sign1:	
   922                           
   923                           ; 1 bytes @ 0xF
   924  00AF                     	ds	1
   925  00B0                     ___fttol@lval:	
   926                           
   927                           ; 4 bytes @ 0x10
   928  00B0                     	ds	1
   929  00B1                     ___ftadd@f2:	
   930                           
   931                           ; 3 bytes @ 0x11
   932  00B1                     	ds	3
   933  00B4                     ??___ftadd:	
   934  00B4                     ___fttol@exp1:	
   935                           ; 1 bytes @ 0x14
   936                           
   937                           
   938                           ; 1 bytes @ 0x14
   939  00B4                     	ds	4
   940  00B8                     ___ftadd@sign:	
   941                           
   942                           ; 1 bytes @ 0x18
   943  00B8                     	ds	1
   944  00B9                     ___ftadd@exp2:	
   945                           
   946                           ; 1 bytes @ 0x19
   947  00B9                     	ds	1
   948  00BA                     ___ftadd@exp1:	
   949                           
   950                           ; 1 bytes @ 0x1A
   951  00BA                     	ds	1
   952  00BB                     ?___ftsub:	
   953  00BB                     ___ftsub@f2:	
   954                           ; 3 bytes @ 0x1B
   955                           
   956                           
   957                           ; 3 bytes @ 0x1B
   958  00BB                     	ds	3
   959  00BE                     ___ftsub@f1:	
   960                           
   961                           ; 3 bytes @ 0x1E
   962  00BE                     	ds	3
   963  00C1                     ?_sprintf:	
   964  00C1                     sprintf@f:	
   965                           ; 2 bytes @ 0x21
   966                           
   967                           
   968                           ; 2 bytes @ 0x21
   969  00C1                     	ds	5
   970  00C6                     ??_sprintf:	
   971                           
   972                           ; 1 bytes @ 0x26
   973  00C6                     	ds	6
   974  00CC                     _sprintf$974:	
   975                           
   976                           ; 3 bytes @ 0x2C
   977  00CC                     	ds	3
   978  00CF                     sprintf@ap:	
   979                           
   980                           ; 1 bytes @ 0x2F
   981  00CF                     	ds	1
   982  00D0                     sprintf@flag:	
   983                           
   984                           ; 2 bytes @ 0x30
   985  00D0                     	ds	2
   986  00D2                     sprintf@val:	
   987                           
   988                           ; 4 bytes @ 0x32
   989  00D2                     	ds	4
   990  00D6                     sprintf@prec:	
   991                           
   992                           ; 2 bytes @ 0x36
   993  00D6                     	ds	2
   994  00D8                     sprintf@width:	
   995                           
   996                           ; 2 bytes @ 0x38
   997  00D8                     	ds	2
   998  00DA                     sprintf@tmpval:	
   999                           
  1000                           ; 4 bytes @ 0x3A
  1001  00DA                     	ds	4
  1002  00DE                     sprintf@exp:	
  1003                           
  1004                           ; 2 bytes @ 0x3E
  1005  00DE                     	ds	2
  1006  00E0                     sprintf@sp:	
  1007                           
  1008                           ; 1 bytes @ 0x40
  1009  00E0                     	ds	1
  1010  00E1                     sprintf@fval:	
  1011                           
  1012                           ; 3 bytes @ 0x41
  1013  00E1                     	ds	3
  1014  00E4                     sprintf@c:	
  1015                           
  1016                           ; 1 bytes @ 0x44
  1017  00E4                     	ds	1
  1018  00E5                     ?_main:	
  1019  00E5                     main@argc:	
  1020                           ; 2 bytes @ 0x45
  1021                           
  1022                           
  1023                           ; 2 bytes @ 0x45
  1024  00E5                     	ds	2
  1025  00E7                     main@argv:	
  1026                           
  1027                           ; 2 bytes @ 0x47
  1028  00E7                     	ds	2
  1029  00E9                     ??_main:	
  1030                           
  1031                           ; 1 bytes @ 0x49
  1032  00E9                     	ds	2
  1033                           
  1034                           	psect	cstackCOMMON
  1035  0070                     __pcstackCOMMON:	
  1036  0070                     ?_isdigit:	
  1037  0070                     ?_Lcd_Cmd:	
  1038                           ; 1 bit 
  1039                           
  1040  0070                     ?_Lcd_Chr_CP:	
  1041                           ; 1 bytes @ 0x0
  1042                           
  1043  0070                     ?_Lcd_Init:	
  1044                           ; 1 bytes @ 0x0
  1045                           
  1046  0070                     ?_interrupcion:	
  1047                           ; 1 bytes @ 0x0
  1048                           
  1049  0070                     ?i1___awdiv:	
  1050                           ; 1 bytes @ 0x0
  1051                           
  1052  0070                     ?i1___ftpack:	
  1053                           ; 2 bytes @ 0x0
  1054                           
  1055  0070                     i1___awdiv@divisor:	
  1056                           ; 3 bytes @ 0x0
  1057                           
  1058  0070                     i1___ftpack@arg:	
  1059                           ; 2 bytes @ 0x0
  1060                           
  1061                           
  1062                           ; 3 bytes @ 0x0
  1063  0070                     	ds	2
  1064  0072                     i1___awdiv@dividend:	
  1065                           
  1066                           ; 2 bytes @ 0x2
  1067  0072                     	ds	1
  1068  0073                     i1___ftpack@exp:	
  1069                           
  1070                           ; 1 bytes @ 0x3
  1071  0073                     	ds	1
  1072  0074                     ??i1___awdiv:	
  1073  0074                     i1___ftpack@sign:	
  1074                           ; 1 bytes @ 0x4
  1075                           
  1076                           
  1077                           ; 1 bytes @ 0x4
  1078  0074                     	ds	1
  1079  0075                     ??i1___ftpack:	
  1080  0075                     i1___awdiv@counter:	
  1081                           ; 1 bytes @ 0x5
  1082                           
  1083                           
  1084                           ; 1 bytes @ 0x5
  1085  0075                     	ds	1
  1086  0076                     i1___awdiv@sign:	
  1087                           
  1088                           ; 1 bytes @ 0x6
  1089  0076                     	ds	1
  1090  0077                     i1___awdiv@quotient:	
  1091                           
  1092                           ; 2 bytes @ 0x7
  1093  0077                     	ds	2
  1094  0079                     ?___awtoft:	
  1095  0079                     ___awtoft@c:	
  1096                           ; 3 bytes @ 0x9
  1097                           
  1098                           
  1099                           ; 2 bytes @ 0x9
  1100  0079                     	ds	3
  1101  007C                     ??___awtoft:	
  1102                           
  1103                           ; 1 bytes @ 0xC
  1104  007C                     	ds	2
  1105                           
  1106                           	psect	cstackBANK0
  1107  0020                     __pcstackBANK0:	
  1108  0020                     ___awtoft@sign:	
  1109                           
  1110                           ; 1 bytes @ 0x0
  1111  0020                     	ds	1
  1112  0021                     ?___ftdiv:	
  1113  0021                     ___ftdiv@f2:	
  1114                           ; 3 bytes @ 0x1
  1115                           
  1116                           
  1117                           ; 3 bytes @ 0x1
  1118  0021                     	ds	3
  1119  0024                     ___ftdiv@f1:	
  1120                           
  1121                           ; 3 bytes @ 0x4
  1122  0024                     	ds	3
  1123  0027                     ??___ftdiv:	
  1124                           
  1125                           ; 1 bytes @ 0x7
  1126  0027                     	ds	4
  1127  002B                     ___ftdiv@cntr:	
  1128                           
  1129                           ; 1 bytes @ 0xB
  1130  002B                     	ds	1
  1131  002C                     ___ftdiv@f3:	
  1132                           
  1133                           ; 3 bytes @ 0xC
  1134  002C                     	ds	3
  1135  002F                     ___ftdiv@exp:	
  1136                           
  1137                           ; 1 bytes @ 0xF
  1138  002F                     	ds	1
  1139  0030                     ___ftdiv@sign:	
  1140                           
  1141                           ; 1 bytes @ 0x10
  1142  0030                     	ds	1
  1143  0031                     ??_interrupcion:	
  1144                           
  1145                           ; 1 bytes @ 0x11
  1146  0031                     	ds	1
  1147  0032                     ?___ftge:	
  1148  0032                     ??_Lcd_Cmd:	
  1149                           ; 1 bit 
  1150                           
  1151  0032                     ??_Lcd_Chr_CP:	
  1152                           ; 1 bytes @ 0x12
  1153                           
  1154  0032                     ??_isdigit:	
  1155                           ; 1 bytes @ 0x12
  1156                           
  1157  0032                     ?___awmod:	
  1158                           ; 1 bytes @ 0x12
  1159                           
  1160  0032                     ?___ftpack:	
  1161                           ; 2 bytes @ 0x12
  1162                           
  1163  0032                     ?___ftneg:	
  1164                           ; 3 bytes @ 0x12
  1165                           
  1166  0032                     ?__tdiv_to_l_:	
  1167                           ; 3 bytes @ 0x12
  1168                           
  1169  0032                     ?__div_to_l_:	
  1170                           ; 4 bytes @ 0x12
  1171                           
  1172  0032                     ?___lldiv:	
  1173                           ; 4 bytes @ 0x12
  1174                           
  1175  0032                     ?___llmod:	
  1176                           ; 4 bytes @ 0x12
  1177                           
  1178  0032                     _isdigit$757:	
  1179                           ; 4 bytes @ 0x12
  1180                           
  1181  0032                     ___awmod@divisor:	
  1182                           ; 1 bytes @ 0x12
  1183                           
  1184  0032                     __div_to_l_@f1:	
  1185                           ; 2 bytes @ 0x12
  1186                           
  1187  0032                     ___ftpack@arg:	
  1188                           ; 3 bytes @ 0x12
  1189                           
  1190  0032                     __tdiv_to_l_@f1:	
  1191                           ; 3 bytes @ 0x12
  1192                           
  1193  0032                     ___ftge@ff1:	
  1194                           ; 3 bytes @ 0x12
  1195                           
  1196  0032                     ___ftneg@f1:	
  1197                           ; 3 bytes @ 0x12
  1198                           
  1199  0032                     ___lldiv@divisor:	
  1200                           ; 3 bytes @ 0x12
  1201                           
  1202  0032                     ___llmod@divisor:	
  1203                           ; 4 bytes @ 0x12
  1204                           
  1205                           
  1206                           ; 4 bytes @ 0x12
  1207  0032                     	ds	1
  1208  0033                     isdigit@c:	
  1209                           
  1210                           ; 1 bytes @ 0x13
  1211  0033                     	ds	1
  1212  0034                     Lcd_Chr_CP@data:	
  1213  0034                     Lcd_Cmd@data:	
  1214                           ; 1 bytes @ 0x14
  1215                           
  1216  0034                     ___awmod@dividend:	
  1217                           ; 1 bytes @ 0x14
  1218                           
  1219                           
  1220                           ; 2 bytes @ 0x14
  1221  0034                     	ds	1
  1222  0035                     ??_Lcd_Init:	
  1223  0035                     ?_Lcd_Out2:	
  1224                           ; 1 bytes @ 0x15
  1225                           
  1226  0035                     ??___ftneg:	
  1227                           ; 1 bytes @ 0x15
  1228                           
  1229  0035                     Lcd_Out2@x:	
  1230                           ; 1 bytes @ 0x15
  1231                           
  1232  0035                     ___ftpack@exp:	
  1233                           ; 1 bytes @ 0x15
  1234                           
  1235  0035                     __div_to_l_@f2:	
  1236                           ; 1 bytes @ 0x15
  1237                           
  1238  0035                     __tdiv_to_l_@f2:	
  1239                           ; 3 bytes @ 0x15
  1240                           
  1241  0035                     ___ftge@ff2:	
  1242                           ; 3 bytes @ 0x15
  1243                           
  1244                           
  1245                           ; 3 bytes @ 0x15
  1246  0035                     	ds	1
  1247  0036                     ??___awmod:	
  1248  0036                     Lcd_Init@data:	
  1249                           ; 1 bytes @ 0x16
  1250                           
  1251  0036                     Lcd_Out2@buffer:	
  1252                           ; 1 bytes @ 0x16
  1253                           
  1254  0036                     ___ftpack@sign:	
  1255                           ; 1 bytes @ 0x16
  1256                           
  1257  0036                     ___lldiv@dividend:	
  1258                           ; 1 bytes @ 0x16
  1259                           
  1260  0036                     ___llmod@dividend:	
  1261                           ; 4 bytes @ 0x16
  1262                           
  1263                           
  1264                           ; 4 bytes @ 0x16
  1265  0036                     	ds	1
  1266  0037                     ??___ftpack:	
  1267  0037                     ??_Lcd_Out2:	
  1268                           ; 1 bytes @ 0x17
  1269                           
  1270  0037                     ___awmod@counter:	
  1271                           ; 1 bytes @ 0x17
  1272                           
  1273                           
  1274                           ; 1 bytes @ 0x17
  1275  0037                     	ds	1
  1276  0038                     ??__tdiv_to_l_:	
  1277  0038                     ??__div_to_l_:	
  1278                           ; 1 bytes @ 0x18
  1279                           
  1280  0038                     ??___ftge:	
  1281                           ; 1 bytes @ 0x18
  1282                           
  1283  0038                     Lcd_Out2@y:	
  1284                           ; 1 bytes @ 0x18
  1285                           
  1286  0038                     ___awmod@sign:	
  1287                           ; 1 bytes @ 0x18
  1288                           
  1289                           
  1290                           ; 1 bytes @ 0x18
  1291  0038                     	ds	1
  1292  0039                     ?___awdiv:	
  1293  0039                     Lcd_Out2@data:	
  1294                           ; 2 bytes @ 0x19
  1295                           
  1296  0039                     ___awdiv@divisor:	
  1297                           ; 1 bytes @ 0x19
  1298                           
  1299                           
  1300                           ; 2 bytes @ 0x19
  1301  0039                     	ds	1
  1302  003A                     ??___lldiv:	
  1303  003A                     ??___llmod:	
  1304                           ; 1 bytes @ 0x1A
  1305                           
  1306  003A                     ?___lltoft:	
  1307                           ; 1 bytes @ 0x1A
  1308                           
  1309  003A                     ___lltoft@c:	
  1310                           ; 3 bytes @ 0x1A
  1311                           
  1312                           
  1313                           ; 4 bytes @ 0x1A
  1314  003A                     	ds	1
  1315  003B                     ___llmod@counter:	
  1316  003B                     ___awdiv@dividend:	
  1317                           ; 1 bytes @ 0x1B
  1318                           
  1319  003B                     ___lldiv@quotient:	
  1320                           ; 2 bytes @ 0x1B
  1321                           
  1322                           
  1323                           ; 4 bytes @ 0x1B
  1324  003B                     	ds	1
  1325  003C                     __tdiv_to_l_@quot:	
  1326                           
  1327                           ; 4 bytes @ 0x1C
  1328  003C                     	ds	1
  1329  003D                     ??___awdiv:	
  1330                           
  1331                           ; 1 bytes @ 0x1D
  1332  003D                     	ds	1
  1333  003E                     ??___lltoft:	
  1334  003E                     ___awdiv@counter:	
  1335                           ; 1 bytes @ 0x1E
  1336                           
  1337                           
  1338                           ; 1 bytes @ 0x1E
  1339  003E                     	ds	1
  1340  003F                     ___awdiv@sign:	
  1341  003F                     ___lldiv@counter:	
  1342                           ; 1 bytes @ 0x1F
  1343                           
  1344  003F                     ___lltoft@exp:	
  1345                           ; 1 bytes @ 0x1F
  1346                           
  1347                           
  1348                           ; 1 bytes @ 0x1F
  1349  003F                     	ds	1
  1350  0040                     __tdiv_to_l_@cntr:	
  1351  0040                     ___awdiv@quotient:	
  1352                           ; 1 bytes @ 0x20
  1353                           
  1354  0040                     __div_to_l_@quot:	
  1355                           ; 2 bytes @ 0x20
  1356                           
  1357                           
  1358                           ; 4 bytes @ 0x20
  1359  0040                     	ds	1
  1360  0041                     __tdiv_to_l_@exp1:	
  1361                           
  1362                           ; 1 bytes @ 0x21
  1363  0041                     	ds	1
  1364  0042                     ?___wmul:	
  1365  0042                     ___wmul@multiplier:	
  1366                           ; 2 bytes @ 0x22
  1367                           
  1368                           
  1369                           ; 2 bytes @ 0x22
  1370  0042                     	ds	2
  1371  0044                     __div_to_l_@cntr:	
  1372  0044                     ___wmul@multiplicand:	
  1373                           ; 1 bytes @ 0x24
  1374                           
  1375                           
  1376                           ; 2 bytes @ 0x24
  1377  0044                     	ds	1
  1378  0045                     __div_to_l_@exp1:	
  1379                           
  1380                           ; 1 bytes @ 0x25
  1381  0045                     	ds	1
  1382  0046                     ??___wmul:	
  1383  0046                     ___wmul@product:	
  1384                           ; 1 bytes @ 0x26
  1385                           
  1386                           
  1387                           ; 2 bytes @ 0x26
  1388  0046                     	ds	2
  1389  0048                     ?___ftmul:	
  1390  0048                     ___ftmul@f1:	
  1391                           ; 3 bytes @ 0x28
  1392                           
  1393                           
  1394                           ; 3 bytes @ 0x28
  1395  0048                     	ds	3
  1396  004B                     ___ftmul@f2:	
  1397                           
  1398                           ; 3 bytes @ 0x2B
  1399  004B                     	ds	3
  1400  004E                     ??___ftmul:	
  1401                           
  1402                           ; 1 bytes @ 0x2E
  1403  004E                     	ds	4
  1404  0052                     ___ftmul@exp:	
  1405                           
  1406                           ; 1 bytes @ 0x32
  1407  0052                     	ds	1
  1408  0053                     ___ftmul@f3_as_product:	
  1409                           
  1410                           ; 3 bytes @ 0x33
  1411  0053                     	ds	3
  1412  0056                     ___ftmul@cntr:	
  1413                           
  1414                           ; 1 bytes @ 0x36
  1415  0056                     	ds	1
  1416  0057                     ___ftmul@sign:	
  1417                           
  1418                           ; 1 bytes @ 0x37
  1419  0057                     	ds	1
  1420  0058                     ??_scale:	
  1421  0058                     ??___ftsub:	
  1422                           ; 1 bytes @ 0x38
  1423                           
  1424                           
  1425                           ; 1 bytes @ 0x38
  1426  0058                     	ds	2
  1427                           
  1428                           	psect	maintext
  1429  1705                     __pmaintext:	
  1430 ;;
  1431 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  1432 ;;
  1433 ;; *************** function _main *****************
  1434 ;; Defined at:
  1435 ;;		line 34 in file "main.c"
  1436 ;; Parameters:    Size  Location     Type
  1437 ;;  argc            2   69[BANK1 ] int 
  1438 ;;  argv            2   71[BANK1 ] PTR PTR unsigned char 
  1439 ;; Auto vars:     Size  Location     Type
  1440 ;;  buffer1        16    0[BANK2 ] unsigned char [16]
  1441 ;; Return value:  Size  Location     Type
  1442 ;;                  2   69[BANK1 ] int 
  1443 ;; Registers used:
  1444 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  1445 ;; Tracked objects:
  1446 ;;		On entry : B3F/0
  1447 ;;		On exit  : 0/0
  1448 ;;		Unchanged: 0/0
  1449 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
  1450 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  1451 ;;      Locals:         0       0       0      16       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  1452 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  1453 ;;      Totals:         0       0       6      16       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  1454 ;;Total ram usage:       22 bytes
  1455 ;; Hardware stack levels required when called:    7
  1456 ;; This function calls:
  1457 ;;		_Lcd_Cmd
  1458 ;;		_Lcd_Init
  1459 ;;		_Lcd_Out2
  1460 ;;		_sprintf
  1461 ;; This function is called by:
  1462 ;;		Startup code after reset
  1463 ;; This function uses a non-reentrant model
  1464 ;;
  1465                           
  1466                           
  1467                           ;psect for function _main
  1468  1705                     _main:	
  1469                           
  1470                           ;main.c: 35: OSCFRQbits.HFFRQ=0b110;
  1471                           
  1472                           ;incstack = 0
  1473                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  1474  1705  0151               	movlb	17	; select bank17
  1475  1706  0813               	movf	19,w	;volatile
  1476  1707  39F8               	andlw	-8
  1477  1708  3806               	iorlw	6
  1478  1709  0093               	movwf	19	;volatile
  1479                           
  1480                           ;main.c: 37: PORTC=0;
  1481  170A  0140               	movlb	0	; select bank0
  1482  170B  018E               	clrf	14	;volatile
  1483                           
  1484                           ;main.c: 38: PORTD=0;
  1485  170C  018F               	clrf	15	;volatile
  1486                           
  1487                           ;main.c: 39: ANSELC=0b00000000;
  1488  170D  017E               	movlb	62	; select bank62
  1489  170E  01CE               	clrf	78	;volatile
  1490                           
  1491                           ;main.c: 40: ANSELD=0b00000000;
  1492  170F  01D9               	clrf	89	;volatile
  1493                           
  1494                           ;main.c: 42: PORTA=0;
  1495  1710  0140               	movlb	0	; select bank0
  1496  1711  018C               	clrf	12	;volatile
  1497                           
  1498                           ;main.c: 43: ANSELA=0;
  1499  1712  017E               	movlb	62	; select bank62
  1500  1713  01B8               	clrf	56	;volatile
  1501                           
  1502                           ;main.c: 44: TRISAbits.TRISA0=0;
  1503  1714  0140               	movlb	0	; select bank0
  1504  1715  1011               	bcf	17,0	;volatile
  1505                           
  1506                           ;main.c: 45: TRISAbits.TRISA1=1;
  1507  1716  1491               	bsf	17,1	;volatile
  1508                           
  1509                           ;main.c: 47: PIR4bits.TMR1IF=0;
  1510  1717  014E               	movlb	14	; select bank14
  1511  1718  1010               	bcf	16,0	;volatile
  1512                           
  1513                           ;main.c: 48: PIE4bits.TMR1IE=1;
  1514  1719  141A               	bsf	26,0	;volatile
  1515                           
  1516                           ;main.c: 49: INTCONbits.GIE=1;
  1517  171A  178B               	bsf	11,7	;volatile
  1518                           
  1519                           ;main.c: 50: INTCONbits.PEIE=1;
  1520  171B  170B               	bsf	11,6	;volatile
  1521                           
  1522                           ;main.c: 51: PIE4bits.TMR1IE=1;
  1523  171C  141A               	bsf	26,0	;volatile
  1524                           
  1525                           ;main.c: 53: T1CONbits.CKPS=0b10;
  1526  171D  0144               	movlb	4	; select bank4
  1527  171E  080E               	movf	14,w	;volatile
  1528  171F  39CF               	andlw	-49
  1529  1720  3820               	iorlw	32
  1530  1721  008E               	movwf	14	;volatile
  1531                           
  1532                           ;main.c: 54: T1CLKbits.CS=0b0001;
  1533  1722  0811               	movf	17,w	;volatile
  1534  1723  39F0               	andlw	-16
  1535  1724  3801               	iorlw	1
  1536  1725  0091               	movwf	17	;volatile
  1537                           
  1538                           ;main.c: 55: T1CONbits.nSYNC=1;
  1539  1726  150E               	bsf	14,2	;volatile
  1540                           
  1541                           ;main.c: 56: TMR1=precarga;
  1542  1727  0140               	movlb	0	; select bank0
  1543  1728  085D               	movf	_precarga+1,w
  1544  1729  0144               	movlb	4	; select bank4
  1545  172A  008D               	movwf	13	;volatile
  1546  172B  0140               	movlb	0	; select bank0
  1547  172C  085C               	movf	_precarga,w
  1548  172D  0144               	movlb	4	; select bank4
  1549  172E  008C               	movwf	12	;volatile
  1550                           
  1551                           ;main.c: 58: T1CONbits.ON=1;
  1552  172F  140E               	bsf	14,0	;volatile
  1553                           
  1554                           ;main.c: 60: unsigned char buffer1[16];
  1555                           ;main.c: 61: Lcd_Init();
  1556  1730  3189  2142  3197   	fcall	_Lcd_Init
  1557                           
  1558                           ;main.c: 62: Lcd_Cmd(1);
  1559  1733  3001               	movlw	1
  1560  1734  3188  2006  3197   	fcall	_Lcd_Cmd
  1561                           
  1562                           ;main.c: 63: Lcd_Cmd(12);
  1563  1737  300C               	movlw	12
  1564  1738  3188  2006  3197   	fcall	_Lcd_Cmd
  1565                           
  1566                           ;main.c: 64: _delay((unsigned long)((100)*(32000000/4000.0)));
  1567  173B  3005               	movlw	5
  1568  173C  0141               	movlb	1	; select bank1
  1569  173D  00EA               	movwf	(??_main^(0+128)+1)
  1570  173E  300F               	movlw	15
  1571  173F  00E9               	movwf	??_main^(0+128)
  1572  1740  30F1               	movlw	241
  1573  1741                     u5357:	
  1574  1741  0B89               	decfsz	9,f
  1575  1742  2F41               	goto	u5357
  1576  1743  0BE9               	decfsz	??_main^(0+128),f
  1577  1744  2F41               	goto	u5357
  1578  1745  0BEA               	decfsz	(??_main^(0+128)+1),f
  1579  1746  2F41               	goto	u5357
  1580  1747                     l3452:	
  1581                           ;main.c: 66: while(1){
  1582                           
  1583                           
  1584                           ;main.c: 82: if(realizar==1){
  1585  1747  0141               	movlb	1	; select bank1
  1586  1748  036E               	decf	_realizar^(0+128),w
  1587  1749  046F               	iorwf	(_realizar+1)^(0+128),w
  1588  174A  1D03               	btfss	3,2
  1589  174B  2F5D               	goto	l3464
  1590                           
  1591                           ;main.c: 83: LATAbits.LATA0=0;
  1592  174C  0140               	movlb	0	; select bank0
  1593  174D  1016               	bcf	22,0	;volatile
  1594                           
  1595                           ;main.c: 84: _delay((unsigned long)((4)*(32000000/4000000.0)));
  1596  174E  300A               	movlw	10
  1597  174F                     u5367:	
  1598  174F  0B89               	decfsz	9,f
  1599  1750  2F4F               	goto	u5367
  1600  1751  3200               	nop2
  1601                           
  1602                           ;main.c: 85: LATAbits.LATA0=1;
  1603  1752  0140               	movlb	0	; select bank0
  1604  1753  1416               	bsf	22,0	;volatile
  1605                           
  1606                           ;main.c: 86: _delay((unsigned long)((10)*(32000000/4000000.0)));
  1607  1754  301A               	movlw	26
  1608  1755                     u5377:	
  1609  1755  0B89               	decfsz	9,f
  1610  1756  2F55               	goto	u5377
  1611  1757  3200               	nop2
  1612                           
  1613                           ;main.c: 87: LATAbits.LATA0=0;
  1614  1758  0140               	movlb	0	; select bank0
  1615  1759  1016               	bcf	22,0	;volatile
  1616                           
  1617                           ;main.c: 88: realizar=0;
  1618  175A  0141               	movlb	1	; select bank1
  1619  175B  01EE               	clrf	_realizar^(0+128)
  1620  175C  01EF               	clrf	(_realizar+1)^(0+128)
  1621  175D                     l3464:	
  1622                           
  1623                           ;main.c: 89: }
  1624                           ;main.c: 92: sprintf(buffer1,"dis= %3f",distancia);
  1625  175D  3027               	movlw	low (STR_1| (0+32768))
  1626  175E  00C1               	movwf	sprintf@f^(0+128)
  1627  175F  3098               	movlw	high (STR_1| (0+32768))
  1628  1760  00C2               	movwf	(sprintf@f^(0+128)+1)
  1629  1761  086B               	movf	_distancia^(0+128),w
  1630  1762  00C3               	movwf	(?_sprintf^(0+128)+2)
  1631  1763  086C               	movf	(_distancia+1)^(0+128),w
  1632  1764  00C4               	movwf	((?_sprintf+1)^(0+128)+2)
  1633  1765  086D               	movf	(_distancia+2)^(0+128),w
  1634  1766  00C5               	movwf	((?_sprintf+2)^(0+128)+2)
  1635  1767  3020               	movlw	(low (main@buffer1| (0+256)))& (0+255)
  1636  1768  3180  2077  3197   	fcall	_sprintf
  1637                           
  1638                           ;main.c: 93: Lcd_Out2(1,1,buffer1);
  1639  176B  0140               	movlb	0	; select bank0
  1640  176C  01B5               	clrf	Lcd_Out2@x
  1641  176D  0AB5               	incf	Lcd_Out2@x,f
  1642  176E  3020               	movlw	(low (main@buffer1| (0+256)))& (0+255)
  1643  176F  0141               	movlb	1	; select bank1
  1644  1770  00E9               	movwf	??_main^(0+128)
  1645  1771  0869               	movf	??_main^(0+128),w
  1646  1772  0140               	movlb	0	; select bank0
  1647  1773  00B6               	movwf	Lcd_Out2@buffer
  1648  1774  3001               	movlw	1
  1649  1775  3194  2446  3197   	fcall	_Lcd_Out2
  1650  1778  2F47               	goto	l3452
  1651  1779                     __end_of_main:	
  1652                           ;main.c: 95: }
  1653                           ;main.c: 96: return (0);
  1654                           ;	Return value of _main is never used
  1655                           
  1656                           
  1657                           	psect	text1
  1658  0077                     __ptext1:	
  1659 ;; *************** function _sprintf *****************
  1660 ;; Defined at:
  1661 ;;		line 492 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\doprnt.c"
  1662 ;; Parameters:    Size  Location     Type
  1663 ;;  sp              1    wreg     PTR unsigned char 
  1664 ;;		 -> main@buffer1(16), 
  1665 ;;  f               2   33[BANK1 ] PTR const unsigned char 
  1666 ;;		 -> STR_1(9), 
  1667 ;; Auto vars:     Size  Location     Type
  1668 ;;  sp              1   64[BANK1 ] PTR unsigned char 
  1669 ;;		 -> main@buffer1(16), 
  1670 ;;  tmpval          4   58[BANK1 ] struct .
  1671 ;;  val             4   50[BANK1 ] unsigned long 
  1672 ;;  fval            3   65[BANK1 ] unsigned long 
  1673 ;;  exp             2   62[BANK1 ] int 
  1674 ;;  width           2   56[BANK1 ] int 
  1675 ;;  prec            2   54[BANK1 ] int 
  1676 ;;  flag            2   48[BANK1 ] unsigned short 
  1677 ;;  cp              2    0        PTR const unsigned char 
  1678 ;;  len             2    0        unsigned int 
  1679 ;;  c               1   68[BANK1 ] char 
  1680 ;;  ap              1   47[BANK1 ] PTR void [1]
  1681 ;;		 -> ?_sprintf(2), 
  1682 ;;  d               1    0        unsigned char 
  1683 ;; Return value:  Size  Location     Type
  1684 ;;                  2   33[BANK1 ] int 
  1685 ;; Registers used:
  1686 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  1687 ;; Tracked objects:
  1688 ;;		On entry : 0/0
  1689 ;;		On exit  : 0/0
  1690 ;;		Unchanged: 0/0
  1691 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
  1692 ;;      Params:         0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  1693 ;;      Locals:         0       0      25       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  1694 ;;      Temps:          0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  1695 ;;      Totals:         0       0      36       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  1696 ;;Total ram usage:       36 bytes
  1697 ;; Hardware stack levels used:    1
  1698 ;; Hardware stack levels required when called:    6
  1699 ;; This function calls:
  1700 ;;		___awdiv
  1701 ;;		___ftadd
  1702 ;;		___ftge
  1703 ;;		___ftmul
  1704 ;;		___ftneg
  1705 ;;		___ftsub
  1706 ;;		___fttol
  1707 ;;		___lldiv
  1708 ;;		___llmod
  1709 ;;		___lltoft
  1710 ;;		___wmul
  1711 ;;		__div_to_l_
  1712 ;;		__tdiv_to_l_
  1713 ;;		_fround
  1714 ;;		_isdigit
  1715 ;;		_scale
  1716 ;; This function is called by:
  1717 ;;		_main
  1718 ;; This function uses a non-reentrant model
  1719 ;;
  1720                           
  1721                           
  1722                           ;psect for function _sprintf
  1723  0077                     _sprintf:	
  1724                           
  1725                           ;incstack = 0
  1726                           ; Regs used in _sprintf: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  1727                           ;sprintf@sp stored from wreg
  1728  0077  0141               	movlb	1	; select bank1
  1729  0078  00E0               	movwf	sprintf@sp^(0+128)
  1730                           
  1731                           ;doprnt.c: 494: va_list ap;
  1732                           ;doprnt.c: 499: signed char c;
  1733                           ;doprnt.c: 501: int width;
  1734                           ;doprnt.c: 504: int prec;
  1735                           ;doprnt.c: 508: unsigned short flag;
  1736                           ;doprnt.c: 515: char d;
  1737                           ;doprnt.c: 516: double fval;
  1738                           ;doprnt.c: 517: int exp;
  1739                           ;doprnt.c: 523: union {
  1740                           ;doprnt.c: 524: unsigned long vd;
  1741                           ;doprnt.c: 525: double integ;
  1742                           ;doprnt.c: 526: } tmpval;
  1743                           ;doprnt.c: 528: unsigned long val;
  1744                           ;doprnt.c: 529: unsigned len;
  1745                           ;doprnt.c: 530: const char * cp;
  1746                           ;doprnt.c: 533: *ap = __va_start();
  1747  0079  30C3               	movlw	(low ((?_sprintf| 0+2)))& (0+255)
  1748  007A  00C6               	movwf	??_sprintf^(0+128)
  1749  007B  0846               	movf	??_sprintf^(0+128),w
  1750  007C  00CF               	movwf	sprintf@ap^(0+128)
  1751  007D                     l3404:	
  1752                           ;doprnt.c: 536: while(c = *f++) {
  1753                           
  1754  007D  0842               	movf	(sprintf@f+1)^(0+128),w
  1755  007E  00C7               	movwf	(??_sprintf^(0+128)+1)
  1756  007F  0841               	movf	sprintf@f^(0+128),w
  1757  0080  00C6               	movwf	??_sprintf^(0+128)
  1758  0081  0AC1               	incf	sprintf@f^(0+128),f
  1759  0082  1903               	skipnz
  1760  0083  0AC2               	incf	(sprintf@f+1)^(0+128),f
  1761  0084  0846               	movf	??_sprintf^(0+128),w
  1762  0085  0084               	movwf	4
  1763  0086  0847               	movf	(??_sprintf+1)^(0+128),w
  1764  0087  0085               	movwf	5
  1765  0088  0800               	movf	0,w	;code access
  1766  0089  00C8               	movwf	(??_sprintf+2)^(0+128)
  1767  008A  0848               	movf	(??_sprintf+2)^(0+128),w
  1768  008B  00E4               	movwf	sprintf@c^(0+128)
  1769  008C  0864               	movf	sprintf@c^(0+128),w
  1770  008D  1903               	btfsc	3,2
  1771  008E  2DA7               	goto	l3406
  1772                           
  1773                           ;doprnt.c: 538: if(c != '%')
  1774  008F  3025               	movlw	37
  1775  0090  0664               	xorwf	sprintf@c^(0+128),w
  1776  0091  1903               	btfsc	3,2
  1777  0092  2895               	goto	l3204
  1778                           
  1779                           ;doprnt.c: 540: {
  1780                           ;doprnt.c: 541: ((*sp++ = (c)));
  1781  0093  0864               	movf	sprintf@c^(0+128),w
  1782  0094  2D9B               	goto	L5
  1783  0095                     l3204:	
  1784                           ;doprnt.c: 542: continue;
  1785                           
  1786                           
  1787                           ;doprnt.c: 543: }
  1788                           ;doprnt.c: 546: width = 0;
  1789  0095  01D8               	clrf	sprintf@width^(0+128)
  1790  0096  01D9               	clrf	(sprintf@width+1)^(0+128)
  1791                           
  1792                           ;doprnt.c: 548: flag = 0;
  1793  0097  01D0               	clrf	sprintf@flag^(0+128)
  1794  0098  01D1               	clrf	(sprintf@flag+1)^(0+128)
  1795                           
  1796                           ;doprnt.c: 597: if(isdigit((unsigned)*f)) {
  1797  0099  0841               	movf	sprintf@f^(0+128),w
  1798  009A  0084               	movwf	4
  1799  009B  0842               	movf	(sprintf@f+1)^(0+128),w
  1800  009C  0085               	movwf	5
  1801  009D  0800               	movf	0,w	;code access
  1802  009E  3193  23B2  3180   	fcall	_isdigit
  1803  00A1  1C03               	btfss	3,0
  1804  00A2  28DE               	goto	l3220
  1805                           
  1806                           ;doprnt.c: 598: width = 0;
  1807  00A3  0141               	movlb	1	; select bank1
  1808  00A4  01D8               	clrf	sprintf@width^(0+128)
  1809  00A5  01D9               	clrf	(sprintf@width+1)^(0+128)
  1810  00A6                     l3210:	
  1811                           ;doprnt.c: 599: do {
  1812                           
  1813                           
  1814                           ;doprnt.c: 600: width *= 10;
  1815  00A6  300A               	movlw	10
  1816  00A7  0140               	movlb	0	; select bank0
  1817  00A8  00C2               	movwf	___wmul@multiplier
  1818  00A9  3000               	movlw	0
  1819  00AA  00C3               	movwf	___wmul@multiplier+1
  1820  00AB  0141               	movlb	1	; select bank1
  1821  00AC  0859               	movf	(sprintf@width+1)^(0+128),w
  1822  00AD  0140               	movlb	0	; select bank0
  1823  00AE  00C5               	movwf	___wmul@multiplicand+1
  1824  00AF  0141               	movlb	1	; select bank1
  1825  00B0  0858               	movf	sprintf@width^(0+128),w
  1826  00B1  0140               	movlb	0	; select bank0
  1827  00B2  00C4               	movwf	___wmul@multiplicand
  1828  00B3  3193  23C1  3180   	fcall	___wmul
  1829  00B6  0140               	movlb	0	; select bank0
  1830  00B7  0843               	movf	?___wmul+1,w
  1831  00B8  0141               	movlb	1	; select bank1
  1832  00B9  00D9               	movwf	(sprintf@width+1)^(0+128)
  1833  00BA  0140               	movlb	0	; select bank0
  1834  00BB  0842               	movf	?___wmul,w
  1835  00BC  0141               	movlb	1	; select bank1
  1836  00BD  00D8               	movwf	sprintf@width^(0+128)
  1837                           
  1838                           ;doprnt.c: 601: width += *f++ - '0';
  1839  00BE  0841               	movf	sprintf@f^(0+128),w
  1840  00BF  0084               	movwf	4
  1841  00C0  0842               	movf	(sprintf@f+1)^(0+128),w
  1842  00C1  0085               	movwf	5
  1843  00C2  0800               	movf	0,w	;code access
  1844  00C3  3ED0               	addlw	208
  1845  00C4  00C6               	movwf	??_sprintf^(0+128)
  1846  00C5  30FF               	movlw	255
  1847  00C6  1803               	skipnc
  1848  00C7  3000               	movlw	0
  1849  00C8  00C7               	movwf	(??_sprintf^(0+128)+1)
  1850  00C9  0846               	movf	??_sprintf^(0+128),w
  1851  00CA  07D8               	addwf	sprintf@width^(0+128),f
  1852  00CB  0847               	movf	(??_sprintf+1)^(0+128),w
  1853  00CC  3DD9               	addwfc	(sprintf@width+1)^(0+128),f
  1854  00CD  3001               	movlw	1
  1855  00CE  07C1               	addwf	sprintf@f^(0+128),f
  1856  00CF  3000               	movlw	0
  1857  00D0  3DC2               	addwfc	(sprintf@f+1)^(0+128),f
  1858                           
  1859                           ;doprnt.c: 602: } while(isdigit((unsigned)*f));
  1860  00D1  0841               	movf	sprintf@f^(0+128),w
  1861  00D2  0084               	movwf	4
  1862  00D3  0842               	movf	(sprintf@f+1)^(0+128),w
  1863  00D4  0085               	movwf	5
  1864  00D5  0800               	movf	0,w	;code access
  1865  00D6  3193  23B2  3180   	fcall	_isdigit
  1866  00D9  1C03               	btfss	3,0
  1867  00DA  28DE               	goto	l3220
  1868  00DB  28A6               	goto	l3210
  1869  00DC                     l154:	
  1870                           ;doprnt.c: 662: case 'f':
  1871                           
  1872                           ;doprnt.c: 638: goto alldone;
  1873                           
  1874                           ;doprnt.c: 637: case 0:
  1875                           
  1876                           ;doprnt.c: 608: }
  1877                           ;doprnt.c: 635: switch(c = *f++) {
  1878                           
  1879                           
  1880                           ;doprnt.c: 663: flag |= 0x400;
  1881  00DC  1551               	bsf	(sprintf@flag^(0+128)+1),2
  1882                           
  1883                           ;doprnt.c: 664: break;
  1884  00DD  28F3               	goto	l3222
  1885  00DE                     l3220:	
  1886                           ;doprnt.c: 822: }
  1887                           
  1888                           ;doprnt.c: 813: continue;
  1889                           
  1890                           ;doprnt.c: 802: default:
  1891                           
  1892  00DE  0141               	movlb	1	; select bank1
  1893  00DF  0842               	movf	(sprintf@f+1)^(0+128),w
  1894  00E0  00C7               	movwf	(??_sprintf^(0+128)+1)
  1895  00E1  0841               	movf	sprintf@f^(0+128),w
  1896  00E2  00C6               	movwf	??_sprintf^(0+128)
  1897  00E3  0AC1               	incf	sprintf@f^(0+128),f
  1898  00E4  1903               	skipnz
  1899  00E5  0AC2               	incf	(sprintf@f+1)^(0+128),f
  1900  00E6  0846               	movf	??_sprintf^(0+128),w
  1901  00E7  0084               	movwf	4
  1902  00E8  0847               	movf	(??_sprintf+1)^(0+128),w
  1903  00E9  0085               	movwf	5
  1904  00EA  0800               	movf	0,w	;code access
  1905  00EB  00E4               	movwf	sprintf@c^(0+128)
  1906                           
  1907                           ; Switch size 1, requested type "space"
  1908                           ; Number of cases is 2, Range of values is 0 to 102
  1909                           ; switch strategies available:
  1910                           ; Name         Instructions Cycles
  1911                           ; simple_byte            7     4 (average)
  1912                           ; direct_byte          212     6 (fixed)
  1913                           ; jumptable            260     6 (fixed)
  1914                           ;	Chosen strategy is simple_byte
  1915  00EC  3A00               	xorlw	0	; case 0
  1916  00ED  1903               	skipnz
  1917  00EE  2DA7               	goto	l3406
  1918  00EF  3A66               	xorlw	102	; case 102
  1919  00F0  1903               	skipnz
  1920  00F1  28DC               	goto	l154
  1921  00F2  287D               	goto	l3404
  1922  00F3                     l3222:	
  1923                           
  1924                           ;doprnt.c: 825: if(flag & (0x700)) {
  1925  00F3  3000               	movlw	0
  1926  00F4  0550               	andwf	sprintf@flag^(0+128),w
  1927  00F5  00C6               	movwf	??_sprintf^(0+128)
  1928  00F6  3007               	movlw	7
  1929  00F7  0551               	andwf	(sprintf@flag+1)^(0+128),w
  1930  00F8  00C7               	movwf	(??_sprintf+1)^(0+128)
  1931  00F9  0846               	movf	??_sprintf^(0+128),w
  1932  00FA  0447               	iorwf	(??_sprintf^(0+128)+1),w
  1933  00FB  1903               	btfsc	3,2
  1934  00FC  2D47               	goto	l3380
  1935                           
  1936                           ;doprnt.c: 829: prec = 6;
  1937  00FD  3006               	movlw	6
  1938  00FE  00D6               	movwf	sprintf@prec^(0+128)
  1939  00FF  3000               	movlw	0
  1940  0100  00D7               	movwf	(sprintf@prec^(0+128)+1)
  1941                           
  1942                           ;doprnt.c: 830: fval = (*(double *)__va_arg((*(double **)ap), (double)0));
  1943  0101  084F               	movf	sprintf@ap^(0+128),w
  1944  0102  0086               	movwf	6
  1945  0103  0187               	clrf	7
  1946  0104  3F40               	moviw [0]fsr1
  1947  0105  00E1               	movwf	sprintf@fval^(0+128)
  1948  0106  3F41               	moviw [1]fsr1
  1949  0107  00E2               	movwf	(sprintf@fval+1)^(0+128)
  1950  0108  3F42               	moviw [2]fsr1
  1951  0109  00E3               	movwf	(sprintf@fval+2)^(0+128)
  1952  010A  3003               	movlw	3
  1953  010B  00C6               	movwf	??_sprintf^(0+128)
  1954  010C  0846               	movf	??_sprintf^(0+128),w
  1955  010D  07CF               	addwf	sprintf@ap^(0+128),f
  1956                           
  1957                           ;doprnt.c: 831: if(fval < 0.0) {
  1958  010E  0861               	movf	sprintf@fval^(0+128),w
  1959  010F  0140               	movlb	0	; select bank0
  1960  0110  00B2               	movwf	___ftge@ff1
  1961  0111  0141               	movlb	1	; select bank1
  1962  0112  0862               	movf	(sprintf@fval+1)^(0+128),w
  1963  0113  0140               	movlb	0	; select bank0
  1964  0114  00B3               	movwf	___ftge@ff1+1
  1965  0115  0141               	movlb	1	; select bank1
  1966  0116  0863               	movf	(sprintf@fval+2)^(0+128),w
  1967  0117  0140               	movlb	0	; select bank0
  1968  0118  00B4               	movwf	___ftge@ff1+2
  1969  0119  3000               	movlw	0
  1970  011A  00B5               	movwf	___ftge@ff2
  1971  011B  3000               	movlw	0
  1972  011C  00B6               	movwf	___ftge@ff2+1
  1973  011D  3000               	movlw	0
  1974  011E  00B7               	movwf	___ftge@ff2+2
  1975  011F  3194  2481  3180   	fcall	___ftge
  1976  0122  1803               	btfsc	3,0
  1977  0123  2943               	goto	l3236
  1978                           
  1979                           ;doprnt.c: 832: fval = -fval;
  1980  0124  0141               	movlb	1	; select bank1
  1981  0125  0861               	movf	sprintf@fval^(0+128),w
  1982  0126  0140               	movlb	0	; select bank0
  1983  0127  00B2               	movwf	___ftneg@f1
  1984  0128  0141               	movlb	1	; select bank1
  1985  0129  0862               	movf	(sprintf@fval+1)^(0+128),w
  1986  012A  0140               	movlb	0	; select bank0
  1987  012B  00B3               	movwf	___ftneg@f1+1
  1988  012C  0141               	movlb	1	; select bank1
  1989  012D  0863               	movf	(sprintf@fval+2)^(0+128),w
  1990  012E  0140               	movlb	0	; select bank0
  1991  012F  00B4               	movwf	___ftneg@f1+2
  1992  0130  3187  27F5  3180   	fcall	___ftneg
  1993  0133  0140               	movlb	0	; select bank0
  1994  0134  0832               	movf	?___ftneg,w
  1995  0135  0141               	movlb	1	; select bank1
  1996  0136  00E1               	movwf	sprintf@fval^(0+128)
  1997  0137  0140               	movlb	0	; select bank0
  1998  0138  0833               	movf	?___ftneg+1,w
  1999  0139  0141               	movlb	1	; select bank1
  2000  013A  00E2               	movwf	(sprintf@fval+1)^(0+128)
  2001  013B  0140               	movlb	0	; select bank0
  2002  013C  0834               	movf	?___ftneg+2,w
  2003  013D  0141               	movlb	1	; select bank1
  2004  013E  00E3               	movwf	(sprintf@fval+2)^(0+128)
  2005                           
  2006                           ;doprnt.c: 833: flag |= 0x03;
  2007  013F  3003               	movlw	3
  2008  0140  04D0               	iorwf	sprintf@flag^(0+128),f
  2009  0141  3000               	movlw	0
  2010  0142  04D1               	iorwf	(sprintf@flag+1)^(0+128),f
  2011  0143                     l3236:	
  2012                           
  2013                           ;doprnt.c: 834: }
  2014                           ;doprnt.c: 835: exp = 0;
  2015  0143  0141               	movlb	1	; select bank1
  2016  0144  01DE               	clrf	sprintf@exp^(0+128)
  2017  0145  01DF               	clrf	(sprintf@exp+1)^(0+128)
  2018                           
  2019                           ;doprnt.c: 836: if( fval!=0) {
  2020  0146  0863               	movf	(sprintf@fval+2)^(0+128),w
  2021  0147  0462               	iorwf	(sprintf@fval+1)^(0+128),w
  2022  0148  0461               	iorwf	sprintf@fval^(0+128),w
  2023  0149  1903               	skipnz
  2024  014A  2A0C               	goto	l159
  2025                           
  2026                           ;doprnt.c: 837: (void)(*(&exp) = ((*(unsigned long *)&fval >> 15) & 255) - 126);
  2027  014B  30E1               	movlw	low (sprintf@fval| 0)
  2028  014C  0086               	movwf	6
  2029  014D  0187               	clrf	7
  2030  014E  3F40               	moviw [0]fsr1
  2031  014F  00C6               	movwf	??_sprintf^(0+128)
  2032  0150  3F41               	moviw [1]fsr1
  2033  0151  00C7               	movwf	(??_sprintf^(0+128)+1)
  2034  0152  3F42               	moviw [2]fsr1
  2035  0153  00C8               	movwf	(??_sprintf^(0+128)+2)
  2036  0154  3F43               	moviw [3]fsr1
  2037  0155  00C9               	movwf	(??_sprintf^(0+128)+3)
  2038  0156  300F               	movlw	15
  2039  0157                     u5045:	
  2040  0157  36C9               	lsrf	(??_sprintf^(0+128)+3),f
  2041  0158  0CC8               	rrf	(??_sprintf^(0+128)+2),f
  2042  0159  0CC7               	rrf	(??_sprintf^(0+128)+1),f
  2043  015A  0CC6               	rrf	??_sprintf^(0+128),f
  2044  015B  0B89               	decfsz	9,f
  2045  015C  2957               	goto	u5045
  2046  015D  30FF               	movlw	255
  2047  015E  0546               	andwf	??_sprintf^(0+128),w
  2048  015F  00CA               	movwf	(??_sprintf+4)^(0+128)
  2049  0160  3000               	movlw	0
  2050  0161  0547               	andwf	(??_sprintf+1)^(0+128),w
  2051  0162  00CB               	movwf	(??_sprintf+5)^(0+128)
  2052  0163  084A               	movf	(??_sprintf+4)^(0+128),w
  2053  0164  3E82               	addlw	130
  2054  0165  00DE               	movwf	sprintf@exp^(0+128)
  2055  0166  30FF               	movlw	255
  2056  0167  3D4B               	addwfc	(??_sprintf+5)^(0+128),w
  2057  0168  00DF               	movwf	(sprintf@exp+1)^(0+128)
  2058                           
  2059                           ;doprnt.c: 838: exp--;
  2060  0169  30FF               	movlw	255
  2061  016A  07DE               	addwf	sprintf@exp^(0+128),f
  2062  016B  30FF               	movlw	255
  2063  016C  3DDF               	addwfc	(sprintf@exp+1)^(0+128),f
  2064                           
  2065                           ;doprnt.c: 839: exp *= 3;
  2066  016D  3003               	movlw	3
  2067  016E  0140               	movlb	0	; select bank0
  2068  016F  00C2               	movwf	___wmul@multiplier
  2069  0170  3000               	movlw	0
  2070  0171  00C3               	movwf	___wmul@multiplier+1
  2071  0172  0141               	movlb	1	; select bank1
  2072  0173  085F               	movf	(sprintf@exp+1)^(0+128),w
  2073  0174  0140               	movlb	0	; select bank0
  2074  0175  00C5               	movwf	___wmul@multiplicand+1
  2075  0176  0141               	movlb	1	; select bank1
  2076  0177  085E               	movf	sprintf@exp^(0+128),w
  2077  0178  0140               	movlb	0	; select bank0
  2078  0179  00C4               	movwf	___wmul@multiplicand
  2079  017A  3193  23C1  3180   	fcall	___wmul
  2080  017D  0140               	movlb	0	; select bank0
  2081  017E  0843               	movf	?___wmul+1,w
  2082  017F  0141               	movlb	1	; select bank1
  2083  0180  00DF               	movwf	(sprintf@exp+1)^(0+128)
  2084  0181  0140               	movlb	0	; select bank0
  2085  0182  0842               	movf	?___wmul,w
  2086  0183  0141               	movlb	1	; select bank1
  2087  0184  00DE               	movwf	sprintf@exp^(0+128)
  2088                           
  2089                           ;doprnt.c: 840: exp /= 10;
  2090  0185  300A               	movlw	10
  2091  0186  0140               	movlb	0	; select bank0
  2092  0187  00B9               	movwf	___awdiv@divisor
  2093  0188  3000               	movlw	0
  2094  0189  00BA               	movwf	___awdiv@divisor+1
  2095  018A  0141               	movlb	1	; select bank1
  2096  018B  085F               	movf	(sprintf@exp+1)^(0+128),w
  2097  018C  0140               	movlb	0	; select bank0
  2098  018D  00BC               	movwf	___awdiv@dividend+1
  2099  018E  0141               	movlb	1	; select bank1
  2100  018F  085E               	movf	sprintf@exp^(0+128),w
  2101  0190  0140               	movlb	0	; select bank0
  2102  0191  00BB               	movwf	___awdiv@dividend
  2103  0192  3195  2597  3180   	fcall	___awdiv
  2104  0195  0140               	movlb	0	; select bank0
  2105  0196  083A               	movf	?___awdiv+1,w
  2106  0197  0141               	movlb	1	; select bank1
  2107  0198  00DF               	movwf	(sprintf@exp+1)^(0+128)
  2108  0199  0140               	movlb	0	; select bank0
  2109  019A  0839               	movf	?___awdiv,w
  2110  019B  0141               	movlb	1	; select bank1
  2111  019C  00DE               	movwf	sprintf@exp^(0+128)
  2112                           
  2113                           ;doprnt.c: 841: if(exp < 0)
  2114  019D  1FDF               	btfss	(sprintf@exp+1)^(0+128),7
  2115  019E  29A3               	goto	l3252
  2116                           
  2117                           ;doprnt.c: 842: exp--;
  2118  019F  30FF               	movlw	255
  2119  01A0  07DE               	addwf	sprintf@exp^(0+128),f
  2120  01A1  30FF               	movlw	255
  2121  01A2  3DDF               	addwfc	(sprintf@exp+1)^(0+128),f
  2122  01A3                     l3252:	
  2123                           
  2124                           ;doprnt.c: 846: tmpval.integ = scale(-exp);
  2125  01A3  035E               	decf	sprintf@exp^(0+128),w
  2126  01A4  3AFF               	xorlw	255
  2127  01A5  318D  257A  3180   	fcall	_scale
  2128  01A8  0141               	movlb	1	; select bank1
  2129  01A9  0820               	movf	?_scale^(0+128),w
  2130  01AA  00DA               	movwf	sprintf@tmpval^(0+128)
  2131  01AB  0821               	movf	(?_scale+1)^(0+128),w
  2132  01AC  00DB               	movwf	(sprintf@tmpval+1)^(0+128)
  2133  01AD  0822               	movf	(?_scale+2)^(0+128),w
  2134  01AE  00DC               	movwf	(sprintf@tmpval+2)^(0+128)
  2135                           
  2136                           ;doprnt.c: 847: tmpval.integ *= fval;
  2137  01AF  0861               	movf	sprintf@fval^(0+128),w
  2138  01B0  0140               	movlb	0	; select bank0
  2139  01B1  00C8               	movwf	___ftmul@f1
  2140  01B2  0141               	movlb	1	; select bank1
  2141  01B3  0862               	movf	(sprintf@fval+1)^(0+128),w
  2142  01B4  0140               	movlb	0	; select bank0
  2143  01B5  00C9               	movwf	___ftmul@f1+1
  2144  01B6  0141               	movlb	1	; select bank1
  2145  01B7  0863               	movf	(sprintf@fval+2)^(0+128),w
  2146  01B8  0140               	movlb	0	; select bank0
  2147  01B9  00CA               	movwf	___ftmul@f1+2
  2148  01BA  0141               	movlb	1	; select bank1
  2149  01BB  085A               	movf	sprintf@tmpval^(0+128),w
  2150  01BC  0140               	movlb	0	; select bank0
  2151  01BD  00CB               	movwf	___ftmul@f2
  2152  01BE  0141               	movlb	1	; select bank1
  2153  01BF  085B               	movf	(sprintf@tmpval+1)^(0+128),w
  2154  01C0  0140               	movlb	0	; select bank0
  2155  01C1  00CC               	movwf	___ftmul@f2+1
  2156  01C2  0141               	movlb	1	; select bank1
  2157  01C3  085C               	movf	(sprintf@tmpval+2)^(0+128),w
  2158  01C4  0140               	movlb	0	; select bank0
  2159  01C5  00CD               	movwf	___ftmul@f2+2
  2160  01C6  3189  21EF  3180   	fcall	___ftmul
  2161  01C9  0140               	movlb	0	; select bank0
  2162  01CA  0848               	movf	?___ftmul,w
  2163  01CB  0141               	movlb	1	; select bank1
  2164  01CC  00DA               	movwf	sprintf@tmpval^(0+128)
  2165  01CD  0140               	movlb	0	; select bank0
  2166  01CE  0849               	movf	?___ftmul+1,w
  2167  01CF  0141               	movlb	1	; select bank1
  2168  01D0  00DB               	movwf	(sprintf@tmpval+1)^(0+128)
  2169  01D1  0140               	movlb	0	; select bank0
  2170  01D2  084A               	movf	?___ftmul+2,w
  2171  01D3  0141               	movlb	1	; select bank1
  2172  01D4  00DC               	movwf	(sprintf@tmpval+2)^(0+128)
  2173                           
  2174                           ;doprnt.c: 848: if(tmpval.integ < 1.0)
  2175  01D5  085A               	movf	sprintf@tmpval^(0+128),w
  2176  01D6  0140               	movlb	0	; select bank0
  2177  01D7  00B2               	movwf	___ftge@ff1
  2178  01D8  0141               	movlb	1	; select bank1
  2179  01D9  085B               	movf	(sprintf@tmpval+1)^(0+128),w
  2180  01DA  0140               	movlb	0	; select bank0
  2181  01DB  00B3               	movwf	___ftge@ff1+1
  2182  01DC  0141               	movlb	1	; select bank1
  2183  01DD  085C               	movf	(sprintf@tmpval+2)^(0+128),w
  2184  01DE  0140               	movlb	0	; select bank0
  2185  01DF  00B4               	movwf	___ftge@ff1+2
  2186  01E0  3000               	movlw	0
  2187  01E1  00B5               	movwf	___ftge@ff2
  2188  01E2  3080               	movlw	128
  2189  01E3  00B6               	movwf	___ftge@ff2+1
  2190  01E4  303F               	movlw	63
  2191  01E5  00B7               	movwf	___ftge@ff2+2
  2192  01E6  3194  2481  3180   	fcall	___ftge
  2193  01E9  1803               	btfsc	3,0
  2194  01EA  29F0               	goto	l3260
  2195                           
  2196                           ;doprnt.c: 849: exp--;
  2197  01EB  30FF               	movlw	255
  2198  01EC  0141               	movlb	1	; select bank1
  2199  01ED  07DE               	addwf	sprintf@exp^(0+128),f
  2200  01EE  30FF               	movlw	255
  2201  01EF  2A0B               	goto	L1
  2202  01F0                     l3260:	
  2203                           
  2204                           ;doprnt.c: 850: else if(tmpval.integ >= 10.0)
  2205  01F0  0141               	movlb	1	; select bank1
  2206  01F1  085A               	movf	sprintf@tmpval^(0+128),w
  2207  01F2  0140               	movlb	0	; select bank0
  2208  01F3  00B2               	movwf	___ftge@ff1
  2209  01F4  0141               	movlb	1	; select bank1
  2210  01F5  085B               	movf	(sprintf@tmpval+1)^(0+128),w
  2211  01F6  0140               	movlb	0	; select bank0
  2212  01F7  00B3               	movwf	___ftge@ff1+1
  2213  01F8  0141               	movlb	1	; select bank1
  2214  01F9  085C               	movf	(sprintf@tmpval+2)^(0+128),w
  2215  01FA  0140               	movlb	0	; select bank0
  2216  01FB  00B4               	movwf	___ftge@ff1+2
  2217  01FC  3000               	movlw	0
  2218  01FD  00B5               	movwf	___ftge@ff2
  2219  01FE  3020               	movlw	32
  2220  01FF  00B6               	movwf	___ftge@ff2+1
  2221  0200  3041               	movlw	65
  2222  0201  00B7               	movwf	___ftge@ff2+2
  2223  0202  3194  2481  3180   	fcall	___ftge
  2224  0205  1C03               	btfss	3,0
  2225  0206  2A0C               	goto	l159
  2226                           
  2227                           ;doprnt.c: 851: exp++;
  2228  0207  3001               	movlw	1
  2229  0208  0141               	movlb	1	; select bank1
  2230  0209  07DE               	addwf	sprintf@exp^(0+128),f
  2231  020A  3000               	movlw	0
  2232  020B                     L1:	
  2233  020B  3DDF               	addwfc	(sprintf@exp+1)^(0+128),f
  2234  020C                     l159:	
  2235                           
  2236                           ;doprnt.c: 852: }
  2237                           ;doprnt.c: 1112: if(prec <= 12)
  2238  020C  0141               	movlb	1	; select bank1
  2239  020D  0857               	movf	(sprintf@prec+1)^(0+128),w
  2240  020E  3A80               	xorlw	128
  2241  020F  00C6               	movwf	??_sprintf^(0+128)
  2242  0210  3080               	movlw	128
  2243  0211  0246               	subwf	??_sprintf^(0+128),w
  2244  0212  1D03               	skipz
  2245  0213  2A16               	goto	u5085
  2246  0214  300D               	movlw	13
  2247  0215  0256               	subwf	sprintf@prec^(0+128),w
  2248  0216                     u5085:	
  2249  0216  1803               	skipnc
  2250  0217  2A34               	goto	l3266
  2251                           
  2252                           ;doprnt.c: 1113: fval += fround(prec);
  2253  0218  0141               	movlb	1	; select bank1
  2254  0219  0856               	movf	sprintf@prec^(0+128),w
  2255  021A  3185  25AE  3180   	fcall	_fround
  2256  021D  0141               	movlb	1	; select bank1
  2257  021E  0820               	movf	?_fround^(0+128),w
  2258  021F  00AE               	movwf	___ftadd@f1^(0+128)
  2259  0220  0821               	movf	(?_fround+1)^(0+128),w
  2260  0221  00AF               	movwf	(___ftadd@f1+1)^(0+128)
  2261  0222  0822               	movf	(?_fround+2)^(0+128),w
  2262  0223  00B0               	movwf	(___ftadd@f1+2)^(0+128)
  2263  0224  0861               	movf	sprintf@fval^(0+128),w
  2264  0225  00B1               	movwf	___ftadd@f2^(0+128)
  2265  0226  0862               	movf	(sprintf@fval+1)^(0+128),w
  2266  0227  00B2               	movwf	(___ftadd@f2+1)^(0+128)
  2267  0228  0863               	movf	(sprintf@fval+2)^(0+128),w
  2268  0229  00B3               	movwf	(___ftadd@f2+2)^(0+128)
  2269  022A  318B  2359  3180   	fcall	___ftadd
  2270  022D  0141               	movlb	1	; select bank1
  2271  022E  082E               	movf	?___ftadd^(0+128),w
  2272  022F  00E1               	movwf	sprintf@fval^(0+128)
  2273  0230  082F               	movf	(?___ftadd+1)^(0+128),w
  2274  0231  00E2               	movwf	(sprintf@fval+1)^(0+128)
  2275  0232  0830               	movf	(?___ftadd+2)^(0+128),w
  2276  0233  00E3               	movwf	(sprintf@fval+2)^(0+128)
  2277  0234                     l3266:	
  2278                           
  2279                           ;doprnt.c: 1116: if((exp > 9)||(fval != 0 && (unsigned long)fval == 0 && exp > 1)) {
  2280  0234  0141               	movlb	1	; select bank1
  2281  0235  085F               	movf	(sprintf@exp+1)^(0+128),w
  2282  0236  3A80               	xorlw	128
  2283  0237  00C6               	movwf	??_sprintf^(0+128)
  2284  0238  3080               	movlw	128
  2285  0239  0246               	subwf	??_sprintf^(0+128),w
  2286  023A  1D03               	skipz
  2287  023B  2A3E               	goto	u5095
  2288  023C  300A               	movlw	10
  2289  023D  025E               	subwf	sprintf@exp^(0+128),w
  2290  023E                     u5095:	
  2291  023E  1803               	skipnc
  2292  023F  2A61               	goto	l3274
  2293  0240  0141               	movlb	1	; select bank1
  2294  0241  0863               	movf	(sprintf@fval+2)^(0+128),w
  2295  0242  0462               	iorwf	(sprintf@fval+1)^(0+128),w
  2296  0243  0461               	iorwf	sprintf@fval^(0+128),w
  2297  0244  1903               	skipnz
  2298  0245  2ABB               	goto	l3288
  2299  0246  0861               	movf	sprintf@fval^(0+128),w
  2300  0247  00A7               	movwf	___fttol@f1^(0+128)
  2301  0248  0862               	movf	(sprintf@fval+1)^(0+128),w
  2302  0249  00A8               	movwf	(___fttol@f1+1)^(0+128)
  2303  024A  0863               	movf	(sprintf@fval+2)^(0+128),w
  2304  024B  00A9               	movwf	(___fttol@f1+2)^(0+128)
  2305  024C  3197  2779  3180   	fcall	___fttol
  2306  024F  0141               	movlb	1	; select bank1
  2307  0250  082A               	movf	(?___fttol+3)^(0+128),w
  2308  0251  0429               	iorwf	(?___fttol+2)^(0+128),w
  2309  0252  0428               	iorwf	(?___fttol+1)^(0+128),w
  2310  0253  0427               	iorwf	?___fttol^(0+128),w
  2311  0254  1D03               	skipz
  2312  0255  2ABB               	goto	l3288
  2313  0256  085F               	movf	(sprintf@exp+1)^(0+128),w
  2314  0257  3A80               	xorlw	128
  2315  0258  00C6               	movwf	??_sprintf^(0+128)
  2316  0259  3080               	movlw	128
  2317  025A  0246               	subwf	??_sprintf^(0+128),w
  2318  025B  1D03               	skipz
  2319  025C  2A5F               	goto	u5125
  2320  025D  3002               	movlw	2
  2321  025E  025E               	subwf	sprintf@exp^(0+128),w
  2322  025F                     u5125:	
  2323  025F  1C03               	skipc
  2324  0260  2ABB               	goto	l3288
  2325  0261                     l3274:	
  2326                           
  2327                           ;doprnt.c: 1120: if(tmpval.integ < 4.294967296){
  2328  0261  0141               	movlb	1	; select bank1
  2329  0262  085A               	movf	sprintf@tmpval^(0+128),w
  2330  0263  0140               	movlb	0	; select bank0
  2331  0264  00B2               	movwf	___ftge@ff1
  2332  0265  0141               	movlb	1	; select bank1
  2333  0266  085B               	movf	(sprintf@tmpval+1)^(0+128),w
  2334  0267  0140               	movlb	0	; select bank0
  2335  0268  00B3               	movwf	___ftge@ff1+1
  2336  0269  0141               	movlb	1	; select bank1
  2337  026A  085C               	movf	(sprintf@tmpval+2)^(0+128),w
  2338  026B  0140               	movlb	0	; select bank0
  2339  026C  00B4               	movwf	___ftge@ff1+2
  2340  026D  3070               	movlw	112
  2341  026E  00B5               	movwf	___ftge@ff2
  2342  026F  3089               	movlw	137
  2343  0270  00B6               	movwf	___ftge@ff2+1
  2344  0271  3040               	movlw	64
  2345  0272  00B7               	movwf	___ftge@ff2+2
  2346  0273  3194  2481  3180   	fcall	___ftge
  2347  0276  1803               	btfsc	3,0
  2348  0277  2A7A               	goto	l3278
  2349                           
  2350                           ;doprnt.c: 1121: exp -= (sizeof dpowers/sizeof dpowers[0])-1;
  2351  0278  30F7               	movlw	247
  2352  0279  2A7B               	goto	L2
  2353  027A                     l3278:	
  2354                           ;doprnt.c: 1122: }else{
  2355                           
  2356                           
  2357                           ;doprnt.c: 1123: exp -= (sizeof dpowers/sizeof dpowers[0])-2;
  2358  027A  30F8               	movlw	248
  2359  027B                     L2:	
  2360  027B  0141               	movlb	1	; select bank1
  2361  027C  07DE               	addwf	sprintf@exp^(0+128),f
  2362  027D  30FF               	movlw	255
  2363  027E  3DDF               	addwfc	(sprintf@exp+1)^(0+128),f
  2364                           
  2365                           ;doprnt.c: 1124: }
  2366                           ;doprnt.c: 1125: tmpval.integ = scale(exp);
  2367  027F  085E               	movf	sprintf@exp^(0+128),w
  2368  0280  318D  257A  3180   	fcall	_scale
  2369  0283  0141               	movlb	1	; select bank1
  2370  0284  0820               	movf	?_scale^(0+128),w
  2371  0285  00DA               	movwf	sprintf@tmpval^(0+128)
  2372  0286  0821               	movf	(?_scale+1)^(0+128),w
  2373  0287  00DB               	movwf	(sprintf@tmpval+1)^(0+128)
  2374  0288  0822               	movf	(?_scale+2)^(0+128),w
  2375  0289  00DC               	movwf	(sprintf@tmpval+2)^(0+128)
  2376                           
  2377                           ;doprnt.c: 1126: val = ((sizeof(double)== 3) ? _tdiv_to_l_(fval,tmpval.integ) : _div_to_
      +                          l_(fval,tmpval.integ));
  2378  028A  0861               	movf	sprintf@fval^(0+128),w
  2379  028B  0140               	movlb	0	; select bank0
  2380  028C  00B2               	movwf	__tdiv_to_l_@f1
  2381  028D  0141               	movlb	1	; select bank1
  2382  028E  0862               	movf	(sprintf@fval+1)^(0+128),w
  2383  028F  0140               	movlb	0	; select bank0
  2384  0290  00B3               	movwf	__tdiv_to_l_@f1+1
  2385  0291  0141               	movlb	1	; select bank1
  2386  0292  0863               	movf	(sprintf@fval+2)^(0+128),w
  2387  0293  0140               	movlb	0	; select bank0
  2388  0294  00B4               	movwf	__tdiv_to_l_@f1+2
  2389  0295  0141               	movlb	1	; select bank1
  2390  0296  085A               	movf	sprintf@tmpval^(0+128),w
  2391  0297  0140               	movlb	0	; select bank0
  2392  0298  00B5               	movwf	__tdiv_to_l_@f2
  2393  0299  0141               	movlb	1	; select bank1
  2394  029A  085B               	movf	(sprintf@tmpval+1)^(0+128),w
  2395  029B  0140               	movlb	0	; select bank0
  2396  029C  00B6               	movwf	__tdiv_to_l_@f2+1
  2397  029D  0141               	movlb	1	; select bank1
  2398  029E  085C               	movf	(sprintf@tmpval+2)^(0+128),w
  2399  029F  0140               	movlb	0	; select bank0
  2400  02A0  00B7               	movwf	__tdiv_to_l_@f2+2
  2401  02A1  318A  22A3  3180   	fcall	__tdiv_to_l_
  2402  02A4  0140               	movlb	0	; select bank0
  2403  02A5  0835               	movf	?__tdiv_to_l_+3,w
  2404  02A6  0141               	movlb	1	; select bank1
  2405  02A7  00D5               	movwf	(sprintf@val+3)^(0+128)
  2406  02A8  0140               	movlb	0	; select bank0
  2407  02A9  0834               	movf	?__tdiv_to_l_+2,w
  2408  02AA  0141               	movlb	1	; select bank1
  2409  02AB  00D4               	movwf	(sprintf@val+2)^(0+128)
  2410  02AC  0140               	movlb	0	; select bank0
  2411  02AD  0833               	movf	?__tdiv_to_l_+1,w
  2412  02AE  0141               	movlb	1	; select bank1
  2413  02AF  00D3               	movwf	(sprintf@val+1)^(0+128)
  2414  02B0  0140               	movlb	0	; select bank0
  2415  02B1  0832               	movf	?__tdiv_to_l_,w
  2416  02B2  0141               	movlb	1	; select bank1
  2417  02B3  00D2               	movwf	sprintf@val^(0+128)
  2418                           
  2419                           ;doprnt.c: 1129: fval = 0.0;
  2420  02B4  3000               	movlw	0
  2421  02B5  00E1               	movwf	sprintf@fval^(0+128)
  2422  02B6  3000               	movlw	0
  2423  02B7  00E2               	movwf	(sprintf@fval+1)^(0+128)
  2424  02B8  3000               	movlw	0
  2425  02B9  00E3               	movwf	(sprintf@fval+2)^(0+128)
  2426                           
  2427                           ;doprnt.c: 1130: } else {
  2428  02BA  2AFE               	goto	l3292
  2429  02BB                     l3288:	
  2430                           
  2431                           ;doprnt.c: 1131: val = (unsigned long)fval;
  2432  02BB  0141               	movlb	1	; select bank1
  2433  02BC  0861               	movf	sprintf@fval^(0+128),w
  2434  02BD  00A7               	movwf	___fttol@f1^(0+128)
  2435  02BE  0862               	movf	(sprintf@fval+1)^(0+128),w
  2436  02BF  00A8               	movwf	(___fttol@f1+1)^(0+128)
  2437  02C0  0863               	movf	(sprintf@fval+2)^(0+128),w
  2438  02C1  00A9               	movwf	(___fttol@f1+2)^(0+128)
  2439  02C2  3197  2779  3180   	fcall	___fttol
  2440  02C5  0141               	movlb	1	; select bank1
  2441  02C6  082A               	movf	(?___fttol+3)^(0+128),w
  2442  02C7  00D5               	movwf	(sprintf@val+3)^(0+128)
  2443  02C8  0829               	movf	(?___fttol+2)^(0+128),w
  2444  02C9  00D4               	movwf	(sprintf@val+2)^(0+128)
  2445  02CA  0828               	movf	(?___fttol+1)^(0+128),w
  2446  02CB  00D3               	movwf	(sprintf@val+1)^(0+128)
  2447  02CC  0827               	movf	?___fttol^(0+128),w
  2448  02CD  00D2               	movwf	sprintf@val^(0+128)
  2449                           
  2450                           ;doprnt.c: 1132: fval -= (double)val;
  2451  02CE  0855               	movf	(sprintf@val+3)^(0+128),w
  2452  02CF  0140               	movlb	0	; select bank0
  2453  02D0  00BD               	movwf	___lltoft@c+3
  2454  02D1  0141               	movlb	1	; select bank1
  2455  02D2  0854               	movf	(sprintf@val+2)^(0+128),w
  2456  02D3  0140               	movlb	0	; select bank0
  2457  02D4  00BC               	movwf	___lltoft@c+2
  2458  02D5  0141               	movlb	1	; select bank1
  2459  02D6  0853               	movf	(sprintf@val+1)^(0+128),w
  2460  02D7  0140               	movlb	0	; select bank0
  2461  02D8  00BB               	movwf	___lltoft@c+1
  2462  02D9  0141               	movlb	1	; select bank1
  2463  02DA  0852               	movf	sprintf@val^(0+128),w
  2464  02DB  0140               	movlb	0	; select bank0
  2465  02DC  00BA               	movwf	___lltoft@c
  2466  02DD  3194  241C  3180   	fcall	___lltoft
  2467  02E0  0140               	movlb	0	; select bank0
  2468  02E1  083A               	movf	?___lltoft,w
  2469  02E2  0141               	movlb	1	; select bank1
  2470  02E3  00BB               	movwf	___ftsub@f2^(0+128)
  2471  02E4  0140               	movlb	0	; select bank0
  2472  02E5  083B               	movf	?___lltoft+1,w
  2473  02E6  0141               	movlb	1	; select bank1
  2474  02E7  00BC               	movwf	(___ftsub@f2+1)^(0+128)
  2475  02E8  0140               	movlb	0	; select bank0
  2476  02E9  083C               	movf	?___lltoft+2,w
  2477  02EA  0141               	movlb	1	; select bank1
  2478  02EB  00BD               	movwf	(___ftsub@f2+2)^(0+128)
  2479  02EC  0861               	movf	sprintf@fval^(0+128),w
  2480  02ED  00BE               	movwf	___ftsub@f1^(0+128)
  2481  02EE  0862               	movf	(sprintf@fval+1)^(0+128),w
  2482  02EF  00BF               	movwf	(___ftsub@f1+1)^(0+128)
  2483  02F0  0863               	movf	(sprintf@fval+2)^(0+128),w
  2484  02F1  00C0               	movwf	(___ftsub@f1+2)^(0+128)
  2485  02F2  3193  23DD  3180   	fcall	___ftsub
  2486  02F5  0141               	movlb	1	; select bank1
  2487  02F6  083B               	movf	?___ftsub^(0+128),w
  2488  02F7  00E1               	movwf	sprintf@fval^(0+128)
  2489  02F8  083C               	movf	(?___ftsub+1)^(0+128),w
  2490  02F9  00E2               	movwf	(sprintf@fval+1)^(0+128)
  2491  02FA  083D               	movf	(?___ftsub+2)^(0+128),w
  2492  02FB  00E3               	movwf	(sprintf@fval+2)^(0+128)
  2493                           
  2494                           ;doprnt.c: 1133: exp = 0;
  2495  02FC  01DE               	clrf	sprintf@exp^(0+128)
  2496  02FD  01DF               	clrf	(sprintf@exp+1)^(0+128)
  2497  02FE                     l3292:	
  2498                           
  2499                           ;doprnt.c: 1134: }
  2500                           ;doprnt.c: 1136: for(c = 1 ; c != (sizeof dpowers/sizeof dpowers[0]) ; c++)
  2501  02FE  01E4               	clrf	sprintf@c^(0+128)
  2502  02FF  0AE4               	incf	sprintf@c^(0+128),f
  2503  0300  300A               	movlw	10
  2504  0301  0664               	xorwf	sprintf@c^(0+128),w
  2505  0302  1903               	btfsc	3,2
  2506  0303  2B31               	goto	l3304
  2507  0304                     l3298:	
  2508                           
  2509                           ;doprnt.c: 1137: if(val < dpowers[c])
  2510  0304  0864               	movf	sprintf@c^(0+128),w
  2511  0305  00C6               	movwf	??_sprintf^(0+128)
  2512  0306  01C7               	clrf	(??_sprintf^(0+128)+1)
  2513  0307  35C6               	lslf	??_sprintf^(0+128),f
  2514  0308  0DC7               	rlf	(??_sprintf^(0+128)+1),f
  2515  0309  35C6               	lslf	??_sprintf^(0+128),f
  2516  030A  0DC7               	rlf	(??_sprintf^(0+128)+1),f
  2517  030B  3030               	movlw	low (_dpowers| (0+32768))
  2518  030C  0746               	addwf	??_sprintf^(0+128),w
  2519  030D  0084               	movwf	4
  2520  030E  3098               	movlw	high (_dpowers| (0+32768))
  2521  030F  3D47               	addwfc	(??_sprintf+1)^(0+128),w
  2522  0310  0085               	movwf	5
  2523  0311  3F00               	moviw [0]fsr0
  2524  0312  00C8               	movwf	(??_sprintf+2)^(0+128)
  2525  0313  3F01               	moviw [1]fsr0
  2526  0314  00C9               	movwf	((??_sprintf+2)^(0+128)+1)
  2527  0315  3F02               	moviw [2]fsr0
  2528  0316  00CA               	movwf	((??_sprintf+2)^(0+128)+2)
  2529  0317  3F03               	moviw [3]fsr0
  2530  0318  00CB               	movwf	((??_sprintf+2)^(0+128)+3)
  2531  0319  084B               	movf	(??_sprintf+5)^(0+128),w
  2532  031A  0255               	subwf	(sprintf@val+3)^(0+128),w
  2533  031B  1D03               	skipz
  2534  031C  2B27               	goto	u5155
  2535  031D  084A               	movf	(??_sprintf+4)^(0+128),w
  2536  031E  0254               	subwf	(sprintf@val+2)^(0+128),w
  2537  031F  1D03               	skipz
  2538  0320  2B27               	goto	u5155
  2539  0321  0849               	movf	(??_sprintf+3)^(0+128),w
  2540  0322  0253               	subwf	(sprintf@val+1)^(0+128),w
  2541  0323  1D03               	skipz
  2542  0324  2B27               	goto	u5155
  2543  0325  0848               	movf	(??_sprintf+2)^(0+128),w
  2544  0326  0252               	subwf	sprintf@val^(0+128),w
  2545  0327                     u5155:	
  2546  0327  1C03               	btfss	3,0
  2547  0328  2B31               	goto	l3304
  2548                           
  2549                           ;doprnt.c: 1138: break;
  2550  0329  3001               	movlw	1
  2551  032A  00C6               	movwf	??_sprintf^(0+128)
  2552  032B  0846               	movf	??_sprintf^(0+128),w
  2553  032C  07E4               	addwf	sprintf@c^(0+128),f
  2554  032D  300A               	movlw	10
  2555  032E  0664               	xorwf	sprintf@c^(0+128),w
  2556  032F  1D03               	btfss	3,2
  2557  0330  2B04               	goto	l3298
  2558  0331                     l3304:	
  2559                           
  2560                           ;doprnt.c: 1142: width -= prec + c + exp;
  2561  0331  0864               	movf	sprintf@c^(0+128),w
  2562  0332  00C6               	movwf	??_sprintf^(0+128)
  2563  0333  01C7               	clrf	(??_sprintf^(0+128)+1)
  2564  0334  1BC6               	btfsc	??_sprintf^(0+128),7
  2565  0335  03C7               	decf	(??_sprintf^(0+128)+1),f
  2566  0336  0856               	movf	sprintf@prec^(0+128),w
  2567  0337  0746               	addwf	??_sprintf^(0+128),w
  2568  0338  00C8               	movwf	(??_sprintf+2)^(0+128)
  2569  0339  0857               	movf	(sprintf@prec+1)^(0+128),w
  2570  033A  3D47               	addwfc	(??_sprintf+1)^(0+128),w
  2571  033B  00C9               	movwf	(??_sprintf+3)^(0+128)
  2572  033C  085E               	movf	sprintf@exp^(0+128),w
  2573  033D  0748               	addwf	(??_sprintf+2)^(0+128),w
  2574  033E  00CA               	movwf	(??_sprintf+4)^(0+128)
  2575  033F  085F               	movf	(sprintf@exp+1)^(0+128),w
  2576  0340  3D49               	addwfc	(??_sprintf+3)^(0+128),w
  2577  0341  00CB               	movwf	(??_sprintf+5)^(0+128)
  2578  0342  084A               	movf	(??_sprintf+4)^(0+128),w
  2579  0343  02D8               	subwf	sprintf@width^(0+128),f
  2580  0344  084B               	movf	(??_sprintf+5)^(0+128),w
  2581  0345  3BD9               	subwfb	(sprintf@width+1)^(0+128),f
  2582                           
  2583                           ;doprnt.c: 1143: if(
  2584                           ;doprnt.c: 1147: prec)
  2585  0346  0856               	movf	sprintf@prec^(0+128),w
  2586  0347  0457               	iorwf	(sprintf@prec+1)^(0+128),w
  2587  0348  1903               	btfsc	3,2
  2588  0349  2B4E               	goto	l3308
  2589                           
  2590                           ;doprnt.c: 1148: width--;
  2591  034A  30FF               	movlw	255
  2592  034B  07D8               	addwf	sprintf@width^(0+128),f
  2593  034C  30FF               	movlw	255
  2594  034D  3DD9               	addwfc	(sprintf@width+1)^(0+128),f
  2595  034E                     l3308:	
  2596                           
  2597                           ;doprnt.c: 1149: if(flag & 0x03)
  2598  034E  3003               	movlw	3
  2599  034F  0550               	andwf	sprintf@flag^(0+128),w
  2600  0350  00C6               	movwf	??_sprintf^(0+128)
  2601  0351  3000               	movlw	0
  2602  0352  0551               	andwf	(sprintf@flag+1)^(0+128),w
  2603  0353  00C7               	movwf	(??_sprintf+1)^(0+128)
  2604  0354  0846               	movf	??_sprintf^(0+128),w
  2605  0355  0447               	iorwf	(??_sprintf^(0+128)+1),w
  2606  0356  1903               	btfsc	3,2
  2607  0357  2B5C               	goto	l3318
  2608  0358                     l3316:	
  2609                           
  2610                           ;doprnt.c: 1182: width--;
  2611  0358  30FF               	movlw	255
  2612  0359  07D8               	addwf	sprintf@width^(0+128),f
  2613  035A  30FF               	movlw	255
  2614  035B  3DD9               	addwfc	(sprintf@width+1)^(0+128),f
  2615  035C                     l3318:	
  2616  035C  0859               	movf	(sprintf@width+1)^(0+128),w
  2617  035D  3A80               	xorlw	128
  2618  035E  00C6               	movwf	??_sprintf^(0+128)
  2619  035F  3080               	movlw	128
  2620  0360  0246               	subwf	??_sprintf^(0+128),w
  2621  0361  1D03               	skipz
  2622  0362  2B65               	goto	u5195
  2623  0363  3001               	movlw	1
  2624  0364  0258               	subwf	sprintf@width^(0+128),w
  2625  0365                     u5195:	
  2626  0365  1C03               	btfss	3,0
  2627  0366  2B75               	goto	l3320
  2628                           
  2629                           ;doprnt.c: 1181: ((*sp++ = (' ')));
  2630                           
  2631                           ;doprnt.c: 1175: {
  2632                           ;doprnt.c: 1180: while(width > 0) {
  2633                           
  2634                           ;doprnt.c: 1150: width--;
  2635  0367  3020               	movlw	32
  2636  0368  0141               	movlb	1	; select bank1
  2637  0369  00C6               	movwf	??_sprintf^(0+128)
  2638  036A  0860               	movf	sprintf@sp^(0+128),w
  2639  036B  0086               	movwf	6
  2640  036C  3001               	movlw	1	; select bank2/3
  2641  036D  0087               	movwf	7
  2642  036E  0846               	movf	??_sprintf^(0+128),w
  2643  036F  0081               	movwf	1
  2644  0370  3001               	movlw	1
  2645  0371  00C6               	movwf	??_sprintf^(0+128)
  2646  0372  0846               	movf	??_sprintf^(0+128),w
  2647  0373  07E0               	addwf	sprintf@sp^(0+128),f
  2648  0374  2B58               	goto	l3316
  2649  0375                     l3320:	
  2650                           
  2651                           ;doprnt.c: 1183: }
  2652                           ;doprnt.c: 1188: if(flag & 0x03)
  2653  0375  3003               	movlw	3
  2654  0376  0141               	movlb	1	; select bank1
  2655  0377  0550               	andwf	sprintf@flag^(0+128),w
  2656  0378  00C6               	movwf	??_sprintf^(0+128)
  2657  0379  3000               	movlw	0
  2658  037A  0551               	andwf	(sprintf@flag+1)^(0+128),w
  2659  037B  00C7               	movwf	(??_sprintf+1)^(0+128)
  2660  037C  0846               	movf	??_sprintf^(0+128),w
  2661  037D  0447               	iorwf	(??_sprintf^(0+128)+1),w
  2662  037E  1903               	btfsc	3,2
  2663  037F  2B8C               	goto	l3334
  2664                           
  2665                           ;doprnt.c: 1190: ((*sp++ = ('-')));
  2666  0380  302D               	movlw	45
  2667  0381                     L6:	
  2668  0381  00C6               	movwf	??_sprintf^(0+128)
  2669  0382  0860               	movf	sprintf@sp^(0+128),w
  2670  0383  0086               	movwf	6
  2671  0384  3001               	movlw	1	; select bank2/3
  2672  0385  0087               	movwf	7
  2673  0386  0846               	movf	??_sprintf^(0+128),w
  2674  0387  0081               	movwf	1
  2675  0388  3001               	movlw	1
  2676  0389  00C6               	movwf	??_sprintf^(0+128)
  2677  038A  0846               	movf	??_sprintf^(0+128),w
  2678  038B  07E0               	addwf	sprintf@sp^(0+128),f
  2679  038C                     l3334:	
  2680  038C  30FF               	movlw	255
  2681  038D  00C6               	movwf	??_sprintf^(0+128)
  2682  038E  0846               	movf	??_sprintf^(0+128),w
  2683  038F  07E4               	addwf	sprintf@c^(0+128),f
  2684  0390  0A64               	incf	sprintf@c^(0+128),w
  2685  0391  1903               	btfsc	3,2
  2686  0392  2C0C               	goto	l3342
  2687                           
  2688                           ;doprnt.c: 1200: {
  2689                           ;doprnt.c: 1201: tmpval.vd = val/dpowers[c];
  2690                           
  2691                           ;doprnt.c: 1195: }
  2692                           ;doprnt.c: 1196: while(c--) {
  2693  0393  0864               	movf	sprintf@c^(0+128),w
  2694  0394  00C6               	movwf	??_sprintf^(0+128)
  2695  0395  01C7               	clrf	(??_sprintf^(0+128)+1)
  2696  0396  35C6               	lslf	??_sprintf^(0+128),f
  2697  0397  0DC7               	rlf	(??_sprintf^(0+128)+1),f
  2698  0398  35C6               	lslf	??_sprintf^(0+128),f
  2699  0399  0DC7               	rlf	(??_sprintf^(0+128)+1),f
  2700  039A  3030               	movlw	low (_dpowers| (0+32768))
  2701  039B  0746               	addwf	??_sprintf^(0+128),w
  2702  039C  0084               	movwf	4
  2703  039D  3098               	movlw	high (_dpowers| (0+32768))
  2704  039E  3D47               	addwfc	(??_sprintf+1)^(0+128),w
  2705  039F  0085               	movwf	5
  2706  03A0  3F00               	moviw [0]fsr0
  2707  03A1  0140               	movlb	0	; select bank0
  2708  03A2  00B2               	movwf	___lldiv@divisor
  2709  03A3  3F01               	moviw [1]fsr0
  2710  03A4  00B3               	movwf	___lldiv@divisor+1
  2711  03A5  3F02               	moviw [2]fsr0
  2712  03A6  00B4               	movwf	___lldiv@divisor+2
  2713  03A7  3F03               	moviw [3]fsr0
  2714  03A8  00B5               	movwf	___lldiv@divisor+3
  2715  03A9  0141               	movlb	1	; select bank1
  2716  03AA  0855               	movf	(sprintf@val+3)^(0+128),w
  2717  03AB  0140               	movlb	0	; select bank0
  2718  03AC  00B9               	movwf	___lldiv@dividend+3
  2719  03AD  0141               	movlb	1	; select bank1
  2720  03AE  0854               	movf	(sprintf@val+2)^(0+128),w
  2721  03AF  0140               	movlb	0	; select bank0
  2722  03B0  00B8               	movwf	___lldiv@dividend+2
  2723  03B1  0141               	movlb	1	; select bank1
  2724  03B2  0853               	movf	(sprintf@val+1)^(0+128),w
  2725  03B3  0140               	movlb	0	; select bank0
  2726  03B4  00B7               	movwf	___lldiv@dividend+1
  2727  03B5  0141               	movlb	1	; select bank1
  2728  03B6  0852               	movf	sprintf@val^(0+128),w
  2729  03B7  0140               	movlb	0	; select bank0
  2730  03B8  00B6               	movwf	___lldiv@dividend
  2731  03B9  3195  25E9  3180   	fcall	___lldiv
  2732  03BC  0140               	movlb	0	; select bank0
  2733  03BD  0835               	movf	?___lldiv+3,w
  2734  03BE  0141               	movlb	1	; select bank1
  2735  03BF  00DD               	movwf	(sprintf@tmpval+3)^(0+128)
  2736  03C0  0140               	movlb	0	; select bank0
  2737  03C1  0834               	movf	?___lldiv+2,w
  2738  03C2  0141               	movlb	1	; select bank1
  2739  03C3  00DC               	movwf	(sprintf@tmpval+2)^(0+128)
  2740  03C4  0140               	movlb	0	; select bank0
  2741  03C5  0833               	movf	?___lldiv+1,w
  2742  03C6  0141               	movlb	1	; select bank1
  2743  03C7  00DB               	movwf	(sprintf@tmpval+1)^(0+128)
  2744  03C8  0140               	movlb	0	; select bank0
  2745  03C9  0832               	movf	?___lldiv,w
  2746  03CA  0141               	movlb	1	; select bank1
  2747  03CB  00DA               	movwf	sprintf@tmpval^(0+128)
  2748                           
  2749                           ;doprnt.c: 1202: tmpval.vd %= 10;
  2750  03CC  3000               	movlw	0
  2751  03CD  0140               	movlb	0	; select bank0
  2752  03CE  00B5               	movwf	___llmod@divisor+3
  2753  03CF  3000               	movlw	0
  2754  03D0  00B4               	movwf	___llmod@divisor+2
  2755  03D1  3000               	movlw	0
  2756  03D2  00B3               	movwf	___llmod@divisor+1
  2757  03D3  300A               	movlw	10
  2758  03D4  00B2               	movwf	___llmod@divisor
  2759  03D5  0141               	movlb	1	; select bank1
  2760  03D6  085D               	movf	(sprintf@tmpval+3)^(0+128),w
  2761  03D7  0140               	movlb	0	; select bank0
  2762  03D8  00B9               	movwf	___llmod@dividend+3
  2763  03D9  0141               	movlb	1	; select bank1
  2764  03DA  085C               	movf	(sprintf@tmpval+2)^(0+128),w
  2765  03DB  0140               	movlb	0	; select bank0
  2766  03DC  00B8               	movwf	___llmod@dividend+2
  2767  03DD  0141               	movlb	1	; select bank1
  2768  03DE  085B               	movf	(sprintf@tmpval+1)^(0+128),w
  2769  03DF  0140               	movlb	0	; select bank0
  2770  03E0  00B7               	movwf	___llmod@dividend+1
  2771  03E1  0141               	movlb	1	; select bank1
  2772  03E2  085A               	movf	sprintf@tmpval^(0+128),w
  2773  03E3  0140               	movlb	0	; select bank0
  2774  03E4  00B6               	movwf	___llmod@dividend
  2775  03E5  3194  24BD  3180   	fcall	___llmod
  2776  03E8  0140               	movlb	0	; select bank0
  2777  03E9  0835               	movf	?___llmod+3,w
  2778  03EA  0141               	movlb	1	; select bank1
  2779  03EB  00DD               	movwf	(sprintf@tmpval+3)^(0+128)
  2780  03EC  0140               	movlb	0	; select bank0
  2781  03ED  0834               	movf	?___llmod+2,w
  2782  03EE  0141               	movlb	1	; select bank1
  2783  03EF  00DC               	movwf	(sprintf@tmpval+2)^(0+128)
  2784  03F0  0140               	movlb	0	; select bank0
  2785  03F1  0833               	movf	?___llmod+1,w
  2786  03F2  0141               	movlb	1	; select bank1
  2787  03F3  00DB               	movwf	(sprintf@tmpval+1)^(0+128)
  2788  03F4  0140               	movlb	0	; select bank0
  2789  03F5  0832               	movf	?___llmod,w
  2790  03F6  0141               	movlb	1	; select bank1
  2791  03F7  00DA               	movwf	sprintf@tmpval^(0+128)
  2792                           
  2793                           ;doprnt.c: 1203: ((*sp++ = ('0' + tmpval.vd)));
  2794  03F8  085A               	movf	sprintf@tmpval^(0+128),w
  2795  03F9  3E30               	addlw	48
  2796  03FA  2B81               	goto	L6
  2797  03FB                     l3336:	
  2798                           ;doprnt.c: 1204: }
  2799                           ;doprnt.c: 1206: }
  2800                           ;doprnt.c: 1207: while(exp > 0) {
  2801                           
  2802                           
  2803                           ;doprnt.c: 1208: ((*sp++ = ('0')));
  2804  03FB  3030               	movlw	48
  2805  03FC  0141               	movlb	1	; select bank1
  2806  03FD  00C6               	movwf	??_sprintf^(0+128)
  2807  03FE  0860               	movf	sprintf@sp^(0+128),w
  2808  03FF  0086               	movwf	6
  2809  0400  3001               	movlw	1	; select bank2/3
  2810  0401  0087               	movwf	7
  2811  0402  0846               	movf	??_sprintf^(0+128),w
  2812  0403  0081               	movwf	1
  2813  0404  3001               	movlw	1
  2814  0405  00C6               	movwf	??_sprintf^(0+128)
  2815  0406  0846               	movf	??_sprintf^(0+128),w
  2816  0407  07E0               	addwf	sprintf@sp^(0+128),f
  2817                           
  2818                           ;doprnt.c: 1209: exp--;
  2819  0408  30FF               	movlw	255
  2820  0409  07DE               	addwf	sprintf@exp^(0+128),f
  2821  040A  30FF               	movlw	255
  2822  040B  3DDF               	addwfc	(sprintf@exp+1)^(0+128),f
  2823  040C                     l3342:	
  2824  040C  085F               	movf	(sprintf@exp+1)^(0+128),w
  2825  040D  3A80               	xorlw	128
  2826  040E  00C6               	movwf	??_sprintf^(0+128)
  2827  040F  3080               	movlw	128
  2828  0410  0246               	subwf	??_sprintf^(0+128),w
  2829  0411  1D03               	skipz
  2830  0412  2C15               	goto	u5225
  2831  0413  3001               	movlw	1
  2832  0414  025E               	subwf	sprintf@exp^(0+128),w
  2833  0415                     u5225:	
  2834  0415  1803               	skipnc
  2835  0416  2BFB               	goto	l3336
  2836                           
  2837                           ;doprnt.c: 1210: }
  2838                           ;doprnt.c: 1211: if(prec > (int)((sizeof dpowers/sizeof dpowers[0])-2))
  2839  0417  0141               	movlb	1	; select bank1
  2840  0418  0857               	movf	(sprintf@prec+1)^(0+128),w
  2841  0419  3A80               	xorlw	128
  2842  041A  00C6               	movwf	??_sprintf^(0+128)
  2843  041B  3080               	movlw	128
  2844  041C  0246               	subwf	??_sprintf^(0+128),w
  2845  041D  1D03               	skipz
  2846  041E  2C21               	goto	u5235
  2847  041F  3009               	movlw	9
  2848  0420  0256               	subwf	sprintf@prec^(0+128),w
  2849  0421                     u5235:	
  2850  0421  1C03               	skipc
  2851  0422  2C26               	goto	l3348
  2852                           
  2853                           ;doprnt.c: 1212: c = (sizeof dpowers/sizeof dpowers[0])-2;
  2854  0423  3008               	movlw	8
  2855  0424  0141               	movlb	1	; select bank1
  2856  0425  2C28               	goto	L3
  2857  0426                     l3348:	
  2858                           
  2859                           ;doprnt.c: 1213: else
  2860                           ;doprnt.c: 1214: c = prec;
  2861  0426  0141               	movlb	1	; select bank1
  2862  0427  0856               	movf	sprintf@prec^(0+128),w
  2863  0428                     L3:	
  2864  0428  00C6               	movwf	??_sprintf^(0+128)
  2865  0429  0846               	movf	??_sprintf^(0+128),w
  2866  042A  00E4               	movwf	sprintf@c^(0+128)
  2867                           
  2868                           ;doprnt.c: 1215: prec -= c;
  2869  042B  0864               	movf	sprintf@c^(0+128),w
  2870  042C  00C6               	movwf	??_sprintf^(0+128)
  2871  042D  01C7               	clrf	(??_sprintf^(0+128)+1)
  2872  042E  1BC6               	btfsc	??_sprintf^(0+128),7
  2873  042F  03C7               	decf	(??_sprintf^(0+128)+1),f
  2874  0430  0846               	movf	??_sprintf^(0+128),w
  2875  0431  02D6               	subwf	sprintf@prec^(0+128),f
  2876  0432  0847               	movf	(??_sprintf+1)^(0+128),w
  2877  0433  3BD7               	subwfb	(sprintf@prec+1)^(0+128),f
  2878                           
  2879                           ;doprnt.c: 1219: if(c)
  2880  0434  0864               	movf	sprintf@c^(0+128),w
  2881  0435  1903               	btfsc	3,2
  2882  0436  2C43               	goto	l3356
  2883                           
  2884                           ;doprnt.c: 1221: ((*sp++ = ('.')));
  2885  0437  302E               	movlw	46
  2886  0438  00C6               	movwf	??_sprintf^(0+128)
  2887  0439  0860               	movf	sprintf@sp^(0+128),w
  2888  043A  0086               	movwf	6
  2889  043B  3001               	movlw	1	; select bank2/3
  2890  043C  0087               	movwf	7
  2891  043D  0846               	movf	??_sprintf^(0+128),w
  2892  043E  0081               	movwf	1
  2893  043F  3001               	movlw	1
  2894  0440  00C6               	movwf	??_sprintf^(0+128)
  2895  0441  0846               	movf	??_sprintf^(0+128),w
  2896  0442  07E0               	addwf	sprintf@sp^(0+128),f
  2897  0443                     l3356:	
  2898                           
  2899                           ;doprnt.c: 1227: val = (long)(fval * scale(c));
  2900  0443  0864               	movf	sprintf@c^(0+128),w
  2901  0444  318D  257A  3180   	fcall	_scale
  2902  0447  0141               	movlb	1	; select bank1
  2903  0448  0820               	movf	?_scale^(0+128),w
  2904  0449  00CC               	movwf	_sprintf$974^(0+128)
  2905  044A  0821               	movf	(?_scale+1)^(0+128),w
  2906  044B  00CD               	movwf	(_sprintf$974+1)^(0+128)
  2907  044C  0822               	movf	(?_scale+2)^(0+128),w
  2908  044D  00CE               	movwf	(_sprintf$974+2)^(0+128)
  2909                           
  2910                           ;doprnt.c: 1227: val = (long)(fval * scale(c));
  2911  044E  084C               	movf	_sprintf$974^(0+128),w
  2912  044F  0140               	movlb	0	; select bank0
  2913  0450  00CB               	movwf	___ftmul@f2
  2914  0451  0141               	movlb	1	; select bank1
  2915  0452  084D               	movf	(_sprintf$974+1)^(0+128),w
  2916  0453  0140               	movlb	0	; select bank0
  2917  0454  00CC               	movwf	___ftmul@f2+1
  2918  0455  0141               	movlb	1	; select bank1
  2919  0456  084E               	movf	(_sprintf$974+2)^(0+128),w
  2920  0457  0140               	movlb	0	; select bank0
  2921  0458  00CD               	movwf	___ftmul@f2+2
  2922  0459  0141               	movlb	1	; select bank1
  2923  045A  0861               	movf	sprintf@fval^(0+128),w
  2924  045B  0140               	movlb	0	; select bank0
  2925  045C  00C8               	movwf	___ftmul@f1
  2926  045D  0141               	movlb	1	; select bank1
  2927  045E  0862               	movf	(sprintf@fval+1)^(0+128),w
  2928  045F  0140               	movlb	0	; select bank0
  2929  0460  00C9               	movwf	___ftmul@f1+1
  2930  0461  0141               	movlb	1	; select bank1
  2931  0462  0863               	movf	(sprintf@fval+2)^(0+128),w
  2932  0463  0140               	movlb	0	; select bank0
  2933  0464  00CA               	movwf	___ftmul@f1+2
  2934  0465  3189  21EF  3180   	fcall	___ftmul
  2935  0468  0140               	movlb	0	; select bank0
  2936  0469  0848               	movf	?___ftmul,w
  2937  046A  0141               	movlb	1	; select bank1
  2938  046B  00A7               	movwf	___fttol@f1^(0+128)
  2939  046C  0140               	movlb	0	; select bank0
  2940  046D  0849               	movf	?___ftmul+1,w
  2941  046E  0141               	movlb	1	; select bank1
  2942  046F  00A8               	movwf	(___fttol@f1+1)^(0+128)
  2943  0470  0140               	movlb	0	; select bank0
  2944  0471  084A               	movf	?___ftmul+2,w
  2945  0472  0141               	movlb	1	; select bank1
  2946  0473  00A9               	movwf	(___fttol@f1+2)^(0+128)
  2947  0474  3197  2779  3180   	fcall	___fttol
  2948  0477  0141               	movlb	1	; select bank1
  2949  0478  082A               	movf	(?___fttol+3)^(0+128),w
  2950  0479  00D5               	movwf	(sprintf@val+3)^(0+128)
  2951  047A  0829               	movf	(?___fttol+2)^(0+128),w
  2952  047B  00D4               	movwf	(sprintf@val+2)^(0+128)
  2953  047C  0828               	movf	(?___fttol+1)^(0+128),w
  2954  047D  00D3               	movwf	(sprintf@val+1)^(0+128)
  2955  047E  0827               	movf	?___fttol^(0+128),w
  2956  047F                     L4:	
  2957  047F  00D2               	movwf	sprintf@val^(0+128)
  2958  0480  30FF               	movlw	255
  2959  0481  00C6               	movwf	??_sprintf^(0+128)
  2960  0482  0846               	movf	??_sprintf^(0+128),w
  2961  0483  07E4               	addwf	sprintf@c^(0+128),f
  2962  0484  0A64               	incf	sprintf@c^(0+128),w
  2963  0485  1903               	btfsc	3,2
  2964  0486  2D42               	goto	l3378
  2965                           
  2966                           ;doprnt.c: 1229: tmpval.vd = val/dpowers[c];
  2967                           
  2968                           ;doprnt.c: 1228: while(c--) {
  2969  0487  0864               	movf	sprintf@c^(0+128),w
  2970  0488  00C6               	movwf	??_sprintf^(0+128)
  2971  0489  01C7               	clrf	(??_sprintf^(0+128)+1)
  2972  048A  35C6               	lslf	??_sprintf^(0+128),f
  2973  048B  0DC7               	rlf	(??_sprintf^(0+128)+1),f
  2974  048C  35C6               	lslf	??_sprintf^(0+128),f
  2975  048D  0DC7               	rlf	(??_sprintf^(0+128)+1),f
  2976  048E  3030               	movlw	low (_dpowers| (0+32768))
  2977  048F  0746               	addwf	??_sprintf^(0+128),w
  2978  0490  0084               	movwf	4
  2979  0491  3098               	movlw	high (_dpowers| (0+32768))
  2980  0492  3D47               	addwfc	(??_sprintf+1)^(0+128),w
  2981  0493  0085               	movwf	5
  2982  0494  3F00               	moviw [0]fsr0
  2983  0495  0140               	movlb	0	; select bank0
  2984  0496  00B2               	movwf	___lldiv@divisor
  2985  0497  3F01               	moviw [1]fsr0
  2986  0498  00B3               	movwf	___lldiv@divisor+1
  2987  0499  3F02               	moviw [2]fsr0
  2988  049A  00B4               	movwf	___lldiv@divisor+2
  2989  049B  3F03               	moviw [3]fsr0
  2990  049C  00B5               	movwf	___lldiv@divisor+3
  2991  049D  0141               	movlb	1	; select bank1
  2992  049E  0855               	movf	(sprintf@val+3)^(0+128),w
  2993  049F  0140               	movlb	0	; select bank0
  2994  04A0  00B9               	movwf	___lldiv@dividend+3
  2995  04A1  0141               	movlb	1	; select bank1
  2996  04A2  0854               	movf	(sprintf@val+2)^(0+128),w
  2997  04A3  0140               	movlb	0	; select bank0
  2998  04A4  00B8               	movwf	___lldiv@dividend+2
  2999  04A5  0141               	movlb	1	; select bank1
  3000  04A6  0853               	movf	(sprintf@val+1)^(0+128),w
  3001  04A7  0140               	movlb	0	; select bank0
  3002  04A8  00B7               	movwf	___lldiv@dividend+1
  3003  04A9  0141               	movlb	1	; select bank1
  3004  04AA  0852               	movf	sprintf@val^(0+128),w
  3005  04AB  0140               	movlb	0	; select bank0
  3006  04AC  00B6               	movwf	___lldiv@dividend
  3007  04AD  3195  25E9  3180   	fcall	___lldiv
  3008  04B0  0140               	movlb	0	; select bank0
  3009  04B1  0835               	movf	?___lldiv+3,w
  3010  04B2  0141               	movlb	1	; select bank1
  3011  04B3  00DD               	movwf	(sprintf@tmpval+3)^(0+128)
  3012  04B4  0140               	movlb	0	; select bank0
  3013  04B5  0834               	movf	?___lldiv+2,w
  3014  04B6  0141               	movlb	1	; select bank1
  3015  04B7  00DC               	movwf	(sprintf@tmpval+2)^(0+128)
  3016  04B8  0140               	movlb	0	; select bank0
  3017  04B9  0833               	movf	?___lldiv+1,w
  3018  04BA  0141               	movlb	1	; select bank1
  3019  04BB  00DB               	movwf	(sprintf@tmpval+1)^(0+128)
  3020  04BC  0140               	movlb	0	; select bank0
  3021  04BD  0832               	movf	?___lldiv,w
  3022  04BE  0141               	movlb	1	; select bank1
  3023  04BF  00DA               	movwf	sprintf@tmpval^(0+128)
  3024                           
  3025                           ;doprnt.c: 1230: tmpval.vd %= 10;
  3026  04C0  3000               	movlw	0
  3027  04C1  0140               	movlb	0	; select bank0
  3028  04C2  00B5               	movwf	___llmod@divisor+3
  3029  04C3  3000               	movlw	0
  3030  04C4  00B4               	movwf	___llmod@divisor+2
  3031  04C5  3000               	movlw	0
  3032  04C6  00B3               	movwf	___llmod@divisor+1
  3033  04C7  300A               	movlw	10
  3034  04C8  00B2               	movwf	___llmod@divisor
  3035  04C9  0141               	movlb	1	; select bank1
  3036  04CA  085D               	movf	(sprintf@tmpval+3)^(0+128),w
  3037  04CB  0140               	movlb	0	; select bank0
  3038  04CC  00B9               	movwf	___llmod@dividend+3
  3039  04CD  0141               	movlb	1	; select bank1
  3040  04CE  085C               	movf	(sprintf@tmpval+2)^(0+128),w
  3041  04CF  0140               	movlb	0	; select bank0
  3042  04D0  00B8               	movwf	___llmod@dividend+2
  3043  04D1  0141               	movlb	1	; select bank1
  3044  04D2  085B               	movf	(sprintf@tmpval+1)^(0+128),w
  3045  04D3  0140               	movlb	0	; select bank0
  3046  04D4  00B7               	movwf	___llmod@dividend+1
  3047  04D5  0141               	movlb	1	; select bank1
  3048  04D6  085A               	movf	sprintf@tmpval^(0+128),w
  3049  04D7  0140               	movlb	0	; select bank0
  3050  04D8  00B6               	movwf	___llmod@dividend
  3051  04D9  3194  24BD  3180   	fcall	___llmod
  3052  04DC  0140               	movlb	0	; select bank0
  3053  04DD  0835               	movf	?___llmod+3,w
  3054  04DE  0141               	movlb	1	; select bank1
  3055  04DF  00DD               	movwf	(sprintf@tmpval+3)^(0+128)
  3056  04E0  0140               	movlb	0	; select bank0
  3057  04E1  0834               	movf	?___llmod+2,w
  3058  04E2  0141               	movlb	1	; select bank1
  3059  04E3  00DC               	movwf	(sprintf@tmpval+2)^(0+128)
  3060  04E4  0140               	movlb	0	; select bank0
  3061  04E5  0833               	movf	?___llmod+1,w
  3062  04E6  0141               	movlb	1	; select bank1
  3063  04E7  00DB               	movwf	(sprintf@tmpval+1)^(0+128)
  3064  04E8  0140               	movlb	0	; select bank0
  3065  04E9  0832               	movf	?___llmod,w
  3066  04EA  0141               	movlb	1	; select bank1
  3067  04EB  00DA               	movwf	sprintf@tmpval^(0+128)
  3068                           
  3069                           ;doprnt.c: 1231: ((*sp++ = ('0' + tmpval.vd)));
  3070  04EC  085A               	movf	sprintf@tmpval^(0+128),w
  3071  04ED  3E30               	addlw	48
  3072  04EE  00C6               	movwf	??_sprintf^(0+128)
  3073  04EF  0860               	movf	sprintf@sp^(0+128),w
  3074  04F0  0086               	movwf	6
  3075  04F1  3001               	movlw	1	; select bank2/3
  3076  04F2  0087               	movwf	7
  3077  04F3  0846               	movf	??_sprintf^(0+128),w
  3078  04F4  0081               	movwf	1
  3079  04F5  3001               	movlw	1
  3080  04F6  00C6               	movwf	??_sprintf^(0+128)
  3081  04F7  0846               	movf	??_sprintf^(0+128),w
  3082  04F8  07E0               	addwf	sprintf@sp^(0+128),f
  3083                           
  3084                           ;doprnt.c: 1232: val %= dpowers[c];
  3085  04F9  0864               	movf	sprintf@c^(0+128),w
  3086  04FA  00C6               	movwf	??_sprintf^(0+128)
  3087  04FB  01C7               	clrf	(??_sprintf^(0+128)+1)
  3088  04FC  35C6               	lslf	??_sprintf^(0+128),f
  3089  04FD  0DC7               	rlf	(??_sprintf^(0+128)+1),f
  3090  04FE  35C6               	lslf	??_sprintf^(0+128),f
  3091  04FF  0DC7               	rlf	(??_sprintf^(0+128)+1),f
  3092  0500  3030               	movlw	low (_dpowers| (0+32768))
  3093  0501  0746               	addwf	??_sprintf^(0+128),w
  3094  0502  0084               	movwf	4
  3095  0503  3098               	movlw	high (_dpowers| (0+32768))
  3096  0504  3D47               	addwfc	(??_sprintf+1)^(0+128),w
  3097  0505  0085               	movwf	5
  3098  0506  3F00               	moviw [0]fsr0
  3099  0507  0140               	movlb	0	; select bank0
  3100  0508  00B2               	movwf	___llmod@divisor
  3101  0509  3F01               	moviw [1]fsr0
  3102  050A  00B3               	movwf	___llmod@divisor+1
  3103  050B  3F02               	moviw [2]fsr0
  3104  050C  00B4               	movwf	___llmod@divisor+2
  3105  050D  3F03               	moviw [3]fsr0
  3106  050E  00B5               	movwf	___llmod@divisor+3
  3107  050F  0141               	movlb	1	; select bank1
  3108  0510  0855               	movf	(sprintf@val+3)^(0+128),w
  3109  0511  0140               	movlb	0	; select bank0
  3110  0512  00B9               	movwf	___llmod@dividend+3
  3111  0513  0141               	movlb	1	; select bank1
  3112  0514  0854               	movf	(sprintf@val+2)^(0+128),w
  3113  0515  0140               	movlb	0	; select bank0
  3114  0516  00B8               	movwf	___llmod@dividend+2
  3115  0517  0141               	movlb	1	; select bank1
  3116  0518  0853               	movf	(sprintf@val+1)^(0+128),w
  3117  0519  0140               	movlb	0	; select bank0
  3118  051A  00B7               	movwf	___llmod@dividend+1
  3119  051B  0141               	movlb	1	; select bank1
  3120  051C  0852               	movf	sprintf@val^(0+128),w
  3121  051D  0140               	movlb	0	; select bank0
  3122  051E  00B6               	movwf	___llmod@dividend
  3123  051F  3194  24BD  3180   	fcall	___llmod
  3124  0522  0140               	movlb	0	; select bank0
  3125  0523  0835               	movf	?___llmod+3,w
  3126  0524  0141               	movlb	1	; select bank1
  3127  0525  00D5               	movwf	(sprintf@val+3)^(0+128)
  3128  0526  0140               	movlb	0	; select bank0
  3129  0527  0834               	movf	?___llmod+2,w
  3130  0528  0141               	movlb	1	; select bank1
  3131  0529  00D4               	movwf	(sprintf@val+2)^(0+128)
  3132  052A  0140               	movlb	0	; select bank0
  3133  052B  0833               	movf	?___llmod+1,w
  3134  052C  0141               	movlb	1	; select bank1
  3135  052D  00D3               	movwf	(sprintf@val+1)^(0+128)
  3136  052E  0140               	movlb	0	; select bank0
  3137  052F  0832               	movf	?___llmod,w
  3138  0530  0141               	movlb	1	; select bank1
  3139  0531  2C7F               	goto	L4
  3140  0532                     l3372:	
  3141                           ;doprnt.c: 1233: }
  3142                           ;doprnt.c: 1235: while(prec) {
  3143                           
  3144                           
  3145                           ;doprnt.c: 1236: ((*sp++ = ('0')));
  3146  0532  3030               	movlw	48
  3147  0533  00C6               	movwf	??_sprintf^(0+128)
  3148  0534  0860               	movf	sprintf@sp^(0+128),w
  3149  0535  0086               	movwf	6
  3150  0536  3001               	movlw	1	; select bank2/3
  3151  0537  0087               	movwf	7
  3152  0538  0846               	movf	??_sprintf^(0+128),w
  3153  0539  0081               	movwf	1
  3154  053A  3001               	movlw	1
  3155  053B  00C6               	movwf	??_sprintf^(0+128)
  3156  053C  0846               	movf	??_sprintf^(0+128),w
  3157  053D  07E0               	addwf	sprintf@sp^(0+128),f
  3158                           
  3159                           ;doprnt.c: 1237: prec--;
  3160  053E  30FF               	movlw	255
  3161  053F  07D6               	addwf	sprintf@prec^(0+128),f
  3162  0540  30FF               	movlw	255
  3163  0541  3DD7               	addwfc	(sprintf@prec+1)^(0+128),f
  3164  0542                     l3378:	
  3165  0542  0856               	movf	sprintf@prec^(0+128),w
  3166  0543  0457               	iorwf	(sprintf@prec+1)^(0+128),w
  3167  0544  1903               	btfsc	3,2
  3168  0545  287D               	goto	l3404
  3169  0546  2D32               	goto	l3372
  3170  0547                     l3380:	
  3171                           ;doprnt.c: 1238: }
  3172                           ;doprnt.c: 1245: continue;
  3173                           
  3174                           
  3175                           ;doprnt.c: 1246: }
  3176                           ;doprnt.c: 1345: if(width && flag & 0x03)
  3177  0547  0858               	movf	sprintf@width^(0+128),w
  3178  0548  0459               	iorwf	(sprintf@width+1)^(0+128),w
  3179  0549  1903               	btfsc	3,2
  3180  054A  2D59               	goto	l199
  3181  054B  3003               	movlw	3
  3182  054C  0550               	andwf	sprintf@flag^(0+128),w
  3183  054D  00C6               	movwf	??_sprintf^(0+128)
  3184  054E  3000               	movlw	0
  3185  054F  0551               	andwf	(sprintf@flag+1)^(0+128),w
  3186  0550  00C7               	movwf	(??_sprintf+1)^(0+128)
  3187  0551  0846               	movf	??_sprintf^(0+128),w
  3188  0552  0447               	iorwf	(??_sprintf^(0+128)+1),w
  3189  0553  1903               	btfsc	3,2
  3190  0554  2D59               	goto	l199
  3191                           
  3192                           ;doprnt.c: 1346: width--;
  3193  0555  30FF               	movlw	255
  3194  0556  07D8               	addwf	sprintf@width^(0+128),f
  3195  0557  30FF               	movlw	255
  3196  0558  3DD9               	addwfc	(sprintf@width+1)^(0+128),f
  3197  0559                     l199:	
  3198                           
  3199                           ;doprnt.c: 1381: if(width > c)
  3200  0559  0864               	movf	sprintf@c^(0+128),w
  3201  055A  00C6               	movwf	??_sprintf^(0+128)
  3202  055B  01C7               	clrf	(??_sprintf^(0+128)+1)
  3203  055C  1BC6               	btfsc	??_sprintf^(0+128),7
  3204  055D  03C7               	decf	(??_sprintf^(0+128)+1),f
  3205  055E  0847               	movf	(??_sprintf+1)^(0+128),w
  3206  055F  3A80               	xorlw	128
  3207  0560  00C8               	movwf	(??_sprintf+2)^(0+128)
  3208  0561  0859               	movf	(sprintf@width+1)^(0+128),w
  3209  0562  3A80               	xorlw	128
  3210  0563  0248               	subwf	(??_sprintf+2)^(0+128),w
  3211  0564  1D03               	skipz
  3212  0565  2D68               	goto	u5295
  3213  0566  0858               	movf	sprintf@width^(0+128),w
  3214  0567  0246               	subwf	??_sprintf^(0+128),w
  3215  0568                     u5295:	
  3216  0568  1803               	skipnc
  3217  0569  2D75               	goto	l3388
  3218                           
  3219                           ;doprnt.c: 1382: width -= c;
  3220  056A  0141               	movlb	1	; select bank1
  3221  056B  0864               	movf	sprintf@c^(0+128),w
  3222  056C  00C6               	movwf	??_sprintf^(0+128)
  3223  056D  01C7               	clrf	(??_sprintf^(0+128)+1)
  3224  056E  1BC6               	btfsc	??_sprintf^(0+128),7
  3225  056F  03C7               	decf	(??_sprintf^(0+128)+1),f
  3226  0570  0846               	movf	??_sprintf^(0+128),w
  3227  0571  02D8               	subwf	sprintf@width^(0+128),f
  3228  0572  0847               	movf	(??_sprintf+1)^(0+128),w
  3229  0573  3BD9               	subwfb	(sprintf@width+1)^(0+128),f
  3230  0574  2D78               	goto	l3390
  3231  0575                     l3388:	
  3232                           
  3233                           ;doprnt.c: 1383: else
  3234                           ;doprnt.c: 1384: width = 0;
  3235  0575  0141               	movlb	1	; select bank1
  3236  0576  01D8               	clrf	sprintf@width^(0+128)
  3237  0577  01D9               	clrf	(sprintf@width+1)^(0+128)
  3238  0578                     l3390:	
  3239                           
  3240                           ;doprnt.c: 1422: {
  3241                           ;doprnt.c: 1424: if(width
  3242                           ;doprnt.c: 1428: )
  3243  0578  0858               	movf	sprintf@width^(0+128),w
  3244  0579  0459               	iorwf	(sprintf@width+1)^(0+128),w
  3245  057A  1903               	btfsc	3,2
  3246  057B  2D90               	goto	l3398
  3247  057C                     l3392:	
  3248                           ;doprnt.c: 1429: do
  3249                           
  3250                           
  3251                           ;doprnt.c: 1430: ((*sp++ = (' ')));
  3252  057C  3020               	movlw	32
  3253  057D  00C6               	movwf	??_sprintf^(0+128)
  3254  057E  0860               	movf	sprintf@sp^(0+128),w
  3255  057F  0086               	movwf	6
  3256  0580  3001               	movlw	1	; select bank2/3
  3257  0581  0087               	movwf	7
  3258  0582  0846               	movf	??_sprintf^(0+128),w
  3259  0583  0081               	movwf	1
  3260  0584  3001               	movlw	1
  3261  0585  00C6               	movwf	??_sprintf^(0+128)
  3262  0586  0846               	movf	??_sprintf^(0+128),w
  3263  0587  07E0               	addwf	sprintf@sp^(0+128),f
  3264                           
  3265                           ;doprnt.c: 1431: while(--width);
  3266  0588  30FF               	movlw	255
  3267  0589  07D8               	addwf	sprintf@width^(0+128),f
  3268  058A  30FF               	movlw	255
  3269  058B  3DD9               	addwfc	(sprintf@width+1)^(0+128),f
  3270  058C  0858               	movf	sprintf@width^(0+128),w
  3271  058D  0459               	iorwf	(sprintf@width+1)^(0+128),w
  3272  058E  1D03               	btfss	3,2
  3273  058F  2D7C               	goto	l3392
  3274  0590                     l3398:	
  3275                           
  3276                           ;doprnt.c: 1438: if(flag & 0x03)
  3277  0590  3003               	movlw	3
  3278  0591  0550               	andwf	sprintf@flag^(0+128),w
  3279  0592  00C6               	movwf	??_sprintf^(0+128)
  3280  0593  3000               	movlw	0
  3281  0594  0551               	andwf	(sprintf@flag+1)^(0+128),w
  3282  0595  00C7               	movwf	(??_sprintf+1)^(0+128)
  3283  0596  0846               	movf	??_sprintf^(0+128),w
  3284  0597  0447               	iorwf	(??_sprintf^(0+128)+1),w
  3285  0598  1903               	btfsc	3,2
  3286  0599  287D               	goto	l3404
  3287                           
  3288                           ;doprnt.c: 1439: ((*sp++ = ('-')));
  3289  059A  302D               	movlw	45
  3290  059B                     L5:	
  3291  059B  00C6               	movwf	??_sprintf^(0+128)
  3292  059C  0860               	movf	sprintf@sp^(0+128),w
  3293  059D  0086               	movwf	6
  3294  059E  3001               	movlw	1	; select bank2/3
  3295  059F  0087               	movwf	7
  3296  05A0  0846               	movf	??_sprintf^(0+128),w
  3297  05A1  0081               	movwf	1
  3298  05A2  3001               	movlw	1
  3299  05A3  00C6               	movwf	??_sprintf^(0+128)
  3300  05A4  0846               	movf	??_sprintf^(0+128),w
  3301  05A5  07E0               	addwf	sprintf@sp^(0+128),f
  3302  05A6  287D               	goto	l3404
  3303  05A7                     l3406:	
  3304                           ;doprnt.c: 1469: }
  3305                           ;doprnt.c: 1533: }
  3306                           ;doprnt.c: 1535: alldone:
  3307                           
  3308                           
  3309                           ;doprnt.c: 1538: *sp = 0;
  3310  05A7  0141               	movlb	1	; select bank1
  3311  05A8  0860               	movf	sprintf@sp^(0+128),w
  3312  05A9  0086               	movwf	6
  3313  05AA  3001               	movlw	1	; select bank2/3
  3314  05AB  0087               	movwf	7
  3315  05AC  0181               	clrf	1
  3316  05AD  0008               	return
  3317  05AE                     __end_of_sprintf:	
  3318                           ;doprnt.c: 1540: return 0;
  3319                           ;	Return value of _sprintf is never used
  3320                           
  3321                           
  3322                           	psect	text2
  3323  0D7A                     __ptext2:	
  3324 ;; *************** function _scale *****************
  3325 ;; Defined at:
  3326 ;;		line 425 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\doprnt.c"
  3327 ;; Parameters:    Size  Location     Type
  3328 ;;  scl             1    wreg     char 
  3329 ;; Auto vars:     Size  Location     Type
  3330 ;;  scl             1    6[BANK1 ] char 
  3331 ;; Return value:  Size  Location     Type
  3332 ;;                  3    0[BANK1 ] char 
  3333 ;; Registers used:
  3334 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  3335 ;; Tracked objects:
  3336 ;;		On entry : 0/0
  3337 ;;		On exit  : 0/0
  3338 ;;		Unchanged: 0/0
  3339 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
  3340 ;;      Params:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  3341 ;;      Locals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  3342 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  3343 ;;      Totals:         0       2       7       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  3344 ;;Total ram usage:        9 bytes
  3345 ;; Hardware stack levels used:    1
  3346 ;; Hardware stack levels required when called:    5
  3347 ;; This function calls:
  3348 ;;		___awdiv
  3349 ;;		___awmod
  3350 ;;		___ftmul
  3351 ;;		___wmul
  3352 ;; This function is called by:
  3353 ;;		_sprintf
  3354 ;; This function uses a non-reentrant model
  3355 ;;
  3356                           
  3357                           
  3358                           ;psect for function _scale
  3359  0D7A                     _scale:	
  3360                           
  3361                           ;incstack = 0
  3362                           ; Regs used in _scale: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  3363                           ;scale@scl stored from wreg
  3364  0D7A  0141               	movlb	1	; select bank1
  3365  0D7B  00A6               	movwf	scale@scl^(0+128)
  3366                           
  3367                           ;doprnt.c: 428: if(scl < 0) {
  3368  0D7C  1FA6               	btfss	scale@scl^(0+128),7
  3369  0D7D  2EC0               	goto	l3160
  3370                           
  3371                           ;doprnt.c: 429: scl = -scl;
  3372  0D7E  09A6               	comf	scale@scl^(0+128),f
  3373  0D7F  0AA6               	incf	scale@scl^(0+128),f
  3374                           
  3375                           ;doprnt.c: 430: if(scl>=110)
  3376  0D80  0826               	movf	scale@scl^(0+128),w
  3377  0D81  3A80               	xorlw	128
  3378  0D82  3E12               	addlw	-238
  3379  0D83  1C03               	skipc
  3380  0D84  2E3A               	goto	l3150
  3381                           
  3382                           ;doprnt.c: 431: return _npowers_[scl/100+18] * _npowers_[(scl%100)/10+9] * _npowers_[scl
      +                          %10];
  3383  0D85  300A               	movlw	10
  3384  0D86  0140               	movlb	0	; select bank0
  3385  0D87  00B9               	movwf	___awdiv@divisor
  3386  0D88  3000               	movlw	0
  3387  0D89  00BA               	movwf	___awdiv@divisor+1
  3388  0D8A  0141               	movlb	1	; select bank1
  3389  0D8B  0826               	movf	scale@scl^(0+128),w
  3390  0D8C  0140               	movlb	0	; select bank0
  3391  0D8D  00B4               	movwf	___awmod@dividend
  3392  0D8E  01B5               	clrf	___awmod@dividend+1
  3393  0D8F  1BB4               	btfsc	___awmod@dividend,7
  3394  0D90  03B5               	decf	___awmod@dividend+1,f
  3395  0D91  3064               	movlw	100
  3396  0D92  00B2               	movwf	___awmod@divisor
  3397  0D93  3000               	movlw	0
  3398  0D94  00B3               	movwf	___awmod@divisor+1
  3399  0D95  3195  2500  318D   	fcall	___awmod
  3400  0D98  0140               	movlb	0	; select bank0
  3401  0D99  0833               	movf	?___awmod+1,w
  3402  0D9A  00BC               	movwf	___awdiv@dividend+1
  3403  0D9B  0832               	movf	?___awmod,w
  3404  0D9C  00BB               	movwf	___awdiv@dividend
  3405  0D9D  3195  2597  318D   	fcall	___awdiv
  3406  0DA0  0140               	movlb	0	; select bank0
  3407  0DA1  0839               	movf	?___awdiv,w
  3408  0DA2  3E09               	addlw	9
  3409  0DA3  00C2               	movwf	___wmul@multiplier
  3410  0DA4  3000               	movlw	0
  3411  0DA5  3D3A               	addwfc	?___awdiv+1,w
  3412  0DA6  00C3               	movwf	___wmul@multiplier+1
  3413  0DA7  3003               	movlw	3
  3414  0DA8  00C4               	movwf	___wmul@multiplicand
  3415  0DA9  3000               	movlw	0
  3416  0DAA  00C5               	movwf	___wmul@multiplicand+1
  3417  0DAB  3193  23C1  318D   	fcall	___wmul
  3418  0DAE  0140               	movlb	0	; select bank0
  3419  0DAF  0843               	movf	?___wmul+1,w
  3420  0DB0  0085               	movwf	5
  3421  0DB1  0842               	movf	?___wmul,w
  3422  0DB2  0084               	movwf	4
  3423  0DB3  3000               	movlw	low (__npowers_| (0+32768))
  3424  0DB4  0784               	addwf	4,f
  3425  0DB5  3098               	movlw	high (__npowers_| (0+32768))
  3426  0DB6  3D85               	addwfc	5,f
  3427  0DB7  3F00               	moviw [0]fsr0
  3428  0DB8  00C8               	movwf	___ftmul@f1
  3429  0DB9  3F01               	moviw [1]fsr0
  3430  0DBA  00C9               	movwf	___ftmul@f1+1
  3431  0DBB  3F02               	moviw [2]fsr0
  3432  0DBC  00CA               	movwf	___ftmul@f1+2
  3433  0DBD  3064               	movlw	100
  3434  0DBE  00B9               	movwf	___awdiv@divisor
  3435  0DBF  3000               	movlw	0
  3436  0DC0  00BA               	movwf	___awdiv@divisor+1
  3437  0DC1  0141               	movlb	1	; select bank1
  3438  0DC2  0826               	movf	scale@scl^(0+128),w
  3439  0DC3  0140               	movlb	0	; select bank0
  3440  0DC4  00BB               	movwf	___awdiv@dividend
  3441  0DC5  01BC               	clrf	___awdiv@dividend+1
  3442  0DC6  1BBB               	btfsc	___awdiv@dividend,7
  3443  0DC7  03BC               	decf	___awdiv@dividend+1,f
  3444  0DC8  3195  2597  318D   	fcall	___awdiv
  3445  0DCB  0140               	movlb	0	; select bank0
  3446  0DCC  0839               	movf	?___awdiv,w
  3447  0DCD  3E12               	addlw	18
  3448  0DCE  00C2               	movwf	___wmul@multiplier
  3449  0DCF  3000               	movlw	0
  3450  0DD0  3D3A               	addwfc	?___awdiv+1,w
  3451  0DD1  00C3               	movwf	___wmul@multiplier+1
  3452  0DD2  3003               	movlw	3
  3453  0DD3  00C4               	movwf	___wmul@multiplicand
  3454  0DD4  3000               	movlw	0
  3455  0DD5  00C5               	movwf	___wmul@multiplicand+1
  3456  0DD6  3193  23C1  318D   	fcall	___wmul
  3457  0DD9  0140               	movlb	0	; select bank0
  3458  0DDA  0843               	movf	?___wmul+1,w
  3459  0DDB  0085               	movwf	5
  3460  0DDC  0842               	movf	?___wmul,w
  3461  0DDD  0084               	movwf	4
  3462  0DDE  3000               	movlw	low (__npowers_| (0+32768))
  3463  0DDF  0784               	addwf	4,f
  3464  0DE0  3098               	movlw	high (__npowers_| (0+32768))
  3465  0DE1  3D85               	addwfc	5,f
  3466  0DE2  3F00               	moviw [0]fsr0
  3467  0DE3  00CB               	movwf	___ftmul@f2
  3468  0DE4  3F01               	moviw [1]fsr0
  3469  0DE5  00CC               	movwf	___ftmul@f2+1
  3470  0DE6  3F02               	moviw [2]fsr0
  3471  0DE7  00CD               	movwf	___ftmul@f2+2
  3472  0DE8  3189  21EF  318D   	fcall	___ftmul
  3473  0DEB  0140               	movlb	0	; select bank0
  3474  0DEC  0848               	movf	?___ftmul,w
  3475  0DED  0141               	movlb	1	; select bank1
  3476  0DEE  00A3               	movwf	_scale$973^(0+128)
  3477  0DEF  0140               	movlb	0	; select bank0
  3478  0DF0  0849               	movf	?___ftmul+1,w
  3479  0DF1  0141               	movlb	1	; select bank1
  3480  0DF2  00A4               	movwf	(_scale$973+1)^(0+128)
  3481  0DF3  0140               	movlb	0	; select bank0
  3482  0DF4  084A               	movf	?___ftmul+2,w
  3483  0DF5  0141               	movlb	1	; select bank1
  3484  0DF6  00A5               	movwf	(_scale$973+2)^(0+128)
  3485                           
  3486                           ;doprnt.c: 431: return _npowers_[scl/100+18] * _npowers_[(scl%100)/10+9] * _npowers_[scl
      +                          %10];
  3487  0DF7  0826               	movf	scale@scl^(0+128),w
  3488  0DF8  0140               	movlb	0	; select bank0
  3489  0DF9  00B4               	movwf	___awmod@dividend
  3490  0DFA  01B5               	clrf	___awmod@dividend+1
  3491  0DFB  1BB4               	btfsc	___awmod@dividend,7
  3492  0DFC  03B5               	decf	___awmod@dividend+1,f
  3493  0DFD  300A               	movlw	10
  3494  0DFE  00B2               	movwf	___awmod@divisor
  3495  0DFF  3000               	movlw	0
  3496  0E00  00B3               	movwf	___awmod@divisor+1
  3497  0E01  3195  2500  318D   	fcall	___awmod
  3498  0E04  0140               	movlb	0	; select bank0
  3499  0E05  0833               	movf	?___awmod+1,w
  3500  0E06  00C3               	movwf	___wmul@multiplier+1
  3501  0E07  0832               	movf	?___awmod,w
  3502  0E08  00C2               	movwf	___wmul@multiplier
  3503  0E09  3003               	movlw	3
  3504  0E0A  00C4               	movwf	___wmul@multiplicand
  3505  0E0B  3000               	movlw	0
  3506  0E0C  00C5               	movwf	___wmul@multiplicand+1
  3507  0E0D  3193  23C1  318D   	fcall	___wmul
  3508  0E10  0140               	movlb	0	; select bank0
  3509  0E11  0843               	movf	?___wmul+1,w
  3510  0E12  0085               	movwf	5
  3511  0E13  0842               	movf	?___wmul,w
  3512  0E14  0084               	movwf	4
  3513  0E15  3000               	movlw	low (__npowers_| (0+32768))
  3514  0E16  0784               	addwf	4,f
  3515  0E17  3098               	movlw	high (__npowers_| (0+32768))
  3516  0E18  3D85               	addwfc	5,f
  3517  0E19  3F00               	moviw [0]fsr0
  3518  0E1A  00C8               	movwf	___ftmul@f1
  3519  0E1B  3F01               	moviw [1]fsr0
  3520  0E1C  00C9               	movwf	___ftmul@f1+1
  3521  0E1D  3F02               	moviw [2]fsr0
  3522  0E1E  00CA               	movwf	___ftmul@f1+2
  3523  0E1F  0141               	movlb	1	; select bank1
  3524  0E20  0823               	movf	_scale$973^(0+128),w
  3525  0E21  0140               	movlb	0	; select bank0
  3526  0E22  00CB               	movwf	___ftmul@f2
  3527  0E23  0141               	movlb	1	; select bank1
  3528  0E24  0824               	movf	(_scale$973+1)^(0+128),w
  3529  0E25  0140               	movlb	0	; select bank0
  3530  0E26  00CC               	movwf	___ftmul@f2+1
  3531  0E27  0141               	movlb	1	; select bank1
  3532  0E28  0825               	movf	(_scale$973+2)^(0+128),w
  3533  0E29  0140               	movlb	0	; select bank0
  3534  0E2A  00CD               	movwf	___ftmul@f2+2
  3535  0E2B  3189  21EF         	fcall	___ftmul
  3536  0E2D  0140               	movlb	0	; select bank0
  3537  0E2E  0848               	movf	?___ftmul,w
  3538  0E2F  0141               	movlb	1	; select bank1
  3539  0E30  00A0               	movwf	?_scale^(0+128)
  3540  0E31  0140               	movlb	0	; select bank0
  3541  0E32  0849               	movf	?___ftmul+1,w
  3542  0E33  0141               	movlb	1	; select bank1
  3543  0E34  00A1               	movwf	(?_scale+1)^(0+128)
  3544  0E35  0140               	movlb	0	; select bank0
  3545  0E36  084A               	movf	?___ftmul+2,w
  3546  0E37  0141               	movlb	1	; select bank1
  3547  0E38  00A2               	movwf	(?_scale+2)^(0+128)
  3548  0E39  0008               	return
  3549  0E3A                     l3150:	
  3550                           
  3551                           ;doprnt.c: 432: else if(scl > 10)
  3552  0E3A  0826               	movf	scale@scl^(0+128),w
  3553  0E3B  3A80               	xorlw	128
  3554  0E3C  3E75               	addlw	-139
  3555  0E3D  1C03               	skipc
  3556  0E3E  2EA1               	goto	l3156
  3557                           
  3558                           ;doprnt.c: 433: return _npowers_[scl/10+9] * _npowers_[scl%10];
  3559  0E3F  0826               	movf	scale@scl^(0+128),w
  3560  0E40  0140               	movlb	0	; select bank0
  3561  0E41  00B4               	movwf	___awmod@dividend
  3562  0E42  01B5               	clrf	___awmod@dividend+1
  3563  0E43  1BB4               	btfsc	___awmod@dividend,7
  3564  0E44  03B5               	decf	___awmod@dividend+1,f
  3565  0E45  300A               	movlw	10
  3566  0E46  00B2               	movwf	___awmod@divisor
  3567  0E47  3000               	movlw	0
  3568  0E48  00B3               	movwf	___awmod@divisor+1
  3569  0E49  3195  2500  318D   	fcall	___awmod
  3570  0E4C  0140               	movlb	0	; select bank0
  3571  0E4D  0833               	movf	?___awmod+1,w
  3572  0E4E  00C3               	movwf	___wmul@multiplier+1
  3573  0E4F  0832               	movf	?___awmod,w
  3574  0E50  00C2               	movwf	___wmul@multiplier
  3575  0E51  3003               	movlw	3
  3576  0E52  00C4               	movwf	___wmul@multiplicand
  3577  0E53  3000               	movlw	0
  3578  0E54  00C5               	movwf	___wmul@multiplicand+1
  3579  0E55  3193  23C1  318D   	fcall	___wmul
  3580  0E58  0140               	movlb	0	; select bank0
  3581  0E59  0843               	movf	?___wmul+1,w
  3582  0E5A  0085               	movwf	5
  3583  0E5B  0842               	movf	?___wmul,w
  3584  0E5C  0084               	movwf	4
  3585  0E5D  3000               	movlw	low (__npowers_| (0+32768))
  3586  0E5E  0784               	addwf	4,f
  3587  0E5F  3098               	movlw	high (__npowers_| (0+32768))
  3588  0E60  3D85               	addwfc	5,f
  3589  0E61  3F00               	moviw [0]fsr0
  3590  0E62  00C8               	movwf	___ftmul@f1
  3591  0E63  3F01               	moviw [1]fsr0
  3592  0E64  00C9               	movwf	___ftmul@f1+1
  3593  0E65  3F02               	moviw [2]fsr0
  3594  0E66  00CA               	movwf	___ftmul@f1+2
  3595  0E67  300A               	movlw	10
  3596  0E68  00B9               	movwf	___awdiv@divisor
  3597  0E69  3000               	movlw	0
  3598  0E6A  00BA               	movwf	___awdiv@divisor+1
  3599  0E6B  0141               	movlb	1	; select bank1
  3600  0E6C  0826               	movf	scale@scl^(0+128),w
  3601  0E6D  0140               	movlb	0	; select bank0
  3602  0E6E  00BB               	movwf	___awdiv@dividend
  3603  0E6F  01BC               	clrf	___awdiv@dividend+1
  3604  0E70  1BBB               	btfsc	___awdiv@dividend,7
  3605  0E71  03BC               	decf	___awdiv@dividend+1,f
  3606  0E72  3195  2597  318D   	fcall	___awdiv
  3607  0E75  0140               	movlb	0	; select bank0
  3608  0E76  0839               	movf	?___awdiv,w
  3609  0E77  3E09               	addlw	9
  3610  0E78  00C2               	movwf	___wmul@multiplier
  3611  0E79  3000               	movlw	0
  3612  0E7A  3D3A               	addwfc	?___awdiv+1,w
  3613  0E7B  00C3               	movwf	___wmul@multiplier+1
  3614  0E7C  3003               	movlw	3
  3615  0E7D  00C4               	movwf	___wmul@multiplicand
  3616  0E7E  3000               	movlw	0
  3617  0E7F  00C5               	movwf	___wmul@multiplicand+1
  3618  0E80  3193  23C1  318D   	fcall	___wmul
  3619  0E83  0140               	movlb	0	; select bank0
  3620  0E84  0843               	movf	?___wmul+1,w
  3621  0E85  0085               	movwf	5
  3622  0E86  0842               	movf	?___wmul,w
  3623  0E87  0084               	movwf	4
  3624  0E88  3000               	movlw	low (__npowers_| (0+32768))
  3625  0E89  0784               	addwf	4,f
  3626  0E8A  3098               	movlw	high (__npowers_| (0+32768))
  3627  0E8B  3D85               	addwfc	5,f
  3628  0E8C  3F00               	moviw [0]fsr0
  3629  0E8D  00CB               	movwf	___ftmul@f2
  3630  0E8E  3F01               	moviw [1]fsr0
  3631  0E8F  00CC               	movwf	___ftmul@f2+1
  3632  0E90  3F02               	moviw [2]fsr0
  3633  0E91  00CD               	movwf	___ftmul@f2+2
  3634  0E92  3189  21EF         	fcall	___ftmul
  3635  0E94  0140               	movlb	0	; select bank0
  3636  0E95  0848               	movf	?___ftmul,w
  3637  0E96  0141               	movlb	1	; select bank1
  3638  0E97  00A0               	movwf	?_scale^(0+128)
  3639  0E98  0140               	movlb	0	; select bank0
  3640  0E99  0849               	movf	?___ftmul+1,w
  3641  0E9A  0141               	movlb	1	; select bank1
  3642  0E9B  00A1               	movwf	(?_scale+1)^(0+128)
  3643  0E9C  0140               	movlb	0	; select bank0
  3644  0E9D  084A               	movf	?___ftmul+2,w
  3645  0E9E  0141               	movlb	1	; select bank1
  3646  0E9F  00A2               	movwf	(?_scale+2)^(0+128)
  3647  0EA0  0008               	return
  3648  0EA1                     l3156:	
  3649                           
  3650                           ;doprnt.c: 434: return _npowers_[scl];
  3651  0EA1  0826               	movf	scale@scl^(0+128),w
  3652  0EA2  0140               	movlb	0	; select bank0
  3653  0EA3  00D8               	movwf	??_scale
  3654  0EA4  01D9               	clrf	??_scale+1
  3655  0EA5  0858               	movf	??_scale,w
  3656  0EA6  00C2               	movwf	___wmul@multiplier
  3657  0EA7  0859               	movf	??_scale+1,w
  3658  0EA8  00C3               	movwf	___wmul@multiplier+1
  3659  0EA9  3003               	movlw	3
  3660  0EAA  00C4               	movwf	___wmul@multiplicand
  3661  0EAB  3000               	movlw	0
  3662  0EAC  00C5               	movwf	___wmul@multiplicand+1
  3663  0EAD  3193  23C1         	fcall	___wmul
  3664  0EAF  0140               	movlb	0	; select bank0
  3665  0EB0  0843               	movf	?___wmul+1,w
  3666  0EB1  0085               	movwf	5
  3667  0EB2  0842               	movf	?___wmul,w
  3668  0EB3  0084               	movwf	4
  3669  0EB4  3000               	movlw	low (__npowers_| (0+32768))
  3670  0EB5  0784               	addwf	4,f
  3671  0EB6  3098               	movlw	high (__npowers_| (0+32768))
  3672  0EB7  3D85               	addwfc	5,f
  3673  0EB8  3F00               	moviw [0]fsr0
  3674  0EB9  0141               	movlb	1	; select bank1
  3675  0EBA  00A0               	movwf	?_scale^(0+128)
  3676  0EBB  3F01               	moviw [1]fsr0
  3677  0EBC  00A1               	movwf	(?_scale+1)^(0+128)
  3678  0EBD  3F02               	moviw [2]fsr0
  3679  0EBE  00A2               	movwf	(?_scale+2)^(0+128)
  3680  0EBF  0008               	return
  3681  0EC0                     l3160:	
  3682                           
  3683                           ;doprnt.c: 435: }
  3684                           ;doprnt.c: 436: if(scl>=110)
  3685  0EC0  0826               	movf	scale@scl^(0+128),w
  3686  0EC1  3A80               	xorlw	128
  3687  0EC2  3E12               	addlw	-238
  3688  0EC3  1C03               	skipc
  3689  0EC4  2F7A               	goto	l3168
  3690                           
  3691                           ;doprnt.c: 437: return _powers_[scl/100+18] * _powers_[(scl%100)/10+9] * _powers_[scl%10
      +                          ];
  3692  0EC5  300A               	movlw	10
  3693  0EC6  0140               	movlb	0	; select bank0
  3694  0EC7  00B9               	movwf	___awdiv@divisor
  3695  0EC8  3000               	movlw	0
  3696  0EC9  00BA               	movwf	___awdiv@divisor+1
  3697  0ECA  0141               	movlb	1	; select bank1
  3698  0ECB  0826               	movf	scale@scl^(0+128),w
  3699  0ECC  0140               	movlb	0	; select bank0
  3700  0ECD  00B4               	movwf	___awmod@dividend
  3701  0ECE  01B5               	clrf	___awmod@dividend+1
  3702  0ECF  1BB4               	btfsc	___awmod@dividend,7
  3703  0ED0  03B5               	decf	___awmod@dividend+1,f
  3704  0ED1  3064               	movlw	100
  3705  0ED2  00B2               	movwf	___awmod@divisor
  3706  0ED3  3000               	movlw	0
  3707  0ED4  00B3               	movwf	___awmod@divisor+1
  3708  0ED5  3195  2500  318D   	fcall	___awmod
  3709  0ED8  0140               	movlb	0	; select bank0
  3710  0ED9  0833               	movf	?___awmod+1,w
  3711  0EDA  00BC               	movwf	___awdiv@dividend+1
  3712  0EDB  0832               	movf	?___awmod,w
  3713  0EDC  00BB               	movwf	___awdiv@dividend
  3714  0EDD  3195  2597  318D   	fcall	___awdiv
  3715  0EE0  0140               	movlb	0	; select bank0
  3716  0EE1  0839               	movf	?___awdiv,w
  3717  0EE2  3E09               	addlw	9
  3718  0EE3  00C2               	movwf	___wmul@multiplier
  3719  0EE4  3000               	movlw	0
  3720  0EE5  3D3A               	addwfc	?___awdiv+1,w
  3721  0EE6  00C3               	movwf	___wmul@multiplier+1
  3722  0EE7  3003               	movlw	3
  3723  0EE8  00C4               	movwf	___wmul@multiplicand
  3724  0EE9  3000               	movlw	0
  3725  0EEA  00C5               	movwf	___wmul@multiplicand+1
  3726  0EEB  3193  23C1  318D   	fcall	___wmul
  3727  0EEE  0140               	movlb	0	; select bank0
  3728  0EEF  0843               	movf	?___wmul+1,w
  3729  0EF0  0085               	movwf	5
  3730  0EF1  0842               	movf	?___wmul,w
  3731  0EF2  0084               	movwf	4
  3732  0EF3  3058               	movlw	low (__powers_| (0+32768))
  3733  0EF4  0784               	addwf	4,f
  3734  0EF5  3098               	movlw	high (__powers_| (0+32768))
  3735  0EF6  3D85               	addwfc	5,f
  3736  0EF7  3F00               	moviw [0]fsr0
  3737  0EF8  00C8               	movwf	___ftmul@f1
  3738  0EF9  3F01               	moviw [1]fsr0
  3739  0EFA  00C9               	movwf	___ftmul@f1+1
  3740  0EFB  3F02               	moviw [2]fsr0
  3741  0EFC  00CA               	movwf	___ftmul@f1+2
  3742  0EFD  3064               	movlw	100
  3743  0EFE  00B9               	movwf	___awdiv@divisor
  3744  0EFF  3000               	movlw	0
  3745  0F00  00BA               	movwf	___awdiv@divisor+1
  3746  0F01  0141               	movlb	1	; select bank1
  3747  0F02  0826               	movf	scale@scl^(0+128),w
  3748  0F03  0140               	movlb	0	; select bank0
  3749  0F04  00BB               	movwf	___awdiv@dividend
  3750  0F05  01BC               	clrf	___awdiv@dividend+1
  3751  0F06  1BBB               	btfsc	___awdiv@dividend,7
  3752  0F07  03BC               	decf	___awdiv@dividend+1,f
  3753  0F08  3195  2597  318D   	fcall	___awdiv
  3754  0F0B  0140               	movlb	0	; select bank0
  3755  0F0C  0839               	movf	?___awdiv,w
  3756  0F0D  3E12               	addlw	18
  3757  0F0E  00C2               	movwf	___wmul@multiplier
  3758  0F0F  3000               	movlw	0
  3759  0F10  3D3A               	addwfc	?___awdiv+1,w
  3760  0F11  00C3               	movwf	___wmul@multiplier+1
  3761  0F12  3003               	movlw	3
  3762  0F13  00C4               	movwf	___wmul@multiplicand
  3763  0F14  3000               	movlw	0
  3764  0F15  00C5               	movwf	___wmul@multiplicand+1
  3765  0F16  3193  23C1  318D   	fcall	___wmul
  3766  0F19  0140               	movlb	0	; select bank0
  3767  0F1A  0843               	movf	?___wmul+1,w
  3768  0F1B  0085               	movwf	5
  3769  0F1C  0842               	movf	?___wmul,w
  3770  0F1D  0084               	movwf	4
  3771  0F1E  3058               	movlw	low (__powers_| (0+32768))
  3772  0F1F  0784               	addwf	4,f
  3773  0F20  3098               	movlw	high (__powers_| (0+32768))
  3774  0F21  3D85               	addwfc	5,f
  3775  0F22  3F00               	moviw [0]fsr0
  3776  0F23  00CB               	movwf	___ftmul@f2
  3777  0F24  3F01               	moviw [1]fsr0
  3778  0F25  00CC               	movwf	___ftmul@f2+1
  3779  0F26  3F02               	moviw [2]fsr0
  3780  0F27  00CD               	movwf	___ftmul@f2+2
  3781  0F28  3189  21EF  318D   	fcall	___ftmul
  3782  0F2B  0140               	movlb	0	; select bank0
  3783  0F2C  0848               	movf	?___ftmul,w
  3784  0F2D  0141               	movlb	1	; select bank1
  3785  0F2E  00A3               	movwf	_scale$973^(0+128)
  3786  0F2F  0140               	movlb	0	; select bank0
  3787  0F30  0849               	movf	?___ftmul+1,w
  3788  0F31  0141               	movlb	1	; select bank1
  3789  0F32  00A4               	movwf	(_scale$973+1)^(0+128)
  3790  0F33  0140               	movlb	0	; select bank0
  3791  0F34  084A               	movf	?___ftmul+2,w
  3792  0F35  0141               	movlb	1	; select bank1
  3793  0F36  00A5               	movwf	(_scale$973+2)^(0+128)
  3794                           
  3795                           ;doprnt.c: 437: return _powers_[scl/100+18] * _powers_[(scl%100)/10+9] * _powers_[scl%10
      +                          ];
  3796  0F37  0826               	movf	scale@scl^(0+128),w
  3797  0F38  0140               	movlb	0	; select bank0
  3798  0F39  00B4               	movwf	___awmod@dividend
  3799  0F3A  01B5               	clrf	___awmod@dividend+1
  3800  0F3B  1BB4               	btfsc	___awmod@dividend,7
  3801  0F3C  03B5               	decf	___awmod@dividend+1,f
  3802  0F3D  300A               	movlw	10
  3803  0F3E  00B2               	movwf	___awmod@divisor
  3804  0F3F  3000               	movlw	0
  3805  0F40  00B3               	movwf	___awmod@divisor+1
  3806  0F41  3195  2500  318D   	fcall	___awmod
  3807  0F44  0140               	movlb	0	; select bank0
  3808  0F45  0833               	movf	?___awmod+1,w
  3809  0F46  00C3               	movwf	___wmul@multiplier+1
  3810  0F47  0832               	movf	?___awmod,w
  3811  0F48  00C2               	movwf	___wmul@multiplier
  3812  0F49  3003               	movlw	3
  3813  0F4A  00C4               	movwf	___wmul@multiplicand
  3814  0F4B  3000               	movlw	0
  3815  0F4C  00C5               	movwf	___wmul@multiplicand+1
  3816  0F4D  3193  23C1  318D   	fcall	___wmul
  3817  0F50  0140               	movlb	0	; select bank0
  3818  0F51  0843               	movf	?___wmul+1,w
  3819  0F52  0085               	movwf	5
  3820  0F53  0842               	movf	?___wmul,w
  3821  0F54  0084               	movwf	4
  3822  0F55  3058               	movlw	low (__powers_| (0+32768))
  3823  0F56  0784               	addwf	4,f
  3824  0F57  3098               	movlw	high (__powers_| (0+32768))
  3825  0F58  3D85               	addwfc	5,f
  3826  0F59  3F00               	moviw [0]fsr0
  3827  0F5A  00C8               	movwf	___ftmul@f1
  3828  0F5B  3F01               	moviw [1]fsr0
  3829  0F5C  00C9               	movwf	___ftmul@f1+1
  3830  0F5D  3F02               	moviw [2]fsr0
  3831  0F5E  00CA               	movwf	___ftmul@f1+2
  3832  0F5F  0141               	movlb	1	; select bank1
  3833  0F60  0823               	movf	_scale$973^(0+128),w
  3834  0F61  0140               	movlb	0	; select bank0
  3835  0F62  00CB               	movwf	___ftmul@f2
  3836  0F63  0141               	movlb	1	; select bank1
  3837  0F64  0824               	movf	(_scale$973+1)^(0+128),w
  3838  0F65  0140               	movlb	0	; select bank0
  3839  0F66  00CC               	movwf	___ftmul@f2+1
  3840  0F67  0141               	movlb	1	; select bank1
  3841  0F68  0825               	movf	(_scale$973+2)^(0+128),w
  3842  0F69  0140               	movlb	0	; select bank0
  3843  0F6A  00CD               	movwf	___ftmul@f2+2
  3844  0F6B  3189  21EF         	fcall	___ftmul
  3845  0F6D  0140               	movlb	0	; select bank0
  3846  0F6E  0848               	movf	?___ftmul,w
  3847  0F6F  0141               	movlb	1	; select bank1
  3848  0F70  00A0               	movwf	?_scale^(0+128)
  3849  0F71  0140               	movlb	0	; select bank0
  3850  0F72  0849               	movf	?___ftmul+1,w
  3851  0F73  0141               	movlb	1	; select bank1
  3852  0F74  00A1               	movwf	(?_scale+1)^(0+128)
  3853  0F75  0140               	movlb	0	; select bank0
  3854  0F76  084A               	movf	?___ftmul+2,w
  3855  0F77  0141               	movlb	1	; select bank1
  3856  0F78  00A2               	movwf	(?_scale+2)^(0+128)
  3857  0F79  0008               	return
  3858  0F7A                     l3168:	
  3859                           
  3860                           ;doprnt.c: 438: else if(scl > 10)
  3861  0F7A  0826               	movf	scale@scl^(0+128),w
  3862  0F7B  3A80               	xorlw	128
  3863  0F7C  3E75               	addlw	-139
  3864  0F7D  1C03               	skipc
  3865  0F7E  2FE1               	goto	l3174
  3866                           
  3867                           ;doprnt.c: 439: return _powers_[scl/10+9] * _powers_[scl%10];
  3868  0F7F  0826               	movf	scale@scl^(0+128),w
  3869  0F80  0140               	movlb	0	; select bank0
  3870  0F81  00B4               	movwf	___awmod@dividend
  3871  0F82  01B5               	clrf	___awmod@dividend+1
  3872  0F83  1BB4               	btfsc	___awmod@dividend,7
  3873  0F84  03B5               	decf	___awmod@dividend+1,f
  3874  0F85  300A               	movlw	10
  3875  0F86  00B2               	movwf	___awmod@divisor
  3876  0F87  3000               	movlw	0
  3877  0F88  00B3               	movwf	___awmod@divisor+1
  3878  0F89  3195  2500  318D   	fcall	___awmod
  3879  0F8C  0140               	movlb	0	; select bank0
  3880  0F8D  0833               	movf	?___awmod+1,w
  3881  0F8E  00C3               	movwf	___wmul@multiplier+1
  3882  0F8F  0832               	movf	?___awmod,w
  3883  0F90  00C2               	movwf	___wmul@multiplier
  3884  0F91  3003               	movlw	3
  3885  0F92  00C4               	movwf	___wmul@multiplicand
  3886  0F93  3000               	movlw	0
  3887  0F94  00C5               	movwf	___wmul@multiplicand+1
  3888  0F95  3193  23C1  318D   	fcall	___wmul
  3889  0F98  0140               	movlb	0	; select bank0
  3890  0F99  0843               	movf	?___wmul+1,w
  3891  0F9A  0085               	movwf	5
  3892  0F9B  0842               	movf	?___wmul,w
  3893  0F9C  0084               	movwf	4
  3894  0F9D  3058               	movlw	low (__powers_| (0+32768))
  3895  0F9E  0784               	addwf	4,f
  3896  0F9F  3098               	movlw	high (__powers_| (0+32768))
  3897  0FA0  3D85               	addwfc	5,f
  3898  0FA1  3F00               	moviw [0]fsr0
  3899  0FA2  00C8               	movwf	___ftmul@f1
  3900  0FA3  3F01               	moviw [1]fsr0
  3901  0FA4  00C9               	movwf	___ftmul@f1+1
  3902  0FA5  3F02               	moviw [2]fsr0
  3903  0FA6  00CA               	movwf	___ftmul@f1+2
  3904  0FA7  300A               	movlw	10
  3905  0FA8  00B9               	movwf	___awdiv@divisor
  3906  0FA9  3000               	movlw	0
  3907  0FAA  00BA               	movwf	___awdiv@divisor+1
  3908  0FAB  0141               	movlb	1	; select bank1
  3909  0FAC  0826               	movf	scale@scl^(0+128),w
  3910  0FAD  0140               	movlb	0	; select bank0
  3911  0FAE  00BB               	movwf	___awdiv@dividend
  3912  0FAF  01BC               	clrf	___awdiv@dividend+1
  3913  0FB0  1BBB               	btfsc	___awdiv@dividend,7
  3914  0FB1  03BC               	decf	___awdiv@dividend+1,f
  3915  0FB2  3195  2597  318D   	fcall	___awdiv
  3916  0FB5  0140               	movlb	0	; select bank0
  3917  0FB6  0839               	movf	?___awdiv,w
  3918  0FB7  3E09               	addlw	9
  3919  0FB8  00C2               	movwf	___wmul@multiplier
  3920  0FB9  3000               	movlw	0
  3921  0FBA  3D3A               	addwfc	?___awdiv+1,w
  3922  0FBB  00C3               	movwf	___wmul@multiplier+1
  3923  0FBC  3003               	movlw	3
  3924  0FBD  00C4               	movwf	___wmul@multiplicand
  3925  0FBE  3000               	movlw	0
  3926  0FBF  00C5               	movwf	___wmul@multiplicand+1
  3927  0FC0  3193  23C1  318D   	fcall	___wmul
  3928  0FC3  0140               	movlb	0	; select bank0
  3929  0FC4  0843               	movf	?___wmul+1,w
  3930  0FC5  0085               	movwf	5
  3931  0FC6  0842               	movf	?___wmul,w
  3932  0FC7  0084               	movwf	4
  3933  0FC8  3058               	movlw	low (__powers_| (0+32768))
  3934  0FC9  0784               	addwf	4,f
  3935  0FCA  3098               	movlw	high (__powers_| (0+32768))
  3936  0FCB  3D85               	addwfc	5,f
  3937  0FCC  3F00               	moviw [0]fsr0
  3938  0FCD  00CB               	movwf	___ftmul@f2
  3939  0FCE  3F01               	moviw [1]fsr0
  3940  0FCF  00CC               	movwf	___ftmul@f2+1
  3941  0FD0  3F02               	moviw [2]fsr0
  3942  0FD1  00CD               	movwf	___ftmul@f2+2
  3943  0FD2  3189  21EF         	fcall	___ftmul
  3944  0FD4  0140               	movlb	0	; select bank0
  3945  0FD5  0848               	movf	?___ftmul,w
  3946  0FD6  0141               	movlb	1	; select bank1
  3947  0FD7  00A0               	movwf	?_scale^(0+128)
  3948  0FD8  0140               	movlb	0	; select bank0
  3949  0FD9  0849               	movf	?___ftmul+1,w
  3950  0FDA  0141               	movlb	1	; select bank1
  3951  0FDB  00A1               	movwf	(?_scale+1)^(0+128)
  3952  0FDC  0140               	movlb	0	; select bank0
  3953  0FDD  084A               	movf	?___ftmul+2,w
  3954  0FDE  0141               	movlb	1	; select bank1
  3955  0FDF  00A2               	movwf	(?_scale+2)^(0+128)
  3956  0FE0  0008               	return
  3957  0FE1                     l3174:	
  3958                           
  3959                           ;doprnt.c: 440: return _powers_[scl];
  3960  0FE1  0826               	movf	scale@scl^(0+128),w
  3961  0FE2  0140               	movlb	0	; select bank0
  3962  0FE3  00D8               	movwf	??_scale
  3963  0FE4  01D9               	clrf	??_scale+1
  3964  0FE5  0858               	movf	??_scale,w
  3965  0FE6  00C2               	movwf	___wmul@multiplier
  3966  0FE7  0859               	movf	??_scale+1,w
  3967  0FE8  00C3               	movwf	___wmul@multiplier+1
  3968  0FE9  3003               	movlw	3
  3969  0FEA  00C4               	movwf	___wmul@multiplicand
  3970  0FEB  3000               	movlw	0
  3971  0FEC  00C5               	movwf	___wmul@multiplicand+1
  3972  0FED  3193  23C1         	fcall	___wmul
  3973  0FEF  0140               	movlb	0	; select bank0
  3974  0FF0  0843               	movf	?___wmul+1,w
  3975  0FF1  0085               	movwf	5
  3976  0FF2  0842               	movf	?___wmul,w
  3977  0FF3  0084               	movwf	4
  3978  0FF4  3058               	movlw	low (__powers_| (0+32768))
  3979  0FF5  0784               	addwf	4,f
  3980  0FF6  3098               	movlw	high (__powers_| (0+32768))
  3981  0FF7  3D85               	addwfc	5,f
  3982  0FF8  3F00               	moviw [0]fsr0
  3983  0FF9  0141               	movlb	1	; select bank1
  3984  0FFA  00A0               	movwf	?_scale^(0+128)
  3985  0FFB  3F01               	moviw [1]fsr0
  3986  0FFC  00A1               	movwf	(?_scale+1)^(0+128)
  3987  0FFD  3F02               	moviw [2]fsr0
  3988  0FFE  00A2               	movwf	(?_scale+2)^(0+128)
  3989  0FFF  0008               	return
  3990  1000                     __end_of_scale:	
  3991                           
  3992                           	psect	text3
  3993  13B2                     __ptext3:	
  3994 ;; *************** function _isdigit *****************
  3995 ;; Defined at:
  3996 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\isdigit.c"
  3997 ;; Parameters:    Size  Location     Type
  3998 ;;  c               1    wreg     unsigned char 
  3999 ;; Auto vars:     Size  Location     Type
  4000 ;;  c               1   19[BANK0 ] unsigned char 
  4001 ;; Return value:  Size  Location     Type
  4002 ;;		None               void
  4003 ;; Registers used:
  4004 ;;		wreg, status,2, status,0
  4005 ;; Tracked objects:
  4006 ;;		On entry : 0/0
  4007 ;;		On exit  : 0/0
  4008 ;;		Unchanged: 0/0
  4009 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
  4010 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  4011 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  4012 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  4013 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  4014 ;;Total ram usage:        2 bytes
  4015 ;; Hardware stack levels used:    1
  4016 ;; Hardware stack levels required when called:    3
  4017 ;; This function calls:
  4018 ;;		Nothing
  4019 ;; This function is called by:
  4020 ;;		_sprintf
  4021 ;; This function uses a non-reentrant model
  4022 ;;
  4023                           
  4024                           
  4025                           ;psect for function _isdigit
  4026  13B2                     _isdigit:	
  4027                           
  4028                           ;incstack = 0
  4029                           ; Regs used in _isdigit: [wreg+status,2+status,0]
  4030                           ;isdigit@c stored from wreg
  4031  13B2  0140               	movlb	0	; select bank0
  4032  13B3  00B3               	movwf	isdigit@c
  4033  13B4  01B2               	clrf	_isdigit$757
  4034  13B5  303A               	movlw	58
  4035  13B6  0233               	subwf	isdigit@c,w
  4036  13B7  1803               	skipnc
  4037  13B8  2BBF               	goto	l2210
  4038  13B9  3030               	movlw	48
  4039  13BA  0233               	subwf	isdigit@c,w
  4040  13BB  1C03               	skipc
  4041  13BC  2BBF               	goto	l2210
  4042  13BD  01B2               	clrf	_isdigit$757
  4043  13BE  0AB2               	incf	_isdigit$757,f
  4044  13BF                     l2210:	
  4045  13BF  0C32               	rrf	_isdigit$757,w
  4046  13C0  0008               	return
  4047  13C1                     __end_of_isdigit:	
  4048                           
  4049                           	psect	text4
  4050  05AE                     __ptext4:	
  4051 ;; *************** function _fround *****************
  4052 ;; Defined at:
  4053 ;;		line 409 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\doprnt.c"
  4054 ;; Parameters:    Size  Location     Type
  4055 ;;  prec            1    wreg     unsigned char 
  4056 ;; Auto vars:     Size  Location     Type
  4057 ;;  prec            1   13[BANK1 ] unsigned char 
  4058 ;; Return value:  Size  Location     Type
  4059 ;;                  3    0[BANK1 ] unsigned char 
  4060 ;; Registers used:
  4061 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  4062 ;; Tracked objects:
  4063 ;;		On entry : 0/0
  4064 ;;		On exit  : 0/0
  4065 ;;		Unchanged: 0/0
  4066 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
  4067 ;;      Params:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  4068 ;;      Locals:         0       0       7       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  4069 ;;      Temps:          0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  4070 ;;      Totals:         0       0      14       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  4071 ;;Total ram usage:       14 bytes
  4072 ;; Hardware stack levels used:    1
  4073 ;; Hardware stack levels required when called:    5
  4074 ;; This function calls:
  4075 ;;		___awdiv
  4076 ;;		___awmod
  4077 ;;		___ftmul
  4078 ;;		___wmul
  4079 ;; This function is called by:
  4080 ;;		_sprintf
  4081 ;; This function uses a non-reentrant model
  4082 ;;
  4083                           
  4084                           
  4085                           ;psect for function _fround
  4086  05AE                     _fround:	
  4087                           
  4088                           ;incstack = 0
  4089                           ; Regs used in _fround: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  4090                           ;fround@prec stored from wreg
  4091  05AE  0141               	movlb	1	; select bank1
  4092  05AF  00AD               	movwf	fround@prec^(0+128)
  4093                           
  4094                           ;doprnt.c: 413: if(prec>=110)
  4095  05B0  306E               	movlw	110
  4096  05B1  022D               	subwf	fround@prec^(0+128),w
  4097  05B2  1C03               	skipc
  4098  05B3  2E97               	goto	l3126
  4099                           
  4100                           ;doprnt.c: 414: return 0.5 * _npowers_[prec/100+18] * _npowers_[(prec%100)/10+9] * _npow
      +                          ers_[prec%10];
  4101  05B4  300A               	movlw	10
  4102  05B5  0140               	movlb	0	; select bank0
  4103  05B6  00B9               	movwf	___awdiv@divisor
  4104  05B7  3000               	movlw	0
  4105  05B8  00BA               	movwf	___awdiv@divisor+1
  4106  05B9  0141               	movlb	1	; select bank1
  4107  05BA  082D               	movf	fround@prec^(0+128),w
  4108  05BB  00A3               	movwf	??_fround^(0+128)
  4109  05BC  01A4               	clrf	(??_fround^(0+128)+1)
  4110  05BD  0823               	movf	??_fround^(0+128),w
  4111  05BE  0140               	movlb	0	; select bank0
  4112  05BF  00B4               	movwf	___awmod@dividend
  4113  05C0  0141               	movlb	1	; select bank1
  4114  05C1  0824               	movf	(??_fround+1)^(0+128),w
  4115  05C2  0140               	movlb	0	; select bank0
  4116  05C3  00B5               	movwf	___awmod@dividend+1
  4117  05C4  3064               	movlw	100
  4118  05C5  00B2               	movwf	___awmod@divisor
  4119  05C6  3000               	movlw	0
  4120  05C7  00B3               	movwf	___awmod@divisor+1
  4121  05C8  3195  2500  3185   	fcall	___awmod
  4122  05CB  0140               	movlb	0	; select bank0
  4123  05CC  0833               	movf	?___awmod+1,w
  4124  05CD  00BC               	movwf	___awdiv@dividend+1
  4125  05CE  0832               	movf	?___awmod,w
  4126  05CF  00BB               	movwf	___awdiv@dividend
  4127  05D0  3195  2597  3185   	fcall	___awdiv
  4128  05D3  0140               	movlb	0	; select bank0
  4129  05D4  0839               	movf	?___awdiv,w
  4130  05D5  3E09               	addlw	9
  4131  05D6  00C2               	movwf	___wmul@multiplier
  4132  05D7  3000               	movlw	0
  4133  05D8  3D3A               	addwfc	?___awdiv+1,w
  4134  05D9  00C3               	movwf	___wmul@multiplier+1
  4135  05DA  3003               	movlw	3
  4136  05DB  00C4               	movwf	___wmul@multiplicand
  4137  05DC  3000               	movlw	0
  4138  05DD  00C5               	movwf	___wmul@multiplicand+1
  4139  05DE  3193  23C1  3185   	fcall	___wmul
  4140  05E1  0140               	movlb	0	; select bank0
  4141  05E2  0843               	movf	?___wmul+1,w
  4142  05E3  0085               	movwf	5
  4143  05E4  0842               	movf	?___wmul,w
  4144  05E5  0084               	movwf	4
  4145  05E6  3000               	movlw	low (__npowers_| (0+32768))
  4146  05E7  0784               	addwf	4,f
  4147  05E8  3098               	movlw	high (__npowers_| (0+32768))
  4148  05E9  3D85               	addwfc	5,f
  4149  05EA  3F00               	moviw [0]fsr0
  4150  05EB  00C8               	movwf	___ftmul@f1
  4151  05EC  3F01               	moviw [1]fsr0
  4152  05ED  00C9               	movwf	___ftmul@f1+1
  4153  05EE  3F02               	moviw [2]fsr0
  4154  05EF  00CA               	movwf	___ftmul@f1+2
  4155  05F0  3064               	movlw	100
  4156  05F1  00B9               	movwf	___awdiv@divisor
  4157  05F2  3000               	movlw	0
  4158  05F3  00BA               	movwf	___awdiv@divisor+1
  4159  05F4  0141               	movlb	1	; select bank1
  4160  05F5  082D               	movf	fround@prec^(0+128),w
  4161  05F6  00A5               	movwf	(??_fround+2)^(0+128)
  4162  05F7  01A6               	clrf	((??_fround+2)^(0+128)+1)
  4163  05F8  0825               	movf	(??_fround+2)^(0+128),w
  4164  05F9  0140               	movlb	0	; select bank0
  4165  05FA  00BB               	movwf	___awdiv@dividend
  4166  05FB  0141               	movlb	1	; select bank1
  4167  05FC  0826               	movf	(??_fround+3)^(0+128),w
  4168  05FD  0140               	movlb	0	; select bank0
  4169  05FE  00BC               	movwf	___awdiv@dividend+1
  4170  05FF  3195  2597  3185   	fcall	___awdiv
  4171  0602  0140               	movlb	0	; select bank0
  4172  0603  0839               	movf	?___awdiv,w
  4173  0604  3E12               	addlw	18
  4174  0605  00C2               	movwf	___wmul@multiplier
  4175  0606  3000               	movlw	0
  4176  0607  3D3A               	addwfc	?___awdiv+1,w
  4177  0608  00C3               	movwf	___wmul@multiplier+1
  4178  0609  3003               	movlw	3
  4179  060A  00C4               	movwf	___wmul@multiplicand
  4180  060B  3000               	movlw	0
  4181  060C  00C5               	movwf	___wmul@multiplicand+1
  4182  060D  3193  23C1  3185   	fcall	___wmul
  4183  0610  0140               	movlb	0	; select bank0
  4184  0611  0843               	movf	?___wmul+1,w
  4185  0612  0085               	movwf	5
  4186  0613  0842               	movf	?___wmul,w
  4187  0614  0084               	movwf	4
  4188  0615  3000               	movlw	low (__npowers_| (0+32768))
  4189  0616  0784               	addwf	4,f
  4190  0617  3098               	movlw	high (__npowers_| (0+32768))
  4191  0618  3D85               	addwfc	5,f
  4192  0619  3F00               	moviw [0]fsr0
  4193  061A  00CB               	movwf	___ftmul@f2
  4194  061B  3F01               	moviw [1]fsr0
  4195  061C  00CC               	movwf	___ftmul@f2+1
  4196  061D  3F02               	moviw [2]fsr0
  4197  061E  00CD               	movwf	___ftmul@f2+2
  4198  061F  3189  21EF  3185   	fcall	___ftmul
  4199  0622  0140               	movlb	0	; select bank0
  4200  0623  0848               	movf	?___ftmul,w
  4201  0624  0141               	movlb	1	; select bank1
  4202  0625  00AA               	movwf	_fround$971^(0+128)
  4203  0626  0140               	movlb	0	; select bank0
  4204  0627  0849               	movf	?___ftmul+1,w
  4205  0628  0141               	movlb	1	; select bank1
  4206  0629  00AB               	movwf	(_fround$971+1)^(0+128)
  4207  062A  0140               	movlb	0	; select bank0
  4208  062B  084A               	movf	?___ftmul+2,w
  4209  062C  0141               	movlb	1	; select bank1
  4210  062D  00AC               	movwf	(_fround$971+2)^(0+128)
  4211                           
  4212                           ;doprnt.c: 414: return 0.5 * _npowers_[prec/100+18] * _npowers_[(prec%100)/10+9] * _npow
      +                          ers_[prec%10];
  4213  062E  082D               	movf	fround@prec^(0+128),w
  4214  062F  00A3               	movwf	??_fround^(0+128)
  4215  0630  01A4               	clrf	(??_fround^(0+128)+1)
  4216  0631  0823               	movf	??_fround^(0+128),w
  4217  0632  0140               	movlb	0	; select bank0
  4218  0633  00B4               	movwf	___awmod@dividend
  4219  0634  0141               	movlb	1	; select bank1
  4220  0635  0824               	movf	(??_fround+1)^(0+128),w
  4221  0636  0140               	movlb	0	; select bank0
  4222  0637  00B5               	movwf	___awmod@dividend+1
  4223  0638  300A               	movlw	10
  4224  0639  00B2               	movwf	___awmod@divisor
  4225  063A  3000               	movlw	0
  4226  063B  00B3               	movwf	___awmod@divisor+1
  4227  063C  3195  2500  3185   	fcall	___awmod
  4228  063F  0140               	movlb	0	; select bank0
  4229  0640  0833               	movf	?___awmod+1,w
  4230  0641  00C3               	movwf	___wmul@multiplier+1
  4231  0642  0832               	movf	?___awmod,w
  4232  0643  00C2               	movwf	___wmul@multiplier
  4233  0644  3003               	movlw	3
  4234  0645  00C4               	movwf	___wmul@multiplicand
  4235  0646  3000               	movlw	0
  4236  0647  00C5               	movwf	___wmul@multiplicand+1
  4237  0648  3193  23C1  3185   	fcall	___wmul
  4238  064B  0140               	movlb	0	; select bank0
  4239  064C  0843               	movf	?___wmul+1,w
  4240  064D  0085               	movwf	5
  4241  064E  0842               	movf	?___wmul,w
  4242  064F  0084               	movwf	4
  4243  0650  3000               	movlw	low (__npowers_| (0+32768))
  4244  0651  0784               	addwf	4,f
  4245  0652  3098               	movlw	high (__npowers_| (0+32768))
  4246  0653  3D85               	addwfc	5,f
  4247  0654  3F00               	moviw [0]fsr0
  4248  0655  00C8               	movwf	___ftmul@f1
  4249  0656  3F01               	moviw [1]fsr0
  4250  0657  00C9               	movwf	___ftmul@f1+1
  4251  0658  3F02               	moviw [2]fsr0
  4252  0659  00CA               	movwf	___ftmul@f1+2
  4253  065A  0141               	movlb	1	; select bank1
  4254  065B  082A               	movf	_fround$971^(0+128),w
  4255  065C  0140               	movlb	0	; select bank0
  4256  065D  00CB               	movwf	___ftmul@f2
  4257  065E  0141               	movlb	1	; select bank1
  4258  065F  082B               	movf	(_fround$971+1)^(0+128),w
  4259  0660  0140               	movlb	0	; select bank0
  4260  0661  00CC               	movwf	___ftmul@f2+1
  4261  0662  0141               	movlb	1	; select bank1
  4262  0663  082C               	movf	(_fround$971+2)^(0+128),w
  4263  0664  0140               	movlb	0	; select bank0
  4264  0665  00CD               	movwf	___ftmul@f2+2
  4265  0666  3189  21EF  3185   	fcall	___ftmul
  4266  0669  0140               	movlb	0	; select bank0
  4267  066A  0848               	movf	?___ftmul,w
  4268  066B  0141               	movlb	1	; select bank1
  4269  066C  00A7               	movwf	_fround$972^(0+128)
  4270  066D  0140               	movlb	0	; select bank0
  4271  066E  0849               	movf	?___ftmul+1,w
  4272  066F  0141               	movlb	1	; select bank1
  4273  0670  00A8               	movwf	(_fround$972+1)^(0+128)
  4274  0671  0140               	movlb	0	; select bank0
  4275  0672  084A               	movf	?___ftmul+2,w
  4276  0673  0141               	movlb	1	; select bank1
  4277  0674  00A9               	movwf	(_fround$972+2)^(0+128)
  4278                           
  4279                           ;doprnt.c: 414: return 0.5 * _npowers_[prec/100+18] * _npowers_[(prec%100)/10+9] * _npow
      +                          ers_[prec%10];
  4280  0675  3000               	movlw	0
  4281  0676  0140               	movlb	0	; select bank0
  4282  0677  00C8               	movwf	___ftmul@f1
  4283  0678  3000               	movlw	0
  4284  0679  00C9               	movwf	___ftmul@f1+1
  4285  067A  303F               	movlw	63
  4286  067B  00CA               	movwf	___ftmul@f1+2
  4287  067C  0141               	movlb	1	; select bank1
  4288  067D  0827               	movf	_fround$972^(0+128),w
  4289  067E  0140               	movlb	0	; select bank0
  4290  067F  00CB               	movwf	___ftmul@f2
  4291  0680  0141               	movlb	1	; select bank1
  4292  0681  0828               	movf	(_fround$972+1)^(0+128),w
  4293  0682  0140               	movlb	0	; select bank0
  4294  0683  00CC               	movwf	___ftmul@f2+1
  4295  0684  0141               	movlb	1	; select bank1
  4296  0685  0829               	movf	(_fround$972+2)^(0+128),w
  4297  0686  0140               	movlb	0	; select bank0
  4298  0687  00CD               	movwf	___ftmul@f2+2
  4299  0688  3189  21EF         	fcall	___ftmul
  4300  068A  0140               	movlb	0	; select bank0
  4301  068B  0848               	movf	?___ftmul,w
  4302  068C  0141               	movlb	1	; select bank1
  4303  068D  00A0               	movwf	?_fround^(0+128)
  4304  068E  0140               	movlb	0	; select bank0
  4305  068F  0849               	movf	?___ftmul+1,w
  4306  0690  0141               	movlb	1	; select bank1
  4307  0691  00A1               	movwf	(?_fround+1)^(0+128)
  4308  0692  0140               	movlb	0	; select bank0
  4309  0693  084A               	movf	?___ftmul+2,w
  4310  0694  0141               	movlb	1	; select bank1
  4311  0695  00A2               	movwf	(?_fround+2)^(0+128)
  4312  0696  0008               	return
  4313  0697                     l3126:	
  4314                           
  4315                           ;doprnt.c: 415: else if(prec > 10)
  4316  0697  300B               	movlw	11
  4317  0698  022D               	subwf	fround@prec^(0+128),w
  4318  0699  1C03               	skipc
  4319  069A  2F27               	goto	l3134
  4320                           
  4321                           ;doprnt.c: 416: return 0.5 * _npowers_[prec/10+9] * _npowers_[prec%10];
  4322  069B  082D               	movf	fround@prec^(0+128),w
  4323  069C  00A3               	movwf	??_fround^(0+128)
  4324  069D  01A4               	clrf	(??_fround^(0+128)+1)
  4325  069E  0823               	movf	??_fround^(0+128),w
  4326  069F  0140               	movlb	0	; select bank0
  4327  06A0  00B4               	movwf	___awmod@dividend
  4328  06A1  0141               	movlb	1	; select bank1
  4329  06A2  0824               	movf	(??_fround+1)^(0+128),w
  4330  06A3  0140               	movlb	0	; select bank0
  4331  06A4  00B5               	movwf	___awmod@dividend+1
  4332  06A5  300A               	movlw	10
  4333  06A6  00B2               	movwf	___awmod@divisor
  4334  06A7  3000               	movlw	0
  4335  06A8  00B3               	movwf	___awmod@divisor+1
  4336  06A9  3195  2500  3185   	fcall	___awmod
  4337  06AC  0140               	movlb	0	; select bank0
  4338  06AD  0833               	movf	?___awmod+1,w
  4339  06AE  00C3               	movwf	___wmul@multiplier+1
  4340  06AF  0832               	movf	?___awmod,w
  4341  06B0  00C2               	movwf	___wmul@multiplier
  4342  06B1  3003               	movlw	3
  4343  06B2  00C4               	movwf	___wmul@multiplicand
  4344  06B3  3000               	movlw	0
  4345  06B4  00C5               	movwf	___wmul@multiplicand+1
  4346  06B5  3193  23C1  3185   	fcall	___wmul
  4347  06B8  0140               	movlb	0	; select bank0
  4348  06B9  0843               	movf	?___wmul+1,w
  4349  06BA  0085               	movwf	5
  4350  06BB  0842               	movf	?___wmul,w
  4351  06BC  0084               	movwf	4
  4352  06BD  3000               	movlw	low (__npowers_| (0+32768))
  4353  06BE  0784               	addwf	4,f
  4354  06BF  3098               	movlw	high (__npowers_| (0+32768))
  4355  06C0  3D85               	addwfc	5,f
  4356  06C1  3F00               	moviw [0]fsr0
  4357  06C2  00C8               	movwf	___ftmul@f1
  4358  06C3  3F01               	moviw [1]fsr0
  4359  06C4  00C9               	movwf	___ftmul@f1+1
  4360  06C5  3F02               	moviw [2]fsr0
  4361  06C6  00CA               	movwf	___ftmul@f1+2
  4362  06C7  300A               	movlw	10
  4363  06C8  00B9               	movwf	___awdiv@divisor
  4364  06C9  3000               	movlw	0
  4365  06CA  00BA               	movwf	___awdiv@divisor+1
  4366  06CB  0141               	movlb	1	; select bank1
  4367  06CC  082D               	movf	fround@prec^(0+128),w
  4368  06CD  00A5               	movwf	(??_fround+2)^(0+128)
  4369  06CE  01A6               	clrf	((??_fround+2)^(0+128)+1)
  4370  06CF  0825               	movf	(??_fround+2)^(0+128),w
  4371  06D0  0140               	movlb	0	; select bank0
  4372  06D1  00BB               	movwf	___awdiv@dividend
  4373  06D2  0141               	movlb	1	; select bank1
  4374  06D3  0826               	movf	(??_fround+3)^(0+128),w
  4375  06D4  0140               	movlb	0	; select bank0
  4376  06D5  00BC               	movwf	___awdiv@dividend+1
  4377  06D6  3195  2597  3185   	fcall	___awdiv
  4378  06D9  0140               	movlb	0	; select bank0
  4379  06DA  0839               	movf	?___awdiv,w
  4380  06DB  3E09               	addlw	9
  4381  06DC  00C2               	movwf	___wmul@multiplier
  4382  06DD  3000               	movlw	0
  4383  06DE  3D3A               	addwfc	?___awdiv+1,w
  4384  06DF  00C3               	movwf	___wmul@multiplier+1
  4385  06E0  3003               	movlw	3
  4386  06E1  00C4               	movwf	___wmul@multiplicand
  4387  06E2  3000               	movlw	0
  4388  06E3  00C5               	movwf	___wmul@multiplicand+1
  4389  06E4  3193  23C1  3185   	fcall	___wmul
  4390  06E7  0140               	movlb	0	; select bank0
  4391  06E8  0843               	movf	?___wmul+1,w
  4392  06E9  0085               	movwf	5
  4393  06EA  0842               	movf	?___wmul,w
  4394  06EB  0084               	movwf	4
  4395  06EC  3000               	movlw	low (__npowers_| (0+32768))
  4396  06ED  0784               	addwf	4,f
  4397  06EE  3098               	movlw	high (__npowers_| (0+32768))
  4398  06EF  3D85               	addwfc	5,f
  4399  06F0  3F00               	moviw [0]fsr0
  4400  06F1  00CB               	movwf	___ftmul@f2
  4401  06F2  3F01               	moviw [1]fsr0
  4402  06F3  00CC               	movwf	___ftmul@f2+1
  4403  06F4  3F02               	moviw [2]fsr0
  4404  06F5  00CD               	movwf	___ftmul@f2+2
  4405  06F6  3189  21EF  3185   	fcall	___ftmul
  4406  06F9  0140               	movlb	0	; select bank0
  4407  06FA  0848               	movf	?___ftmul,w
  4408  06FB  0141               	movlb	1	; select bank1
  4409  06FC  00AA               	movwf	_fround$971^(0+128)
  4410  06FD  0140               	movlb	0	; select bank0
  4411  06FE  0849               	movf	?___ftmul+1,w
  4412  06FF  0141               	movlb	1	; select bank1
  4413  0700  00AB               	movwf	(_fround$971+1)^(0+128)
  4414  0701  0140               	movlb	0	; select bank0
  4415  0702  084A               	movf	?___ftmul+2,w
  4416  0703  0141               	movlb	1	; select bank1
  4417  0704  00AC               	movwf	(_fround$971+2)^(0+128)
  4418                           
  4419                           ;doprnt.c: 416: return 0.5 * _npowers_[prec/10+9] * _npowers_[prec%10];
  4420  0705  3000               	movlw	0
  4421  0706  0140               	movlb	0	; select bank0
  4422  0707  00C8               	movwf	___ftmul@f1
  4423  0708  3000               	movlw	0
  4424  0709  00C9               	movwf	___ftmul@f1+1
  4425  070A  303F               	movlw	63
  4426  070B  00CA               	movwf	___ftmul@f1+2
  4427  070C  0141               	movlb	1	; select bank1
  4428  070D  082A               	movf	_fround$971^(0+128),w
  4429  070E  0140               	movlb	0	; select bank0
  4430  070F  00CB               	movwf	___ftmul@f2
  4431  0710  0141               	movlb	1	; select bank1
  4432  0711  082B               	movf	(_fround$971+1)^(0+128),w
  4433  0712  0140               	movlb	0	; select bank0
  4434  0713  00CC               	movwf	___ftmul@f2+1
  4435  0714  0141               	movlb	1	; select bank1
  4436  0715  082C               	movf	(_fround$971+2)^(0+128),w
  4437  0716  0140               	movlb	0	; select bank0
  4438  0717  00CD               	movwf	___ftmul@f2+2
  4439  0718  3189  21EF         	fcall	___ftmul
  4440  071A  0140               	movlb	0	; select bank0
  4441  071B  0848               	movf	?___ftmul,w
  4442  071C  0141               	movlb	1	; select bank1
  4443  071D  00A0               	movwf	?_fround^(0+128)
  4444  071E  0140               	movlb	0	; select bank0
  4445  071F  0849               	movf	?___ftmul+1,w
  4446  0720  0141               	movlb	1	; select bank1
  4447  0721  00A1               	movwf	(?_fround+1)^(0+128)
  4448  0722  0140               	movlb	0	; select bank0
  4449  0723  084A               	movf	?___ftmul+2,w
  4450  0724  0141               	movlb	1	; select bank1
  4451  0725  00A2               	movwf	(?_fround+2)^(0+128)
  4452  0726  0008               	return
  4453  0727                     l3134:	
  4454                           
  4455                           ;doprnt.c: 417: return 0.5 * _npowers_[prec];
  4456  0727  3000               	movlw	0
  4457  0728  0140               	movlb	0	; select bank0
  4458  0729  00C8               	movwf	___ftmul@f1
  4459  072A  3000               	movlw	0
  4460  072B  00C9               	movwf	___ftmul@f1+1
  4461  072C  303F               	movlw	63
  4462  072D  00CA               	movwf	___ftmul@f1+2
  4463  072E  0141               	movlb	1	; select bank1
  4464  072F  082D               	movf	fround@prec^(0+128),w
  4465  0730  00A3               	movwf	??_fround^(0+128)
  4466  0731  01A4               	clrf	(??_fround^(0+128)+1)
  4467  0732  0823               	movf	??_fround^(0+128),w
  4468  0733  0140               	movlb	0	; select bank0
  4469  0734  00C2               	movwf	___wmul@multiplier
  4470  0735  0141               	movlb	1	; select bank1
  4471  0736  0824               	movf	(??_fround+1)^(0+128),w
  4472  0737  0140               	movlb	0	; select bank0
  4473  0738  00C3               	movwf	___wmul@multiplier+1
  4474  0739  3003               	movlw	3
  4475  073A  00C4               	movwf	___wmul@multiplicand
  4476  073B  3000               	movlw	0
  4477  073C  00C5               	movwf	___wmul@multiplicand+1
  4478  073D  3193  23C1  3185   	fcall	___wmul
  4479  0740  0140               	movlb	0	; select bank0
  4480  0741  0843               	movf	?___wmul+1,w
  4481  0742  0085               	movwf	5
  4482  0743  0842               	movf	?___wmul,w
  4483  0744  0084               	movwf	4
  4484  0745  3000               	movlw	low (__npowers_| (0+32768))
  4485  0746  0784               	addwf	4,f
  4486  0747  3098               	movlw	high (__npowers_| (0+32768))
  4487  0748  3D85               	addwfc	5,f
  4488  0749  3F00               	moviw [0]fsr0
  4489  074A  00CB               	movwf	___ftmul@f2
  4490  074B  3F01               	moviw [1]fsr0
  4491  074C  00CC               	movwf	___ftmul@f2+1
  4492  074D  3F02               	moviw [2]fsr0
  4493  074E  00CD               	movwf	___ftmul@f2+2
  4494  074F  3189  21EF         	fcall	___ftmul
  4495  0751  0140               	movlb	0	; select bank0
  4496  0752  0848               	movf	?___ftmul,w
  4497  0753  0141               	movlb	1	; select bank1
  4498  0754  00A0               	movwf	?_fround^(0+128)
  4499  0755  0140               	movlb	0	; select bank0
  4500  0756  0849               	movf	?___ftmul+1,w
  4501  0757  0141               	movlb	1	; select bank1
  4502  0758  00A1               	movwf	(?_fround+1)^(0+128)
  4503  0759  0140               	movlb	0	; select bank0
  4504  075A  084A               	movf	?___ftmul+2,w
  4505  075B  0141               	movlb	1	; select bank1
  4506  075C  00A2               	movwf	(?_fround+2)^(0+128)
  4507  075D  0008               	return
  4508  075E                     __end_of_fround:	
  4509                           
  4510                           	psect	text5
  4511  13C1                     __ptext5:	
  4512 ;; *************** function ___wmul *****************
  4513 ;; Defined at:
  4514 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\Umul16.c"
  4515 ;; Parameters:    Size  Location     Type
  4516 ;;  multiplier      2   34[BANK0 ] unsigned int 
  4517 ;;  multiplicand    2   36[BANK0 ] unsigned int 
  4518 ;; Auto vars:     Size  Location     Type
  4519 ;;  product         2   38[BANK0 ] unsigned int 
  4520 ;; Return value:  Size  Location     Type
  4521 ;;                  2   34[BANK0 ] unsigned int 
  4522 ;; Registers used:
  4523 ;;		wreg, status,2, status,0
  4524 ;; Tracked objects:
  4525 ;;		On entry : 0/0
  4526 ;;		On exit  : 0/0
  4527 ;;		Unchanged: 0/0
  4528 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
  4529 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  4530 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  4531 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  4532 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  4533 ;;Total ram usage:        6 bytes
  4534 ;; Hardware stack levels used:    1
  4535 ;; Hardware stack levels required when called:    3
  4536 ;; This function calls:
  4537 ;;		Nothing
  4538 ;; This function is called by:
  4539 ;;		_fround
  4540 ;;		_scale
  4541 ;;		_sprintf
  4542 ;; This function uses a non-reentrant model
  4543 ;;
  4544                           
  4545                           
  4546                           ;psect for function ___wmul
  4547  13C1                     ___wmul:	
  4548                           
  4549                           ;incstack = 0
  4550                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  4551  13C1  0140               	movlb	0	; select bank0
  4552  13C2  01C6               	clrf	___wmul@product
  4553  13C3  01C7               	clrf	___wmul@product+1
  4554  13C4                     l1880:	
  4555  13C4  1C42               	btfss	___wmul@multiplier,0
  4556  13C5  2BCA               	goto	l289
  4557  13C6  0844               	movf	___wmul@multiplicand,w
  4558  13C7  07C6               	addwf	___wmul@product,f
  4559  13C8  0845               	movf	___wmul@multiplicand+1,w
  4560  13C9  3DC7               	addwfc	___wmul@product+1,f
  4561  13CA                     l289:	
  4562  13CA  3001               	movlw	1
  4563  13CB                     u2345:	
  4564  13CB  35C4               	lslf	___wmul@multiplicand,f
  4565  13CC  0DC5               	rlf	___wmul@multiplicand+1,f
  4566  13CD  0B89               	decfsz	9,f
  4567  13CE  2BCB               	goto	u2345
  4568  13CF  3001               	movlw	1
  4569  13D0                     u2355:	
  4570  13D0  36C3               	lsrf	___wmul@multiplier+1,f
  4571  13D1  0CC2               	rrf	___wmul@multiplier,f
  4572  13D2  0B89               	decfsz	9,f
  4573  13D3  2BD0               	goto	u2355
  4574  13D4  0842               	movf	___wmul@multiplier,w
  4575  13D5  0443               	iorwf	___wmul@multiplier+1,w
  4576  13D6  1D03               	btfss	3,2
  4577  13D7  2BC4               	goto	l1880
  4578  13D8  0847               	movf	___wmul@product+1,w
  4579  13D9  00C3               	movwf	?___wmul+1
  4580  13DA  0846               	movf	___wmul@product,w
  4581  13DB  00C2               	movwf	?___wmul
  4582  13DC  0008               	return
  4583  13DD                     __end_of___wmul:	
  4584                           
  4585                           	psect	text6
  4586  09EF                     __ptext6:	
  4587 ;; *************** function ___ftmul *****************
  4588 ;; Defined at:
  4589 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\ftmul.c"
  4590 ;; Parameters:    Size  Location     Type
  4591 ;;  f1              3   40[BANK0 ] float 
  4592 ;;  f2              3   43[BANK0 ] float 
  4593 ;; Auto vars:     Size  Location     Type
  4594 ;;  f3_as_produc    3   51[BANK0 ] unsigned um
  4595 ;;  sign            1   55[BANK0 ] unsigned char 
  4596 ;;  cntr            1   54[BANK0 ] unsigned char 
  4597 ;;  exp             1   50[BANK0 ] unsigned char 
  4598 ;; Return value:  Size  Location     Type
  4599 ;;                  3   40[BANK0 ] float 
  4600 ;; Registers used:
  4601 ;;		wreg, status,2, status,0, pclath, cstack
  4602 ;; Tracked objects:
  4603 ;;		On entry : 0/0
  4604 ;;		On exit  : 0/0
  4605 ;;		Unchanged: 0/0
  4606 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
  4607 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  4608 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  4609 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  4610 ;;      Totals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  4611 ;;Total ram usage:       16 bytes
  4612 ;; Hardware stack levels used:    1
  4613 ;; Hardware stack levels required when called:    4
  4614 ;; This function calls:
  4615 ;;		___ftpack
  4616 ;; This function is called by:
  4617 ;;		_fround
  4618 ;;		_scale
  4619 ;;		_sprintf
  4620 ;; This function uses a non-reentrant model
  4621 ;;
  4622                           
  4623                           
  4624                           ;psect for function ___ftmul
  4625  09EF                     ___ftmul:	
  4626                           
  4627                           ;incstack = 0
  4628                           ; Regs used in ___ftmul: [wreg+status,2+status,0+pclath+cstack]
  4629  09EF  0140               	movlb	0	; select bank0
  4630  09F0  0848               	movf	___ftmul@f1,w
  4631  09F1  00CE               	movwf	??___ftmul
  4632  09F2  0849               	movf	___ftmul@f1+1,w
  4633  09F3  00CF               	movwf	??___ftmul+1
  4634  09F4  084A               	movf	___ftmul@f1+2,w
  4635  09F5  00D0               	movwf	??___ftmul+2
  4636  09F6  1003               	clrc
  4637  09F7  0D4F               	rlf	??___ftmul+1,w
  4638  09F8  0D50               	rlf	??___ftmul+2,w
  4639  09F9  00D1               	movwf	??___ftmul+3
  4640  09FA  0851               	movf	??___ftmul+3,w
  4641  09FB  00D2               	movwf	___ftmul@exp
  4642  09FC  0852               	movf	___ftmul@exp,w
  4643  09FD  1D03               	btfss	3,2
  4644  09FE  2A06               	goto	l3072
  4645  09FF  3000               	movlw	0
  4646  0A00  00C8               	movwf	?___ftmul
  4647  0A01  3000               	movlw	0
  4648  0A02  00C9               	movwf	?___ftmul+1
  4649  0A03  3000               	movlw	0
  4650  0A04  00CA               	movwf	?___ftmul+2
  4651  0A05  0008               	return
  4652  0A06                     l3072:	
  4653  0A06  084B               	movf	___ftmul@f2,w
  4654  0A07  00CE               	movwf	??___ftmul
  4655  0A08  084C               	movf	___ftmul@f2+1,w
  4656  0A09  00CF               	movwf	??___ftmul+1
  4657  0A0A  084D               	movf	___ftmul@f2+2,w
  4658  0A0B  00D0               	movwf	??___ftmul+2
  4659  0A0C  1003               	clrc
  4660  0A0D  0D4F               	rlf	??___ftmul+1,w
  4661  0A0E  0D50               	rlf	??___ftmul+2,w
  4662  0A0F  00D1               	movwf	??___ftmul+3
  4663  0A10  0851               	movf	??___ftmul+3,w
  4664  0A11  00D7               	movwf	___ftmul@sign
  4665  0A12  0857               	movf	___ftmul@sign,w
  4666  0A13  1D03               	btfss	3,2
  4667  0A14  2A1C               	goto	l3078
  4668  0A15  3000               	movlw	0
  4669  0A16  00C8               	movwf	?___ftmul
  4670  0A17  3000               	movlw	0
  4671  0A18  00C9               	movwf	?___ftmul+1
  4672  0A19  3000               	movlw	0
  4673  0A1A  00CA               	movwf	?___ftmul+2
  4674  0A1B  0008               	return
  4675  0A1C                     l3078:	
  4676  0A1C  0857               	movf	___ftmul@sign,w
  4677  0A1D  3E7B               	addlw	123
  4678  0A1E  00CE               	movwf	??___ftmul
  4679  0A1F  084E               	movf	??___ftmul,w
  4680  0A20  07D2               	addwf	___ftmul@exp,f
  4681  0A21  0848               	movf	___ftmul@f1,w
  4682  0A22  00CE               	movwf	??___ftmul
  4683  0A23  0849               	movf	___ftmul@f1+1,w
  4684  0A24  00CF               	movwf	??___ftmul+1
  4685  0A25  084A               	movf	___ftmul@f1+2,w
  4686  0A26  00D0               	movwf	??___ftmul+2
  4687  0A27  3010               	movlw	16
  4688  0A28                     u4785:	
  4689  0A28  36D0               	lsrf	??___ftmul+2,f
  4690  0A29  0CCF               	rrf	??___ftmul+1,f
  4691  0A2A  0CCE               	rrf	??___ftmul,f
  4692  0A2B  0B89               	decfsz	9,f
  4693  0A2C  2A28               	goto	u4785
  4694  0A2D  084E               	movf	??___ftmul,w
  4695  0A2E  00D1               	movwf	??___ftmul+3
  4696  0A2F  0851               	movf	??___ftmul+3,w
  4697  0A30  00D7               	movwf	___ftmul@sign
  4698  0A31  084B               	movf	___ftmul@f2,w
  4699  0A32  00CE               	movwf	??___ftmul
  4700  0A33  084C               	movf	___ftmul@f2+1,w
  4701  0A34  00CF               	movwf	??___ftmul+1
  4702  0A35  084D               	movf	___ftmul@f2+2,w
  4703  0A36  00D0               	movwf	??___ftmul+2
  4704  0A37  3010               	movlw	16
  4705  0A38                     u4795:	
  4706  0A38  36D0               	lsrf	??___ftmul+2,f
  4707  0A39  0CCF               	rrf	??___ftmul+1,f
  4708  0A3A  0CCE               	rrf	??___ftmul,f
  4709  0A3B  0B89               	decfsz	9,f
  4710  0A3C  2A38               	goto	u4795
  4711  0A3D  084E               	movf	??___ftmul,w
  4712  0A3E  00D1               	movwf	??___ftmul+3
  4713  0A3F  0851               	movf	??___ftmul+3,w
  4714  0A40  06D7               	xorwf	___ftmul@sign,f
  4715  0A41  3080               	movlw	128
  4716  0A42  00CE               	movwf	??___ftmul
  4717  0A43  084E               	movf	??___ftmul,w
  4718  0A44  05D7               	andwf	___ftmul@sign,f
  4719  0A45  17C9               	bsf	___ftmul@f1+1,7
  4720  0A46  17CC               	bsf	___ftmul@f2+1,7
  4721  0A47  30FF               	movlw	255
  4722  0A48  05CB               	andwf	___ftmul@f2,f
  4723  0A49  30FF               	movlw	255
  4724  0A4A  05CC               	andwf	___ftmul@f2+1,f
  4725  0A4B  3000               	movlw	0
  4726  0A4C  05CD               	andwf	___ftmul@f2+2,f
  4727  0A4D  3000               	movlw	0
  4728  0A4E  00D3               	movwf	___ftmul@f3_as_product
  4729  0A4F  3000               	movlw	0
  4730  0A50  00D4               	movwf	___ftmul@f3_as_product+1
  4731  0A51  3000               	movlw	0
  4732  0A52  00D5               	movwf	___ftmul@f3_as_product+2
  4733  0A53  3007               	movlw	7
  4734  0A54  00CE               	movwf	??___ftmul
  4735  0A55  084E               	movf	??___ftmul,w
  4736  0A56  00D6               	movwf	___ftmul@cntr
  4737  0A57                     l3090:	
  4738  0A57  1C48               	btfss	___ftmul@f1,0
  4739  0A58  2A5F               	goto	l3094
  4740  0A59  084B               	movf	___ftmul@f2,w
  4741  0A5A  07D3               	addwf	___ftmul@f3_as_product,f
  4742  0A5B  084C               	movf	___ftmul@f2+1,w
  4743  0A5C  3DD4               	addwfc	___ftmul@f3_as_product+1,f
  4744  0A5D  084D               	movf	___ftmul@f2+2,w
  4745  0A5E  3DD5               	addwfc	___ftmul@f3_as_product+2,f
  4746  0A5F                     l3094:	
  4747  0A5F  3001               	movlw	1
  4748  0A60                     u4815:	
  4749  0A60  36CA               	lsrf	___ftmul@f1+2,f
  4750  0A61  0CC9               	rrf	___ftmul@f1+1,f
  4751  0A62  0CC8               	rrf	___ftmul@f1,f
  4752  0A63  0B89               	decfsz	9,f
  4753  0A64  2A60               	goto	u4815
  4754  0A65  3001               	movlw	1
  4755  0A66                     u4825:	
  4756  0A66  35CB               	lslf	___ftmul@f2,f
  4757  0A67  0DCC               	rlf	___ftmul@f2+1,f
  4758  0A68  0DCD               	rlf	___ftmul@f2+2,f
  4759  0A69  0B89               	decfsz	9,f
  4760  0A6A  2A66               	goto	u4825
  4761  0A6B  3001               	movlw	1
  4762  0A6C  02D6               	subwf	___ftmul@cntr,f
  4763  0A6D  1D03               	btfss	3,2
  4764  0A6E  2A57               	goto	l3090
  4765  0A6F  3009               	movlw	9
  4766  0A70  00CE               	movwf	??___ftmul
  4767  0A71  084E               	movf	??___ftmul,w
  4768  0A72  00D6               	movwf	___ftmul@cntr
  4769  0A73                     l3102:	
  4770  0A73  1C48               	btfss	___ftmul@f1,0
  4771  0A74  2A7B               	goto	l3106
  4772  0A75  084B               	movf	___ftmul@f2,w
  4773  0A76  07D3               	addwf	___ftmul@f3_as_product,f
  4774  0A77  084C               	movf	___ftmul@f2+1,w
  4775  0A78  3DD4               	addwfc	___ftmul@f3_as_product+1,f
  4776  0A79  084D               	movf	___ftmul@f2+2,w
  4777  0A7A  3DD5               	addwfc	___ftmul@f3_as_product+2,f
  4778  0A7B                     l3106:	
  4779  0A7B  3001               	movlw	1
  4780  0A7C                     u4855:	
  4781  0A7C  36CA               	lsrf	___ftmul@f1+2,f
  4782  0A7D  0CC9               	rrf	___ftmul@f1+1,f
  4783  0A7E  0CC8               	rrf	___ftmul@f1,f
  4784  0A7F  0B89               	decfsz	9,f
  4785  0A80  2A7C               	goto	u4855
  4786  0A81  3001               	movlw	1
  4787  0A82                     u4865:	
  4788  0A82  36D5               	lsrf	___ftmul@f3_as_product+2,f
  4789  0A83  0CD4               	rrf	___ftmul@f3_as_product+1,f
  4790  0A84  0CD3               	rrf	___ftmul@f3_as_product,f
  4791  0A85  0B89               	decfsz	9,f
  4792  0A86  2A82               	goto	u4865
  4793  0A87  3001               	movlw	1
  4794  0A88  02D6               	subwf	___ftmul@cntr,f
  4795  0A89  1D03               	btfss	3,2
  4796  0A8A  2A73               	goto	l3102
  4797  0A8B  0853               	movf	___ftmul@f3_as_product,w
  4798  0A8C  00B2               	movwf	___ftpack@arg
  4799  0A8D  0854               	movf	___ftmul@f3_as_product+1,w
  4800  0A8E  00B3               	movwf	___ftpack@arg+1
  4801  0A8F  0855               	movf	___ftmul@f3_as_product+2,w
  4802  0A90  00B4               	movwf	___ftpack@arg+2
  4803  0A91  0852               	movf	___ftmul@exp,w
  4804  0A92  00CE               	movwf	??___ftmul
  4805  0A93  084E               	movf	??___ftmul,w
  4806  0A94  00B5               	movwf	___ftpack@exp
  4807  0A95  0857               	movf	___ftmul@sign,w
  4808  0A96  00CF               	movwf	??___ftmul+1
  4809  0A97  084F               	movf	??___ftmul+1,w
  4810  0A98  00B6               	movwf	___ftpack@sign
  4811  0A99  3196  26A0         	fcall	___ftpack
  4812  0A9B  0140               	movlb	0	; select bank0
  4813  0A9C  0832               	movf	?___ftpack,w
  4814  0A9D  00C8               	movwf	?___ftmul
  4815  0A9E  0833               	movf	?___ftpack+1,w
  4816  0A9F  00C9               	movwf	?___ftmul+1
  4817  0AA0  0834               	movf	?___ftpack+2,w
  4818  0AA1  00CA               	movwf	?___ftmul+2
  4819  0AA2  0008               	return
  4820  0AA3                     __end_of___ftmul:	
  4821                           
  4822                           	psect	text7
  4823  1500                     __ptext7:	
  4824 ;; *************** function ___awmod *****************
  4825 ;; Defined at:
  4826 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\awmod.c"
  4827 ;; Parameters:    Size  Location     Type
  4828 ;;  divisor         2   18[BANK0 ] int 
  4829 ;;  dividend        2   20[BANK0 ] int 
  4830 ;; Auto vars:     Size  Location     Type
  4831 ;;  sign            1   24[BANK0 ] unsigned char 
  4832 ;;  counter         1   23[BANK0 ] unsigned char 
  4833 ;; Return value:  Size  Location     Type
  4834 ;;                  2   18[BANK0 ] int 
  4835 ;; Registers used:
  4836 ;;		wreg, status,2, status,0
  4837 ;; Tracked objects:
  4838 ;;		On entry : 0/0
  4839 ;;		On exit  : 0/0
  4840 ;;		Unchanged: 0/0
  4841 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
  4842 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  4843 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  4844 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  4845 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  4846 ;;Total ram usage:        7 bytes
  4847 ;; Hardware stack levels used:    1
  4848 ;; Hardware stack levels required when called:    3
  4849 ;; This function calls:
  4850 ;;		Nothing
  4851 ;; This function is called by:
  4852 ;;		_fround
  4853 ;;		_scale
  4854 ;; This function uses a non-reentrant model
  4855 ;;
  4856                           
  4857                           
  4858                           ;psect for function ___awmod
  4859  1500                     ___awmod:	
  4860                           
  4861                           ;incstack = 0
  4862                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  4863  1500  0140               	movlb	0	; select bank0
  4864  1501  01B8               	clrf	___awmod@sign
  4865  1502  1FB5               	btfss	___awmod@dividend+1,7
  4866  1503  2D0B               	goto	l1944
  4867  1504  09B4               	comf	___awmod@dividend,f
  4868  1505  09B5               	comf	___awmod@dividend+1,f
  4869  1506  0AB4               	incf	___awmod@dividend,f
  4870  1507  1903               	skipnz
  4871  1508  0AB5               	incf	___awmod@dividend+1,f
  4872  1509  01B8               	clrf	___awmod@sign
  4873  150A  0AB8               	incf	___awmod@sign,f
  4874  150B                     l1944:	
  4875  150B  1FB3               	btfss	___awmod@divisor+1,7
  4876  150C  2D12               	goto	l1948
  4877  150D  09B2               	comf	___awmod@divisor,f
  4878  150E  09B3               	comf	___awmod@divisor+1,f
  4879  150F  0AB2               	incf	___awmod@divisor,f
  4880  1510  1903               	skipnz
  4881  1511  0AB3               	incf	___awmod@divisor+1,f
  4882  1512                     l1948:	
  4883  1512  0832               	movf	___awmod@divisor,w
  4884  1513  0433               	iorwf	___awmod@divisor+1,w
  4885  1514  1903               	btfsc	3,2
  4886  1515  2D39               	goto	l1966
  4887  1516  01B7               	clrf	___awmod@counter
  4888  1517  0AB7               	incf	___awmod@counter,f
  4889  1518                     l1956:	
  4890  1518  1BB3               	btfsc	___awmod@divisor+1,7
  4891  1519  2D24               	goto	l1958
  4892  151A  3001               	movlw	1
  4893  151B                     u2505:	
  4894  151B  35B2               	lslf	___awmod@divisor,f
  4895  151C  0DB3               	rlf	___awmod@divisor+1,f
  4896  151D  0B89               	decfsz	9,f
  4897  151E  2D1B               	goto	u2505
  4898  151F  3001               	movlw	1
  4899  1520  00B6               	movwf	??___awmod
  4900  1521  0836               	movf	??___awmod,w
  4901  1522  07B7               	addwf	___awmod@counter,f
  4902  1523  2D18               	goto	l1956
  4903  1524                     l1958:	
  4904  1524  0833               	movf	___awmod@divisor+1,w
  4905  1525  0235               	subwf	___awmod@dividend+1,w
  4906  1526  1D03               	skipz
  4907  1527  2D2A               	goto	u2525
  4908  1528  0832               	movf	___awmod@divisor,w
  4909  1529  0234               	subwf	___awmod@dividend,w
  4910  152A                     u2525:	
  4911  152A  1C03               	skipc
  4912  152B  2D30               	goto	l1962
  4913  152C  0832               	movf	___awmod@divisor,w
  4914  152D  02B4               	subwf	___awmod@dividend,f
  4915  152E  0833               	movf	___awmod@divisor+1,w
  4916  152F  3BB5               	subwfb	___awmod@dividend+1,f
  4917  1530                     l1962:	
  4918  1530  3001               	movlw	1
  4919  1531                     u2535:	
  4920  1531  36B3               	lsrf	___awmod@divisor+1,f
  4921  1532  0CB2               	rrf	___awmod@divisor,f
  4922  1533  0B89               	decfsz	9,f
  4923  1534  2D31               	goto	u2535
  4924  1535  3001               	movlw	1
  4925  1536  02B7               	subwf	___awmod@counter,f
  4926  1537  1D03               	btfss	3,2
  4927  1538  2D24               	goto	l1958
  4928  1539                     l1966:	
  4929  1539  0838               	movf	___awmod@sign,w
  4930  153A  1903               	btfsc	3,2
  4931  153B  2D41               	goto	l1970
  4932  153C  09B4               	comf	___awmod@dividend,f
  4933  153D  09B5               	comf	___awmod@dividend+1,f
  4934  153E  0AB4               	incf	___awmod@dividend,f
  4935  153F  1903               	skipnz
  4936  1540  0AB5               	incf	___awmod@dividend+1,f
  4937  1541                     l1970:	
  4938  1541  0835               	movf	___awmod@dividend+1,w
  4939  1542  00B3               	movwf	?___awmod+1
  4940  1543  0834               	movf	___awmod@dividend,w
  4941  1544  00B2               	movwf	?___awmod
  4942  1545  0008               	return
  4943  1546                     __end_of___awmod:	
  4944                           
  4945                           	psect	text8
  4946  1597                     __ptext8:	
  4947 ;; *************** function ___awdiv *****************
  4948 ;; Defined at:
  4949 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\awdiv.c"
  4950 ;; Parameters:    Size  Location     Type
  4951 ;;  divisor         2   25[BANK0 ] int 
  4952 ;;  dividend        2   27[BANK0 ] int 
  4953 ;; Auto vars:     Size  Location     Type
  4954 ;;  quotient        2   32[BANK0 ] int 
  4955 ;;  sign            1   31[BANK0 ] unsigned char 
  4956 ;;  counter         1   30[BANK0 ] unsigned char 
  4957 ;; Return value:  Size  Location     Type
  4958 ;;                  2   25[BANK0 ] int 
  4959 ;; Registers used:
  4960 ;;		wreg, status,2, status,0
  4961 ;; Tracked objects:
  4962 ;;		On entry : 0/0
  4963 ;;		On exit  : 0/0
  4964 ;;		Unchanged: 0/0
  4965 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
  4966 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  4967 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  4968 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  4969 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  4970 ;;Total ram usage:        9 bytes
  4971 ;; Hardware stack levels used:    1
  4972 ;; Hardware stack levels required when called:    3
  4973 ;; This function calls:
  4974 ;;		Nothing
  4975 ;; This function is called by:
  4976 ;;		_fround
  4977 ;;		_scale
  4978 ;;		_sprintf
  4979 ;; This function uses a non-reentrant model
  4980 ;;
  4981                           
  4982                           
  4983                           ;psect for function ___awdiv
  4984  1597                     ___awdiv:	
  4985                           
  4986                           ;incstack = 0
  4987                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  4988  1597  0140               	movlb	0	; select bank0
  4989  1598  01BF               	clrf	___awdiv@sign
  4990  1599  1FBA               	btfss	___awdiv@divisor+1,7
  4991  159A  2DA2               	goto	l1900
  4992  159B  09B9               	comf	___awdiv@divisor,f
  4993  159C  09BA               	comf	___awdiv@divisor+1,f
  4994  159D  0AB9               	incf	___awdiv@divisor,f
  4995  159E  1903               	skipnz
  4996  159F  0ABA               	incf	___awdiv@divisor+1,f
  4997  15A0  01BF               	clrf	___awdiv@sign
  4998  15A1  0ABF               	incf	___awdiv@sign,f
  4999  15A2                     l1900:	
  5000  15A2  1FBC               	btfss	___awdiv@dividend+1,7
  5001  15A3  2DAD               	goto	l1906
  5002  15A4  09BB               	comf	___awdiv@dividend,f
  5003  15A5  09BC               	comf	___awdiv@dividend+1,f
  5004  15A6  0ABB               	incf	___awdiv@dividend,f
  5005  15A7  1903               	skipnz
  5006  15A8  0ABC               	incf	___awdiv@dividend+1,f
  5007  15A9  3001               	movlw	1
  5008  15AA  00BD               	movwf	??___awdiv
  5009  15AB  083D               	movf	??___awdiv,w
  5010  15AC  06BF               	xorwf	___awdiv@sign,f
  5011  15AD                     l1906:	
  5012  15AD  01C0               	clrf	___awdiv@quotient
  5013  15AE  01C1               	clrf	___awdiv@quotient+1
  5014  15AF  0839               	movf	___awdiv@divisor,w
  5015  15B0  043A               	iorwf	___awdiv@divisor+1,w
  5016  15B1  1903               	btfsc	3,2
  5017  15B2  2DDC               	goto	l1928
  5018  15B3  01BE               	clrf	___awdiv@counter
  5019  15B4  0ABE               	incf	___awdiv@counter,f
  5020  15B5                     l1916:	
  5021  15B5  1BBA               	btfsc	___awdiv@divisor+1,7
  5022  15B6  2DC1               	goto	l1918
  5023  15B7  3001               	movlw	1
  5024  15B8                     u2405:	
  5025  15B8  35B9               	lslf	___awdiv@divisor,f
  5026  15B9  0DBA               	rlf	___awdiv@divisor+1,f
  5027  15BA  0B89               	decfsz	9,f
  5028  15BB  2DB8               	goto	u2405
  5029  15BC  3001               	movlw	1
  5030  15BD  00BD               	movwf	??___awdiv
  5031  15BE  083D               	movf	??___awdiv,w
  5032  15BF  07BE               	addwf	___awdiv@counter,f
  5033  15C0  2DB5               	goto	l1916
  5034  15C1                     l1918:	
  5035  15C1  3001               	movlw	1
  5036  15C2                     u2425:	
  5037  15C2  35C0               	lslf	___awdiv@quotient,f
  5038  15C3  0DC1               	rlf	___awdiv@quotient+1,f
  5039  15C4  0B89               	decfsz	9,f
  5040  15C5  2DC2               	goto	u2425
  5041  15C6  083A               	movf	___awdiv@divisor+1,w
  5042  15C7  023C               	subwf	___awdiv@dividend+1,w
  5043  15C8  1D03               	skipz
  5044  15C9  2DCC               	goto	u2435
  5045  15CA  0839               	movf	___awdiv@divisor,w
  5046  15CB  023B               	subwf	___awdiv@dividend,w
  5047  15CC                     u2435:	
  5048  15CC  1C03               	skipc
  5049  15CD  2DD3               	goto	l1924
  5050  15CE  0839               	movf	___awdiv@divisor,w
  5051  15CF  02BB               	subwf	___awdiv@dividend,f
  5052  15D0  083A               	movf	___awdiv@divisor+1,w
  5053  15D1  3BBC               	subwfb	___awdiv@dividend+1,f
  5054  15D2  1440               	bsf	___awdiv@quotient,0
  5055  15D3                     l1924:	
  5056  15D3  3001               	movlw	1
  5057  15D4                     u2445:	
  5058  15D4  36BA               	lsrf	___awdiv@divisor+1,f
  5059  15D5  0CB9               	rrf	___awdiv@divisor,f
  5060  15D6  0B89               	decfsz	9,f
  5061  15D7  2DD4               	goto	u2445
  5062  15D8  3001               	movlw	1
  5063  15D9  02BE               	subwf	___awdiv@counter,f
  5064  15DA  1D03               	btfss	3,2
  5065  15DB  2DC1               	goto	l1918
  5066  15DC                     l1928:	
  5067  15DC  083F               	movf	___awdiv@sign,w
  5068  15DD  1903               	btfsc	3,2
  5069  15DE  2DE4               	goto	l1932
  5070  15DF  09C0               	comf	___awdiv@quotient,f
  5071  15E0  09C1               	comf	___awdiv@quotient+1,f
  5072  15E1  0AC0               	incf	___awdiv@quotient,f
  5073  15E2  1903               	skipnz
  5074  15E3  0AC1               	incf	___awdiv@quotient+1,f
  5075  15E4                     l1932:	
  5076  15E4  0841               	movf	___awdiv@quotient+1,w
  5077  15E5  00BA               	movwf	?___awdiv+1
  5078  15E6  0840               	movf	___awdiv@quotient,w
  5079  15E7  00B9               	movwf	?___awdiv
  5080  15E8  0008               	return
  5081  15E9                     __end_of___awdiv:	
  5082                           
  5083                           	psect	text9
  5084  0AA3                     __ptext9:	
  5085 ;; *************** function __tdiv_to_l_ *****************
  5086 ;; Defined at:
  5087 ;;		line 60 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\ftdivl.c"
  5088 ;; Parameters:    Size  Location     Type
  5089 ;;  f1              3   18[BANK0 ] float 
  5090 ;;  f2              3   21[BANK0 ] float 
  5091 ;; Auto vars:     Size  Location     Type
  5092 ;;  quot            4   28[BANK0 ] unsigned long 
  5093 ;;  exp1            1   33[BANK0 ] unsigned char 
  5094 ;;  cntr            1   32[BANK0 ] unsigned char 
  5095 ;; Return value:  Size  Location     Type
  5096 ;;                  4   18[BANK0 ] unsigned long 
  5097 ;; Registers used:
  5098 ;;		wreg, status,2, status,0
  5099 ;; Tracked objects:
  5100 ;;		On entry : 0/0
  5101 ;;		On exit  : 0/0
  5102 ;;		Unchanged: 0/0
  5103 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
  5104 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  5105 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  5106 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  5107 ;;      Totals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  5108 ;;Total ram usage:       16 bytes
  5109 ;; Hardware stack levels used:    1
  5110 ;; Hardware stack levels required when called:    3
  5111 ;; This function calls:
  5112 ;;		Nothing
  5113 ;; This function is called by:
  5114 ;;		_sprintf
  5115 ;; This function uses a non-reentrant model
  5116 ;;
  5117                           
  5118                           
  5119                           ;psect for function __tdiv_to_l_
  5120  0AA3                     __tdiv_to_l_:	
  5121                           
  5122                           ;incstack = 0
  5123                           ; Regs used in __tdiv_to_l_: [wreg+status,2+status,0]
  5124  0AA3  0140               	movlb	0	; select bank0
  5125  0AA4  0832               	movf	__tdiv_to_l_@f1,w
  5126  0AA5  00B8               	movwf	??__tdiv_to_l_
  5127  0AA6  0833               	movf	__tdiv_to_l_@f1+1,w
  5128  0AA7  00B9               	movwf	??__tdiv_to_l_+1
  5129  0AA8  0834               	movf	__tdiv_to_l_@f1+2,w
  5130  0AA9  00BA               	movwf	??__tdiv_to_l_+2
  5131  0AAA  1003               	clrc
  5132  0AAB  0D39               	rlf	??__tdiv_to_l_+1,w
  5133  0AAC  0D3A               	rlf	??__tdiv_to_l_+2,w
  5134  0AAD  00BB               	movwf	??__tdiv_to_l_+3
  5135  0AAE  083B               	movf	??__tdiv_to_l_+3,w
  5136  0AAF  00C1               	movwf	__tdiv_to_l_@exp1
  5137  0AB0  0841               	movf	__tdiv_to_l_@exp1,w
  5138  0AB1  1D03               	btfss	3,2
  5139  0AB2  2ABC               	goto	l2220
  5140  0AB3  3000               	movlw	0
  5141  0AB4  00B5               	movwf	?__tdiv_to_l_+3
  5142  0AB5  3000               	movlw	0
  5143  0AB6  00B4               	movwf	?__tdiv_to_l_+2
  5144  0AB7  3000               	movlw	0
  5145  0AB8  00B3               	movwf	?__tdiv_to_l_+1
  5146  0AB9  3000               	movlw	0
  5147  0ABA  00B2               	movwf	?__tdiv_to_l_
  5148  0ABB  0008               	return
  5149  0ABC                     l2220:	
  5150  0ABC  0835               	movf	__tdiv_to_l_@f2,w
  5151  0ABD  00B8               	movwf	??__tdiv_to_l_
  5152  0ABE  0836               	movf	__tdiv_to_l_@f2+1,w
  5153  0ABF  00B9               	movwf	??__tdiv_to_l_+1
  5154  0AC0  0837               	movf	__tdiv_to_l_@f2+2,w
  5155  0AC1  00BA               	movwf	??__tdiv_to_l_+2
  5156  0AC2  1003               	clrc
  5157  0AC3  0D39               	rlf	??__tdiv_to_l_+1,w
  5158  0AC4  0D3A               	rlf	??__tdiv_to_l_+2,w
  5159  0AC5  00BB               	movwf	??__tdiv_to_l_+3
  5160  0AC6  083B               	movf	??__tdiv_to_l_+3,w
  5161  0AC7  00C0               	movwf	__tdiv_to_l_@cntr
  5162  0AC8  0840               	movf	__tdiv_to_l_@cntr,w
  5163  0AC9  1D03               	btfss	3,2
  5164  0ACA  2AD4               	goto	l524
  5165  0ACB  3000               	movlw	0
  5166  0ACC  00B5               	movwf	?__tdiv_to_l_+3
  5167  0ACD  3000               	movlw	0
  5168  0ACE  00B4               	movwf	?__tdiv_to_l_+2
  5169  0ACF  3000               	movlw	0
  5170  0AD0  00B3               	movwf	?__tdiv_to_l_+1
  5171  0AD1  3000               	movlw	0
  5172  0AD2  00B2               	movwf	?__tdiv_to_l_
  5173  0AD3  0008               	return
  5174  0AD4                     l524:	
  5175  0AD4  17B3               	bsf	__tdiv_to_l_@f1+1,7
  5176  0AD5  30FF               	movlw	255
  5177  0AD6  05B2               	andwf	__tdiv_to_l_@f1,f
  5178  0AD7  30FF               	movlw	255
  5179  0AD8  05B3               	andwf	__tdiv_to_l_@f1+1,f
  5180  0AD9  3000               	movlw	0
  5181  0ADA  05B4               	andwf	__tdiv_to_l_@f1+2,f
  5182  0ADB  17B6               	bsf	__tdiv_to_l_@f2+1,7
  5183  0ADC  30FF               	movlw	255
  5184  0ADD  05B5               	andwf	__tdiv_to_l_@f2,f
  5185  0ADE  30FF               	movlw	255
  5186  0ADF  05B6               	andwf	__tdiv_to_l_@f2+1,f
  5187  0AE0  3000               	movlw	0
  5188  0AE1  05B7               	andwf	__tdiv_to_l_@f2+2,f
  5189  0AE2  3000               	movlw	0
  5190  0AE3  00BF               	movwf	__tdiv_to_l_@quot+3
  5191  0AE4  3000               	movlw	0
  5192  0AE5  00BE               	movwf	__tdiv_to_l_@quot+2
  5193  0AE6  3000               	movlw	0
  5194  0AE7  00BD               	movwf	__tdiv_to_l_@quot+1
  5195  0AE8  3000               	movlw	0
  5196  0AE9  00BC               	movwf	__tdiv_to_l_@quot
  5197  0AEA  307F               	movlw	127
  5198  0AEB  02C1               	subwf	__tdiv_to_l_@exp1,f
  5199  0AEC  3098               	movlw	152
  5200  0AED  0740               	addwf	__tdiv_to_l_@cntr,w
  5201  0AEE  00B8               	movwf	??__tdiv_to_l_
  5202  0AEF  0838               	movf	??__tdiv_to_l_,w
  5203  0AF0  02C1               	subwf	__tdiv_to_l_@exp1,f
  5204  0AF1  3018               	movlw	24
  5205  0AF2  00B8               	movwf	??__tdiv_to_l_
  5206  0AF3  0838               	movf	??__tdiv_to_l_,w
  5207  0AF4  00C0               	movwf	__tdiv_to_l_@cntr
  5208  0AF5                     l2234:	
  5209  0AF5  3001               	movlw	1
  5210  0AF6                     u3145:	
  5211  0AF6  35BC               	lslf	__tdiv_to_l_@quot,f
  5212  0AF7  0DBD               	rlf	__tdiv_to_l_@quot+1,f
  5213  0AF8  0DBE               	rlf	__tdiv_to_l_@quot+2,f
  5214  0AF9  0DBF               	rlf	__tdiv_to_l_@quot+3,f
  5215  0AFA  0B89               	decfsz	9,f
  5216  0AFB  2AF6               	goto	u3145
  5217  0AFC  0837               	movf	__tdiv_to_l_@f2+2,w
  5218  0AFD  0234               	subwf	__tdiv_to_l_@f1+2,w
  5219  0AFE  1D03               	skipz
  5220  0AFF  2B06               	goto	u3155
  5221  0B00  0836               	movf	__tdiv_to_l_@f2+1,w
  5222  0B01  0233               	subwf	__tdiv_to_l_@f1+1,w
  5223  0B02  1D03               	skipz
  5224  0B03  2B06               	goto	u3155
  5225  0B04  0835               	movf	__tdiv_to_l_@f2,w
  5226  0B05  0232               	subwf	__tdiv_to_l_@f1,w
  5227  0B06                     u3155:	
  5228  0B06  1C03               	skipc
  5229  0B07  2B0F               	goto	l2242
  5230  0B08  0835               	movf	__tdiv_to_l_@f2,w
  5231  0B09  02B2               	subwf	__tdiv_to_l_@f1,f
  5232  0B0A  0836               	movf	__tdiv_to_l_@f2+1,w
  5233  0B0B  3BB3               	subwfb	__tdiv_to_l_@f1+1,f
  5234  0B0C  0837               	movf	__tdiv_to_l_@f2+2,w
  5235  0B0D  3BB4               	subwfb	__tdiv_to_l_@f1+2,f
  5236  0B0E  143C               	bsf	__tdiv_to_l_@quot,0
  5237  0B0F                     l2242:	
  5238  0B0F  3001               	movlw	1
  5239  0B10                     u3165:	
  5240  0B10  35B2               	lslf	__tdiv_to_l_@f1,f
  5241  0B11  0DB3               	rlf	__tdiv_to_l_@f1+1,f
  5242  0B12  0DB4               	rlf	__tdiv_to_l_@f1+2,f
  5243  0B13  0B89               	decfsz	9,f
  5244  0B14  2B10               	goto	u3165
  5245  0B15  3001               	movlw	1
  5246  0B16  02C0               	subwf	__tdiv_to_l_@cntr,f
  5247  0B17  1D03               	btfss	3,2
  5248  0B18  2AF5               	goto	l2234
  5249  0B19  1FC1               	btfss	__tdiv_to_l_@exp1,7
  5250  0B1A  2B37               	goto	l2254
  5251  0B1B  0841               	movf	__tdiv_to_l_@exp1,w
  5252  0B1C  3A80               	xorlw	128
  5253  0B1D  3E97               	addlw	151
  5254  0B1E  1803               	skipnc
  5255  0B1F  2B29               	goto	l2252
  5256  0B20  3000               	movlw	0
  5257  0B21  00B5               	movwf	?__tdiv_to_l_+3
  5258  0B22  3000               	movlw	0
  5259  0B23  00B4               	movwf	?__tdiv_to_l_+2
  5260  0B24  3000               	movlw	0
  5261  0B25  00B3               	movwf	?__tdiv_to_l_+1
  5262  0B26  3000               	movlw	0
  5263  0B27  00B2               	movwf	?__tdiv_to_l_
  5264  0B28  0008               	return
  5265  0B29                     l2252:	
  5266  0B29  3001               	movlw	1
  5267  0B2A                     u3205:	
  5268  0B2A  36BF               	lsrf	__tdiv_to_l_@quot+3,f
  5269  0B2B  0CBE               	rrf	__tdiv_to_l_@quot+2,f
  5270  0B2C  0CBD               	rrf	__tdiv_to_l_@quot+1,f
  5271  0B2D  0CBC               	rrf	__tdiv_to_l_@quot,f
  5272  0B2E  0B89               	decfsz	9,f
  5273  0B2F  2B2A               	goto	u3205
  5274  0B30  3001               	movlw	1
  5275  0B31  00B8               	movwf	??__tdiv_to_l_
  5276  0B32  0838               	movf	??__tdiv_to_l_,w
  5277  0B33  07C1               	addwf	__tdiv_to_l_@exp1,f
  5278  0B34  1903               	btfsc	3,2
  5279  0B35  2B50               	goto	l2262
  5280  0B36  2B29               	goto	l2252
  5281  0B37                     l2254:	
  5282  0B37  3018               	movlw	24
  5283  0B38  0241               	subwf	__tdiv_to_l_@exp1,w
  5284  0B39  1C03               	skipc
  5285  0B3A  2B4D               	goto	l534
  5286  0B3B  3000               	movlw	0
  5287  0B3C  00B5               	movwf	?__tdiv_to_l_+3
  5288  0B3D  3000               	movlw	0
  5289  0B3E  00B4               	movwf	?__tdiv_to_l_+2
  5290  0B3F  3000               	movlw	0
  5291  0B40  00B3               	movwf	?__tdiv_to_l_+1
  5292  0B41  3000               	movlw	0
  5293  0B42  00B2               	movwf	?__tdiv_to_l_
  5294  0B43  0008               	return
  5295  0B44                     l2260:	
  5296  0B44  3001               	movlw	1
  5297  0B45                     u3235:	
  5298  0B45  35BC               	lslf	__tdiv_to_l_@quot,f
  5299  0B46  0DBD               	rlf	__tdiv_to_l_@quot+1,f
  5300  0B47  0DBE               	rlf	__tdiv_to_l_@quot+2,f
  5301  0B48  0DBF               	rlf	__tdiv_to_l_@quot+3,f
  5302  0B49  0B89               	decfsz	9,f
  5303  0B4A  2B45               	goto	u3235
  5304  0B4B  3001               	movlw	1
  5305  0B4C  02C1               	subwf	__tdiv_to_l_@exp1,f
  5306  0B4D                     l534:	
  5307  0B4D  0841               	movf	__tdiv_to_l_@exp1,w
  5308  0B4E  1D03               	btfss	3,2
  5309  0B4F  2B44               	goto	l2260
  5310  0B50                     l2262:	
  5311  0B50  083F               	movf	__tdiv_to_l_@quot+3,w
  5312  0B51  00B5               	movwf	?__tdiv_to_l_+3
  5313  0B52  083E               	movf	__tdiv_to_l_@quot+2,w
  5314  0B53  00B4               	movwf	?__tdiv_to_l_+2
  5315  0B54  083D               	movf	__tdiv_to_l_@quot+1,w
  5316  0B55  00B3               	movwf	?__tdiv_to_l_+1
  5317  0B56  083C               	movf	__tdiv_to_l_@quot,w
  5318  0B57  00B2               	movwf	?__tdiv_to_l_
  5319  0B58  0008               	return
  5320  0B59                     __end_of__tdiv_to_l_:	
  5321                           
  5322                           	psect	text10
  5323  0C5D                     __ptext10:	
  5324 ;; *************** function __div_to_l_ *****************
  5325 ;; Defined at:
  5326 ;;		line 60 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\fldivl.c"
  5327 ;; Parameters:    Size  Location     Type
  5328 ;;  f1              3   18[BANK0 ] unsigned long 
  5329 ;;  f2              3   21[BANK0 ] unsigned long 
  5330 ;; Auto vars:     Size  Location     Type
  5331 ;;  quot            4   32[BANK0 ] unsigned long 
  5332 ;;  exp1            1   37[BANK0 ] unsigned char 
  5333 ;;  cntr            1   36[BANK0 ] unsigned char 
  5334 ;; Return value:  Size  Location     Type
  5335 ;;                  4   18[BANK0 ] unsigned long 
  5336 ;; Registers used:
  5337 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  5338 ;; Tracked objects:
  5339 ;;		On entry : 0/0
  5340 ;;		On exit  : 0/0
  5341 ;;		Unchanged: 0/0
  5342 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
  5343 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  5344 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  5345 ;;      Temps:          0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  5346 ;;      Totals:         0      20       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  5347 ;;Total ram usage:       20 bytes
  5348 ;; Hardware stack levels used:    1
  5349 ;; Hardware stack levels required when called:    3
  5350 ;; This function calls:
  5351 ;;		Nothing
  5352 ;; This function is called by:
  5353 ;;		_sprintf
  5354 ;; This function uses a non-reentrant model
  5355 ;;
  5356                           
  5357                           
  5358                           ;psect for function __div_to_l_
  5359  0C5D                     __div_to_l_:	
  5360                           
  5361                           ;incstack = 0
  5362                           ; Regs used in __div_to_l_: [wreg+fsr1l+fsr1h+status,2+status,0]
  5363  0C5D  3032               	movlw	low (__div_to_l_@f1| 0)
  5364  0C5E  0086               	movwf	6
  5365  0C5F  0187               	clrf	7
  5366  0C60  3F40               	moviw [0]fsr1
  5367  0C61  0140               	movlb	0	; select bank0
  5368  0C62  00B8               	movwf	??__div_to_l_
  5369  0C63  3F41               	moviw [1]fsr1
  5370  0C64  00B9               	movwf	??__div_to_l_+1
  5371  0C65  3F42               	moviw [2]fsr1
  5372  0C66  00BA               	movwf	??__div_to_l_+2
  5373  0C67  3F43               	moviw [3]fsr1
  5374  0C68  00BB               	movwf	??__div_to_l_+3
  5375  0C69  1003               	clrc
  5376  0C6A  0D3A               	rlf	??__div_to_l_+2,w
  5377  0C6B  0D3B               	rlf	??__div_to_l_+3,w
  5378  0C6C  00BC               	movwf	??__div_to_l_+4
  5379  0C6D  083C               	movf	??__div_to_l_+4,w
  5380  0C6E  00C5               	movwf	__div_to_l_@exp1
  5381  0C6F  0845               	movf	__div_to_l_@exp1,w
  5382  0C70  1D03               	btfss	3,2
  5383  0C71  2C7B               	goto	l2272
  5384  0C72  3000               	movlw	0
  5385  0C73  00B5               	movwf	?__div_to_l_+3
  5386  0C74  3000               	movlw	0
  5387  0C75  00B4               	movwf	?__div_to_l_+2
  5388  0C76  3000               	movlw	0
  5389  0C77  00B3               	movwf	?__div_to_l_+1
  5390  0C78  3000               	movlw	0
  5391  0C79  00B2               	movwf	?__div_to_l_
  5392  0C7A  0008               	return
  5393  0C7B                     l2272:	
  5394  0C7B  3035               	movlw	low (__div_to_l_@f2| 0)
  5395  0C7C  0086               	movwf	6
  5396  0C7D  0187               	clrf	7
  5397  0C7E  3F40               	moviw [0]fsr1
  5398  0C7F  00B8               	movwf	??__div_to_l_
  5399  0C80  3F41               	moviw [1]fsr1
  5400  0C81  00B9               	movwf	??__div_to_l_+1
  5401  0C82  3F42               	moviw [2]fsr1
  5402  0C83  00BA               	movwf	??__div_to_l_+2
  5403  0C84  3F43               	moviw [3]fsr1
  5404  0C85  00BB               	movwf	??__div_to_l_+3
  5405  0C86  1003               	clrc
  5406  0C87  0D3A               	rlf	??__div_to_l_+2,w
  5407  0C88  0D3B               	rlf	??__div_to_l_+3,w
  5408  0C89  00BC               	movwf	??__div_to_l_+4
  5409  0C8A  083C               	movf	??__div_to_l_+4,w
  5410  0C8B  00C4               	movwf	__div_to_l_@cntr
  5411  0C8C  0844               	movf	__div_to_l_@cntr,w
  5412  0C8D  1D03               	btfss	3,2
  5413  0C8E  2C98               	goto	l2278
  5414  0C8F  3000               	movlw	0
  5415  0C90  00B5               	movwf	?__div_to_l_+3
  5416  0C91  3000               	movlw	0
  5417  0C92  00B4               	movwf	?__div_to_l_+2
  5418  0C93  3000               	movlw	0
  5419  0C94  00B3               	movwf	?__div_to_l_+1
  5420  0C95  3000               	movlw	0
  5421  0C96  00B2               	movwf	?__div_to_l_
  5422  0C97  0008               	return
  5423  0C98                     l2278:	
  5424  0C98  3032               	movlw	low (__div_to_l_@f1| 0)
  5425  0C99  0086               	movwf	6
  5426  0C9A  0187               	clrf	7
  5427  0C9B  3000               	movlw	0
  5428  0C9C  0481               	iorwf	1,f
  5429  0C9D  3141               	addfsr 1,1
  5430  0C9E  3000               	movlw	0
  5431  0C9F  0481               	iorwf	1,f
  5432  0CA0  3141               	addfsr 1,1
  5433  0CA1  3080               	movlw	128
  5434  0CA2  0481               	iorwf	1,f
  5435  0CA3  3141               	addfsr 1,1
  5436  0CA4  3000               	movlw	0
  5437  0CA5  0481               	iorwf	1,f
  5438  0CA6  3032               	movlw	low (__div_to_l_@f1| 0)
  5439  0CA7  0086               	movwf	6
  5440  0CA8  0187               	clrf	7
  5441  0CA9  30FF               	movlw	255
  5442  0CAA  0581               	andwf	1,f
  5443  0CAB  3141               	addfsr 1,1
  5444  0CAC  30FF               	movlw	255
  5445  0CAD  0581               	andwf	1,f
  5446  0CAE  3141               	addfsr 1,1
  5447  0CAF  30FF               	movlw	255
  5448  0CB0  0581               	andwf	1,f
  5449  0CB1  3141               	addfsr 1,1
  5450  0CB2  3000               	movlw	0
  5451  0CB3  0581               	andwf	1,f
  5452  0CB4  3035               	movlw	low (__div_to_l_@f2| 0)
  5453  0CB5  0086               	movwf	6
  5454  0CB6  0187               	clrf	7
  5455  0CB7  3000               	movlw	0
  5456  0CB8  0481               	iorwf	1,f
  5457  0CB9  3141               	addfsr 1,1
  5458  0CBA  3000               	movlw	0
  5459  0CBB  0481               	iorwf	1,f
  5460  0CBC  3141               	addfsr 1,1
  5461  0CBD  3080               	movlw	128
  5462  0CBE  0481               	iorwf	1,f
  5463  0CBF  3141               	addfsr 1,1
  5464  0CC0  3000               	movlw	0
  5465  0CC1  0481               	iorwf	1,f
  5466  0CC2  3035               	movlw	low (__div_to_l_@f2| 0)
  5467  0CC3  0086               	movwf	6
  5468  0CC4  0187               	clrf	7
  5469  0CC5  30FF               	movlw	255
  5470  0CC6  0581               	andwf	1,f
  5471  0CC7  3141               	addfsr 1,1
  5472  0CC8  30FF               	movlw	255
  5473  0CC9  0581               	andwf	1,f
  5474  0CCA  3141               	addfsr 1,1
  5475  0CCB  30FF               	movlw	255
  5476  0CCC  0581               	andwf	1,f
  5477  0CCD  3141               	addfsr 1,1
  5478  0CCE  3000               	movlw	0
  5479  0CCF  0581               	andwf	1,f
  5480  0CD0  3000               	movlw	0
  5481  0CD1  00C3               	movwf	__div_to_l_@quot+3
  5482  0CD2  3000               	movlw	0
  5483  0CD3  00C2               	movwf	__div_to_l_@quot+2
  5484  0CD4  3000               	movlw	0
  5485  0CD5  00C1               	movwf	__div_to_l_@quot+1
  5486  0CD6  3000               	movlw	0
  5487  0CD7  00C0               	movwf	__div_to_l_@quot
  5488  0CD8  307F               	movlw	127
  5489  0CD9  02C5               	subwf	__div_to_l_@exp1,f
  5490  0CDA  30A0               	movlw	160
  5491  0CDB  0744               	addwf	__div_to_l_@cntr,w
  5492  0CDC  00B8               	movwf	??__div_to_l_
  5493  0CDD  0838               	movf	??__div_to_l_,w
  5494  0CDE  02C5               	subwf	__div_to_l_@exp1,f
  5495  0CDF  3020               	movlw	32
  5496  0CE0  00B8               	movwf	??__div_to_l_
  5497  0CE1  0838               	movf	??__div_to_l_,w
  5498  0CE2  00C4               	movwf	__div_to_l_@cntr
  5499  0CE3                     l2288:	
  5500  0CE3  3001               	movlw	1
  5501  0CE4                     u3275:	
  5502  0CE4  35C0               	lslf	__div_to_l_@quot,f
  5503  0CE5  0DC1               	rlf	__div_to_l_@quot+1,f
  5504  0CE6  0DC2               	rlf	__div_to_l_@quot+2,f
  5505  0CE7  0DC3               	rlf	__div_to_l_@quot+3,f
  5506  0CE8  0B89               	decfsz	9,f
  5507  0CE9  2CE4               	goto	u3275
  5508  0CEA  3035               	movlw	low (__div_to_l_@f2| 0)
  5509  0CEB  0086               	movwf	6
  5510  0CEC  0187               	clrf	7
  5511  0CED  3F40               	moviw [0]fsr1
  5512  0CEE  00B8               	movwf	??__div_to_l_
  5513  0CEF  3F41               	moviw [1]fsr1
  5514  0CF0  00B9               	movwf	??__div_to_l_+1
  5515  0CF1  3F42               	moviw [2]fsr1
  5516  0CF2  00BA               	movwf	??__div_to_l_+2
  5517  0CF3  3F43               	moviw [3]fsr1
  5518  0CF4  00BB               	movwf	??__div_to_l_+3
  5519  0CF5  3032               	movlw	low (__div_to_l_@f1| 0)
  5520  0CF6  0086               	movwf	6
  5521  0CF7  0187               	clrf	7
  5522  0CF8  3F40               	moviw [0]fsr1
  5523  0CF9  00BC               	movwf	??__div_to_l_+4
  5524  0CFA  3F41               	moviw [1]fsr1
  5525  0CFB  00BD               	movwf	??__div_to_l_+5
  5526  0CFC  3F42               	moviw [2]fsr1
  5527  0CFD  00BE               	movwf	??__div_to_l_+6
  5528  0CFE  3F43               	moviw [3]fsr1
  5529  0CFF  00BF               	movwf	??__div_to_l_+7
  5530  0D00  083B               	movf	??__div_to_l_+3,w
  5531  0D01  023F               	subwf	??__div_to_l_+7,w
  5532  0D02  1D03               	skipz
  5533  0D03  2D0E               	goto	u3285
  5534  0D04  083A               	movf	??__div_to_l_+2,w
  5535  0D05  023E               	subwf	??__div_to_l_+6,w
  5536  0D06  1D03               	skipz
  5537  0D07  2D0E               	goto	u3285
  5538  0D08  0839               	movf	??__div_to_l_+1,w
  5539  0D09  023D               	subwf	??__div_to_l_+5,w
  5540  0D0A  1D03               	skipz
  5541  0D0B  2D0E               	goto	u3285
  5542  0D0C  0838               	movf	??__div_to_l_,w
  5543  0D0D  023C               	subwf	??__div_to_l_+4,w
  5544  0D0E                     u3285:	
  5545  0D0E  1C03               	skipc
  5546  0D0F  2D2B               	goto	l2296
  5547  0D10  3035               	movlw	low (__div_to_l_@f2| 0)
  5548  0D11  0086               	movwf	6
  5549  0D12  0187               	clrf	7
  5550  0D13  3F40               	moviw [0]fsr1
  5551  0D14  00B8               	movwf	??__div_to_l_
  5552  0D15  3F41               	moviw [1]fsr1
  5553  0D16  00B9               	movwf	??__div_to_l_+1
  5554  0D17  3F42               	moviw [2]fsr1
  5555  0D18  00BA               	movwf	??__div_to_l_+2
  5556  0D19  3F43               	moviw [3]fsr1
  5557  0D1A  00BB               	movwf	??__div_to_l_+3
  5558  0D1B  3032               	movlw	low (__div_to_l_@f1| 0)
  5559  0D1C  0086               	movwf	6
  5560  0D1D  0187               	clrf	7
  5561  0D1E  0838               	movf	??__div_to_l_,w
  5562  0D1F  0281               	subwf	1,f
  5563  0D20  3141               	addfsr 1,1
  5564  0D21  0839               	movf	??__div_to_l_+1,w
  5565  0D22  3B81               	subwfb	1,f
  5566  0D23  3141               	addfsr 1,1
  5567  0D24  083A               	movf	??__div_to_l_+2,w
  5568  0D25  3B81               	subwfb	1,f
  5569  0D26  3141               	addfsr 1,1
  5570  0D27  083B               	movf	??__div_to_l_+3,w
  5571  0D28  3B81               	subwfb	1,f
  5572  0D29  317D               	addfsr 1,-3
  5573  0D2A  1440               	bsf	__div_to_l_@quot,0
  5574  0D2B                     l2296:	
  5575  0D2B  3032               	movlw	low (__div_to_l_@f1| 0)
  5576  0D2C  0086               	movwf	6
  5577  0D2D  0187               	clrf	7
  5578  0D2E  3581               	lslf	1,f
  5579  0D2F  3141               	addfsr 1,1
  5580  0D30  0D81               	rlf	1,f
  5581  0D31  3141               	addfsr 1,1
  5582  0D32  0D81               	rlf	1,f
  5583  0D33  3141               	addfsr 1,1
  5584  0D34  0D81               	rlf	1,f
  5585  0D35  317D               	addfsr 1,-3
  5586  0D36  3001               	movlw	1
  5587  0D37  02C4               	subwf	__div_to_l_@cntr,f
  5588  0D38  1D03               	btfss	3,2
  5589  0D39  2CE3               	goto	l2288
  5590  0D3A  1FC5               	btfss	__div_to_l_@exp1,7
  5591  0D3B  2D58               	goto	l2308
  5592  0D3C  0845               	movf	__div_to_l_@exp1,w
  5593  0D3D  3A80               	xorlw	128
  5594  0D3E  3E9F               	addlw	159
  5595  0D3F  1803               	skipnc
  5596  0D40  2D4A               	goto	l2306
  5597  0D41  3000               	movlw	0
  5598  0D42  00B5               	movwf	?__div_to_l_+3
  5599  0D43  3000               	movlw	0
  5600  0D44  00B4               	movwf	?__div_to_l_+2
  5601  0D45  3000               	movlw	0
  5602  0D46  00B3               	movwf	?__div_to_l_+1
  5603  0D47  3000               	movlw	0
  5604  0D48  00B2               	movwf	?__div_to_l_
  5605  0D49  0008               	return
  5606  0D4A                     l2306:	
  5607  0D4A  3001               	movlw	1
  5608  0D4B                     u3325:	
  5609  0D4B  36C3               	lsrf	__div_to_l_@quot+3,f
  5610  0D4C  0CC2               	rrf	__div_to_l_@quot+2,f
  5611  0D4D  0CC1               	rrf	__div_to_l_@quot+1,f
  5612  0D4E  0CC0               	rrf	__div_to_l_@quot,f
  5613  0D4F  0B89               	decfsz	9,f
  5614  0D50  2D4B               	goto	u3325
  5615  0D51  3001               	movlw	1
  5616  0D52  00B8               	movwf	??__div_to_l_
  5617  0D53  0838               	movf	??__div_to_l_,w
  5618  0D54  07C5               	addwf	__div_to_l_@exp1,f
  5619  0D55  1903               	btfsc	3,2
  5620  0D56  2D71               	goto	l2316
  5621  0D57  2D4A               	goto	l2306
  5622  0D58                     l2308:	
  5623  0D58  3020               	movlw	32
  5624  0D59  0245               	subwf	__div_to_l_@exp1,w
  5625  0D5A  1C03               	skipc
  5626  0D5B  2D6E               	goto	l455
  5627  0D5C  3000               	movlw	0
  5628  0D5D  00B5               	movwf	?__div_to_l_+3
  5629  0D5E  3000               	movlw	0
  5630  0D5F  00B4               	movwf	?__div_to_l_+2
  5631  0D60  3000               	movlw	0
  5632  0D61  00B3               	movwf	?__div_to_l_+1
  5633  0D62  3000               	movlw	0
  5634  0D63  00B2               	movwf	?__div_to_l_
  5635  0D64  0008               	return
  5636  0D65                     l2314:	
  5637  0D65  3001               	movlw	1
  5638  0D66                     u3355:	
  5639  0D66  35C0               	lslf	__div_to_l_@quot,f
  5640  0D67  0DC1               	rlf	__div_to_l_@quot+1,f
  5641  0D68  0DC2               	rlf	__div_to_l_@quot+2,f
  5642  0D69  0DC3               	rlf	__div_to_l_@quot+3,f
  5643  0D6A  0B89               	decfsz	9,f
  5644  0D6B  2D66               	goto	u3355
  5645  0D6C  3001               	movlw	1
  5646  0D6D  02C5               	subwf	__div_to_l_@exp1,f
  5647  0D6E                     l455:	
  5648  0D6E  0845               	movf	__div_to_l_@exp1,w
  5649  0D6F  1D03               	btfss	3,2
  5650  0D70  2D65               	goto	l2314
  5651  0D71                     l2316:	
  5652  0D71  0843               	movf	__div_to_l_@quot+3,w
  5653  0D72  00B5               	movwf	?__div_to_l_+3
  5654  0D73  0842               	movf	__div_to_l_@quot+2,w
  5655  0D74  00B4               	movwf	?__div_to_l_+2
  5656  0D75  0841               	movf	__div_to_l_@quot+1,w
  5657  0D76  00B3               	movwf	?__div_to_l_+1
  5658  0D77  0840               	movf	__div_to_l_@quot,w
  5659  0D78  00B2               	movwf	?__div_to_l_
  5660  0D79  0008               	return
  5661  0D7A                     __end_of__div_to_l_:	
  5662                           
  5663                           	psect	text11
  5664  141C                     __ptext11:	
  5665 ;; *************** function ___lltoft *****************
  5666 ;; Defined at:
  5667 ;;		line 35 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\lltoft.c"
  5668 ;; Parameters:    Size  Location     Type
  5669 ;;  c               4   26[BANK0 ] unsigned long 
  5670 ;; Auto vars:     Size  Location     Type
  5671 ;;  exp             1   31[BANK0 ] unsigned char 
  5672 ;; Return value:  Size  Location     Type
  5673 ;;                  3   26[BANK0 ] float 
  5674 ;; Registers used:
  5675 ;;		wreg, status,2, status,0, pclath, cstack
  5676 ;; Tracked objects:
  5677 ;;		On entry : 0/0
  5678 ;;		On exit  : 0/0
  5679 ;;		Unchanged: 0/0
  5680 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
  5681 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  5682 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  5683 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  5684 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  5685 ;;Total ram usage:        6 bytes
  5686 ;; Hardware stack levels used:    1
  5687 ;; Hardware stack levels required when called:    4
  5688 ;; This function calls:
  5689 ;;		___ftpack
  5690 ;; This function is called by:
  5691 ;;		_sprintf
  5692 ;; This function uses a non-reentrant model
  5693 ;;
  5694                           
  5695                           
  5696                           ;psect for function ___lltoft
  5697  141C                     ___lltoft:	
  5698                           
  5699                           ;incstack = 0
  5700                           ; Regs used in ___lltoft: [wreg+status,2+status,0+pclath+cstack]
  5701  141C  308E               	movlw	142
  5702  141D  0140               	movlb	0	; select bank0
  5703  141E  00BE               	movwf	??___lltoft
  5704  141F  083E               	movf	??___lltoft,w
  5705  1420  00BF               	movwf	___lltoft@exp
  5706  1421                     l3190:	
  5707  1421  30FF               	movlw	255
  5708  1422  053D               	andwf	___lltoft@c+3,w
  5709  1423  1903               	btfsc	3,2
  5710  1424  2C31               	goto	l3192
  5711  1425  3001               	movlw	1
  5712  1426                     u4965:	
  5713  1426  36BD               	lsrf	___lltoft@c+3,f
  5714  1427  0CBC               	rrf	___lltoft@c+2,f
  5715  1428  0CBB               	rrf	___lltoft@c+1,f
  5716  1429  0CBA               	rrf	___lltoft@c,f
  5717  142A  0B89               	decfsz	9,f
  5718  142B  2C26               	goto	u4965
  5719  142C  3001               	movlw	1
  5720  142D  00BE               	movwf	??___lltoft
  5721  142E  083E               	movf	??___lltoft,w
  5722  142F  07BF               	addwf	___lltoft@exp,f
  5723  1430  2C21               	goto	l3190
  5724  1431                     l3192:	
  5725  1431  083A               	movf	___lltoft@c,w
  5726  1432  00B2               	movwf	___ftpack@arg
  5727  1433  083B               	movf	___lltoft@c+1,w
  5728  1434  00B3               	movwf	___ftpack@arg+1
  5729  1435  083C               	movf	___lltoft@c+2,w
  5730  1436  00B4               	movwf	___ftpack@arg+2
  5731  1437  083F               	movf	___lltoft@exp,w
  5732  1438  00BE               	movwf	??___lltoft
  5733  1439  083E               	movf	??___lltoft,w
  5734  143A  00B5               	movwf	___ftpack@exp
  5735  143B  01B6               	clrf	___ftpack@sign
  5736  143C  3196  26A0         	fcall	___ftpack
  5737  143E  0140               	movlb	0	; select bank0
  5738  143F  0832               	movf	?___ftpack,w
  5739  1440  00BA               	movwf	?___lltoft
  5740  1441  0833               	movf	?___ftpack+1,w
  5741  1442  00BB               	movwf	?___lltoft+1
  5742  1443  0834               	movf	?___ftpack+2,w
  5743  1444  00BC               	movwf	?___lltoft+2
  5744  1445  0008               	return
  5745  1446                     __end_of___lltoft:	
  5746                           
  5747                           	psect	text12
  5748  14BD                     __ptext12:	
  5749 ;; *************** function ___llmod *****************
  5750 ;; Defined at:
  5751 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\llmod.c"
  5752 ;; Parameters:    Size  Location     Type
  5753 ;;  divisor         4   18[BANK0 ] unsigned long 
  5754 ;;  dividend        4   22[BANK0 ] unsigned long 
  5755 ;; Auto vars:     Size  Location     Type
  5756 ;;  counter         1   27[BANK0 ] unsigned char 
  5757 ;; Return value:  Size  Location     Type
  5758 ;;                  4   18[BANK0 ] unsigned long 
  5759 ;; Registers used:
  5760 ;;		wreg, status,2, status,0
  5761 ;; Tracked objects:
  5762 ;;		On entry : 0/0
  5763 ;;		On exit  : 0/0
  5764 ;;		Unchanged: 0/0
  5765 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
  5766 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  5767 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  5768 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  5769 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  5770 ;;Total ram usage:       10 bytes
  5771 ;; Hardware stack levels used:    1
  5772 ;; Hardware stack levels required when called:    3
  5773 ;; This function calls:
  5774 ;;		Nothing
  5775 ;; This function is called by:
  5776 ;;		_sprintf
  5777 ;; This function uses a non-reentrant model
  5778 ;;
  5779                           
  5780                           
  5781                           ;psect for function ___llmod
  5782  14BD                     ___llmod:	
  5783                           
  5784                           ;incstack = 0
  5785                           ; Regs used in ___llmod: [wreg+status,2+status,0]
  5786  14BD  0140               	movlb	0	; select bank0
  5787  14BE  0835               	movf	___llmod@divisor+3,w
  5788  14BF  0434               	iorwf	___llmod@divisor+2,w
  5789  14C0  0433               	iorwf	___llmod@divisor+1,w
  5790  14C1  0432               	iorwf	___llmod@divisor,w
  5791  14C2  1903               	skipnz
  5792  14C3  2CF7               	goto	l2438
  5793  14C4  01BB               	clrf	___llmod@counter
  5794  14C5  0ABB               	incf	___llmod@counter,f
  5795  14C6                     l2428:	
  5796  14C6  1BB5               	btfsc	___llmod@divisor+3,7
  5797  14C7  2CD4               	goto	l2430
  5798  14C8  3001               	movlw	1
  5799  14C9                     u3605:	
  5800  14C9  35B2               	lslf	___llmod@divisor,f
  5801  14CA  0DB3               	rlf	___llmod@divisor+1,f
  5802  14CB  0DB4               	rlf	___llmod@divisor+2,f
  5803  14CC  0DB5               	rlf	___llmod@divisor+3,f
  5804  14CD  0B89               	decfsz	9,f
  5805  14CE  2CC9               	goto	u3605
  5806  14CF  3001               	movlw	1
  5807  14D0  00BA               	movwf	??___llmod
  5808  14D1  083A               	movf	??___llmod,w
  5809  14D2  07BB               	addwf	___llmod@counter,f
  5810  14D3  2CC6               	goto	l2428
  5811  14D4                     l2430:	
  5812  14D4  0835               	movf	___llmod@divisor+3,w
  5813  14D5  0239               	subwf	___llmod@dividend+3,w
  5814  14D6  1D03               	skipz
  5815  14D7  2CE2               	goto	u3625
  5816  14D8  0834               	movf	___llmod@divisor+2,w
  5817  14D9  0238               	subwf	___llmod@dividend+2,w
  5818  14DA  1D03               	skipz
  5819  14DB  2CE2               	goto	u3625
  5820  14DC  0833               	movf	___llmod@divisor+1,w
  5821  14DD  0237               	subwf	___llmod@dividend+1,w
  5822  14DE  1D03               	skipz
  5823  14DF  2CE2               	goto	u3625
  5824  14E0  0832               	movf	___llmod@divisor,w
  5825  14E1  0236               	subwf	___llmod@dividend,w
  5826  14E2                     u3625:	
  5827  14E2  1C03               	skipc
  5828  14E3  2CEC               	goto	l2434
  5829  14E4  0832               	movf	___llmod@divisor,w
  5830  14E5  02B6               	subwf	___llmod@dividend,f
  5831  14E6  0833               	movf	___llmod@divisor+1,w
  5832  14E7  3BB7               	subwfb	___llmod@dividend+1,f
  5833  14E8  0834               	movf	___llmod@divisor+2,w
  5834  14E9  3BB8               	subwfb	___llmod@dividend+2,f
  5835  14EA  0835               	movf	___llmod@divisor+3,w
  5836  14EB  3BB9               	subwfb	___llmod@dividend+3,f
  5837  14EC                     l2434:	
  5838  14EC  3001               	movlw	1
  5839  14ED                     u3635:	
  5840  14ED  36B5               	lsrf	___llmod@divisor+3,f
  5841  14EE  0CB4               	rrf	___llmod@divisor+2,f
  5842  14EF  0CB3               	rrf	___llmod@divisor+1,f
  5843  14F0  0CB2               	rrf	___llmod@divisor,f
  5844  14F1  0B89               	decfsz	9,f
  5845  14F2  2CED               	goto	u3635
  5846  14F3  3001               	movlw	1
  5847  14F4  02BB               	subwf	___llmod@counter,f
  5848  14F5  1D03               	btfss	3,2
  5849  14F6  2CD4               	goto	l2430
  5850  14F7                     l2438:	
  5851  14F7  0839               	movf	___llmod@dividend+3,w
  5852  14F8  00B5               	movwf	?___llmod+3
  5853  14F9  0838               	movf	___llmod@dividend+2,w
  5854  14FA  00B4               	movwf	?___llmod+2
  5855  14FB  0837               	movf	___llmod@dividend+1,w
  5856  14FC  00B3               	movwf	?___llmod+1
  5857  14FD  0836               	movf	___llmod@dividend,w
  5858  14FE  00B2               	movwf	?___llmod
  5859  14FF  0008               	return
  5860  1500                     __end_of___llmod:	
  5861                           
  5862                           	psect	text13
  5863  15E9                     __ptext13:	
  5864 ;; *************** function ___lldiv *****************
  5865 ;; Defined at:
  5866 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\lldiv.c"
  5867 ;; Parameters:    Size  Location     Type
  5868 ;;  divisor         4   18[BANK0 ] unsigned long 
  5869 ;;  dividend        4   22[BANK0 ] unsigned long 
  5870 ;; Auto vars:     Size  Location     Type
  5871 ;;  quotient        4   27[BANK0 ] unsigned long 
  5872 ;;  counter         1   31[BANK0 ] unsigned char 
  5873 ;; Return value:  Size  Location     Type
  5874 ;;                  4   18[BANK0 ] unsigned long 
  5875 ;; Registers used:
  5876 ;;		wreg, status,2, status,0
  5877 ;; Tracked objects:
  5878 ;;		On entry : 0/0
  5879 ;;		On exit  : 0/0
  5880 ;;		Unchanged: 0/0
  5881 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
  5882 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  5883 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  5884 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  5885 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  5886 ;;Total ram usage:       14 bytes
  5887 ;; Hardware stack levels used:    1
  5888 ;; Hardware stack levels required when called:    3
  5889 ;; This function calls:
  5890 ;;		Nothing
  5891 ;; This function is called by:
  5892 ;;		_sprintf
  5893 ;; This function uses a non-reentrant model
  5894 ;;
  5895                           
  5896                           
  5897                           ;psect for function ___lldiv
  5898  15E9                     ___lldiv:	
  5899                           
  5900                           ;incstack = 0
  5901                           ; Regs used in ___lldiv: [wreg+status,2+status,0]
  5902  15E9  3000               	movlw	0
  5903  15EA  0140               	movlb	0	; select bank0
  5904  15EB  00BE               	movwf	___lldiv@quotient+3
  5905  15EC  3000               	movlw	0
  5906  15ED  00BD               	movwf	___lldiv@quotient+2
  5907  15EE  3000               	movlw	0
  5908  15EF  00BC               	movwf	___lldiv@quotient+1
  5909  15F0  3000               	movlw	0
  5910  15F1  00BB               	movwf	___lldiv@quotient
  5911  15F2  0835               	movf	___lldiv@divisor+3,w
  5912  15F3  0434               	iorwf	___lldiv@divisor+2,w
  5913  15F4  0433               	iorwf	___lldiv@divisor+1,w
  5914  15F5  0432               	iorwf	___lldiv@divisor,w
  5915  15F6  1903               	skipnz
  5916  15F7  2E33               	goto	l2418
  5917  15F8  01BF               	clrf	___lldiv@counter
  5918  15F9  0ABF               	incf	___lldiv@counter,f
  5919  15FA                     l2404:	
  5920  15FA  1BB5               	btfsc	___lldiv@divisor+3,7
  5921  15FB  2E08               	goto	l2406
  5922  15FC  3001               	movlw	1
  5923  15FD                     u3535:	
  5924  15FD  35B2               	lslf	___lldiv@divisor,f
  5925  15FE  0DB3               	rlf	___lldiv@divisor+1,f
  5926  15FF  0DB4               	rlf	___lldiv@divisor+2,f
  5927  1600  0DB5               	rlf	___lldiv@divisor+3,f
  5928  1601  0B89               	decfsz	9,f
  5929  1602  2DFD               	goto	u3535
  5930  1603  3001               	movlw	1
  5931  1604  00BA               	movwf	??___lldiv
  5932  1605  083A               	movf	??___lldiv,w
  5933  1606  07BF               	addwf	___lldiv@counter,f
  5934  1607  2DFA               	goto	l2404
  5935  1608                     l2406:	
  5936  1608  3001               	movlw	1
  5937  1609                     u3555:	
  5938  1609  35BB               	lslf	___lldiv@quotient,f
  5939  160A  0DBC               	rlf	___lldiv@quotient+1,f
  5940  160B  0DBD               	rlf	___lldiv@quotient+2,f
  5941  160C  0DBE               	rlf	___lldiv@quotient+3,f
  5942  160D  0B89               	decfsz	9,f
  5943  160E  2E09               	goto	u3555
  5944  160F  0835               	movf	___lldiv@divisor+3,w
  5945  1610  0239               	subwf	___lldiv@dividend+3,w
  5946  1611  1D03               	skipz
  5947  1612  2E1D               	goto	u3565
  5948  1613  0834               	movf	___lldiv@divisor+2,w
  5949  1614  0238               	subwf	___lldiv@dividend+2,w
  5950  1615  1D03               	skipz
  5951  1616  2E1D               	goto	u3565
  5952  1617  0833               	movf	___lldiv@divisor+1,w
  5953  1618  0237               	subwf	___lldiv@dividend+1,w
  5954  1619  1D03               	skipz
  5955  161A  2E1D               	goto	u3565
  5956  161B  0832               	movf	___lldiv@divisor,w
  5957  161C  0236               	subwf	___lldiv@dividend,w
  5958  161D                     u3565:	
  5959  161D  1C03               	skipc
  5960  161E  2E28               	goto	l2414
  5961  161F  0832               	movf	___lldiv@divisor,w
  5962  1620  02B6               	subwf	___lldiv@dividend,f
  5963  1621  0833               	movf	___lldiv@divisor+1,w
  5964  1622  3BB7               	subwfb	___lldiv@dividend+1,f
  5965  1623  0834               	movf	___lldiv@divisor+2,w
  5966  1624  3BB8               	subwfb	___lldiv@dividend+2,f
  5967  1625  0835               	movf	___lldiv@divisor+3,w
  5968  1626  3BB9               	subwfb	___lldiv@dividend+3,f
  5969  1627  143B               	bsf	___lldiv@quotient,0
  5970  1628                     l2414:	
  5971  1628  3001               	movlw	1
  5972  1629                     u3575:	
  5973  1629  36B5               	lsrf	___lldiv@divisor+3,f
  5974  162A  0CB4               	rrf	___lldiv@divisor+2,f
  5975  162B  0CB3               	rrf	___lldiv@divisor+1,f
  5976  162C  0CB2               	rrf	___lldiv@divisor,f
  5977  162D  0B89               	decfsz	9,f
  5978  162E  2E29               	goto	u3575
  5979  162F  3001               	movlw	1
  5980  1630  02BF               	subwf	___lldiv@counter,f
  5981  1631  1D03               	btfss	3,2
  5982  1632  2E08               	goto	l2406
  5983  1633                     l2418:	
  5984  1633  083E               	movf	___lldiv@quotient+3,w
  5985  1634  00B5               	movwf	?___lldiv+3
  5986  1635  083D               	movf	___lldiv@quotient+2,w
  5987  1636  00B4               	movwf	?___lldiv+2
  5988  1637  083C               	movf	___lldiv@quotient+1,w
  5989  1638  00B3               	movwf	?___lldiv+1
  5990  1639  083B               	movf	___lldiv@quotient,w
  5991  163A  00B2               	movwf	?___lldiv
  5992  163B  0008               	return
  5993  163C                     __end_of___lldiv:	
  5994                           
  5995                           	psect	text14
  5996  1779                     __ptext14:	
  5997 ;; *************** function ___fttol *****************
  5998 ;; Defined at:
  5999 ;;		line 44 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\fttol.c"
  6000 ;; Parameters:    Size  Location     Type
  6001 ;;  f1              3    7[BANK1 ] float 
  6002 ;; Auto vars:     Size  Location     Type
  6003 ;;  lval            4   16[BANK1 ] unsigned long 
  6004 ;;  exp1            1   20[BANK1 ] unsigned char 
  6005 ;;  sign1           1   15[BANK1 ] unsigned char 
  6006 ;; Return value:  Size  Location     Type
  6007 ;;                  4    7[BANK1 ] long 
  6008 ;; Registers used:
  6009 ;;		wreg, status,2, status,0
  6010 ;; Tracked objects:
  6011 ;;		On entry : 0/0
  6012 ;;		On exit  : 0/0
  6013 ;;		Unchanged: 0/0
  6014 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
  6015 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  6016 ;;      Locals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  6017 ;;      Temps:          0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  6018 ;;      Totals:         0       0      14       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  6019 ;;Total ram usage:       14 bytes
  6020 ;; Hardware stack levels used:    1
  6021 ;; Hardware stack levels required when called:    3
  6022 ;; This function calls:
  6023 ;;		Nothing
  6024 ;; This function is called by:
  6025 ;;		_sprintf
  6026 ;; This function uses a non-reentrant model
  6027 ;;
  6028                           
  6029                           
  6030                           ;psect for function ___fttol
  6031  1779                     ___fttol:	
  6032                           
  6033                           ;incstack = 0
  6034                           ; Regs used in ___fttol: [wreg+status,2+status,0]
  6035  1779  0141               	movlb	1	; select bank1
  6036  177A  0827               	movf	___fttol@f1^(0+128),w
  6037  177B  00AB               	movwf	??___fttol^(0+128)
  6038  177C  0828               	movf	(___fttol@f1+1)^(0+128),w
  6039  177D  00AC               	movwf	(??___fttol^(0+128)+1)
  6040  177E  0829               	movf	(___fttol@f1+2)^(0+128),w
  6041  177F  00AD               	movwf	(??___fttol^(0+128)+2)
  6042  1780  1003               	clrc
  6043  1781  0D2C               	rlf	(??___fttol^(0+128)+1),w
  6044  1782  0D2D               	rlf	(??___fttol^(0+128)+2),w
  6045  1783  00AE               	movwf	(??___fttol+3)^(0+128)
  6046  1784  082E               	movf	(??___fttol+3)^(0+128),w
  6047  1785  00B4               	movwf	___fttol@exp1^(0+128)
  6048  1786  0834               	movf	___fttol@exp1^(0+128),w
  6049  1787  1D03               	btfss	3,2
  6050  1788  2F92               	goto	l2362
  6051  1789  3000               	movlw	0
  6052  178A  00AA               	movwf	(?___fttol+3)^(0+128)
  6053  178B  3000               	movlw	0
  6054  178C  00A9               	movwf	(?___fttol+2)^(0+128)
  6055  178D  3000               	movlw	0
  6056  178E  00A8               	movwf	(?___fttol+1)^(0+128)
  6057  178F  3000               	movlw	0
  6058  1790  00A7               	movwf	?___fttol^(0+128)
  6059  1791  0008               	return
  6060  1792                     l2362:	
  6061  1792  0827               	movf	___fttol@f1^(0+128),w
  6062  1793  00AB               	movwf	??___fttol^(0+128)
  6063  1794  0828               	movf	(___fttol@f1+1)^(0+128),w
  6064  1795  00AC               	movwf	(??___fttol^(0+128)+1)
  6065  1796  0829               	movf	(___fttol@f1+2)^(0+128),w
  6066  1797  00AD               	movwf	(??___fttol^(0+128)+2)
  6067  1798  3017               	movlw	23
  6068  1799                     u3435:	
  6069  1799  36AD               	lsrf	(??___fttol^(0+128)+2),f
  6070  179A  0CAC               	rrf	(??___fttol^(0+128)+1),f
  6071  179B  0CAB               	rrf	??___fttol^(0+128),f
  6072  179C  0B89               	decfsz	9,f
  6073  179D  2F99               	goto	u3435
  6074  179E  082B               	movf	??___fttol^(0+128),w
  6075  179F  00AE               	movwf	(??___fttol+3)^(0+128)
  6076  17A0  082E               	movf	(??___fttol+3)^(0+128),w
  6077  17A1  00AF               	movwf	___fttol@sign1^(0+128)
  6078  17A2  17A8               	bsf	(___fttol@f1^(0+128)+1),7
  6079  17A3  30FF               	movlw	255
  6080  17A4  05A7               	andwf	___fttol@f1^(0+128),f
  6081  17A5  30FF               	movlw	255
  6082  17A6  05A8               	andwf	(___fttol@f1+1)^(0+128),f
  6083  17A7  3000               	movlw	0
  6084  17A8  05A9               	andwf	(___fttol@f1+2)^(0+128),f
  6085  17A9  0827               	movf	___fttol@f1^(0+128),w
  6086  17AA  00B0               	movwf	___fttol@lval^(0+128)
  6087  17AB  0828               	movf	(___fttol@f1+1)^(0+128),w
  6088  17AC  00B1               	movwf	(___fttol@lval^(0+128)+1)
  6089  17AD  0829               	movf	(___fttol@f1+2)^(0+128),w
  6090  17AE  00B2               	movwf	(___fttol@lval^(0+128)+2)
  6091  17AF  01B3               	clrf	(___fttol@lval^(0+128)+3)
  6092  17B0  308E               	movlw	142
  6093  17B1  02B4               	subwf	___fttol@exp1^(0+128),f
  6094  17B2  1FB4               	btfss	___fttol@exp1^(0+128),7
  6095  17B3  2FD0               	goto	l2382
  6096  17B4  0834               	movf	___fttol@exp1^(0+128),w
  6097  17B5  3A80               	xorlw	128
  6098  17B6  3E8F               	addlw	143
  6099  17B7  1803               	skipnc
  6100  17B8  2FC2               	goto	l2380
  6101  17B9  3000               	movlw	0
  6102  17BA  00AA               	movwf	(?___fttol+3)^(0+128)
  6103  17BB  3000               	movlw	0
  6104  17BC  00A9               	movwf	(?___fttol+2)^(0+128)
  6105  17BD  3000               	movlw	0
  6106  17BE  00A8               	movwf	(?___fttol+1)^(0+128)
  6107  17BF  3000               	movlw	0
  6108  17C0  00A7               	movwf	?___fttol^(0+128)
  6109  17C1  0008               	return
  6110  17C2                     l2380:	
  6111  17C2  3001               	movlw	1
  6112  17C3                     u3465:	
  6113  17C3  36B3               	lsrf	(___fttol@lval+3)^(0+128),f
  6114  17C4  0CB2               	rrf	(___fttol@lval+2)^(0+128),f
  6115  17C5  0CB1               	rrf	(___fttol@lval+1)^(0+128),f
  6116  17C6  0CB0               	rrf	___fttol@lval^(0+128),f
  6117  17C7  0B89               	decfsz	9,f
  6118  17C8  2FC3               	goto	u3465
  6119  17C9  3001               	movlw	1
  6120  17CA  00AB               	movwf	??___fttol^(0+128)
  6121  17CB  082B               	movf	??___fttol^(0+128),w
  6122  17CC  07B4               	addwf	___fttol@exp1^(0+128),f
  6123  17CD  1903               	btfsc	3,2
  6124  17CE  2FE9               	goto	l2390
  6125  17CF  2FC2               	goto	l2380
  6126  17D0                     l2382:	
  6127  17D0  3018               	movlw	24
  6128  17D1  0234               	subwf	___fttol@exp1^(0+128),w
  6129  17D2  1C03               	skipc
  6130  17D3  2FE6               	goto	l575
  6131  17D4  3000               	movlw	0
  6132  17D5  00AA               	movwf	(?___fttol+3)^(0+128)
  6133  17D6  3000               	movlw	0
  6134  17D7  00A9               	movwf	(?___fttol+2)^(0+128)
  6135  17D8  3000               	movlw	0
  6136  17D9  00A8               	movwf	(?___fttol+1)^(0+128)
  6137  17DA  3000               	movlw	0
  6138  17DB  00A7               	movwf	?___fttol^(0+128)
  6139  17DC  0008               	return
  6140  17DD                     l2388:	
  6141  17DD  3001               	movlw	1
  6142  17DE                     u3495:	
  6143  17DE  35B0               	lslf	___fttol@lval^(0+128),f
  6144  17DF  0DB1               	rlf	(___fttol@lval+1)^(0+128),f
  6145  17E0  0DB2               	rlf	(___fttol@lval+2)^(0+128),f
  6146  17E1  0DB3               	rlf	(___fttol@lval+3)^(0+128),f
  6147  17E2  0B89               	decfsz	9,f
  6148  17E3  2FDE               	goto	u3495
  6149  17E4  3001               	movlw	1
  6150  17E5  02B4               	subwf	___fttol@exp1^(0+128),f
  6151  17E6                     l575:	
  6152  17E6  0834               	movf	___fttol@exp1^(0+128),w
  6153  17E7  1D03               	btfss	3,2
  6154  17E8  2FDD               	goto	l2388
  6155  17E9                     l2390:	
  6156  17E9  082F               	movf	___fttol@sign1^(0+128),w
  6157  17EA  1903               	btfsc	3,2
  6158  17EB  2FF7               	goto	l2394
  6159  17EC  09B0               	comf	___fttol@lval^(0+128),f
  6160  17ED  09B1               	comf	(___fttol@lval+1)^(0+128),f
  6161  17EE  09B2               	comf	(___fttol@lval+2)^(0+128),f
  6162  17EF  09B3               	comf	(___fttol@lval+3)^(0+128),f
  6163  17F0  0AB0               	incf	___fttol@lval^(0+128),f
  6164  17F1  1903               	skipnz
  6165  17F2  0AB1               	incf	(___fttol@lval+1)^(0+128),f
  6166  17F3  1903               	skipnz
  6167  17F4  0AB2               	incf	(___fttol@lval+2)^(0+128),f
  6168  17F5  1903               	skipnz
  6169  17F6  0AB3               	incf	(___fttol@lval+3)^(0+128),f
  6170  17F7                     l2394:	
  6171  17F7  0833               	movf	(___fttol@lval+3)^(0+128),w
  6172  17F8  00AA               	movwf	(?___fttol+3)^(0+128)
  6173  17F9  0832               	movf	(___fttol@lval+2)^(0+128),w
  6174  17FA  00A9               	movwf	(?___fttol+2)^(0+128)
  6175  17FB  0831               	movf	(___fttol@lval+1)^(0+128),w
  6176  17FC  00A8               	movwf	(?___fttol+1)^(0+128)
  6177  17FD  0830               	movf	___fttol@lval^(0+128),w
  6178  17FE  00A7               	movwf	?___fttol^(0+128)
  6179  17FF  0008               	return
  6180  1800                     __end_of___fttol:	
  6181                           
  6182                           	psect	text15
  6183  13DD                     __ptext15:	
  6184 ;; *************** function ___ftsub *****************
  6185 ;; Defined at:
  6186 ;;		line 18 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\ftsub.c"
  6187 ;; Parameters:    Size  Location     Type
  6188 ;;  f2              3   27[BANK1 ] float 
  6189 ;;  f1              3   30[BANK1 ] float 
  6190 ;; Auto vars:     Size  Location     Type
  6191 ;;		None
  6192 ;; Return value:  Size  Location     Type
  6193 ;;                  3   27[BANK1 ] float 
  6194 ;; Registers used:
  6195 ;;		wreg, status,2, status,0, pclath, cstack
  6196 ;; Tracked objects:
  6197 ;;		On entry : 0/0
  6198 ;;		On exit  : 0/0
  6199 ;;		Unchanged: 0/0
  6200 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
  6201 ;;      Params:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  6202 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  6203 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  6204 ;;      Totals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  6205 ;;Total ram usage:        6 bytes
  6206 ;; Hardware stack levels used:    1
  6207 ;; Hardware stack levels required when called:    5
  6208 ;; This function calls:
  6209 ;;		___ftadd
  6210 ;; This function is called by:
  6211 ;;		_sprintf
  6212 ;; This function uses a non-reentrant model
  6213 ;;
  6214                           
  6215                           
  6216                           ;psect for function ___ftsub
  6217  13DD                     ___ftsub:	
  6218                           
  6219                           ;incstack = 0
  6220                           ; Regs used in ___ftsub: [wreg+status,2+status,0+pclath+cstack]
  6221  13DD  0141               	movlb	1	; select bank1
  6222  13DE  083D               	movf	(___ftsub@f2+2)^(0+128),w
  6223  13DF  043C               	iorwf	(___ftsub@f2+1)^(0+128),w
  6224  13E0  043B               	iorwf	___ftsub@f2^(0+128),w
  6225  13E1  1903               	skipnz
  6226  13E2  2BE5               	goto	l3182
  6227  13E3  3080               	movlw	128
  6228  13E4  06BD               	xorwf	(___ftsub@f2+2)^(0+128),f
  6229  13E5                     l3182:	
  6230  13E5  083E               	movf	___ftsub@f1^(0+128),w
  6231  13E6  00AE               	movwf	___ftadd@f1^(0+128)
  6232  13E7  083F               	movf	(___ftsub@f1+1)^(0+128),w
  6233  13E8  00AF               	movwf	(___ftadd@f1+1)^(0+128)
  6234  13E9  0840               	movf	(___ftsub@f1+2)^(0+128),w
  6235  13EA  00B0               	movwf	(___ftadd@f1+2)^(0+128)
  6236  13EB  083B               	movf	___ftsub@f2^(0+128),w
  6237  13EC  00B1               	movwf	___ftadd@f2^(0+128)
  6238  13ED  083C               	movf	(___ftsub@f2+1)^(0+128),w
  6239  13EE  00B2               	movwf	(___ftadd@f2+1)^(0+128)
  6240  13EF  083D               	movf	(___ftsub@f2+2)^(0+128),w
  6241  13F0  00B3               	movwf	(___ftadd@f2+2)^(0+128)
  6242  13F1  318B  2359         	fcall	___ftadd
  6243  13F3  0141               	movlb	1	; select bank1
  6244  13F4  082E               	movf	?___ftadd^(0+128),w
  6245  13F5  00BB               	movwf	?___ftsub^(0+128)
  6246  13F6  082F               	movf	(?___ftadd+1)^(0+128),w
  6247  13F7  00BC               	movwf	(?___ftsub+1)^(0+128)
  6248  13F8  0830               	movf	(?___ftadd+2)^(0+128),w
  6249  13F9  00BD               	movwf	(?___ftsub+2)^(0+128)
  6250  13FA  0008               	return
  6251  13FB                     __end_of___ftsub:	
  6252                           
  6253                           	psect	text16
  6254  0B59                     __ptext16:	
  6255 ;; *************** function ___ftadd *****************
  6256 ;; Defined at:
  6257 ;;		line 86 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\ftadd.c"
  6258 ;; Parameters:    Size  Location     Type
  6259 ;;  f1              3   14[BANK1 ] float 
  6260 ;;  f2              3   17[BANK1 ] float 
  6261 ;; Auto vars:     Size  Location     Type
  6262 ;;  exp1            1   26[BANK1 ] unsigned char 
  6263 ;;  exp2            1   25[BANK1 ] unsigned char 
  6264 ;;  sign            1   24[BANK1 ] unsigned char 
  6265 ;; Return value:  Size  Location     Type
  6266 ;;                  3   14[BANK1 ] float 
  6267 ;; Registers used:
  6268 ;;		wreg, status,2, status,0, pclath, cstack
  6269 ;; Tracked objects:
  6270 ;;		On entry : 0/0
  6271 ;;		On exit  : 0/0
  6272 ;;		Unchanged: 0/0
  6273 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
  6274 ;;      Params:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  6275 ;;      Locals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  6276 ;;      Temps:          0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  6277 ;;      Totals:         0       0      13       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  6278 ;;Total ram usage:       13 bytes
  6279 ;; Hardware stack levels used:    1
  6280 ;; Hardware stack levels required when called:    4
  6281 ;; This function calls:
  6282 ;;		___ftpack
  6283 ;; This function is called by:
  6284 ;;		_sprintf
  6285 ;;		___ftsub
  6286 ;; This function uses a non-reentrant model
  6287 ;;
  6288                           
  6289                           
  6290                           ;psect for function ___ftadd
  6291  0B59                     ___ftadd:	
  6292                           
  6293                           ;incstack = 0
  6294                           ; Regs used in ___ftadd: [wreg+status,2+status,0+pclath+cstack]
  6295  0B59  0141               	movlb	1	; select bank1
  6296  0B5A  082E               	movf	___ftadd@f1^(0+128),w
  6297  0B5B  00B4               	movwf	??___ftadd^(0+128)
  6298  0B5C  082F               	movf	(___ftadd@f1+1)^(0+128),w
  6299  0B5D  00B5               	movwf	(??___ftadd^(0+128)+1)
  6300  0B5E  0830               	movf	(___ftadd@f1+2)^(0+128),w
  6301  0B5F  00B6               	movwf	(??___ftadd^(0+128)+2)
  6302  0B60  1003               	clrc
  6303  0B61  0D35               	rlf	(??___ftadd^(0+128)+1),w
  6304  0B62  0D36               	rlf	(??___ftadd^(0+128)+2),w
  6305  0B63  00B7               	movwf	(??___ftadd+3)^(0+128)
  6306  0B64  0837               	movf	(??___ftadd+3)^(0+128),w
  6307  0B65  00BA               	movwf	___ftadd@exp1^(0+128)
  6308  0B66  0831               	movf	___ftadd@f2^(0+128),w
  6309  0B67  00B4               	movwf	??___ftadd^(0+128)
  6310  0B68  0832               	movf	(___ftadd@f2+1)^(0+128),w
  6311  0B69  00B5               	movwf	(??___ftadd^(0+128)+1)
  6312  0B6A  0833               	movf	(___ftadd@f2+2)^(0+128),w
  6313  0B6B  00B6               	movwf	(??___ftadd^(0+128)+2)
  6314  0B6C  1003               	clrc
  6315  0B6D  0D35               	rlf	(??___ftadd^(0+128)+1),w
  6316  0B6E  0D36               	rlf	(??___ftadd^(0+128)+2),w
  6317  0B6F  00B7               	movwf	(??___ftadd+3)^(0+128)
  6318  0B70  0837               	movf	(??___ftadd+3)^(0+128),w
  6319  0B71  00B9               	movwf	___ftadd@exp2^(0+128)
  6320  0B72  083A               	movf	___ftadd@exp1^(0+128),w
  6321  0B73  1903               	btfsc	3,2
  6322  0B74  2B81               	goto	l3002
  6323  0B75  0839               	movf	___ftadd@exp2^(0+128),w
  6324  0B76  023A               	subwf	___ftadd@exp1^(0+128),w
  6325  0B77  1803               	skipnc
  6326  0B78  2B88               	goto	l3006
  6327  0B79  033A               	decf	___ftadd@exp1^(0+128),w
  6328  0B7A  3AFF               	xorlw	255
  6329  0B7B  0739               	addwf	___ftadd@exp2^(0+128),w
  6330  0B7C  00B4               	movwf	??___ftadd^(0+128)
  6331  0B7D  3019               	movlw	25
  6332  0B7E  0234               	subwf	??___ftadd^(0+128),w
  6333  0B7F  1C03               	skipc
  6334  0B80  2B88               	goto	l3006
  6335  0B81                     l3002:	
  6336  0B81  0831               	movf	___ftadd@f2^(0+128),w
  6337  0B82  00AE               	movwf	?___ftadd^(0+128)
  6338  0B83  0832               	movf	(___ftadd@f2+1)^(0+128),w
  6339  0B84  00AF               	movwf	(?___ftadd+1)^(0+128)
  6340  0B85  0833               	movf	(___ftadd@f2+2)^(0+128),w
  6341  0B86  00B0               	movwf	(?___ftadd+2)^(0+128)
  6342  0B87  0008               	return
  6343  0B88                     l3006:	
  6344  0B88  0839               	movf	___ftadd@exp2^(0+128),w
  6345  0B89  1903               	btfsc	3,2
  6346  0B8A  0008               	return
  6347  0B8B  083A               	movf	___ftadd@exp1^(0+128),w
  6348  0B8C  0239               	subwf	___ftadd@exp2^(0+128),w
  6349  0B8D  1803               	skipnc
  6350  0B8E  2B97               	goto	l3012
  6351  0B8F  0339               	decf	___ftadd@exp2^(0+128),w
  6352  0B90  3AFF               	xorlw	255
  6353  0B91  073A               	addwf	___ftadd@exp1^(0+128),w
  6354  0B92  00B4               	movwf	??___ftadd^(0+128)
  6355  0B93  3019               	movlw	25
  6356  0B94  0234               	subwf	??___ftadd^(0+128),w
  6357  0B95  1803               	btfsc	3,0
  6358  0B96  0008               	return
  6359  0B97                     l3012:	
  6360  0B97  3006               	movlw	6
  6361  0B98  00B4               	movwf	??___ftadd^(0+128)
  6362  0B99  0834               	movf	??___ftadd^(0+128),w
  6363  0B9A  00B8               	movwf	___ftadd@sign^(0+128)
  6364  0B9B  1BB0               	btfsc	(___ftadd@f1+2)^(0+128),7
  6365  0B9C  17B8               	bsf	___ftadd@sign^(0+128),7
  6366  0B9D  1BB3               	btfsc	(___ftadd@f2+2)^(0+128),7
  6367  0B9E  1738               	bsf	___ftadd@sign^(0+128),6
  6368  0B9F  17AF               	bsf	(___ftadd@f1^(0+128)+1),7
  6369  0BA0  30FF               	movlw	255
  6370  0BA1  05AE               	andwf	___ftadd@f1^(0+128),f
  6371  0BA2  30FF               	movlw	255
  6372  0BA3  05AF               	andwf	(___ftadd@f1+1)^(0+128),f
  6373  0BA4  3000               	movlw	0
  6374  0BA5  05B0               	andwf	(___ftadd@f1+2)^(0+128),f
  6375  0BA6  17B2               	bsf	(___ftadd@f2^(0+128)+1),7
  6376  0BA7  30FF               	movlw	255
  6377  0BA8  05B1               	andwf	___ftadd@f2^(0+128),f
  6378  0BA9  30FF               	movlw	255
  6379  0BAA  05B2               	andwf	(___ftadd@f2+1)^(0+128),f
  6380  0BAB  3000               	movlw	0
  6381  0BAC  05B3               	andwf	(___ftadd@f2+2)^(0+128),f
  6382  0BAD  0839               	movf	___ftadd@exp2^(0+128),w
  6383  0BAE  023A               	subwf	___ftadd@exp1^(0+128),w
  6384  0BAF  1803               	skipnc
  6385  0BB0  2BD3               	goto	l3034
  6386  0BB1                     l3024:	
  6387  0BB1  3001               	movlw	1
  6388  0BB2                     u4625:	
  6389  0BB2  35B1               	lslf	___ftadd@f2^(0+128),f
  6390  0BB3  0DB2               	rlf	(___ftadd@f2+1)^(0+128),f
  6391  0BB4  0DB3               	rlf	(___ftadd@f2+2)^(0+128),f
  6392  0BB5  0B89               	decfsz	9,f
  6393  0BB6  2BB2               	goto	u4625
  6394  0BB7  3001               	movlw	1
  6395  0BB8  02B9               	subwf	___ftadd@exp2^(0+128),f
  6396  0BB9  0839               	movf	___ftadd@exp2^(0+128),w
  6397  0BBA  063A               	xorwf	___ftadd@exp1^(0+128),w
  6398  0BBB  1903               	skipnz
  6399  0BBC  2BCE               	goto	l3032
  6400  0BBD  3001               	movlw	1
  6401  0BBE  02B8               	subwf	___ftadd@sign^(0+128),f
  6402  0BBF  0838               	movf	___ftadd@sign^(0+128),w
  6403  0BC0  3907               	andlw	7
  6404  0BC1  1903               	btfsc	3,2
  6405  0BC2  2BCE               	goto	l3032
  6406  0BC3  2BB1               	goto	l3024
  6407  0BC4                     l3030:	
  6408  0BC4  3001               	movlw	1
  6409  0BC5                     u4655:	
  6410  0BC5  36B0               	lsrf	(___ftadd@f1+2)^(0+128),f
  6411  0BC6  0CAF               	rrf	(___ftadd@f1+1)^(0+128),f
  6412  0BC7  0CAE               	rrf	___ftadd@f1^(0+128),f
  6413  0BC8  0B89               	decfsz	9,f
  6414  0BC9  2BC5               	goto	u4655
  6415  0BCA  3001               	movlw	1
  6416  0BCB  00B4               	movwf	??___ftadd^(0+128)
  6417  0BCC  0834               	movf	??___ftadd^(0+128),w
  6418  0BCD  07BA               	addwf	___ftadd@exp1^(0+128),f
  6419  0BCE                     l3032:	
  6420  0BCE  083A               	movf	___ftadd@exp1^(0+128),w
  6421  0BCF  0639               	xorwf	___ftadd@exp2^(0+128),w
  6422  0BD0  1903               	btfsc	3,2
  6423  0BD1  2BF8               	goto	l498
  6424  0BD2  2BC4               	goto	l3030
  6425  0BD3                     l3034:	
  6426  0BD3  083A               	movf	___ftadd@exp1^(0+128),w
  6427  0BD4  0239               	subwf	___ftadd@exp2^(0+128),w
  6428  0BD5  1803               	skipnc
  6429  0BD6  2BF8               	goto	l498
  6430  0BD7                     l3036:	
  6431  0BD7  3001               	movlw	1
  6432  0BD8                     u4685:	
  6433  0BD8  35AE               	lslf	___ftadd@f1^(0+128),f
  6434  0BD9  0DAF               	rlf	(___ftadd@f1+1)^(0+128),f
  6435  0BDA  0DB0               	rlf	(___ftadd@f1+2)^(0+128),f
  6436  0BDB  0B89               	decfsz	9,f
  6437  0BDC  2BD8               	goto	u4685
  6438  0BDD  3001               	movlw	1
  6439  0BDE  02BA               	subwf	___ftadd@exp1^(0+128),f
  6440  0BDF  0839               	movf	___ftadd@exp2^(0+128),w
  6441  0BE0  063A               	xorwf	___ftadd@exp1^(0+128),w
  6442  0BE1  1903               	skipnz
  6443  0BE2  2BF4               	goto	l3044
  6444  0BE3  3001               	movlw	1
  6445  0BE4  02B8               	subwf	___ftadd@sign^(0+128),f
  6446  0BE5  0838               	movf	___ftadd@sign^(0+128),w
  6447  0BE6  3907               	andlw	7
  6448  0BE7  1903               	btfsc	3,2
  6449  0BE8  2BF4               	goto	l3044
  6450  0BE9  2BD7               	goto	l3036
  6451  0BEA                     l3042:	
  6452  0BEA  3001               	movlw	1
  6453  0BEB                     u4715:	
  6454  0BEB  36B3               	lsrf	(___ftadd@f2+2)^(0+128),f
  6455  0BEC  0CB2               	rrf	(___ftadd@f2+1)^(0+128),f
  6456  0BED  0CB1               	rrf	___ftadd@f2^(0+128),f
  6457  0BEE  0B89               	decfsz	9,f
  6458  0BEF  2BEB               	goto	u4715
  6459  0BF0  3001               	movlw	1
  6460  0BF1  00B4               	movwf	??___ftadd^(0+128)
  6461  0BF2  0834               	movf	??___ftadd^(0+128),w
  6462  0BF3  07B9               	addwf	___ftadd@exp2^(0+128),f
  6463  0BF4                     l3044:	
  6464  0BF4  083A               	movf	___ftadd@exp1^(0+128),w
  6465  0BF5  0639               	xorwf	___ftadd@exp2^(0+128),w
  6466  0BF6  1D03               	skipz
  6467  0BF7  2BEA               	goto	l3042
  6468  0BF8                     l498:	
  6469  0BF8  1FB8               	btfss	___ftadd@sign^(0+128),7
  6470  0BF9  2C0A               	goto	l3048
  6471  0BFA  30FF               	movlw	255
  6472  0BFB  06AE               	xorwf	___ftadd@f1^(0+128),f
  6473  0BFC  30FF               	movlw	255
  6474  0BFD  06AF               	xorwf	(___ftadd@f1+1)^(0+128),f
  6475  0BFE  30FF               	movlw	255
  6476  0BFF  06B0               	xorwf	(___ftadd@f1+2)^(0+128),f
  6477  0C00  3001               	movlw	1
  6478  0C01  07AE               	addwf	___ftadd@f1^(0+128),f
  6479  0C02  3000               	movlw	0
  6480  0C03  1803               	skipnc
  6481  0C04  3001               	movlw	1
  6482  0C05  07AF               	addwf	(___ftadd@f1+1)^(0+128),f
  6483  0C06  3000               	movlw	0
  6484  0C07  1803               	skipnc
  6485  0C08  3001               	movlw	1
  6486  0C09  07B0               	addwf	(___ftadd@f1+2)^(0+128),f
  6487  0C0A                     l3048:	
  6488  0C0A  1F38               	btfss	___ftadd@sign^(0+128),6
  6489  0C0B  2C1C               	goto	l3052
  6490  0C0C  30FF               	movlw	255
  6491  0C0D  06B1               	xorwf	___ftadd@f2^(0+128),f
  6492  0C0E  30FF               	movlw	255
  6493  0C0F  06B2               	xorwf	(___ftadd@f2+1)^(0+128),f
  6494  0C10  30FF               	movlw	255
  6495  0C11  06B3               	xorwf	(___ftadd@f2+2)^(0+128),f
  6496  0C12  3001               	movlw	1
  6497  0C13  07B1               	addwf	___ftadd@f2^(0+128),f
  6498  0C14  3000               	movlw	0
  6499  0C15  1803               	skipnc
  6500  0C16  3001               	movlw	1
  6501  0C17  07B2               	addwf	(___ftadd@f2+1)^(0+128),f
  6502  0C18  3000               	movlw	0
  6503  0C19  1803               	skipnc
  6504  0C1A  3001               	movlw	1
  6505  0C1B  07B3               	addwf	(___ftadd@f2+2)^(0+128),f
  6506  0C1C                     l3052:	
  6507  0C1C  01B8               	clrf	___ftadd@sign^(0+128)
  6508  0C1D  082E               	movf	___ftadd@f1^(0+128),w
  6509  0C1E  07B1               	addwf	___ftadd@f2^(0+128),f
  6510  0C1F  082F               	movf	(___ftadd@f1+1)^(0+128),w
  6511  0C20  3DB2               	addwfc	(___ftadd@f2+1)^(0+128),f
  6512  0C21  0830               	movf	(___ftadd@f1+2)^(0+128),w
  6513  0C22  3DB3               	addwfc	(___ftadd@f2+2)^(0+128),f
  6514  0C23  1FB3               	btfss	(___ftadd@f2+2)^(0+128),7
  6515  0C24  2C37               	goto	l3062
  6516  0C25  30FF               	movlw	255
  6517  0C26  06B1               	xorwf	___ftadd@f2^(0+128),f
  6518  0C27  30FF               	movlw	255
  6519  0C28  06B2               	xorwf	(___ftadd@f2+1)^(0+128),f
  6520  0C29  30FF               	movlw	255
  6521  0C2A  06B3               	xorwf	(___ftadd@f2+2)^(0+128),f
  6522  0C2B  3001               	movlw	1
  6523  0C2C  07B1               	addwf	___ftadd@f2^(0+128),f
  6524  0C2D  3000               	movlw	0
  6525  0C2E  1803               	skipnc
  6526  0C2F  3001               	movlw	1
  6527  0C30  07B2               	addwf	(___ftadd@f2+1)^(0+128),f
  6528  0C31  3000               	movlw	0
  6529  0C32  1803               	skipnc
  6530  0C33  3001               	movlw	1
  6531  0C34  07B3               	addwf	(___ftadd@f2+2)^(0+128),f
  6532  0C35  01B8               	clrf	___ftadd@sign^(0+128)
  6533  0C36  0AB8               	incf	___ftadd@sign^(0+128),f
  6534  0C37                     l3062:	
  6535  0C37  0831               	movf	___ftadd@f2^(0+128),w
  6536  0C38  0140               	movlb	0	; select bank0
  6537  0C39  00B2               	movwf	___ftpack@arg
  6538  0C3A  0141               	movlb	1	; select bank1
  6539  0C3B  0832               	movf	(___ftadd@f2+1)^(0+128),w
  6540  0C3C  0140               	movlb	0	; select bank0
  6541  0C3D  00B3               	movwf	___ftpack@arg+1
  6542  0C3E  0141               	movlb	1	; select bank1
  6543  0C3F  0833               	movf	(___ftadd@f2+2)^(0+128),w
  6544  0C40  0140               	movlb	0	; select bank0
  6545  0C41  00B4               	movwf	___ftpack@arg+2
  6546  0C42  0141               	movlb	1	; select bank1
  6547  0C43  083A               	movf	___ftadd@exp1^(0+128),w
  6548  0C44  00B4               	movwf	??___ftadd^(0+128)
  6549  0C45  0834               	movf	??___ftadd^(0+128),w
  6550  0C46  0140               	movlb	0	; select bank0
  6551  0C47  00B5               	movwf	___ftpack@exp
  6552  0C48  0141               	movlb	1	; select bank1
  6553  0C49  0838               	movf	___ftadd@sign^(0+128),w
  6554  0C4A  00B5               	movwf	(??___ftadd+1)^(0+128)
  6555  0C4B  0835               	movf	(??___ftadd+1)^(0+128),w
  6556  0C4C  0140               	movlb	0	; select bank0
  6557  0C4D  00B6               	movwf	___ftpack@sign
  6558  0C4E  3196  26A0         	fcall	___ftpack
  6559  0C50  0140               	movlb	0	; select bank0
  6560  0C51  0832               	movf	?___ftpack,w
  6561  0C52  0141               	movlb	1	; select bank1
  6562  0C53  00AE               	movwf	?___ftadd^(0+128)
  6563  0C54  0140               	movlb	0	; select bank0
  6564  0C55  0833               	movf	?___ftpack+1,w
  6565  0C56  0141               	movlb	1	; select bank1
  6566  0C57  00AF               	movwf	(?___ftadd+1)^(0+128)
  6567  0C58  0140               	movlb	0	; select bank0
  6568  0C59  0834               	movf	?___ftpack+2,w
  6569  0C5A  0141               	movlb	1	; select bank1
  6570  0C5B  00B0               	movwf	(?___ftadd+2)^(0+128)
  6571  0C5C  0008               	return
  6572  0C5D                     __end_of___ftadd:	
  6573                           
  6574                           	psect	text17
  6575  16A0                     __ptext17:	
  6576 ;; *************** function ___ftpack *****************
  6577 ;; Defined at:
  6578 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\float.c"
  6579 ;; Parameters:    Size  Location     Type
  6580 ;;  arg             3   18[BANK0 ] unsigned um
  6581 ;;  exp             1   21[BANK0 ] unsigned char 
  6582 ;;  sign            1   22[BANK0 ] unsigned char 
  6583 ;; Auto vars:     Size  Location     Type
  6584 ;;		None
  6585 ;; Return value:  Size  Location     Type
  6586 ;;                  3   18[BANK0 ] float 
  6587 ;; Registers used:
  6588 ;;		wreg, status,2, status,0
  6589 ;; Tracked objects:
  6590 ;;		On entry : 0/0
  6591 ;;		On exit  : 0/0
  6592 ;;		Unchanged: 0/0
  6593 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
  6594 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  6595 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  6596 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  6597 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  6598 ;;Total ram usage:        8 bytes
  6599 ;; Hardware stack levels used:    1
  6600 ;; Hardware stack levels required when called:    3
  6601 ;; This function calls:
  6602 ;;		Nothing
  6603 ;; This function is called by:
  6604 ;;		___ftadd
  6605 ;;		___ftmul
  6606 ;;		___lltoft
  6607 ;; This function uses a non-reentrant model
  6608 ;;
  6609                           
  6610                           
  6611                           ;psect for function ___ftpack
  6612  16A0                     ___ftpack:	
  6613                           
  6614                           ;incstack = 0
  6615                           ; Regs used in ___ftpack: [wreg+status,2+status,0]
  6616  16A0  0140               	movlb	0	; select bank0
  6617  16A1  0835               	movf	___ftpack@exp,w
  6618  16A2  1903               	btfsc	3,2
  6619  16A3  2EA9               	goto	l2968
  6620  16A4  0834               	movf	___ftpack@arg+2,w
  6621  16A5  0433               	iorwf	___ftpack@arg+1,w
  6622  16A6  0432               	iorwf	___ftpack@arg,w
  6623  16A7  1D03               	skipz
  6624  16A8  2EBA               	goto	l2974
  6625  16A9                     l2968:	
  6626  16A9  3000               	movlw	0
  6627  16AA  00B2               	movwf	?___ftpack
  6628  16AB  3000               	movlw	0
  6629  16AC  00B3               	movwf	?___ftpack+1
  6630  16AD  3000               	movlw	0
  6631  16AE  00B4               	movwf	?___ftpack+2
  6632  16AF  0008               	return
  6633  16B0                     l2972:	
  6634  16B0  3001               	movlw	1
  6635  16B1  00B7               	movwf	??___ftpack
  6636  16B2  0837               	movf	??___ftpack,w
  6637  16B3  07B5               	addwf	___ftpack@exp,f
  6638  16B4  3001               	movlw	1
  6639  16B5                     u4435:	
  6640  16B5  36B4               	lsrf	___ftpack@arg+2,f
  6641  16B6  0CB3               	rrf	___ftpack@arg+1,f
  6642  16B7  0CB2               	rrf	___ftpack@arg,f
  6643  16B8  0B89               	decfsz	9,f
  6644  16B9  2EB5               	goto	u4435
  6645  16BA                     l2974:	
  6646  16BA  30FE               	movlw	254
  6647  16BB  0534               	andwf	___ftpack@arg+2,w
  6648  16BC  1903               	btfsc	3,2
  6649  16BD  2ED3               	goto	l467
  6650  16BE  2EB0               	goto	l2972
  6651  16BF                     l2976:	
  6652  16BF  3001               	movlw	1
  6653  16C0  00B7               	movwf	??___ftpack
  6654  16C1  0837               	movf	??___ftpack,w
  6655  16C2  07B5               	addwf	___ftpack@exp,f
  6656  16C3  3001               	movlw	1
  6657  16C4  07B2               	addwf	___ftpack@arg,f
  6658  16C5  3000               	movlw	0
  6659  16C6  1803               	skipnc
  6660  16C7  3001               	movlw	1
  6661  16C8  07B3               	addwf	___ftpack@arg+1,f
  6662  16C9  3000               	movlw	0
  6663  16CA  1803               	skipnc
  6664  16CB  3001               	movlw	1
  6665  16CC  07B4               	addwf	___ftpack@arg+2,f
  6666  16CD  3001               	movlw	1
  6667  16CE                     u4455:	
  6668  16CE  36B4               	lsrf	___ftpack@arg+2,f
  6669  16CF  0CB3               	rrf	___ftpack@arg+1,f
  6670  16D0  0CB2               	rrf	___ftpack@arg,f
  6671  16D1  0B89               	decfsz	9,f
  6672  16D2  2ECE               	goto	u4455
  6673  16D3                     l467:	
  6674  16D3  30FF               	movlw	255
  6675  16D4  0534               	andwf	___ftpack@arg+2,w
  6676  16D5  1903               	btfsc	3,2
  6677  16D6  2EE0               	goto	l2984
  6678  16D7  2EBF               	goto	l2976
  6679  16D8                     l2982:	
  6680  16D8  3001               	movlw	1
  6681  16D9  02B5               	subwf	___ftpack@exp,f
  6682  16DA  3001               	movlw	1
  6683  16DB                     u4475:	
  6684  16DB  35B2               	lslf	___ftpack@arg,f
  6685  16DC  0DB3               	rlf	___ftpack@arg+1,f
  6686  16DD  0DB4               	rlf	___ftpack@arg+2,f
  6687  16DE  0B89               	decfsz	9,f
  6688  16DF  2EDB               	goto	u4475
  6689  16E0                     l2984:	
  6690  16E0  1BB3               	btfsc	___ftpack@arg+1,7
  6691  16E1  2EE6               	goto	l474
  6692  16E2  3002               	movlw	2
  6693  16E3  0235               	subwf	___ftpack@exp,w
  6694  16E4  1803               	skipnc
  6695  16E5  2ED8               	goto	l2982
  6696  16E6                     l474:	
  6697  16E6  1835               	btfsc	___ftpack@exp,0
  6698  16E7  2EEE               	goto	l475
  6699  16E8  30FF               	movlw	255
  6700  16E9  05B2               	andwf	___ftpack@arg,f
  6701  16EA  307F               	movlw	127
  6702  16EB  05B3               	andwf	___ftpack@arg+1,f
  6703  16EC  30FF               	movlw	255
  6704  16ED  05B4               	andwf	___ftpack@arg+2,f
  6705  16EE                     l475:	
  6706  16EE  1003               	clrc
  6707  16EF  0CB5               	rrf	___ftpack@exp,f
  6708  16F0  0835               	movf	___ftpack@exp,w
  6709  16F1  00B7               	movwf	??___ftpack
  6710  16F2  01B8               	clrf	??___ftpack+1
  6711  16F3  01B9               	clrf	??___ftpack+2
  6712  16F4  3010               	movlw	16
  6713  16F5                     u4515:	
  6714  16F5  35B7               	lslf	??___ftpack,f
  6715  16F6  0DB8               	rlf	??___ftpack+1,f
  6716  16F7  0DB9               	rlf	??___ftpack+2,f
  6717  16F8  0B89               	decfsz	9,f
  6718  16F9  2EF5               	goto	u4515
  6719  16FA  0837               	movf	??___ftpack,w
  6720  16FB  04B2               	iorwf	___ftpack@arg,f
  6721  16FC  0838               	movf	??___ftpack+1,w
  6722  16FD  04B3               	iorwf	___ftpack@arg+1,f
  6723  16FE  0839               	movf	??___ftpack+2,w
  6724  16FF  04B4               	iorwf	___ftpack@arg+2,f
  6725  1700  0836               	movf	___ftpack@sign,w
  6726  1701  1903               	btfsc	3,2
  6727  1702  0008               	return
  6728  1703  17B4               	bsf	___ftpack@arg+2,7
  6729  1704  0008               	return
  6730  1705                     __end_of___ftpack:	
  6731                           
  6732                           	psect	text18
  6733  07F5                     __ptext18:	
  6734 ;; *************** function ___ftneg *****************
  6735 ;; Defined at:
  6736 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\ftneg.c"
  6737 ;; Parameters:    Size  Location     Type
  6738 ;;  f1              3   18[BANK0 ] float 
  6739 ;; Auto vars:     Size  Location     Type
  6740 ;;		None
  6741 ;; Return value:  Size  Location     Type
  6742 ;;                  3   18[BANK0 ] float 
  6743 ;; Registers used:
  6744 ;;		wreg
  6745 ;; Tracked objects:
  6746 ;;		On entry : 0/0
  6747 ;;		On exit  : 0/0
  6748 ;;		Unchanged: 0/0
  6749 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
  6750 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  6751 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  6752 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  6753 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  6754 ;;Total ram usage:        3 bytes
  6755 ;; Hardware stack levels used:    1
  6756 ;; Hardware stack levels required when called:    3
  6757 ;; This function calls:
  6758 ;;		Nothing
  6759 ;; This function is called by:
  6760 ;;		_sprintf
  6761 ;; This function uses a non-reentrant model
  6762 ;;
  6763                           
  6764                           
  6765                           ;psect for function ___ftneg
  6766  07F5                     ___ftneg:	
  6767                           
  6768                           ;incstack = 0
  6769                           ; Regs used in ___ftneg: [wreg]
  6770  07F5  0140               	movlb	0	; select bank0
  6771  07F6  0834               	movf	___ftneg@f1+2,w
  6772  07F7  0433               	iorwf	___ftneg@f1+1,w
  6773  07F8  0432               	iorwf	___ftneg@f1,w
  6774  07F9  1903               	skipnz
  6775  07FA  0008               	return
  6776  07FB  3080               	movlw	128
  6777  07FC  06B4               	xorwf	___ftneg@f1+2,f
  6778  07FD  0008               	return
  6779  07FE                     __end_of___ftneg:	
  6780                           
  6781                           	psect	text19
  6782  1481                     __ptext19:	
  6783 ;; *************** function ___ftge *****************
  6784 ;; Defined at:
  6785 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\ftge.c"
  6786 ;; Parameters:    Size  Location     Type
  6787 ;;  ff1             3   18[BANK0 ] float 
  6788 ;;  ff2             3   21[BANK0 ] float 
  6789 ;; Auto vars:     Size  Location     Type
  6790 ;;		None
  6791 ;; Return value:  Size  Location     Type
  6792 ;;		None               void
  6793 ;; Registers used:
  6794 ;;		wreg, status,2, status,0
  6795 ;; Tracked objects:
  6796 ;;		On entry : 0/0
  6797 ;;		On exit  : 0/0
  6798 ;;		Unchanged: 0/0
  6799 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
  6800 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  6801 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  6802 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  6803 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  6804 ;;Total ram usage:        9 bytes
  6805 ;; Hardware stack levels used:    1
  6806 ;; Hardware stack levels required when called:    3
  6807 ;; This function calls:
  6808 ;;		Nothing
  6809 ;; This function is called by:
  6810 ;;		_sprintf
  6811 ;; This function uses a non-reentrant model
  6812 ;;
  6813                           
  6814                           
  6815                           ;psect for function ___ftge
  6816  1481                     ___ftge:	
  6817                           
  6818                           ;incstack = 0
  6819                           ; Regs used in ___ftge: [wreg+status,2+status,0]
  6820  1481  0140               	movlb	0	; select bank0
  6821  1482  1FB4               	btfss	___ftge@ff1+2,7
  6822  1483  2C98               	goto	l2324
  6823  1484  0932               	comf	___ftge@ff1,w
  6824  1485  00B8               	movwf	??___ftge
  6825  1486  0933               	comf	___ftge@ff1+1,w
  6826  1487  00B9               	movwf	??___ftge+1
  6827  1488  0934               	comf	___ftge@ff1+2,w
  6828  1489  00BA               	movwf	??___ftge+2
  6829  148A  0AB8               	incf	??___ftge,f
  6830  148B  1903               	skipnz
  6831  148C  0AB9               	incf	??___ftge+1,f
  6832  148D  1903               	skipnz
  6833  148E  0ABA               	incf	??___ftge+2,f
  6834  148F  3000               	movlw	0
  6835  1490  0738               	addwf	??___ftge,w
  6836  1491  00B2               	movwf	___ftge@ff1
  6837  1492  3000               	movlw	0
  6838  1493  3D39               	addwfc	??___ftge+1,w
  6839  1494  00B3               	movwf	___ftge@ff1+1
  6840  1495  3080               	movlw	128
  6841  1496  3D3A               	addwfc	??___ftge+2,w
  6842  1497  00B4               	movwf	___ftge@ff1+2
  6843  1498                     l2324:	
  6844  1498  1FB7               	btfss	___ftge@ff2+2,7
  6845  1499  2CAE               	goto	l2328
  6846  149A  0935               	comf	___ftge@ff2,w
  6847  149B  00B8               	movwf	??___ftge
  6848  149C  0936               	comf	___ftge@ff2+1,w
  6849  149D  00B9               	movwf	??___ftge+1
  6850  149E  0937               	comf	___ftge@ff2+2,w
  6851  149F  00BA               	movwf	??___ftge+2
  6852  14A0  0AB8               	incf	??___ftge,f
  6853  14A1  1903               	skipnz
  6854  14A2  0AB9               	incf	??___ftge+1,f
  6855  14A3  1903               	skipnz
  6856  14A4  0ABA               	incf	??___ftge+2,f
  6857  14A5  3000               	movlw	0
  6858  14A6  0738               	addwf	??___ftge,w
  6859  14A7  00B5               	movwf	___ftge@ff2
  6860  14A8  3000               	movlw	0
  6861  14A9  3D39               	addwfc	??___ftge+1,w
  6862  14AA  00B6               	movwf	___ftge@ff2+1
  6863  14AB  3080               	movlw	128
  6864  14AC  3D3A               	addwfc	??___ftge+2,w
  6865  14AD  00B7               	movwf	___ftge@ff2+2
  6866  14AE                     l2328:	
  6867  14AE  3080               	movlw	128
  6868  14AF  06B4               	xorwf	___ftge@ff1+2,f
  6869  14B0  3080               	movlw	128
  6870  14B1  06B7               	xorwf	___ftge@ff2+2,f
  6871  14B2  0837               	movf	___ftge@ff2+2,w
  6872  14B3  0234               	subwf	___ftge@ff1+2,w
  6873  14B4  1D03               	skipz
  6874  14B5  0008               	return
  6875  14B6  0836               	movf	___ftge@ff2+1,w
  6876  14B7  0233               	subwf	___ftge@ff1+1,w
  6877  14B8  1D03               	skipz
  6878  14B9  0008               	return
  6879  14BA  0835               	movf	___ftge@ff2,w
  6880  14BB  0232               	subwf	___ftge@ff1,w
  6881  14BC  0008               	return
  6882  14BD                     __end_of___ftge:	
  6883                           
  6884                           	psect	text20
  6885  1446                     __ptext20:	
  6886 ;; *************** function _Lcd_Out2 *****************
  6887 ;; Defined at:
  6888 ;;		line 115 in file "flex_lcd.h"
  6889 ;; Parameters:    Size  Location     Type
  6890 ;;  y               1    wreg     unsigned char 
  6891 ;;  x               1   21[BANK0 ] unsigned char 
  6892 ;;  buffer          1   22[BANK0 ] PTR unsigned char 
  6893 ;;		 -> main@buffer1(16), 
  6894 ;; Auto vars:     Size  Location     Type
  6895 ;;  y               1   24[BANK0 ] unsigned char 
  6896 ;;  data            1   25[BANK0 ] unsigned char 
  6897 ;; Return value:  Size  Location     Type
  6898 ;;                  1    wreg      void 
  6899 ;; Registers used:
  6900 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6901 ;; Tracked objects:
  6902 ;;		On entry : 0/0
  6903 ;;		On exit  : 0/0
  6904 ;;		Unchanged: 0/0
  6905 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
  6906 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  6907 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  6908 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  6909 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  6910 ;;Total ram usage:        5 bytes
  6911 ;; Hardware stack levels used:    1
  6912 ;; Hardware stack levels required when called:    4
  6913 ;; This function calls:
  6914 ;;		_Lcd_Chr_CP
  6915 ;;		_Lcd_Cmd
  6916 ;; This function is called by:
  6917 ;;		_main
  6918 ;; This function uses a non-reentrant model
  6919 ;;
  6920                           
  6921                           
  6922                           ;psect for function _Lcd_Out2
  6923  1446                     _Lcd_Out2:	
  6924                           
  6925                           ;incstack = 0
  6926                           ; Regs used in _Lcd_Out2: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  6927                           ;Lcd_Out2@y stored from wreg
  6928  1446  0140               	movlb	0	; select bank0
  6929  1447  00B8               	movwf	Lcd_Out2@y
  6930                           
  6931                           ;flex_lcd.h: 117: unsigned char data;
  6932                           ;flex_lcd.h: 118: switch (y)
  6933  1448  2C58               	goto	l2546
  6934  1449                     l2536:	
  6935                           ;flex_lcd.h: 119: {
  6936                           ;flex_lcd.h: 120: case 1: data = 128 + x; break;
  6937                           
  6938  1449  0835               	movf	Lcd_Out2@x,w
  6939  144A  3E80               	addlw	128
  6940  144B  2C54               	goto	L10
  6941  144C                     l2538:	
  6942                           ;flex_lcd.h: 121: case 2: data = 192 + x; break;
  6943                           
  6944  144C  0835               	movf	Lcd_Out2@x,w
  6945  144D  3EC0               	addlw	192
  6946  144E  2C54               	goto	L10
  6947  144F                     l2540:	
  6948                           ;flex_lcd.h: 122: case 3: data = 148 + x; break;
  6949                           
  6950  144F  0835               	movf	Lcd_Out2@x,w
  6951  1450  3E94               	addlw	148
  6952  1451  2C54               	goto	L10
  6953  1452                     l2542:	
  6954                           ;flex_lcd.h: 123: case 4: data = 212 + x; break;
  6955                           
  6956  1452  0835               	movf	Lcd_Out2@x,w
  6957  1453  3ED4               	addlw	212
  6958  1454                     L10:	
  6959  1454  00B7               	movwf	??_Lcd_Out2
  6960  1455  0837               	movf	??_Lcd_Out2,w
  6961  1456  00B9               	movwf	Lcd_Out2@data
  6962                           
  6963                           ;flex_lcd.h: 125: }
  6964                           
  6965                           ;flex_lcd.h: 124: default: break;
  6966  1457  2C66               	goto	l2548
  6967  1458                     l2546:	
  6968  1458  0838               	movf	Lcd_Out2@y,w
  6969                           
  6970                           ; Switch size 1, requested type "space"
  6971                           ; Number of cases is 4, Range of values is 1 to 4
  6972                           ; switch strategies available:
  6973                           ; Name         Instructions Cycles
  6974                           ; simple_byte           13     7 (average)
  6975                           ; direct_byte           17     9 (fixed)
  6976                           ; jumptable            263     9 (fixed)
  6977                           ;	Chosen strategy is simple_byte
  6978  1459  3A01               	xorlw	1	; case 1
  6979  145A  1903               	skipnz
  6980  145B  2C49               	goto	l2536
  6981  145C  3A03               	xorlw	3	; case 2
  6982  145D  1903               	skipnz
  6983  145E  2C4C               	goto	l2538
  6984  145F  3A01               	xorlw	1	; case 3
  6985  1460  1903               	skipnz
  6986  1461  2C4F               	goto	l2540
  6987  1462  3A07               	xorlw	7	; case 4
  6988  1463  1903               	skipnz
  6989  1464  2C52               	goto	l2542
  6990  1465  2C66               	goto	l2548
  6991  1466                     l2548:	
  6992                           
  6993                           ;flex_lcd.h: 126: Lcd_Cmd(data);
  6994  1466  0839               	movf	Lcd_Out2@data,w
  6995  1467  3188  2006  3194   	fcall	_Lcd_Cmd
  6996  146A                     l2554:	
  6997                           ;flex_lcd.h: 127: while(*buffer)
  6998                           
  6999  146A  0140               	movlb	0	; select bank0
  7000  146B  0836               	movf	Lcd_Out2@buffer,w
  7001  146C  0086               	movwf	6
  7002  146D  3001               	movlw	1	; select bank2/3
  7003  146E  0087               	movwf	7
  7004  146F  0801               	movf	1,w
  7005  1470  1903               	btfsc	3,2
  7006  1471  0008               	return
  7007                           
  7008                           ;flex_lcd.h: 128: {
  7009                           ;flex_lcd.h: 129: Lcd_Chr_CP(*buffer);
  7010  1472  0140               	movlb	0	; select bank0
  7011  1473  0836               	movf	Lcd_Out2@buffer,w
  7012  1474  0086               	movwf	6
  7013  1475  3001               	movlw	1	; select bank2/3
  7014  1476  0087               	movwf	7
  7015  1477  0801               	movf	1,w
  7016  1478  3187  275E  3194   	fcall	_Lcd_Chr_CP
  7017                           
  7018                           ;flex_lcd.h: 130: buffer++;
  7019  147B  3001               	movlw	1
  7020  147C  0140               	movlb	0	; select bank0
  7021  147D  00B7               	movwf	??_Lcd_Out2
  7022  147E  0837               	movf	??_Lcd_Out2,w
  7023  147F  07B6               	addwf	Lcd_Out2@buffer,f
  7024  1480  2C6A               	goto	l2554
  7025  1481                     __end_of_Lcd_Out2:	
  7026                           ;flex_lcd.h: 131: }
  7027                           ;flex_lcd.h: 132: return;
  7028                           
  7029                           
  7030                           	psect	text21
  7031  075E                     __ptext21:	
  7032 ;; *************** function _Lcd_Chr_CP *****************
  7033 ;; Defined at:
  7034 ;;		line 136 in file "flex_lcd.h"
  7035 ;; Parameters:    Size  Location     Type
  7036 ;;  data            1    wreg     unsigned char 
  7037 ;; Auto vars:     Size  Location     Type
  7038 ;;  data            1   20[BANK0 ] unsigned char 
  7039 ;; Return value:  Size  Location     Type
  7040 ;;                  1    wreg      void 
  7041 ;; Registers used:
  7042 ;;		wreg, status,2, status,0
  7043 ;; Tracked objects:
  7044 ;;		On entry : 0/0
  7045 ;;		On exit  : 0/0
  7046 ;;		Unchanged: 0/0
  7047 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
  7048 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  7049 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  7050 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  7051 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  7052 ;;Total ram usage:        3 bytes
  7053 ;; Hardware stack levels used:    1
  7054 ;; Hardware stack levels required when called:    3
  7055 ;; This function calls:
  7056 ;;		Nothing
  7057 ;; This function is called by:
  7058 ;;		_Lcd_Out2
  7059 ;;		_Lcd_Out
  7060 ;; This function uses a non-reentrant model
  7061 ;;
  7062                           
  7063                           
  7064                           ;psect for function _Lcd_Chr_CP
  7065  075E                     _Lcd_Chr_CP:	
  7066                           
  7067                           ;incstack = 0
  7068                           ; Regs used in _Lcd_Chr_CP: [wreg+status,2+status,0]
  7069                           ;Lcd_Chr_CP@data stored from wreg
  7070  075E  0140               	movlb	0	; select bank0
  7071  075F  00B4               	movwf	Lcd_Chr_CP@data
  7072                           
  7073                           ;flex_lcd.h: 137: PORTDbits.RD3 = 0; PORTDbits.RD2 = 1;
  7074  0760  118F               	bcf	15,3	;volatile
  7075  0761  150F               	bsf	15,2	;volatile
  7076                           
  7077                           ;flex_lcd.h: 138: PORTCbits.RC3 = (data & 0b10000000)>>7; PORTDbits.RD0 = (data & 0b0100
      +                          0000)>>6;
  7078  0762  0834               	movf	Lcd_Chr_CP@data,w
  7079  0763  00B2               	movwf	??_Lcd_Chr_CP
  7080  0764  3007               	movlw	7
  7081  0765                     u2975:	
  7082  0765  36B2               	lsrf	??_Lcd_Chr_CP,f
  7083  0766  0B89               	decfsz	9,f
  7084  0767  2F65               	goto	u2975
  7085  0768  0832               	movf	??_Lcd_Chr_CP,w
  7086  0769  3901               	andlw	1
  7087  076A  00B3               	movwf	??_Lcd_Chr_CP+1
  7088  076B  0DB3               	rlf	??_Lcd_Chr_CP+1,f
  7089  076C  0DB3               	rlf	??_Lcd_Chr_CP+1,f
  7090  076D  0DB3               	rlf	??_Lcd_Chr_CP+1,f
  7091  076E  080E               	movf	14,w	;volatile
  7092  076F  0633               	xorwf	??_Lcd_Chr_CP+1,w
  7093  0770  39F7               	andlw	-9
  7094  0771  0633               	xorwf	??_Lcd_Chr_CP+1,w
  7095  0772  008E               	movwf	14	;volatile
  7096  0773  0834               	movf	Lcd_Chr_CP@data,w
  7097  0774  00B2               	movwf	??_Lcd_Chr_CP
  7098  0775  3006               	movlw	6
  7099  0776                     u2985:	
  7100  0776  36B2               	lsrf	??_Lcd_Chr_CP,f
  7101  0777  0B89               	decfsz	9,f
  7102  0778  2F76               	goto	u2985
  7103  0779  3001               	movlw	1
  7104  077A  0532               	andwf	??_Lcd_Chr_CP,w
  7105  077B  00B3               	movwf	??_Lcd_Chr_CP+1
  7106  077C  080F               	movf	15,w	;volatile
  7107  077D  0633               	xorwf	??_Lcd_Chr_CP+1,w
  7108  077E  39FE               	andlw	-2
  7109  077F  0633               	xorwf	??_Lcd_Chr_CP+1,w
  7110  0780  008F               	movwf	15	;volatile
  7111                           
  7112                           ;flex_lcd.h: 139: PORTDbits.RD1 = (data & 0b00100000)>>5; PORTCbits.RC4 = (data & 0b0001
      +                          0000)>>4;
  7113  0781  0834               	movf	Lcd_Chr_CP@data,w
  7114  0782  00B2               	movwf	??_Lcd_Chr_CP
  7115  0783  3005               	movlw	5
  7116  0784                     u2995:	
  7117  0784  36B2               	lsrf	??_Lcd_Chr_CP,f
  7118  0785  0B89               	decfsz	9,f
  7119  0786  2F84               	goto	u2995
  7120  0787  0832               	movf	??_Lcd_Chr_CP,w
  7121  0788  3901               	andlw	1
  7122  0789  00B3               	movwf	??_Lcd_Chr_CP+1
  7123  078A  0DB3               	rlf	??_Lcd_Chr_CP+1,f
  7124  078B  080F               	movf	15,w	;volatile
  7125  078C  0633               	xorwf	??_Lcd_Chr_CP+1,w
  7126  078D  39FD               	andlw	-3
  7127  078E  0633               	xorwf	??_Lcd_Chr_CP+1,w
  7128  078F  008F               	movwf	15	;volatile
  7129  0790  0834               	movf	Lcd_Chr_CP@data,w
  7130  0791  00B2               	movwf	??_Lcd_Chr_CP
  7131  0792  3004               	movlw	4
  7132  0793                     u3005:	
  7133  0793  36B2               	lsrf	??_Lcd_Chr_CP,f
  7134  0794  0B89               	decfsz	9,f
  7135  0795  2F93               	goto	u3005
  7136  0796  0832               	movf	??_Lcd_Chr_CP,w
  7137  0797  3901               	andlw	1
  7138  0798  00B3               	movwf	??_Lcd_Chr_CP+1
  7139  0799  0EB3               	swapf	??_Lcd_Chr_CP+1,f
  7140  079A  080E               	movf	14,w	;volatile
  7141  079B  0633               	xorwf	??_Lcd_Chr_CP+1,w
  7142  079C  39EF               	andlw	-17
  7143  079D  0633               	xorwf	??_Lcd_Chr_CP+1,w
  7144  079E  008E               	movwf	14	;volatile
  7145                           
  7146                           ;flex_lcd.h: 140: _delay(10);
  7147  079F  3003               	movlw	3
  7148  07A0                     u5387:	
  7149  07A0  0B89               	decfsz	9,f
  7150  07A1  2FA0               	goto	u5387
  7151  07A2  0000               	nop
  7152                           
  7153                           ;flex_lcd.h: 141: PORTDbits.RD3 = 1; _delay((unsigned long)((5)*(32000000/4000000.0))); 
      +                          PORTDbits.RD3 = 0;
  7154  07A3  0140               	movlb	0	; select bank0
  7155  07A4  158F               	bsf	15,3	;volatile
  7156  07A5  300D               	movlw	13
  7157  07A6                     u5397:	
  7158  07A6  0B89               	decfsz	9,f
  7159  07A7  2FA6               	goto	u5397
  7160  07A8  0000               	nop
  7161  07A9  0140               	movlb	0	; select bank0
  7162  07AA  118F               	bcf	15,3	;volatile
  7163                           
  7164                           ;flex_lcd.h: 142: PORTCbits.RC3 = (data & 0b00001000)>>3; PORTDbits.RD0 = (data & 0b0000
      +                          0100)>>2;
  7165  07AB  0834               	movf	Lcd_Chr_CP@data,w
  7166  07AC  00B2               	movwf	??_Lcd_Chr_CP
  7167  07AD  3003               	movlw	3
  7168  07AE                     u3015:	
  7169  07AE  36B2               	lsrf	??_Lcd_Chr_CP,f
  7170  07AF  0B89               	decfsz	9,f
  7171  07B0  2FAE               	goto	u3015
  7172  07B1  0832               	movf	??_Lcd_Chr_CP,w
  7173  07B2  3901               	andlw	1
  7174  07B3  00B3               	movwf	??_Lcd_Chr_CP+1
  7175  07B4  0DB3               	rlf	??_Lcd_Chr_CP+1,f
  7176  07B5  0DB3               	rlf	??_Lcd_Chr_CP+1,f
  7177  07B6  0DB3               	rlf	??_Lcd_Chr_CP+1,f
  7178  07B7  080E               	movf	14,w	;volatile
  7179  07B8  0633               	xorwf	??_Lcd_Chr_CP+1,w
  7180  07B9  39F7               	andlw	-9
  7181  07BA  0633               	xorwf	??_Lcd_Chr_CP+1,w
  7182  07BB  008E               	movwf	14	;volatile
  7183  07BC  0834               	movf	Lcd_Chr_CP@data,w
  7184  07BD  00B2               	movwf	??_Lcd_Chr_CP
  7185  07BE  3002               	movlw	2
  7186  07BF                     u3025:	
  7187  07BF  36B2               	lsrf	??_Lcd_Chr_CP,f
  7188  07C0  0B89               	decfsz	9,f
  7189  07C1  2FBF               	goto	u3025
  7190  07C2  3001               	movlw	1
  7191  07C3  0532               	andwf	??_Lcd_Chr_CP,w
  7192  07C4  00B3               	movwf	??_Lcd_Chr_CP+1
  7193  07C5  080F               	movf	15,w	;volatile
  7194  07C6  0633               	xorwf	??_Lcd_Chr_CP+1,w
  7195  07C7  39FE               	andlw	-2
  7196  07C8  0633               	xorwf	??_Lcd_Chr_CP+1,w
  7197  07C9  008F               	movwf	15	;volatile
  7198                           
  7199                           ;flex_lcd.h: 143: PORTDbits.RD1 = (data & 0b00000010)>>1; PORTCbits.RC4 = (data & 0b0000
      +                          0001);
  7200  07CA  3634               	lsrf	Lcd_Chr_CP@data,w
  7201  07CB  3901               	andlw	1
  7202  07CC  00B2               	movwf	??_Lcd_Chr_CP
  7203  07CD  0DB2               	rlf	??_Lcd_Chr_CP,f
  7204  07CE  080F               	movf	15,w	;volatile
  7205  07CF  0632               	xorwf	??_Lcd_Chr_CP,w
  7206  07D0  39FD               	andlw	-3
  7207  07D1  0632               	xorwf	??_Lcd_Chr_CP,w
  7208  07D2  008F               	movwf	15	;volatile
  7209  07D3  0834               	movf	Lcd_Chr_CP@data,w
  7210  07D4  3901               	andlw	1
  7211  07D5  00B2               	movwf	??_Lcd_Chr_CP
  7212  07D6  0EB2               	swapf	??_Lcd_Chr_CP,f
  7213  07D7  080E               	movf	14,w	;volatile
  7214  07D8  0632               	xorwf	??_Lcd_Chr_CP,w
  7215  07D9  39EF               	andlw	-17
  7216  07DA  0632               	xorwf	??_Lcd_Chr_CP,w
  7217  07DB  008E               	movwf	14	;volatile
  7218                           
  7219                           ;flex_lcd.h: 144: _delay(10);
  7220  07DC  3003               	movlw	3
  7221  07DD                     u5407:	
  7222  07DD  0B89               	decfsz	9,f
  7223  07DE  2FDD               	goto	u5407
  7224  07DF  0000               	nop
  7225                           
  7226                           ;flex_lcd.h: 145: PORTDbits.RD3 = 1; _delay((unsigned long)((5)*(32000000/4000000.0))); 
      +                          PORTDbits.RD3 = 0;
  7227  07E0  0140               	movlb	0	; select bank0
  7228  07E1  158F               	bsf	15,3	;volatile
  7229  07E2  300D               	movlw	13
  7230  07E3                     u5417:	
  7231  07E3  0B89               	decfsz	9,f
  7232  07E4  2FE3               	goto	u5417
  7233  07E5  0000               	nop
  7234  07E6  0140               	movlb	0	; select bank0
  7235  07E7  118F               	bcf	15,3	;volatile
  7236                           
  7237                           ;flex_lcd.h: 146: _delay((unsigned long)((5)*(32000000/4000000.0))); _delay((unsigned lo
      +                          ng)((5500)*(32000000/4000000.0)));
  7238  07E8  300D               	movlw	13
  7239  07E9                     u5427:	
  7240  07E9  0B89               	decfsz	9,f
  7241  07EA  2FE9               	goto	u5427
  7242  07EB  0000               	nop
  7243  07EC  303A               	movlw	58
  7244  07ED  0140               	movlb	0	; select bank0
  7245  07EE  00B2               	movwf	??_Lcd_Chr_CP
  7246  07EF  3023               	movlw	35
  7247  07F0                     u5437:	
  7248  07F0  0B89               	decfsz	9,f
  7249  07F1  2FF0               	goto	u5437
  7250  07F2  0BB2               	decfsz	??_Lcd_Chr_CP,f
  7251  07F3  2FF0               	goto	u5437
  7252  07F4  0008               	return
  7253  07F5                     __end_of_Lcd_Chr_CP:	
  7254                           
  7255                           	psect	text22
  7256  0942                     __ptext22:	
  7257 ;; *************** function _Lcd_Init *****************
  7258 ;; Defined at:
  7259 ;;		line 52 in file "flex_lcd.h"
  7260 ;; Parameters:    Size  Location     Type
  7261 ;;		None
  7262 ;; Auto vars:     Size  Location     Type
  7263 ;;  data            1   22[BANK0 ] unsigned char 
  7264 ;; Return value:  Size  Location     Type
  7265 ;;                  1    wreg      void 
  7266 ;; Registers used:
  7267 ;;		wreg, status,2, status,0, pclath, cstack
  7268 ;; Tracked objects:
  7269 ;;		On entry : 0/0
  7270 ;;		On exit  : 0/0
  7271 ;;		Unchanged: 0/0
  7272 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
  7273 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  7274 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  7275 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  7276 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  7277 ;;Total ram usage:        2 bytes
  7278 ;; Hardware stack levels used:    1
  7279 ;; Hardware stack levels required when called:    4
  7280 ;; This function calls:
  7281 ;;		_Lcd_Cmd
  7282 ;; This function is called by:
  7283 ;;		_main
  7284 ;; This function uses a non-reentrant model
  7285 ;;
  7286                           
  7287                           
  7288                           ;psect for function _Lcd_Init
  7289  0942                     _Lcd_Init:	
  7290                           
  7291                           ;flex_lcd.h: 53: unsigned char data;
  7292                           ;flex_lcd.h: 54: TRISCbits.TRISC3 = 0;
  7293                           
  7294                           ;incstack = 0
  7295                           ; Regs used in _Lcd_Init: [wreg+status,2+status,0+pclath+cstack]
  7296  0942  0140               	movlb	0	; select bank0
  7297  0943  1193               	bcf	19,3	;volatile
  7298                           
  7299                           ;flex_lcd.h: 55: TRISDbits.TRISD0 = 0;
  7300  0944  1014               	bcf	20,0	;volatile
  7301                           
  7302                           ;flex_lcd.h: 56: TRISDbits.TRISD1 = 0;
  7303  0945  1094               	bcf	20,1	;volatile
  7304                           
  7305                           ;flex_lcd.h: 57: TRISCbits.TRISC4 = 0;
  7306  0946  1213               	bcf	19,4	;volatile
  7307                           
  7308                           ;flex_lcd.h: 58: TRISDbits.TRISD3 = 0;
  7309  0947  1194               	bcf	20,3	;volatile
  7310                           
  7311                           ;flex_lcd.h: 59: TRISDbits.TRISD2 = 0;
  7312  0948  1114               	bcf	20,2	;volatile
  7313                           
  7314                           ;flex_lcd.h: 60: PORTCbits.RC3 = 0;
  7315  0949  118E               	bcf	14,3	;volatile
  7316                           
  7317                           ;flex_lcd.h: 61: PORTDbits.RD0 = 0;
  7318  094A  100F               	bcf	15,0	;volatile
  7319                           
  7320                           ;flex_lcd.h: 62: PORTDbits.RD1 = 0;
  7321  094B  108F               	bcf	15,1	;volatile
  7322                           
  7323                           ;flex_lcd.h: 63: PORTCbits.RC4 = 0;
  7324  094C  120E               	bcf	14,4	;volatile
  7325                           
  7326                           ;flex_lcd.h: 64: PORTDbits.RD3 = 0;
  7327  094D  118F               	bcf	15,3	;volatile
  7328                           
  7329                           ;flex_lcd.h: 65: PORTDbits.RD2 = 0;
  7330  094E  110F               	bcf	15,2	;volatile
  7331                           
  7332                           ;flex_lcd.h: 66: _delay((unsigned long)((5500)*(32000000/4000000.0)));
  7333  094F  303A               	movlw	58
  7334  0950  0140               	movlb	0	; select bank0
  7335  0951  00B5               	movwf	??_Lcd_Init
  7336  0952  3023               	movlw	35
  7337  0953                     u5447:	
  7338  0953  0B89               	decfsz	9,f
  7339  0954  2953               	goto	u5447
  7340  0955  0BB5               	decfsz	??_Lcd_Init,f
  7341  0956  2953               	goto	u5447
  7342                           
  7343                           ;flex_lcd.h: 67: _delay((unsigned long)((5500)*(32000000/4000000.0)));
  7344  0957  303A               	movlw	58
  7345  0958  0140               	movlb	0	; select bank0
  7346  0959  00B5               	movwf	??_Lcd_Init
  7347  095A  3023               	movlw	35
  7348  095B                     u5457:	
  7349  095B  0B89               	decfsz	9,f
  7350  095C  295B               	goto	u5457
  7351  095D  0BB5               	decfsz	??_Lcd_Init,f
  7352  095E  295B               	goto	u5457
  7353                           
  7354                           ;flex_lcd.h: 68: _delay((unsigned long)((5500)*(32000000/4000000.0)));
  7355  095F  303A               	movlw	58
  7356  0960  0140               	movlb	0	; select bank0
  7357  0961  00B5               	movwf	??_Lcd_Init
  7358  0962  3023               	movlw	35
  7359  0963                     u5467:	
  7360  0963  0B89               	decfsz	9,f
  7361  0964  2963               	goto	u5467
  7362  0965  0BB5               	decfsz	??_Lcd_Init,f
  7363  0966  2963               	goto	u5467
  7364                           
  7365                           ;flex_lcd.h: 69: _delay((unsigned long)((5500)*(32000000/4000000.0)));
  7366  0967  303A               	movlw	58
  7367  0968  0140               	movlb	0	; select bank0
  7368  0969  00B5               	movwf	??_Lcd_Init
  7369  096A  3023               	movlw	35
  7370  096B                     u5477:	
  7371  096B  0B89               	decfsz	9,f
  7372  096C  296B               	goto	u5477
  7373  096D  0BB5               	decfsz	??_Lcd_Init,f
  7374  096E  296B               	goto	u5477
  7375                           
  7376                           ;flex_lcd.h: 70: _delay((unsigned long)((5500)*(32000000/4000000.0)));
  7377  096F  303A               	movlw	58
  7378  0970  0140               	movlb	0	; select bank0
  7379  0971  00B5               	movwf	??_Lcd_Init
  7380  0972  3023               	movlw	35
  7381  0973                     u5487:	
  7382  0973  0B89               	decfsz	9,f
  7383  0974  2973               	goto	u5487
  7384  0975  0BB5               	decfsz	??_Lcd_Init,f
  7385  0976  2973               	goto	u5487
  7386                           
  7387                           ;flex_lcd.h: 71: _delay((unsigned long)((5500)*(32000000/4000000.0)));
  7388  0977  303A               	movlw	58
  7389  0978  0140               	movlb	0	; select bank0
  7390  0979  00B5               	movwf	??_Lcd_Init
  7391  097A  3023               	movlw	35
  7392  097B                     u5497:	
  7393  097B  0B89               	decfsz	9,f
  7394  097C  297B               	goto	u5497
  7395  097D  0BB5               	decfsz	??_Lcd_Init,f
  7396  097E  297B               	goto	u5497
  7397                           
  7398                           ;flex_lcd.h: 72: for(data = 1; data < 4; data ++)
  7399  097F  0140               	movlb	0	; select bank0
  7400  0980  01B6               	clrf	Lcd_Init@data
  7401  0981  0AB6               	incf	Lcd_Init@data,f
  7402  0982  3004               	movlw	4
  7403  0983  0236               	subwf	Lcd_Init@data,w
  7404  0984  1803               	btfsc	3,0
  7405  0985  29AE               	goto	l52
  7406  0986                     l51:	
  7407                           
  7408                           ;flex_lcd.h: 73: {
  7409                           ;flex_lcd.h: 74: PORTCbits.RC3 = 0; PORTDbits.RD0 = 0; PORTDbits.RD1 = 1; PORTCbits.RC4 
      +                          = 1; PORTDbits.RD3 = 0;
  7410  0986  118E               	bcf	14,3	;volatile
  7411  0987  100F               	bcf	15,0	;volatile
  7412  0988  148F               	bsf	15,1	;volatile
  7413  0989  160E               	bsf	14,4	;volatile
  7414  098A  118F               	bcf	15,3	;volatile
  7415                           
  7416                           ;flex_lcd.h: 75: PORTDbits.RD2 = 0; PORTCbits.RC3 = 0; PORTDbits.RD0 = 0; PORTDbits.RD1 
      +                          = 1; PORTCbits.RC4 = 1;
  7417  098B  110F               	bcf	15,2	;volatile
  7418  098C  118E               	bcf	14,3	;volatile
  7419  098D  100F               	bcf	15,0	;volatile
  7420  098E  148F               	bsf	15,1	;volatile
  7421  098F  160E               	bsf	14,4	;volatile
  7422                           
  7423                           ;flex_lcd.h: 76: PORTDbits.RD3 = 1; PORTDbits.RD2 = 0;
  7424  0990  158F               	bsf	15,3	;volatile
  7425  0991  110F               	bcf	15,2	;volatile
  7426                           
  7427                           ;flex_lcd.h: 77: _delay((unsigned long)((5)*(32000000/4000000.0)));
  7428  0992  300D               	movlw	13
  7429  0993                     u5507:	
  7430  0993  0B89               	decfsz	9,f
  7431  0994  2993               	goto	u5507
  7432  0995  0000               	nop
  7433                           
  7434                           ;flex_lcd.h: 78: PORTCbits.RC3 = 0; PORTDbits.RD0 = 0; PORTDbits.RD1 = 1; PORTCbits.RC4 
      +                          = 1; PORTDbits.RD3 = 0;
  7435  0996  0140               	movlb	0	; select bank0
  7436  0997  118E               	bcf	14,3	;volatile
  7437  0998  100F               	bcf	15,0	;volatile
  7438  0999  148F               	bsf	15,1	;volatile
  7439  099A  160E               	bsf	14,4	;volatile
  7440  099B  118F               	bcf	15,3	;volatile
  7441                           
  7442                           ;flex_lcd.h: 79: PORTDbits.RD2 = 0;
  7443  099C  110F               	bcf	15,2	;volatile
  7444                           
  7445                           ;flex_lcd.h: 80: _delay((unsigned long)((5500)*(32000000/4000000.0)));
  7446  099D  303A               	movlw	58
  7447  099E  0140               	movlb	0	; select bank0
  7448  099F  00B5               	movwf	??_Lcd_Init
  7449  09A0  3023               	movlw	35
  7450  09A1                     u5517:	
  7451  09A1  0B89               	decfsz	9,f
  7452  09A2  29A1               	goto	u5517
  7453  09A3  0BB5               	decfsz	??_Lcd_Init,f
  7454  09A4  29A1               	goto	u5517
  7455  09A5  3001               	movlw	1
  7456  09A6  0140               	movlb	0	; select bank0
  7457  09A7  00B5               	movwf	??_Lcd_Init
  7458  09A8  0835               	movf	??_Lcd_Init,w
  7459  09A9  07B6               	addwf	Lcd_Init@data,f
  7460  09AA  3004               	movlw	4
  7461  09AB  0236               	subwf	Lcd_Init@data,w
  7462  09AC  1C03               	skipc
  7463  09AD  2986               	goto	l51
  7464  09AE                     l52:	
  7465                           
  7466                           ;flex_lcd.h: 81: }
  7467                           ;flex_lcd.h: 82: PORTCbits.RC3 = 0; PORTDbits.RD0 = 0; PORTDbits.RD1 = 1; PORTCbits.RC4 
      +                          = 0; PORTDbits.RD3 = 0; PORTDbits.RD2 = 0;
  7468  09AE  118E               	bcf	14,3	;volatile
  7469  09AF  100F               	bcf	15,0	;volatile
  7470  09B0  148F               	bsf	15,1	;volatile
  7471  09B1  120E               	bcf	14,4	;volatile
  7472  09B2  118F               	bcf	15,3	;volatile
  7473  09B3  110F               	bcf	15,2	;volatile
  7474                           
  7475                           ;flex_lcd.h: 83: PORTCbits.RC3 = 0; PORTDbits.RD0 = 0; PORTDbits.RD1 = 1; PORTCbits.RC4 
      +                          = 0; PORTDbits.RD3 = 1; PORTDbits.RD2 = 0;
  7476  09B4  118E               	bcf	14,3	;volatile
  7477  09B5  100F               	bcf	15,0	;volatile
  7478  09B6  148F               	bsf	15,1	;volatile
  7479  09B7  120E               	bcf	14,4	;volatile
  7480  09B8  158F               	bsf	15,3	;volatile
  7481  09B9  110F               	bcf	15,2	;volatile
  7482                           
  7483                           ;flex_lcd.h: 84: _delay((unsigned long)((5)*(32000000/4000000.0)));
  7484  09BA  300D               	movlw	13
  7485  09BB                     u5527:	
  7486  09BB  0B89               	decfsz	9,f
  7487  09BC  29BB               	goto	u5527
  7488  09BD  0000               	nop
  7489                           
  7490                           ;flex_lcd.h: 85: PORTCbits.RC3 = 0; PORTDbits.RD0 = 0; PORTDbits.RD1 = 1; PORTCbits.RC4 
      +                          = 0; PORTDbits.RD3 = 0; PORTDbits.RD2 = 0;
  7491  09BE  0140               	movlb	0	; select bank0
  7492  09BF  118E               	bcf	14,3	;volatile
  7493  09C0  100F               	bcf	15,0	;volatile
  7494  09C1  148F               	bsf	15,1	;volatile
  7495  09C2  120E               	bcf	14,4	;volatile
  7496  09C3  118F               	bcf	15,3	;volatile
  7497  09C4  110F               	bcf	15,2	;volatile
  7498                           
  7499                           ;flex_lcd.h: 86: _delay((unsigned long)((5500)*(32000000/4000000.0)));
  7500  09C5  303A               	movlw	58
  7501  09C6  0140               	movlb	0	; select bank0
  7502  09C7  00B5               	movwf	??_Lcd_Init
  7503  09C8  3023               	movlw	35
  7504  09C9                     u5537:	
  7505  09C9  0B89               	decfsz	9,f
  7506  09CA  29C9               	goto	u5537
  7507  09CB  0BB5               	decfsz	??_Lcd_Init,f
  7508  09CC  29C9               	goto	u5537
  7509                           
  7510                           ;flex_lcd.h: 87: data = 40; Lcd_Cmd(data);
  7511  09CD  3028               	movlw	40
  7512  09CE  0140               	movlb	0	; select bank0
  7513  09CF  00B5               	movwf	??_Lcd_Init
  7514  09D0  0835               	movf	??_Lcd_Init,w
  7515  09D1  00B6               	movwf	Lcd_Init@data
  7516  09D2  0836               	movf	Lcd_Init@data,w
  7517  09D3  3188  2006  3189   	fcall	_Lcd_Cmd
  7518                           
  7519                           ;flex_lcd.h: 88: data = 16; Lcd_Cmd(data);
  7520  09D6  3010               	movlw	16
  7521  09D7  0140               	movlb	0	; select bank0
  7522  09D8  00B5               	movwf	??_Lcd_Init
  7523  09D9  0835               	movf	??_Lcd_Init,w
  7524  09DA  00B6               	movwf	Lcd_Init@data
  7525  09DB  0836               	movf	Lcd_Init@data,w
  7526  09DC  3188  2006  3189   	fcall	_Lcd_Cmd
  7527                           
  7528                           ;flex_lcd.h: 89: data = 1; Lcd_Cmd(data);
  7529  09DF  0140               	movlb	0	; select bank0
  7530  09E0  01B6               	clrf	Lcd_Init@data
  7531  09E1  0AB6               	incf	Lcd_Init@data,f
  7532  09E2  0836               	movf	Lcd_Init@data,w
  7533  09E3  3188  2006  3189   	fcall	_Lcd_Cmd
  7534                           
  7535                           ;flex_lcd.h: 90: data = 15; Lcd_Cmd(data);
  7536  09E6  300F               	movlw	15
  7537  09E7  0140               	movlb	0	; select bank0
  7538  09E8  00B5               	movwf	??_Lcd_Init
  7539  09E9  0835               	movf	??_Lcd_Init,w
  7540  09EA  00B6               	movwf	Lcd_Init@data
  7541  09EB  0836               	movf	Lcd_Init@data,w
  7542  09EC  3188  2006         	fcall	_Lcd_Cmd
  7543  09EE  0008               	return
  7544  09EF                     __end_of_Lcd_Init:	
  7545                           
  7546                           	psect	text23
  7547  0806                     __ptext23:	
  7548 ;; *************** function _Lcd_Cmd *****************
  7549 ;; Defined at:
  7550 ;;		line 150 in file "flex_lcd.h"
  7551 ;; Parameters:    Size  Location     Type
  7552 ;;  data            1    wreg     unsigned char 
  7553 ;; Auto vars:     Size  Location     Type
  7554 ;;  data            1   20[BANK0 ] unsigned char 
  7555 ;; Return value:  Size  Location     Type
  7556 ;;                  1    wreg      void 
  7557 ;; Registers used:
  7558 ;;		wreg, status,2, status,0
  7559 ;; Tracked objects:
  7560 ;;		On entry : 0/0
  7561 ;;		On exit  : 0/0
  7562 ;;		Unchanged: 0/0
  7563 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
  7564 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  7565 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  7566 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  7567 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  7568 ;;Total ram usage:        3 bytes
  7569 ;; Hardware stack levels used:    1
  7570 ;; Hardware stack levels required when called:    3
  7571 ;; This function calls:
  7572 ;;		Nothing
  7573 ;; This function is called by:
  7574 ;;		_Lcd_Init
  7575 ;;		_Lcd_Out2
  7576 ;;		_main
  7577 ;;		_Lcd_Out
  7578 ;; This function uses a non-reentrant model
  7579 ;;
  7580                           
  7581                           
  7582                           ;psect for function _Lcd_Cmd
  7583  0806                     _Lcd_Cmd:	
  7584                           
  7585                           ;incstack = 0
  7586                           ; Regs used in _Lcd_Cmd: [wreg+status,2+status,0]
  7587                           ;Lcd_Cmd@data stored from wreg
  7588  0806  0140               	movlb	0	; select bank0
  7589  0807  00B4               	movwf	Lcd_Cmd@data
  7590                           
  7591                           ;flex_lcd.h: 151: PORTDbits.RD3 = 0; PORTDbits.RD2 = 0;
  7592  0808  118F               	bcf	15,3	;volatile
  7593  0809  110F               	bcf	15,2	;volatile
  7594                           
  7595                           ;flex_lcd.h: 152: PORTCbits.RC3 = (data & 0b10000000)>>7; PORTDbits.RD0 = (data & 0b0100
      +                          0000)>>6;
  7596  080A  0834               	movf	Lcd_Cmd@data,w
  7597  080B  00B2               	movwf	??_Lcd_Cmd
  7598  080C  3007               	movlw	7
  7599  080D                     u2915:	
  7600  080D  36B2               	lsrf	??_Lcd_Cmd,f
  7601  080E  0B89               	decfsz	9,f
  7602  080F  280D               	goto	u2915
  7603  0810  0832               	movf	??_Lcd_Cmd,w
  7604  0811  3901               	andlw	1
  7605  0812  00B3               	movwf	??_Lcd_Cmd+1
  7606  0813  0DB3               	rlf	??_Lcd_Cmd+1,f
  7607  0814  0DB3               	rlf	??_Lcd_Cmd+1,f
  7608  0815  0DB3               	rlf	??_Lcd_Cmd+1,f
  7609  0816  080E               	movf	14,w	;volatile
  7610  0817  0633               	xorwf	??_Lcd_Cmd+1,w
  7611  0818  39F7               	andlw	-9
  7612  0819  0633               	xorwf	??_Lcd_Cmd+1,w
  7613  081A  008E               	movwf	14	;volatile
  7614  081B  0834               	movf	Lcd_Cmd@data,w
  7615  081C  00B2               	movwf	??_Lcd_Cmd
  7616  081D  3006               	movlw	6
  7617  081E                     u2925:	
  7618  081E  36B2               	lsrf	??_Lcd_Cmd,f
  7619  081F  0B89               	decfsz	9,f
  7620  0820  281E               	goto	u2925
  7621  0821  3001               	movlw	1
  7622  0822  0532               	andwf	??_Lcd_Cmd,w
  7623  0823  00B3               	movwf	??_Lcd_Cmd+1
  7624  0824  080F               	movf	15,w	;volatile
  7625  0825  0633               	xorwf	??_Lcd_Cmd+1,w
  7626  0826  39FE               	andlw	-2
  7627  0827  0633               	xorwf	??_Lcd_Cmd+1,w
  7628  0828  008F               	movwf	15	;volatile
  7629                           
  7630                           ;flex_lcd.h: 153: PORTDbits.RD1 = (data & 0b00100000)>>5; PORTCbits.RC4 = (data & 0b0001
      +                          0000)>>4;
  7631  0829  0834               	movf	Lcd_Cmd@data,w
  7632  082A  00B2               	movwf	??_Lcd_Cmd
  7633  082B  3005               	movlw	5
  7634  082C                     u2935:	
  7635  082C  36B2               	lsrf	??_Lcd_Cmd,f
  7636  082D  0B89               	decfsz	9,f
  7637  082E  282C               	goto	u2935
  7638  082F  0832               	movf	??_Lcd_Cmd,w
  7639  0830  3901               	andlw	1
  7640  0831  00B3               	movwf	??_Lcd_Cmd+1
  7641  0832  0DB3               	rlf	??_Lcd_Cmd+1,f
  7642  0833  080F               	movf	15,w	;volatile
  7643  0834  0633               	xorwf	??_Lcd_Cmd+1,w
  7644  0835  39FD               	andlw	-3
  7645  0836  0633               	xorwf	??_Lcd_Cmd+1,w
  7646  0837  008F               	movwf	15	;volatile
  7647  0838  0834               	movf	Lcd_Cmd@data,w
  7648  0839  00B2               	movwf	??_Lcd_Cmd
  7649  083A  3004               	movlw	4
  7650  083B                     u2945:	
  7651  083B  36B2               	lsrf	??_Lcd_Cmd,f
  7652  083C  0B89               	decfsz	9,f
  7653  083D  283B               	goto	u2945
  7654  083E  0832               	movf	??_Lcd_Cmd,w
  7655  083F  3901               	andlw	1
  7656  0840  00B3               	movwf	??_Lcd_Cmd+1
  7657  0841  0EB3               	swapf	??_Lcd_Cmd+1,f
  7658  0842  080E               	movf	14,w	;volatile
  7659  0843  0633               	xorwf	??_Lcd_Cmd+1,w
  7660  0844  39EF               	andlw	-17
  7661  0845  0633               	xorwf	??_Lcd_Cmd+1,w
  7662  0846  008E               	movwf	14	;volatile
  7663                           
  7664                           ;flex_lcd.h: 154: _delay(10);
  7665  0847  3003               	movlw	3
  7666  0848                     u5547:	
  7667  0848  0B89               	decfsz	9,f
  7668  0849  2848               	goto	u5547
  7669  084A  0000               	nop
  7670                           
  7671                           ;flex_lcd.h: 155: PORTDbits.RD3 = 1; _delay((unsigned long)((5)*(32000000/4000000.0))); 
      +                          PORTDbits.RD3 = 0;
  7672  084B  0140               	movlb	0	; select bank0
  7673  084C  158F               	bsf	15,3	;volatile
  7674  084D  300D               	movlw	13
  7675  084E                     u5557:	
  7676  084E  0B89               	decfsz	9,f
  7677  084F  284E               	goto	u5557
  7678  0850  0000               	nop
  7679  0851  0140               	movlb	0	; select bank0
  7680  0852  118F               	bcf	15,3	;volatile
  7681                           
  7682                           ;flex_lcd.h: 156: PORTCbits.RC3 = (data & 0b00001000)>>3; PORTDbits.RD0 = (data & 0b0000
      +                          0100)>>2;
  7683  0853  0834               	movf	Lcd_Cmd@data,w
  7684  0854  00B2               	movwf	??_Lcd_Cmd
  7685  0855  3003               	movlw	3
  7686  0856                     u2955:	
  7687  0856  36B2               	lsrf	??_Lcd_Cmd,f
  7688  0857  0B89               	decfsz	9,f
  7689  0858  2856               	goto	u2955
  7690  0859  0832               	movf	??_Lcd_Cmd,w
  7691  085A  3901               	andlw	1
  7692  085B  00B3               	movwf	??_Lcd_Cmd+1
  7693  085C  0DB3               	rlf	??_Lcd_Cmd+1,f
  7694  085D  0DB3               	rlf	??_Lcd_Cmd+1,f
  7695  085E  0DB3               	rlf	??_Lcd_Cmd+1,f
  7696  085F  080E               	movf	14,w	;volatile
  7697  0860  0633               	xorwf	??_Lcd_Cmd+1,w
  7698  0861  39F7               	andlw	-9
  7699  0862  0633               	xorwf	??_Lcd_Cmd+1,w
  7700  0863  008E               	movwf	14	;volatile
  7701  0864  0834               	movf	Lcd_Cmd@data,w
  7702  0865  00B2               	movwf	??_Lcd_Cmd
  7703  0866  3002               	movlw	2
  7704  0867                     u2965:	
  7705  0867  36B2               	lsrf	??_Lcd_Cmd,f
  7706  0868  0B89               	decfsz	9,f
  7707  0869  2867               	goto	u2965
  7708  086A  3001               	movlw	1
  7709  086B  0532               	andwf	??_Lcd_Cmd,w
  7710  086C  00B3               	movwf	??_Lcd_Cmd+1
  7711  086D  080F               	movf	15,w	;volatile
  7712  086E  0633               	xorwf	??_Lcd_Cmd+1,w
  7713  086F  39FE               	andlw	-2
  7714  0870  0633               	xorwf	??_Lcd_Cmd+1,w
  7715  0871  008F               	movwf	15	;volatile
  7716                           
  7717                           ;flex_lcd.h: 157: PORTDbits.RD1 = (data & 0b00000010)>>1; PORTCbits.RC4 = (data & 0b0000
      +                          0001);
  7718  0872  3634               	lsrf	Lcd_Cmd@data,w
  7719  0873  3901               	andlw	1
  7720  0874  00B2               	movwf	??_Lcd_Cmd
  7721  0875  0DB2               	rlf	??_Lcd_Cmd,f
  7722  0876  080F               	movf	15,w	;volatile
  7723  0877  0632               	xorwf	??_Lcd_Cmd,w
  7724  0878  39FD               	andlw	-3
  7725  0879  0632               	xorwf	??_Lcd_Cmd,w
  7726  087A  008F               	movwf	15	;volatile
  7727  087B  0834               	movf	Lcd_Cmd@data,w
  7728  087C  3901               	andlw	1
  7729  087D  00B2               	movwf	??_Lcd_Cmd
  7730  087E  0EB2               	swapf	??_Lcd_Cmd,f
  7731  087F  080E               	movf	14,w	;volatile
  7732  0880  0632               	xorwf	??_Lcd_Cmd,w
  7733  0881  39EF               	andlw	-17
  7734  0882  0632               	xorwf	??_Lcd_Cmd,w
  7735  0883  008E               	movwf	14	;volatile
  7736                           
  7737                           ;flex_lcd.h: 158: _delay(10);
  7738  0884  3003               	movlw	3
  7739  0885                     u5567:	
  7740  0885  0B89               	decfsz	9,f
  7741  0886  2885               	goto	u5567
  7742  0887  0000               	nop
  7743                           
  7744                           ;flex_lcd.h: 159: PORTDbits.RD3 = 1; _delay((unsigned long)((5)*(32000000/4000000.0))); 
      +                          PORTDbits.RD3 = 0;
  7745  0888  0140               	movlb	0	; select bank0
  7746  0889  158F               	bsf	15,3	;volatile
  7747  088A  300D               	movlw	13
  7748  088B                     u5577:	
  7749  088B  0B89               	decfsz	9,f
  7750  088C  288B               	goto	u5577
  7751  088D  0000               	nop
  7752  088E  0140               	movlb	0	; select bank0
  7753  088F  118F               	bcf	15,3	;volatile
  7754                           
  7755                           ;flex_lcd.h: 160: _delay((unsigned long)((5500)*(32000000/4000000.0)));
  7756  0890  303A               	movlw	58
  7757  0891  0140               	movlb	0	; select bank0
  7758  0892  00B2               	movwf	??_Lcd_Cmd
  7759  0893  3023               	movlw	35
  7760  0894                     u5587:	
  7761  0894  0B89               	decfsz	9,f
  7762  0895  2894               	goto	u5587
  7763  0896  0BB2               	decfsz	??_Lcd_Cmd,f
  7764  0897  2894               	goto	u5587
  7765  0898  0008               	return
  7766  0899                     __end_of_Lcd_Cmd:	
  7767                           
  7768                           	psect	intentry
  7769  0004                     __pintentry:	
  7770 ;; *************** function _interrupcion *****************
  7771 ;; Defined at:
  7772 ;;		line 20 in file "main.c"
  7773 ;; Parameters:    Size  Location     Type
  7774 ;;		None
  7775 ;; Auto vars:     Size  Location     Type
  7776 ;;		None
  7777 ;; Return value:  Size  Location     Type
  7778 ;;                  1    wreg      void 
  7779 ;; Registers used:
  7780 ;;		wreg, status,2, status,0, pclath, cstack
  7781 ;; Tracked objects:
  7782 ;;		On entry : 0/0
  7783 ;;		On exit  : 0/0
  7784 ;;		Unchanged: 0/0
  7785 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
  7786 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  7787 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  7788 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  7789 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  7790 ;;Total ram usage:        1 bytes
  7791 ;; Hardware stack levels used:    1
  7792 ;; Hardware stack levels required when called:    2
  7793 ;; This function calls:
  7794 ;;		___awtoft
  7795 ;;		___ftdiv
  7796 ;;		i1___awdiv
  7797 ;; This function is called by:
  7798 ;;		Interrupt level 1
  7799 ;; This function uses a non-reentrant model
  7800 ;;
  7801                           
  7802  0004                     _interrupcion:	
  7803                           
  7804                           ;incstack = 0
  7805  0004  147E               	bsf	126,0	;set compiler interrupt flag (level 1)
  7806                           
  7807                           ; Regs used in _interrupcion: [wreg+status,2+status,0+pclath+cstack]
  7808  0005  3180               	pagesel	$
  7809  0006  0140               	movlb	0	; select bank0
  7810  0007  087F               	movf	127,w
  7811  0008  00B1               	movwf	??_interrupcion
  7812                           
  7813                           ;main.c: 21: if(PORTAbits.RA1==0){
  7814  0009  188C               	btfsc	12,1	;volatile
  7815  000A  2846               	goto	i1l2900
  7816                           
  7817                           ;main.c: 22: if(ctiempo!=0){distancia=(ctiempo/2)/(29.2);}
  7818  000B  085A               	movf	_ctiempo,w
  7819  000C  045B               	iorwf	_ctiempo+1,w
  7820  000D  1903               	btfsc	3,2
  7821  000E  283D               	goto	i1l2896
  7822  000F  309A               	movlw	154
  7823  0010  00A1               	movwf	___ftdiv@f2
  7824  0011  30E9               	movlw	233
  7825  0012  00A2               	movwf	___ftdiv@f2+1
  7826  0013  3041               	movlw	65
  7827  0014  00A3               	movwf	___ftdiv@f2+2
  7828  0015  3002               	movlw	2
  7829  0016  00F0               	movwf	i1___awdiv@divisor
  7830  0017  3000               	movlw	0
  7831  0018  00F1               	movwf	i1___awdiv@divisor+1
  7832  0019  085B               	movf	_ctiempo+1,w
  7833  001A  00F3               	movwf	i1___awdiv@dividend+1
  7834  001B  085A               	movf	_ctiempo,w
  7835  001C  00F2               	movwf	i1___awdiv@dividend
  7836  001D  3195  2546  3180   	fcall	i1___awdiv
  7837  0020  0871               	movf	?i1___awdiv+1,w
  7838  0021  00FA               	movwf	___awtoft@c+1
  7839  0022  0870               	movf	?i1___awdiv,w
  7840  0023  00F9               	movwf	___awtoft@c
  7841  0024  3193  23FB  3180   	fcall	___awtoft
  7842  0027  0879               	movf	?___awtoft,w
  7843  0028  0140               	movlb	0	; select bank0
  7844  0029  00A4               	movwf	___ftdiv@f1
  7845  002A  087A               	movf	?___awtoft+1,w
  7846  002B  00A5               	movwf	___ftdiv@f1+1
  7847  002C  087B               	movf	?___awtoft+2,w
  7848  002D  00A6               	movwf	___ftdiv@f1+2
  7849  002E  3188  2099  3180   	fcall	___ftdiv
  7850  0031  0140               	movlb	0	; select bank0
  7851  0032  0821               	movf	?___ftdiv,w
  7852  0033  0141               	movlb	1	; select bank1
  7853  0034  00EB               	movwf	_distancia^(0+128)
  7854  0035  0140               	movlb	0	; select bank0
  7855  0036  0822               	movf	?___ftdiv+1,w
  7856  0037  0141               	movlb	1	; select bank1
  7857  0038  00EC               	movwf	(_distancia+1)^(0+128)
  7858  0039  0140               	movlb	0	; select bank0
  7859  003A  0823               	movf	?___ftdiv+2,w
  7860  003B  0141               	movlb	1	; select bank1
  7861  003C  00ED               	movwf	(_distancia+2)^(0+128)
  7862  003D                     i1l2896:	
  7863                           
  7864                           ;main.c: 23: realizar=1;
  7865  003D  3001               	movlw	1
  7866  003E  0141               	movlb	1	; select bank1
  7867  003F  00EE               	movwf	_realizar^(0+128)
  7868  0040  3000               	movlw	0
  7869  0041  00EF               	movwf	(_realizar^(0+128)+1)
  7870                           
  7871                           ;main.c: 24: ctiempo=0;
  7872  0042  0140               	movlb	0	; select bank0
  7873  0043  01DA               	clrf	_ctiempo
  7874  0044  01DB               	clrf	_ctiempo+1
  7875                           
  7876                           ;main.c: 27: }else{
  7877  0045  284C               	goto	i1l2902
  7878  0046                     i1l2900:	
  7879                           
  7880                           ;main.c: 28: ctiempo=ctiempo+1;
  7881  0046  085A               	movf	_ctiempo,w
  7882  0047  3E01               	addlw	1
  7883  0048  00DA               	movwf	_ctiempo
  7884  0049  3000               	movlw	0
  7885  004A  3D5B               	addwfc	_ctiempo+1,w
  7886  004B  00DB               	movwf	_ctiempo+1
  7887  004C                     i1l2902:	
  7888                           
  7889                           ;main.c: 29: }
  7890                           ;main.c: 30: TMR1=precarga;
  7891  004C  085D               	movf	_precarga+1,w
  7892  004D  0144               	movlb	4	; select bank4
  7893  004E  008D               	movwf	13	;volatile
  7894  004F  0140               	movlb	0	; select bank0
  7895  0050  085C               	movf	_precarga,w
  7896  0051  0144               	movlb	4	; select bank4
  7897  0052  008C               	movwf	12	;volatile
  7898                           
  7899                           ;main.c: 31: PIR4bits.TMR1IF=0;
  7900  0053  014E               	movlb	14	; select bank14
  7901  0054  1010               	bcf	16,0	;volatile
  7902  0055  0140               	movlb	0	; select bank0
  7903  0056  0831               	movf	??_interrupcion,w
  7904  0057  00FF               	movwf	127
  7905  0058  107E               	bcf	126,0	;clear compiler interrupt flag (level 1)
  7906  0059  0009               	retfie
  7907  005A                     __end_of_interrupcion:	
  7908                           
  7909                           	psect	text25
  7910  1546                     __ptext25:	
  7911 ;; *************** function i1___awdiv *****************
  7912 ;; Defined at:
  7913 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\awdiv.c"
  7914 ;; Parameters:    Size  Location     Type
  7915 ;;  divisor         2    0[COMMON] int 
  7916 ;;  dividend        2    2[COMMON] int 
  7917 ;; Auto vars:     Size  Location     Type
  7918 ;;  __awdiv         2    7[COMMON] int 
  7919 ;;  __awdiv         1    6[COMMON] unsigned char 
  7920 ;;  __awdiv         1    5[COMMON] unsigned char 
  7921 ;; Return value:  Size  Location     Type
  7922 ;;                  2    0[COMMON] int 
  7923 ;; Registers used:
  7924 ;;		wreg, status,2, status,0
  7925 ;; Tracked objects:
  7926 ;;		On entry : 0/0
  7927 ;;		On exit  : 0/0
  7928 ;;		Unchanged: 0/0
  7929 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
  7930 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  7931 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  7932 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  7933 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  7934 ;;Total ram usage:        9 bytes
  7935 ;; Hardware stack levels used:    1
  7936 ;; This function calls:
  7937 ;;		Nothing
  7938 ;; This function is called by:
  7939 ;;		_interrupcion
  7940 ;; This function uses a non-reentrant model
  7941 ;;
  7942                           
  7943                           
  7944                           ;psect for function i1___awdiv
  7945  1546                     i1___awdiv:	
  7946                           
  7947                           ;incstack = 0
  7948                           ; Regs used in i1___awdiv: [wreg+status,2+status,0]
  7949  1546  01F6               	clrf	i1___awdiv@sign
  7950  1547  1FF1               	btfss	i1___awdiv@divisor+1,7
  7951  1548  2D50               	goto	i1l2832
  7952  1549  09F0               	comf	i1___awdiv@divisor,f
  7953  154A  09F1               	comf	i1___awdiv@divisor+1,f
  7954  154B  0AF0               	incf	i1___awdiv@divisor,f
  7955  154C  1903               	skipnz
  7956  154D  0AF1               	incf	i1___awdiv@divisor+1,f
  7957  154E  01F6               	clrf	i1___awdiv@sign
  7958  154F  0AF6               	incf	i1___awdiv@sign,f
  7959  1550                     i1l2832:	
  7960  1550  1FF3               	btfss	i1___awdiv@dividend+1,7
  7961  1551  2D5B               	goto	i1l2838
  7962  1552  09F2               	comf	i1___awdiv@dividend,f
  7963  1553  09F3               	comf	i1___awdiv@dividend+1,f
  7964  1554  0AF2               	incf	i1___awdiv@dividend,f
  7965  1555  1903               	skipnz
  7966  1556  0AF3               	incf	i1___awdiv@dividend+1,f
  7967  1557  3001               	movlw	1
  7968  1558  00F4               	movwf	??i1___awdiv
  7969  1559  0874               	movf	??i1___awdiv,w
  7970  155A  06F6               	xorwf	i1___awdiv@sign,f
  7971  155B                     i1l2838:	
  7972  155B  01F7               	clrf	i1___awdiv@quotient
  7973  155C  01F8               	clrf	i1___awdiv@quotient+1
  7974  155D  0870               	movf	i1___awdiv@divisor,w
  7975  155E  0471               	iorwf	i1___awdiv@divisor+1,w
  7976  155F  1903               	btfsc	3,2
  7977  1560  2D8A               	goto	i1l2860
  7978  1561  01F5               	clrf	i1___awdiv@counter
  7979  1562  0AF5               	incf	i1___awdiv@counter,f
  7980  1563                     i1l2848:	
  7981  1563  1BF1               	btfsc	i1___awdiv@divisor+1,7
  7982  1564  2D6F               	goto	i1l2850
  7983  1565  3001               	movlw	1
  7984  1566                     u430_25:	
  7985  1566  35F0               	lslf	i1___awdiv@divisor,f
  7986  1567  0DF1               	rlf	i1___awdiv@divisor+1,f
  7987  1568  0B89               	decfsz	9,f
  7988  1569  2D66               	goto	u430_25
  7989  156A  3001               	movlw	1
  7990  156B  00F4               	movwf	??i1___awdiv
  7991  156C  0874               	movf	??i1___awdiv,w
  7992  156D  07F5               	addwf	i1___awdiv@counter,f
  7993  156E  2D63               	goto	i1l2848
  7994  156F                     i1l2850:	
  7995  156F  3001               	movlw	1
  7996  1570                     u432_25:	
  7997  1570  35F7               	lslf	i1___awdiv@quotient,f
  7998  1571  0DF8               	rlf	i1___awdiv@quotient+1,f
  7999  1572  0B89               	decfsz	9,f
  8000  1573  2D70               	goto	u432_25
  8001  1574  0871               	movf	i1___awdiv@divisor+1,w
  8002  1575  0273               	subwf	i1___awdiv@dividend+1,w
  8003  1576  1D03               	skipz
  8004  1577  2D7A               	goto	u433_25
  8005  1578  0870               	movf	i1___awdiv@divisor,w
  8006  1579  0272               	subwf	i1___awdiv@dividend,w
  8007  157A                     u433_25:	
  8008  157A  1C03               	skipc
  8009  157B  2D81               	goto	i1l2856
  8010  157C  0870               	movf	i1___awdiv@divisor,w
  8011  157D  02F2               	subwf	i1___awdiv@dividend,f
  8012  157E  0871               	movf	i1___awdiv@divisor+1,w
  8013  157F  3BF3               	subwfb	i1___awdiv@dividend+1,f
  8014  1580  1477               	bsf	i1___awdiv@quotient,0
  8015  1581                     i1l2856:	
  8016  1581  3001               	movlw	1
  8017  1582                     u434_25:	
  8018  1582  36F1               	lsrf	i1___awdiv@divisor+1,f
  8019  1583  0CF0               	rrf	i1___awdiv@divisor,f
  8020  1584  0B89               	decfsz	9,f
  8021  1585  2D82               	goto	u434_25
  8022  1586  3001               	movlw	1
  8023  1587  02F5               	subwf	i1___awdiv@counter,f
  8024  1588  1D03               	btfss	3,2
  8025  1589  2D6F               	goto	i1l2850
  8026  158A                     i1l2860:	
  8027  158A  0876               	movf	i1___awdiv@sign,w
  8028  158B  1903               	btfsc	3,2
  8029  158C  2D92               	goto	i1l2864
  8030  158D  09F7               	comf	i1___awdiv@quotient,f
  8031  158E  09F8               	comf	i1___awdiv@quotient+1,f
  8032  158F  0AF7               	incf	i1___awdiv@quotient,f
  8033  1590  1903               	skipnz
  8034  1591  0AF8               	incf	i1___awdiv@quotient+1,f
  8035  1592                     i1l2864:	
  8036  1592  0878               	movf	i1___awdiv@quotient+1,w
  8037  1593  00F1               	movwf	?i1___awdiv+1
  8038  1594  0877               	movf	i1___awdiv@quotient,w
  8039  1595  00F0               	movwf	?i1___awdiv
  8040  1596  0008               	return
  8041  1597                     __end_ofi1___awdiv:	
  8042                           
  8043                           	psect	text26
  8044  0899                     __ptext26:	
  8045 ;; *************** function ___ftdiv *****************
  8046 ;; Defined at:
  8047 ;;		line 56 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\ftdiv.c"
  8048 ;; Parameters:    Size  Location     Type
  8049 ;;  f2              3    1[BANK0 ] float 
  8050 ;;  f1              3    4[BANK0 ] float 
  8051 ;; Auto vars:     Size  Location     Type
  8052 ;;  f3              3   12[BANK0 ] float 
  8053 ;;  sign            1   16[BANK0 ] unsigned char 
  8054 ;;  exp             1   15[BANK0 ] unsigned char 
  8055 ;;  cntr            1   11[BANK0 ] unsigned char 
  8056 ;; Return value:  Size  Location     Type
  8057 ;;                  3    1[BANK0 ] float 
  8058 ;; Registers used:
  8059 ;;		wreg, status,2, status,0, pclath, cstack
  8060 ;; Tracked objects:
  8061 ;;		On entry : 0/0
  8062 ;;		On exit  : 0/0
  8063 ;;		Unchanged: 0/0
  8064 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
  8065 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  8066 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  8067 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  8068 ;;      Totals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  8069 ;;Total ram usage:       16 bytes
  8070 ;; Hardware stack levels used:    1
  8071 ;; Hardware stack levels required when called:    1
  8072 ;; This function calls:
  8073 ;;		i1___ftpack
  8074 ;; This function is called by:
  8075 ;;		_interrupcion
  8076 ;; This function uses a non-reentrant model
  8077 ;;
  8078                           
  8079                           
  8080                           ;psect for function ___ftdiv
  8081  0899                     ___ftdiv:	
  8082                           
  8083                           ;incstack = 0
  8084                           ; Regs used in ___ftdiv: [wreg+status,2+status,0+pclath+cstack]
  8085  0899  0140               	movlb	0	; select bank0
  8086  089A  0824               	movf	___ftdiv@f1,w
  8087  089B  00A7               	movwf	??___ftdiv
  8088  089C  0825               	movf	___ftdiv@f1+1,w
  8089  089D  00A8               	movwf	??___ftdiv+1
  8090  089E  0826               	movf	___ftdiv@f1+2,w
  8091  089F  00A9               	movwf	??___ftdiv+2
  8092  08A0  1003               	clrc
  8093  08A1  0D28               	rlf	??___ftdiv+1,w
  8094  08A2  0D29               	rlf	??___ftdiv+2,w
  8095  08A3  00AA               	movwf	??___ftdiv+3
  8096  08A4  082A               	movf	??___ftdiv+3,w
  8097  08A5  00AF               	movwf	___ftdiv@exp
  8098  08A6  082F               	movf	___ftdiv@exp,w
  8099  08A7  1D03               	btfss	3,2
  8100  08A8  28B0               	goto	i1l2788
  8101  08A9  3000               	movlw	0
  8102  08AA  00A1               	movwf	?___ftdiv
  8103  08AB  3000               	movlw	0
  8104  08AC  00A2               	movwf	?___ftdiv+1
  8105  08AD  3000               	movlw	0
  8106  08AE  00A3               	movwf	?___ftdiv+2
  8107  08AF  0008               	return
  8108  08B0                     i1l2788:	
  8109  08B0  0821               	movf	___ftdiv@f2,w
  8110  08B1  00A7               	movwf	??___ftdiv
  8111  08B2  0822               	movf	___ftdiv@f2+1,w
  8112  08B3  00A8               	movwf	??___ftdiv+1
  8113  08B4  0823               	movf	___ftdiv@f2+2,w
  8114  08B5  00A9               	movwf	??___ftdiv+2
  8115  08B6  1003               	clrc
  8116  08B7  0D28               	rlf	??___ftdiv+1,w
  8117  08B8  0D29               	rlf	??___ftdiv+2,w
  8118  08B9  00AA               	movwf	??___ftdiv+3
  8119  08BA  082A               	movf	??___ftdiv+3,w
  8120  08BB  00B0               	movwf	___ftdiv@sign
  8121  08BC  0830               	movf	___ftdiv@sign,w
  8122  08BD  1D03               	btfss	3,2
  8123  08BE  28C6               	goto	i1l2794
  8124  08BF  3000               	movlw	0
  8125  08C0  00A1               	movwf	?___ftdiv
  8126  08C1  3000               	movlw	0
  8127  08C2  00A2               	movwf	?___ftdiv+1
  8128  08C3  3000               	movlw	0
  8129  08C4  00A3               	movwf	?___ftdiv+2
  8130  08C5  0008               	return
  8131  08C6                     i1l2794:	
  8132  08C6  3000               	movlw	0
  8133  08C7  00AC               	movwf	___ftdiv@f3
  8134  08C8  3000               	movlw	0
  8135  08C9  00AD               	movwf	___ftdiv@f3+1
  8136  08CA  3000               	movlw	0
  8137  08CB  00AE               	movwf	___ftdiv@f3+2
  8138  08CC  3089               	movlw	137
  8139  08CD  0730               	addwf	___ftdiv@sign,w
  8140  08CE  00A7               	movwf	??___ftdiv
  8141  08CF  0827               	movf	??___ftdiv,w
  8142  08D0  02AF               	subwf	___ftdiv@exp,f
  8143  08D1  0824               	movf	___ftdiv@f1,w
  8144  08D2  00A7               	movwf	??___ftdiv
  8145  08D3  0825               	movf	___ftdiv@f1+1,w
  8146  08D4  00A8               	movwf	??___ftdiv+1
  8147  08D5  0826               	movf	___ftdiv@f1+2,w
  8148  08D6  00A9               	movwf	??___ftdiv+2
  8149  08D7  3010               	movlw	16
  8150  08D8                     u421_25:	
  8151  08D8  36A9               	lsrf	??___ftdiv+2,f
  8152  08D9  0CA8               	rrf	??___ftdiv+1,f
  8153  08DA  0CA7               	rrf	??___ftdiv,f
  8154  08DB  0B89               	decfsz	9,f
  8155  08DC  28D8               	goto	u421_25
  8156  08DD  0827               	movf	??___ftdiv,w
  8157  08DE  00AA               	movwf	??___ftdiv+3
  8158  08DF  082A               	movf	??___ftdiv+3,w
  8159  08E0  00B0               	movwf	___ftdiv@sign
  8160  08E1  0821               	movf	___ftdiv@f2,w
  8161  08E2  00A7               	movwf	??___ftdiv
  8162  08E3  0822               	movf	___ftdiv@f2+1,w
  8163  08E4  00A8               	movwf	??___ftdiv+1
  8164  08E5  0823               	movf	___ftdiv@f2+2,w
  8165  08E6  00A9               	movwf	??___ftdiv+2
  8166  08E7  3010               	movlw	16
  8167  08E8                     u422_25:	
  8168  08E8  36A9               	lsrf	??___ftdiv+2,f
  8169  08E9  0CA8               	rrf	??___ftdiv+1,f
  8170  08EA  0CA7               	rrf	??___ftdiv,f
  8171  08EB  0B89               	decfsz	9,f
  8172  08EC  28E8               	goto	u422_25
  8173  08ED  0827               	movf	??___ftdiv,w
  8174  08EE  00AA               	movwf	??___ftdiv+3
  8175  08EF  082A               	movf	??___ftdiv+3,w
  8176  08F0  06B0               	xorwf	___ftdiv@sign,f
  8177  08F1  3080               	movlw	128
  8178  08F2  00A7               	movwf	??___ftdiv
  8179  08F3  0827               	movf	??___ftdiv,w
  8180  08F4  05B0               	andwf	___ftdiv@sign,f
  8181  08F5  17A5               	bsf	___ftdiv@f1+1,7
  8182  08F6  30FF               	movlw	255
  8183  08F7  05A4               	andwf	___ftdiv@f1,f
  8184  08F8  30FF               	movlw	255
  8185  08F9  05A5               	andwf	___ftdiv@f1+1,f
  8186  08FA  3000               	movlw	0
  8187  08FB  05A6               	andwf	___ftdiv@f1+2,f
  8188  08FC  17A2               	bsf	___ftdiv@f2+1,7
  8189  08FD  30FF               	movlw	255
  8190  08FE  05A1               	andwf	___ftdiv@f2,f
  8191  08FF  30FF               	movlw	255
  8192  0900  05A2               	andwf	___ftdiv@f2+1,f
  8193  0901  3000               	movlw	0
  8194  0902  05A3               	andwf	___ftdiv@f2+2,f
  8195  0903  3018               	movlw	24
  8196  0904  00A7               	movwf	??___ftdiv
  8197  0905  0827               	movf	??___ftdiv,w
  8198  0906  00AB               	movwf	___ftdiv@cntr
  8199  0907                     i1l2808:	
  8200  0907  3001               	movlw	1
  8201  0908                     u423_25:	
  8202  0908  35AC               	lslf	___ftdiv@f3,f
  8203  0909  0DAD               	rlf	___ftdiv@f3+1,f
  8204  090A  0DAE               	rlf	___ftdiv@f3+2,f
  8205  090B  0B89               	decfsz	9,f
  8206  090C  2908               	goto	u423_25
  8207  090D  0823               	movf	___ftdiv@f2+2,w
  8208  090E  0226               	subwf	___ftdiv@f1+2,w
  8209  090F  1D03               	skipz
  8210  0910  2917               	goto	u424_25
  8211  0911  0822               	movf	___ftdiv@f2+1,w
  8212  0912  0225               	subwf	___ftdiv@f1+1,w
  8213  0913  1D03               	skipz
  8214  0914  2917               	goto	u424_25
  8215  0915  0821               	movf	___ftdiv@f2,w
  8216  0916  0224               	subwf	___ftdiv@f1,w
  8217  0917                     u424_25:	
  8218  0917  1C03               	skipc
  8219  0918  2920               	goto	i1l2816
  8220  0919  0821               	movf	___ftdiv@f2,w
  8221  091A  02A4               	subwf	___ftdiv@f1,f
  8222  091B  0822               	movf	___ftdiv@f2+1,w
  8223  091C  3BA5               	subwfb	___ftdiv@f1+1,f
  8224  091D  0823               	movf	___ftdiv@f2+2,w
  8225  091E  3BA6               	subwfb	___ftdiv@f1+2,f
  8226  091F  142C               	bsf	___ftdiv@f3,0
  8227  0920                     i1l2816:	
  8228  0920  3001               	movlw	1
  8229  0921                     u425_25:	
  8230  0921  35A4               	lslf	___ftdiv@f1,f
  8231  0922  0DA5               	rlf	___ftdiv@f1+1,f
  8232  0923  0DA6               	rlf	___ftdiv@f1+2,f
  8233  0924  0B89               	decfsz	9,f
  8234  0925  2921               	goto	u425_25
  8235  0926  3001               	movlw	1
  8236  0927  02AB               	subwf	___ftdiv@cntr,f
  8237  0928  1D03               	btfss	3,2
  8238  0929  2907               	goto	i1l2808
  8239  092A  082C               	movf	___ftdiv@f3,w
  8240  092B  00F0               	movwf	i1___ftpack@arg
  8241  092C  082D               	movf	___ftdiv@f3+1,w
  8242  092D  00F1               	movwf	i1___ftpack@arg+1
  8243  092E  082E               	movf	___ftdiv@f3+2,w
  8244  092F  00F2               	movwf	i1___ftpack@arg+2
  8245  0930  082F               	movf	___ftdiv@exp,w
  8246  0931  00A7               	movwf	??___ftdiv
  8247  0932  0827               	movf	??___ftdiv,w
  8248  0933  00F3               	movwf	i1___ftpack@exp
  8249  0934  0830               	movf	___ftdiv@sign,w
  8250  0935  00A8               	movwf	??___ftdiv+1
  8251  0936  0828               	movf	??___ftdiv+1,w
  8252  0937  00F4               	movwf	i1___ftpack@sign
  8253  0938  3196  263C         	fcall	i1___ftpack
  8254  093A  0870               	movf	?i1___ftpack,w
  8255  093B  0140               	movlb	0	; select bank0
  8256  093C  00A1               	movwf	?___ftdiv
  8257  093D  0871               	movf	?i1___ftpack+1,w
  8258  093E  00A2               	movwf	?___ftdiv+1
  8259  093F  0872               	movf	?i1___ftpack+2,w
  8260  0940  00A3               	movwf	?___ftdiv+2
  8261  0941  0008               	return
  8262  0942                     __end_of___ftdiv:	
  8263                           
  8264                           	psect	text27
  8265  13FB                     __ptext27:	
  8266 ;; *************** function ___awtoft *****************
  8267 ;; Defined at:
  8268 ;;		line 32 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\awtoft.c"
  8269 ;; Parameters:    Size  Location     Type
  8270 ;;  c               2    9[COMMON] int 
  8271 ;; Auto vars:     Size  Location     Type
  8272 ;;  sign            1    0[BANK0 ] unsigned char 
  8273 ;; Return value:  Size  Location     Type
  8274 ;;                  3    9[COMMON] float 
  8275 ;; Registers used:
  8276 ;;		wreg, status,2, status,0, pclath, cstack
  8277 ;; Tracked objects:
  8278 ;;		On entry : 0/0
  8279 ;;		On exit  : 0/0
  8280 ;;		Unchanged: 0/0
  8281 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
  8282 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  8283 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  8284 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  8285 ;;      Totals:         5       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  8286 ;;Total ram usage:        6 bytes
  8287 ;; Hardware stack levels used:    1
  8288 ;; Hardware stack levels required when called:    1
  8289 ;; This function calls:
  8290 ;;		i1___ftpack
  8291 ;; This function is called by:
  8292 ;;		_interrupcion
  8293 ;; This function uses a non-reentrant model
  8294 ;;
  8295                           
  8296                           
  8297                           ;psect for function ___awtoft
  8298  13FB                     ___awtoft:	
  8299                           
  8300                           ;incstack = 0
  8301                           ; Regs used in ___awtoft: [wreg+status,2+status,0+pclath+cstack]
  8302  13FB  0140               	movlb	0	; select bank0
  8303  13FC  01A0               	clrf	___awtoft@sign
  8304  13FD  1FFA               	btfss	___awtoft@c+1,7
  8305  13FE  2C06               	goto	i1l2778
  8306  13FF  09F9               	comf	___awtoft@c,f
  8307  1400  09FA               	comf	___awtoft@c+1,f
  8308  1401  0AF9               	incf	___awtoft@c,f
  8309  1402  1903               	skipnz
  8310  1403  0AFA               	incf	___awtoft@c+1,f
  8311  1404  01A0               	clrf	___awtoft@sign
  8312  1405  0AA0               	incf	___awtoft@sign,f
  8313  1406                     i1l2778:	
  8314  1406  0879               	movf	___awtoft@c,w
  8315  1407  00F0               	movwf	i1___ftpack@arg
  8316  1408  087A               	movf	___awtoft@c+1,w
  8317  1409  00F1               	movwf	i1___ftpack@arg+1
  8318  140A  01F2               	clrf	i1___ftpack@arg+2
  8319  140B  308E               	movlw	142
  8320  140C  00FC               	movwf	??___awtoft
  8321  140D  087C               	movf	??___awtoft,w
  8322  140E  00F3               	movwf	i1___ftpack@exp
  8323  140F  0820               	movf	___awtoft@sign,w
  8324  1410  00FD               	movwf	??___awtoft+1
  8325  1411  087D               	movf	??___awtoft+1,w
  8326  1412  00F4               	movwf	i1___ftpack@sign
  8327  1413  3196  263C         	fcall	i1___ftpack
  8328  1415  0870               	movf	?i1___ftpack,w
  8329  1416  00F9               	movwf	?___awtoft
  8330  1417  0871               	movf	?i1___ftpack+1,w
  8331  1418  00FA               	movwf	?___awtoft+1
  8332  1419  0872               	movf	?i1___ftpack+2,w
  8333  141A  00FB               	movwf	?___awtoft+2
  8334  141B  0008               	return
  8335  141C                     __end_of___awtoft:	
  8336                           
  8337                           	psect	text28
  8338  163C                     __ptext28:	
  8339 ;; *************** function i1___ftpack *****************
  8340 ;; Defined at:
  8341 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\float.c"
  8342 ;; Parameters:    Size  Location     Type
  8343 ;;  arg             3    0[COMMON] unsigned um
  8344 ;;  exp             1    3[COMMON] unsigned char 
  8345 ;;  sign            1    4[COMMON] unsigned char 
  8346 ;; Auto vars:     Size  Location     Type
  8347 ;;		None
  8348 ;; Return value:  Size  Location     Type
  8349 ;;                  3    0[COMMON] float 
  8350 ;; Registers used:
  8351 ;;		wreg, status,2, status,0
  8352 ;; Tracked objects:
  8353 ;;		On entry : 0/0
  8354 ;;		On exit  : 0/0
  8355 ;;		Unchanged: 0/0
  8356 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
  8357 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  8358 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  8359 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  8360 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  8361 ;;Total ram usage:        8 bytes
  8362 ;; Hardware stack levels used:    1
  8363 ;; This function calls:
  8364 ;;		Nothing
  8365 ;; This function is called by:
  8366 ;;		___awtoft
  8367 ;;		___ftdiv
  8368 ;; This function uses a non-reentrant model
  8369 ;;
  8370                           
  8371                           
  8372                           ;psect for function i1___ftpack
  8373  163C                     i1___ftpack:	
  8374                           
  8375                           ;incstack = 0
  8376                           ; Regs used in i1___ftpack: [wreg+status,2+status,0]
  8377  163C  0873               	movf	i1___ftpack@exp,w
  8378  163D  1903               	btfsc	3,2
  8379  163E  2E44               	goto	i1l2456
  8380  163F  0872               	movf	i1___ftpack@arg+2,w
  8381  1640  0471               	iorwf	i1___ftpack@arg+1,w
  8382  1641  0470               	iorwf	i1___ftpack@arg,w
  8383  1642  1D03               	skipz
  8384  1643  2E55               	goto	i1l2462
  8385  1644                     i1l2456:	
  8386  1644  3000               	movlw	0
  8387  1645  00F0               	movwf	?i1___ftpack
  8388  1646  3000               	movlw	0
  8389  1647  00F1               	movwf	?i1___ftpack+1
  8390  1648  3000               	movlw	0
  8391  1649  00F2               	movwf	?i1___ftpack+2
  8392  164A  0008               	return
  8393  164B                     i1l2460:	
  8394  164B  3001               	movlw	1
  8395  164C  00F5               	movwf	??i1___ftpack
  8396  164D  0875               	movf	??i1___ftpack,w
  8397  164E  07F3               	addwf	i1___ftpack@exp,f
  8398  164F  3001               	movlw	1
  8399  1650                     u369_25:	
  8400  1650  36F2               	lsrf	i1___ftpack@arg+2,f
  8401  1651  0CF1               	rrf	i1___ftpack@arg+1,f
  8402  1652  0CF0               	rrf	i1___ftpack@arg,f
  8403  1653  0B89               	decfsz	9,f
  8404  1654  2E50               	goto	u369_25
  8405  1655                     i1l2462:	
  8406  1655  30FE               	movlw	254
  8407  1656  0572               	andwf	i1___ftpack@arg+2,w
  8408  1657  1903               	btfsc	3,2
  8409  1658  2E6E               	goto	i1l467
  8410  1659  2E4B               	goto	i1l2460
  8411  165A                     i1l2464:	
  8412  165A  3001               	movlw	1
  8413  165B  00F5               	movwf	??i1___ftpack
  8414  165C  0875               	movf	??i1___ftpack,w
  8415  165D  07F3               	addwf	i1___ftpack@exp,f
  8416  165E  3001               	movlw	1
  8417  165F  07F0               	addwf	i1___ftpack@arg,f
  8418  1660  3000               	movlw	0
  8419  1661  1803               	skipnc
  8420  1662  3001               	movlw	1
  8421  1663  07F1               	addwf	i1___ftpack@arg+1,f
  8422  1664  3000               	movlw	0
  8423  1665  1803               	skipnc
  8424  1666  3001               	movlw	1
  8425  1667  07F2               	addwf	i1___ftpack@arg+2,f
  8426  1668  3001               	movlw	1
  8427  1669                     u371_25:	
  8428  1669  36F2               	lsrf	i1___ftpack@arg+2,f
  8429  166A  0CF1               	rrf	i1___ftpack@arg+1,f
  8430  166B  0CF0               	rrf	i1___ftpack@arg,f
  8431  166C  0B89               	decfsz	9,f
  8432  166D  2E69               	goto	u371_25
  8433  166E                     i1l467:	
  8434  166E  30FF               	movlw	255
  8435  166F  0572               	andwf	i1___ftpack@arg+2,w
  8436  1670  1903               	btfsc	3,2
  8437  1671  2E7B               	goto	i1l2472
  8438  1672  2E5A               	goto	i1l2464
  8439  1673                     i1l2470:	
  8440  1673  3001               	movlw	1
  8441  1674  02F3               	subwf	i1___ftpack@exp,f
  8442  1675  3001               	movlw	1
  8443  1676                     u373_25:	
  8444  1676  35F0               	lslf	i1___ftpack@arg,f
  8445  1677  0DF1               	rlf	i1___ftpack@arg+1,f
  8446  1678  0DF2               	rlf	i1___ftpack@arg+2,f
  8447  1679  0B89               	decfsz	9,f
  8448  167A  2E76               	goto	u373_25
  8449  167B                     i1l2472:	
  8450  167B  1BF1               	btfsc	i1___ftpack@arg+1,7
  8451  167C  2E81               	goto	i1l474
  8452  167D  3002               	movlw	2
  8453  167E  0273               	subwf	i1___ftpack@exp,w
  8454  167F  1803               	skipnc
  8455  1680  2E73               	goto	i1l2470
  8456  1681                     i1l474:	
  8457  1681  1873               	btfsc	i1___ftpack@exp,0
  8458  1682  2E89               	goto	i1l475
  8459  1683  30FF               	movlw	255
  8460  1684  05F0               	andwf	i1___ftpack@arg,f
  8461  1685  307F               	movlw	127
  8462  1686  05F1               	andwf	i1___ftpack@arg+1,f
  8463  1687  30FF               	movlw	255
  8464  1688  05F2               	andwf	i1___ftpack@arg+2,f
  8465  1689                     i1l475:	
  8466  1689  1003               	clrc
  8467  168A  0CF3               	rrf	i1___ftpack@exp,f
  8468  168B  0873               	movf	i1___ftpack@exp,w
  8469  168C  00F5               	movwf	??i1___ftpack
  8470  168D  01F6               	clrf	??i1___ftpack+1
  8471  168E  01F7               	clrf	??i1___ftpack+2
  8472  168F  3010               	movlw	16
  8473  1690                     u377_25:	
  8474  1690  35F5               	lslf	??i1___ftpack,f
  8475  1691  0DF6               	rlf	??i1___ftpack+1,f
  8476  1692  0DF7               	rlf	??i1___ftpack+2,f
  8477  1693  0B89               	decfsz	9,f
  8478  1694  2E90               	goto	u377_25
  8479  1695  0875               	movf	??i1___ftpack,w
  8480  1696  04F0               	iorwf	i1___ftpack@arg,f
  8481  1697  0876               	movf	??i1___ftpack+1,w
  8482  1698  04F1               	iorwf	i1___ftpack@arg+1,f
  8483  1699  0877               	movf	??i1___ftpack+2,w
  8484  169A  04F2               	iorwf	i1___ftpack@arg+2,f
  8485  169B  0874               	movf	i1___ftpack@sign,w
  8486  169C  1903               	btfsc	3,2
  8487  169D  0008               	return
  8488  169E  17F2               	bsf	i1___ftpack@arg+2,7
  8489  169F  0008               	return
  8490  16A0                     __end_ofi1___ftpack:	
  8491  007E                     btemp	set	126	;btemp
  8492  007E                     int$flags	set	126
  8493  007E                     wtemp0	set	126


Data Sizes:
    Strings     9
    Constant    118
    Data        4
    BSS         5
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     58      62
    BANK1            80     75      80
    BANK2            80     16      16
    BANK3            80      0       0
    BANK4            80      0       0
    BANK5            80      0       0
    BANK6            80      0       0
    BANK7            80      0       0
    BANK8            80      0       0
    BANK9            80      0       0
    BANK10           80      0       0
    BANK11           80      0       0
    BANK12           80      0       0
    BANK13           80      0       0
    BANK14           80      0       0
    BANK15           80      0       0
    BANK16           80      0       0
    BANK17           80      0       0
    BANK18           80      0       0
    BANK19           80      0       0
    BANK20           80      0       0
    BANK21           80      0       0
    BANK22           80      0       0
    BANK23           80      0       0
    BANK24           80      0       0
    BANK25           80      0       0
    BANK26           80      0       0
    BANK27           80      0       0
    BANK28           80      0       0
    BANK29           80      0       0
    BANK30           80      0       0
    BANK31           80      0       0
    BANK32           80      0       0
    BANK33           80      0       0
    BANK34           80      0       0
    BANK35           80      0       0
    BANK36           80      0       0
    BANK37           80      0       0
    BANK38           80      0       0
    BANK39           80      0       0
    BANK40           80      0       0
    BANK41           80      0       0
    BANK42           80      0       0
    BANK43           80      0       0
    BANK44           80      0       0
    BANK45           80      0       0
    BANK46           80      0       0
    BANK47           80      0       0
    BANK48           80      0       0
    BANK49           80      0       0
    BANK50           80      0       0

Pointer List with Targets:

    sprintf@f	PTR const unsigned char  size(2) Largest target is 9
		 -> STR_1(CODE[9]), 

    sprintf@sp	PTR unsigned char  size(1) Largest target is 16
		 -> main@buffer1(BANK2[16]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK1[2]), 

    Lcd_Out2@buffer	PTR unsigned char  size(1) Largest target is 16
		 -> main@buffer1(BANK2[16]), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _interrupcion in COMMON

    _interrupcion->___awtoft
    ___ftdiv->___awtoft
    ___awtoft->i1___awdiv

Critical Paths under _main in BANK0

    _sprintf->_scale
    _scale->___ftmul
    _fround->___ftmul
    ___wmul->___awdiv
    ___ftmul->___wmul
    ___awdiv->___awmod
    ___lltoft->___ftpack
    ___fttol->_scale
    _Lcd_Out2->_Lcd_Chr_CP
    _Lcd_Out2->_Lcd_Cmd
    _Lcd_Init->_Lcd_Cmd

Critical Paths under _interrupcion in BANK0

    _interrupcion->___ftdiv
    ___ftdiv->___awtoft

Critical Paths under _main in BANK1

    _main->_sprintf
    _sprintf->___ftsub
    ___fttol->_scale
    ___ftsub->___ftadd
    ___ftadd->_fround

Critical Paths under _interrupcion in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _interrupcion in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _interrupcion in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _interrupcion in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _interrupcion in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _interrupcion in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _interrupcion in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _interrupcion in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _interrupcion in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _interrupcion in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _interrupcion in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _interrupcion in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _interrupcion in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _interrupcion in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _interrupcion in BANK15

    None.

Critical Paths under _main in BANK16

    None.

Critical Paths under _interrupcion in BANK16

    None.

Critical Paths under _main in BANK17

    None.

Critical Paths under _interrupcion in BANK17

    None.

Critical Paths under _main in BANK18

    None.

Critical Paths under _interrupcion in BANK18

    None.

Critical Paths under _main in BANK19

    None.

Critical Paths under _interrupcion in BANK19

    None.

Critical Paths under _main in BANK20

    None.

Critical Paths under _interrupcion in BANK20

    None.

Critical Paths under _main in BANK21

    None.

Critical Paths under _interrupcion in BANK21

    None.

Critical Paths under _main in BANK22

    None.

Critical Paths under _interrupcion in BANK22

    None.

Critical Paths under _main in BANK23

    None.

Critical Paths under _interrupcion in BANK23

    None.

Critical Paths under _main in BANK24

    None.

Critical Paths under _interrupcion in BANK24

    None.

Critical Paths under _main in BANK25

    None.

Critical Paths under _interrupcion in BANK25

    None.

Critical Paths under _main in BANK26

    None.

Critical Paths under _interrupcion in BANK26

    None.

Critical Paths under _main in BANK27

    None.

Critical Paths under _interrupcion in BANK27

    None.

Critical Paths under _main in BANK28

    None.

Critical Paths under _interrupcion in BANK28

    None.

Critical Paths under _main in BANK29

    None.

Critical Paths under _interrupcion in BANK29

    None.

Critical Paths under _main in BANK30

    None.

Critical Paths under _interrupcion in BANK30

    None.

Critical Paths under _main in BANK31

    None.

Critical Paths under _interrupcion in BANK31

    None.

Critical Paths under _main in BANK32

    None.

Critical Paths under _interrupcion in BANK32

    None.

Critical Paths under _main in BANK33

    None.

Critical Paths under _interrupcion in BANK33

    None.

Critical Paths under _main in BANK34

    None.

Critical Paths under _interrupcion in BANK34

    None.

Critical Paths under _main in BANK35

    None.

Critical Paths under _interrupcion in BANK35

    None.

Critical Paths under _main in BANK36

    None.

Critical Paths under _interrupcion in BANK36

    None.

Critical Paths under _main in BANK37

    None.

Critical Paths under _interrupcion in BANK37

    None.

Critical Paths under _main in BANK38

    None.

Critical Paths under _interrupcion in BANK38

    None.

Critical Paths under _main in BANK39

    None.

Critical Paths under _interrupcion in BANK39

    None.

Critical Paths under _main in BANK40

    None.

Critical Paths under _interrupcion in BANK40

    None.

Critical Paths under _main in BANK41

    None.

Critical Paths under _interrupcion in BANK41

    None.

Critical Paths under _main in BANK42

    None.

Critical Paths under _interrupcion in BANK42

    None.

Critical Paths under _main in BANK43

    None.

Critical Paths under _interrupcion in BANK43

    None.

Critical Paths under _main in BANK44

    None.

Critical Paths under _interrupcion in BANK44

    None.

Critical Paths under _main in BANK45

    None.

Critical Paths under _interrupcion in BANK45

    None.

Critical Paths under _main in BANK46

    None.

Critical Paths under _interrupcion in BANK46

    None.

Critical Paths under _main in BANK47

    None.

Critical Paths under _interrupcion in BANK47

    None.

Critical Paths under _main in BANK48

    None.

Critical Paths under _interrupcion in BANK48

    None.

Critical Paths under _main in BANK49

    None.

Critical Paths under _interrupcion in BANK49

    None.

Critical Paths under _main in BANK50

    None.

Critical Paths under _interrupcion in BANK50

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                22    18      4   49700
                                             69 BANK1      6     2      4
                                              0 BANK2     16    16      0
                            _Lcd_Cmd
                           _Lcd_Init
                           _Lcd_Out2
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             41    36      5   48415
                                             33 BANK1     36    31      5
                            ___awdiv
                            ___ftadd
                             ___ftge
                            ___ftmul
                            ___ftneg
                            ___ftsub
                            ___fttol
                            ___lldiv
                            ___llmod
                           ___lltoft
                             ___wmul
                         __div_to_l_
                        __tdiv_to_l_
                             _fround
                            _isdigit
                              _scale
 ---------------------------------------------------------------------------------
 (2) _scale                                                9     6      3   11343
                                             56 BANK0      2     2      0
                                              0 BANK1      7     4      3
                            ___awdiv
                            ___awmod
                            ___ftmul
                             ___wmul
 ---------------------------------------------------------------------------------
 (2) _isdigit                                              2     2      0      68
                                             18 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (2) _fround                                              14    11      3   11064
                                              0 BANK1     14    11      3
                            ___awdiv
                            ___awmod
                            ___ftmul
                             ___wmul
 ---------------------------------------------------------------------------------
 (3) ___wmul                                               6     2      4    2652
                                             34 BANK0      6     2      4
                            ___awdiv (ARG)
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (3) ___ftmul                                             16    10      6    4958
                                             40 BANK0     16    10      6
                            ___awdiv (ARG)
                            ___awmod (ARG)
                           ___ftpack
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (3) ___awmod                                              7     3      4    1448
                                             18 BANK0      7     3      4
 ---------------------------------------------------------------------------------
 (3) ___awdiv                                              9     5      4    1656
                                             25 BANK0      9     5      4
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (2) __tdiv_to_l_                                         16    10      6     431
                                             18 BANK0     16    10      6
 ---------------------------------------------------------------------------------
 (2) __div_to_l_                                          20    14      6     574
                                             18 BANK0     20    14      6
 ---------------------------------------------------------------------------------
 (2) ___lltoft                                             6     2      4    2493
                                             26 BANK0      6     2      4
                           ___ftpack
 ---------------------------------------------------------------------------------
 (2) ___llmod                                             10     2      8     543
                                             18 BANK0     10     2      8
 ---------------------------------------------------------------------------------
 (2) ___lldiv                                             14     6      8     418
                                             18 BANK0     14     6      8
 ---------------------------------------------------------------------------------
 (2) ___fttol                                             14    10      4     444
                                              7 BANK1     14    10      4
                            ___ftmul (ARG)
                              _scale (ARG)
 ---------------------------------------------------------------------------------
 (2) ___ftsub                                              6     0      6    4097
                                             27 BANK1      6     0      6
                            ___ftadd
                           ___lltoft (ARG)
 ---------------------------------------------------------------------------------
 (3) ___ftadd                                             13     7      6    3847
                                             14 BANK1     13     7      6
                           ___ftpack
                             _fround (ARG)
 ---------------------------------------------------------------------------------
 (4) ___ftpack                                             8     3      5    2314
                                             18 BANK0      8     3      5
 ---------------------------------------------------------------------------------
 (2) ___ftneg                                              3     0      3     109
                                             18 BANK0      3     0      3
 ---------------------------------------------------------------------------------
 (2) ___ftge                                               9     3      6     648
                                             18 BANK0      9     3      6
 ---------------------------------------------------------------------------------
 (1) _Lcd_Out2                                             5     3      2     661
                                             21 BANK0      5     3      2
                         _Lcd_Chr_CP
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (2) _Lcd_Chr_CP                                           3     3      0     176
                                             18 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (1) _Lcd_Init                                             2     2      0     314
                                             21 BANK0      2     2      0
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (2) _Lcd_Cmd                                              3     3      0     176
                                             18 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _interrupcion                                         1     1      0    1689
                                             17 BANK0      1     1      0
                           ___awtoft
                            ___ftdiv
                          i1___awdiv
 ---------------------------------------------------------------------------------
 (6) i1___awdiv                                            9     5      4     352
                                              0 COMMON     9     5      4
 ---------------------------------------------------------------------------------
 (6) ___ftdiv                                             16    10      6     795
                                              1 BANK0     16    10      6
                           ___awtoft (ARG)
                          i1___awdiv (ARG)
                         i1___ftpack
 ---------------------------------------------------------------------------------
 (6) ___awtoft                                             6     3      3     542
                                              9 COMMON     5     2      3
                                              0 BANK0      1     1      0
                          i1___awdiv (ARG)
                         i1___ftpack
 ---------------------------------------------------------------------------------
 (7) i1___ftpack                                           8     3      5     387
                                              0 COMMON     8     3      5
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Lcd_Cmd
   _Lcd_Init
     _Lcd_Cmd
   _Lcd_Out2
     _Lcd_Chr_CP
     _Lcd_Cmd
   _sprintf
     ___awdiv
       ___awmod (ARG)
     ___ftadd
       ___ftpack
       _fround (ARG)
         ___awdiv
           ___awmod (ARG)
         ___awmod
         ___ftmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___ftpack (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         ___wmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
     ___ftge
     ___ftmul
       ___awdiv (ARG)
         ___awmod (ARG)
       ___awmod (ARG)
       ___ftpack (ARG)
       ___wmul (ARG)
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
     ___ftneg
     ___ftsub
       ___ftadd
         ___ftpack
         _fround (ARG)
           ___awdiv
             ___awmod (ARG)
           ___awmod
           ___ftmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___wmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
       ___lltoft (ARG)
         ___ftpack
     ___fttol
       ___ftmul (ARG)
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___ftpack (ARG)
         ___wmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
       _scale (ARG)
         ___awdiv
           ___awmod (ARG)
         ___awmod
         ___ftmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___ftpack (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         ___wmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
     ___lldiv
     ___llmod
     ___lltoft
       ___ftpack
     ___wmul
       ___awdiv (ARG)
         ___awmod (ARG)
       ___awmod (ARG)
     __div_to_l_
     __tdiv_to_l_
     _fround
       ___awdiv
         ___awmod (ARG)
       ___awmod
       ___ftmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___ftpack (ARG)
         ___wmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
       ___wmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
     _isdigit
     _scale
       ___awdiv
         ___awmod (ARG)
       ___awmod
       ___ftmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___ftpack (ARG)
         ___wmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
       ___wmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)

 _interrupcion (ROOT)
   ___awtoft
     i1___awdiv (ARG)
     i1___ftpack (ARG)
   ___ftdiv
     ___awtoft (ARG)
       i1___awdiv (ARG)
       i1___ftpack (ARG)
     i1___awdiv (ARG)
     i1___ftpack (ARG)
   i1___awdiv

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             FF0      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      E       E       2      100.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     3A      3E       5       77.5%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BANK1               50     4B      50       7      100.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BITBANK2            50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BANK2               50     10      10       9       20.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BITBANK3            50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BANK3               50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITBANK4            50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BANK4               50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITBANK5            50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BANK5               50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITBANK6            50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BANK6               50      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITBANK7            50      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BANK7               50      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITBANK8            50      0       0      20        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BANK8               50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BITBANK9            50      0       0      22        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BANK9               50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BITBANK10           50      0       0      24        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BANK10              50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BITBANK11           50      0       0      26        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BANK11              50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
ABS                  0      0      AC      28        0.0%
BITBANK12           50      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BANK12              50      0       0      30        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITBANK13           50      0       0      31        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BANK13              50      0       0      32        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%
BITBANK14           50      0       0      33        0.0%
BITSFR32             0      0       0      33        0.0%
SFR32                0      0       0      33        0.0%
BANK14              50      0       0      34        0.0%
BITSFR33             0      0       0      34        0.0%
SFR33                0      0       0      34        0.0%
BITBANK15           50      0       0      35        0.0%
BITSFR34             0      0       0      35        0.0%
SFR34                0      0       0      35        0.0%
BANK15              50      0       0      36        0.0%
BITSFR35             0      0       0      36        0.0%
SFR35                0      0       0      36        0.0%
BITBANK16           50      0       0      37        0.0%
BITSFR36             0      0       0      37        0.0%
SFR36                0      0       0      37        0.0%
BANK16              50      0       0      38        0.0%
BITSFR37             0      0       0      38        0.0%
SFR37                0      0       0      38        0.0%
BITBANK17           50      0       0      39        0.0%
BITSFR38             0      0       0      39        0.0%
SFR38                0      0       0      39        0.0%
BANK17              50      0       0      40        0.0%
BITSFR39             0      0       0      40        0.0%
SFR39                0      0       0      40        0.0%
BITBANK18           50      0       0      41        0.0%
BITSFR40             0      0       0      41        0.0%
SFR40                0      0       0      41        0.0%
BANK18              50      0       0      42        0.0%
BITSFR41             0      0       0      42        0.0%
SFR41                0      0       0      42        0.0%
BITBANK19           50      0       0      43        0.0%
BITSFR42             0      0       0      43        0.0%
SFR42                0      0       0      43        0.0%
BANK19              50      0       0      44        0.0%
BITSFR43             0      0       0      44        0.0%
SFR43                0      0       0      44        0.0%
BITBANK20           50      0       0      45        0.0%
BITSFR44             0      0       0      45        0.0%
SFR44                0      0       0      45        0.0%
BANK20              50      0       0      46        0.0%
BITSFR45             0      0       0      46        0.0%
SFR45                0      0       0      46        0.0%
BITBANK21           50      0       0      47        0.0%
BITSFR46             0      0       0      47        0.0%
SFR46                0      0       0      47        0.0%
BANK21              50      0       0      48        0.0%
BITSFR47             0      0       0      48        0.0%
SFR47                0      0       0      48        0.0%
BITBANK22           50      0       0      49        0.0%
BITSFR48             0      0       0      49        0.0%
SFR48                0      0       0      49        0.0%
BANK22              50      0       0      50        0.0%
BITSFR49             0      0       0      50        0.0%
SFR49                0      0       0      50        0.0%
BITBANK23           50      0       0      51        0.0%
BITSFR50             0      0       0      51        0.0%
SFR50                0      0       0      51        0.0%
BANK23              50      0       0      52        0.0%
BITSFR51             0      0       0      52        0.0%
SFR51                0      0       0      52        0.0%
BITBANK24           50      0       0      53        0.0%
BITSFR52             0      0       0      53        0.0%
SFR52                0      0       0      53        0.0%
BANK24              50      0       0      54        0.0%
BITSFR53             0      0       0      54        0.0%
SFR53                0      0       0      54        0.0%
BITBANK25           50      0       0      55        0.0%
BITSFR54             0      0       0      55        0.0%
SFR54                0      0       0      55        0.0%
BANK25              50      0       0      56        0.0%
BITSFR55             0      0       0      56        0.0%
SFR55                0      0       0      56        0.0%
BITBANK26           50      0       0      57        0.0%
BITSFR56             0      0       0      57        0.0%
SFR56                0      0       0      57        0.0%
BANK26              50      0       0      58        0.0%
BITSFR57             0      0       0      58        0.0%
SFR57                0      0       0      58        0.0%
BITSFR58             0      0       0      59        0.0%
SFR58                0      0       0      59        0.0%
DATA                 0      0      AC      59        0.0%
BITBANK27           50      0       0      60        0.0%
BITSFR59             0      0       0      60        0.0%
SFR59                0      0       0      60        0.0%
BANK27              50      0       0      61        0.0%
BITSFR60             0      0       0      61        0.0%
SFR60                0      0       0      61        0.0%
BITBANK28           50      0       0      62        0.0%
BITSFR61             0      0       0      62        0.0%
SFR61                0      0       0      62        0.0%
BANK28              50      0       0      63        0.0%
BITSFR62             0      0       0      63        0.0%
SFR62                0      0       0      63        0.0%
BITBANK29           50      0       0      64        0.0%
BITSFR63             0      0       0      64        0.0%
SFR63                0      0       0      64        0.0%
BANK29              50      0       0      65        0.0%
BITBANK30           50      0       0      66        0.0%
BANK30              50      0       0      67        0.0%
BITBANK31           50      0       0      68        0.0%
BANK31              50      0       0      69        0.0%
BITBANK32           50      0       0      70        0.0%
BANK32              50      0       0      71        0.0%
BITBANK33           50      0       0      72        0.0%
BANK33              50      0       0      73        0.0%
BITBANK34           50      0       0      74        0.0%
BANK34              50      0       0      75        0.0%
BITBANK35           50      0       0      76        0.0%
BANK35              50      0       0      77        0.0%
BITBANK36           50      0       0      78        0.0%
BANK36              50      0       0      79        0.0%
BITBANK37           50      0       0      80        0.0%
BANK37              50      0       0      81        0.0%
BITBANK38           50      0       0      82        0.0%
BANK38              50      0       0      83        0.0%
BITBANK39           50      0       0      84        0.0%
BANK39              50      0       0      85        0.0%
BITBANK40           50      0       0      86        0.0%
BANK40              50      0       0      87        0.0%
BITBANK41           50      0       0      88        0.0%
BANK41              50      0       0      89        0.0%
BITBANK42           50      0       0      90        0.0%
BANK42              50      0       0      91        0.0%
BITBANK43           50      0       0      92        0.0%
BANK43              50      0       0      93        0.0%
BITBANK44           50      0       0      94        0.0%
BANK44              50      0       0      95        0.0%
BITBANK45           50      0       0      96        0.0%
BANK45              50      0       0      97        0.0%
BITBANK46           50      0       0      98        0.0%
BANK46              50      0       0      99        0.0%
BITBANK47           50      0       0     100        0.0%
BANK47              50      0       0     101        0.0%
BITBANK48           50      0       0     102        0.0%
BANK48              50      0       0     103        0.0%
BITBANK49           50      0       0     104        0.0%
BANK49              50      0       0     105        0.0%
BITBANK50           50      0       0     106        0.0%
BANK50              50      0       0     107        0.0%


Microchip Technology PIC Macro Assembler V1.45 build -152302408 
Symbol Table                                                                                   Wed Oct 03 15:46:07 2018

             i1___ftpack 163C              __CFG_CP$OFF 0000                       l51 0986  
                     l52 09AE             ___awdiv@sign 003F      ___wmul@multiplicand 0044  
           ___ftadd@exp1 00BA             ___ftadd@exp2 00B9              __CFG_LVP$ON 0000  
           ___ftadd@sign 00B8                      l154 00DC                      l159 020C  
                    l524 0AD4                      l534 0B4D                      l455 0D6E  
                    l199 0559                      l289 13CA                      l474 16E6  
                    l475 16EE                      l467 16D3                      l575 17E6  
                    l498 0BF8             __CFG_CPD$OFF 0000             ___awmod@sign 0038  
           __CFG_BORV$LO 0000                      wreg 0009              _sprintf$974 00CC  
           __CFG_ZCD$OFF 0000              main@buffer1 0120             ___ftdiv@cntr 002B  
           ___ftdiv@sign 0030                     l3002 0B81                     l2210 13BF  
                   l3012 0B97                     l2220 0ABC                     l3030 0BC4  
                   l3006 0B88                     l3102 0A73                     l3032 0BCE  
                   l3024 0BB1                     l3042 0BEA                     l3034 0BD3  
                   l2314 0D65                     l2306 0D4A                     l2242 0B0F  
                   l2234 0AF5                     l3106 0A7B                     l3210 00A6  
                   l2324 1498                     l3052 0C1C                     l3044 0BF4  
                   l3036 0BD7                     l2404 15FA                     l2316 0D71  
                   l2308 0D58                     l2260 0B44                     l2252 0B29  
                   l3220 00DE                     l3204 0095                     l3062 0C37  
                   l2414 1628                     l2406 1608                     l2430 14D4  
                   l2262 0B50                     l2254 0B37                     l3134 0727  
                   l3126 0697                     l3150 0E3A                     l3222 00F3  
                   l2328 14AE                     l3048 0C0A                     l2272 0C7B  
                   l3072 0A06                     l3160 0EC0                     l3320 0375  
                   l3304 0331                     l2362 1792                     l2418 1633  
                   l2434 14EC                     l3090 0A57                     l2540 144F  
                   l2380 17C2                     l2428 14C6                     l1900 15A2  
                   l3156 0EA1                     l3316 0358                     l3308 034E  
                   l3260 01F0                     l3252 01A3                     l3236 0143  
                   l3404 007D                     l2542 1452                     l3182 13E5  
                   l2390 17E9                     l2382 17D0                     l2438 14F7  
                   l3190 1421                     l2278 0C98                     l3094 0A5F  
                   l3078 0A1C                     l3174 0FE1                     l3342 040C  
                   l3334 038C                     l3318 035C                     l3406 05A7  
                   l2536 1449                     l3192 1431                     l2296 0D2B  
                   l2288 0CE3                     l3168 0F7A                     l3336 03FB  
                   l2554 146A                     l2538 144C                     l2546 1458  
                   l2394 17F7                     l1906 15AD                     l3274 0261  
                   l3266 0234                     l2548 1466                     l2388 17DD  
                   l1932 15E4                     l1924 15D3                     l1916 15B5  
                   l3372 0532                     l3356 0443                     l3348 0426  
                   l3292 02FE                     l3380 0547                     l3452 1747  
                   l1918 15C1                     l3390 0578                     l3278 027A  
                   l1928 15DC                     l1944 150B                     l1880 13C4  
                   l3392 057C                     l3288 02BB                     l3464 175D  
                   l1970 1541                     l1962 1530                     l3378 0542  
                   l3298 0304                     l1956 1518                     l1948 1512  
                   l3388 0575                     l1958 1524                     l1966 1539  
                   l3398 0590                     l2972 16B0                     l2982 16D8  
                   l2974 16BA                     l2984 16E0                     l2976 16BF  
                   l2968 16A9                     STR_1 1827                     u3005 0793  
                   u3015 07AE                     u3025 07BF                     u3205 0B2A  
                   u2405 15B8                     u3145 0AF6                     u2425 15C2  
                   u2505 151B                     u2345 13CB                     u3235 0B45  
                   u3155 0B06                     u2435 15CC                     u2355 13D0  
                   u3325 0D4B                     u3165 0B10                     u2445 15D4  
                   u2525 152A                     u2535 1531                     u3435 1799  
                   u3355 0D66                     u3275 0CE4                     u3605 14C9  
                   u3285 0D0E                     u5125 025F                     u5045 0157  
                   u3535 15FD                     u3465 17C3                     u3625 14E2  
                   u5225 0415                     u2915 080D                     u4515 16F5  
                   u4435 16B5                     u3555 1609                     u3635 14ED  
                   u5235 0421                     u5155 0327                     u2925 081E  
                   u3565 161D                     u5085 0216                     u2935 082C  
                   u5407 07DD                     u4455 16CE                     u3495 17DE  
                   u3575 1629                     u5095 023E                     u2945 083B  
                   u5417 07E3                     u4625 0BB2                     u2955 0856  
                   u5507 0993                     u5427 07E9                     u4475 16DB  
                   u4715 0BEB                     u5195 0365                     u2965 0867  
                   u5517 09A1                     u5437 07F0                     u5357 1741  
                   u5527 09BB                     u5447 0953                     u2975 0765  
                   u4655 0BC5                     u4815 0A60                     u5295 0568  
                   u5367 174F                     u5537 09C9                     u5457 095B  
                   u2985 0776                     u4825 0A66                     u5377 1755  
                   u5547 0848                     u5467 0963                     u5387 07A0  
                   u2995 0784                     u5557 084E                     u5477 096B  
                   u5397 07A6                     u4685 0BD8                     u5567 0885  
                   u5487 0973                     u4855 0A7C                     u5577 088B  
                   u5497 097B                     u4865 0A82                     u4785 0A28  
                   u5587 0894                     u4795 0A38                     u4965 1426  
                   _TMR1 020C             __CFG_WRT$OFF 0000            __CFG_FCMEN$ON 0000  
                   _main 1705             ___ftpack@arg 0032             ___ftpack@exp 0035  
                   fsr0h 0005                     fsr1h 0007                     indf0 0000  
                   fsr0l 0004                     indf1 0001                     fsr1l 0006  
                   btemp 007E            __CFG_BOREN$ON 0000                     start 005A  
        __end_of_Lcd_Cmd 0899            __CFG_CSWEN$ON 0000            __CFG_MCLRE$ON 0000  
           ___ftmul@cntr 0056             ___ftmul@sign 0057               _Lcd_Chr_CP 075E  
           ___fttol@exp1 00B4             ___fttol@lval 00B0           Lcd_Out2@buffer 0036  
                  ?_main 00E5           i1___awdiv@sign 0076          __end_of___awdiv 15E9  
        __end_of___ftadd 0C5D            __CFG_WDTE$OFF 0000          __end_of___awmod 1546  
        __end_of___ftdiv 0942          __end_of___ftneg 07FE          __end_of___lldiv 163C  
        __end_of___ftmul 0AA3          ___awdiv@divisor 0039          __end_of___llmod 1500  
        __end_of___ftsub 13FB          __end_of___fttol 1800                    i1l474 1681  
                  i1l475 1689                    i1l467 166E          ___awdiv@counter 003E  
                  _PORTA 000C                    _PORTC 000E                    _PORTD 000F  
          __CFG_PWRTE$ON 0000             ___lltoft@exp 003F            ___awtoft@sign 0020  
        __end_of_dpowers 1858                    _scale 0D7A          __end_of_isdigit 13C1  
          ___ftpack@sign 0036                    status 0003                    wtemp0 007E  
        __end_of_sprintf 05AE       __size_ofi1___awdiv 0051           i1___ftpack@arg 0070  
         i1___ftpack@exp 0073         __end_of_Lcd_Init 09EF         __end_of_Lcd_Out2 1481  
        __initialization 005C             __end_of_main 1779              ?i1___ftpack 0070  
                 ??_main 00E9            ___fttol@sign1 00AF     __size_of__tdiv_to_l_ 00B6  
       ___llmod@dividend 0036                   ?_scale 00A0         ___awdiv@dividend 003B  
       __end_of___awtoft 141C                   _ANSELA 1F38                   _ANSELC 1F4E  
                 _ANSELD 1F59         __end_of___ftpack 1705         __end_of___lltoft 1446  
                 i1l2460 164B                   i1l2470 1673                   i1l2462 1655  
                 i1l2472 167B                   i1l2464 165A                   i1l2456 1644  
                 i1l2900 0046                   i1l2902 004C                   i1l2816 0920  
                 i1l2808 0907                   i1l2832 1550                   i1l2850 156F  
                 i1l2860 158A                   i1l2838 155B                   i1l2864 1592  
                 i1l2856 1581                   i1l2848 1563           __CFG_WDTCCS$SC 0000  
                 i1l2778 1406                   i1l2794 08C6                   i1l2788 08B0  
                 i1l2896 003D                   u421_25 08D8                   u422_25 08E8  
                 u430_25 1566                   u423_25 0908                   u424_25 0917  
                 u432_25 1570                   u425_25 0921                   u433_25 157A  
                 u434_25 1582                   u371_25 1669                   u373_25 1676  
                 u377_25 1690                   u369_25 1650                ??_Lcd_Cmd 0032  
       __end_of__powers_ 187F                   ___ftge 1481              ?_Lcd_Chr_CP 0070  
                 ___wmul 13C1                ??___awdiv 003D                ??___ftadd 00B4  
         __CFG_STVREN$ON 0000                ??___awmod 0036                ??___ftdiv 0027  
              ??___ftneg 0035                ??___lldiv 003A                ??___ftmul 004E  
              ??___llmod 003A                ??___ftsub 0058                ??___fttol 00AB  
                 _fround 05AE         ___awdiv@quotient 0040          ___awmod@divisor 0032  
        ___awmod@counter 0037    ___ftmul@f3_as_product 0053        __end_ofi1___awdiv 1597  
              ??_isdigit 0032                ??_sprintf 00C6      __size_ofi1___ftpack 0064  
__end_of__initialization 0073               ___ftadd@f1 00AE               ___ftadd@f2 00B1  
             ___ftge@ff1 0032               ___ftge@ff2 0035          i1___ftpack@sign 0074  
             ___ftdiv@f1 0024               ___ftdiv@f2 0021               ___ftdiv@f3 002C  
             ___ftneg@f1 0032               ___awtoft@c 0079               ___ftmul@f1 0048  
             ___ftmul@f2 004B               ___ftsub@f1 00BE               ___ftsub@f2 00BB  
             ___fttol@f1 00A7           __pcstackCOMMON 0070            ?_interrupcion 0070  
           __pidataBANK0 07FE             __pidataBANK1 0002               ___lltoft@c 003A  
          __end_of_scale 1000               __div_to_l_ 0C5D                ?_Lcd_Init 0070  
              ?_Lcd_Out2 0035          __div_to_l_@exp1 0045          __div_to_l_@cntr 0044  
                ??_scale 0058          __div_to_l_@quot 0040             sprintf@width 00D8  
    __size_of_Lcd_Chr_CP 0097               __pbssBANK0 005A               __pbssBANK1 00EB  
          __div_to_l_@f1 0032            __div_to_l_@f2 0035           ??_interrupcion 0031  
             __pmaintext 1705                  ?___ftge 0032                  ?___wmul 0042  
        __CFG_PPS1WAY$ON 0000               __pintentry 0004                  ?_fround 00A0  
              ?___awtoft 0079                ?___ftpack 0032                ?___lltoft 003A  
    __CFG_RSTOSC$HFINT32 0000       i1___awdiv@dividend 0072               ??_Lcd_Init 0035  
             ??_Lcd_Out2 0037                  _Lcd_Cmd 0806        __end_of__npowers_ 1827  
     i1___awdiv@quotient 0077     __CFG_SCANE$available 0000          __size_of___ftge 003C  
           ??i1___ftpack 0075                  ___awdiv 1597                  ___ftadd 0B59  
                ___awmod 1500                  ___ftdiv 0899                  ___ftneg 07F5  
                ___lldiv 15E9          __size_of___wmul 001C                  ___ftmul 09EF  
                ___llmod 14BD                  ___ftsub 13DD                  ___fttol 1779  
             _fround$971 00AA               _fround$972 00A7               ??___awtoft 007C  
             ??___ftpack 0037          __size_of_fround 01B0               ??___lltoft 003E  
                __ptext1 0077                  __ptext2 0D7A                  __ptext3 13B2  
                __ptext4 05AE                  __ptext5 13C1                  __ptext6 09EF  
                __ptext7 1500                  __ptext8 1597                  __ptext9 0AA3  
              _T1CLKbits 0211                  _ctiempo 005A                _T1CONbits 020E  
            ?__div_to_l_ 0032                  _dpowers 1830                  _isdigit 13B2  
       ___awmod@dividend 0034                  _sprintf 0077     end_of_initialization 0073  
     __end_ofi1___ftpack 16A0          ___lldiv@divisor 0032          ___lldiv@counter 003F  
           ??_Lcd_Chr_CP 0032                Lcd_Out2@x 0035                Lcd_Out2@y 0038  
         __tdiv_to_l_@f1 0032           __tdiv_to_l_@f2 0035    __CFG_WDTCPS$WDTCPS_31 0000  
          ??__tdiv_to_l_ 0038                _PORTAbits 000C                _PORTCbits 000E  
              _PORTDbits 000F                _TRISAbits 0011                _TRISCbits 0013  
              _TRISDbits 0014                i1___awdiv 1546     __end_of_interrupcion 005A  
       __CFG_FEXTOSC$OFF 0000       __end_of_Lcd_Chr_CP 07F5              ___ftdiv@exp 002F  
    __size_of__div_to_l_ 011D              ___ftmul@exp 0052           __end_of___ftge 14BD  
         __end_of___wmul 13DD           __end_of_fround 075E      start_initialization 005C  
    __end_of__tdiv_to_l_ 0B59               ?i1___awdiv 0070        __size_of_Lcd_Init 00AD  
      __size_of_Lcd_Out2 003B          ___llmod@divisor 0032          ___llmod@counter 003B  
       __CFG_LPBOREN$OFF 0000                 ??___ftge 0038                 ??___wmul 0046  
            __pdataBANK0 005C              __pdataBANK1 00EE                 ??_fround 00A3  
          sprintf@tmpval 00DA               fround@prec 00AD        __size_of___awtoft 0021  
      __size_of___ftpack 0065        __size_of___lltoft 002A                ___latbits 0004  
          __pcstackBANK0 0020            __pcstackBANK1 00A0            __pcstackBANK2 0120  
               ?_Lcd_Cmd 0070              sprintf@flag 00D0              sprintf@fval 00E1  
            sprintf@prec 00D6                 ?___awdiv 0039                 ?___ftadd 00AE  
               ?___awmod 0032                 ?___ftdiv 0021                 ?___ftneg 0032  
               ?___lldiv 0032                 ?___ftmul 0048                 ?___llmod 0032  
               ?___ftsub 00BB                __npowers_ 1800                 ?___fttol 00A7  
      i1___awdiv@divisor 0070        i1___awdiv@counter 0075              __tdiv_to_l_ 0AA3  
              _distancia 00EB    __size_of_interrupcion 0056             ??__div_to_l_ 0038  
               ?_isdigit 0070                _scale$973 00A3              ??i1___awdiv 0074  
               ?_sprintf 00C1           __size_of_scale 0286           ___wmul@product 0046  
               _LATAbits 0016                 _PIE4bits 071A       __end_of__div_to_l_ 0D7A  
               _PIR4bits 0710             _interrupcion 0004             Lcd_Init@data 0036  
      ___wmul@multiplier 0042             Lcd_Out2@data 0039                 _Lcd_Init 0942  
               _Lcd_Out2 1446         __size_of_Lcd_Cmd 0093         __size_of___awdiv 0052  
       __size_of___ftadd 0104         __size_of___awmod 0046         __size_of___ftdiv 00A9  
       __size_of___ftneg 0009         __size_of___lldiv 0053         __size_of___ftmul 00B4  
       __size_of___llmod 0043         __size_of___ftsub 001E         __size_of___fttol 0087  
               ___awtoft 13FB                 ___ftpack 16A0                 ___lltoft 141C  
            _isdigit$757 0032               sprintf@exp 00DE               sprintf@val 00D2  
       __size_of_isdigit 000F           Lcd_Chr_CP@data 0034                 __ptext10 0C5D  
               __ptext11 141C                 __ptext20 1446                 __ptext12 14BD  
               __ptext21 075E                 __ptext13 15E9                 __ptext22 0942  
               __ptext14 1779                 __ptext23 0806                 __ptext15 13DD  
               __ptext16 0B59                 __ptext25 1546                 __ptext17 16A0  
               __ptext26 0899                 __ptext18 07F5                 __ptext27 13FB  
               __ptext19 1481                 __ptext28 163C                 __powers_ 1858  
       __size_of_sprintf 0537              Lcd_Cmd@data 0034            __size_of_main 0074  
               _realizar 00EE     __CFG_WDTCWS$WDTCWS_7 0000                 _precarga 005C  
               int$flags 007E                 main@argc 00E5                 main@argv 00E7  
             _INTCONbits 000B                 isdigit@c 0033                 scale@scl 00A6  
               intlevel1 0000                sprintf@ap 00CF         __tdiv_to_l_@exp1 0041  
       __tdiv_to_l_@cntr 0040                sprintf@sp 00E0         __tdiv_to_l_@quot 003C  
       ___lldiv@dividend 0036        __CFG_CLKOUTEN$OFF 0000               _OSCFRQbits 0893  
           ?__tdiv_to_l_ 0032            __pstringtext1 1830            __pstringtext2 1858  
          __pstringtext3 1800            __pstringtext4 0000                 sprintf@c 00E4  
               sprintf@f 00C1         ___lldiv@quotient 003B  
