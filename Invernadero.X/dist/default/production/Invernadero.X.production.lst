

Microchip Technology PIC LITE Macro Assembler V1.45 build -152302408 
                                                                                               Mon May 06 14:02:30 2019

Microchip Technology Omniscient Code Generator v1.45 (Free mode) build 201711160504
     1                           	processor	16F18877
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	idataBANK0,global,class=CODE,delta=2
     5                           	psect	idataBANK1,global,class=CODE,delta=2
     6                           	psect	idataBANK2,global,class=CODE,delta=2
     7                           	psect	stringtext1,global,class=STRCODE,delta=2
     8                           	psect	stringtext2,global,class=STRCODE,delta=2
     9                           	psect	stringtext3,global,class=STRCODE,delta=2
    10                           	psect	stringtext4,global,class=STRCODE,delta=2
    11                           	psect	cinit,global,class=CODE,merge=1,delta=2
    12                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    13                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
    14                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    15                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1
    16                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1
    17                           	psect	dataBANK2,global,class=BANK2,space=1,delta=1
    18                           	psect	inittext,global,class=CODE,delta=2
    19                           	psect	clrtext,global,class=CODE,delta=2
    20                           	psect	cstackBANK2,global,class=BANK2,space=1,delta=1
    21                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    22                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    23                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    24                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    25                           	psect	text1,local,class=CODE,merge=1,delta=2
    26                           	psect	text2,local,class=CODE,merge=1,delta=2,group=2
    27                           	psect	text3,local,class=CODE,merge=1,delta=2,group=2
    28                           	psect	text4,local,class=CODE,merge=1,delta=2,group=2
    29                           	psect	text5,local,class=CODE,merge=1,delta=2
    30                           	psect	text6,local,class=CODE,merge=1,delta=2,group=2
    31                           	psect	text7,local,class=CODE,merge=1,delta=2,group=2
    32                           	psect	text8,local,class=CODE,merge=1,delta=2,group=2
    33                           	psect	text9,local,class=CODE,merge=1,delta=2,group=2
    34                           	psect	text10,local,class=CODE,merge=1,delta=2,group=2
    35                           	psect	text11,local,class=CODE,merge=1,delta=2,group=2
    36                           	psect	text12,local,class=CODE,merge=1,delta=2,group=2
    37                           	psect	text13,local,class=CODE,merge=1,delta=2,group=2
    38                           	psect	text14,local,class=CODE,merge=1,delta=2,group=2
    39                           	psect	text15,local,class=CODE,merge=1,delta=2,group=2
    40                           	psect	text16,local,class=CODE,merge=1,delta=2,group=2
    41                           	psect	text17,local,class=CODE,merge=1,delta=2
    42                           	psect	swtext1,local,class=CONST,delta=2
    43                           	psect	text18,local,class=CODE,merge=1,delta=2,group=2
    44                           	psect	text19,local,class=CODE,merge=1,delta=2
    45                           	psect	text20,local,class=CODE,merge=1,delta=2
    46                           	psect	text21,local,class=CODE,merge=1,delta=2
    47                           	psect	text22,local,class=CODE,merge=1,delta=2
    48                           	psect	intentry,global,class=CODE,delta=2
    49                           	psect	text24,local,class=CODE,merge=1,delta=2
    50                           	psect	text25,local,class=CODE,merge=1,delta=2
    51                           	psect	text26,local,class=CODE,merge=1,delta=2
    52                           	dabs	1,0x7E,2
    53  0000                     
    54                           ; Version 1.45
    55                           ; Generated 16/11/2017 GMT
    56                           ; 
    57                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    58                           ; All rights reserved.
    59                           ; 
    60                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    61                           ; 
    62                           ; Redistribution and use in source and binary forms, with or without modification, are
    63                           ; permitted provided that the following conditions are met:
    64                           ; 
    65                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    66                           ;        conditions and the following disclaimer.
    67                           ; 
    68                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    69                           ;        of conditions and the following disclaimer in the documentation and/or other
    70                           ;        materials provided with the distribution.
    71                           ; 
    72                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    73                           ;        software without specific prior written permission.
    74                           ; 
    75                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    76                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    77                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    78                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    79                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    80                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    81                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    82                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    83                           ; 
    84                           ; 
    85                           ; Code-generator required, PIC16F18877 Definitions
    86                           ; 
    87                           ; SFR Addresses
    88  0000                     	;# 
    89  0001                     	;# 
    90  0002                     	;# 
    91  0003                     	;# 
    92  0004                     	;# 
    93  0005                     	;# 
    94  0006                     	;# 
    95  0007                     	;# 
    96  0008                     	;# 
    97  0009                     	;# 
    98  000A                     	;# 
    99  000B                     	;# 
   100  000C                     	;# 
   101  000D                     	;# 
   102  000E                     	;# 
   103  000F                     	;# 
   104  0010                     	;# 
   105  0011                     	;# 
   106  0012                     	;# 
   107  0013                     	;# 
   108  0014                     	;# 
   109  0015                     	;# 
   110  0016                     	;# 
   111  0017                     	;# 
   112  0018                     	;# 
   113  0019                     	;# 
   114  001A                     	;# 
   115  001C                     	;# 
   116  001C                     	;# 
   117  001D                     	;# 
   118  001D                     	;# 
   119  001E                     	;# 
   120  001F                     	;# 
   121  008C                     	;# 
   122  008C                     	;# 
   123  008D                     	;# 
   124  008E                     	;# 
   125  008E                     	;# 
   126  008F                     	;# 
   127  0090                     	;# 
   128  0090                     	;# 
   129  0091                     	;# 
   130  0093                     	;# 
   131  0094                     	;# 
   132  0095                     	;# 
   133  0096                     	;# 
   134  0097                     	;# 
   135  0098                     	;# 
   136  0099                     	;# 
   137  009A                     	;# 
   138  009B                     	;# 
   139  009C                     	;# 
   140  009D                     	;# 
   141  009E                     	;# 
   142  010C                     	;# 
   143  010D                     	;# 
   144  010E                     	;# 
   145  010E                     	;# 
   146  010F                     	;# 
   147  0110                     	;# 
   148  0110                     	;# 
   149  0111                     	;# 
   150  0112                     	;# 
   151  0112                     	;# 
   152  0113                     	;# 
   153  0114                     	;# 
   154  0114                     	;# 
   155  0115                     	;# 
   156  0116                     	;# 
   157  0116                     	;# 
   158  0117                     	;# 
   159  0119                     	;# 
   160  0119                     	;# 
   161  0119                     	;# 
   162  011A                     	;# 
   163  011A                     	;# 
   164  011A                     	;# 
   165  011B                     	;# 
   166  011B                     	;# 
   167  011B                     	;# 
   168  011B                     	;# 
   169  011B                     	;# 
   170  011C                     	;# 
   171  011C                     	;# 
   172  011C                     	;# 
   173  011D                     	;# 
   174  011D                     	;# 
   175  011D                     	;# 
   176  011E                     	;# 
   177  011E                     	;# 
   178  011E                     	;# 
   179  011F                     	;# 
   180  011F                     	;# 
   181  011F                     	;# 
   182  011F                     	;# 
   183  011F                     	;# 
   184  018C                     	;# 
   185  018D                     	;# 
   186  018E                     	;# 
   187  018F                     	;# 
   188  0190                     	;# 
   189  0191                     	;# 
   190  0192                     	;# 
   191  0196                     	;# 
   192  0197                     	;# 
   193  0198                     	;# 
   194  0199                     	;# 
   195  019A                     	;# 
   196  019B                     	;# 
   197  019C                     	;# 
   198  020C                     	;# 
   199  020C                     	;# 
   200  020D                     	;# 
   201  020E                     	;# 
   202  020F                     	;# 
   203  020F                     	;# 
   204  0210                     	;# 
   205  0210                     	;# 
   206  0211                     	;# 
   207  0211                     	;# 
   208  0212                     	;# 
   209  0212                     	;# 
   210  0213                     	;# 
   211  0214                     	;# 
   212  0215                     	;# 
   213  0215                     	;# 
   214  0216                     	;# 
   215  0216                     	;# 
   216  0217                     	;# 
   217  0217                     	;# 
   218  0218                     	;# 
   219  0218                     	;# 
   220  0219                     	;# 
   221  021A                     	;# 
   222  021B                     	;# 
   223  021B                     	;# 
   224  021C                     	;# 
   225  021C                     	;# 
   226  021D                     	;# 
   227  021D                     	;# 
   228  021E                     	;# 
   229  021F                     	;# 
   230  028C                     	;# 
   231  028C                     	;# 
   232  028D                     	;# 
   233  028D                     	;# 
   234  028E                     	;# 
   235  028F                     	;# 
   236  0290                     	;# 
   237  0290                     	;# 
   238  0291                     	;# 
   239  0292                     	;# 
   240  0292                     	;# 
   241  0293                     	;# 
   242  0293                     	;# 
   243  0294                     	;# 
   244  0295                     	;# 
   245  0296                     	;# 
   246  0296                     	;# 
   247  0297                     	;# 
   248  0298                     	;# 
   249  0298                     	;# 
   250  0299                     	;# 
   251  0299                     	;# 
   252  029A                     	;# 
   253  029B                     	;# 
   254  029C                     	;# 
   255  029C                     	;# 
   256  029D                     	;# 
   257  030C                     	;# 
   258  030C                     	;# 
   259  030D                     	;# 
   260  030E                     	;# 
   261  030F                     	;# 
   262  0310                     	;# 
   263  0310                     	;# 
   264  0311                     	;# 
   265  0312                     	;# 
   266  0313                     	;# 
   267  0314                     	;# 
   268  0314                     	;# 
   269  0315                     	;# 
   270  0316                     	;# 
   271  0317                     	;# 
   272  0318                     	;# 
   273  0318                     	;# 
   274  0319                     	;# 
   275  031A                     	;# 
   276  031B                     	;# 
   277  031C                     	;# 
   278  031C                     	;# 
   279  031D                     	;# 
   280  031E                     	;# 
   281  031F                     	;# 
   282  038C                     	;# 
   283  038D                     	;# 
   284  038E                     	;# 
   285  0390                     	;# 
   286  0391                     	;# 
   287  0392                     	;# 
   288  040C                     	;# 
   289  040D                     	;# 
   290  040E                     	;# 
   291  040F                     	;# 
   292  0410                     	;# 
   293  0411                     	;# 
   294  0416                     	;# 
   295  0416                     	;# 
   296  0417                     	;# 
   297  0418                     	;# 
   298  0418                     	;# 
   299  0419                     	;# 
   300  041A                     	;# 
   301  041A                     	;# 
   302  041B                     	;# 
   303  041C                     	;# 
   304  041C                     	;# 
   305  041D                     	;# 
   306  041E                     	;# 
   307  041F                     	;# 
   308  048C                     	;# 
   309  048C                     	;# 
   310  048D                     	;# 
   311  048E                     	;# 
   312  048F                     	;# 
   313  048F                     	;# 
   314  0490                     	;# 
   315  0491                     	;# 
   316  0492                     	;# 
   317  0492                     	;# 
   318  0493                     	;# 
   319  0494                     	;# 
   320  0495                     	;# 
   321  0495                     	;# 
   322  0496                     	;# 
   323  0497                     	;# 
   324  0498                     	;# 
   325  0499                     	;# 
   326  049A                     	;# 
   327  049B                     	;# 
   328  049C                     	;# 
   329  049D                     	;# 
   330  050C                     	;# 
   331  050C                     	;# 
   332  050D                     	;# 
   333  050E                     	;# 
   334  050F                     	;# 
   335  050F                     	;# 
   336  0510                     	;# 
   337  0511                     	;# 
   338  0512                     	;# 
   339  0512                     	;# 
   340  0513                     	;# 
   341  0514                     	;# 
   342  0515                     	;# 
   343  0515                     	;# 
   344  0516                     	;# 
   345  0517                     	;# 
   346  0518                     	;# 
   347  0519                     	;# 
   348  051A                     	;# 
   349  051B                     	;# 
   350  051C                     	;# 
   351  051D                     	;# 
   352  058C                     	;# 
   353  058C                     	;# 
   354  058D                     	;# 
   355  058E                     	;# 
   356  058F                     	;# 
   357  058F                     	;# 
   358  0590                     	;# 
   359  0591                     	;# 
   360  0592                     	;# 
   361  0593                     	;# 
   362  060C                     	;# 
   363  060D                     	;# 
   364  060E                     	;# 
   365  060F                     	;# 
   366  0610                     	;# 
   367  0611                     	;# 
   368  0612                     	;# 
   369  0613                     	;# 
   370  0614                     	;# 
   371  0616                     	;# 
   372  0617                     	;# 
   373  0618                     	;# 
   374  0619                     	;# 
   375  061A                     	;# 
   376  061B                     	;# 
   377  061C                     	;# 
   378  061D                     	;# 
   379  061E                     	;# 
   380  068C                     	;# 
   381  068D                     	;# 
   382  068E                     	;# 
   383  068F                     	;# 
   384  0690                     	;# 
   385  0691                     	;# 
   386  0692                     	;# 
   387  0693                     	;# 
   388  0694                     	;# 
   389  070C                     	;# 
   390  070D                     	;# 
   391  070E                     	;# 
   392  070F                     	;# 
   393  0710                     	;# 
   394  0711                     	;# 
   395  0712                     	;# 
   396  0713                     	;# 
   397  0714                     	;# 
   398  0716                     	;# 
   399  0717                     	;# 
   400  0718                     	;# 
   401  0719                     	;# 
   402  071A                     	;# 
   403  071B                     	;# 
   404  071C                     	;# 
   405  071D                     	;# 
   406  071E                     	;# 
   407  0796                     	;# 
   408  0797                     	;# 
   409  0798                     	;# 
   410  0799                     	;# 
   411  079A                     	;# 
   412  079B                     	;# 
   413  080C                     	;# 
   414  080D                     	;# 
   415  080E                     	;# 
   416  080F                     	;# 
   417  0810                     	;# 
   418  0811                     	;# 
   419  0812                     	;# 
   420  0813                     	;# 
   421  0814                     	;# 
   422  081A                     	;# 
   423  081B                     	;# 
   424  081C                     	;# 
   425  081D                     	;# 
   426  081E                     	;# 
   427  081F                     	;# 
   428  088C                     	;# 
   429  088D                     	;# 
   430  088E                     	;# 
   431  088F                     	;# 
   432  0890                     	;# 
   433  0891                     	;# 
   434  0892                     	;# 
   435  0893                     	;# 
   436  0895                     	;# 
   437  0896                     	;# 
   438  0897                     	;# 
   439  0898                     	;# 
   440  0899                     	;# 
   441  089A                     	;# 
   442  089B                     	;# 
   443  090C                     	;# 
   444  090E                     	;# 
   445  090F                     	;# 
   446  091F                     	;# 
   447  098F                     	;# 
   448  098F                     	;# 
   449  0990                     	;# 
   450  0991                     	;# 
   451  0992                     	;# 
   452  0993                     	;# 
   453  0994                     	;# 
   454  0995                     	;# 
   455  0996                     	;# 
   456  0997                     	;# 
   457  1E0F                     	;# 
   458  1E10                     	;# 
   459  1E11                     	;# 
   460  1E12                     	;# 
   461  1E13                     	;# 
   462  1E14                     	;# 
   463  1E15                     	;# 
   464  1E16                     	;# 
   465  1E17                     	;# 
   466  1E18                     	;# 
   467  1E19                     	;# 
   468  1E1A                     	;# 
   469  1E1B                     	;# 
   470  1E1C                     	;# 
   471  1E1D                     	;# 
   472  1E1E                     	;# 
   473  1E1F                     	;# 
   474  1E20                     	;# 
   475  1E21                     	;# 
   476  1E22                     	;# 
   477  1E23                     	;# 
   478  1E24                     	;# 
   479  1E25                     	;# 
   480  1E26                     	;# 
   481  1E27                     	;# 
   482  1E28                     	;# 
   483  1E29                     	;# 
   484  1E2A                     	;# 
   485  1E2B                     	;# 
   486  1E2C                     	;# 
   487  1E2D                     	;# 
   488  1E2E                     	;# 
   489  1E2F                     	;# 
   490  1E30                     	;# 
   491  1E31                     	;# 
   492  1E32                     	;# 
   493  1E33                     	;# 
   494  1E34                     	;# 
   495  1E35                     	;# 
   496  1E36                     	;# 
   497  1E37                     	;# 
   498  1E8F                     	;# 
   499  1E90                     	;# 
   500  1E91                     	;# 
   501  1E92                     	;# 
   502  1E93                     	;# 
   503  1E94                     	;# 
   504  1E95                     	;# 
   505  1E96                     	;# 
   506  1E97                     	;# 
   507  1E9C                     	;# 
   508  1E9D                     	;# 
   509  1E9E                     	;# 
   510  1EA1                     	;# 
   511  1EA2                     	;# 
   512  1EA3                     	;# 
   513  1EA4                     	;# 
   514  1EA5                     	;# 
   515  1EA9                     	;# 
   516  1EAA                     	;# 
   517  1EAB                     	;# 
   518  1EAC                     	;# 
   519  1EB1                     	;# 
   520  1EB2                     	;# 
   521  1EB3                     	;# 
   522  1EB8                     	;# 
   523  1EB9                     	;# 
   524  1EBA                     	;# 
   525  1EBB                     	;# 
   526  1EBC                     	;# 
   527  1EBD                     	;# 
   528  1EBE                     	;# 
   529  1EC3                     	;# 
   530  1EC5                     	;# 
   531  1EC6                     	;# 
   532  1EC7                     	;# 
   533  1EC8                     	;# 
   534  1EC9                     	;# 
   535  1ECA                     	;# 
   536  1ECB                     	;# 
   537  1ECC                     	;# 
   538  1F10                     	;# 
   539  1F11                     	;# 
   540  1F12                     	;# 
   541  1F13                     	;# 
   542  1F14                     	;# 
   543  1F15                     	;# 
   544  1F16                     	;# 
   545  1F17                     	;# 
   546  1F18                     	;# 
   547  1F19                     	;# 
   548  1F1A                     	;# 
   549  1F1B                     	;# 
   550  1F1C                     	;# 
   551  1F1D                     	;# 
   552  1F1E                     	;# 
   553  1F1F                     	;# 
   554  1F20                     	;# 
   555  1F21                     	;# 
   556  1F22                     	;# 
   557  1F23                     	;# 
   558  1F24                     	;# 
   559  1F25                     	;# 
   560  1F26                     	;# 
   561  1F27                     	;# 
   562  1F28                     	;# 
   563  1F29                     	;# 
   564  1F2A                     	;# 
   565  1F2B                     	;# 
   566  1F2C                     	;# 
   567  1F2D                     	;# 
   568  1F2E                     	;# 
   569  1F2F                     	;# 
   570  1F30                     	;# 
   571  1F31                     	;# 
   572  1F32                     	;# 
   573  1F38                     	;# 
   574  1F39                     	;# 
   575  1F3A                     	;# 
   576  1F3B                     	;# 
   577  1F3C                     	;# 
   578  1F3D                     	;# 
   579  1F3E                     	;# 
   580  1F3F                     	;# 
   581  1F40                     	;# 
   582  1F41                     	;# 
   583  1F43                     	;# 
   584  1F44                     	;# 
   585  1F45                     	;# 
   586  1F46                     	;# 
   587  1F47                     	;# 
   588  1F48                     	;# 
   589  1F49                     	;# 
   590  1F4A                     	;# 
   591  1F4B                     	;# 
   592  1F4C                     	;# 
   593  1F4E                     	;# 
   594  1F4F                     	;# 
   595  1F50                     	;# 
   596  1F51                     	;# 
   597  1F52                     	;# 
   598  1F53                     	;# 
   599  1F54                     	;# 
   600  1F55                     	;# 
   601  1F56                     	;# 
   602  1F57                     	;# 
   603  1F59                     	;# 
   604  1F5A                     	;# 
   605  1F5B                     	;# 
   606  1F5C                     	;# 
   607  1F5D                     	;# 
   608  1F61                     	;# 
   609  1F62                     	;# 
   610  1F64                     	;# 
   611  1F65                     	;# 
   612  1F66                     	;# 
   613  1F67                     	;# 
   614  1F68                     	;# 
   615  1F69                     	;# 
   616  1F6A                     	;# 
   617  1F6B                     	;# 
   618  1F6C                     	;# 
   619  1F6D                     	;# 
   620  1FE4                     	;# 
   621  1FE5                     	;# 
   622  1FE6                     	;# 
   623  1FE7                     	;# 
   624  1FE8                     	;# 
   625  1FE9                     	;# 
   626  1FEA                     	;# 
   627  1FEB                     	;# 
   628  1FED                     	;# 
   629  1FEE                     	;# 
   630  1FEF                     	;# 
   631                           
   632                           	psect	idataBANK0
   633  07FC                     __pidataBANK0:	
   634                           
   635                           ;initializer for _limite
   636  07FC  3470               	retlw	112
   637  07FD  3400               	retlw	0
   638                           
   639                           	psect	idataBANK1
   640  13F4                     __pidataBANK1:	
   641                           
   642                           ;initializer for _Kp
   643  13F4  3407               	retlw	7
   644  13F5  341E               	retlw	30
   645  13F6  3440               	retlw	64
   646                           
   647                           ;initializer for _vcc
   648  13F7  3400               	retlw	0
   649  13F8  34A0               	retlw	160
   650  13F9  3440               	retlw	64
   651                           
   652                           ;initializer for _raux
   653  13FA  3440               	retlw	64
   654  13FB  341C               	retlw	28
   655  13FC  3446               	retlw	70
   656                           
   657                           ;initializer for _T
   658  13FD  3405               	retlw	5
   659  13FE  3400               	retlw	0
   660                           
   661                           ;initializer for _ZM
   662  13FF  340C               	retlw	12
   663  1400  3400               	retlw	0
   664                           
   665                           ;initializer for _contadorenviar
   666  1401  3401               	retlw	1
   667  1402  3400               	retlw	0
   668                           
   669                           ;initializer for _temperatura
   670  1403  3418               	retlw	24
   671  1404  3400               	retlw	0
   672                           
   673                           ;initializer for _c
   674  1405  3401               	retlw	1
   675  1406  3400               	retlw	0
   676                           
   677                           	psect	idataBANK2
   678  13D9                     __pidataBANK2:	
   679                           
   680                           ;initializer for _Ti
   681  13D9  34FF               	retlw	255
   682  13DA  345C               	retlw	92
   683  13DB  3442               	retlw	66
   684                           
   685                           ;initializer for _beta
   686  13DC  3490               	retlw	144
   687  13DD  3478               	retlw	120
   688  13DE  3445               	retlw	69
   689                           
   690                           ;initializer for _r0
   691  13DF  3440               	retlw	64
   692  13E0  341C               	retlw	28
   693  13E1  3446               	retlw	70
   694                           
   695                           ;initializer for _temp0
   696  13E2  3400               	retlw	0
   697  13E3  3495               	retlw	149
   698  13E4  3443               	retlw	67
   699                           
   700                           	psect	stringtext1
   701  1839                     __pstringtext1:	
   702  1839                     _dpowers:	
   703  1839  3401               	retlw	1
   704  183A  3400               	retlw	0
   705  183B  340A               	retlw	10
   706  183C  3400               	retlw	0
   707  183D  3464               	retlw	100
   708  183E  3400               	retlw	0
   709  183F  34E8               	retlw	232
   710  1840  3403               	retlw	3
   711  1841  3410               	retlw	16
   712  1842  3427               	retlw	39
   713  1843                     __end_of_dpowers:	
   714                           
   715                           	psect	stringtext2
   716  1800                     __pstringtext2:	
   717  1800                     log@coeff:	
   718  1800  3400               	retlw	0
   719  1801  3400               	retlw	0
   720  1802  3400               	retlw	0
   721  1803  3400               	retlw	0
   722  1804  3480               	retlw	128
   723  1805  343F               	retlw	63
   724  1806  34F0               	retlw	240
   725  1807  34FF               	retlw	255
   726  1808  34BE               	retlw	190
   727  1809  34E2               	retlw	226
   728  180A  34A9               	retlw	169
   729  180B  343E               	retlw	62
   730  180C  3483               	retlw	131
   731  180D  3476               	retlw	118
   732  180E  34BE               	retlw	190
   733  180F  34AE               	retlw	174
   734  1810  342B               	retlw	43
   735  1811  343E               	retlw	62
   736  1812  343C               	retlw	60
   737  1813  34C3               	retlw	195
   738  1814  34BD               	retlw	189
   739  1815  34D2               	retlw	210
   740  1816  3413               	retlw	19
   741  1817  343D               	retlw	61
   742  1818  3478               	retlw	120
   743  1819  34D3               	retlw	211
   744  181A  34BB               	retlw	187
   745  181B                     __end_oflog@coeff:	
   746  000F                     _PORTDbits	set	15
   747  0019                     _LATDbits	set	25
   748  000B                     _INTCONbits	set	11
   749  0014                     _TRISDbits	set	20
   750  000F                     _PORTD	set	15
   751  000E                     _PORTC	set	14
   752  000C                     _PORTA	set	12
   753  0012                     _TRISBbits	set	18
   754  000D                     _PORTB	set	13
   755  0016                     _LATAbits	set	22
   756  000C                     _PORTAbits	set	12
   757  000E                     _PORTCbits	set	14
   758  0011                     _TRISAbits	set	17
   759  0013                     _TRISCbits	set	19
   760  009A                     _ADREFbits	set	154
   761  008C                     _ADRESL	set	140
   762  008D                     _ADRESH	set	141
   763  0093                     _ADCON0bits	set	147
   764  009E                     _ADPCH	set	158
   765  011E                     _TXSTAbits	set	286
   766  011A                     _TX1REG	set	282
   767  011B                     _SPBRG	set	283
   768  011F                     _BAUDCONbits	set	287
   769  011E                     _TX1STAbits	set	286
   770  011D                     _RC1STAbits	set	285
   771  0716                     _PIE0bits	set	1814
   772  070C                     _PIR0bits	set	1804
   773  0893                     _OSCFRQbits	set	2195
   774  1F49                     _IOCBNbits	set	8009
   775  1F59                     _ANSELDbits	set	8025
   776  1F4E                     _ANSELCbits	set	8014
   777  1F38                     _ANSELAbits	set	7992
   778  1F1A                     _RB2PPS	set	7962
   779  1F43                     _ANSELBbits	set	8003
   780  1F4F                     _WPUCbits	set	8015
   781  1F5A                     _WPUDbits	set	8026
   782  1F4A                     _IOCBF	set	8010
   783  1F4A                     _IOCBFbits	set	8010
   784  181B                     STR_1:	
   785  181B  3441               	retlw	65	;'A'
   786  181C  346E               	retlw	110	;'n'
   787  181D  343D               	retlw	61	;'='
   788  181E  3425               	retlw	37	;'%'
   789  181F  3430               	retlw	48	;'0'
   790  1820  3433               	retlw	51	;'3'
   791  1821  3464               	retlw	100	;'d'
   792  1822  3420               	retlw	32	;' '
   793  1823  3452               	retlw	82	;'R'
   794  1824  3466               	retlw	102	;'f'
   795  1825  343D               	retlw	61	;'='
   796  1826  3425               	retlw	37	;'%'
   797  1827  3430               	retlw	48	;'0'
   798  1828  3432               	retlw	50	;'2'
   799  1829  3464               	retlw	100	;'d'
   800  182A  3400               	retlw	0
   801                           
   802                           	psect	stringtext3
   803  182B                     __pstringtext3:	
   804  182B                     STR_2:	
   805  182B  3454               	retlw	84	;'T'
   806  182C  343D               	retlw	61	;'='
   807  182D  3425               	retlw	37	;'%'
   808  182E  3430               	retlw	48	;'0'
   809  182F  3433               	retlw	51	;'3'
   810  1830  3464               	retlw	100	;'d'
   811  1831  3420               	retlw	32	;' '
   812  1832  3455               	retlw	85	;'U'
   813  1833  343D               	retlw	61	;'='
   814  1834  3425               	retlw	37	;'%'
   815  1835  3430               	retlw	48	;'0'
   816  1836  3433               	retlw	51	;'3'
   817  1837  3464               	retlw	100	;'d'
   818  1838  3400               	retlw	0
   819                           
   820                           	psect	stringtext4
   821  0000                     __pstringtext4:	
   822                           
   823                           ; #config settings
   824  0000                     
   825                           	psect	cinit
   826  0079                     start_initialization:	
   827  0079                     __initialization:	
   828                           
   829                           ; Initialize objects allocated to BANK0
   830  0079  3187  27FC  3180   	fcall	__pidataBANK0	;fetch initializer
   831  007C  00E9               	movwf	__pdataBANK0& (0+127)
   832  007D  3187  27FD  3180   	fcall	__pidataBANK0+1	;fetch initializer
   833  0080  00EA               	movwf	(__pdataBANK0+1)& (0+127)
   834                           
   835                           ; Initialize objects allocated to BANK1
   836  0081  30F4               	movlw	low __pidataBANK1
   837  0082  0084               	movwf	4
   838  0083  3093               	movlw	(high __pidataBANK1)| (0+128)
   839  0084  0085               	movwf	5
   840  0085  30D7               	movlw	low __pdataBANK1
   841  0086  0086               	movwf	6
   842  0087  3000               	movlw	high __pdataBANK1
   843  0088  0087               	movwf	7
   844  0089  3013               	movlw	19
   845  008A  3193  23D3  3180   	fcall	init_ram
   846                           
   847                           ; Initialize objects allocated to BANK2
   848  008D  30D9               	movlw	low __pidataBANK2
   849  008E  0084               	movwf	4
   850  008F  3093               	movlw	(high __pidataBANK2)| (0+128)
   851  0090  0085               	movwf	5
   852  0091  3045               	movlw	low __pdataBANK2
   853  0092  0086               	movwf	6
   854  0093  3001               	movlw	high __pdataBANK2
   855  0094  0087               	movwf	7
   856  0095  300C               	movlw	12
   857  0096  3193  23D3  3180   	fcall	init_ram
   858                           
   859                           ; Clear objects allocated to BANK0
   860  0099  01E7               	clrf	__pbssBANK0& (0+127)
   861  009A  01E8               	clrf	(__pbssBANK0+1)& (0+127)
   862                           
   863                           ; Clear objects allocated to BANK1
   864  009B  30A0               	movlw	low __pbssBANK1
   865  009C  0084               	movwf	4
   866  009D  3000               	movlw	high __pbssBANK1
   867  009E  0085               	movwf	5
   868  009F  3022               	movlw	34
   869  00A0  3193  23CD  3180   	fcall	clear_ram0
   870                           
   871                           ; Clear objects allocated to BANK2
   872  00A3  3020               	movlw	low __pbssBANK2
   873  00A4  0084               	movwf	4
   874  00A5  3001               	movlw	high __pbssBANK2
   875  00A6  0085               	movwf	5
   876  00A7  3025               	movlw	37
   877  00A8  3193  23CD         	fcall	clear_ram0
   878  00AA                     end_of_initialization:	
   879                           ;End of C runtime variable initialization code
   880                           
   881  00AA                     __end_of__initialization:	
   882  00AA  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
   883  00AB  0140               	movlb	0
   884  00AC  3180  28AE         	ljmp	_main	;jump to C main() function
   885                           
   886                           	psect	bssBANK0
   887  0067                     __pbssBANK0:	
   888  0067                     _U:	
   889  0067                     	ds	2
   890                           
   891                           	psect	dataBANK0
   892  0069                     __pdataBANK0:	
   893  0069                     _limite:	
   894  0069                     	ds	2
   895                           
   896                           	psect	bssBANK1
   897  00A0                     __pbssBANK1:	
   898  00A0                     _Iant:	
   899  00A0                     	ds	3
   900  00A3                     _I:	
   901  00A3                     	ds	3
   902  00A6                     _rntc:	
   903  00A6                     	ds	3
   904  00A9                     _vm:	
   905  00A9                     	ds	3
   906  00AC                     _Uant:	
   907  00AC                     	ds	2
   908  00AE                     _P:	
   909  00AE                     	ds	2
   910  00B0                     _error:	
   911  00B0                     	ds	2
   912  00B2                     _auxcodigo:	
   913  00B2                     	ds	2
   914  00B4                     _referencia:	
   915  00B4                     	ds	2
   916  00B6                     _energia:	
   917  00B6                     	ds	2
   918  00B8                     _adc2:	
   919  00B8                     	ds	2
   920  00BA                     _adc1:	
   921  00BA                     	ds	2
   922  00BC                     _t:	
   923  00BC                     	ds	2
   924  00BE                     _angulo:	
   925  00BE                     	ds	2
   926  00C0                     _auxboton:	
   927  00C0                     	ds	2
   928                           
   929                           	psect	dataBANK1
   930  00D7                     __pdataBANK1:	
   931  00D7                     _Kp:	
   932  00D7                     	ds	3
   933  00DA                     _vcc:	
   934  00DA                     	ds	3
   935  00DD                     _raux:	
   936  00DD                     	ds	3
   937  00E0                     _T:	
   938  00E0                     	ds	2
   939  00E2                     _ZM:	
   940  00E2                     	ds	2
   941  00E4                     _contadorenviar:	
   942  00E4                     	ds	2
   943  00E6                     _temperatura:	
   944  00E6                     	ds	2
   945  00E8                     _c:	
   946  00E8                     	ds	2
   947                           
   948                           	psect	bssBANK2
   949  0120                     __pbssBANK2:	
   950  0120                     _tkelvin:	
   951  0120                     	ds	3
   952  0123                     _errno:	
   953  0123                     	ds	2
   954  0125                     _buffer2:	
   955  0125                     	ds	16
   956  0135                     _buffer1:	
   957  0135                     	ds	16
   958                           
   959                           	psect	dataBANK2
   960  0145                     __pdataBANK2:	
   961  0145                     _Ti:	
   962  0145                     	ds	3
   963  0148                     _beta:	
   964  0148                     	ds	3
   965  014B                     _r0:	
   966  014B                     	ds	3
   967  014E                     _temp0:	
   968  014E                     	ds	3
   969                           
   970                           	psect	inittext
   971  13D3                     init_ram:	
   972  13D3  00FE               	movwf	126
   973  13D4                     initloop:	
   974  13D4  0012               	moviw fsr0++
   975  13D5  001E               	movwi fsr1++
   976  13D6  0BFE               	decfsz	126,f
   977  13D7  2BD4               	goto	initloop
   978  13D8  3400               	retlw	0
   979                           
   980                           	psect	clrtext
   981  13CD                     clear_ram0:	
   982                           ;	Called with FSR0 containing the base address, and
   983                           ;	WREG with the size to clear
   984                           
   985  13CD  0064               	clrwdt	;clear the watchdog before getting into this loop
   986  13CE                     clrloop0:	
   987  13CE  0180               	clrf	0	;clear RAM location pointed to by FSR
   988  13CF  3101               	addfsr 0,1
   989  13D0  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
   990  13D1  2BCE               	goto	clrloop0	;have we reached the end yet?
   991  13D2  3400               	retlw	0	;all done for this memory range, return
   992                           
   993                           	psect	cstackBANK2
   994  0151                     __pcstackBANK2:	
   995  0151                     _main$1434:	
   996                           
   997                           ; 3 bytes @ 0x0
   998  0151                     	ds	3
   999  0154                     _main$1435:	
  1000                           
  1001                           ; 3 bytes @ 0x3
  1002  0154                     	ds	3
  1003  0157                     _main$1436:	
  1004                           
  1005                           ; 2 bytes @ 0x6
  1006  0157                     	ds	2
  1007                           
  1008                           	psect	cstackBANK1
  1009  00C2                     __pcstackBANK1:	
  1010  00C2                     ___fttol@sign1:	
  1011  00C2                     eval_poly@res:	
  1012                           ; 1 bytes @ 0x0
  1013                           
  1014                           
  1015                           ; 3 bytes @ 0x0
  1016  00C2                     	ds	1
  1017  00C3                     ___fttol@lval:	
  1018                           
  1019                           ; 4 bytes @ 0x1
  1020  00C3                     	ds	2
  1021  00C5                     ?_log:	
  1022  00C5                     log@x:	
  1023                           ; 3 bytes @ 0x3
  1024                           
  1025                           
  1026                           ; 3 bytes @ 0x3
  1027  00C5                     	ds	2
  1028  00C7                     ___fttol@exp1:	
  1029                           
  1030                           ; 1 bytes @ 0x5
  1031  00C7                     	ds	1
  1032  00C8                     log@exponent:	
  1033                           
  1034                           ; 2 bytes @ 0x6
  1035  00C8                     	ds	2
  1036  00CA                     ??_leerref:	
  1037                           
  1038                           ; 1 bytes @ 0x8
  1039  00CA                     	ds	3
  1040  00CD                     _leerref$1433:	
  1041                           
  1042                           ; 3 bytes @ 0xB
  1043  00CD                     	ds	3
  1044  00D0                     _leerref$1432:	
  1045                           
  1046                           ; 3 bytes @ 0xE
  1047  00D0                     	ds	3
  1048  00D3                     ??_main:	
  1049                           
  1050                           ; 1 bytes @ 0x11
  1051  00D3                     	ds	4
  1052                           
  1053                           	psect	cstackCOMMON
  1054  0070                     __pcstackCOMMON:	
  1055  0070                     ?_isdigit:	
  1056  0070                     ?_Lcd_Cmd:	
  1057                           ; 1 bit 
  1058                           
  1059  0070                     ?_Lcd_Chr_CP:	
  1060                           ; 1 bytes @ 0x0
  1061                           
  1062  0070                     ?_Lcd_Init:	
  1063                           ; 1 bytes @ 0x0
  1064                           
  1065  0070                     ?_leerref:	
  1066                           ; 1 bytes @ 0x0
  1067                           
  1068  0070                     ?_retardo:	
  1069                           ; 1 bytes @ 0x0
  1070                           
  1071  0070                     ?_interrupcio:	
  1072                           ; 1 bytes @ 0x0
  1073                           
  1074  0070                     ?_main:	
  1075                           ; 1 bytes @ 0x0
  1076                           
  1077  0070                     ?i1___wmul:	
  1078                           ; 1 bytes @ 0x0
  1079                           
  1080  0070                     retardo@to:	
  1081                           ; 2 bytes @ 0x0
  1082                           
  1083  0070                     i1___wmul@multiplier:	
  1084                           ; 2 bytes @ 0x0
  1085                           
  1086                           
  1087                           ; 2 bytes @ 0x0
  1088  0070                     	ds	2
  1089  0072                     ??_retardo:	
  1090  0072                     i1___wmul@multiplicand:	
  1091                           ; 1 bytes @ 0x2
  1092                           
  1093                           
  1094                           ; 2 bytes @ 0x2
  1095  0072                     	ds	2
  1096  0074                     ??i1___wmul:	
  1097  0074                     i1___wmul@product:	
  1098                           ; 1 bytes @ 0x4
  1099                           
  1100                           
  1101                           ; 2 bytes @ 0x4
  1102  0074                     	ds	2
  1103  0076                     ?i1___awdiv:	
  1104  0076                     i1___awdiv@divisor:	
  1105                           ; 2 bytes @ 0x6
  1106                           
  1107                           
  1108                           ; 2 bytes @ 0x6
  1109  0076                     	ds	2
  1110  0078                     i1___awdiv@dividend:	
  1111                           
  1112                           ; 2 bytes @ 0x8
  1113  0078                     	ds	2
  1114  007A                     ??i1___awdiv:	
  1115                           
  1116                           ; 1 bytes @ 0xA
  1117  007A                     	ds	1
  1118  007B                     ??_interrupcio:	
  1119                           
  1120                           ; 1 bytes @ 0xB
  1121  007B                     	ds	3
  1122                           
  1123                           	psect	cstackBANK0
  1124  0020                     __pcstackBANK0:	
  1125  0020                     i1___awdiv@counter:	
  1126                           
  1127                           ; 1 bytes @ 0x0
  1128  0020                     	ds	1
  1129  0021                     i1___awdiv@sign:	
  1130                           
  1131                           ; 1 bytes @ 0x1
  1132  0021                     	ds	1
  1133  0022                     i1___awdiv@quotient:	
  1134                           
  1135                           ; 2 bytes @ 0x2
  1136  0022                     	ds	2
  1137  0024                     ?___ftge:	
  1138  0024                     ??_Lcd_Cmd:	
  1139                           ; 1 bit 
  1140                           
  1141  0024                     ??_Lcd_Chr_CP:	
  1142                           ; 1 bytes @ 0x4
  1143                           
  1144  0024                     ??_isdigit:	
  1145                           ; 1 bytes @ 0x4
  1146                           
  1147  0024                     ?___awdiv:	
  1148                           ; 1 bytes @ 0x4
  1149                           
  1150  0024                     ?___lwdiv:	
  1151                           ; 2 bytes @ 0x4
  1152                           
  1153  0024                     ?___ftpack:	
  1154                           ; 2 bytes @ 0x4
  1155                           
  1156  0024                     ?_frexp:	
  1157                           ; 3 bytes @ 0x4
  1158                           
  1159  0024                     _isdigit$1160:	
  1160                           ; 3 bytes @ 0x4
  1161                           
  1162  0024                     ___awdiv@divisor:	
  1163                           ; 1 bytes @ 0x4
  1164                           
  1165  0024                     ___lwdiv@divisor:	
  1166                           ; 2 bytes @ 0x4
  1167                           
  1168  0024                     ___ftpack@arg:	
  1169                           ; 2 bytes @ 0x4
  1170                           
  1171  0024                     ___ftge@ff1:	
  1172                           ; 3 bytes @ 0x4
  1173                           
  1174  0024                     frexp@value:	
  1175                           ; 3 bytes @ 0x4
  1176                           
  1177                           
  1178                           ; 3 bytes @ 0x4
  1179  0024                     	ds	1
  1180  0025                     isdigit@c:	
  1181                           
  1182                           ; 1 bytes @ 0x5
  1183  0025                     	ds	1
  1184  0026                     Lcd_Chr_CP@data:	
  1185  0026                     Lcd_Cmd@data:	
  1186                           ; 1 bytes @ 0x6
  1187                           
  1188  0026                     ___awdiv@dividend:	
  1189                           ; 1 bytes @ 0x6
  1190                           
  1191  0026                     ___lwdiv@dividend:	
  1192                           ; 2 bytes @ 0x6
  1193                           
  1194                           
  1195                           ; 2 bytes @ 0x6
  1196  0026                     	ds	1
  1197  0027                     ??_Lcd_Init:	
  1198  0027                     ?_Lcd_Out2:	
  1199                           ; 1 bytes @ 0x7
  1200                           
  1201  0027                     Lcd_Out2@x:	
  1202                           ; 1 bytes @ 0x7
  1203                           
  1204  0027                     ___ftpack@exp:	
  1205                           ; 1 bytes @ 0x7
  1206                           
  1207  0027                     frexp@eptr:	
  1208                           ; 1 bytes @ 0x7
  1209                           
  1210  0027                     ___ftge@ff2:	
  1211                           ; 1 bytes @ 0x7
  1212                           
  1213                           
  1214                           ; 3 bytes @ 0x7
  1215  0027                     	ds	1
  1216  0028                     ??_frexp:	
  1217  0028                     ??___awdiv:	
  1218                           ; 1 bytes @ 0x8
  1219                           
  1220  0028                     ??___lwdiv:	
  1221                           ; 1 bytes @ 0x8
  1222                           
  1223  0028                     Lcd_Init@data:	
  1224                           ; 1 bytes @ 0x8
  1225                           
  1226  0028                     Lcd_Out2@buffer:	
  1227                           ; 1 bytes @ 0x8
  1228                           
  1229  0028                     ___ftpack@sign:	
  1230                           ; 1 bytes @ 0x8
  1231                           
  1232                           
  1233                           ; 1 bytes @ 0x8
  1234  0028                     	ds	1
  1235  0029                     ??___ftpack:	
  1236  0029                     ??_Lcd_Out2:	
  1237                           ; 1 bytes @ 0x9
  1238                           
  1239  0029                     ___awdiv@counter:	
  1240                           ; 1 bytes @ 0x9
  1241                           
  1242  0029                     ___lwdiv@counter:	
  1243                           ; 1 bytes @ 0x9
  1244                           
  1245                           
  1246                           ; 1 bytes @ 0x9
  1247  0029                     	ds	1
  1248  002A                     ??___ftge:	
  1249  002A                     Lcd_Out2@y:	
  1250                           ; 1 bytes @ 0xA
  1251                           
  1252  002A                     ___awdiv@sign:	
  1253                           ; 1 bytes @ 0xA
  1254                           
  1255  002A                     ___lwdiv@quotient:	
  1256                           ; 1 bytes @ 0xA
  1257                           
  1258                           
  1259                           ; 2 bytes @ 0xA
  1260  002A                     	ds	1
  1261  002B                     Lcd_Out2@data:	
  1262  002B                     ___awdiv@quotient:	
  1263                           ; 1 bytes @ 0xB
  1264                           
  1265                           
  1266                           ; 2 bytes @ 0xB
  1267  002B                     	ds	1
  1268  002C                     ?___lwmod:	
  1269  002C                     ?___awtoft:	
  1270                           ; 2 bytes @ 0xC
  1271                           
  1272  002C                     ___awtoft@c:	
  1273                           ; 3 bytes @ 0xC
  1274                           
  1275  002C                     ___lwmod@divisor:	
  1276                           ; 2 bytes @ 0xC
  1277                           
  1278                           
  1279                           ; 2 bytes @ 0xC
  1280  002C                     	ds	1
  1281  002D                     ?___wmul:	
  1282  002D                     ___wmul@multiplier:	
  1283                           ; 2 bytes @ 0xD
  1284                           
  1285                           
  1286                           ; 2 bytes @ 0xD
  1287  002D                     	ds	1
  1288  002E                     ___lwmod@dividend:	
  1289                           
  1290                           ; 2 bytes @ 0xE
  1291  002E                     	ds	1
  1292  002F                     ??___awtoft:	
  1293  002F                     ___wmul@multiplicand:	
  1294                           ; 1 bytes @ 0xF
  1295                           
  1296                           
  1297                           ; 2 bytes @ 0xF
  1298  002F                     	ds	1
  1299  0030                     ??___lwmod:	
  1300                           
  1301                           ; 1 bytes @ 0x10
  1302  0030                     	ds	1
  1303  0031                     ??___wmul:	
  1304  0031                     ___awtoft@sign:	
  1305                           ; 1 bytes @ 0x11
  1306                           
  1307  0031                     ___lwmod@counter:	
  1308                           ; 1 bytes @ 0x11
  1309                           
  1310  0031                     ___wmul@product:	
  1311                           ; 1 bytes @ 0x11
  1312                           
  1313                           
  1314                           ; 2 bytes @ 0x11
  1315  0031                     	ds	1
  1316  0032                     ?___ftmul:	
  1317  0032                     ___ftmul@f1:	
  1318                           ; 3 bytes @ 0x12
  1319                           
  1320                           
  1321                           ; 3 bytes @ 0x12
  1322  0032                     	ds	1
  1323  0033                     ?_sprintf:	
  1324  0033                     ?_codigo:	
  1325                           ; 2 bytes @ 0x13
  1326                           
  1327  0033                     codigo@num:	
  1328                           ; 2 bytes @ 0x13
  1329                           
  1330  0033                     sprintf@f:	
  1331                           ; 2 bytes @ 0x13
  1332                           
  1333                           
  1334                           ; 2 bytes @ 0x13
  1335  0033                     	ds	2
  1336  0035                     ??_codigo:	
  1337  0035                     ___ftmul@f2:	
  1338                           ; 1 bytes @ 0x15
  1339                           
  1340                           
  1341                           ; 3 bytes @ 0x15
  1342  0035                     	ds	3
  1343  0038                     ??___ftmul:	
  1344                           
  1345                           ; 1 bytes @ 0x18
  1346  0038                     	ds	1
  1347  0039                     ??_sprintf:	
  1348                           
  1349                           ; 1 bytes @ 0x19
  1350  0039                     	ds	3
  1351  003C                     ___ftmul@exp:	
  1352                           
  1353                           ; 1 bytes @ 0x1C
  1354  003C                     	ds	1
  1355  003D                     sprintf@ap:	
  1356  003D                     ___ftmul@f3_as_product:	
  1357                           ; 1 bytes @ 0x1D
  1358                           
  1359                           
  1360                           ; 3 bytes @ 0x1D
  1361  003D                     	ds	1
  1362  003E                     sprintf@prec:	
  1363                           
  1364                           ; 1 bytes @ 0x1E
  1365  003E                     	ds	1
  1366  003F                     sprintf@val:	
  1367                           
  1368                           ; 2 bytes @ 0x1F
  1369  003F                     	ds	1
  1370  0040                     ___ftmul@cntr:	
  1371                           
  1372                           ; 1 bytes @ 0x20
  1373  0040                     	ds	1
  1374  0041                     sprintf@flag:	
  1375  0041                     ___ftmul@sign:	
  1376                           ; 1 bytes @ 0x21
  1377                           
  1378                           
  1379                           ; 1 bytes @ 0x21
  1380  0041                     	ds	1
  1381  0042                     ?___ftdiv:	
  1382  0042                     sprintf@width:	
  1383                           ; 3 bytes @ 0x22
  1384                           
  1385  0042                     ___ftdiv@f2:	
  1386                           ; 2 bytes @ 0x22
  1387                           
  1388                           
  1389                           ; 3 bytes @ 0x22
  1390  0042                     	ds	2
  1391  0044                     sprintf@sp:	
  1392                           
  1393                           ; 1 bytes @ 0x24
  1394  0044                     	ds	1
  1395  0045                     sprintf@c:	
  1396  0045                     ___ftdiv@f1:	
  1397                           ; 1 bytes @ 0x25
  1398                           
  1399                           
  1400                           ; 3 bytes @ 0x25
  1401  0045                     	ds	3
  1402  0048                     ??___ftdiv:	
  1403                           
  1404                           ; 1 bytes @ 0x28
  1405  0048                     	ds	4
  1406  004C                     ___ftdiv@cntr:	
  1407                           
  1408                           ; 1 bytes @ 0x2C
  1409  004C                     	ds	1
  1410  004D                     ___ftdiv@f3:	
  1411                           
  1412                           ; 3 bytes @ 0x2D
  1413  004D                     	ds	3
  1414  0050                     ___ftdiv@exp:	
  1415                           
  1416                           ; 1 bytes @ 0x30
  1417  0050                     	ds	1
  1418  0051                     ___ftdiv@sign:	
  1419                           
  1420                           ; 1 bytes @ 0x31
  1421  0051                     	ds	1
  1422  0052                     ?___ftadd:	
  1423  0052                     ___ftadd@f1:	
  1424                           ; 3 bytes @ 0x32
  1425                           
  1426                           
  1427                           ; 3 bytes @ 0x32
  1428  0052                     	ds	3
  1429  0055                     ___ftadd@f2:	
  1430                           
  1431                           ; 3 bytes @ 0x35
  1432  0055                     	ds	3
  1433  0058                     ??___ftadd:	
  1434                           
  1435                           ; 1 bytes @ 0x38
  1436  0058                     	ds	4
  1437  005C                     ___ftadd@sign:	
  1438                           
  1439                           ; 1 bytes @ 0x3C
  1440  005C                     	ds	1
  1441  005D                     ___ftadd@exp2:	
  1442                           
  1443                           ; 1 bytes @ 0x3D
  1444  005D                     	ds	1
  1445  005E                     ___ftadd@exp1:	
  1446                           
  1447                           ; 1 bytes @ 0x3E
  1448  005E                     	ds	1
  1449  005F                     ?_eval_poly:	
  1450  005F                     ?___fttol:	
  1451                           ; 3 bytes @ 0x3F
  1452                           
  1453  005F                     ___fttol@f1:	
  1454                           ; 4 bytes @ 0x3F
  1455                           
  1456  005F                     eval_poly@x:	
  1457                           ; 3 bytes @ 0x3F
  1458                           
  1459                           
  1460                           ; 3 bytes @ 0x3F
  1461  005F                     	ds	3
  1462  0062                     eval_poly@d:	
  1463                           
  1464                           ; 2 bytes @ 0x42
  1465  0062                     	ds	1
  1466  0063                     ??___fttol:	
  1467                           
  1468                           ; 1 bytes @ 0x43
  1469  0063                     	ds	1
  1470  0064                     eval_poly@n:	
  1471                           
  1472                           ; 2 bytes @ 0x44
  1473  0064                     	ds	2
  1474  0066                     ??_log:	
  1475  0066                     ??_eval_poly:	
  1476                           ; 1 bytes @ 0x46
  1477                           
  1478                           
  1479                           ; 1 bytes @ 0x46
  1480  0066                     	ds	1
  1481                           
  1482                           	psect	maintext
  1483  00AE                     __pmaintext:	
  1484 ;;
  1485 ;;Main: autosize = 0, tempsize = 4, incstack = 0, save=0
  1486 ;;
  1487 ;; *************** function _main *****************
  1488 ;; Defined at:
  1489 ;;		line 147 in file "main.c"
  1490 ;; Parameters:    Size  Location     Type
  1491 ;;		None
  1492 ;; Auto vars:     Size  Location     Type
  1493 ;;		None
  1494 ;; Return value:  Size  Location     Type
  1495 ;;                  1    wreg      void 
  1496 ;; Registers used:
  1497 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  1498 ;; Tracked objects:
  1499 ;;		On entry : B3F/0
  1500 ;;		On exit  : 0/0
  1501 ;;		Unchanged: 0/0
  1502 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
  1503 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  1504 ;;      Locals:         0       0       0       8       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  1505 ;;      Temps:          0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  1506 ;;      Totals:         0       0       4       8       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  1507 ;;Total ram usage:       12 bytes
  1508 ;; Hardware stack levels required when called:    7
  1509 ;; This function calls:
  1510 ;;		_Lcd_Cmd
  1511 ;;		_Lcd_Init
  1512 ;;		_Lcd_Out2
  1513 ;;		___awdiv
  1514 ;;		___awtoft
  1515 ;;		___ftadd
  1516 ;;		___ftdiv
  1517 ;;		___ftmul
  1518 ;;		___fttol
  1519 ;;		___wmul
  1520 ;;		_codigo
  1521 ;;		_leerref
  1522 ;;		_sprintf
  1523 ;; This function is called by:
  1524 ;;		Startup code after reset
  1525 ;; This function uses a non-reentrant model
  1526 ;;
  1527                           
  1528                           
  1529                           ;psect for function _main
  1530  00AE                     _main:	
  1531                           
  1532                           ;main.c: 149: OSCFRQbits.HFFRQ=0b110;
  1533                           
  1534                           ;incstack = 0
  1535                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  1536  00AE  0151               	movlb	17	; select bank17
  1537  00AF  0813               	movf	19,w	;volatile
  1538  00B0  39F8               	andlw	-8
  1539  00B1  3806               	iorlw	6
  1540  00B2  0093               	movwf	19	;volatile
  1541                           
  1542                           ;main.c: 151: WPUDbits.WPUD2=1;
  1543  00B3  017E               	movlb	62	; select bank62
  1544  00B4  155A               	bsf	90,2	;volatile
  1545                           
  1546                           ;main.c: 152: WPUCbits.WPUC7=1;
  1547  00B5  17CF               	bsf	79,7	;volatile
  1548                           
  1549                           ;main.c: 154: PORTB=0;
  1550  00B6  0140               	movlb	0	; select bank0
  1551  00B7  018D               	clrf	13	;volatile
  1552                           
  1553                           ;main.c: 155: ANSELBbits.ANSB0=0;
  1554  00B8  017E               	movlb	62	; select bank62
  1555  00B9  1043               	bcf	67,0	;volatile
  1556                           
  1557                           ;main.c: 156: TRISBbits.TRISB0=1;
  1558  00BA  0140               	movlb	0	; select bank0
  1559  00BB  1412               	bsf	18,0	;volatile
  1560                           
  1561                           ;main.c: 157: ANSELBbits.ANSB1=0;
  1562  00BC  017E               	movlb	62	; select bank62
  1563  00BD  10C3               	bcf	67,1	;volatile
  1564                           
  1565                           ;main.c: 158: TRISBbits.TRISB1=1;
  1566  00BE  0140               	movlb	0	; select bank0
  1567  00BF  1492               	bsf	18,1	;volatile
  1568                           
  1569                           ;main.c: 159: RB2PPS=0x10;
  1570  00C0  3010               	movlw	16
  1571  00C1  017E               	movlb	62	; select bank62
  1572  00C2  009A               	movwf	26	;volatile
  1573                           
  1574                           ;main.c: 161: PORTA=0;
  1575  00C3  0140               	movlb	0	; select bank0
  1576  00C4  018C               	clrf	12	;volatile
  1577                           
  1578                           ;main.c: 162: ANSELAbits.ANSA0=0;
  1579  00C5  017E               	movlb	62	; select bank62
  1580  00C6  1038               	bcf	56,0	;volatile
  1581                           
  1582                           ;main.c: 163: TRISAbits.TRISA0=0;
  1583  00C7  0140               	movlb	0	; select bank0
  1584  00C8  1011               	bcf	17,0	;volatile
  1585                           
  1586                           ;main.c: 164: ANSELAbits.ANSA1=0;
  1587  00C9  017E               	movlb	62	; select bank62
  1588  00CA  10B8               	bcf	56,1	;volatile
  1589                           
  1590                           ;main.c: 165: TRISAbits.TRISA1=0;
  1591  00CB  0140               	movlb	0	; select bank0
  1592  00CC  1091               	bcf	17,1	;volatile
  1593                           
  1594                           ;main.c: 166: ANSELAbits.ANSA6=0;
  1595  00CD  017E               	movlb	62	; select bank62
  1596  00CE  1338               	bcf	56,6	;volatile
  1597                           
  1598                           ;main.c: 167: ANSELAbits.ANSA7=0;
  1599  00CF  13B8               	bcf	56,7	;volatile
  1600                           
  1601                           ;main.c: 168: PORTC=0;
  1602  00D0  0140               	movlb	0	; select bank0
  1603  00D1  018E               	clrf	14	;volatile
  1604                           
  1605                           ;main.c: 169: ANSELCbits.ANSC0=0;
  1606  00D2  017E               	movlb	62	; select bank62
  1607  00D3  104E               	bcf	78,0	;volatile
  1608                           
  1609                           ;main.c: 170: ANSELCbits.ANSC1=0;
  1610  00D4  10CE               	bcf	78,1	;volatile
  1611                           
  1612                           ;main.c: 171: ANSELCbits.ANSC2=0;
  1613  00D5  114E               	bcf	78,2	;volatile
  1614                           
  1615                           ;main.c: 172: ANSELCbits.ANSC3=0;
  1616  00D6  11CE               	bcf	78,3	;volatile
  1617                           
  1618                           ;main.c: 173: ANSELCbits.ANSC4=1;
  1619  00D7  164E               	bsf	78,4	;volatile
  1620                           
  1621                           ;main.c: 174: ANSELCbits.ANSC5=1;
  1622  00D8  16CE               	bsf	78,5	;volatile
  1623                           
  1624                           ;main.c: 175: TRISCbits.TRISC4=1;
  1625  00D9  0140               	movlb	0	; select bank0
  1626  00DA  1613               	bsf	19,4	;volatile
  1627                           
  1628                           ;main.c: 176: TRISCbits.TRISC5=1;
  1629  00DB  1693               	bsf	19,5	;volatile
  1630                           
  1631                           ;main.c: 177: ANSELCbits.ANSC6=0;
  1632  00DC  017E               	movlb	62	; select bank62
  1633  00DD  134E               	bcf	78,6	;volatile
  1634                           
  1635                           ;main.c: 178: TRISCbits.TRISC6=1;
  1636  00DE  0140               	movlb	0	; select bank0
  1637  00DF  1713               	bsf	19,6	;volatile
  1638                           
  1639                           ;main.c: 179: ANSELCbits.ANSC7=0;
  1640  00E0  017E               	movlb	62	; select bank62
  1641  00E1  13CE               	bcf	78,7	;volatile
  1642                           
  1643                           ;main.c: 180: TRISCbits.TRISC7=1;
  1644  00E2  0140               	movlb	0	; select bank0
  1645  00E3  1793               	bsf	19,7	;volatile
  1646                           
  1647                           ;main.c: 181: PORTD=0;
  1648  00E4  018F               	clrf	15	;volatile
  1649                           
  1650                           ;main.c: 182: ANSELDbits.ANSD0=0;
  1651  00E5  017E               	movlb	62	; select bank62
  1652  00E6  1059               	bcf	89,0	;volatile
  1653                           
  1654                           ;main.c: 183: TRISDbits.TRISD0=0;
  1655  00E7  0140               	movlb	0	; select bank0
  1656  00E8  1014               	bcf	20,0	;volatile
  1657                           
  1658                           ;main.c: 184: ANSELDbits.ANSD1=0;
  1659  00E9  017E               	movlb	62	; select bank62
  1660  00EA  10D9               	bcf	89,1	;volatile
  1661                           
  1662                           ;main.c: 185: TRISDbits.TRISD1=0;
  1663  00EB  0140               	movlb	0	; select bank0
  1664  00EC  1094               	bcf	20,1	;volatile
  1665                           
  1666                           ;main.c: 186: ANSELDbits.ANSD2=0;
  1667  00ED  017E               	movlb	62	; select bank62
  1668  00EE  1159               	bcf	89,2	;volatile
  1669                           
  1670                           ;main.c: 187: TRISDbits.TRISD2=1;
  1671  00EF  0140               	movlb	0	; select bank0
  1672  00F0  1514               	bsf	20,2	;volatile
  1673                           
  1674                           ;main.c: 188: ANSELDbits.ANSD3=0;
  1675  00F1  017E               	movlb	62	; select bank62
  1676  00F2  11D9               	bcf	89,3	;volatile
  1677                           
  1678                           ;main.c: 189: TRISDbits.TRISD3=0;
  1679  00F3  0140               	movlb	0	; select bank0
  1680  00F4  1194               	bcf	20,3	;volatile
  1681                           
  1682                           ;main.c: 192: RC1STAbits.SPEN=1;
  1683  00F5  0142               	movlb	2	; select bank2
  1684  00F6  179D               	bsf	29,7	;volatile
  1685                           
  1686                           ;main.c: 193: TX1STAbits.TXEN=1;
  1687  00F7  169E               	bsf	30,5	;volatile
  1688                           
  1689                           ;main.c: 195: TX1STAbits.SYNC=0;
  1690  00F8  121E               	bcf	30,4	;volatile
  1691                           
  1692                           ;main.c: 197: BAUDCONbits.BRG16=0;
  1693  00F9  119F               	bcf	31,3	;volatile
  1694                           
  1695                           ;main.c: 198: TX1STAbits.BRGH=0;
  1696  00FA  111E               	bcf	30,2	;volatile
  1697                           
  1698                           ;main.c: 199: SPBRG=51;
  1699  00FB  3033               	movlw	51
  1700  00FC  009B               	movwf	27	;volatile
  1701                           
  1702                           ;main.c: 203: ADCON0bits.ADON=1;
  1703  00FD  0141               	movlb	1	; select bank1
  1704  00FE  1793               	bsf	19,7	;volatile
  1705                           
  1706                           ;main.c: 204: ADCON0bits.ADCONT=0;
  1707  00FF  1313               	bcf	19,6	;volatile
  1708                           
  1709                           ;main.c: 205: ADCON0bits.ADCS=1;
  1710  0100  1613               	bsf	19,4	;volatile
  1711                           
  1712                           ;main.c: 206: ADCON0bits.ADFRM=1;
  1713  0101  0813               	movf	19,w	;volatile
  1714  0102  39F3               	andlw	-13
  1715  0103  3804               	iorlw	4
  1716  0104  0093               	movwf	19	;volatile
  1717                           
  1718                           ;main.c: 207: ADREFbits.ADNREF=0;
  1719  0105  121A               	bcf	26,4	;volatile
  1720                           
  1721                           ;main.c: 208: ADREFbits.ADPREF=0b00;
  1722  0106  30FC               	movlw	-4
  1723  0107  059A               	andwf	26,f	;volatile
  1724                           
  1725                           ;main.c: 211: IOCBNbits.IOCBN0=1;
  1726  0108  017E               	movlb	62	; select bank62
  1727  0109  1449               	bsf	73,0	;volatile
  1728                           
  1729                           ;main.c: 212: IOCBF=0;
  1730  010A  01CA               	clrf	74	;volatile
  1731                           
  1732                           ;main.c: 213: PIR0bits.IOCIF=0;
  1733  010B  014E               	movlb	14	; select bank14
  1734  010C  120C               	bcf	12,4	;volatile
  1735                           
  1736                           ;main.c: 214: PIE0bits.IOCIE=1;
  1737  010D  1616               	bsf	22,4	;volatile
  1738                           
  1739                           ;main.c: 215: INTCONbits.GIE=1;
  1740  010E  178B               	bsf	11,7	;volatile
  1741                           
  1742                           ;main.c: 218: Lcd_Init();
  1743  010F  3189  216D  3180   	fcall	_Lcd_Init
  1744                           
  1745                           ;main.c: 219: Lcd_Cmd(1);
  1746  0112  3001               	movlw	1
  1747  0113  3196  26D2  3180   	fcall	_Lcd_Cmd
  1748                           
  1749                           ;main.c: 220: Lcd_Cmd(12);
  1750  0116  300C               	movlw	12
  1751  0117  3196  26D2  3180   	fcall	_Lcd_Cmd
  1752                           
  1753                           ;main.c: 221: _delay((unsigned long)((100)*(32000000/4000.0)));
  1754  011A  3005               	movlw	5
  1755  011B  0141               	movlb	1	; select bank1
  1756  011C  00D4               	movwf	(??_main^(0+128)+1)
  1757  011D  300F               	movlw	15
  1758  011E  00D3               	movwf	??_main^(0+128)
  1759  011F  30F1               	movlw	241
  1760  0120                     u5797:	
  1761  0120  0B89               	decfsz	9,f
  1762  0121  2920               	goto	u5797
  1763  0122  0BD3               	decfsz	??_main^(0+128),f
  1764  0123  2920               	goto	u5797
  1765  0124  0BD4               	decfsz	(??_main^(0+128)+1),f
  1766  0125  2920               	goto	u5797
  1767                           
  1768                           ;main.c: 224: LATAbits.LATA0=1;
  1769  0126  0140               	movlb	0	; select bank0
  1770  0127  1416               	bsf	22,0	;volatile
  1771                           
  1772                           ;main.c: 225: U=U+ZM;
  1773  0128  0141               	movlb	1	; select bank1
  1774  0129  0862               	movf	_ZM^(0+128),w
  1775  012A  0140               	movlb	0	; select bank0
  1776  012B  0767               	addwf	_U,w
  1777  012C  00E7               	movwf	_U
  1778  012D  0141               	movlb	1	; select bank1
  1779  012E  0863               	movf	(_ZM+1)^(0+128),w
  1780  012F  0140               	movlb	0	; select bank0
  1781  0130  3D68               	addwfc	_U+1,w
  1782  0131  00E8               	movwf	_U+1
  1783  0132                     l4043:	
  1784                           ;main.c: 227: while(1){
  1785                           
  1786                           
  1787                           ;main.c: 229: leerref();
  1788  0132  318E  2629  3180   	fcall	_leerref
  1789                           
  1790                           ;main.c: 230: error=referencia-temperatura;
  1791  0135  0141               	movlb	1	; select bank1
  1792  0136  0966               	comf	_temperatura^(0+128),w
  1793  0137  00D3               	movwf	??_main^(0+128)
  1794  0138  0967               	comf	(_temperatura+1)^(0+128),w
  1795  0139  00D4               	movwf	(??_main^(0+128)+1)
  1796  013A  0AD3               	incf	??_main^(0+128),f
  1797  013B  1903               	skipnz
  1798  013C  0AD4               	incf	(??_main^(0+128)+1),f
  1799  013D  0834               	movf	_referencia^(0+128),w
  1800  013E  0753               	addwf	??_main^(0+128),w
  1801  013F  00B0               	movwf	_error^(0+128)
  1802  0140  0835               	movf	(_referencia+1)^(0+128),w
  1803  0141  3D54               	addwfc	(??_main+1)^(0+128),w
  1804  0142  00B1               	movwf	(_error+1)^(0+128)
  1805                           
  1806                           ;main.c: 231: P=Kp*error;
  1807  0143  0831               	movf	(_error+1)^(0+128),w
  1808  0144  0140               	movlb	0	; select bank0
  1809  0145  00AD               	movwf	___awtoft@c+1
  1810  0146  0141               	movlb	1	; select bank1
  1811  0147  0830               	movf	_error^(0+128),w
  1812  0148  0140               	movlb	0	; select bank0
  1813  0149  00AC               	movwf	___awtoft@c
  1814  014A  3194  243E  3180   	fcall	___awtoft
  1815  014D  0140               	movlb	0	; select bank0
  1816  014E  082C               	movf	?___awtoft,w
  1817  014F  00B5               	movwf	___ftmul@f2
  1818  0150  082D               	movf	?___awtoft+1,w
  1819  0151  00B6               	movwf	___ftmul@f2+1
  1820  0152  082E               	movf	?___awtoft+2,w
  1821  0153  00B7               	movwf	___ftmul@f2+2
  1822  0154  0141               	movlb	1	; select bank1
  1823  0155  0857               	movf	_Kp^(0+128),w
  1824  0156  0140               	movlb	0	; select bank0
  1825  0157  00B2               	movwf	___ftmul@f1
  1826  0158  0141               	movlb	1	; select bank1
  1827  0159  0858               	movf	(_Kp+1)^(0+128),w
  1828  015A  0140               	movlb	0	; select bank0
  1829  015B  00B3               	movwf	___ftmul@f1+1
  1830  015C  0141               	movlb	1	; select bank1
  1831  015D  0859               	movf	(_Kp+2)^(0+128),w
  1832  015E  0140               	movlb	0	; select bank0
  1833  015F  00B4               	movwf	___ftmul@f1+2
  1834  0160  318A  221A  3180   	fcall	___ftmul
  1835  0163  0140               	movlb	0	; select bank0
  1836  0164  0832               	movf	?___ftmul,w
  1837  0165  00DF               	movwf	___fttol@f1
  1838  0166  0833               	movf	?___ftmul+1,w
  1839  0167  00E0               	movwf	___fttol@f1+1
  1840  0168  0834               	movf	?___ftmul+2,w
  1841  0169  00E1               	movwf	___fttol@f1+2
  1842  016A  3188  2025  3180   	fcall	___fttol
  1843  016D  0140               	movlb	0	; select bank0
  1844  016E  0860               	movf	?___fttol+1,w
  1845  016F  0141               	movlb	1	; select bank1
  1846  0170  00AF               	movwf	(_P+1)^(0+128)
  1847  0171  0140               	movlb	0	; select bank0
  1848  0172  085F               	movf	?___fttol,w
  1849  0173  0141               	movlb	1	; select bank1
  1850  0174  00AE               	movwf	_P^(0+128)
  1851                           
  1852                           ;main.c: 232: if(Uant>limite){I=Iant;}else{I=Iant+(Kp*T*error)/(Ti);}
  1853  0175  0140               	movlb	0	; select bank0
  1854  0176  086A               	movf	_limite+1,w
  1855  0177  3A80               	xorlw	128
  1856  0178  0141               	movlb	1	; select bank1
  1857  0179  00D3               	movwf	??_main^(0+128)
  1858  017A  082D               	movf	(_Uant+1)^(0+128),w
  1859  017B  3A80               	xorlw	128
  1860  017C  0253               	subwf	??_main^(0+128),w
  1861  017D  1D03               	skipz
  1862  017E  2982               	goto	u5365
  1863  017F  082C               	movf	_Uant^(0+128),w
  1864  0180  0140               	movlb	0	; select bank0
  1865  0181  0269               	subwf	_limite,w
  1866  0182                     u5365:	
  1867  0182  1803               	skipnc
  1868  0183  298B               	goto	l4053
  1869  0184  0141               	movlb	1	; select bank1
  1870  0185  0820               	movf	_Iant^(0+128),w
  1871  0186  00A3               	movwf	_I^(0+128)
  1872  0187  0821               	movf	(_Iant+1)^(0+128),w
  1873  0188  00A4               	movwf	(_I+1)^(0+128)
  1874  0189  0822               	movf	(_Iant+2)^(0+128),w
  1875  018A  2A10               	goto	L1
  1876  018B                     l4053:	
  1877  018B  0141               	movlb	1	; select bank1
  1878  018C  0831               	movf	(_error+1)^(0+128),w
  1879  018D  0140               	movlb	0	; select bank0
  1880  018E  00AD               	movwf	___awtoft@c+1
  1881  018F  0141               	movlb	1	; select bank1
  1882  0190  0830               	movf	_error^(0+128),w
  1883  0191  0140               	movlb	0	; select bank0
  1884  0192  00AC               	movwf	___awtoft@c
  1885  0193  3194  243E  3180   	fcall	___awtoft
  1886  0196  0140               	movlb	0	; select bank0
  1887  0197  082C               	movf	?___awtoft,w
  1888  0198  00B2               	movwf	___ftmul@f1
  1889  0199  082D               	movf	?___awtoft+1,w
  1890  019A  00B3               	movwf	___ftmul@f1+1
  1891  019B  082E               	movf	?___awtoft+2,w
  1892  019C  00B4               	movwf	___ftmul@f1+2
  1893  019D  0141               	movlb	1	; select bank1
  1894  019E  0861               	movf	(_T+1)^(0+128),w
  1895  019F  0140               	movlb	0	; select bank0
  1896  01A0  00AD               	movwf	___awtoft@c+1
  1897  01A1  0141               	movlb	1	; select bank1
  1898  01A2  0860               	movf	_T^(0+128),w
  1899  01A3  0140               	movlb	0	; select bank0
  1900  01A4  00AC               	movwf	___awtoft@c
  1901  01A5  3194  243E  3180   	fcall	___awtoft
  1902  01A8  0140               	movlb	0	; select bank0
  1903  01A9  082C               	movf	?___awtoft,w
  1904  01AA  00B5               	movwf	___ftmul@f2
  1905  01AB  082D               	movf	?___awtoft+1,w
  1906  01AC  00B6               	movwf	___ftmul@f2+1
  1907  01AD  082E               	movf	?___awtoft+2,w
  1908  01AE  00B7               	movwf	___ftmul@f2+2
  1909  01AF  318A  221A  3180   	fcall	___ftmul
  1910  01B2  0140               	movlb	0	; select bank0
  1911  01B3  0832               	movf	?___ftmul,w
  1912  01B4  0142               	movlb	2	; select bank2
  1913  01B5  00D1               	movwf	_main$1434^(0+256)
  1914  01B6  0140               	movlb	0	; select bank0
  1915  01B7  0833               	movf	?___ftmul+1,w
  1916  01B8  0142               	movlb	2	; select bank2
  1917  01B9  00D2               	movwf	(_main$1434+1)^(0+256)
  1918  01BA  0140               	movlb	0	; select bank0
  1919  01BB  0834               	movf	?___ftmul+2,w
  1920  01BC  0142               	movlb	2	; select bank2
  1921  01BD  00D3               	movwf	(_main$1434+2)^(0+256)
  1922  01BE  0141               	movlb	1	; select bank1
  1923  01BF  0820               	movf	_Iant^(0+128),w
  1924  01C0  0140               	movlb	0	; select bank0
  1925  01C1  00D2               	movwf	___ftadd@f1
  1926  01C2  0141               	movlb	1	; select bank1
  1927  01C3  0821               	movf	(_Iant+1)^(0+128),w
  1928  01C4  0140               	movlb	0	; select bank0
  1929  01C5  00D3               	movwf	___ftadd@f1+1
  1930  01C6  0141               	movlb	1	; select bank1
  1931  01C7  0822               	movf	(_Iant+2)^(0+128),w
  1932  01C8  0140               	movlb	0	; select bank0
  1933  01C9  00D4               	movwf	___ftadd@f1+2
  1934  01CA  0142               	movlb	2	; select bank2
  1935  01CB  0845               	movf	_Ti^(0+256),w
  1936  01CC  0140               	movlb	0	; select bank0
  1937  01CD  00C2               	movwf	___ftdiv@f2
  1938  01CE  0142               	movlb	2	; select bank2
  1939  01CF  0846               	movf	(_Ti+1)^(0+256),w
  1940  01D0  0140               	movlb	0	; select bank0
  1941  01D1  00C3               	movwf	___ftdiv@f2+1
  1942  01D2  0142               	movlb	2	; select bank2
  1943  01D3  0847               	movf	(_Ti+2)^(0+256),w
  1944  01D4  0140               	movlb	0	; select bank0
  1945  01D5  00C4               	movwf	___ftdiv@f2+2
  1946  01D6  0141               	movlb	1	; select bank1
  1947  01D7  0857               	movf	_Kp^(0+128),w
  1948  01D8  0140               	movlb	0	; select bank0
  1949  01D9  00B2               	movwf	___ftmul@f1
  1950  01DA  0141               	movlb	1	; select bank1
  1951  01DB  0858               	movf	(_Kp+1)^(0+128),w
  1952  01DC  0140               	movlb	0	; select bank0
  1953  01DD  00B3               	movwf	___ftmul@f1+1
  1954  01DE  0141               	movlb	1	; select bank1
  1955  01DF  0859               	movf	(_Kp+2)^(0+128),w
  1956  01E0  0140               	movlb	0	; select bank0
  1957  01E1  00B4               	movwf	___ftmul@f1+2
  1958  01E2  0142               	movlb	2	; select bank2
  1959  01E3  0851               	movf	_main$1434^(0+256),w
  1960  01E4  0140               	movlb	0	; select bank0
  1961  01E5  00B5               	movwf	___ftmul@f2
  1962  01E6  0142               	movlb	2	; select bank2
  1963  01E7  0852               	movf	(_main$1434+1)^(0+256),w
  1964  01E8  0140               	movlb	0	; select bank0
  1965  01E9  00B6               	movwf	___ftmul@f2+1
  1966  01EA  0142               	movlb	2	; select bank2
  1967  01EB  0853               	movf	(_main$1434+2)^(0+256),w
  1968  01EC  0140               	movlb	0	; select bank0
  1969  01ED  00B7               	movwf	___ftmul@f2+2
  1970  01EE  318A  221A  3180   	fcall	___ftmul
  1971  01F1  0140               	movlb	0	; select bank0
  1972  01F2  0832               	movf	?___ftmul,w
  1973  01F3  00C5               	movwf	___ftdiv@f1
  1974  01F4  0833               	movf	?___ftmul+1,w
  1975  01F5  00C6               	movwf	___ftdiv@f1+1
  1976  01F6  0834               	movf	?___ftmul+2,w
  1977  01F7  00C7               	movwf	___ftdiv@f1+2
  1978  01F8  3188  20C4  3180   	fcall	___ftdiv
  1979  01FB  0140               	movlb	0	; select bank0
  1980  01FC  0842               	movf	?___ftdiv,w
  1981  01FD  00D5               	movwf	___ftadd@f2
  1982  01FE  0843               	movf	?___ftdiv+1,w
  1983  01FF  00D6               	movwf	___ftadd@f2+1
  1984  0200  0844               	movf	?___ftdiv+2,w
  1985  0201  00D7               	movwf	___ftadd@f2+2
  1986  0202  318B  23A7  3180   	fcall	___ftadd
  1987  0205  0140               	movlb	0	; select bank0
  1988  0206  0852               	movf	?___ftadd,w
  1989  0207  0141               	movlb	1	; select bank1
  1990  0208  00A3               	movwf	_I^(0+128)
  1991  0209  0140               	movlb	0	; select bank0
  1992  020A  0853               	movf	?___ftadd+1,w
  1993  020B  0141               	movlb	1	; select bank1
  1994  020C  00A4               	movwf	(_I+1)^(0+128)
  1995  020D  0140               	movlb	0	; select bank0
  1996  020E  0854               	movf	?___ftadd+2,w
  1997  020F  0141               	movlb	1	; select bank1
  1998  0210                     L1:	
  1999  0210  00A5               	movwf	(_I+2)^(0+128)
  2000                           
  2001                           ;main.c: 233: U=P+I+ZM;
  2002  0211  082F               	movf	(_P+1)^(0+128),w
  2003  0212  0140               	movlb	0	; select bank0
  2004  0213  00AD               	movwf	___awtoft@c+1
  2005  0214  0141               	movlb	1	; select bank1
  2006  0215  082E               	movf	_P^(0+128),w
  2007  0216  0140               	movlb	0	; select bank0
  2008  0217  00AC               	movwf	___awtoft@c
  2009  0218  3194  243E  3180   	fcall	___awtoft
  2010  021B  0140               	movlb	0	; select bank0
  2011  021C  082C               	movf	?___awtoft,w
  2012  021D  00D5               	movwf	___ftadd@f2
  2013  021E  082D               	movf	?___awtoft+1,w
  2014  021F  00D6               	movwf	___ftadd@f2+1
  2015  0220  082E               	movf	?___awtoft+2,w
  2016  0221  00D7               	movwf	___ftadd@f2+2
  2017  0222  0141               	movlb	1	; select bank1
  2018  0223  0863               	movf	(_ZM+1)^(0+128),w
  2019  0224  0140               	movlb	0	; select bank0
  2020  0225  00AD               	movwf	___awtoft@c+1
  2021  0226  0141               	movlb	1	; select bank1
  2022  0227  0862               	movf	_ZM^(0+128),w
  2023  0228  0140               	movlb	0	; select bank0
  2024  0229  00AC               	movwf	___awtoft@c
  2025  022A  3194  243E  3180   	fcall	___awtoft
  2026  022D  0140               	movlb	0	; select bank0
  2027  022E  082C               	movf	?___awtoft,w
  2028  022F  00D2               	movwf	___ftadd@f1
  2029  0230  082D               	movf	?___awtoft+1,w
  2030  0231  00D3               	movwf	___ftadd@f1+1
  2031  0232  082E               	movf	?___awtoft+2,w
  2032  0233  00D4               	movwf	___ftadd@f1+2
  2033  0234  318B  23A7  3180   	fcall	___ftadd
  2034  0237  0140               	movlb	0	; select bank0
  2035  0238  0852               	movf	?___ftadd,w
  2036  0239  0142               	movlb	2	; select bank2
  2037  023A  00D4               	movwf	_main$1435^(0+256)
  2038  023B  0140               	movlb	0	; select bank0
  2039  023C  0853               	movf	?___ftadd+1,w
  2040  023D  0142               	movlb	2	; select bank2
  2041  023E  00D5               	movwf	(_main$1435+1)^(0+256)
  2042  023F  0140               	movlb	0	; select bank0
  2043  0240  0854               	movf	?___ftadd+2,w
  2044  0241  0142               	movlb	2	; select bank2
  2045  0242  00D6               	movwf	(_main$1435+2)^(0+256)
  2046                           
  2047                           ;main.c: 233: U=P+I+ZM;
  2048  0243  0854               	movf	_main$1435^(0+256),w
  2049  0244  0140               	movlb	0	; select bank0
  2050  0245  00D5               	movwf	___ftadd@f2
  2051  0246  0142               	movlb	2	; select bank2
  2052  0247  0855               	movf	(_main$1435+1)^(0+256),w
  2053  0248  0140               	movlb	0	; select bank0
  2054  0249  00D6               	movwf	___ftadd@f2+1
  2055  024A  0142               	movlb	2	; select bank2
  2056  024B  0856               	movf	(_main$1435+2)^(0+256),w
  2057  024C  0140               	movlb	0	; select bank0
  2058  024D  00D7               	movwf	___ftadd@f2+2
  2059  024E  0141               	movlb	1	; select bank1
  2060  024F  0823               	movf	_I^(0+128),w
  2061  0250  0140               	movlb	0	; select bank0
  2062  0251  00D2               	movwf	___ftadd@f1
  2063  0252  0141               	movlb	1	; select bank1
  2064  0253  0824               	movf	(_I+1)^(0+128),w
  2065  0254  0140               	movlb	0	; select bank0
  2066  0255  00D3               	movwf	___ftadd@f1+1
  2067  0256  0141               	movlb	1	; select bank1
  2068  0257  0825               	movf	(_I+2)^(0+128),w
  2069  0258  0140               	movlb	0	; select bank0
  2070  0259  00D4               	movwf	___ftadd@f1+2
  2071  025A  318B  23A7  3180   	fcall	___ftadd
  2072  025D  0140               	movlb	0	; select bank0
  2073  025E  0852               	movf	?___ftadd,w
  2074  025F  00DF               	movwf	___fttol@f1
  2075  0260  0853               	movf	?___ftadd+1,w
  2076  0261  00E0               	movwf	___fttol@f1+1
  2077  0262  0854               	movf	?___ftadd+2,w
  2078  0263  00E1               	movwf	___fttol@f1+2
  2079  0264  3188  2025  3180   	fcall	___fttol
  2080  0267  0140               	movlb	0	; select bank0
  2081  0268  0860               	movf	?___fttol+1,w
  2082  0269  00E8               	movwf	_U+1
  2083  026A  085F               	movf	?___fttol,w
  2084  026B  00E7               	movwf	_U
  2085                           
  2086                           ;main.c: 235: if(U>limite){U=limite;}else if(U<0){U=0;}
  2087  026C  086A               	movf	_limite+1,w
  2088  026D  3A80               	xorlw	128
  2089  026E  0141               	movlb	1	; select bank1
  2090  026F  00D3               	movwf	??_main^(0+128)
  2091  0270  0140               	movlb	0	; select bank0
  2092  0271  0868               	movf	_U+1,w
  2093  0272  3A80               	xorlw	128
  2094  0273  0141               	movlb	1	; select bank1
  2095  0274  0253               	subwf	??_main^(0+128),w
  2096  0275  1D03               	skipz
  2097  0276  2A7A               	goto	u5375
  2098  0277  0140               	movlb	0	; select bank0
  2099  0278  0867               	movf	_U,w
  2100  0279  0269               	subwf	_limite,w
  2101  027A                     u5375:	
  2102  027A  1803               	skipnc
  2103  027B  2A82               	goto	l231
  2104  027C  0140               	movlb	0	; select bank0
  2105  027D  086A               	movf	_limite+1,w
  2106  027E  00E8               	movwf	_U+1
  2107  027F  0869               	movf	_limite,w
  2108  0280  00E7               	movwf	_U
  2109  0281  2A87               	goto	l4061
  2110  0282                     l231:	
  2111  0282  0140               	movlb	0	; select bank0
  2112  0283  1FE8               	btfss	_U+1,7
  2113  0284  2A87               	goto	l4061
  2114  0285  01E7               	clrf	_U
  2115  0286  01E8               	clrf	_U+1
  2116  0287                     l4061:	
  2117                           
  2118                           ;main.c: 236: Iant=I;
  2119  0287  0141               	movlb	1	; select bank1
  2120  0288  0823               	movf	_I^(0+128),w
  2121  0289  00A0               	movwf	_Iant^(0+128)
  2122  028A  0824               	movf	(_I+1)^(0+128),w
  2123  028B  00A1               	movwf	(_Iant+1)^(0+128)
  2124  028C  0825               	movf	(_I+2)^(0+128),w
  2125  028D  00A2               	movwf	(_Iant+2)^(0+128)
  2126                           
  2127                           ;main.c: 237: Uant=U;
  2128  028E  0140               	movlb	0	; select bank0
  2129  028F  0868               	movf	_U+1,w
  2130  0290  0141               	movlb	1	; select bank1
  2131  0291  00AD               	movwf	(_Uant+1)^(0+128)
  2132  0292  0140               	movlb	0	; select bank0
  2133  0293  0867               	movf	_U,w
  2134  0294  0141               	movlb	1	; select bank1
  2135  0295  00AC               	movwf	_Uant^(0+128)
  2136                           
  2137                           ;main.c: 241: sprintf(buffer1,"An=%03d Rf=%02d",angulo,referencia);
  2138  0296  301B               	movlw	low (STR_1| (0+32768))
  2139  0297  0140               	movlb	0	; select bank0
  2140  0298  00B3               	movwf	sprintf@f
  2141  0299  3098               	movlw	high (STR_1| (0+32768))
  2142  029A  00B4               	movwf	sprintf@f+1
  2143  029B  0141               	movlb	1	; select bank1
  2144  029C  083F               	movf	(_angulo+1)^(0+128),w
  2145  029D  0140               	movlb	0	; select bank0
  2146  029E  00B6               	movwf	?_sprintf+3
  2147  029F  0141               	movlb	1	; select bank1
  2148  02A0  083E               	movf	_angulo^(0+128),w
  2149  02A1  0140               	movlb	0	; select bank0
  2150  02A2  00B5               	movwf	?_sprintf+2
  2151  02A3  0141               	movlb	1	; select bank1
  2152  02A4  0835               	movf	(_referencia+1)^(0+128),w
  2153  02A5  0140               	movlb	0	; select bank0
  2154  02A6  00B8               	movwf	?_sprintf+5
  2155  02A7  0141               	movlb	1	; select bank1
  2156  02A8  0834               	movf	_referencia^(0+128),w
  2157  02A9  0140               	movlb	0	; select bank0
  2158  02AA  00B7               	movwf	?_sprintf+4
  2159  02AB  3035               	movlw	(low (_buffer1| (0+256)))& (0+255)
  2160  02AC  318C  249D  3180   	fcall	_sprintf
  2161                           
  2162                           ;main.c: 242: Lcd_Out2(1,0,buffer1);
  2163  02AF  0140               	movlb	0	; select bank0
  2164  02B0  01A7               	clrf	Lcd_Out2@x
  2165  02B1  3035               	movlw	(low (_buffer1| (0+256)))& (0+255)
  2166  02B2  0141               	movlb	1	; select bank1
  2167  02B3  00D3               	movwf	??_main^(0+128)
  2168  02B4  0853               	movf	??_main^(0+128),w
  2169  02B5  0140               	movlb	0	; select bank0
  2170  02B6  00A8               	movwf	Lcd_Out2@buffer
  2171  02B7  3001               	movlw	1
  2172  02B8  3194  24F4  3180   	fcall	_Lcd_Out2
  2173                           
  2174                           ;main.c: 243: sprintf(buffer2,"T=%03d U=%03d",temperatura, U);
  2175  02BB  302B               	movlw	low (STR_2| (0+32768))
  2176  02BC  0140               	movlb	0	; select bank0
  2177  02BD  00B3               	movwf	sprintf@f
  2178  02BE  3098               	movlw	high (STR_2| (0+32768))
  2179  02BF  00B4               	movwf	sprintf@f+1
  2180  02C0  0141               	movlb	1	; select bank1
  2181  02C1  0867               	movf	(_temperatura+1)^(0+128),w
  2182  02C2  0140               	movlb	0	; select bank0
  2183  02C3  00B6               	movwf	?_sprintf+3
  2184  02C4  0141               	movlb	1	; select bank1
  2185  02C5  0866               	movf	_temperatura^(0+128),w
  2186  02C6  0140               	movlb	0	; select bank0
  2187  02C7  00B5               	movwf	?_sprintf+2
  2188  02C8  0868               	movf	_U+1,w
  2189  02C9  00B8               	movwf	?_sprintf+5
  2190  02CA  0867               	movf	_U,w
  2191  02CB  00B7               	movwf	?_sprintf+4
  2192  02CC  3025               	movlw	(low (_buffer2| (0+256)))& (0+255)
  2193  02CD  318C  249D  3180   	fcall	_sprintf
  2194                           
  2195                           ;main.c: 244: Lcd_Out2(2,0,buffer2);
  2196  02D0  0140               	movlb	0	; select bank0
  2197  02D1  01A7               	clrf	Lcd_Out2@x
  2198  02D2  3025               	movlw	(low (_buffer2| (0+256)))& (0+255)
  2199  02D3  0141               	movlb	1	; select bank1
  2200  02D4  00D3               	movwf	??_main^(0+128)
  2201  02D5  0853               	movf	??_main^(0+128),w
  2202  02D6  0140               	movlb	0	; select bank0
  2203  02D7  00A8               	movwf	Lcd_Out2@buffer
  2204  02D8  3002               	movlw	2
  2205  02D9  3194  24F4  3180   	fcall	_Lcd_Out2
  2206                           
  2207                           ;main.c: 245: if(PORTCbits.RC6==1){
  2208  02DC  0140               	movlb	0	; select bank0
  2209  02DD  1F0E               	btfss	14,6	;volatile
  2210  02DE  2B04               	goto	l4087
  2211                           
  2212                           ;main.c: 246: if(auxboton==0){
  2213  02DF  0141               	movlb	1	; select bank1
  2214  02E0  0840               	movf	_auxboton^(0+128),w
  2215  02E1  0441               	iorwf	(_auxboton+1)^(0+128),w
  2216  02E2  1903               	btfsc	3,2
  2217  02E3  2AEE               	goto	l4081
  2218  02E4  2AFD               	goto	l4085
  2219  02E5                     l237:	
  2220                           ;main.c: 248: while(auxboton==0){
  2221                           
  2222                           
  2223                           ;main.c: 249: LATDbits.LATD0=1;
  2224  02E5  0140               	movlb	0	; select bank0
  2225  02E6  1419               	bsf	25,0	;volatile
  2226                           
  2227                           ;main.c: 250: if(PORTDbits.RD2==0){auxboton=1;}
  2228  02E7  190F               	btfsc	15,2	;volatile
  2229  02E8  2AEE               	goto	l4081
  2230  02E9  3001               	movlw	1
  2231  02EA  0141               	movlb	1	; select bank1
  2232  02EB  00C0               	movwf	_auxboton^(0+128)
  2233  02EC  3000               	movlw	0
  2234  02ED  00C1               	movwf	(_auxboton^(0+128)+1)
  2235  02EE                     l4081:	
  2236  02EE  0141               	movlb	1	; select bank1
  2237  02EF  0840               	movf	_auxboton^(0+128),w
  2238  02F0  0441               	iorwf	(_auxboton+1)^(0+128),w
  2239  02F1  1903               	btfsc	3,2
  2240  02F2  2AE5               	goto	l237
  2241                           
  2242                           ;main.c: 251: }
  2243                           ;main.c: 252: LATDbits.LATD0=0;
  2244  02F3  0140               	movlb	0	; select bank0
  2245  02F4  1019               	bcf	25,0	;volatile
  2246                           
  2247                           ;main.c: 254: }else{
  2248  02F5  2B04               	goto	l4087
  2249  02F6                     l242:	
  2250                           ;main.c: 256: while(auxboton==1){
  2251                           
  2252                           
  2253                           ;main.c: 257: LATDbits.LATD1=1;
  2254  02F6  0140               	movlb	0	; select bank0
  2255  02F7  1499               	bsf	25,1	;volatile
  2256                           
  2257                           ;main.c: 258: if(PORTCbits.RC7==0){auxboton=0;}
  2258  02F8  1B8E               	btfsc	14,7	;volatile
  2259  02F9  2AFD               	goto	l4085
  2260  02FA  0141               	movlb	1	; select bank1
  2261  02FB  01C0               	clrf	_auxboton^(0+128)
  2262  02FC  01C1               	clrf	(_auxboton+1)^(0+128)
  2263  02FD                     l4085:	
  2264  02FD  0141               	movlb	1	; select bank1
  2265  02FE  0340               	decf	_auxboton^(0+128),w
  2266  02FF  0441               	iorwf	(_auxboton+1)^(0+128),w
  2267  0300  1903               	btfsc	3,2
  2268  0301  2AF6               	goto	l242
  2269                           
  2270                           ;main.c: 259: }
  2271                           ;main.c: 260: LATDbits.LATD1=0;
  2272  0302  0140               	movlb	0	; select bank0
  2273  0303  1099               	bcf	25,1	;volatile
  2274  0304                     l4087:	
  2275                           
  2276                           ;main.c: 262: }
  2277                           ;main.c: 263: }
  2278                           ;main.c: 265: if(contadorenviar==30){
  2279  0304  301E               	movlw	30
  2280  0305  0141               	movlb	1	; select bank1
  2281  0306  0664               	xorwf	_contadorenviar^(0+128),w
  2282  0307  0465               	iorwf	(_contadorenviar+1)^(0+128),w
  2283  0308  1D03               	btfss	3,2
  2284  0309  2F9A               	goto	l4167
  2285                           
  2286                           ;main.c: 267: if(temperatura<10 && temperatura>=0){
  2287  030A  0867               	movf	(_temperatura+1)^(0+128),w
  2288  030B  3A80               	xorlw	128
  2289  030C  00D3               	movwf	??_main^(0+128)
  2290  030D  3080               	movlw	128
  2291  030E  0253               	subwf	??_main^(0+128),w
  2292  030F  1D03               	skipz
  2293  0310  2B13               	goto	u5465
  2294  0311  300A               	movlw	10
  2295  0312  0266               	subwf	_temperatura^(0+128),w
  2296  0313                     u5465:	
  2297  0313  1803               	skipnc
  2298  0314  2C2E               	goto	l4113
  2299  0315  0141               	movlb	1	; select bank1
  2300  0316  1BE7               	btfsc	(_temperatura+1)^(0+128),7
  2301  0317  2C2E               	goto	l4113
  2302                           
  2303                           ;main.c: 268: TX1REG=codigo(0);
  2304  0318  3000               	movlw	0
  2305  0319  0140               	movlb	0	; select bank0
  2306  031A  00B3               	movwf	codigo@num
  2307  031B  00B4               	movwf	codigo@num+1
  2308  031C  3194  248D  3180   	fcall	_codigo
  2309  031F  0140               	movlb	0	; select bank0
  2310  0320  0833               	movf	?_codigo,w
  2311  0321  0142               	movlb	2	; select bank2
  2312  0322  009A               	movwf	26	;volatile
  2313  0323                     l247:	
  2314                           ;main.c: 269: while(TXSTAbits.TRMT==0);
  2315                           
  2316  0323  1C9E               	btfss	30,1	;volatile
  2317  0324  2B23               	goto	l247
  2318                           
  2319                           ;main.c: 270: TX1REG=codigo(0);
  2320  0325  3000               	movlw	0
  2321  0326  0140               	movlb	0	; select bank0
  2322  0327  00B3               	movwf	codigo@num
  2323  0328  00B4               	movwf	codigo@num+1
  2324  0329  3194  248D  3180   	fcall	_codigo
  2325  032C  0140               	movlb	0	; select bank0
  2326  032D  0833               	movf	?_codigo,w
  2327  032E  0142               	movlb	2	; select bank2
  2328  032F  009A               	movwf	26	;volatile
  2329  0330                     l250:	
  2330                           ;main.c: 271: while(TXSTAbits.TRMT==0);
  2331                           
  2332  0330  1C9E               	btfss	30,1	;volatile
  2333  0331  2B30               	goto	l250
  2334                           
  2335                           ;main.c: 272: TX1REG=codigo(temperatura);
  2336  0332  0141               	movlb	1	; select bank1
  2337  0333  0867               	movf	(_temperatura+1)^(0+128),w
  2338  0334  0140               	movlb	0	; select bank0
  2339  0335  00B4               	movwf	codigo@num+1
  2340  0336  0141               	movlb	1	; select bank1
  2341  0337  0866               	movf	_temperatura^(0+128),w
  2342  0338  0140               	movlb	0	; select bank0
  2343  0339  00B3               	movwf	codigo@num
  2344  033A  3194  248D  3180   	fcall	_codigo
  2345  033D  0140               	movlb	0	; select bank0
  2346  033E  0833               	movf	?_codigo,w
  2347  033F  0142               	movlb	2	; select bank2
  2348  0340  009A               	movwf	26	;volatile
  2349  0341                     l253:	
  2350                           ;main.c: 273: while(TXSTAbits.TRMT==0);
  2351                           
  2352  0341  1C9E               	btfss	30,1	;volatile
  2353  0342  2B41               	goto	l253
  2354                           
  2355                           ;main.c: 275: TX1REG=codigo(referencia/100);
  2356  0343  3064               	movlw	100
  2357  0344  0140               	movlb	0	; select bank0
  2358  0345  00A4               	movwf	___awdiv@divisor
  2359  0346  3000               	movlw	0
  2360  0347  00A5               	movwf	___awdiv@divisor+1
  2361  0348  0141               	movlb	1	; select bank1
  2362  0349  0835               	movf	(_referencia+1)^(0+128),w
  2363  034A  0140               	movlb	0	; select bank0
  2364  034B  00A7               	movwf	___awdiv@dividend+1
  2365  034C  0141               	movlb	1	; select bank1
  2366  034D  0834               	movf	_referencia^(0+128),w
  2367  034E  0140               	movlb	0	; select bank0
  2368  034F  00A6               	movwf	___awdiv@dividend
  2369  0350  3187  27AA  3180   	fcall	___awdiv
  2370  0353  0140               	movlb	0	; select bank0
  2371  0354  0825               	movf	?___awdiv+1,w
  2372  0355  00B4               	movwf	codigo@num+1
  2373  0356  0824               	movf	?___awdiv,w
  2374  0357  00B3               	movwf	codigo@num
  2375  0358  3194  248D  3180   	fcall	_codigo
  2376  035B  0140               	movlb	0	; select bank0
  2377  035C  0833               	movf	?_codigo,w
  2378  035D  0142               	movlb	2	; select bank2
  2379  035E  009A               	movwf	26	;volatile
  2380  035F                     l256:	
  2381                           ;main.c: 276: while(TXSTAbits.TRMT==0);
  2382                           
  2383  035F  1C9E               	btfss	30,1	;volatile
  2384  0360  2B5F               	goto	l256
  2385                           
  2386                           ;main.c: 277: TX1REG=codigo(referencia/10);
  2387  0361  300A               	movlw	10
  2388  0362  0140               	movlb	0	; select bank0
  2389  0363  00A4               	movwf	___awdiv@divisor
  2390  0364  3000               	movlw	0
  2391  0365  00A5               	movwf	___awdiv@divisor+1
  2392  0366  0141               	movlb	1	; select bank1
  2393  0367  0835               	movf	(_referencia+1)^(0+128),w
  2394  0368  0140               	movlb	0	; select bank0
  2395  0369  00A7               	movwf	___awdiv@dividend+1
  2396  036A  0141               	movlb	1	; select bank1
  2397  036B  0834               	movf	_referencia^(0+128),w
  2398  036C  0140               	movlb	0	; select bank0
  2399  036D  00A6               	movwf	___awdiv@dividend
  2400  036E  3187  27AA  3180   	fcall	___awdiv
  2401  0371  0140               	movlb	0	; select bank0
  2402  0372  0825               	movf	?___awdiv+1,w
  2403  0373  00B4               	movwf	codigo@num+1
  2404  0374  0824               	movf	?___awdiv,w
  2405  0375  00B3               	movwf	codigo@num
  2406  0376  3194  248D  3180   	fcall	_codigo
  2407  0379  0140               	movlb	0	; select bank0
  2408  037A  0833               	movf	?_codigo,w
  2409  037B  0142               	movlb	2	; select bank2
  2410  037C  009A               	movwf	26	;volatile
  2411  037D                     l259:	
  2412                           ;main.c: 278: while(TXSTAbits.TRMT==0);
  2413                           
  2414  037D  1C9E               	btfss	30,1	;volatile
  2415  037E  2B7D               	goto	l259
  2416                           
  2417                           ;main.c: 279: TX1REG=codigo(referencia-((referencia/10)*10));
  2418  037F  300A               	movlw	10
  2419  0380  0140               	movlb	0	; select bank0
  2420  0381  00A4               	movwf	___awdiv@divisor
  2421  0382  3000               	movlw	0
  2422  0383  00A5               	movwf	___awdiv@divisor+1
  2423  0384  0141               	movlb	1	; select bank1
  2424  0385  0835               	movf	(_referencia+1)^(0+128),w
  2425  0386  0140               	movlb	0	; select bank0
  2426  0387  00A7               	movwf	___awdiv@dividend+1
  2427  0388  0141               	movlb	1	; select bank1
  2428  0389  0834               	movf	_referencia^(0+128),w
  2429  038A  0140               	movlb	0	; select bank0
  2430  038B  00A6               	movwf	___awdiv@dividend
  2431  038C  3187  27AA  3180   	fcall	___awdiv
  2432  038F  0140               	movlb	0	; select bank0
  2433  0390  0825               	movf	?___awdiv+1,w
  2434  0391  00AE               	movwf	___wmul@multiplier+1
  2435  0392  0824               	movf	?___awdiv,w
  2436  0393  00AD               	movwf	___wmul@multiplier
  2437  0394  300A               	movlw	10
  2438  0395  00AF               	movwf	___wmul@multiplicand
  2439  0396  3000               	movlw	0
  2440  0397  00B0               	movwf	___wmul@multiplicand+1
  2441  0398  3194  2422  3180   	fcall	___wmul
  2442  039B  0140               	movlb	0	; select bank0
  2443  039C  092D               	comf	?___wmul,w
  2444  039D  0141               	movlb	1	; select bank1
  2445  039E  00D3               	movwf	??_main^(0+128)
  2446  039F  0140               	movlb	0	; select bank0
  2447  03A0  092E               	comf	?___wmul+1,w
  2448  03A1  0141               	movlb	1	; select bank1
  2449  03A2  00D4               	movwf	(??_main^(0+128)+1)
  2450  03A3  0AD3               	incf	??_main^(0+128),f
  2451  03A4  1903               	skipnz
  2452  03A5  0AD4               	incf	(??_main^(0+128)+1),f
  2453  03A6  0834               	movf	_referencia^(0+128),w
  2454  03A7  0753               	addwf	??_main^(0+128),w
  2455  03A8  0140               	movlb	0	; select bank0
  2456  03A9  00B3               	movwf	codigo@num
  2457  03AA  0141               	movlb	1	; select bank1
  2458  03AB  0835               	movf	(_referencia+1)^(0+128),w
  2459  03AC  3D54               	addwfc	(??_main+1)^(0+128),w
  2460  03AD  0140               	movlb	0	; select bank0
  2461  03AE  00B4               	movwf	codigo@num+1
  2462  03AF  3194  248D  3180   	fcall	_codigo
  2463  03B2  0140               	movlb	0	; select bank0
  2464  03B3  0833               	movf	?_codigo,w
  2465  03B4  0142               	movlb	2	; select bank2
  2466  03B5  009A               	movwf	26	;volatile
  2467  03B6                     l262:	
  2468                           ;main.c: 280: while(TXSTAbits.TRMT==0);
  2469                           
  2470  03B6  1C9E               	btfss	30,1	;volatile
  2471  03B7  2BB6               	goto	l262
  2472                           
  2473                           ;main.c: 282: TX1REG=codigo(energia/100);
  2474  03B8  3064               	movlw	100
  2475  03B9  0140               	movlb	0	; select bank0
  2476  03BA  00A4               	movwf	___awdiv@divisor
  2477  03BB  3000               	movlw	0
  2478  03BC  00A5               	movwf	___awdiv@divisor+1
  2479  03BD  0141               	movlb	1	; select bank1
  2480  03BE  0837               	movf	(_energia+1)^(0+128),w
  2481  03BF  0140               	movlb	0	; select bank0
  2482  03C0  00A7               	movwf	___awdiv@dividend+1
  2483  03C1  0141               	movlb	1	; select bank1
  2484  03C2  0836               	movf	_energia^(0+128),w
  2485  03C3  0140               	movlb	0	; select bank0
  2486  03C4  00A6               	movwf	___awdiv@dividend
  2487  03C5  3187  27AA  3180   	fcall	___awdiv
  2488  03C8  0140               	movlb	0	; select bank0
  2489  03C9  0825               	movf	?___awdiv+1,w
  2490  03CA  00B4               	movwf	codigo@num+1
  2491  03CB  0824               	movf	?___awdiv,w
  2492  03CC  00B3               	movwf	codigo@num
  2493  03CD  3194  248D  3180   	fcall	_codigo
  2494  03D0  0140               	movlb	0	; select bank0
  2495  03D1  0833               	movf	?_codigo,w
  2496  03D2  0142               	movlb	2	; select bank2
  2497  03D3  009A               	movwf	26	;volatile
  2498  03D4                     l265:	
  2499                           ;main.c: 283: while(TXSTAbits.TRMT==0);
  2500                           
  2501  03D4  1C9E               	btfss	30,1	;volatile
  2502  03D5  2BD4               	goto	l265
  2503                           
  2504                           ;main.c: 284: TX1REG=codigo(energia/10);
  2505  03D6  300A               	movlw	10
  2506  03D7  0140               	movlb	0	; select bank0
  2507  03D8  00A4               	movwf	___awdiv@divisor
  2508  03D9  3000               	movlw	0
  2509  03DA  00A5               	movwf	___awdiv@divisor+1
  2510  03DB  0141               	movlb	1	; select bank1
  2511  03DC  0837               	movf	(_energia+1)^(0+128),w
  2512  03DD  0140               	movlb	0	; select bank0
  2513  03DE  00A7               	movwf	___awdiv@dividend+1
  2514  03DF  0141               	movlb	1	; select bank1
  2515  03E0  0836               	movf	_energia^(0+128),w
  2516  03E1  0140               	movlb	0	; select bank0
  2517  03E2  00A6               	movwf	___awdiv@dividend
  2518  03E3  3187  27AA  3180   	fcall	___awdiv
  2519  03E6  0140               	movlb	0	; select bank0
  2520  03E7  0825               	movf	?___awdiv+1,w
  2521  03E8  00B4               	movwf	codigo@num+1
  2522  03E9  0824               	movf	?___awdiv,w
  2523  03EA  00B3               	movwf	codigo@num
  2524  03EB  3194  248D  3180   	fcall	_codigo
  2525  03EE  0140               	movlb	0	; select bank0
  2526  03EF  0833               	movf	?_codigo,w
  2527  03F0  0142               	movlb	2	; select bank2
  2528  03F1  009A               	movwf	26	;volatile
  2529  03F2                     l268:	
  2530                           ;main.c: 285: while(TXSTAbits.TRMT==0);
  2531                           
  2532  03F2  1C9E               	btfss	30,1	;volatile
  2533  03F3  2BF2               	goto	l268
  2534                           
  2535                           ;main.c: 286: TX1REG=codigo(energia-((energia/10)*10));
  2536  03F4  300A               	movlw	10
  2537  03F5  0140               	movlb	0	; select bank0
  2538  03F6  00A4               	movwf	___awdiv@divisor
  2539  03F7  3000               	movlw	0
  2540  03F8  00A5               	movwf	___awdiv@divisor+1
  2541  03F9  0141               	movlb	1	; select bank1
  2542  03FA  0837               	movf	(_energia+1)^(0+128),w
  2543  03FB  0140               	movlb	0	; select bank0
  2544  03FC  00A7               	movwf	___awdiv@dividend+1
  2545  03FD  0141               	movlb	1	; select bank1
  2546  03FE  0836               	movf	_energia^(0+128),w
  2547  03FF  0140               	movlb	0	; select bank0
  2548  0400  00A6               	movwf	___awdiv@dividend
  2549  0401  3187  27AA  3180   	fcall	___awdiv
  2550  0404  0140               	movlb	0	; select bank0
  2551  0405  0825               	movf	?___awdiv+1,w
  2552  0406  00AE               	movwf	___wmul@multiplier+1
  2553  0407  0824               	movf	?___awdiv,w
  2554  0408  00AD               	movwf	___wmul@multiplier
  2555  0409  300A               	movlw	10
  2556  040A  00AF               	movwf	___wmul@multiplicand
  2557  040B  3000               	movlw	0
  2558  040C  00B0               	movwf	___wmul@multiplicand+1
  2559  040D  3194  2422  3180   	fcall	___wmul
  2560  0410  0140               	movlb	0	; select bank0
  2561  0411  092D               	comf	?___wmul,w
  2562  0412  0141               	movlb	1	; select bank1
  2563  0413  00D3               	movwf	??_main^(0+128)
  2564  0414  0140               	movlb	0	; select bank0
  2565  0415  092E               	comf	?___wmul+1,w
  2566  0416  0141               	movlb	1	; select bank1
  2567  0417  00D4               	movwf	(??_main^(0+128)+1)
  2568  0418  0AD3               	incf	??_main^(0+128),f
  2569  0419  1903               	skipnz
  2570  041A  0AD4               	incf	(??_main^(0+128)+1),f
  2571  041B  0836               	movf	_energia^(0+128),w
  2572  041C  0753               	addwf	??_main^(0+128),w
  2573  041D  0140               	movlb	0	; select bank0
  2574  041E  00B3               	movwf	codigo@num
  2575  041F  0141               	movlb	1	; select bank1
  2576  0420  0837               	movf	(_energia+1)^(0+128),w
  2577  0421  3D54               	addwfc	(??_main+1)^(0+128),w
  2578  0422  0140               	movlb	0	; select bank0
  2579  0423  00B4               	movwf	codigo@num+1
  2580  0424  3194  248D  3180   	fcall	_codigo
  2581  0427  0140               	movlb	0	; select bank0
  2582  0428  0833               	movf	?_codigo,w
  2583  0429  0142               	movlb	2	; select bank2
  2584  042A  009A               	movwf	26	;volatile
  2585  042B                     l271:	
  2586                           ;main.c: 287: while(TXSTAbits.TRMT==0);
  2587                           
  2588  042B  1C9E               	btfss	30,1	;volatile
  2589  042C  2C2B               	goto	l271
  2590  042D  2F94               	goto	l4163
  2591  042E                     l4113:	
  2592                           ;main.c: 290: }else if(temperatura>=10 && temperatura<100){
  2593                           
  2594                           ;main.c: 289: TX1REG=126;
  2595                           
  2596  042E  0141               	movlb	1	; select bank1
  2597  042F  0867               	movf	(_temperatura+1)^(0+128),w
  2598  0430  3A80               	xorlw	128
  2599  0431  00D3               	movwf	??_main^(0+128)
  2600  0432  3080               	movlw	128
  2601  0433  0253               	subwf	??_main^(0+128),w
  2602  0434  1D03               	skipz
  2603  0435  2C38               	goto	u5575
  2604  0436  300A               	movlw	10
  2605  0437  0266               	subwf	_temperatura^(0+128),w
  2606  0438                     u5575:	
  2607  0438  1C03               	skipc
  2608  0439  2E1D               	goto	l4141
  2609  043A  0141               	movlb	1	; select bank1
  2610  043B  0867               	movf	(_temperatura+1)^(0+128),w
  2611  043C  3A80               	xorlw	128
  2612  043D  00D3               	movwf	??_main^(0+128)
  2613  043E  3080               	movlw	128
  2614  043F  0253               	subwf	??_main^(0+128),w
  2615  0440  1D03               	skipz
  2616  0441  2C44               	goto	u5585
  2617  0442  3064               	movlw	100
  2618  0443  0266               	subwf	_temperatura^(0+128),w
  2619  0444                     u5585:	
  2620  0444  1803               	skipnc
  2621  0445  2E1D               	goto	l4141
  2622                           
  2623                           ;main.c: 291: TX1REG=codigo(0);
  2624  0446  3000               	movlw	0
  2625  0447  0140               	movlb	0	; select bank0
  2626  0448  00B3               	movwf	codigo@num
  2627  0449  00B4               	movwf	codigo@num+1
  2628  044A  3194  248D  3180   	fcall	_codigo
  2629  044D  0140               	movlb	0	; select bank0
  2630  044E  0833               	movf	?_codigo,w
  2631  044F  0142               	movlb	2	; select bank2
  2632  0450  009A               	movwf	26	;volatile
  2633  0451                     l276:	
  2634                           ;main.c: 292: while(TXSTAbits.TRMT==0);
  2635                           
  2636  0451  1C9E               	btfss	30,1	;volatile
  2637  0452  2C51               	goto	l276
  2638                           
  2639                           ;main.c: 293: TX1REG=codigo(temperatura/10);
  2640  0453  300A               	movlw	10
  2641  0454  0140               	movlb	0	; select bank0
  2642  0455  00A4               	movwf	___awdiv@divisor
  2643  0456  3000               	movlw	0
  2644  0457  00A5               	movwf	___awdiv@divisor+1
  2645  0458  0141               	movlb	1	; select bank1
  2646  0459  0867               	movf	(_temperatura+1)^(0+128),w
  2647  045A  0140               	movlb	0	; select bank0
  2648  045B  00A7               	movwf	___awdiv@dividend+1
  2649  045C  0141               	movlb	1	; select bank1
  2650  045D  0866               	movf	_temperatura^(0+128),w
  2651  045E  0140               	movlb	0	; select bank0
  2652  045F  00A6               	movwf	___awdiv@dividend
  2653  0460  3187  27AA  3180   	fcall	___awdiv
  2654  0463  0140               	movlb	0	; select bank0
  2655  0464  0825               	movf	?___awdiv+1,w
  2656  0465  00B4               	movwf	codigo@num+1
  2657  0466  0824               	movf	?___awdiv,w
  2658  0467  00B3               	movwf	codigo@num
  2659  0468  3194  248D  3180   	fcall	_codigo
  2660  046B  0140               	movlb	0	; select bank0
  2661  046C  0833               	movf	?_codigo,w
  2662  046D  0142               	movlb	2	; select bank2
  2663  046E  009A               	movwf	26	;volatile
  2664  046F                     l279:	
  2665                           ;main.c: 294: while(TXSTAbits.TRMT==0);
  2666                           
  2667  046F  1C9E               	btfss	30,1	;volatile
  2668  0470  2C6F               	goto	l279
  2669                           
  2670                           ;main.c: 295: TX1REG=codigo(temperatura-((temperatura/10)*10));
  2671  0471  300A               	movlw	10
  2672  0472  0140               	movlb	0	; select bank0
  2673  0473  00A4               	movwf	___awdiv@divisor
  2674  0474  3000               	movlw	0
  2675  0475  00A5               	movwf	___awdiv@divisor+1
  2676  0476  0141               	movlb	1	; select bank1
  2677  0477  0867               	movf	(_temperatura+1)^(0+128),w
  2678  0478  0140               	movlb	0	; select bank0
  2679  0479  00A7               	movwf	___awdiv@dividend+1
  2680  047A  0141               	movlb	1	; select bank1
  2681  047B  0866               	movf	_temperatura^(0+128),w
  2682  047C  0140               	movlb	0	; select bank0
  2683  047D  00A6               	movwf	___awdiv@dividend
  2684  047E  3187  27AA  3180   	fcall	___awdiv
  2685  0481  0140               	movlb	0	; select bank0
  2686  0482  0825               	movf	?___awdiv+1,w
  2687  0483  00AE               	movwf	___wmul@multiplier+1
  2688  0484  0824               	movf	?___awdiv,w
  2689  0485  00AD               	movwf	___wmul@multiplier
  2690  0486  300A               	movlw	10
  2691  0487  00AF               	movwf	___wmul@multiplicand
  2692  0488  3000               	movlw	0
  2693  0489  00B0               	movwf	___wmul@multiplicand+1
  2694  048A  3194  2422  3180   	fcall	___wmul
  2695  048D  0140               	movlb	0	; select bank0
  2696  048E  092D               	comf	?___wmul,w
  2697  048F  0141               	movlb	1	; select bank1
  2698  0490  00D3               	movwf	??_main^(0+128)
  2699  0491  0140               	movlb	0	; select bank0
  2700  0492  092E               	comf	?___wmul+1,w
  2701  0493  0141               	movlb	1	; select bank1
  2702  0494  00D4               	movwf	(??_main^(0+128)+1)
  2703  0495  0AD3               	incf	??_main^(0+128),f
  2704  0496  1903               	skipnz
  2705  0497  0AD4               	incf	(??_main^(0+128)+1),f
  2706  0498  0866               	movf	_temperatura^(0+128),w
  2707  0499  0753               	addwf	??_main^(0+128),w
  2708  049A  0140               	movlb	0	; select bank0
  2709  049B  00B3               	movwf	codigo@num
  2710  049C  0141               	movlb	1	; select bank1
  2711  049D  0867               	movf	(_temperatura+1)^(0+128),w
  2712  049E  3D54               	addwfc	(??_main+1)^(0+128),w
  2713  049F  0140               	movlb	0	; select bank0
  2714  04A0  00B4               	movwf	codigo@num+1
  2715  04A1  3194  248D  3180   	fcall	_codigo
  2716  04A4  0140               	movlb	0	; select bank0
  2717  04A5  0833               	movf	?_codigo,w
  2718  04A6  0142               	movlb	2	; select bank2
  2719  04A7  009A               	movwf	26	;volatile
  2720  04A8                     l282:	
  2721                           ;main.c: 296: while(TXSTAbits.TRMT==0);
  2722                           
  2723  04A8  1C9E               	btfss	30,1	;volatile
  2724  04A9  2CA8               	goto	l282
  2725                           
  2726                           ;main.c: 298: TX1REG=codigo(referencia/100);
  2727  04AA  3064               	movlw	100
  2728  04AB  0140               	movlb	0	; select bank0
  2729  04AC  00A4               	movwf	___awdiv@divisor
  2730  04AD  3000               	movlw	0
  2731  04AE  00A5               	movwf	___awdiv@divisor+1
  2732  04AF  0141               	movlb	1	; select bank1
  2733  04B0  0835               	movf	(_referencia+1)^(0+128),w
  2734  04B1  0140               	movlb	0	; select bank0
  2735  04B2  00A7               	movwf	___awdiv@dividend+1
  2736  04B3  0141               	movlb	1	; select bank1
  2737  04B4  0834               	movf	_referencia^(0+128),w
  2738  04B5  0140               	movlb	0	; select bank0
  2739  04B6  00A6               	movwf	___awdiv@dividend
  2740  04B7  3187  27AA  3180   	fcall	___awdiv
  2741  04BA  0140               	movlb	0	; select bank0
  2742  04BB  0825               	movf	?___awdiv+1,w
  2743  04BC  00B4               	movwf	codigo@num+1
  2744  04BD  0824               	movf	?___awdiv,w
  2745  04BE  00B3               	movwf	codigo@num
  2746  04BF  3194  248D  3180   	fcall	_codigo
  2747  04C2  0140               	movlb	0	; select bank0
  2748  04C3  0833               	movf	?_codigo,w
  2749  04C4  0142               	movlb	2	; select bank2
  2750  04C5  009A               	movwf	26	;volatile
  2751  04C6                     l285:	
  2752                           ;main.c: 299: while(TXSTAbits.TRMT==0);
  2753                           
  2754  04C6  1C9E               	btfss	30,1	;volatile
  2755  04C7  2CC6               	goto	l285
  2756                           
  2757                           ;main.c: 300: TX1REG=codigo(referencia/10);
  2758  04C8  300A               	movlw	10
  2759  04C9  0140               	movlb	0	; select bank0
  2760  04CA  00A4               	movwf	___awdiv@divisor
  2761  04CB  3000               	movlw	0
  2762  04CC  00A5               	movwf	___awdiv@divisor+1
  2763  04CD  0141               	movlb	1	; select bank1
  2764  04CE  0835               	movf	(_referencia+1)^(0+128),w
  2765  04CF  0140               	movlb	0	; select bank0
  2766  04D0  00A7               	movwf	___awdiv@dividend+1
  2767  04D1  0141               	movlb	1	; select bank1
  2768  04D2  0834               	movf	_referencia^(0+128),w
  2769  04D3  0140               	movlb	0	; select bank0
  2770  04D4  00A6               	movwf	___awdiv@dividend
  2771  04D5  3187  27AA  3180   	fcall	___awdiv
  2772  04D8  0140               	movlb	0	; select bank0
  2773  04D9  0825               	movf	?___awdiv+1,w
  2774  04DA  00B4               	movwf	codigo@num+1
  2775  04DB  0824               	movf	?___awdiv,w
  2776  04DC  00B3               	movwf	codigo@num
  2777  04DD  3194  248D  3180   	fcall	_codigo
  2778  04E0  0140               	movlb	0	; select bank0
  2779  04E1  0833               	movf	?_codigo,w
  2780  04E2  0142               	movlb	2	; select bank2
  2781  04E3  009A               	movwf	26	;volatile
  2782  04E4                     l288:	
  2783                           ;main.c: 301: while(TXSTAbits.TRMT==0);
  2784                           
  2785  04E4  1C9E               	btfss	30,1	;volatile
  2786  04E5  2CE4               	goto	l288
  2787                           
  2788                           ;main.c: 302: TX1REG=codigo(referencia-((referencia/10)*10));
  2789  04E6  300A               	movlw	10
  2790  04E7  0140               	movlb	0	; select bank0
  2791  04E8  00A4               	movwf	___awdiv@divisor
  2792  04E9  3000               	movlw	0
  2793  04EA  00A5               	movwf	___awdiv@divisor+1
  2794  04EB  0141               	movlb	1	; select bank1
  2795  04EC  0835               	movf	(_referencia+1)^(0+128),w
  2796  04ED  0140               	movlb	0	; select bank0
  2797  04EE  00A7               	movwf	___awdiv@dividend+1
  2798  04EF  0141               	movlb	1	; select bank1
  2799  04F0  0834               	movf	_referencia^(0+128),w
  2800  04F1  0140               	movlb	0	; select bank0
  2801  04F2  00A6               	movwf	___awdiv@dividend
  2802  04F3  3187  27AA  3180   	fcall	___awdiv
  2803  04F6  0140               	movlb	0	; select bank0
  2804  04F7  0825               	movf	?___awdiv+1,w
  2805  04F8  00AE               	movwf	___wmul@multiplier+1
  2806  04F9  0824               	movf	?___awdiv,w
  2807  04FA  00AD               	movwf	___wmul@multiplier
  2808  04FB  300A               	movlw	10
  2809  04FC  00AF               	movwf	___wmul@multiplicand
  2810  04FD  3000               	movlw	0
  2811  04FE  00B0               	movwf	___wmul@multiplicand+1
  2812  04FF  3194  2422  3180   	fcall	___wmul
  2813  0502  0140               	movlb	0	; select bank0
  2814  0503  092D               	comf	?___wmul,w
  2815  0504  0141               	movlb	1	; select bank1
  2816  0505  00D3               	movwf	??_main^(0+128)
  2817  0506  0140               	movlb	0	; select bank0
  2818  0507  092E               	comf	?___wmul+1,w
  2819  0508  0141               	movlb	1	; select bank1
  2820  0509  00D4               	movwf	(??_main^(0+128)+1)
  2821  050A  0AD3               	incf	??_main^(0+128),f
  2822  050B  1903               	skipnz
  2823  050C  0AD4               	incf	(??_main^(0+128)+1),f
  2824  050D  0834               	movf	_referencia^(0+128),w
  2825  050E  0753               	addwf	??_main^(0+128),w
  2826  050F  0140               	movlb	0	; select bank0
  2827  0510  00B3               	movwf	codigo@num
  2828  0511  0141               	movlb	1	; select bank1
  2829  0512  0835               	movf	(_referencia+1)^(0+128),w
  2830  0513  3D54               	addwfc	(??_main+1)^(0+128),w
  2831  0514  0140               	movlb	0	; select bank0
  2832  0515  00B4               	movwf	codigo@num+1
  2833  0516  3194  248D  3180   	fcall	_codigo
  2834  0519  0140               	movlb	0	; select bank0
  2835  051A  0833               	movf	?_codigo,w
  2836  051B  0142               	movlb	2	; select bank2
  2837  051C  009A               	movwf	26	;volatile
  2838  051D                     l291:	
  2839                           ;main.c: 303: while(TXSTAbits.TRMT==0);
  2840                           
  2841  051D  1C9E               	btfss	30,1	;volatile
  2842  051E  2D1D               	goto	l291
  2843                           
  2844                           ;main.c: 306: TX1REG=codigo(energia/100);
  2845  051F  3064               	movlw	100
  2846  0520  0140               	movlb	0	; select bank0
  2847  0521  00A4               	movwf	___awdiv@divisor
  2848  0522  3000               	movlw	0
  2849  0523  00A5               	movwf	___awdiv@divisor+1
  2850  0524  0141               	movlb	1	; select bank1
  2851  0525  0837               	movf	(_energia+1)^(0+128),w
  2852  0526  0140               	movlb	0	; select bank0
  2853  0527  00A7               	movwf	___awdiv@dividend+1
  2854  0528  0141               	movlb	1	; select bank1
  2855  0529  0836               	movf	_energia^(0+128),w
  2856  052A  0140               	movlb	0	; select bank0
  2857  052B  00A6               	movwf	___awdiv@dividend
  2858  052C  3187  27AA  3180   	fcall	___awdiv
  2859  052F  0140               	movlb	0	; select bank0
  2860  0530  0825               	movf	?___awdiv+1,w
  2861  0531  00B4               	movwf	codigo@num+1
  2862  0532  0824               	movf	?___awdiv,w
  2863  0533  00B3               	movwf	codigo@num
  2864  0534  3194  248D  3180   	fcall	_codigo
  2865  0537  0140               	movlb	0	; select bank0
  2866  0538  0833               	movf	?_codigo,w
  2867  0539  0142               	movlb	2	; select bank2
  2868  053A  009A               	movwf	26	;volatile
  2869  053B                     l294:	
  2870                           ;main.c: 307: while(TXSTAbits.TRMT==0);
  2871                           
  2872  053B  1C9E               	btfss	30,1	;volatile
  2873  053C  2D3B               	goto	l294
  2874                           
  2875                           ;main.c: 309: TX1REG=codigo(((energia-((energia/100)*100))/10));
  2876  053D  3064               	movlw	100
  2877  053E  0140               	movlb	0	; select bank0
  2878  053F  00A4               	movwf	___awdiv@divisor
  2879  0540  3000               	movlw	0
  2880  0541  00A5               	movwf	___awdiv@divisor+1
  2881  0542  0141               	movlb	1	; select bank1
  2882  0543  0837               	movf	(_energia+1)^(0+128),w
  2883  0544  0140               	movlb	0	; select bank0
  2884  0545  00A7               	movwf	___awdiv@dividend+1
  2885  0546  0141               	movlb	1	; select bank1
  2886  0547  0836               	movf	_energia^(0+128),w
  2887  0548  0140               	movlb	0	; select bank0
  2888  0549  00A6               	movwf	___awdiv@dividend
  2889  054A  3187  27AA  3180   	fcall	___awdiv
  2890  054D  0140               	movlb	0	; select bank0
  2891  054E  0825               	movf	?___awdiv+1,w
  2892  054F  00AE               	movwf	___wmul@multiplier+1
  2893  0550  0824               	movf	?___awdiv,w
  2894  0551  00AD               	movwf	___wmul@multiplier
  2895  0552  3064               	movlw	100
  2896  0553  00AF               	movwf	___wmul@multiplicand
  2897  0554  3000               	movlw	0
  2898  0555  00B0               	movwf	___wmul@multiplicand+1
  2899  0556  3194  2422  3180   	fcall	___wmul
  2900  0559  0140               	movlb	0	; select bank0
  2901  055A  092D               	comf	?___wmul,w
  2902  055B  0141               	movlb	1	; select bank1
  2903  055C  00D3               	movwf	??_main^(0+128)
  2904  055D  0140               	movlb	0	; select bank0
  2905  055E  092E               	comf	?___wmul+1,w
  2906  055F  0141               	movlb	1	; select bank1
  2907  0560  00D4               	movwf	(??_main^(0+128)+1)
  2908  0561  0AD3               	incf	??_main^(0+128),f
  2909  0562  1903               	skipnz
  2910  0563  0AD4               	incf	(??_main^(0+128)+1),f
  2911  0564  0836               	movf	_energia^(0+128),w
  2912  0565  0753               	addwf	??_main^(0+128),w
  2913  0566  0142               	movlb	2	; select bank2
  2914  0567  00D7               	movwf	_main$1436^(0+256)
  2915  0568  0141               	movlb	1	; select bank1
  2916  0569  0837               	movf	(_energia+1)^(0+128),w
  2917  056A  3D54               	addwfc	(??_main+1)^(0+128),w
  2918  056B  0142               	movlb	2	; select bank2
  2919  056C  00D8               	movwf	(_main$1436+1)^(0+256)
  2920                           
  2921                           ;main.c: 309: TX1REG=codigo(((energia-((energia/100)*100))/10));
  2922  056D  300A               	movlw	10
  2923  056E  0140               	movlb	0	; select bank0
  2924  056F  00A4               	movwf	___awdiv@divisor
  2925  0570  3000               	movlw	0
  2926  0571  00A5               	movwf	___awdiv@divisor+1
  2927  0572  0142               	movlb	2	; select bank2
  2928  0573  0858               	movf	(_main$1436+1)^(0+256),w
  2929  0574  0140               	movlb	0	; select bank0
  2930  0575  00A7               	movwf	___awdiv@dividend+1
  2931  0576  0142               	movlb	2	; select bank2
  2932  0577  0857               	movf	_main$1436^(0+256),w
  2933  0578  0140               	movlb	0	; select bank0
  2934  0579  00A6               	movwf	___awdiv@dividend
  2935  057A  3187  27AA  3180   	fcall	___awdiv
  2936  057D  0140               	movlb	0	; select bank0
  2937  057E  0825               	movf	?___awdiv+1,w
  2938  057F  00B4               	movwf	codigo@num+1
  2939  0580  0824               	movf	?___awdiv,w
  2940  0581  00B3               	movwf	codigo@num
  2941  0582  3194  248D  3180   	fcall	_codigo
  2942  0585  0140               	movlb	0	; select bank0
  2943  0586  0833               	movf	?_codigo,w
  2944  0587  0142               	movlb	2	; select bank2
  2945  0588  009A               	movwf	26	;volatile
  2946  0589                     l297:	
  2947                           ;main.c: 310: while(TXSTAbits.TRMT==0);
  2948                           
  2949  0589  1C9E               	btfss	30,1	;volatile
  2950  058A  2D89               	goto	l297
  2951                           
  2952                           ;main.c: 312: TX1REG=codigo((energia-(((energia/100)*100)+(((energia-((energia/100)*100)
      +                          )/10)*10))));
  2953  058B  3064               	movlw	100
  2954  058C  0140               	movlb	0	; select bank0
  2955  058D  00A4               	movwf	___awdiv@divisor
  2956  058E  3000               	movlw	0
  2957  058F  00A5               	movwf	___awdiv@divisor+1
  2958  0590  0141               	movlb	1	; select bank1
  2959  0591  0837               	movf	(_energia+1)^(0+128),w
  2960  0592  0140               	movlb	0	; select bank0
  2961  0593  00A7               	movwf	___awdiv@dividend+1
  2962  0594  0141               	movlb	1	; select bank1
  2963  0595  0836               	movf	_energia^(0+128),w
  2964  0596  0140               	movlb	0	; select bank0
  2965  0597  00A6               	movwf	___awdiv@dividend
  2966  0598  3187  27AA  3180   	fcall	___awdiv
  2967  059B  0140               	movlb	0	; select bank0
  2968  059C  0825               	movf	?___awdiv+1,w
  2969  059D  00AE               	movwf	___wmul@multiplier+1
  2970  059E  0824               	movf	?___awdiv,w
  2971  059F  00AD               	movwf	___wmul@multiplier
  2972  05A0  3064               	movlw	100
  2973  05A1  00AF               	movwf	___wmul@multiplicand
  2974  05A2  3000               	movlw	0
  2975  05A3  00B0               	movwf	___wmul@multiplicand+1
  2976  05A4  3194  2422  3180   	fcall	___wmul
  2977  05A7  0140               	movlb	0	; select bank0
  2978  05A8  092D               	comf	?___wmul,w
  2979  05A9  0141               	movlb	1	; select bank1
  2980  05AA  00D3               	movwf	??_main^(0+128)
  2981  05AB  0140               	movlb	0	; select bank0
  2982  05AC  092E               	comf	?___wmul+1,w
  2983  05AD  0141               	movlb	1	; select bank1
  2984  05AE  00D4               	movwf	(??_main^(0+128)+1)
  2985  05AF  0AD3               	incf	??_main^(0+128),f
  2986  05B0  1903               	skipnz
  2987  05B1  0AD4               	incf	(??_main^(0+128)+1),f
  2988  05B2  0836               	movf	_energia^(0+128),w
  2989  05B3  0753               	addwf	??_main^(0+128),w
  2990  05B4  0142               	movlb	2	; select bank2
  2991  05B5  00D7               	movwf	_main$1436^(0+256)
  2992  05B6  0141               	movlb	1	; select bank1
  2993  05B7  0837               	movf	(_energia+1)^(0+128),w
  2994  05B8  3D54               	addwfc	(??_main+1)^(0+128),w
  2995  05B9  0142               	movlb	2	; select bank2
  2996  05BA  00D8               	movwf	(_main$1436+1)^(0+256)
  2997                           
  2998                           ;main.c: 312: TX1REG=codigo((energia-(((energia/100)*100)+(((energia-((energia/100)*100)
      +                          )/10)*10))));
  2999  05BB  3064               	movlw	100
  3000  05BC  0140               	movlb	0	; select bank0
  3001  05BD  00A4               	movwf	___awdiv@divisor
  3002  05BE  3000               	movlw	0
  3003  05BF  00A5               	movwf	___awdiv@divisor+1
  3004  05C0  0141               	movlb	1	; select bank1
  3005  05C1  0837               	movf	(_energia+1)^(0+128),w
  3006  05C2  0140               	movlb	0	; select bank0
  3007  05C3  00A7               	movwf	___awdiv@dividend+1
  3008  05C4  0141               	movlb	1	; select bank1
  3009  05C5  0836               	movf	_energia^(0+128),w
  3010  05C6  0140               	movlb	0	; select bank0
  3011  05C7  00A6               	movwf	___awdiv@dividend
  3012  05C8  3187  27AA  3180   	fcall	___awdiv
  3013  05CB  0140               	movlb	0	; select bank0
  3014  05CC  0825               	movf	?___awdiv+1,w
  3015  05CD  00AE               	movwf	___wmul@multiplier+1
  3016  05CE  0824               	movf	?___awdiv,w
  3017  05CF  00AD               	movwf	___wmul@multiplier
  3018  05D0  3064               	movlw	100
  3019  05D1  00AF               	movwf	___wmul@multiplicand
  3020  05D2  3000               	movlw	0
  3021  05D3  00B0               	movwf	___wmul@multiplicand+1
  3022  05D4  3194  2422  3180   	fcall	___wmul
  3023  05D7  0140               	movlb	0	; select bank0
  3024  05D8  082D               	movf	?___wmul,w
  3025  05D9  0141               	movlb	1	; select bank1
  3026  05DA  00D3               	movwf	??_main^(0+128)
  3027  05DB  0140               	movlb	0	; select bank0
  3028  05DC  082E               	movf	?___wmul+1,w
  3029  05DD  0141               	movlb	1	; select bank1
  3030  05DE  00D4               	movwf	(??_main^(0+128)+1)
  3031  05DF  300A               	movlw	10
  3032  05E0  0140               	movlb	0	; select bank0
  3033  05E1  00A4               	movwf	___awdiv@divisor
  3034  05E2  3000               	movlw	0
  3035  05E3  00A5               	movwf	___awdiv@divisor+1
  3036  05E4  0142               	movlb	2	; select bank2
  3037  05E5  0858               	movf	(_main$1436+1)^(0+256),w
  3038  05E6  0140               	movlb	0	; select bank0
  3039  05E7  00A7               	movwf	___awdiv@dividend+1
  3040  05E8  0142               	movlb	2	; select bank2
  3041  05E9  0857               	movf	_main$1436^(0+256),w
  3042  05EA  0140               	movlb	0	; select bank0
  3043  05EB  00A6               	movwf	___awdiv@dividend
  3044  05EC  3187  27AA  3180   	fcall	___awdiv
  3045  05EF  0140               	movlb	0	; select bank0
  3046  05F0  0825               	movf	?___awdiv+1,w
  3047  05F1  00AE               	movwf	___wmul@multiplier+1
  3048  05F2  0824               	movf	?___awdiv,w
  3049  05F3  00AD               	movwf	___wmul@multiplier
  3050  05F4  300A               	movlw	10
  3051  05F5  00AF               	movwf	___wmul@multiplicand
  3052  05F6  3000               	movlw	0
  3053  05F7  00B0               	movwf	___wmul@multiplicand+1
  3054  05F8  3194  2422  3180   	fcall	___wmul
  3055  05FB  0140               	movlb	0	; select bank0
  3056  05FC  082D               	movf	?___wmul,w
  3057  05FD  0141               	movlb	1	; select bank1
  3058  05FE  0753               	addwf	??_main^(0+128),w
  3059  05FF  00D5               	movwf	(??_main+2)^(0+128)
  3060  0600  0140               	movlb	0	; select bank0
  3061  0601  082E               	movf	?___wmul+1,w
  3062  0602  0141               	movlb	1	; select bank1
  3063  0603  3D54               	addwfc	(??_main+1)^(0+128),w
  3064  0604  00D6               	movwf	(??_main+3)^(0+128)
  3065  0605  09D5               	comf	(??_main+2)^(0+128),f
  3066  0606  09D6               	comf	((??_main+2)^(0+128)+1),f
  3067  0607  0AD5               	incf	(??_main+2)^(0+128),f
  3068  0608  1903               	skipnz
  3069  0609  0AD6               	incf	((??_main+2)^(0+128)+1),f
  3070  060A  0836               	movf	_energia^(0+128),w
  3071  060B  0755               	addwf	(??_main+2)^(0+128),w
  3072  060C  0140               	movlb	0	; select bank0
  3073  060D  00B3               	movwf	codigo@num
  3074  060E  0141               	movlb	1	; select bank1
  3075  060F  0837               	movf	(_energia+1)^(0+128),w
  3076  0610  3D56               	addwfc	(??_main+3)^(0+128),w
  3077  0611  0140               	movlb	0	; select bank0
  3078  0612  00B4               	movwf	codigo@num+1
  3079  0613  3194  248D  3180   	fcall	_codigo
  3080  0616  0140               	movlb	0	; select bank0
  3081  0617  0833               	movf	?_codigo,w
  3082  0618  0142               	movlb	2	; select bank2
  3083  0619  009A               	movwf	26	;volatile
  3084  061A                     l300:	
  3085                           ;main.c: 313: while(TXSTAbits.TRMT==0);
  3086                           
  3087  061A  1C9E               	btfss	30,1	;volatile
  3088  061B  2E1A               	goto	l300
  3089  061C  2F94               	goto	l4163
  3090  061D                     l4141:	
  3091                           ;main.c: 317: }else if(temperatura>=100 && temperatura<1000){
  3092                           
  3093                           ;main.c: 315: TX1REG=126;
  3094                           
  3095  061D  0141               	movlb	1	; select bank1
  3096  061E  0867               	movf	(_temperatura+1)^(0+128),w
  3097  061F  3A80               	xorlw	128
  3098  0620  00D3               	movwf	??_main^(0+128)
  3099  0621  3080               	movlw	128
  3100  0622  0253               	subwf	??_main^(0+128),w
  3101  0623  1D03               	skipz
  3102  0624  2E27               	goto	u5685
  3103  0625  3064               	movlw	100
  3104  0626  0266               	subwf	_temperatura^(0+128),w
  3105  0627                     u5685:	
  3106  0627  1C03               	skipc
  3107  0628  2F96               	goto	l4165
  3108  0629  0141               	movlb	1	; select bank1
  3109  062A  0867               	movf	(_temperatura+1)^(0+128),w
  3110  062B  3A80               	xorlw	128
  3111  062C  00D3               	movwf	??_main^(0+128)
  3112  062D  3083               	movlw	131
  3113  062E  0253               	subwf	??_main^(0+128),w
  3114  062F  1D03               	skipz
  3115  0630  2E33               	goto	u5695
  3116  0631  30E8               	movlw	232
  3117  0632  0266               	subwf	_temperatura^(0+128),w
  3118  0633                     u5695:	
  3119  0633  1803               	skipnc
  3120  0634  2F96               	goto	l4165
  3121                           
  3122                           ;main.c: 318: TX1REG=codigo(temperatura/100);
  3123  0635  3064               	movlw	100
  3124  0636  0140               	movlb	0	; select bank0
  3125  0637  00A4               	movwf	___awdiv@divisor
  3126  0638  3000               	movlw	0
  3127  0639  00A5               	movwf	___awdiv@divisor+1
  3128  063A  0141               	movlb	1	; select bank1
  3129  063B  0867               	movf	(_temperatura+1)^(0+128),w
  3130  063C  0140               	movlb	0	; select bank0
  3131  063D  00A7               	movwf	___awdiv@dividend+1
  3132  063E  0141               	movlb	1	; select bank1
  3133  063F  0866               	movf	_temperatura^(0+128),w
  3134  0640  0140               	movlb	0	; select bank0
  3135  0641  00A6               	movwf	___awdiv@dividend
  3136  0642  3187  27AA  3180   	fcall	___awdiv
  3137  0645  0140               	movlb	0	; select bank0
  3138  0646  0825               	movf	?___awdiv+1,w
  3139  0647  00B4               	movwf	codigo@num+1
  3140  0648  0824               	movf	?___awdiv,w
  3141  0649  00B3               	movwf	codigo@num
  3142  064A  3194  248D  3180   	fcall	_codigo
  3143  064D  0140               	movlb	0	; select bank0
  3144  064E  0833               	movf	?_codigo,w
  3145  064F  0142               	movlb	2	; select bank2
  3146  0650  009A               	movwf	26	;volatile
  3147  0651                     l305:	
  3148                           ;main.c: 319: while(TXSTAbits.TRMT==0);
  3149                           
  3150  0651  1C9E               	btfss	30,1	;volatile
  3151  0652  2E51               	goto	l305
  3152                           
  3153                           ;main.c: 320: TX1REG=codigo(temperatura/10);
  3154  0653  300A               	movlw	10
  3155  0654  0140               	movlb	0	; select bank0
  3156  0655  00A4               	movwf	___awdiv@divisor
  3157  0656  3000               	movlw	0
  3158  0657  00A5               	movwf	___awdiv@divisor+1
  3159  0658  0141               	movlb	1	; select bank1
  3160  0659  0867               	movf	(_temperatura+1)^(0+128),w
  3161  065A  0140               	movlb	0	; select bank0
  3162  065B  00A7               	movwf	___awdiv@dividend+1
  3163  065C  0141               	movlb	1	; select bank1
  3164  065D  0866               	movf	_temperatura^(0+128),w
  3165  065E  0140               	movlb	0	; select bank0
  3166  065F  00A6               	movwf	___awdiv@dividend
  3167  0660  3187  27AA  3180   	fcall	___awdiv
  3168  0663  0140               	movlb	0	; select bank0
  3169  0664  0825               	movf	?___awdiv+1,w
  3170  0665  00B4               	movwf	codigo@num+1
  3171  0666  0824               	movf	?___awdiv,w
  3172  0667  00B3               	movwf	codigo@num
  3173  0668  3194  248D  3180   	fcall	_codigo
  3174  066B  0140               	movlb	0	; select bank0
  3175  066C  0833               	movf	?_codigo,w
  3176  066D  0142               	movlb	2	; select bank2
  3177  066E  009A               	movwf	26	;volatile
  3178  066F                     l308:	
  3179                           ;main.c: 321: while(TXSTAbits.TRMT==0);
  3180                           
  3181  066F  1C9E               	btfss	30,1	;volatile
  3182  0670  2E6F               	goto	l308
  3183                           
  3184                           ;main.c: 322: TX1REG=codigo(temperatura-((temperatura/10)*10));
  3185  0671  300A               	movlw	10
  3186  0672  0140               	movlb	0	; select bank0
  3187  0673  00A4               	movwf	___awdiv@divisor
  3188  0674  3000               	movlw	0
  3189  0675  00A5               	movwf	___awdiv@divisor+1
  3190  0676  0141               	movlb	1	; select bank1
  3191  0677  0867               	movf	(_temperatura+1)^(0+128),w
  3192  0678  0140               	movlb	0	; select bank0
  3193  0679  00A7               	movwf	___awdiv@dividend+1
  3194  067A  0141               	movlb	1	; select bank1
  3195  067B  0866               	movf	_temperatura^(0+128),w
  3196  067C  0140               	movlb	0	; select bank0
  3197  067D  00A6               	movwf	___awdiv@dividend
  3198  067E  3187  27AA  3180   	fcall	___awdiv
  3199  0681  0140               	movlb	0	; select bank0
  3200  0682  0825               	movf	?___awdiv+1,w
  3201  0683  00AE               	movwf	___wmul@multiplier+1
  3202  0684  0824               	movf	?___awdiv,w
  3203  0685  00AD               	movwf	___wmul@multiplier
  3204  0686  300A               	movlw	10
  3205  0687  00AF               	movwf	___wmul@multiplicand
  3206  0688  3000               	movlw	0
  3207  0689  00B0               	movwf	___wmul@multiplicand+1
  3208  068A  3194  2422  3180   	fcall	___wmul
  3209  068D  0140               	movlb	0	; select bank0
  3210  068E  092D               	comf	?___wmul,w
  3211  068F  0141               	movlb	1	; select bank1
  3212  0690  00D3               	movwf	??_main^(0+128)
  3213  0691  0140               	movlb	0	; select bank0
  3214  0692  092E               	comf	?___wmul+1,w
  3215  0693  0141               	movlb	1	; select bank1
  3216  0694  00D4               	movwf	(??_main^(0+128)+1)
  3217  0695  0AD3               	incf	??_main^(0+128),f
  3218  0696  1903               	skipnz
  3219  0697  0AD4               	incf	(??_main^(0+128)+1),f
  3220  0698  0866               	movf	_temperatura^(0+128),w
  3221  0699  0753               	addwf	??_main^(0+128),w
  3222  069A  0140               	movlb	0	; select bank0
  3223  069B  00B3               	movwf	codigo@num
  3224  069C  0141               	movlb	1	; select bank1
  3225  069D  0867               	movf	(_temperatura+1)^(0+128),w
  3226  069E  3D54               	addwfc	(??_main+1)^(0+128),w
  3227  069F  0140               	movlb	0	; select bank0
  3228  06A0  00B4               	movwf	codigo@num+1
  3229  06A1  3194  248D  3180   	fcall	_codigo
  3230  06A4  0140               	movlb	0	; select bank0
  3231  06A5  0833               	movf	?_codigo,w
  3232  06A6  0142               	movlb	2	; select bank2
  3233  06A7  009A               	movwf	26	;volatile
  3234  06A8                     l311:	
  3235                           ;main.c: 323: while(TXSTAbits.TRMT==0);
  3236                           
  3237  06A8  1C9E               	btfss	30,1	;volatile
  3238  06A9  2EA8               	goto	l311
  3239                           
  3240                           ;main.c: 325: TX1REG=codigo(referencia/100);
  3241  06AA  3064               	movlw	100
  3242  06AB  0140               	movlb	0	; select bank0
  3243  06AC  00A4               	movwf	___awdiv@divisor
  3244  06AD  3000               	movlw	0
  3245  06AE  00A5               	movwf	___awdiv@divisor+1
  3246  06AF  0141               	movlb	1	; select bank1
  3247  06B0  0835               	movf	(_referencia+1)^(0+128),w
  3248  06B1  0140               	movlb	0	; select bank0
  3249  06B2  00A7               	movwf	___awdiv@dividend+1
  3250  06B3  0141               	movlb	1	; select bank1
  3251  06B4  0834               	movf	_referencia^(0+128),w
  3252  06B5  0140               	movlb	0	; select bank0
  3253  06B6  00A6               	movwf	___awdiv@dividend
  3254  06B7  3187  27AA  3180   	fcall	___awdiv
  3255  06BA  0140               	movlb	0	; select bank0
  3256  06BB  0825               	movf	?___awdiv+1,w
  3257  06BC  00B4               	movwf	codigo@num+1
  3258  06BD  0824               	movf	?___awdiv,w
  3259  06BE  00B3               	movwf	codigo@num
  3260  06BF  3194  248D  3180   	fcall	_codigo
  3261  06C2  0140               	movlb	0	; select bank0
  3262  06C3  0833               	movf	?_codigo,w
  3263  06C4  0142               	movlb	2	; select bank2
  3264  06C5  009A               	movwf	26	;volatile
  3265  06C6                     l314:	
  3266                           ;main.c: 326: while(TXSTAbits.TRMT==0);
  3267                           
  3268  06C6  1C9E               	btfss	30,1	;volatile
  3269  06C7  2EC6               	goto	l314
  3270                           
  3271                           ;main.c: 327: TX1REG=codigo(referencia/10);
  3272  06C8  300A               	movlw	10
  3273  06C9  0140               	movlb	0	; select bank0
  3274  06CA  00A4               	movwf	___awdiv@divisor
  3275  06CB  3000               	movlw	0
  3276  06CC  00A5               	movwf	___awdiv@divisor+1
  3277  06CD  0141               	movlb	1	; select bank1
  3278  06CE  0835               	movf	(_referencia+1)^(0+128),w
  3279  06CF  0140               	movlb	0	; select bank0
  3280  06D0  00A7               	movwf	___awdiv@dividend+1
  3281  06D1  0141               	movlb	1	; select bank1
  3282  06D2  0834               	movf	_referencia^(0+128),w
  3283  06D3  0140               	movlb	0	; select bank0
  3284  06D4  00A6               	movwf	___awdiv@dividend
  3285  06D5  3187  27AA  3180   	fcall	___awdiv
  3286  06D8  0140               	movlb	0	; select bank0
  3287  06D9  0825               	movf	?___awdiv+1,w
  3288  06DA  00B4               	movwf	codigo@num+1
  3289  06DB  0824               	movf	?___awdiv,w
  3290  06DC  00B3               	movwf	codigo@num
  3291  06DD  3194  248D  3180   	fcall	_codigo
  3292  06E0  0140               	movlb	0	; select bank0
  3293  06E1  0833               	movf	?_codigo,w
  3294  06E2  0142               	movlb	2	; select bank2
  3295  06E3  009A               	movwf	26	;volatile
  3296  06E4                     l317:	
  3297                           ;main.c: 328: while(TXSTAbits.TRMT==0);
  3298                           
  3299  06E4  1C9E               	btfss	30,1	;volatile
  3300  06E5  2EE4               	goto	l317
  3301                           
  3302                           ;main.c: 329: TX1REG=codigo(referencia-((referencia/10)*10));
  3303  06E6  300A               	movlw	10
  3304  06E7  0140               	movlb	0	; select bank0
  3305  06E8  00A4               	movwf	___awdiv@divisor
  3306  06E9  3000               	movlw	0
  3307  06EA  00A5               	movwf	___awdiv@divisor+1
  3308  06EB  0141               	movlb	1	; select bank1
  3309  06EC  0835               	movf	(_referencia+1)^(0+128),w
  3310  06ED  0140               	movlb	0	; select bank0
  3311  06EE  00A7               	movwf	___awdiv@dividend+1
  3312  06EF  0141               	movlb	1	; select bank1
  3313  06F0  0834               	movf	_referencia^(0+128),w
  3314  06F1  0140               	movlb	0	; select bank0
  3315  06F2  00A6               	movwf	___awdiv@dividend
  3316  06F3  3187  27AA  3180   	fcall	___awdiv
  3317  06F6  0140               	movlb	0	; select bank0
  3318  06F7  0825               	movf	?___awdiv+1,w
  3319  06F8  00AE               	movwf	___wmul@multiplier+1
  3320  06F9  0824               	movf	?___awdiv,w
  3321  06FA  00AD               	movwf	___wmul@multiplier
  3322  06FB  300A               	movlw	10
  3323  06FC  00AF               	movwf	___wmul@multiplicand
  3324  06FD  3000               	movlw	0
  3325  06FE  00B0               	movwf	___wmul@multiplicand+1
  3326  06FF  3194  2422  3180   	fcall	___wmul
  3327  0702  0140               	movlb	0	; select bank0
  3328  0703  092D               	comf	?___wmul,w
  3329  0704  0141               	movlb	1	; select bank1
  3330  0705  00D3               	movwf	??_main^(0+128)
  3331  0706  0140               	movlb	0	; select bank0
  3332  0707  092E               	comf	?___wmul+1,w
  3333  0708  0141               	movlb	1	; select bank1
  3334  0709  00D4               	movwf	(??_main^(0+128)+1)
  3335  070A  0AD3               	incf	??_main^(0+128),f
  3336  070B  1903               	skipnz
  3337  070C  0AD4               	incf	(??_main^(0+128)+1),f
  3338  070D  0834               	movf	_referencia^(0+128),w
  3339  070E  0753               	addwf	??_main^(0+128),w
  3340  070F  0140               	movlb	0	; select bank0
  3341  0710  00B3               	movwf	codigo@num
  3342  0711  0141               	movlb	1	; select bank1
  3343  0712  0835               	movf	(_referencia+1)^(0+128),w
  3344  0713  3D54               	addwfc	(??_main+1)^(0+128),w
  3345  0714  0140               	movlb	0	; select bank0
  3346  0715  00B4               	movwf	codigo@num+1
  3347  0716  3194  248D  3180   	fcall	_codigo
  3348  0719  0140               	movlb	0	; select bank0
  3349  071A  0833               	movf	?_codigo,w
  3350  071B  0142               	movlb	2	; select bank2
  3351  071C  009A               	movwf	26	;volatile
  3352  071D                     l320:	
  3353                           ;main.c: 330: while(TXSTAbits.TRMT==0);
  3354                           
  3355  071D  1C9E               	btfss	30,1	;volatile
  3356  071E  2F1D               	goto	l320
  3357                           
  3358                           ;main.c: 332: TX1REG=codigo(energia/100);
  3359  071F  3064               	movlw	100
  3360  0720  0140               	movlb	0	; select bank0
  3361  0721  00A4               	movwf	___awdiv@divisor
  3362  0722  3000               	movlw	0
  3363  0723  00A5               	movwf	___awdiv@divisor+1
  3364  0724  0141               	movlb	1	; select bank1
  3365  0725  0837               	movf	(_energia+1)^(0+128),w
  3366  0726  0140               	movlb	0	; select bank0
  3367  0727  00A7               	movwf	___awdiv@dividend+1
  3368  0728  0141               	movlb	1	; select bank1
  3369  0729  0836               	movf	_energia^(0+128),w
  3370  072A  0140               	movlb	0	; select bank0
  3371  072B  00A6               	movwf	___awdiv@dividend
  3372  072C  3187  27AA  3180   	fcall	___awdiv
  3373  072F  0140               	movlb	0	; select bank0
  3374  0730  0825               	movf	?___awdiv+1,w
  3375  0731  00B4               	movwf	codigo@num+1
  3376  0732  0824               	movf	?___awdiv,w
  3377  0733  00B3               	movwf	codigo@num
  3378  0734  3194  248D  3180   	fcall	_codigo
  3379  0737  0140               	movlb	0	; select bank0
  3380  0738  0833               	movf	?_codigo,w
  3381  0739  0142               	movlb	2	; select bank2
  3382  073A  009A               	movwf	26	;volatile
  3383  073B                     l323:	
  3384                           ;main.c: 333: while(TXSTAbits.TRMT==0);
  3385                           
  3386  073B  1C9E               	btfss	30,1	;volatile
  3387  073C  2F3B               	goto	l323
  3388                           
  3389                           ;main.c: 334: TX1REG=codigo(energia/10);
  3390  073D  300A               	movlw	10
  3391  073E  0140               	movlb	0	; select bank0
  3392  073F  00A4               	movwf	___awdiv@divisor
  3393  0740  3000               	movlw	0
  3394  0741  00A5               	movwf	___awdiv@divisor+1
  3395  0742  0141               	movlb	1	; select bank1
  3396  0743  0837               	movf	(_energia+1)^(0+128),w
  3397  0744  0140               	movlb	0	; select bank0
  3398  0745  00A7               	movwf	___awdiv@dividend+1
  3399  0746  0141               	movlb	1	; select bank1
  3400  0747  0836               	movf	_energia^(0+128),w
  3401  0748  0140               	movlb	0	; select bank0
  3402  0749  00A6               	movwf	___awdiv@dividend
  3403  074A  3187  27AA  3180   	fcall	___awdiv
  3404  074D  0140               	movlb	0	; select bank0
  3405  074E  0825               	movf	?___awdiv+1,w
  3406  074F  00B4               	movwf	codigo@num+1
  3407  0750  0824               	movf	?___awdiv,w
  3408  0751  00B3               	movwf	codigo@num
  3409  0752  3194  248D  3180   	fcall	_codigo
  3410  0755  0140               	movlb	0	; select bank0
  3411  0756  0833               	movf	?_codigo,w
  3412  0757  0142               	movlb	2	; select bank2
  3413  0758  009A               	movwf	26	;volatile
  3414  0759                     l326:	
  3415                           ;main.c: 335: while(TXSTAbits.TRMT==0);
  3416                           
  3417  0759  1C9E               	btfss	30,1	;volatile
  3418  075A  2F59               	goto	l326
  3419                           
  3420                           ;main.c: 336: TX1REG=codigo(energia-((energia/10)*10));
  3421  075B  300A               	movlw	10
  3422  075C  0140               	movlb	0	; select bank0
  3423  075D  00A4               	movwf	___awdiv@divisor
  3424  075E  3000               	movlw	0
  3425  075F  00A5               	movwf	___awdiv@divisor+1
  3426  0760  0141               	movlb	1	; select bank1
  3427  0761  0837               	movf	(_energia+1)^(0+128),w
  3428  0762  0140               	movlb	0	; select bank0
  3429  0763  00A7               	movwf	___awdiv@dividend+1
  3430  0764  0141               	movlb	1	; select bank1
  3431  0765  0836               	movf	_energia^(0+128),w
  3432  0766  0140               	movlb	0	; select bank0
  3433  0767  00A6               	movwf	___awdiv@dividend
  3434  0768  3187  27AA  3180   	fcall	___awdiv
  3435  076B  0140               	movlb	0	; select bank0
  3436  076C  0825               	movf	?___awdiv+1,w
  3437  076D  00AE               	movwf	___wmul@multiplier+1
  3438  076E  0824               	movf	?___awdiv,w
  3439  076F  00AD               	movwf	___wmul@multiplier
  3440  0770  300A               	movlw	10
  3441  0771  00AF               	movwf	___wmul@multiplicand
  3442  0772  3000               	movlw	0
  3443  0773  00B0               	movwf	___wmul@multiplicand+1
  3444  0774  3194  2422  3180   	fcall	___wmul
  3445  0777  0140               	movlb	0	; select bank0
  3446  0778  092D               	comf	?___wmul,w
  3447  0779  0141               	movlb	1	; select bank1
  3448  077A  00D3               	movwf	??_main^(0+128)
  3449  077B  0140               	movlb	0	; select bank0
  3450  077C  092E               	comf	?___wmul+1,w
  3451  077D  0141               	movlb	1	; select bank1
  3452  077E  00D4               	movwf	(??_main^(0+128)+1)
  3453  077F  0AD3               	incf	??_main^(0+128),f
  3454  0780  1903               	skipnz
  3455  0781  0AD4               	incf	(??_main^(0+128)+1),f
  3456  0782  0836               	movf	_energia^(0+128),w
  3457  0783  0753               	addwf	??_main^(0+128),w
  3458  0784  0140               	movlb	0	; select bank0
  3459  0785  00B3               	movwf	codigo@num
  3460  0786  0141               	movlb	1	; select bank1
  3461  0787  0837               	movf	(_energia+1)^(0+128),w
  3462  0788  3D54               	addwfc	(??_main+1)^(0+128),w
  3463  0789  0140               	movlb	0	; select bank0
  3464  078A  00B4               	movwf	codigo@num+1
  3465  078B  3194  248D  3180   	fcall	_codigo
  3466  078E  0140               	movlb	0	; select bank0
  3467  078F  0833               	movf	?_codigo,w
  3468  0790  0142               	movlb	2	; select bank2
  3469  0791  009A               	movwf	26	;volatile
  3470  0792                     l329:	
  3471                           ;main.c: 337: while(TXSTAbits.TRMT==0);
  3472                           
  3473  0792  1C9E               	btfss	30,1	;volatile
  3474  0793  2F92               	goto	l329
  3475  0794                     l4163:	
  3476                           
  3477                           ;main.c: 339: TX1REG=126;
  3478  0794  307E               	movlw	126
  3479  0795  009A               	movwf	26	;volatile
  3480  0796                     l4165:	
  3481                           
  3482                           ;main.c: 340: }
  3483                           ;main.c: 341: contadorenviar=0;
  3484  0796  0141               	movlb	1	; select bank1
  3485  0797  01E4               	clrf	_contadorenviar^(0+128)
  3486  0798  01E5               	clrf	(_contadorenviar+1)^(0+128)
  3487                           
  3488                           ;main.c: 343: }else{contadorenviar=contadorenviar+1;}
  3489  0799  2FA0               	goto	l4169
  3490  079A                     l4167:	
  3491  079A  0864               	movf	_contadorenviar^(0+128),w
  3492  079B  3E01               	addlw	1
  3493  079C  00E4               	movwf	_contadorenviar^(0+128)
  3494  079D  3000               	movlw	0
  3495  079E  3D65               	addwfc	(_contadorenviar+1)^(0+128),w
  3496  079F  00E5               	movwf	(_contadorenviar+1)^(0+128)
  3497  07A0                     l4169:	
  3498                           
  3499                           ;main.c: 344: _delay((unsigned long)((10)*(32000000/4000.0)));
  3500  07A0  3068               	movlw	104
  3501  07A1  0141               	movlb	1	; select bank1
  3502  07A2  00D3               	movwf	??_main^(0+128)
  3503  07A3  30E4               	movlw	228
  3504  07A4                     u5807:	
  3505  07A4  0B89               	decfsz	9,f
  3506  07A5  2FA4               	goto	u5807
  3507  07A6  0BD3               	decfsz	??_main^(0+128),f
  3508  07A7  2FA4               	goto	u5807
  3509  07A8  0000               	nop
  3510  07A9  2932               	goto	l4043
  3511  07AA                     __end_of_main:	
  3512                           ;main.c: 346: }
  3513                           ;main.c: 348: return;
  3514                           
  3515                           
  3516                           	psect	text1
  3517  0C9D                     __ptext1:	
  3518 ;; *************** function _sprintf *****************
  3519 ;; Defined at:
  3520 ;;		line 492 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\doprnt.c"
  3521 ;; Parameters:    Size  Location     Type
  3522 ;;  sp              1    wreg     PTR unsigned char 
  3523 ;;		 -> buffer2(16), buffer1(16), 
  3524 ;;  f               2   19[BANK0 ] PTR const unsigned char 
  3525 ;;		 -> STR_2(14), STR_1(16), 
  3526 ;; Auto vars:     Size  Location     Type
  3527 ;;  sp              1   36[BANK0 ] PTR unsigned char 
  3528 ;;		 -> buffer2(16), buffer1(16), 
  3529 ;;  tmpval          4    0        struct .
  3530 ;;  width           2   34[BANK0 ] int 
  3531 ;;  val             2   31[BANK0 ] unsigned int 
  3532 ;;  cp              2    0        PTR const unsigned char 
  3533 ;;  len             2    0        unsigned int 
  3534 ;;  c               1   37[BANK0 ] char 
  3535 ;;  flag            1   33[BANK0 ] unsigned char 
  3536 ;;  prec            1   30[BANK0 ] char 
  3537 ;;  ap              1   29[BANK0 ] PTR void [1]
  3538 ;;		 -> ?_sprintf(2), 
  3539 ;; Return value:  Size  Location     Type
  3540 ;;                  2   19[BANK0 ] int 
  3541 ;; Registers used:
  3542 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3543 ;; Tracked objects:
  3544 ;;		On entry : 0/0
  3545 ;;		On exit  : 0/0
  3546 ;;		Unchanged: 0/0
  3547 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
  3548 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  3549 ;;      Locals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  3550 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  3551 ;;      Totals:         0      19       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  3552 ;;Total ram usage:       19 bytes
  3553 ;; Hardware stack levels used:    1
  3554 ;; Hardware stack levels required when called:    3
  3555 ;; This function calls:
  3556 ;;		___lwdiv
  3557 ;;		___lwmod
  3558 ;;		___wmul
  3559 ;;		_isdigit
  3560 ;; This function is called by:
  3561 ;;		_main
  3562 ;; This function uses a non-reentrant model
  3563 ;;
  3564                           
  3565                           
  3566                           ;psect for function _sprintf
  3567  0C9D                     _sprintf:	
  3568                           
  3569                           ;incstack = 0
  3570                           ; Regs used in _sprintf: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  3571                           ;sprintf@sp stored from wreg
  3572  0C9D  0140               	movlb	0	; select bank0
  3573  0C9E  00C4               	movwf	sprintf@sp
  3574                           
  3575                           ;doprnt.c: 494: va_list ap;
  3576                           ;doprnt.c: 499: signed char c;
  3577                           ;doprnt.c: 501: int width;
  3578                           ;doprnt.c: 506: signed char prec;
  3579                           ;doprnt.c: 508: unsigned char flag;
  3580                           ;doprnt.c: 523: union {
  3581                           ;doprnt.c: 524: unsigned long vd;
  3582                           ;doprnt.c: 525: double integ;
  3583                           ;doprnt.c: 526: } tmpval;
  3584                           ;doprnt.c: 528: unsigned int val;
  3585                           ;doprnt.c: 529: unsigned len;
  3586                           ;doprnt.c: 530: const char * cp;
  3587                           ;doprnt.c: 533: *ap = __va_start();
  3588  0C9F  3035               	movlw	(low ((?_sprintf| 0+2)))& (0+255)
  3589  0CA0  00B9               	movwf	??_sprintf
  3590  0CA1  0839               	movf	??_sprintf,w
  3591  0CA2  00BD               	movwf	sprintf@ap
  3592  0CA3                     l3853:	
  3593                           ;doprnt.c: 536: while(c = *f++) {
  3594                           
  3595  0CA3  0140               	movlb	0	; select bank0
  3596  0CA4  0834               	movf	sprintf@f+1,w
  3597  0CA5  00BA               	movwf	??_sprintf+1
  3598  0CA6  0833               	movf	sprintf@f,w
  3599  0CA7  00B9               	movwf	??_sprintf
  3600  0CA8  0AB3               	incf	sprintf@f,f
  3601  0CA9  1903               	skipnz
  3602  0CAA  0AB4               	incf	sprintf@f+1,f
  3603  0CAB  0839               	movf	??_sprintf,w
  3604  0CAC  0084               	movwf	4
  3605  0CAD  083A               	movf	??_sprintf+1,w
  3606  0CAE  0085               	movwf	5
  3607  0CAF  0800               	movf	0,w	;code access
  3608  0CB0  00BB               	movwf	??_sprintf+2
  3609  0CB1  083B               	movf	??_sprintf+2,w
  3610  0CB2  00C5               	movwf	sprintf@c
  3611  0CB3  0845               	movf	sprintf@c,w
  3612  0CB4  1903               	btfsc	3,2
  3613  0CB5  2E22               	goto	l3855
  3614                           
  3615                           ;doprnt.c: 538: if(c != '%')
  3616  0CB6  3025               	movlw	37
  3617  0CB7  0645               	xorwf	sprintf@c,w
  3618  0CB8  1903               	btfsc	3,2
  3619  0CB9  2CC7               	goto	l3757
  3620                           
  3621                           ;doprnt.c: 540: {
  3622                           ;doprnt.c: 541: ((*sp++ = (c)));
  3623  0CBA  0845               	movf	sprintf@c,w
  3624  0CBB  00B9               	movwf	??_sprintf
  3625  0CBC  0844               	movf	sprintf@sp,w
  3626  0CBD  0086               	movwf	6
  3627  0CBE  3001               	movlw	1	; select bank2/3
  3628  0CBF  0087               	movwf	7
  3629  0CC0  0839               	movf	??_sprintf,w
  3630  0CC1  0081               	movwf	1
  3631  0CC2  3001               	movlw	1
  3632  0CC3  00B9               	movwf	??_sprintf
  3633  0CC4  0839               	movf	??_sprintf,w
  3634  0CC5  07C4               	addwf	sprintf@sp,f
  3635                           
  3636                           ;doprnt.c: 542: continue;
  3637  0CC6  2CA3               	goto	l3853
  3638  0CC7                     l3757:	
  3639                           
  3640                           ;doprnt.c: 543: }
  3641                           ;doprnt.c: 546: width = 0;
  3642  0CC7  01C2               	clrf	sprintf@width
  3643  0CC8  01C3               	clrf	sprintf@width+1
  3644                           
  3645                           ;doprnt.c: 548: flag = 0;
  3646  0CC9  01C1               	clrf	sprintf@flag
  3647                           
  3648                           ;doprnt.c: 551: switch(*f) {
  3649                           
  3650                           ;doprnt.c: 550: for(;;) {
  3651  0CCA  2CD0               	goto	l3763
  3652  0CCB                     l351:	
  3653                           ;doprnt.c: 579: case '0':
  3654                           
  3655                           
  3656                           ;doprnt.c: 580: flag |= 0x04;
  3657  0CCB  1541               	bsf	sprintf@flag,2
  3658                           
  3659                           ;doprnt.c: 581: f++;
  3660  0CCC  3001               	movlw	1
  3661  0CCD  07B3               	addwf	sprintf@f,f
  3662  0CCE  3000               	movlw	0
  3663  0CCF  3DB4               	addwfc	sprintf@f+1,f
  3664  0CD0                     l3763:	
  3665                           ;doprnt.c: 584: }
  3666                           
  3667                           ;doprnt.c: 582: continue;
  3668                           
  3669  0CD0  0833               	movf	sprintf@f,w
  3670  0CD1  0084               	movwf	4
  3671  0CD2  0834               	movf	sprintf@f+1,w
  3672  0CD3  0085               	movwf	5
  3673  0CD4  0800               	movf	0,w	;code access
  3674                           
  3675                           ; Switch size 1, requested type "space"
  3676                           ; Number of cases is 1, Range of values is 48 to 48
  3677                           ; switch strategies available:
  3678                           ; Name         Instructions Cycles
  3679                           ; simple_byte            4     3 (average)
  3680                           ; direct_byte           11     9 (fixed)
  3681                           ; jumptable            263     9 (fixed)
  3682                           ;	Chosen strategy is simple_byte
  3683  0CD5  3A30               	xorlw	48	; case 48
  3684  0CD6  1903               	skipnz
  3685  0CD7  2CCB               	goto	l351
  3686  0CD8  2CD9               	goto	l3765
  3687  0CD9                     l3765:	
  3688                           ;doprnt.c: 586: }
  3689                           
  3690                           ;doprnt.c: 585: break;
  3691                           
  3692                           
  3693                           ;doprnt.c: 597: if(isdigit((unsigned)*f)) {
  3694  0CD9  0833               	movf	sprintf@f,w
  3695  0CDA  0084               	movwf	4
  3696  0CDB  0834               	movf	sprintf@f+1,w
  3697  0CDC  0085               	movwf	5
  3698  0CDD  0800               	movf	0,w	;code access
  3699  0CDE  3193  23E5  318C   	fcall	_isdigit
  3700  0CE1  1C03               	btfss	3,0
  3701  0CE2  2D14               	goto	l3779
  3702                           
  3703                           ;doprnt.c: 598: width = 0;
  3704  0CE3  0140               	movlb	0	; select bank0
  3705  0CE4  01C2               	clrf	sprintf@width
  3706  0CE5  01C3               	clrf	sprintf@width+1
  3707  0CE6                     l3769:	
  3708                           ;doprnt.c: 599: do {
  3709                           
  3710                           
  3711                           ;doprnt.c: 600: width *= 10;
  3712  0CE6  300A               	movlw	10
  3713  0CE7  0140               	movlb	0	; select bank0
  3714  0CE8  00AD               	movwf	___wmul@multiplier
  3715  0CE9  3000               	movlw	0
  3716  0CEA  00AE               	movwf	___wmul@multiplier+1
  3717  0CEB  0843               	movf	sprintf@width+1,w
  3718  0CEC  00B0               	movwf	___wmul@multiplicand+1
  3719  0CED  0842               	movf	sprintf@width,w
  3720  0CEE  00AF               	movwf	___wmul@multiplicand
  3721  0CEF  3194  2422  318C   	fcall	___wmul
  3722  0CF2  0140               	movlb	0	; select bank0
  3723  0CF3  082E               	movf	?___wmul+1,w
  3724  0CF4  00C3               	movwf	sprintf@width+1
  3725  0CF5  082D               	movf	?___wmul,w
  3726  0CF6  00C2               	movwf	sprintf@width
  3727                           
  3728                           ;doprnt.c: 601: width += *f++ - '0';
  3729  0CF7  0833               	movf	sprintf@f,w
  3730  0CF8  0084               	movwf	4
  3731  0CF9  0834               	movf	sprintf@f+1,w
  3732  0CFA  0085               	movwf	5
  3733  0CFB  0800               	movf	0,w	;code access
  3734  0CFC  3ED0               	addlw	208
  3735  0CFD  00B9               	movwf	??_sprintf
  3736  0CFE  30FF               	movlw	255
  3737  0CFF  1803               	skipnc
  3738  0D00  3000               	movlw	0
  3739  0D01  00BA               	movwf	??_sprintf+1
  3740  0D02  0839               	movf	??_sprintf,w
  3741  0D03  07C2               	addwf	sprintf@width,f
  3742  0D04  083A               	movf	??_sprintf+1,w
  3743  0D05  3DC3               	addwfc	sprintf@width+1,f
  3744  0D06  3001               	movlw	1
  3745  0D07  07B3               	addwf	sprintf@f,f
  3746  0D08  3000               	movlw	0
  3747  0D09  3DB4               	addwfc	sprintf@f+1,f
  3748                           
  3749                           ;doprnt.c: 602: } while(isdigit((unsigned)*f));
  3750  0D0A  0833               	movf	sprintf@f,w
  3751  0D0B  0084               	movwf	4
  3752  0D0C  0834               	movf	sprintf@f+1,w
  3753  0D0D  0085               	movwf	5
  3754  0D0E  0800               	movf	0,w	;code access
  3755  0D0F  3193  23E5  318C   	fcall	_isdigit
  3756  0D12  1803               	btfsc	3,0
  3757  0D13  2CE6               	goto	l3769
  3758  0D14                     l3779:	
  3759                           ;doprnt.c: 822: }
  3760                           
  3761                           ;doprnt.c: 813: continue;
  3762                           
  3763                           ;doprnt.c: 802: default:
  3764                           
  3765                           ;doprnt.c: 698: case 'i':
  3766                           ;doprnt.c: 699: break;
  3767                           
  3768                           ;doprnt.c: 697: case 'd':
  3769                           
  3770                           ;doprnt.c: 638: goto alldone;
  3771                           
  3772                           ;doprnt.c: 637: case 0:
  3773                           
  3774                           ;doprnt.c: 608: }
  3775                           ;doprnt.c: 635: switch(c = *f++) {
  3776                           
  3777  0D14  0140               	movlb	0	; select bank0
  3778  0D15  0834               	movf	sprintf@f+1,w
  3779  0D16  00BA               	movwf	??_sprintf+1
  3780  0D17  0833               	movf	sprintf@f,w
  3781  0D18  00B9               	movwf	??_sprintf
  3782  0D19  0AB3               	incf	sprintf@f,f
  3783  0D1A  1903               	skipnz
  3784  0D1B  0AB4               	incf	sprintf@f+1,f
  3785  0D1C  0839               	movf	??_sprintf,w
  3786  0D1D  0084               	movwf	4
  3787  0D1E  083A               	movf	??_sprintf+1,w
  3788  0D1F  0085               	movwf	5
  3789  0D20  0800               	movf	0,w	;code access
  3790  0D21  00C5               	movwf	sprintf@c
  3791                           
  3792                           ; Switch size 1, requested type "space"
  3793                           ; Number of cases is 3, Range of values is 0 to 105
  3794                           ; switch strategies available:
  3795                           ; Name         Instructions Cycles
  3796                           ; simple_byte           10     6 (average)
  3797                           ; direct_byte          218     6 (fixed)
  3798                           ; jumptable            260     6 (fixed)
  3799                           ;	Chosen strategy is simple_byte
  3800  0D22  3A00               	xorlw	0	; case 0
  3801  0D23  1903               	skipnz
  3802  0D24  2E22               	goto	l3855
  3803  0D25  3A64               	xorlw	100	; case 100
  3804  0D26  1903               	skipnz
  3805  0D27  2D2C               	goto	l3781
  3806  0D28  3A0D               	xorlw	13	; case 105
  3807  0D29  1903               	skipnz
  3808  0D2A  2D2C               	goto	l3781
  3809  0D2B  2CA3               	goto	l3853
  3810  0D2C                     l3781:	
  3811                           
  3812                           ;doprnt.c: 1253: {
  3813                           ;doprnt.c: 1259: val = (int)(*(int *)__va_arg((*(int **)ap), (int)0));
  3814  0D2C  0140               	movlb	0	; select bank0
  3815  0D2D  083D               	movf	sprintf@ap,w
  3816  0D2E  0086               	movwf	6
  3817  0D2F  0187               	clrf	7
  3818  0D30  3F40               	moviw [0]fsr1
  3819  0D31  00BF               	movwf	sprintf@val
  3820  0D32  3F41               	moviw [1]fsr1
  3821  0D33  00C0               	movwf	sprintf@val+1
  3822  0D34  3002               	movlw	2
  3823  0D35  00B9               	movwf	??_sprintf
  3824  0D36  0839               	movf	??_sprintf,w
  3825  0D37  07BD               	addwf	sprintf@ap,f
  3826                           
  3827                           ;doprnt.c: 1261: if((int)val < 0) {
  3828  0D38  1FC0               	btfss	sprintf@val+1,7
  3829  0D39  2D43               	goto	l3791
  3830                           
  3831                           ;doprnt.c: 1262: flag |= 0x03;
  3832  0D3A  3003               	movlw	3
  3833  0D3B  00B9               	movwf	??_sprintf
  3834  0D3C  0839               	movf	??_sprintf,w
  3835  0D3D  04C1               	iorwf	sprintf@flag,f
  3836                           
  3837                           ;doprnt.c: 1263: val = -val;
  3838  0D3E  09BF               	comf	sprintf@val,f
  3839  0D3F  09C0               	comf	sprintf@val+1,f
  3840  0D40  0ABF               	incf	sprintf@val,f
  3841  0D41  1903               	skipnz
  3842  0D42  0AC0               	incf	sprintf@val+1,f
  3843  0D43                     l3791:	
  3844                           
  3845                           ;doprnt.c: 1264: }
  3846                           ;doprnt.c: 1266: }
  3847                           ;doprnt.c: 1305: for(c = 1 ; c != sizeof dpowers/sizeof dpowers[0] ; c++)
  3848  0D43  01C5               	clrf	sprintf@c
  3849  0D44  0AC5               	incf	sprintf@c,f
  3850  0D45  3005               	movlw	5
  3851  0D46  0645               	xorwf	sprintf@c,w
  3852  0D47  1903               	btfsc	3,2
  3853  0D48  2D68               	goto	l3803
  3854  0D49                     l3797:	
  3855                           
  3856                           ;doprnt.c: 1306: if(val < dpowers[c])
  3857  0D49  0845               	movf	sprintf@c,w
  3858  0D4A  00B9               	movwf	??_sprintf
  3859  0D4B  01BA               	clrf	??_sprintf+1
  3860  0D4C  35B9               	lslf	??_sprintf,f
  3861  0D4D  0DBA               	rlf	??_sprintf+1,f
  3862  0D4E  3039               	movlw	low (_dpowers| (0+32768))
  3863  0D4F  0739               	addwf	??_sprintf,w
  3864  0D50  0084               	movwf	4
  3865  0D51  3098               	movlw	high (_dpowers| (0+32768))
  3866  0D52  3D3A               	addwfc	??_sprintf+1,w
  3867  0D53  0085               	movwf	5
  3868  0D54  3F00               	moviw [0]fsr0
  3869  0D55  00BB               	movwf	??_sprintf+2
  3870  0D56  3F01               	moviw [1]fsr0
  3871  0D57  00BC               	movwf	??_sprintf+3
  3872  0D58  083C               	movf	??_sprintf+3,w
  3873  0D59  0240               	subwf	sprintf@val+1,w
  3874  0D5A  1D03               	skipz
  3875  0D5B  2D5E               	goto	u5115
  3876  0D5C  083B               	movf	??_sprintf+2,w
  3877  0D5D  023F               	subwf	sprintf@val,w
  3878  0D5E                     u5115:	
  3879  0D5E  1C03               	btfss	3,0
  3880  0D5F  2D68               	goto	l3803
  3881                           
  3882                           ;doprnt.c: 1307: break;
  3883  0D60  3001               	movlw	1
  3884  0D61  00B9               	movwf	??_sprintf
  3885  0D62  0839               	movf	??_sprintf,w
  3886  0D63  07C5               	addwf	sprintf@c,f
  3887  0D64  3005               	movlw	5
  3888  0D65  0645               	xorwf	sprintf@c,w
  3889  0D66  1D03               	btfss	3,2
  3890  0D67  2D49               	goto	l3797
  3891  0D68                     l3803:	
  3892                           
  3893                           ;doprnt.c: 1345: if(width && flag & 0x03)
  3894  0D68  0842               	movf	sprintf@width,w
  3895  0D69  0443               	iorwf	sprintf@width+1,w
  3896  0D6A  1903               	btfsc	3,2
  3897  0D6B  2D74               	goto	l369
  3898  0D6C  0841               	movf	sprintf@flag,w
  3899  0D6D  3903               	andlw	3
  3900  0D6E  1903               	btfsc	3,2
  3901  0D6F  2D74               	goto	l369
  3902                           
  3903                           ;doprnt.c: 1346: width--;
  3904  0D70  30FF               	movlw	255
  3905  0D71  07C2               	addwf	sprintf@width,f
  3906  0D72  30FF               	movlw	255
  3907  0D73  3DC3               	addwfc	sprintf@width+1,f
  3908  0D74                     l369:	
  3909                           
  3910                           ;doprnt.c: 1381: if(width > c)
  3911  0D74  0845               	movf	sprintf@c,w
  3912  0D75  00B9               	movwf	??_sprintf
  3913  0D76  01BA               	clrf	??_sprintf+1
  3914  0D77  1BB9               	btfsc	??_sprintf,7
  3915  0D78  03BA               	decf	??_sprintf+1,f
  3916  0D79  083A               	movf	??_sprintf+1,w
  3917  0D7A  3A80               	xorlw	128
  3918  0D7B  00BB               	movwf	??_sprintf+2
  3919  0D7C  0843               	movf	sprintf@width+1,w
  3920  0D7D  3A80               	xorlw	128
  3921  0D7E  023B               	subwf	??_sprintf+2,w
  3922  0D7F  1D03               	skipz
  3923  0D80  2D83               	goto	u5155
  3924  0D81  0842               	movf	sprintf@width,w
  3925  0D82  0239               	subwf	??_sprintf,w
  3926  0D83                     u5155:	
  3927  0D83  1803               	skipnc
  3928  0D84  2D90               	goto	l3811
  3929                           
  3930                           ;doprnt.c: 1382: width -= c;
  3931  0D85  0140               	movlb	0	; select bank0
  3932  0D86  0845               	movf	sprintf@c,w
  3933  0D87  00B9               	movwf	??_sprintf
  3934  0D88  01BA               	clrf	??_sprintf+1
  3935  0D89  1BB9               	btfsc	??_sprintf,7
  3936  0D8A  03BA               	decf	??_sprintf+1,f
  3937  0D8B  0839               	movf	??_sprintf,w
  3938  0D8C  02C2               	subwf	sprintf@width,f
  3939  0D8D  083A               	movf	??_sprintf+1,w
  3940  0D8E  3BC3               	subwfb	sprintf@width+1,f
  3941  0D8F  2D93               	goto	l3813
  3942  0D90                     l3811:	
  3943                           
  3944                           ;doprnt.c: 1383: else
  3945                           ;doprnt.c: 1384: width = 0;
  3946  0D90  0140               	movlb	0	; select bank0
  3947  0D91  01C2               	clrf	sprintf@width
  3948  0D92  01C3               	clrf	sprintf@width+1
  3949  0D93                     l3813:	
  3950                           
  3951                           ;doprnt.c: 1387: if(flag & 0x04) {
  3952  0D93  1D41               	btfss	sprintf@flag,2
  3953  0D94  2DBA               	goto	l3829
  3954                           
  3955                           ;doprnt.c: 1392: if(flag & 0x03)
  3956  0D95  0841               	movf	sprintf@flag,w
  3957  0D96  3903               	andlw	3
  3958  0D97  1903               	btfsc	3,2
  3959  0D98  2DA5               	goto	l3821
  3960                           
  3961                           ;doprnt.c: 1393: ((*sp++ = ('-')));
  3962  0D99  302D               	movlw	45
  3963  0D9A  00B9               	movwf	??_sprintf
  3964  0D9B  0844               	movf	sprintf@sp,w
  3965  0D9C  0086               	movwf	6
  3966  0D9D  3001               	movlw	1	; select bank2/3
  3967  0D9E  0087               	movwf	7
  3968  0D9F  0839               	movf	??_sprintf,w
  3969  0DA0  0081               	movwf	1
  3970  0DA1  3001               	movlw	1
  3971  0DA2  00B9               	movwf	??_sprintf
  3972  0DA3  0839               	movf	??_sprintf,w
  3973  0DA4  07C4               	addwf	sprintf@sp,f
  3974  0DA5                     l3821:	
  3975                           
  3976                           ;doprnt.c: 1415: if(width)
  3977  0DA5  0842               	movf	sprintf@width,w
  3978  0DA6  0443               	iorwf	sprintf@width+1,w
  3979  0DA7  1903               	btfsc	3,2
  3980  0DA8  2DE2               	goto	l3843
  3981                           
  3982                           ;doprnt.c: 1417: ((*sp++ = ('0')));
  3983                           
  3984                           ;doprnt.c: 1416: do
  3985  0DA9  3030               	movlw	48
  3986  0DAA  00B9               	movwf	??_sprintf
  3987  0DAB  0844               	movf	sprintf@sp,w
  3988  0DAC  0086               	movwf	6
  3989  0DAD  3001               	movlw	1	; select bank2/3
  3990  0DAE  0087               	movwf	7
  3991  0DAF  0839               	movf	??_sprintf,w
  3992  0DB0  0081               	movwf	1
  3993  0DB1  3001               	movlw	1
  3994  0DB2  00B9               	movwf	??_sprintf
  3995  0DB3  0839               	movf	??_sprintf,w
  3996  0DB4  07C4               	addwf	sprintf@sp,f
  3997                           
  3998                           ;doprnt.c: 1418: while(--width);
  3999  0DB5  30FF               	movlw	255
  4000  0DB6  07C2               	addwf	sprintf@width,f
  4001  0DB7  30FF               	movlw	255
  4002  0DB8  3DC3               	addwfc	sprintf@width+1,f
  4003  0DB9  2DA5               	goto	l3821
  4004  0DBA                     l3829:	
  4005                           ;doprnt.c: 1420: } else
  4006                           
  4007                           
  4008                           ;doprnt.c: 1422: {
  4009                           ;doprnt.c: 1424: if(width
  4010                           ;doprnt.c: 1428: )
  4011  0DBA  0842               	movf	sprintf@width,w
  4012  0DBB  0443               	iorwf	sprintf@width+1,w
  4013  0DBC  1903               	btfsc	3,2
  4014  0DBD  2DD2               	goto	l3837
  4015  0DBE                     l3831:	
  4016                           ;doprnt.c: 1429: do
  4017                           
  4018                           
  4019                           ;doprnt.c: 1430: ((*sp++ = (' ')));
  4020  0DBE  3020               	movlw	32
  4021  0DBF  00B9               	movwf	??_sprintf
  4022  0DC0  0844               	movf	sprintf@sp,w
  4023  0DC1  0086               	movwf	6
  4024  0DC2  3001               	movlw	1	; select bank2/3
  4025  0DC3  0087               	movwf	7
  4026  0DC4  0839               	movf	??_sprintf,w
  4027  0DC5  0081               	movwf	1
  4028  0DC6  3001               	movlw	1
  4029  0DC7  00B9               	movwf	??_sprintf
  4030  0DC8  0839               	movf	??_sprintf,w
  4031  0DC9  07C4               	addwf	sprintf@sp,f
  4032                           
  4033                           ;doprnt.c: 1431: while(--width);
  4034  0DCA  30FF               	movlw	255
  4035  0DCB  07C2               	addwf	sprintf@width,f
  4036  0DCC  30FF               	movlw	255
  4037  0DCD  3DC3               	addwfc	sprintf@width+1,f
  4038  0DCE  0842               	movf	sprintf@width,w
  4039  0DCF  0443               	iorwf	sprintf@width+1,w
  4040  0DD0  1D03               	btfss	3,2
  4041  0DD1  2DBE               	goto	l3831
  4042  0DD2                     l3837:	
  4043                           
  4044                           ;doprnt.c: 1438: if(flag & 0x03)
  4045  0DD2  0841               	movf	sprintf@flag,w
  4046  0DD3  3903               	andlw	3
  4047  0DD4  1903               	btfsc	3,2
  4048  0DD5  2DE2               	goto	l3843
  4049                           
  4050                           ;doprnt.c: 1439: ((*sp++ = ('-')));
  4051  0DD6  302D               	movlw	45
  4052  0DD7  00B9               	movwf	??_sprintf
  4053  0DD8  0844               	movf	sprintf@sp,w
  4054  0DD9  0086               	movwf	6
  4055  0DDA  3001               	movlw	1	; select bank2/3
  4056  0DDB  0087               	movwf	7
  4057  0DDC  0839               	movf	??_sprintf,w
  4058  0DDD  0081               	movwf	1
  4059  0DDE  3001               	movlw	1
  4060  0DDF  00B9               	movwf	??_sprintf
  4061  0DE0  0839               	movf	??_sprintf,w
  4062  0DE1  07C4               	addwf	sprintf@sp,f
  4063  0DE2                     l3843:	
  4064                           
  4065                           ;doprnt.c: 1469: }
  4066                           ;doprnt.c: 1472: prec = c;
  4067  0DE2  0845               	movf	sprintf@c,w
  4068  0DE3  00B9               	movwf	??_sprintf
  4069  0DE4  0839               	movf	??_sprintf,w
  4070  0DE5  00BE               	movwf	sprintf@prec
  4071  0DE6                     l3851:	
  4072                           ;doprnt.c: 1474: while(prec--) {
  4073                           
  4074  0DE6  30FF               	movlw	255
  4075  0DE7  00B9               	movwf	??_sprintf
  4076  0DE8  0839               	movf	??_sprintf,w
  4077  0DE9  07BE               	addwf	sprintf@prec,f
  4078  0DEA  0A3E               	incf	sprintf@prec,w
  4079  0DEB  1903               	btfsc	3,2
  4080  0DEC  2CA3               	goto	l3853
  4081                           
  4082                           ;doprnt.c: 1478: {
  4083                           ;doprnt.c: 1489: c = (val / dpowers[prec]) % 10 + '0';
  4084  0DED  300A               	movlw	10
  4085  0DEE  00AC               	movwf	___lwmod@divisor
  4086  0DEF  3000               	movlw	0
  4087  0DF0  00AD               	movwf	___lwmod@divisor+1
  4088  0DF1  083E               	movf	sprintf@prec,w
  4089  0DF2  00B9               	movwf	??_sprintf
  4090  0DF3  01BA               	clrf	??_sprintf+1
  4091  0DF4  35B9               	lslf	??_sprintf,f
  4092  0DF5  0DBA               	rlf	??_sprintf+1,f
  4093  0DF6  3039               	movlw	low (_dpowers| (0+32768))
  4094  0DF7  0739               	addwf	??_sprintf,w
  4095  0DF8  0084               	movwf	4
  4096  0DF9  3098               	movlw	high (_dpowers| (0+32768))
  4097  0DFA  3D3A               	addwfc	??_sprintf+1,w
  4098  0DFB  0085               	movwf	5
  4099  0DFC  3F00               	moviw [0]fsr0
  4100  0DFD  00A4               	movwf	___lwdiv@divisor
  4101  0DFE  3F01               	moviw [1]fsr0
  4102  0DFF  00A5               	movwf	___lwdiv@divisor+1
  4103  0E00  0840               	movf	sprintf@val+1,w
  4104  0E01  00A7               	movwf	___lwdiv@dividend+1
  4105  0E02  083F               	movf	sprintf@val,w
  4106  0E03  00A6               	movwf	___lwdiv@dividend
  4107  0E04  3194  24BF  318C   	fcall	___lwdiv
  4108  0E07  0140               	movlb	0	; select bank0
  4109  0E08  0825               	movf	?___lwdiv+1,w
  4110  0E09  00AF               	movwf	___lwmod@dividend+1
  4111  0E0A  0824               	movf	?___lwdiv,w
  4112  0E0B  00AE               	movwf	___lwmod@dividend
  4113  0E0C  3194  2460  318C   	fcall	___lwmod
  4114  0E0F  0140               	movlb	0	; select bank0
  4115  0E10  082C               	movf	?___lwmod,w
  4116  0E11  3E30               	addlw	48
  4117  0E12  00BB               	movwf	??_sprintf+2
  4118  0E13  083B               	movf	??_sprintf+2,w
  4119  0E14  00C5               	movwf	sprintf@c
  4120                           
  4121                           ;doprnt.c: 1523: }
  4122                           ;doprnt.c: 1524: ((*sp++ = (c)));
  4123  0E15  0845               	movf	sprintf@c,w
  4124  0E16  00B9               	movwf	??_sprintf
  4125  0E17  0844               	movf	sprintf@sp,w
  4126  0E18  0086               	movwf	6
  4127  0E19  3001               	movlw	1	; select bank2/3
  4128  0E1A  0087               	movwf	7
  4129  0E1B  0839               	movf	??_sprintf,w
  4130  0E1C  0081               	movwf	1
  4131  0E1D  3001               	movlw	1
  4132  0E1E  00B9               	movwf	??_sprintf
  4133  0E1F  0839               	movf	??_sprintf,w
  4134  0E20  07C4               	addwf	sprintf@sp,f
  4135  0E21  2DE6               	goto	l3851
  4136  0E22                     l3855:	
  4137                           ;doprnt.c: 1525: }
  4138                           ;doprnt.c: 1533: }
  4139                           ;doprnt.c: 1535: alldone:
  4140                           
  4141                           
  4142                           ;doprnt.c: 1538: *sp = 0;
  4143  0E22  0140               	movlb	0	; select bank0
  4144  0E23  0844               	movf	sprintf@sp,w
  4145  0E24  0086               	movwf	6
  4146  0E25  3001               	movlw	1	; select bank2/3
  4147  0E26  0087               	movwf	7
  4148  0E27  0181               	clrf	1
  4149  0E28  0008               	return
  4150  0E29                     __end_of_sprintf:	
  4151                           ;doprnt.c: 1540: return 0;
  4152                           ;	Return value of _sprintf is never used
  4153                           
  4154                           
  4155                           	psect	text2
  4156  13E5                     __ptext2:	
  4157 ;; *************** function _isdigit *****************
  4158 ;; Defined at:
  4159 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\isdigit.c"
  4160 ;; Parameters:    Size  Location     Type
  4161 ;;  c               1    wreg     unsigned char 
  4162 ;; Auto vars:     Size  Location     Type
  4163 ;;  c               1    5[BANK0 ] unsigned char 
  4164 ;; Return value:  Size  Location     Type
  4165 ;;		None               void
  4166 ;; Registers used:
  4167 ;;		wreg, status,2, status,0
  4168 ;; Tracked objects:
  4169 ;;		On entry : 0/0
  4170 ;;		On exit  : 0/0
  4171 ;;		Unchanged: 0/0
  4172 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
  4173 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  4174 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  4175 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  4176 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  4177 ;;Total ram usage:        2 bytes
  4178 ;; Hardware stack levels used:    1
  4179 ;; Hardware stack levels required when called:    2
  4180 ;; This function calls:
  4181 ;;		Nothing
  4182 ;; This function is called by:
  4183 ;;		_sprintf
  4184 ;; This function uses a non-reentrant model
  4185 ;;
  4186                           
  4187                           
  4188                           ;psect for function _isdigit
  4189  13E5                     _isdigit:	
  4190                           
  4191                           ;incstack = 0
  4192                           ; Regs used in _isdigit: [wreg+status,2+status,0]
  4193                           ;isdigit@c stored from wreg
  4194  13E5  0140               	movlb	0	; select bank0
  4195  13E6  00A5               	movwf	isdigit@c
  4196  13E7  01A4               	clrf	_isdigit$1160
  4197  13E8  303A               	movlw	58
  4198  13E9  0225               	subwf	isdigit@c,w
  4199  13EA  1803               	skipnc
  4200  13EB  2BF2               	goto	l3473
  4201  13EC  3030               	movlw	48
  4202  13ED  0225               	subwf	isdigit@c,w
  4203  13EE  1C03               	skipc
  4204  13EF  2BF2               	goto	l3473
  4205  13F0  01A4               	clrf	_isdigit$1160
  4206  13F1  0AA4               	incf	_isdigit$1160,f
  4207  13F2                     l3473:	
  4208  13F2  0C24               	rrf	_isdigit$1160,w
  4209  13F3  0008               	return
  4210  13F4                     __end_of_isdigit:	
  4211                           
  4212                           	psect	text3
  4213  1460                     __ptext3:	
  4214 ;; *************** function ___lwmod *****************
  4215 ;; Defined at:
  4216 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\lwmod.c"
  4217 ;; Parameters:    Size  Location     Type
  4218 ;;  divisor         2   12[BANK0 ] unsigned int 
  4219 ;;  dividend        2   14[BANK0 ] unsigned int 
  4220 ;; Auto vars:     Size  Location     Type
  4221 ;;  counter         1   17[BANK0 ] unsigned char 
  4222 ;; Return value:  Size  Location     Type
  4223 ;;                  2   12[BANK0 ] unsigned int 
  4224 ;; Registers used:
  4225 ;;		wreg, status,2, status,0
  4226 ;; Tracked objects:
  4227 ;;		On entry : 0/0
  4228 ;;		On exit  : 0/0
  4229 ;;		Unchanged: 0/0
  4230 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
  4231 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  4232 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  4233 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  4234 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  4235 ;;Total ram usage:        6 bytes
  4236 ;; Hardware stack levels used:    1
  4237 ;; Hardware stack levels required when called:    2
  4238 ;; This function calls:
  4239 ;;		Nothing
  4240 ;; This function is called by:
  4241 ;;		_sprintf
  4242 ;; This function uses a non-reentrant model
  4243 ;;
  4244                           
  4245                           
  4246                           ;psect for function ___lwmod
  4247  1460                     ___lwmod:	
  4248                           
  4249                           ;incstack = 0
  4250                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  4251  1460  0140               	movlb	0	; select bank0
  4252  1461  082C               	movf	___lwmod@divisor,w
  4253  1462  042D               	iorwf	___lwmod@divisor+1,w
  4254  1463  1903               	btfsc	3,2
  4255  1464  2C88               	goto	l3605
  4256  1465  01B1               	clrf	___lwmod@counter
  4257  1466  0AB1               	incf	___lwmod@counter,f
  4258  1467                     l3595:	
  4259  1467  1BAD               	btfsc	___lwmod@divisor+1,7
  4260  1468  2C73               	goto	l3597
  4261  1469  3001               	movlw	1
  4262  146A                     u4965:	
  4263  146A  35AC               	lslf	___lwmod@divisor,f
  4264  146B  0DAD               	rlf	___lwmod@divisor+1,f
  4265  146C  0B89               	decfsz	9,f
  4266  146D  2C6A               	goto	u4965
  4267  146E  3001               	movlw	1
  4268  146F  00B0               	movwf	??___lwmod
  4269  1470  0830               	movf	??___lwmod,w
  4270  1471  07B1               	addwf	___lwmod@counter,f
  4271  1472  2C67               	goto	l3595
  4272  1473                     l3597:	
  4273  1473  082D               	movf	___lwmod@divisor+1,w
  4274  1474  022F               	subwf	___lwmod@dividend+1,w
  4275  1475  1D03               	skipz
  4276  1476  2C79               	goto	u4985
  4277  1477  082C               	movf	___lwmod@divisor,w
  4278  1478  022E               	subwf	___lwmod@dividend,w
  4279  1479                     u4985:	
  4280  1479  1C03               	skipc
  4281  147A  2C7F               	goto	l3601
  4282  147B  082C               	movf	___lwmod@divisor,w
  4283  147C  02AE               	subwf	___lwmod@dividend,f
  4284  147D  082D               	movf	___lwmod@divisor+1,w
  4285  147E  3BAF               	subwfb	___lwmod@dividend+1,f
  4286  147F                     l3601:	
  4287  147F  3001               	movlw	1
  4288  1480                     u4995:	
  4289  1480  36AD               	lsrf	___lwmod@divisor+1,f
  4290  1481  0CAC               	rrf	___lwmod@divisor,f
  4291  1482  0B89               	decfsz	9,f
  4292  1483  2C80               	goto	u4995
  4293  1484  3001               	movlw	1
  4294  1485  02B1               	subwf	___lwmod@counter,f
  4295  1486  1D03               	btfss	3,2
  4296  1487  2C73               	goto	l3597
  4297  1488                     l3605:	
  4298  1488  082F               	movf	___lwmod@dividend+1,w
  4299  1489  00AD               	movwf	?___lwmod+1
  4300  148A  082E               	movf	___lwmod@dividend,w
  4301  148B  00AC               	movwf	?___lwmod
  4302  148C  0008               	return
  4303  148D                     __end_of___lwmod:	
  4304                           
  4305                           	psect	text4
  4306  14BF                     __ptext4:	
  4307 ;; *************** function ___lwdiv *****************
  4308 ;; Defined at:
  4309 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\lwdiv.c"
  4310 ;; Parameters:    Size  Location     Type
  4311 ;;  divisor         2    4[BANK0 ] unsigned int 
  4312 ;;  dividend        2    6[BANK0 ] unsigned int 
  4313 ;; Auto vars:     Size  Location     Type
  4314 ;;  quotient        2   10[BANK0 ] unsigned int 
  4315 ;;  counter         1    9[BANK0 ] unsigned char 
  4316 ;; Return value:  Size  Location     Type
  4317 ;;                  2    4[BANK0 ] unsigned int 
  4318 ;; Registers used:
  4319 ;;		wreg, status,2, status,0
  4320 ;; Tracked objects:
  4321 ;;		On entry : 0/0
  4322 ;;		On exit  : 0/0
  4323 ;;		Unchanged: 0/0
  4324 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
  4325 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  4326 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  4327 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  4328 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  4329 ;;Total ram usage:        8 bytes
  4330 ;; Hardware stack levels used:    1
  4331 ;; Hardware stack levels required when called:    2
  4332 ;; This function calls:
  4333 ;;		Nothing
  4334 ;; This function is called by:
  4335 ;;		_sprintf
  4336 ;; This function uses a non-reentrant model
  4337 ;;
  4338                           
  4339                           
  4340                           ;psect for function ___lwdiv
  4341  14BF                     ___lwdiv:	
  4342                           
  4343                           ;incstack = 0
  4344                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  4345  14BF  0140               	movlb	0	; select bank0
  4346  14C0  01AA               	clrf	___lwdiv@quotient
  4347  14C1  01AB               	clrf	___lwdiv@quotient+1
  4348  14C2  0824               	movf	___lwdiv@divisor,w
  4349  14C3  0425               	iorwf	___lwdiv@divisor+1,w
  4350  14C4  1903               	btfsc	3,2
  4351  14C5  2CEF               	goto	l3583
  4352  14C6  01A9               	clrf	___lwdiv@counter
  4353  14C7  0AA9               	incf	___lwdiv@counter,f
  4354  14C8                     l3571:	
  4355  14C8  1BA5               	btfsc	___lwdiv@divisor+1,7
  4356  14C9  2CD4               	goto	l3573
  4357  14CA  3001               	movlw	1
  4358  14CB                     u4895:	
  4359  14CB  35A4               	lslf	___lwdiv@divisor,f
  4360  14CC  0DA5               	rlf	___lwdiv@divisor+1,f
  4361  14CD  0B89               	decfsz	9,f
  4362  14CE  2CCB               	goto	u4895
  4363  14CF  3001               	movlw	1
  4364  14D0  00A8               	movwf	??___lwdiv
  4365  14D1  0828               	movf	??___lwdiv,w
  4366  14D2  07A9               	addwf	___lwdiv@counter,f
  4367  14D3  2CC8               	goto	l3571
  4368  14D4                     l3573:	
  4369  14D4  3001               	movlw	1
  4370  14D5                     u4915:	
  4371  14D5  35AA               	lslf	___lwdiv@quotient,f
  4372  14D6  0DAB               	rlf	___lwdiv@quotient+1,f
  4373  14D7  0B89               	decfsz	9,f
  4374  14D8  2CD5               	goto	u4915
  4375  14D9  0825               	movf	___lwdiv@divisor+1,w
  4376  14DA  0227               	subwf	___lwdiv@dividend+1,w
  4377  14DB  1D03               	skipz
  4378  14DC  2CDF               	goto	u4925
  4379  14DD  0824               	movf	___lwdiv@divisor,w
  4380  14DE  0226               	subwf	___lwdiv@dividend,w
  4381  14DF                     u4925:	
  4382  14DF  1C03               	skipc
  4383  14E0  2CE6               	goto	l3579
  4384  14E1  0824               	movf	___lwdiv@divisor,w
  4385  14E2  02A6               	subwf	___lwdiv@dividend,f
  4386  14E3  0825               	movf	___lwdiv@divisor+1,w
  4387  14E4  3BA7               	subwfb	___lwdiv@dividend+1,f
  4388  14E5  142A               	bsf	___lwdiv@quotient,0
  4389  14E6                     l3579:	
  4390  14E6  3001               	movlw	1
  4391  14E7                     u4935:	
  4392  14E7  36A5               	lsrf	___lwdiv@divisor+1,f
  4393  14E8  0CA4               	rrf	___lwdiv@divisor,f
  4394  14E9  0B89               	decfsz	9,f
  4395  14EA  2CE7               	goto	u4935
  4396  14EB  3001               	movlw	1
  4397  14EC  02A9               	subwf	___lwdiv@counter,f
  4398  14ED  1D03               	btfss	3,2
  4399  14EE  2CD4               	goto	l3573
  4400  14EF                     l3583:	
  4401  14EF  082B               	movf	___lwdiv@quotient+1,w
  4402  14F0  00A5               	movwf	?___lwdiv+1
  4403  14F1  082A               	movf	___lwdiv@quotient,w
  4404  14F2  00A4               	movwf	?___lwdiv
  4405  14F3  0008               	return
  4406  14F4                     __end_of___lwdiv:	
  4407                           
  4408                           	psect	text5
  4409  0E29                     __ptext5:	
  4410 ;; *************** function _leerref *****************
  4411 ;; Defined at:
  4412 ;;		line 90 in file "main.c"
  4413 ;; Parameters:    Size  Location     Type
  4414 ;;		None
  4415 ;; Auto vars:     Size  Location     Type
  4416 ;;		None
  4417 ;; Return value:  Size  Location     Type
  4418 ;;                  1    wreg      void 
  4419 ;; Registers used:
  4420 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4421 ;; Tracked objects:
  4422 ;;		On entry : 0/0
  4423 ;;		On exit  : 0/0
  4424 ;;		Unchanged: 0/0
  4425 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
  4426 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  4427 ;;      Locals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  4428 ;;      Temps:          0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  4429 ;;      Totals:         0       0       9       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  4430 ;;Total ram usage:        9 bytes
  4431 ;; Hardware stack levels used:    1
  4432 ;; Hardware stack levels required when called:    6
  4433 ;; This function calls:
  4434 ;;		___awtoft
  4435 ;;		___ftadd
  4436 ;;		___ftdiv
  4437 ;;		___ftmul
  4438 ;;		___fttol
  4439 ;;		_log
  4440 ;; This function is called by:
  4441 ;;		_main
  4442 ;; This function uses a non-reentrant model
  4443 ;;
  4444                           
  4445                           
  4446                           ;psect for function _leerref
  4447  0E29                     _leerref:	
  4448                           
  4449                           ;main.c: 91: ADPCH=0b010101;
  4450                           
  4451                           ;incstack = 0
  4452                           ; Regs used in _leerref: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4453  0E29  3015               	movlw	21
  4454  0E2A  0141               	movlb	1	; select bank1
  4455  0E2B  009E               	movwf	30	;volatile
  4456                           
  4457                           ;main.c: 93: _delay((unsigned long)((20)*(32000000/4000000.0)));
  4458  0E2C  3035               	movlw	53
  4459  0E2D                     u5817:	
  4460  0E2D  0B89               	decfsz	9,f
  4461  0E2E  2E2D               	goto	u5817
  4462  0E2F  0000               	nop
  4463                           
  4464                           ;main.c: 94: ADCON0bits.ADGO=1;
  4465  0E30  0141               	movlb	1	; select bank1
  4466  0E31  1413               	bsf	19,0	;volatile
  4467  0E32                     l205:	
  4468                           ;main.c: 95: while(ADCON0bits.ADGO);
  4469                           
  4470  0E32  1813               	btfsc	19,0	;volatile
  4471  0E33  2E32               	goto	l205
  4472                           
  4473                           ;main.c: 96: adc1=ADRESH;
  4474  0E34  080D               	movf	13,w	;volatile
  4475  0E35  00CA               	movwf	??_leerref^(0+128)
  4476  0E36  01CB               	clrf	(??_leerref^(0+128)+1)
  4477  0E37  084A               	movf	??_leerref^(0+128),w
  4478  0E38  00BA               	movwf	_adc1^(0+128)
  4479  0E39  084B               	movf	(??_leerref+1)^(0+128),w
  4480  0E3A  00BB               	movwf	(_adc1+1)^(0+128)
  4481                           
  4482                           ;main.c: 97: adc1=adc1<<8;
  4483  0E3B  083B               	movf	(_adc1+1)^(0+128),w
  4484  0E3C  00CB               	movwf	(??_leerref^(0+128)+1)
  4485  0E3D  083A               	movf	_adc1^(0+128),w
  4486  0E3E  00CA               	movwf	??_leerref^(0+128)
  4487  0E3F  084A               	movf	??_leerref^(0+128),w
  4488  0E40  00CB               	movwf	(??_leerref^(0+128)+1)
  4489  0E41  01CA               	clrf	??_leerref^(0+128)
  4490  0E42  084A               	movf	??_leerref^(0+128),w
  4491  0E43  00BA               	movwf	_adc1^(0+128)
  4492  0E44  084B               	movf	(??_leerref+1)^(0+128),w
  4493  0E45  00BB               	movwf	(_adc1+1)^(0+128)
  4494                           
  4495                           ;main.c: 98: adc1=adc1+ADRESL;
  4496  0E46  080C               	movf	12,w	;volatile
  4497  0E47  073A               	addwf	_adc1^(0+128),w
  4498  0E48  00CA               	movwf	??_leerref^(0+128)
  4499  0E49  083B               	movf	(_adc1+1)^(0+128),w
  4500  0E4A  1803               	skipnc
  4501  0E4B  0A3B               	incf	(_adc1+1)^(0+128),w
  4502  0E4C  00CB               	movwf	(??_leerref^(0+128)+1)
  4503  0E4D  084A               	movf	??_leerref^(0+128),w
  4504  0E4E  00BA               	movwf	_adc1^(0+128)
  4505  0E4F  084B               	movf	(??_leerref+1)^(0+128),w
  4506  0E50  00BB               	movwf	(_adc1+1)^(0+128)
  4507                           
  4508                           ;main.c: 99: referencia=adc1*99.0/1024.0;
  4509  0E51  083B               	movf	(_adc1+1)^(0+128),w
  4510  0E52  0140               	movlb	0	; select bank0
  4511  0E53  00AD               	movwf	___awtoft@c+1
  4512  0E54  0141               	movlb	1	; select bank1
  4513  0E55  083A               	movf	_adc1^(0+128),w
  4514  0E56  0140               	movlb	0	; select bank0
  4515  0E57  00AC               	movwf	___awtoft@c
  4516  0E58  3194  243E  318E   	fcall	___awtoft
  4517  0E5B  0140               	movlb	0	; select bank0
  4518  0E5C  082C               	movf	?___awtoft,w
  4519  0E5D  00B5               	movwf	___ftmul@f2
  4520  0E5E  082D               	movf	?___awtoft+1,w
  4521  0E5F  00B6               	movwf	___ftmul@f2+1
  4522  0E60  082E               	movf	?___awtoft+2,w
  4523  0E61  00B7               	movwf	___ftmul@f2+2
  4524  0E62  3000               	movlw	0
  4525  0E63  00B2               	movwf	___ftmul@f1
  4526  0E64  30C6               	movlw	198
  4527  0E65  00B3               	movwf	___ftmul@f1+1
  4528  0E66  3042               	movlw	66
  4529  0E67  00B4               	movwf	___ftmul@f1+2
  4530  0E68  318A  221A  318E   	fcall	___ftmul
  4531  0E6B  0140               	movlb	0	; select bank0
  4532  0E6C  0832               	movf	?___ftmul,w
  4533  0E6D  00C5               	movwf	___ftdiv@f1
  4534  0E6E  0833               	movf	?___ftmul+1,w
  4535  0E6F  00C6               	movwf	___ftdiv@f1+1
  4536  0E70  0834               	movf	?___ftmul+2,w
  4537  0E71  00C7               	movwf	___ftdiv@f1+2
  4538  0E72  3000               	movlw	0
  4539  0E73  00C2               	movwf	___ftdiv@f2
  4540  0E74  3080               	movlw	128
  4541  0E75  00C3               	movwf	___ftdiv@f2+1
  4542  0E76  3044               	movlw	68
  4543  0E77  00C4               	movwf	___ftdiv@f2+2
  4544  0E78  3188  20C4  318E   	fcall	___ftdiv
  4545  0E7B  0140               	movlb	0	; select bank0
  4546  0E7C  0842               	movf	?___ftdiv,w
  4547  0E7D  00DF               	movwf	___fttol@f1
  4548  0E7E  0843               	movf	?___ftdiv+1,w
  4549  0E7F  00E0               	movwf	___fttol@f1+1
  4550  0E80  0844               	movf	?___ftdiv+2,w
  4551  0E81  00E1               	movwf	___fttol@f1+2
  4552  0E82  3188  2025  318E   	fcall	___fttol
  4553  0E85  0140               	movlb	0	; select bank0
  4554  0E86  0860               	movf	?___fttol+1,w
  4555  0E87  0141               	movlb	1	; select bank1
  4556  0E88  00B5               	movwf	(_referencia+1)^(0+128)
  4557  0E89  0140               	movlb	0	; select bank0
  4558  0E8A  085F               	movf	?___fttol,w
  4559  0E8B  0141               	movlb	1	; select bank1
  4560  0E8C  00B4               	movwf	_referencia^(0+128)
  4561                           
  4562                           ;main.c: 104: ADPCH=0b010100;
  4563  0E8D  3014               	movlw	20
  4564  0E8E  009E               	movwf	30	;volatile
  4565                           
  4566                           ;main.c: 105: _delay((unsigned long)((20)*(32000000/4000000.0)));
  4567  0E8F  3035               	movlw	53
  4568  0E90                     u5827:	
  4569  0E90  0B89               	decfsz	9,f
  4570  0E91  2E90               	goto	u5827
  4571  0E92  0000               	nop
  4572                           
  4573                           ;main.c: 106: ADCON0bits.ADGO=1;
  4574  0E93  0141               	movlb	1	; select bank1
  4575  0E94  1413               	bsf	19,0	;volatile
  4576  0E95                     l208:	
  4577                           ;main.c: 107: while(ADCON0bits.ADGO);
  4578                           
  4579  0E95  1813               	btfsc	19,0	;volatile
  4580  0E96  2E95               	goto	l208
  4581                           
  4582                           ;main.c: 108: adc2=ADRESH;
  4583  0E97  080D               	movf	13,w	;volatile
  4584  0E98  00CA               	movwf	??_leerref^(0+128)
  4585  0E99  01CB               	clrf	(??_leerref^(0+128)+1)
  4586  0E9A  084A               	movf	??_leerref^(0+128),w
  4587  0E9B  00B8               	movwf	_adc2^(0+128)
  4588  0E9C  084B               	movf	(??_leerref+1)^(0+128),w
  4589  0E9D  00B9               	movwf	(_adc2+1)^(0+128)
  4590                           
  4591                           ;main.c: 109: adc2=adc2<<8;
  4592  0E9E  0839               	movf	(_adc2+1)^(0+128),w
  4593  0E9F  00CB               	movwf	(??_leerref^(0+128)+1)
  4594  0EA0  0838               	movf	_adc2^(0+128),w
  4595  0EA1  00CA               	movwf	??_leerref^(0+128)
  4596  0EA2  084A               	movf	??_leerref^(0+128),w
  4597  0EA3  00CB               	movwf	(??_leerref^(0+128)+1)
  4598  0EA4  01CA               	clrf	??_leerref^(0+128)
  4599  0EA5  084A               	movf	??_leerref^(0+128),w
  4600  0EA6  00B8               	movwf	_adc2^(0+128)
  4601  0EA7  084B               	movf	(??_leerref+1)^(0+128),w
  4602  0EA8  00B9               	movwf	(_adc2+1)^(0+128)
  4603                           
  4604                           ;main.c: 110: adc2=adc2+ADRESL;
  4605  0EA9  080C               	movf	12,w	;volatile
  4606  0EAA  0738               	addwf	_adc2^(0+128),w
  4607  0EAB  00CA               	movwf	??_leerref^(0+128)
  4608  0EAC  0839               	movf	(_adc2+1)^(0+128),w
  4609  0EAD  1803               	skipnc
  4610  0EAE  0A39               	incf	(_adc2+1)^(0+128),w
  4611  0EAF  00CB               	movwf	(??_leerref^(0+128)+1)
  4612  0EB0  084A               	movf	??_leerref^(0+128),w
  4613  0EB1  00B8               	movwf	_adc2^(0+128)
  4614  0EB2  084B               	movf	(??_leerref+1)^(0+128),w
  4615  0EB3  00B9               	movwf	(_adc2+1)^(0+128)
  4616                           
  4617                           ;main.c: 111: vm=adc2*5.0/1024.0;
  4618  0EB4  3000               	movlw	0
  4619  0EB5  0140               	movlb	0	; select bank0
  4620  0EB6  00C2               	movwf	___ftdiv@f2
  4621  0EB7  3080               	movlw	128
  4622  0EB8  00C3               	movwf	___ftdiv@f2+1
  4623  0EB9  3044               	movlw	68
  4624  0EBA  00C4               	movwf	___ftdiv@f2+2
  4625  0EBB  3000               	movlw	0
  4626  0EBC  00B2               	movwf	___ftmul@f1
  4627  0EBD  30A0               	movlw	160
  4628  0EBE  00B3               	movwf	___ftmul@f1+1
  4629  0EBF  3040               	movlw	64
  4630  0EC0  00B4               	movwf	___ftmul@f1+2
  4631  0EC1  0141               	movlb	1	; select bank1
  4632  0EC2  0839               	movf	(_adc2+1)^(0+128),w
  4633  0EC3  0140               	movlb	0	; select bank0
  4634  0EC4  00AD               	movwf	___awtoft@c+1
  4635  0EC5  0141               	movlb	1	; select bank1
  4636  0EC6  0838               	movf	_adc2^(0+128),w
  4637  0EC7  0140               	movlb	0	; select bank0
  4638  0EC8  00AC               	movwf	___awtoft@c
  4639  0EC9  3194  243E  318E   	fcall	___awtoft
  4640  0ECC  0140               	movlb	0	; select bank0
  4641  0ECD  082C               	movf	?___awtoft,w
  4642  0ECE  00B5               	movwf	___ftmul@f2
  4643  0ECF  082D               	movf	?___awtoft+1,w
  4644  0ED0  00B6               	movwf	___ftmul@f2+1
  4645  0ED1  082E               	movf	?___awtoft+2,w
  4646  0ED2  00B7               	movwf	___ftmul@f2+2
  4647  0ED3  318A  221A  318E   	fcall	___ftmul
  4648  0ED6  0140               	movlb	0	; select bank0
  4649  0ED7  0832               	movf	?___ftmul,w
  4650  0ED8  00C5               	movwf	___ftdiv@f1
  4651  0ED9  0833               	movf	?___ftmul+1,w
  4652  0EDA  00C6               	movwf	___ftdiv@f1+1
  4653  0EDB  0834               	movf	?___ftmul+2,w
  4654  0EDC  00C7               	movwf	___ftdiv@f1+2
  4655  0EDD  3188  20C4  318E   	fcall	___ftdiv
  4656  0EE0  0140               	movlb	0	; select bank0
  4657  0EE1  0842               	movf	?___ftdiv,w
  4658  0EE2  0141               	movlb	1	; select bank1
  4659  0EE3  00A9               	movwf	_vm^(0+128)
  4660  0EE4  0140               	movlb	0	; select bank0
  4661  0EE5  0843               	movf	?___ftdiv+1,w
  4662  0EE6  0141               	movlb	1	; select bank1
  4663  0EE7  00AA               	movwf	(_vm+1)^(0+128)
  4664  0EE8  0140               	movlb	0	; select bank0
  4665  0EE9  0844               	movf	?___ftdiv+2,w
  4666  0EEA  0141               	movlb	1	; select bank1
  4667  0EEB  00AB               	movwf	(_vm+2)^(0+128)
  4668                           
  4669                           ;main.c: 114: rntc=raux/((vcc/vm)-1);
  4670  0EEC  3000               	movlw	0
  4671  0EED  0140               	movlb	0	; select bank0
  4672  0EEE  00D2               	movwf	___ftadd@f1
  4673  0EEF  3080               	movlw	128
  4674  0EF0  00D3               	movwf	___ftadd@f1+1
  4675  0EF1  30BF               	movlw	191
  4676  0EF2  00D4               	movwf	___ftadd@f1+2
  4677  0EF3  0141               	movlb	1	; select bank1
  4678  0EF4  0829               	movf	_vm^(0+128),w
  4679  0EF5  0140               	movlb	0	; select bank0
  4680  0EF6  00C2               	movwf	___ftdiv@f2
  4681  0EF7  0141               	movlb	1	; select bank1
  4682  0EF8  082A               	movf	(_vm+1)^(0+128),w
  4683  0EF9  0140               	movlb	0	; select bank0
  4684  0EFA  00C3               	movwf	___ftdiv@f2+1
  4685  0EFB  0141               	movlb	1	; select bank1
  4686  0EFC  082B               	movf	(_vm+2)^(0+128),w
  4687  0EFD  0140               	movlb	0	; select bank0
  4688  0EFE  00C4               	movwf	___ftdiv@f2+2
  4689  0EFF  0141               	movlb	1	; select bank1
  4690  0F00  085A               	movf	_vcc^(0+128),w
  4691  0F01  0140               	movlb	0	; select bank0
  4692  0F02  00C5               	movwf	___ftdiv@f1
  4693  0F03  0141               	movlb	1	; select bank1
  4694  0F04  085B               	movf	(_vcc+1)^(0+128),w
  4695  0F05  0140               	movlb	0	; select bank0
  4696  0F06  00C6               	movwf	___ftdiv@f1+1
  4697  0F07  0141               	movlb	1	; select bank1
  4698  0F08  085C               	movf	(_vcc+2)^(0+128),w
  4699  0F09  0140               	movlb	0	; select bank0
  4700  0F0A  00C7               	movwf	___ftdiv@f1+2
  4701  0F0B  3188  20C4  318E   	fcall	___ftdiv
  4702  0F0E  0140               	movlb	0	; select bank0
  4703  0F0F  0842               	movf	?___ftdiv,w
  4704  0F10  00D5               	movwf	___ftadd@f2
  4705  0F11  0843               	movf	?___ftdiv+1,w
  4706  0F12  00D6               	movwf	___ftadd@f2+1
  4707  0F13  0844               	movf	?___ftdiv+2,w
  4708  0F14  00D7               	movwf	___ftadd@f2+2
  4709  0F15  318B  23A7  318E   	fcall	___ftadd
  4710  0F18  0140               	movlb	0	; select bank0
  4711  0F19  0852               	movf	?___ftadd,w
  4712  0F1A  0141               	movlb	1	; select bank1
  4713  0F1B  00D0               	movwf	_leerref$1432^(0+128)
  4714  0F1C  0140               	movlb	0	; select bank0
  4715  0F1D  0853               	movf	?___ftadd+1,w
  4716  0F1E  0141               	movlb	1	; select bank1
  4717  0F1F  00D1               	movwf	(_leerref$1432+1)^(0+128)
  4718  0F20  0140               	movlb	0	; select bank0
  4719  0F21  0854               	movf	?___ftadd+2,w
  4720  0F22  0141               	movlb	1	; select bank1
  4721  0F23  00D2               	movwf	(_leerref$1432+2)^(0+128)
  4722                           
  4723                           ;main.c: 114: rntc=raux/((vcc/vm)-1);
  4724  0F24  0850               	movf	_leerref$1432^(0+128),w
  4725  0F25  0140               	movlb	0	; select bank0
  4726  0F26  00C2               	movwf	___ftdiv@f2
  4727  0F27  0141               	movlb	1	; select bank1
  4728  0F28  0851               	movf	(_leerref$1432+1)^(0+128),w
  4729  0F29  0140               	movlb	0	; select bank0
  4730  0F2A  00C3               	movwf	___ftdiv@f2+1
  4731  0F2B  0141               	movlb	1	; select bank1
  4732  0F2C  0852               	movf	(_leerref$1432+2)^(0+128),w
  4733  0F2D  0140               	movlb	0	; select bank0
  4734  0F2E  00C4               	movwf	___ftdiv@f2+2
  4735  0F2F  0141               	movlb	1	; select bank1
  4736  0F30  085D               	movf	_raux^(0+128),w
  4737  0F31  0140               	movlb	0	; select bank0
  4738  0F32  00C5               	movwf	___ftdiv@f1
  4739  0F33  0141               	movlb	1	; select bank1
  4740  0F34  085E               	movf	(_raux+1)^(0+128),w
  4741  0F35  0140               	movlb	0	; select bank0
  4742  0F36  00C6               	movwf	___ftdiv@f1+1
  4743  0F37  0141               	movlb	1	; select bank1
  4744  0F38  085F               	movf	(_raux+2)^(0+128),w
  4745  0F39  0140               	movlb	0	; select bank0
  4746  0F3A  00C7               	movwf	___ftdiv@f1+2
  4747  0F3B  3188  20C4  318E   	fcall	___ftdiv
  4748  0F3E  0140               	movlb	0	; select bank0
  4749  0F3F  0842               	movf	?___ftdiv,w
  4750  0F40  0141               	movlb	1	; select bank1
  4751  0F41  00A6               	movwf	_rntc^(0+128)
  4752  0F42  0140               	movlb	0	; select bank0
  4753  0F43  0843               	movf	?___ftdiv+1,w
  4754  0F44  0141               	movlb	1	; select bank1
  4755  0F45  00A7               	movwf	(_rntc+1)^(0+128)
  4756  0F46  0140               	movlb	0	; select bank0
  4757  0F47  0844               	movf	?___ftdiv+2,w
  4758  0F48  0141               	movlb	1	; select bank1
  4759  0F49  00A8               	movwf	(_rntc+2)^(0+128)
  4760                           
  4761                           ;main.c: 115: tkelvin=1/(((log(rntc/r0))/(beta))+(1/temp0));
  4762  0F4A  0142               	movlb	2	; select bank2
  4763  0F4B  084B               	movf	_r0^(0+256),w
  4764  0F4C  0140               	movlb	0	; select bank0
  4765  0F4D  00C2               	movwf	___ftdiv@f2
  4766  0F4E  0142               	movlb	2	; select bank2
  4767  0F4F  084C               	movf	(_r0+1)^(0+256),w
  4768  0F50  0140               	movlb	0	; select bank0
  4769  0F51  00C3               	movwf	___ftdiv@f2+1
  4770  0F52  0142               	movlb	2	; select bank2
  4771  0F53  084D               	movf	(_r0+2)^(0+256),w
  4772  0F54  0140               	movlb	0	; select bank0
  4773  0F55  00C4               	movwf	___ftdiv@f2+2
  4774  0F56  0141               	movlb	1	; select bank1
  4775  0F57  0826               	movf	_rntc^(0+128),w
  4776  0F58  0140               	movlb	0	; select bank0
  4777  0F59  00C5               	movwf	___ftdiv@f1
  4778  0F5A  0141               	movlb	1	; select bank1
  4779  0F5B  0827               	movf	(_rntc+1)^(0+128),w
  4780  0F5C  0140               	movlb	0	; select bank0
  4781  0F5D  00C6               	movwf	___ftdiv@f1+1
  4782  0F5E  0141               	movlb	1	; select bank1
  4783  0F5F  0828               	movf	(_rntc+2)^(0+128),w
  4784  0F60  0140               	movlb	0	; select bank0
  4785  0F61  00C7               	movwf	___ftdiv@f1+2
  4786  0F62  3188  20C4  318E   	fcall	___ftdiv
  4787  0F65  0140               	movlb	0	; select bank0
  4788  0F66  0842               	movf	?___ftdiv,w
  4789  0F67  0141               	movlb	1	; select bank1
  4790  0F68  00C5               	movwf	log@x^(0+128)
  4791  0F69  0140               	movlb	0	; select bank0
  4792  0F6A  0843               	movf	?___ftdiv+1,w
  4793  0F6B  0141               	movlb	1	; select bank1
  4794  0F6C  00C6               	movwf	(log@x+1)^(0+128)
  4795  0F6D  0140               	movlb	0	; select bank0
  4796  0F6E  0844               	movf	?___ftdiv+2,w
  4797  0F6F  0141               	movlb	1	; select bank1
  4798  0F70  00C7               	movwf	(log@x+2)^(0+128)
  4799  0F71  318A  22CE  318E   	fcall	_log
  4800  0F74  0141               	movlb	1	; select bank1
  4801  0F75  0845               	movf	?_log^(0+128),w
  4802  0F76  00D0               	movwf	_leerref$1432^(0+128)
  4803  0F77  0846               	movf	(?_log+1)^(0+128),w
  4804  0F78  00D1               	movwf	(_leerref$1432+1)^(0+128)
  4805  0F79  0847               	movf	(?_log+2)^(0+128),w
  4806  0F7A  00D2               	movwf	(_leerref$1432+2)^(0+128)
  4807                           
  4808                           ;main.c: 115: tkelvin=1/(((log(rntc/r0))/(beta))+(1/temp0));
  4809  0F7B  0142               	movlb	2	; select bank2
  4810  0F7C  084E               	movf	_temp0^(0+256),w
  4811  0F7D  0140               	movlb	0	; select bank0
  4812  0F7E  00C2               	movwf	___ftdiv@f2
  4813  0F7F  0142               	movlb	2	; select bank2
  4814  0F80  084F               	movf	(_temp0+1)^(0+256),w
  4815  0F81  0140               	movlb	0	; select bank0
  4816  0F82  00C3               	movwf	___ftdiv@f2+1
  4817  0F83  0142               	movlb	2	; select bank2
  4818  0F84  0850               	movf	(_temp0+2)^(0+256),w
  4819  0F85  0140               	movlb	0	; select bank0
  4820  0F86  00C4               	movwf	___ftdiv@f2+2
  4821  0F87  3000               	movlw	0
  4822  0F88  00C5               	movwf	___ftdiv@f1
  4823  0F89  3080               	movlw	128
  4824  0F8A  00C6               	movwf	___ftdiv@f1+1
  4825  0F8B  303F               	movlw	63
  4826  0F8C  00C7               	movwf	___ftdiv@f1+2
  4827  0F8D  3188  20C4  318E   	fcall	___ftdiv
  4828  0F90  0140               	movlb	0	; select bank0
  4829  0F91  0842               	movf	?___ftdiv,w
  4830  0F92  00D2               	movwf	___ftadd@f1
  4831  0F93  0843               	movf	?___ftdiv+1,w
  4832  0F94  00D3               	movwf	___ftadd@f1+1
  4833  0F95  0844               	movf	?___ftdiv+2,w
  4834  0F96  00D4               	movwf	___ftadd@f1+2
  4835  0F97  0142               	movlb	2	; select bank2
  4836  0F98  0848               	movf	_beta^(0+256),w
  4837  0F99  0140               	movlb	0	; select bank0
  4838  0F9A  00C2               	movwf	___ftdiv@f2
  4839  0F9B  0142               	movlb	2	; select bank2
  4840  0F9C  0849               	movf	(_beta+1)^(0+256),w
  4841  0F9D  0140               	movlb	0	; select bank0
  4842  0F9E  00C3               	movwf	___ftdiv@f2+1
  4843  0F9F  0142               	movlb	2	; select bank2
  4844  0FA0  084A               	movf	(_beta+2)^(0+256),w
  4845  0FA1  0140               	movlb	0	; select bank0
  4846  0FA2  00C4               	movwf	___ftdiv@f2+2
  4847  0FA3  0141               	movlb	1	; select bank1
  4848  0FA4  0850               	movf	_leerref$1432^(0+128),w
  4849  0FA5  0140               	movlb	0	; select bank0
  4850  0FA6  00C5               	movwf	___ftdiv@f1
  4851  0FA7  0141               	movlb	1	; select bank1
  4852  0FA8  0851               	movf	(_leerref$1432+1)^(0+128),w
  4853  0FA9  0140               	movlb	0	; select bank0
  4854  0FAA  00C6               	movwf	___ftdiv@f1+1
  4855  0FAB  0141               	movlb	1	; select bank1
  4856  0FAC  0852               	movf	(_leerref$1432+2)^(0+128),w
  4857  0FAD  0140               	movlb	0	; select bank0
  4858  0FAE  00C7               	movwf	___ftdiv@f1+2
  4859  0FAF  3188  20C4  318E   	fcall	___ftdiv
  4860  0FB2  0140               	movlb	0	; select bank0
  4861  0FB3  0842               	movf	?___ftdiv,w
  4862  0FB4  00D5               	movwf	___ftadd@f2
  4863  0FB5  0843               	movf	?___ftdiv+1,w
  4864  0FB6  00D6               	movwf	___ftadd@f2+1
  4865  0FB7  0844               	movf	?___ftdiv+2,w
  4866  0FB8  00D7               	movwf	___ftadd@f2+2
  4867  0FB9  318B  23A7  318E   	fcall	___ftadd
  4868  0FBC  0140               	movlb	0	; select bank0
  4869  0FBD  0852               	movf	?___ftadd,w
  4870  0FBE  0141               	movlb	1	; select bank1
  4871  0FBF  00CD               	movwf	_leerref$1433^(0+128)
  4872  0FC0  0140               	movlb	0	; select bank0
  4873  0FC1  0853               	movf	?___ftadd+1,w
  4874  0FC2  0141               	movlb	1	; select bank1
  4875  0FC3  00CE               	movwf	(_leerref$1433+1)^(0+128)
  4876  0FC4  0140               	movlb	0	; select bank0
  4877  0FC5  0854               	movf	?___ftadd+2,w
  4878  0FC6  0141               	movlb	1	; select bank1
  4879  0FC7  00CF               	movwf	(_leerref$1433+2)^(0+128)
  4880                           
  4881                           ;main.c: 115: tkelvin=1/(((log(rntc/r0))/(beta))+(1/temp0));
  4882  0FC8  084D               	movf	_leerref$1433^(0+128),w
  4883  0FC9  0140               	movlb	0	; select bank0
  4884  0FCA  00C2               	movwf	___ftdiv@f2
  4885  0FCB  0141               	movlb	1	; select bank1
  4886  0FCC  084E               	movf	(_leerref$1433+1)^(0+128),w
  4887  0FCD  0140               	movlb	0	; select bank0
  4888  0FCE  00C3               	movwf	___ftdiv@f2+1
  4889  0FCF  0141               	movlb	1	; select bank1
  4890  0FD0  084F               	movf	(_leerref$1433+2)^(0+128),w
  4891  0FD1  0140               	movlb	0	; select bank0
  4892  0FD2  00C4               	movwf	___ftdiv@f2+2
  4893  0FD3  3000               	movlw	0
  4894  0FD4  00C5               	movwf	___ftdiv@f1
  4895  0FD5  3080               	movlw	128
  4896  0FD6  00C6               	movwf	___ftdiv@f1+1
  4897  0FD7  303F               	movlw	63
  4898  0FD8  00C7               	movwf	___ftdiv@f1+2
  4899  0FD9  3188  20C4  318E   	fcall	___ftdiv
  4900  0FDC  0140               	movlb	0	; select bank0
  4901  0FDD  0842               	movf	?___ftdiv,w
  4902  0FDE  0142               	movlb	2	; select bank2
  4903  0FDF  00A0               	movwf	_tkelvin^(0+256)
  4904  0FE0  0140               	movlb	0	; select bank0
  4905  0FE1  0843               	movf	?___ftdiv+1,w
  4906  0FE2  0142               	movlb	2	; select bank2
  4907  0FE3  00A1               	movwf	(_tkelvin+1)^(0+256)
  4908  0FE4  0140               	movlb	0	; select bank0
  4909  0FE5  0844               	movf	?___ftdiv+2,w
  4910  0FE6  0142               	movlb	2	; select bank2
  4911  0FE7  00A2               	movwf	(_tkelvin+2)^(0+256)
  4912                           
  4913                           ;main.c: 116: temperatura=((int)tkelvin-273);
  4914  0FE8  0820               	movf	_tkelvin^(0+256),w
  4915  0FE9  0140               	movlb	0	; select bank0
  4916  0FEA  00DF               	movwf	___fttol@f1
  4917  0FEB  0142               	movlb	2	; select bank2
  4918  0FEC  0821               	movf	(_tkelvin+1)^(0+256),w
  4919  0FED  0140               	movlb	0	; select bank0
  4920  0FEE  00E0               	movwf	___fttol@f1+1
  4921  0FEF  0142               	movlb	2	; select bank2
  4922  0FF0  0822               	movf	(_tkelvin+2)^(0+256),w
  4923  0FF1  0140               	movlb	0	; select bank0
  4924  0FF2  00E1               	movwf	___fttol@f1+2
  4925  0FF3  3188  2025         	fcall	___fttol
  4926  0FF5  0140               	movlb	0	; select bank0
  4927  0FF6  085F               	movf	?___fttol,w
  4928  0FF7  3EEF               	addlw	239
  4929  0FF8  0141               	movlb	1	; select bank1
  4930  0FF9  00E6               	movwf	_temperatura^(0+128)
  4931  0FFA  30FE               	movlw	254
  4932  0FFB  0140               	movlb	0	; select bank0
  4933  0FFC  3D60               	addwfc	?___fttol+1,w
  4934  0FFD  0141               	movlb	1	; select bank1
  4935  0FFE  00E7               	movwf	(_temperatura+1)^(0+128)
  4936  0FFF  0008               	return
  4937  1000                     __end_of_leerref:	
  4938                           
  4939                           	psect	text6
  4940  0ACE                     __ptext6:	
  4941 ;; *************** function _log *****************
  4942 ;; Defined at:
  4943 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\log.c"
  4944 ;; Parameters:    Size  Location     Type
  4945 ;;  x               3    3[BANK1 ] void 
  4946 ;; Auto vars:     Size  Location     Type
  4947 ;;  exponent        2    6[BANK1 ] int 
  4948 ;; Return value:  Size  Location     Type
  4949 ;;                  3    3[BANK1 ] int 
  4950 ;; Registers used:
  4951 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4952 ;; Tracked objects:
  4953 ;;		On entry : 0/0
  4954 ;;		On exit  : 0/0
  4955 ;;		Unchanged: 0/0
  4956 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
  4957 ;;      Params:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  4958 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  4959 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  4960 ;;      Totals:         0       1       5       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  4961 ;;Total ram usage:        6 bytes
  4962 ;; Hardware stack levels used:    1
  4963 ;; Hardware stack levels required when called:    5
  4964 ;; This function calls:
  4965 ;;		___awtoft
  4966 ;;		___ftadd
  4967 ;;		___ftge
  4968 ;;		___ftmul
  4969 ;;		_eval_poly
  4970 ;;		_frexp
  4971 ;; This function is called by:
  4972 ;;		_leerref
  4973 ;; This function uses a non-reentrant model
  4974 ;;
  4975                           
  4976                           
  4977                           ;psect for function _log
  4978  0ACE                     _log:	
  4979                           
  4980                           ;incstack = 0
  4981                           ; Regs used in _log: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4982  0ACE  0141               	movlb	1	; select bank1
  4983  0ACF  0845               	movf	log@x^(0+128),w
  4984  0AD0  0140               	movlb	0	; select bank0
  4985  0AD1  00A4               	movwf	___ftge@ff1
  4986  0AD2  0141               	movlb	1	; select bank1
  4987  0AD3  0846               	movf	(log@x+1)^(0+128),w
  4988  0AD4  0140               	movlb	0	; select bank0
  4989  0AD5  00A5               	movwf	___ftge@ff1+1
  4990  0AD6  0141               	movlb	1	; select bank1
  4991  0AD7  0847               	movf	(log@x+2)^(0+128),w
  4992  0AD8  0140               	movlb	0	; select bank0
  4993  0AD9  00A6               	movwf	___ftge@ff1+2
  4994  0ADA  3000               	movlw	0
  4995  0ADB  00A7               	movwf	___ftge@ff2
  4996  0ADC  3000               	movlw	0
  4997  0ADD  00A8               	movwf	___ftge@ff2+1
  4998  0ADE  3000               	movlw	0
  4999  0ADF  00A9               	movwf	___ftge@ff2+2
  5000  0AE0  3195  252F  318A   	fcall	___ftge
  5001  0AE3  1803               	btfsc	3,0
  5002  0AE4  2AF2               	goto	l3449
  5003  0AE5  3021               	movlw	33
  5004  0AE6  0142               	movlb	2	; select bank2
  5005  0AE7  00A3               	movwf	_errno^(0+256)
  5006  0AE8  3000               	movlw	0
  5007  0AE9  00A4               	movwf	(_errno^(0+256)+1)
  5008  0AEA  3000               	movlw	0
  5009  0AEB  0141               	movlb	1	; select bank1
  5010  0AEC  00C5               	movwf	?_log^(0+128)
  5011  0AED  3000               	movlw	0
  5012  0AEE  00C6               	movwf	(?_log+1)^(0+128)
  5013  0AEF  3000               	movlw	0
  5014  0AF0  00C7               	movwf	(?_log+2)^(0+128)
  5015  0AF1  0008               	return
  5016  0AF2                     l3449:	
  5017  0AF2  0141               	movlb	1	; select bank1
  5018  0AF3  0847               	movf	(log@x+2)^(0+128),w
  5019  0AF4  0446               	iorwf	(log@x+1)^(0+128),w
  5020  0AF5  0445               	iorwf	log@x^(0+128),w
  5021  0AF6  1D03               	skipz
  5022  0AF7  2B05               	goto	l3455
  5023  0AF8  3022               	movlw	34
  5024  0AF9  0142               	movlb	2	; select bank2
  5025  0AFA  00A3               	movwf	_errno^(0+256)
  5026  0AFB  3000               	movlw	0
  5027  0AFC  00A4               	movwf	(_errno^(0+256)+1)
  5028  0AFD  3000               	movlw	0
  5029  0AFE  0141               	movlb	1	; select bank1
  5030  0AFF  00C5               	movwf	?_log^(0+128)
  5031  0B00  3000               	movlw	0
  5032  0B01  00C6               	movwf	(?_log+1)^(0+128)
  5033  0B02  3000               	movlw	0
  5034  0B03  00C7               	movwf	(?_log+2)^(0+128)
  5035  0B04  0008               	return
  5036  0B05                     l3455:	
  5037  0B05  3000               	movlw	0
  5038  0B06  0140               	movlb	0	; select bank0
  5039  0B07  00D2               	movwf	___ftadd@f1
  5040  0B08  3080               	movlw	128
  5041  0B09  00D3               	movwf	___ftadd@f1+1
  5042  0B0A  30BF               	movlw	191
  5043  0B0B  00D4               	movwf	___ftadd@f1+2
  5044  0B0C  3000               	movlw	0
  5045  0B0D  00B2               	movwf	___ftmul@f1
  5046  0B0E  3000               	movlw	0
  5047  0B0F  00B3               	movwf	___ftmul@f1+1
  5048  0B10  3040               	movlw	64
  5049  0B11  00B4               	movwf	___ftmul@f1+2
  5050  0B12  30C8               	movlw	(low (log@exponent| 0))& (0+255)
  5051  0B13  00E6               	movwf	??_log
  5052  0B14  0866               	movf	??_log,w
  5053  0B15  00A7               	movwf	frexp@eptr
  5054  0B16  0141               	movlb	1	; select bank1
  5055  0B17  0845               	movf	log@x^(0+128),w
  5056  0B18  0140               	movlb	0	; select bank0
  5057  0B19  00A4               	movwf	frexp@value
  5058  0B1A  0141               	movlb	1	; select bank1
  5059  0B1B  0846               	movf	(log@x+1)^(0+128),w
  5060  0B1C  0140               	movlb	0	; select bank0
  5061  0B1D  00A5               	movwf	frexp@value+1
  5062  0B1E  0141               	movlb	1	; select bank1
  5063  0B1F  0847               	movf	(log@x+2)^(0+128),w
  5064  0B20  0140               	movlb	0	; select bank0
  5065  0B21  00A6               	movwf	frexp@value+2
  5066  0B22  3195  256B  318A   	fcall	_frexp
  5067  0B25  0140               	movlb	0	; select bank0
  5068  0B26  0824               	movf	?_frexp,w
  5069  0B27  00B5               	movwf	___ftmul@f2
  5070  0B28  0825               	movf	?_frexp+1,w
  5071  0B29  00B6               	movwf	___ftmul@f2+1
  5072  0B2A  0826               	movf	?_frexp+2,w
  5073  0B2B  00B7               	movwf	___ftmul@f2+2
  5074  0B2C  318A  221A  318A   	fcall	___ftmul
  5075  0B2F  0140               	movlb	0	; select bank0
  5076  0B30  0832               	movf	?___ftmul,w
  5077  0B31  00D5               	movwf	___ftadd@f2
  5078  0B32  0833               	movf	?___ftmul+1,w
  5079  0B33  00D6               	movwf	___ftadd@f2+1
  5080  0B34  0834               	movf	?___ftmul+2,w
  5081  0B35  00D7               	movwf	___ftadd@f2+2
  5082  0B36  318B  23A7  318A   	fcall	___ftadd
  5083  0B39  0140               	movlb	0	; select bank0
  5084  0B3A  0852               	movf	?___ftadd,w
  5085  0B3B  0141               	movlb	1	; select bank1
  5086  0B3C  00C5               	movwf	log@x^(0+128)
  5087  0B3D  0140               	movlb	0	; select bank0
  5088  0B3E  0853               	movf	?___ftadd+1,w
  5089  0B3F  0141               	movlb	1	; select bank1
  5090  0B40  00C6               	movwf	(log@x+1)^(0+128)
  5091  0B41  0140               	movlb	0	; select bank0
  5092  0B42  0854               	movf	?___ftadd+2,w
  5093  0B43  0141               	movlb	1	; select bank1
  5094  0B44  00C7               	movwf	(log@x+2)^(0+128)
  5095  0B45  30FF               	movlw	255
  5096  0B46  07C8               	addwf	log@exponent^(0+128),f
  5097  0B47  30FF               	movlw	255
  5098  0B48  3DC9               	addwfc	(log@exponent+1)^(0+128),f
  5099  0B49  0845               	movf	log@x^(0+128),w
  5100  0B4A  0140               	movlb	0	; select bank0
  5101  0B4B  00DF               	movwf	eval_poly@x
  5102  0B4C  0141               	movlb	1	; select bank1
  5103  0B4D  0846               	movf	(log@x+1)^(0+128),w
  5104  0B4E  0140               	movlb	0	; select bank0
  5105  0B4F  00E0               	movwf	eval_poly@x+1
  5106  0B50  0141               	movlb	1	; select bank1
  5107  0B51  0847               	movf	(log@x+2)^(0+128),w
  5108  0B52  0140               	movlb	0	; select bank0
  5109  0B53  00E1               	movwf	eval_poly@x+2
  5110  0B54  3000               	movlw	low (log@coeff| (0+32768))
  5111  0B55  00E2               	movwf	eval_poly@d
  5112  0B56  3098               	movlw	high (log@coeff| (0+32768))
  5113  0B57  00E3               	movwf	eval_poly@d+1
  5114  0B58  3008               	movlw	8
  5115  0B59  00E4               	movwf	eval_poly@n
  5116  0B5A  3000               	movlw	0
  5117  0B5B  00E5               	movwf	eval_poly@n+1
  5118  0B5C  3196  265E  318A   	fcall	_eval_poly
  5119  0B5F  0140               	movlb	0	; select bank0
  5120  0B60  085F               	movf	?_eval_poly,w
  5121  0B61  0141               	movlb	1	; select bank1
  5122  0B62  00C5               	movwf	log@x^(0+128)
  5123  0B63  0140               	movlb	0	; select bank0
  5124  0B64  0860               	movf	?_eval_poly+1,w
  5125  0B65  0141               	movlb	1	; select bank1
  5126  0B66  00C6               	movwf	(log@x+1)^(0+128)
  5127  0B67  0140               	movlb	0	; select bank0
  5128  0B68  0861               	movf	?_eval_poly+2,w
  5129  0B69  0141               	movlb	1	; select bank1
  5130  0B6A  00C7               	movwf	(log@x+2)^(0+128)
  5131  0B6B  0845               	movf	log@x^(0+128),w
  5132  0B6C  0140               	movlb	0	; select bank0
  5133  0B6D  00D2               	movwf	___ftadd@f1
  5134  0B6E  0141               	movlb	1	; select bank1
  5135  0B6F  0846               	movf	(log@x+1)^(0+128),w
  5136  0B70  0140               	movlb	0	; select bank0
  5137  0B71  00D3               	movwf	___ftadd@f1+1
  5138  0B72  0141               	movlb	1	; select bank1
  5139  0B73  0847               	movf	(log@x+2)^(0+128),w
  5140  0B74  0140               	movlb	0	; select bank0
  5141  0B75  00D4               	movwf	___ftadd@f1+2
  5142  0B76  3072               	movlw	114
  5143  0B77  00B2               	movwf	___ftmul@f1
  5144  0B78  3031               	movlw	49
  5145  0B79  00B3               	movwf	___ftmul@f1+1
  5146  0B7A  303F               	movlw	63
  5147  0B7B  00B4               	movwf	___ftmul@f1+2
  5148  0B7C  0141               	movlb	1	; select bank1
  5149  0B7D  0849               	movf	(log@exponent+1)^(0+128),w
  5150  0B7E  0140               	movlb	0	; select bank0
  5151  0B7F  00AD               	movwf	___awtoft@c+1
  5152  0B80  0141               	movlb	1	; select bank1
  5153  0B81  0848               	movf	log@exponent^(0+128),w
  5154  0B82  0140               	movlb	0	; select bank0
  5155  0B83  00AC               	movwf	___awtoft@c
  5156  0B84  3194  243E  318A   	fcall	___awtoft
  5157  0B87  0140               	movlb	0	; select bank0
  5158  0B88  082C               	movf	?___awtoft,w
  5159  0B89  00B5               	movwf	___ftmul@f2
  5160  0B8A  082D               	movf	?___awtoft+1,w
  5161  0B8B  00B6               	movwf	___ftmul@f2+1
  5162  0B8C  082E               	movf	?___awtoft+2,w
  5163  0B8D  00B7               	movwf	___ftmul@f2+2
  5164  0B8E  318A  221A  318A   	fcall	___ftmul
  5165  0B91  0140               	movlb	0	; select bank0
  5166  0B92  0832               	movf	?___ftmul,w
  5167  0B93  00D5               	movwf	___ftadd@f2
  5168  0B94  0833               	movf	?___ftmul+1,w
  5169  0B95  00D6               	movwf	___ftadd@f2+1
  5170  0B96  0834               	movf	?___ftmul+2,w
  5171  0B97  00D7               	movwf	___ftadd@f2+2
  5172  0B98  318B  23A7         	fcall	___ftadd
  5173  0B9A  0140               	movlb	0	; select bank0
  5174  0B9B  0852               	movf	?___ftadd,w
  5175  0B9C  0141               	movlb	1	; select bank1
  5176  0B9D  00C5               	movwf	?_log^(0+128)
  5177  0B9E  0140               	movlb	0	; select bank0
  5178  0B9F  0853               	movf	?___ftadd+1,w
  5179  0BA0  0141               	movlb	1	; select bank1
  5180  0BA1  00C6               	movwf	(?_log+1)^(0+128)
  5181  0BA2  0140               	movlb	0	; select bank0
  5182  0BA3  0854               	movf	?___ftadd+2,w
  5183  0BA4  0141               	movlb	1	; select bank1
  5184  0BA5  00C7               	movwf	(?_log+2)^(0+128)
  5185  0BA6  0008               	return
  5186  0BA7                     __end_of_log:	
  5187                           
  5188                           	psect	text7
  5189  156B                     __ptext7:	
  5190 ;; *************** function _frexp *****************
  5191 ;; Defined at:
  5192 ;;		line 254 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\frexp.c"
  5193 ;; Parameters:    Size  Location     Type
  5194 ;;  value           3    4[BANK0 ] int 
  5195 ;;  eptr            1    7[BANK0 ] PTR int 
  5196 ;;		 -> log@exponent(2), 
  5197 ;; Auto vars:     Size  Location     Type
  5198 ;;		None
  5199 ;; Return value:  Size  Location     Type
  5200 ;;                  3    4[BANK0 ] PTR int 
  5201 ;; Registers used:
  5202 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  5203 ;; Tracked objects:
  5204 ;;		On entry : 0/0
  5205 ;;		On exit  : 0/0
  5206 ;;		Unchanged: 0/0
  5207 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
  5208 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  5209 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  5210 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  5211 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  5212 ;;Total ram usage:        6 bytes
  5213 ;; Hardware stack levels used:    1
  5214 ;; Hardware stack levels required when called:    2
  5215 ;; This function calls:
  5216 ;;		Nothing
  5217 ;; This function is called by:
  5218 ;;		_log
  5219 ;; This function uses a non-reentrant model
  5220 ;;
  5221                           
  5222                           
  5223                           ;psect for function _frexp
  5224  156B                     _frexp:	
  5225                           
  5226                           ;incstack = 0
  5227                           ; Regs used in _frexp: [wreg+fsr1l+fsr1h+status,2+status,0]
  5228  156B  0140               	movlb	0	; select bank0
  5229  156C  0826               	movf	frexp@value+2,w
  5230  156D  0425               	iorwf	frexp@value+1,w
  5231  156E  0424               	iorwf	frexp@value,w
  5232  156F  1D03               	skipz
  5233  1570  2D7E               	goto	l3375
  5234  1571  0827               	movf	frexp@eptr,w
  5235  1572  0086               	movwf	6
  5236  1573  0187               	clrf	7
  5237  1574  3000               	movlw	0
  5238  1575  3FC0               	movwi [0]fsr1
  5239  1576  3FC1               	movwi [1]fsr1
  5240  1577  3000               	movlw	0
  5241  1578  00A4               	movwf	?_frexp
  5242  1579  3000               	movlw	0
  5243  157A  00A5               	movwf	?_frexp+1
  5244  157B  3000               	movlw	0
  5245  157C  00A6               	movwf	?_frexp+2
  5246  157D  0008               	return
  5247  157E                     l3375:	
  5248  157E  0826               	movf	frexp@value+2,w
  5249  157F  397F               	andlw	127
  5250  1580  00A8               	movwf	??_frexp
  5251  1581  01A9               	clrf	??_frexp+1
  5252  1582  35A8               	lslf	??_frexp,f
  5253  1583  0DA9               	rlf	??_frexp+1,f
  5254  1584  0827               	movf	frexp@eptr,w
  5255  1585  0086               	movwf	6
  5256  1586  0187               	clrf	7
  5257  1587  0828               	movf	??_frexp,w
  5258  1588  3FC0               	movwi [0]fsr1
  5259  1589  0829               	movf	??_frexp+1,w
  5260  158A  3FC1               	movwi [1]fsr1
  5261  158B  0D25               	rlf	frexp@value+1,w
  5262  158C  0D25               	rlf	frexp@value+1,w
  5263  158D  3901               	andlw	1
  5264  158E  00A8               	movwf	??_frexp
  5265  158F  01A9               	clrf	??_frexp+1
  5266  1590  0827               	movf	frexp@eptr,w
  5267  1591  0086               	movwf	6
  5268  1592  0187               	clrf	7
  5269  1593  0828               	movf	??_frexp,w
  5270  1594  0481               	iorwf	1,f
  5271  1595  3141               	addfsr 1,1
  5272  1596  0829               	movf	??_frexp+1,w
  5273  1597  0481               	iorwf	1,f
  5274  1598  0827               	movf	frexp@eptr,w
  5275  1599  0086               	movwf	6
  5276  159A  0187               	clrf	7
  5277  159B  3082               	movlw	130
  5278  159C  0781               	addwf	1,f
  5279  159D  3141               	addfsr 1,1
  5280  159E  30FF               	movlw	255
  5281  159F  3D81               	addwfc	1,f
  5282  15A0  317F               	addfsr 1,-1
  5283  15A1  0826               	movf	frexp@value+2,w
  5284  15A2  3980               	andlw	-128
  5285  15A3  383F               	iorlw	63
  5286  15A4  00A6               	movwf	frexp@value+2
  5287  15A5  13A5               	bcf	frexp@value+1,7
  5288  15A6  0008               	return
  5289  15A7                     __end_of_frexp:	
  5290                           
  5291                           	psect	text8
  5292  165E                     __ptext8:	
  5293 ;; *************** function _eval_poly *****************
  5294 ;; Defined at:
  5295 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\evalpoly.c"
  5296 ;; Parameters:    Size  Location     Type
  5297 ;;  x               3   63[BANK0 ] PTR int 
  5298 ;;  d               2   66[BANK0 ] PTR const 
  5299 ;;		 -> log@coeff(27), 
  5300 ;;  n               2   68[BANK0 ] int 
  5301 ;; Auto vars:     Size  Location     Type
  5302 ;;  res             3    0[BANK1 ] int 
  5303 ;; Return value:  Size  Location     Type
  5304 ;;                  3   63[BANK0 ] int 
  5305 ;; Registers used:
  5306 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  5307 ;; Tracked objects:
  5308 ;;		On entry : 0/0
  5309 ;;		On exit  : 0/0
  5310 ;;		Unchanged: 0/0
  5311 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
  5312 ;;      Params:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  5313 ;;      Locals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  5314 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  5315 ;;      Totals:         0       7       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  5316 ;;Total ram usage:       10 bytes
  5317 ;; Hardware stack levels used:    1
  5318 ;; Hardware stack levels required when called:    4
  5319 ;; This function calls:
  5320 ;;		___ftadd
  5321 ;;		___ftmul
  5322 ;;		___wmul
  5323 ;; This function is called by:
  5324 ;;		_log
  5325 ;; This function uses a non-reentrant model
  5326 ;;
  5327                           
  5328                           
  5329                           ;psect for function _eval_poly
  5330  165E                     _eval_poly:	
  5331                           
  5332                           ;incstack = 0
  5333                           ; Regs used in _eval_poly: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  5334  165E  0140               	movlb	0	; select bank0
  5335  165F  0865               	movf	eval_poly@n+1,w
  5336  1660  00AE               	movwf	___wmul@multiplier+1
  5337  1661  0864               	movf	eval_poly@n,w
  5338  1662  00AD               	movwf	___wmul@multiplier
  5339  1663  3003               	movlw	3
  5340  1664  00AF               	movwf	___wmul@multiplicand
  5341  1665  3000               	movlw	0
  5342  1666  00B0               	movwf	___wmul@multiplicand+1
  5343  1667  3194  2422  3196   	fcall	___wmul
  5344  166A  0140               	movlb	0	; select bank0
  5345  166B  0862               	movf	eval_poly@d,w
  5346  166C  072D               	addwf	?___wmul,w
  5347  166D  0084               	movwf	4
  5348  166E  0863               	movf	eval_poly@d+1,w
  5349  166F  3D2E               	addwfc	?___wmul+1,w
  5350  1670  0085               	movwf	5
  5351  1671  3F00               	moviw [0]fsr0
  5352  1672  0141               	movlb	1	; select bank1
  5353  1673  00C2               	movwf	eval_poly@res^(0+128)
  5354  1674  3F01               	moviw [1]fsr0
  5355  1675  00C3               	movwf	(eval_poly@res+1)^(0+128)
  5356  1676  3F02               	moviw [2]fsr0
  5357  1677                     L3:	
  5358  1677  00C4               	movwf	(eval_poly@res+2)^(0+128)
  5359  1678  0140               	movlb	0	; select bank0
  5360  1679  0864               	movf	eval_poly@n,w
  5361  167A  0465               	iorwf	eval_poly@n+1,w
  5362  167B  1903               	btfsc	3,2
  5363  167C  2EC5               	goto	l3393
  5364  167D  30FF               	movlw	255
  5365  167E  0140               	movlb	0	; select bank0
  5366  167F  07E4               	addwf	eval_poly@n,f
  5367  1680  30FF               	movlw	255
  5368  1681  3DE5               	addwfc	eval_poly@n+1,f
  5369  1682  0865               	movf	eval_poly@n+1,w
  5370  1683  00AE               	movwf	___wmul@multiplier+1
  5371  1684  0864               	movf	eval_poly@n,w
  5372  1685  00AD               	movwf	___wmul@multiplier
  5373  1686  3003               	movlw	3
  5374  1687  00AF               	movwf	___wmul@multiplicand
  5375  1688  3000               	movlw	0
  5376  1689  00B0               	movwf	___wmul@multiplicand+1
  5377  168A  3194  2422  3196   	fcall	___wmul
  5378  168D  0140               	movlb	0	; select bank0
  5379  168E  0862               	movf	eval_poly@d,w
  5380  168F  072D               	addwf	?___wmul,w
  5381  1690  0084               	movwf	4
  5382  1691  0863               	movf	eval_poly@d+1,w
  5383  1692  3D2E               	addwfc	?___wmul+1,w
  5384  1693  0085               	movwf	5
  5385  1694  3F00               	moviw [0]fsr0
  5386  1695  00D2               	movwf	___ftadd@f1
  5387  1696  3F01               	moviw [1]fsr0
  5388  1697  00D3               	movwf	___ftadd@f1+1
  5389  1698  3F02               	moviw [2]fsr0
  5390  1699  00D4               	movwf	___ftadd@f1+2
  5391  169A  0141               	movlb	1	; select bank1
  5392  169B  0842               	movf	eval_poly@res^(0+128),w
  5393  169C  0140               	movlb	0	; select bank0
  5394  169D  00B2               	movwf	___ftmul@f1
  5395  169E  0141               	movlb	1	; select bank1
  5396  169F  0843               	movf	(eval_poly@res+1)^(0+128),w
  5397  16A0  0140               	movlb	0	; select bank0
  5398  16A1  00B3               	movwf	___ftmul@f1+1
  5399  16A2  0141               	movlb	1	; select bank1
  5400  16A3  0844               	movf	(eval_poly@res+2)^(0+128),w
  5401  16A4  0140               	movlb	0	; select bank0
  5402  16A5  00B4               	movwf	___ftmul@f1+2
  5403  16A6  085F               	movf	eval_poly@x,w
  5404  16A7  00B5               	movwf	___ftmul@f2
  5405  16A8  0860               	movf	eval_poly@x+1,w
  5406  16A9  00B6               	movwf	___ftmul@f2+1
  5407  16AA  0861               	movf	eval_poly@x+2,w
  5408  16AB  00B7               	movwf	___ftmul@f2+2
  5409  16AC  318A  221A  3196   	fcall	___ftmul
  5410  16AF  0140               	movlb	0	; select bank0
  5411  16B0  0832               	movf	?___ftmul,w
  5412  16B1  00D5               	movwf	___ftadd@f2
  5413  16B2  0833               	movf	?___ftmul+1,w
  5414  16B3  00D6               	movwf	___ftadd@f2+1
  5415  16B4  0834               	movf	?___ftmul+2,w
  5416  16B5  00D7               	movwf	___ftadd@f2+2
  5417  16B6  318B  23A7  3196   	fcall	___ftadd
  5418  16B9  0140               	movlb	0	; select bank0
  5419  16BA  0852               	movf	?___ftadd,w
  5420  16BB  0141               	movlb	1	; select bank1
  5421  16BC  00C2               	movwf	eval_poly@res^(0+128)
  5422  16BD  0140               	movlb	0	; select bank0
  5423  16BE  0853               	movf	?___ftadd+1,w
  5424  16BF  0141               	movlb	1	; select bank1
  5425  16C0  00C3               	movwf	(eval_poly@res+1)^(0+128)
  5426  16C1  0140               	movlb	0	; select bank0
  5427  16C2  0854               	movf	?___ftadd+2,w
  5428  16C3  0141               	movlb	1	; select bank1
  5429  16C4  2E77               	goto	L3
  5430  16C5                     l3393:	
  5431  16C5  0141               	movlb	1	; select bank1
  5432  16C6  0842               	movf	eval_poly@res^(0+128),w
  5433  16C7  0140               	movlb	0	; select bank0
  5434  16C8  00DF               	movwf	?_eval_poly
  5435  16C9  0141               	movlb	1	; select bank1
  5436  16CA  0843               	movf	(eval_poly@res+1)^(0+128),w
  5437  16CB  0140               	movlb	0	; select bank0
  5438  16CC  00E0               	movwf	?_eval_poly+1
  5439  16CD  0141               	movlb	1	; select bank1
  5440  16CE  0844               	movf	(eval_poly@res+2)^(0+128),w
  5441  16CF  0140               	movlb	0	; select bank0
  5442  16D0  00E1               	movwf	?_eval_poly+2
  5443  16D1  0008               	return
  5444  16D2                     __end_of_eval_poly:	
  5445                           
  5446                           	psect	text9
  5447  1422                     __ptext9:	
  5448 ;; *************** function ___wmul *****************
  5449 ;; Defined at:
  5450 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\Umul16.c"
  5451 ;; Parameters:    Size  Location     Type
  5452 ;;  multiplier      2   13[BANK0 ] unsigned int 
  5453 ;;  multiplicand    2   15[BANK0 ] unsigned int 
  5454 ;; Auto vars:     Size  Location     Type
  5455 ;;  product         2   17[BANK0 ] unsigned int 
  5456 ;; Return value:  Size  Location     Type
  5457 ;;                  2   13[BANK0 ] unsigned int 
  5458 ;; Registers used:
  5459 ;;		wreg, status,2, status,0
  5460 ;; Tracked objects:
  5461 ;;		On entry : 0/0
  5462 ;;		On exit  : 0/0
  5463 ;;		Unchanged: 0/0
  5464 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
  5465 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  5466 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  5467 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  5468 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  5469 ;;Total ram usage:        6 bytes
  5470 ;; Hardware stack levels used:    1
  5471 ;; Hardware stack levels required when called:    2
  5472 ;; This function calls:
  5473 ;;		Nothing
  5474 ;; This function is called by:
  5475 ;;		_main
  5476 ;;		_sprintf
  5477 ;;		_eval_poly
  5478 ;; This function uses a non-reentrant model
  5479 ;;
  5480                           
  5481                           
  5482                           ;psect for function ___wmul
  5483  1422                     ___wmul:	
  5484                           
  5485                           ;incstack = 0
  5486                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  5487  1422  0140               	movlb	0	; select bank0
  5488  1423  01B1               	clrf	___wmul@product
  5489  1424  01B2               	clrf	___wmul@product+1
  5490  1425                     l3203:	
  5491  1425  1C2D               	btfss	___wmul@multiplier,0
  5492  1426  2C2B               	goto	l468
  5493  1427  082F               	movf	___wmul@multiplicand,w
  5494  1428  07B1               	addwf	___wmul@product,f
  5495  1429  0830               	movf	___wmul@multiplicand+1,w
  5496  142A  3DB2               	addwfc	___wmul@product+1,f
  5497  142B                     l468:	
  5498  142B  3001               	movlw	1
  5499  142C                     u4105:	
  5500  142C  35AF               	lslf	___wmul@multiplicand,f
  5501  142D  0DB0               	rlf	___wmul@multiplicand+1,f
  5502  142E  0B89               	decfsz	9,f
  5503  142F  2C2C               	goto	u4105
  5504  1430  3001               	movlw	1
  5505  1431                     u4115:	
  5506  1431  36AE               	lsrf	___wmul@multiplier+1,f
  5507  1432  0CAD               	rrf	___wmul@multiplier,f
  5508  1433  0B89               	decfsz	9,f
  5509  1434  2C31               	goto	u4115
  5510  1435  082D               	movf	___wmul@multiplier,w
  5511  1436  042E               	iorwf	___wmul@multiplier+1,w
  5512  1437  1D03               	btfss	3,2
  5513  1438  2C25               	goto	l3203
  5514  1439  0832               	movf	___wmul@product+1,w
  5515  143A  00AE               	movwf	?___wmul+1
  5516  143B  0831               	movf	___wmul@product,w
  5517  143C  00AD               	movwf	?___wmul
  5518  143D  0008               	return
  5519  143E                     __end_of___wmul:	
  5520                           
  5521                           	psect	text10
  5522  0A1A                     __ptext10:	
  5523 ;; *************** function ___ftmul *****************
  5524 ;; Defined at:
  5525 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\ftmul.c"
  5526 ;; Parameters:    Size  Location     Type
  5527 ;;  f1              3   18[BANK0 ] float 
  5528 ;;  f2              3   21[BANK0 ] float 
  5529 ;; Auto vars:     Size  Location     Type
  5530 ;;  f3_as_produc    3   29[BANK0 ] unsigned um
  5531 ;;  sign            1   33[BANK0 ] unsigned char 
  5532 ;;  cntr            1   32[BANK0 ] unsigned char 
  5533 ;;  exp             1   28[BANK0 ] unsigned char 
  5534 ;; Return value:  Size  Location     Type
  5535 ;;                  3   18[BANK0 ] float 
  5536 ;; Registers used:
  5537 ;;		wreg, status,2, status,0, pclath, cstack
  5538 ;; Tracked objects:
  5539 ;;		On entry : 0/0
  5540 ;;		On exit  : 0/0
  5541 ;;		Unchanged: 0/0
  5542 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
  5543 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  5544 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  5545 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  5546 ;;      Totals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  5547 ;;Total ram usage:       16 bytes
  5548 ;; Hardware stack levels used:    1
  5549 ;; Hardware stack levels required when called:    3
  5550 ;; This function calls:
  5551 ;;		___ftpack
  5552 ;; This function is called by:
  5553 ;;		_leerref
  5554 ;;		_main
  5555 ;;		_log
  5556 ;;		_eval_poly
  5557 ;; This function uses a non-reentrant model
  5558 ;;
  5559                           
  5560                           
  5561                           ;psect for function ___ftmul
  5562  0A1A                     ___ftmul:	
  5563                           
  5564                           ;incstack = 0
  5565                           ; Regs used in ___ftmul: [wreg+status,2+status,0+pclath+cstack]
  5566  0A1A  0140               	movlb	0	; select bank0
  5567  0A1B  0832               	movf	___ftmul@f1,w
  5568  0A1C  00B8               	movwf	??___ftmul
  5569  0A1D  0833               	movf	___ftmul@f1+1,w
  5570  0A1E  00B9               	movwf	??___ftmul+1
  5571  0A1F  0834               	movf	___ftmul@f1+2,w
  5572  0A20  00BA               	movwf	??___ftmul+2
  5573  0A21  1003               	clrc
  5574  0A22  0D39               	rlf	??___ftmul+1,w
  5575  0A23  0D3A               	rlf	??___ftmul+2,w
  5576  0A24  00BB               	movwf	??___ftmul+3
  5577  0A25  083B               	movf	??___ftmul+3,w
  5578  0A26  00BC               	movwf	___ftmul@exp
  5579  0A27  083C               	movf	___ftmul@exp,w
  5580  0A28  1D03               	btfss	3,2
  5581  0A29  2A31               	goto	l3291
  5582  0A2A  3000               	movlw	0
  5583  0A2B  00B2               	movwf	?___ftmul
  5584  0A2C  3000               	movlw	0
  5585  0A2D  00B3               	movwf	?___ftmul+1
  5586  0A2E  3000               	movlw	0
  5587  0A2F  00B4               	movwf	?___ftmul+2
  5588  0A30  0008               	return
  5589  0A31                     l3291:	
  5590  0A31  0835               	movf	___ftmul@f2,w
  5591  0A32  00B8               	movwf	??___ftmul
  5592  0A33  0836               	movf	___ftmul@f2+1,w
  5593  0A34  00B9               	movwf	??___ftmul+1
  5594  0A35  0837               	movf	___ftmul@f2+2,w
  5595  0A36  00BA               	movwf	??___ftmul+2
  5596  0A37  1003               	clrc
  5597  0A38  0D39               	rlf	??___ftmul+1,w
  5598  0A39  0D3A               	rlf	??___ftmul+2,w
  5599  0A3A  00BB               	movwf	??___ftmul+3
  5600  0A3B  083B               	movf	??___ftmul+3,w
  5601  0A3C  00C1               	movwf	___ftmul@sign
  5602  0A3D  0841               	movf	___ftmul@sign,w
  5603  0A3E  1D03               	btfss	3,2
  5604  0A3F  2A47               	goto	l3297
  5605  0A40  3000               	movlw	0
  5606  0A41  00B2               	movwf	?___ftmul
  5607  0A42  3000               	movlw	0
  5608  0A43  00B3               	movwf	?___ftmul+1
  5609  0A44  3000               	movlw	0
  5610  0A45  00B4               	movwf	?___ftmul+2
  5611  0A46  0008               	return
  5612  0A47                     l3297:	
  5613  0A47  0841               	movf	___ftmul@sign,w
  5614  0A48  3E7B               	addlw	123
  5615  0A49  00B8               	movwf	??___ftmul
  5616  0A4A  0838               	movf	??___ftmul,w
  5617  0A4B  07BC               	addwf	___ftmul@exp,f
  5618  0A4C  0832               	movf	___ftmul@f1,w
  5619  0A4D  00B8               	movwf	??___ftmul
  5620  0A4E  0833               	movf	___ftmul@f1+1,w
  5621  0A4F  00B9               	movwf	??___ftmul+1
  5622  0A50  0834               	movf	___ftmul@f1+2,w
  5623  0A51  00BA               	movwf	??___ftmul+2
  5624  0A52  3010               	movlw	16
  5625  0A53                     u4385:	
  5626  0A53  36BA               	lsrf	??___ftmul+2,f
  5627  0A54  0CB9               	rrf	??___ftmul+1,f
  5628  0A55  0CB8               	rrf	??___ftmul,f
  5629  0A56  0B89               	decfsz	9,f
  5630  0A57  2A53               	goto	u4385
  5631  0A58  0838               	movf	??___ftmul,w
  5632  0A59  00BB               	movwf	??___ftmul+3
  5633  0A5A  083B               	movf	??___ftmul+3,w
  5634  0A5B  00C1               	movwf	___ftmul@sign
  5635  0A5C  0835               	movf	___ftmul@f2,w
  5636  0A5D  00B8               	movwf	??___ftmul
  5637  0A5E  0836               	movf	___ftmul@f2+1,w
  5638  0A5F  00B9               	movwf	??___ftmul+1
  5639  0A60  0837               	movf	___ftmul@f2+2,w
  5640  0A61  00BA               	movwf	??___ftmul+2
  5641  0A62  3010               	movlw	16
  5642  0A63                     u4395:	
  5643  0A63  36BA               	lsrf	??___ftmul+2,f
  5644  0A64  0CB9               	rrf	??___ftmul+1,f
  5645  0A65  0CB8               	rrf	??___ftmul,f
  5646  0A66  0B89               	decfsz	9,f
  5647  0A67  2A63               	goto	u4395
  5648  0A68  0838               	movf	??___ftmul,w
  5649  0A69  00BB               	movwf	??___ftmul+3
  5650  0A6A  083B               	movf	??___ftmul+3,w
  5651  0A6B  06C1               	xorwf	___ftmul@sign,f
  5652  0A6C  3080               	movlw	128
  5653  0A6D  00B8               	movwf	??___ftmul
  5654  0A6E  0838               	movf	??___ftmul,w
  5655  0A6F  05C1               	andwf	___ftmul@sign,f
  5656  0A70  17B3               	bsf	___ftmul@f1+1,7
  5657  0A71  17B6               	bsf	___ftmul@f2+1,7
  5658  0A72  30FF               	movlw	255
  5659  0A73  05B5               	andwf	___ftmul@f2,f
  5660  0A74  30FF               	movlw	255
  5661  0A75  05B6               	andwf	___ftmul@f2+1,f
  5662  0A76  3000               	movlw	0
  5663  0A77  05B7               	andwf	___ftmul@f2+2,f
  5664  0A78  3000               	movlw	0
  5665  0A79  00BD               	movwf	___ftmul@f3_as_product
  5666  0A7A  3000               	movlw	0
  5667  0A7B  00BE               	movwf	___ftmul@f3_as_product+1
  5668  0A7C  3000               	movlw	0
  5669  0A7D  00BF               	movwf	___ftmul@f3_as_product+2
  5670  0A7E  3007               	movlw	7
  5671  0A7F  00B8               	movwf	??___ftmul
  5672  0A80  0838               	movf	??___ftmul,w
  5673  0A81  00C0               	movwf	___ftmul@cntr
  5674  0A82                     l3309:	
  5675  0A82  1C32               	btfss	___ftmul@f1,0
  5676  0A83  2A8A               	goto	l3313
  5677  0A84  0835               	movf	___ftmul@f2,w
  5678  0A85  07BD               	addwf	___ftmul@f3_as_product,f
  5679  0A86  0836               	movf	___ftmul@f2+1,w
  5680  0A87  3DBE               	addwfc	___ftmul@f3_as_product+1,f
  5681  0A88  0837               	movf	___ftmul@f2+2,w
  5682  0A89  3DBF               	addwfc	___ftmul@f3_as_product+2,f
  5683  0A8A                     l3313:	
  5684  0A8A  3001               	movlw	1
  5685  0A8B                     u4415:	
  5686  0A8B  36B4               	lsrf	___ftmul@f1+2,f
  5687  0A8C  0CB3               	rrf	___ftmul@f1+1,f
  5688  0A8D  0CB2               	rrf	___ftmul@f1,f
  5689  0A8E  0B89               	decfsz	9,f
  5690  0A8F  2A8B               	goto	u4415
  5691  0A90  3001               	movlw	1
  5692  0A91                     u4425:	
  5693  0A91  35B5               	lslf	___ftmul@f2,f
  5694  0A92  0DB6               	rlf	___ftmul@f2+1,f
  5695  0A93  0DB7               	rlf	___ftmul@f2+2,f
  5696  0A94  0B89               	decfsz	9,f
  5697  0A95  2A91               	goto	u4425
  5698  0A96  3001               	movlw	1
  5699  0A97  02C0               	subwf	___ftmul@cntr,f
  5700  0A98  1D03               	btfss	3,2
  5701  0A99  2A82               	goto	l3309
  5702  0A9A  3009               	movlw	9
  5703  0A9B  00B8               	movwf	??___ftmul
  5704  0A9C  0838               	movf	??___ftmul,w
  5705  0A9D  00C0               	movwf	___ftmul@cntr
  5706  0A9E                     l3321:	
  5707  0A9E  1C32               	btfss	___ftmul@f1,0
  5708  0A9F  2AA6               	goto	l3325
  5709  0AA0  0835               	movf	___ftmul@f2,w
  5710  0AA1  07BD               	addwf	___ftmul@f3_as_product,f
  5711  0AA2  0836               	movf	___ftmul@f2+1,w
  5712  0AA3  3DBE               	addwfc	___ftmul@f3_as_product+1,f
  5713  0AA4  0837               	movf	___ftmul@f2+2,w
  5714  0AA5  3DBF               	addwfc	___ftmul@f3_as_product+2,f
  5715  0AA6                     l3325:	
  5716  0AA6  3001               	movlw	1
  5717  0AA7                     u4455:	
  5718  0AA7  36B4               	lsrf	___ftmul@f1+2,f
  5719  0AA8  0CB3               	rrf	___ftmul@f1+1,f
  5720  0AA9  0CB2               	rrf	___ftmul@f1,f
  5721  0AAA  0B89               	decfsz	9,f
  5722  0AAB  2AA7               	goto	u4455
  5723  0AAC  3001               	movlw	1
  5724  0AAD                     u4465:	
  5725  0AAD  36BF               	lsrf	___ftmul@f3_as_product+2,f
  5726  0AAE  0CBE               	rrf	___ftmul@f3_as_product+1,f
  5727  0AAF  0CBD               	rrf	___ftmul@f3_as_product,f
  5728  0AB0  0B89               	decfsz	9,f
  5729  0AB1  2AAD               	goto	u4465
  5730  0AB2  3001               	movlw	1
  5731  0AB3  02C0               	subwf	___ftmul@cntr,f
  5732  0AB4  1D03               	btfss	3,2
  5733  0AB5  2A9E               	goto	l3321
  5734  0AB6  083D               	movf	___ftmul@f3_as_product,w
  5735  0AB7  00A4               	movwf	___ftpack@arg
  5736  0AB8  083E               	movf	___ftmul@f3_as_product+1,w
  5737  0AB9  00A5               	movwf	___ftpack@arg+1
  5738  0ABA  083F               	movf	___ftmul@f3_as_product+2,w
  5739  0ABB  00A6               	movwf	___ftpack@arg+2
  5740  0ABC  083C               	movf	___ftmul@exp,w
  5741  0ABD  00B8               	movwf	??___ftmul
  5742  0ABE  0838               	movf	??___ftmul,w
  5743  0ABF  00A7               	movwf	___ftpack@exp
  5744  0AC0  0841               	movf	___ftmul@sign,w
  5745  0AC1  00B9               	movwf	??___ftmul+1
  5746  0AC2  0839               	movf	??___ftmul+1,w
  5747  0AC3  00A8               	movwf	___ftpack@sign
  5748  0AC4  3195  25F9         	fcall	___ftpack
  5749  0AC6  0140               	movlb	0	; select bank0
  5750  0AC7  0824               	movf	?___ftpack,w
  5751  0AC8  00B2               	movwf	?___ftmul
  5752  0AC9  0825               	movf	?___ftpack+1,w
  5753  0ACA  00B3               	movwf	?___ftmul+1
  5754  0ACB  0826               	movf	?___ftpack+2,w
  5755  0ACC  00B4               	movwf	?___ftmul+2
  5756  0ACD  0008               	return
  5757  0ACE                     __end_of___ftmul:	
  5758                           
  5759                           	psect	text11
  5760  0BA7                     __ptext11:	
  5761 ;; *************** function ___ftadd *****************
  5762 ;; Defined at:
  5763 ;;		line 86 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\ftadd.c"
  5764 ;; Parameters:    Size  Location     Type
  5765 ;;  f1              3   50[BANK0 ] float 
  5766 ;;  f2              3   53[BANK0 ] float 
  5767 ;; Auto vars:     Size  Location     Type
  5768 ;;  exp1            1   62[BANK0 ] unsigned char 
  5769 ;;  exp2            1   61[BANK0 ] unsigned char 
  5770 ;;  sign            1   60[BANK0 ] unsigned char 
  5771 ;; Return value:  Size  Location     Type
  5772 ;;                  3   50[BANK0 ] float 
  5773 ;; Registers used:
  5774 ;;		wreg, status,2, status,0, pclath, cstack
  5775 ;; Tracked objects:
  5776 ;;		On entry : 0/0
  5777 ;;		On exit  : 0/0
  5778 ;;		Unchanged: 0/0
  5779 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
  5780 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  5781 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  5782 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  5783 ;;      Totals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  5784 ;;Total ram usage:       13 bytes
  5785 ;; Hardware stack levels used:    1
  5786 ;; Hardware stack levels required when called:    3
  5787 ;; This function calls:
  5788 ;;		___ftpack
  5789 ;; This function is called by:
  5790 ;;		_leerref
  5791 ;;		_main
  5792 ;;		_log
  5793 ;;		_eval_poly
  5794 ;; This function uses a non-reentrant model
  5795 ;;
  5796                           
  5797                           
  5798                           ;psect for function ___ftadd
  5799  0BA7                     ___ftadd:	
  5800                           
  5801                           ;incstack = 0
  5802                           ; Regs used in ___ftadd: [wreg+status,2+status,0+pclath+cstack]
  5803  0BA7  0140               	movlb	0	; select bank0
  5804  0BA8  0852               	movf	___ftadd@f1,w
  5805  0BA9  00D8               	movwf	??___ftadd
  5806  0BAA  0853               	movf	___ftadd@f1+1,w
  5807  0BAB  00D9               	movwf	??___ftadd+1
  5808  0BAC  0854               	movf	___ftadd@f1+2,w
  5809  0BAD  00DA               	movwf	??___ftadd+2
  5810  0BAE  1003               	clrc
  5811  0BAF  0D59               	rlf	??___ftadd+1,w
  5812  0BB0  0D5A               	rlf	??___ftadd+2,w
  5813  0BB1  00DB               	movwf	??___ftadd+3
  5814  0BB2  085B               	movf	??___ftadd+3,w
  5815  0BB3  00DE               	movwf	___ftadd@exp1
  5816  0BB4  0855               	movf	___ftadd@f2,w
  5817  0BB5  00D8               	movwf	??___ftadd
  5818  0BB6  0856               	movf	___ftadd@f2+1,w
  5819  0BB7  00D9               	movwf	??___ftadd+1
  5820  0BB8  0857               	movf	___ftadd@f2+2,w
  5821  0BB9  00DA               	movwf	??___ftadd+2
  5822  0BBA  1003               	clrc
  5823  0BBB  0D59               	rlf	??___ftadd+1,w
  5824  0BBC  0D5A               	rlf	??___ftadd+2,w
  5825  0BBD  00DB               	movwf	??___ftadd+3
  5826  0BBE  085B               	movf	??___ftadd+3,w
  5827  0BBF  00DD               	movwf	___ftadd@exp2
  5828  0BC0  085E               	movf	___ftadd@exp1,w
  5829  0BC1  1903               	btfsc	3,2
  5830  0BC2  2BCF               	goto	l3221
  5831  0BC3  085D               	movf	___ftadd@exp2,w
  5832  0BC4  025E               	subwf	___ftadd@exp1,w
  5833  0BC5  1803               	skipnc
  5834  0BC6  2BD6               	goto	l3225
  5835  0BC7  035E               	decf	___ftadd@exp1,w
  5836  0BC8  3AFF               	xorlw	255
  5837  0BC9  075D               	addwf	___ftadd@exp2,w
  5838  0BCA  00D8               	movwf	??___ftadd
  5839  0BCB  3019               	movlw	25
  5840  0BCC  0258               	subwf	??___ftadd,w
  5841  0BCD  1C03               	skipc
  5842  0BCE  2BD6               	goto	l3225
  5843  0BCF                     l3221:	
  5844  0BCF  0855               	movf	___ftadd@f2,w
  5845  0BD0  00D2               	movwf	?___ftadd
  5846  0BD1  0856               	movf	___ftadd@f2+1,w
  5847  0BD2  00D3               	movwf	?___ftadd+1
  5848  0BD3  0857               	movf	___ftadd@f2+2,w
  5849  0BD4  00D4               	movwf	?___ftadd+2
  5850  0BD5  0008               	return
  5851  0BD6                     l3225:	
  5852  0BD6  085D               	movf	___ftadd@exp2,w
  5853  0BD7  1903               	btfsc	3,2
  5854  0BD8  0008               	return
  5855  0BD9  085E               	movf	___ftadd@exp1,w
  5856  0BDA  025D               	subwf	___ftadd@exp2,w
  5857  0BDB  1803               	skipnc
  5858  0BDC  2BE5               	goto	l3231
  5859  0BDD  035D               	decf	___ftadd@exp2,w
  5860  0BDE  3AFF               	xorlw	255
  5861  0BDF  075E               	addwf	___ftadd@exp1,w
  5862  0BE0  00D8               	movwf	??___ftadd
  5863  0BE1  3019               	movlw	25
  5864  0BE2  0258               	subwf	??___ftadd,w
  5865  0BE3  1803               	btfsc	3,0
  5866  0BE4  0008               	return
  5867  0BE5                     l3231:	
  5868  0BE5  3006               	movlw	6
  5869  0BE6  00D8               	movwf	??___ftadd
  5870  0BE7  0858               	movf	??___ftadd,w
  5871  0BE8  00DC               	movwf	___ftadd@sign
  5872  0BE9  1BD4               	btfsc	___ftadd@f1+2,7
  5873  0BEA  17DC               	bsf	___ftadd@sign,7
  5874  0BEB  1BD7               	btfsc	___ftadd@f2+2,7
  5875  0BEC  175C               	bsf	___ftadd@sign,6
  5876  0BED  17D3               	bsf	___ftadd@f1+1,7
  5877  0BEE  30FF               	movlw	255
  5878  0BEF  05D2               	andwf	___ftadd@f1,f
  5879  0BF0  30FF               	movlw	255
  5880  0BF1  05D3               	andwf	___ftadd@f1+1,f
  5881  0BF2  3000               	movlw	0
  5882  0BF3  05D4               	andwf	___ftadd@f1+2,f
  5883  0BF4  17D6               	bsf	___ftadd@f2+1,7
  5884  0BF5  30FF               	movlw	255
  5885  0BF6  05D5               	andwf	___ftadd@f2,f
  5886  0BF7  30FF               	movlw	255
  5887  0BF8  05D6               	andwf	___ftadd@f2+1,f
  5888  0BF9  3000               	movlw	0
  5889  0BFA  05D7               	andwf	___ftadd@f2+2,f
  5890  0BFB  085D               	movf	___ftadd@exp2,w
  5891  0BFC  025E               	subwf	___ftadd@exp1,w
  5892  0BFD  1803               	skipnc
  5893  0BFE  2C21               	goto	l3253
  5894  0BFF                     l3243:	
  5895  0BFF  3001               	movlw	1
  5896  0C00                     u4225:	
  5897  0C00  35D5               	lslf	___ftadd@f2,f
  5898  0C01  0DD6               	rlf	___ftadd@f2+1,f
  5899  0C02  0DD7               	rlf	___ftadd@f2+2,f
  5900  0C03  0B89               	decfsz	9,f
  5901  0C04  2C00               	goto	u4225
  5902  0C05  3001               	movlw	1
  5903  0C06  02DD               	subwf	___ftadd@exp2,f
  5904  0C07  085D               	movf	___ftadd@exp2,w
  5905  0C08  065E               	xorwf	___ftadd@exp1,w
  5906  0C09  1903               	skipnz
  5907  0C0A  2C1C               	goto	l3251
  5908  0C0B  3001               	movlw	1
  5909  0C0C  02DC               	subwf	___ftadd@sign,f
  5910  0C0D  085C               	movf	___ftadd@sign,w
  5911  0C0E  3907               	andlw	7
  5912  0C0F  1903               	btfsc	3,2
  5913  0C10  2C1C               	goto	l3251
  5914  0C11  2BFF               	goto	l3243
  5915  0C12                     l3249:	
  5916  0C12  3001               	movlw	1
  5917  0C13                     u4255:	
  5918  0C13  36D4               	lsrf	___ftadd@f1+2,f
  5919  0C14  0CD3               	rrf	___ftadd@f1+1,f
  5920  0C15  0CD2               	rrf	___ftadd@f1,f
  5921  0C16  0B89               	decfsz	9,f
  5922  0C17  2C13               	goto	u4255
  5923  0C18  3001               	movlw	1
  5924  0C19  00D8               	movwf	??___ftadd
  5925  0C1A  0858               	movf	??___ftadd,w
  5926  0C1B  07DE               	addwf	___ftadd@exp1,f
  5927  0C1C                     l3251:	
  5928  0C1C  085E               	movf	___ftadd@exp1,w
  5929  0C1D  065D               	xorwf	___ftadd@exp2,w
  5930  0C1E  1903               	btfsc	3,2
  5931  0C1F  2C46               	goto	l660
  5932  0C20  2C12               	goto	l3249
  5933  0C21                     l3253:	
  5934  0C21  085E               	movf	___ftadd@exp1,w
  5935  0C22  025D               	subwf	___ftadd@exp2,w
  5936  0C23  1803               	skipnc
  5937  0C24  2C46               	goto	l660
  5938  0C25                     l3255:	
  5939  0C25  3001               	movlw	1
  5940  0C26                     u4285:	
  5941  0C26  35D2               	lslf	___ftadd@f1,f
  5942  0C27  0DD3               	rlf	___ftadd@f1+1,f
  5943  0C28  0DD4               	rlf	___ftadd@f1+2,f
  5944  0C29  0B89               	decfsz	9,f
  5945  0C2A  2C26               	goto	u4285
  5946  0C2B  3001               	movlw	1
  5947  0C2C  02DE               	subwf	___ftadd@exp1,f
  5948  0C2D  085D               	movf	___ftadd@exp2,w
  5949  0C2E  065E               	xorwf	___ftadd@exp1,w
  5950  0C2F  1903               	skipnz
  5951  0C30  2C42               	goto	l3263
  5952  0C31  3001               	movlw	1
  5953  0C32  02DC               	subwf	___ftadd@sign,f
  5954  0C33  085C               	movf	___ftadd@sign,w
  5955  0C34  3907               	andlw	7
  5956  0C35  1903               	btfsc	3,2
  5957  0C36  2C42               	goto	l3263
  5958  0C37  2C25               	goto	l3255
  5959  0C38                     l3261:	
  5960  0C38  3001               	movlw	1
  5961  0C39                     u4315:	
  5962  0C39  36D7               	lsrf	___ftadd@f2+2,f
  5963  0C3A  0CD6               	rrf	___ftadd@f2+1,f
  5964  0C3B  0CD5               	rrf	___ftadd@f2,f
  5965  0C3C  0B89               	decfsz	9,f
  5966  0C3D  2C39               	goto	u4315
  5967  0C3E  3001               	movlw	1
  5968  0C3F  00D8               	movwf	??___ftadd
  5969  0C40  0858               	movf	??___ftadd,w
  5970  0C41  07DD               	addwf	___ftadd@exp2,f
  5971  0C42                     l3263:	
  5972  0C42  085E               	movf	___ftadd@exp1,w
  5973  0C43  065D               	xorwf	___ftadd@exp2,w
  5974  0C44  1D03               	skipz
  5975  0C45  2C38               	goto	l3261
  5976  0C46                     l660:	
  5977  0C46  1FDC               	btfss	___ftadd@sign,7
  5978  0C47  2C58               	goto	l3267
  5979  0C48  30FF               	movlw	255
  5980  0C49  06D2               	xorwf	___ftadd@f1,f
  5981  0C4A  30FF               	movlw	255
  5982  0C4B  06D3               	xorwf	___ftadd@f1+1,f
  5983  0C4C  30FF               	movlw	255
  5984  0C4D  06D4               	xorwf	___ftadd@f1+2,f
  5985  0C4E  3001               	movlw	1
  5986  0C4F  07D2               	addwf	___ftadd@f1,f
  5987  0C50  3000               	movlw	0
  5988  0C51  1803               	skipnc
  5989  0C52  3001               	movlw	1
  5990  0C53  07D3               	addwf	___ftadd@f1+1,f
  5991  0C54  3000               	movlw	0
  5992  0C55  1803               	skipnc
  5993  0C56  3001               	movlw	1
  5994  0C57  07D4               	addwf	___ftadd@f1+2,f
  5995  0C58                     l3267:	
  5996  0C58  1F5C               	btfss	___ftadd@sign,6
  5997  0C59  2C6A               	goto	l3271
  5998  0C5A  30FF               	movlw	255
  5999  0C5B  06D5               	xorwf	___ftadd@f2,f
  6000  0C5C  30FF               	movlw	255
  6001  0C5D  06D6               	xorwf	___ftadd@f2+1,f
  6002  0C5E  30FF               	movlw	255
  6003  0C5F  06D7               	xorwf	___ftadd@f2+2,f
  6004  0C60  3001               	movlw	1
  6005  0C61  07D5               	addwf	___ftadd@f2,f
  6006  0C62  3000               	movlw	0
  6007  0C63  1803               	skipnc
  6008  0C64  3001               	movlw	1
  6009  0C65  07D6               	addwf	___ftadd@f2+1,f
  6010  0C66  3000               	movlw	0
  6011  0C67  1803               	skipnc
  6012  0C68  3001               	movlw	1
  6013  0C69  07D7               	addwf	___ftadd@f2+2,f
  6014  0C6A                     l3271:	
  6015  0C6A  01DC               	clrf	___ftadd@sign
  6016  0C6B  0852               	movf	___ftadd@f1,w
  6017  0C6C  07D5               	addwf	___ftadd@f2,f
  6018  0C6D  0853               	movf	___ftadd@f1+1,w
  6019  0C6E  3DD6               	addwfc	___ftadd@f2+1,f
  6020  0C6F  0854               	movf	___ftadd@f1+2,w
  6021  0C70  3DD7               	addwfc	___ftadd@f2+2,f
  6022  0C71  1FD7               	btfss	___ftadd@f2+2,7
  6023  0C72  2C85               	goto	l3281
  6024  0C73  30FF               	movlw	255
  6025  0C74  06D5               	xorwf	___ftadd@f2,f
  6026  0C75  30FF               	movlw	255
  6027  0C76  06D6               	xorwf	___ftadd@f2+1,f
  6028  0C77  30FF               	movlw	255
  6029  0C78  06D7               	xorwf	___ftadd@f2+2,f
  6030  0C79  3001               	movlw	1
  6031  0C7A  07D5               	addwf	___ftadd@f2,f
  6032  0C7B  3000               	movlw	0
  6033  0C7C  1803               	skipnc
  6034  0C7D  3001               	movlw	1
  6035  0C7E  07D6               	addwf	___ftadd@f2+1,f
  6036  0C7F  3000               	movlw	0
  6037  0C80  1803               	skipnc
  6038  0C81  3001               	movlw	1
  6039  0C82  07D7               	addwf	___ftadd@f2+2,f
  6040  0C83  01DC               	clrf	___ftadd@sign
  6041  0C84  0ADC               	incf	___ftadd@sign,f
  6042  0C85                     l3281:	
  6043  0C85  0855               	movf	___ftadd@f2,w
  6044  0C86  00A4               	movwf	___ftpack@arg
  6045  0C87  0856               	movf	___ftadd@f2+1,w
  6046  0C88  00A5               	movwf	___ftpack@arg+1
  6047  0C89  0857               	movf	___ftadd@f2+2,w
  6048  0C8A  00A6               	movwf	___ftpack@arg+2
  6049  0C8B  085E               	movf	___ftadd@exp1,w
  6050  0C8C  00D8               	movwf	??___ftadd
  6051  0C8D  0858               	movf	??___ftadd,w
  6052  0C8E  00A7               	movwf	___ftpack@exp
  6053  0C8F  085C               	movf	___ftadd@sign,w
  6054  0C90  00D9               	movwf	??___ftadd+1
  6055  0C91  0859               	movf	??___ftadd+1,w
  6056  0C92  00A8               	movwf	___ftpack@sign
  6057  0C93  3195  25F9         	fcall	___ftpack
  6058  0C95  0140               	movlb	0	; select bank0
  6059  0C96  0824               	movf	?___ftpack,w
  6060  0C97  00D2               	movwf	?___ftadd
  6061  0C98  0825               	movf	?___ftpack+1,w
  6062  0C99  00D3               	movwf	?___ftadd+1
  6063  0C9A  0826               	movf	?___ftpack+2,w
  6064  0C9B  00D4               	movwf	?___ftadd+2
  6065  0C9C  0008               	return
  6066  0C9D                     __end_of___ftadd:	
  6067                           
  6068                           	psect	text12
  6069  152F                     __ptext12:	
  6070 ;; *************** function ___ftge *****************
  6071 ;; Defined at:
  6072 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\ftge.c"
  6073 ;; Parameters:    Size  Location     Type
  6074 ;;  ff1             3    4[BANK0 ] float 
  6075 ;;  ff2             3    7[BANK0 ] float 
  6076 ;; Auto vars:     Size  Location     Type
  6077 ;;		None
  6078 ;; Return value:  Size  Location     Type
  6079 ;;		None               void
  6080 ;; Registers used:
  6081 ;;		wreg, status,2, status,0
  6082 ;; Tracked objects:
  6083 ;;		On entry : 0/0
  6084 ;;		On exit  : 0/0
  6085 ;;		Unchanged: 0/0
  6086 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
  6087 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  6088 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  6089 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  6090 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  6091 ;;Total ram usage:        9 bytes
  6092 ;; Hardware stack levels used:    1
  6093 ;; Hardware stack levels required when called:    2
  6094 ;; This function calls:
  6095 ;;		Nothing
  6096 ;; This function is called by:
  6097 ;;		_log
  6098 ;; This function uses a non-reentrant model
  6099 ;;
  6100                           
  6101                           
  6102                           ;psect for function ___ftge
  6103  152F                     ___ftge:	
  6104                           
  6105                           ;incstack = 0
  6106                           ; Regs used in ___ftge: [wreg+status,2+status,0]
  6107  152F  0140               	movlb	0	; select bank0
  6108  1530  1FA6               	btfss	___ftge@ff1+2,7
  6109  1531  2D46               	goto	l3351
  6110  1532  0924               	comf	___ftge@ff1,w
  6111  1533  00AA               	movwf	??___ftge
  6112  1534  0925               	comf	___ftge@ff1+1,w
  6113  1535  00AB               	movwf	??___ftge+1
  6114  1536  0926               	comf	___ftge@ff1+2,w
  6115  1537  00AC               	movwf	??___ftge+2
  6116  1538  0AAA               	incf	??___ftge,f
  6117  1539  1903               	skipnz
  6118  153A  0AAB               	incf	??___ftge+1,f
  6119  153B  1903               	skipnz
  6120  153C  0AAC               	incf	??___ftge+2,f
  6121  153D  3000               	movlw	0
  6122  153E  072A               	addwf	??___ftge,w
  6123  153F  00A4               	movwf	___ftge@ff1
  6124  1540  3000               	movlw	0
  6125  1541  3D2B               	addwfc	??___ftge+1,w
  6126  1542  00A5               	movwf	___ftge@ff1+1
  6127  1543  3080               	movlw	128
  6128  1544  3D2C               	addwfc	??___ftge+2,w
  6129  1545  00A6               	movwf	___ftge@ff1+2
  6130  1546                     l3351:	
  6131  1546  1FA9               	btfss	___ftge@ff2+2,7
  6132  1547  2D5C               	goto	l3355
  6133  1548  0927               	comf	___ftge@ff2,w
  6134  1549  00AA               	movwf	??___ftge
  6135  154A  0928               	comf	___ftge@ff2+1,w
  6136  154B  00AB               	movwf	??___ftge+1
  6137  154C  0929               	comf	___ftge@ff2+2,w
  6138  154D  00AC               	movwf	??___ftge+2
  6139  154E  0AAA               	incf	??___ftge,f
  6140  154F  1903               	skipnz
  6141  1550  0AAB               	incf	??___ftge+1,f
  6142  1551  1903               	skipnz
  6143  1552  0AAC               	incf	??___ftge+2,f
  6144  1553  3000               	movlw	0
  6145  1554  072A               	addwf	??___ftge,w
  6146  1555  00A7               	movwf	___ftge@ff2
  6147  1556  3000               	movlw	0
  6148  1557  3D2B               	addwfc	??___ftge+1,w
  6149  1558  00A8               	movwf	___ftge@ff2+1
  6150  1559  3080               	movlw	128
  6151  155A  3D2C               	addwfc	??___ftge+2,w
  6152  155B  00A9               	movwf	___ftge@ff2+2
  6153  155C                     l3355:	
  6154  155C  3080               	movlw	128
  6155  155D  06A6               	xorwf	___ftge@ff1+2,f
  6156  155E  3080               	movlw	128
  6157  155F  06A9               	xorwf	___ftge@ff2+2,f
  6158  1560  0829               	movf	___ftge@ff2+2,w
  6159  1561  0226               	subwf	___ftge@ff1+2,w
  6160  1562  1D03               	skipz
  6161  1563  0008               	return
  6162  1564  0828               	movf	___ftge@ff2+1,w
  6163  1565  0225               	subwf	___ftge@ff1+1,w
  6164  1566  1D03               	skipz
  6165  1567  0008               	return
  6166  1568  0827               	movf	___ftge@ff2,w
  6167  1569  0224               	subwf	___ftge@ff1,w
  6168  156A  0008               	return
  6169  156B                     __end_of___ftge:	
  6170                           
  6171                           	psect	text13
  6172  143E                     __ptext13:	
  6173 ;; *************** function ___awtoft *****************
  6174 ;; Defined at:
  6175 ;;		line 32 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\awtoft.c"
  6176 ;; Parameters:    Size  Location     Type
  6177 ;;  c               2   12[BANK0 ] int 
  6178 ;; Auto vars:     Size  Location     Type
  6179 ;;  sign            1   17[BANK0 ] unsigned char 
  6180 ;; Return value:  Size  Location     Type
  6181 ;;                  3   12[BANK0 ] float 
  6182 ;; Registers used:
  6183 ;;		wreg, status,2, status,0, pclath, cstack
  6184 ;; Tracked objects:
  6185 ;;		On entry : 0/0
  6186 ;;		On exit  : 0/0
  6187 ;;		Unchanged: 0/0
  6188 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
  6189 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  6190 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  6191 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  6192 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  6193 ;;Total ram usage:        6 bytes
  6194 ;; Hardware stack levels used:    1
  6195 ;; Hardware stack levels required when called:    3
  6196 ;; This function calls:
  6197 ;;		___ftpack
  6198 ;; This function is called by:
  6199 ;;		_leerref
  6200 ;;		_main
  6201 ;;		_log
  6202 ;; This function uses a non-reentrant model
  6203 ;;
  6204                           
  6205                           
  6206                           ;psect for function ___awtoft
  6207  143E                     ___awtoft:	
  6208                           
  6209                           ;incstack = 0
  6210                           ; Regs used in ___awtoft: [wreg+status,2+status,0+pclath+cstack]
  6211  143E  0140               	movlb	0	; select bank0
  6212  143F  01B1               	clrf	___awtoft@sign
  6213  1440  1FAD               	btfss	___awtoft@c+1,7
  6214  1441  2C49               	goto	l3343
  6215  1442  09AC               	comf	___awtoft@c,f
  6216  1443  09AD               	comf	___awtoft@c+1,f
  6217  1444  0AAC               	incf	___awtoft@c,f
  6218  1445  1903               	skipnz
  6219  1446  0AAD               	incf	___awtoft@c+1,f
  6220  1447  01B1               	clrf	___awtoft@sign
  6221  1448  0AB1               	incf	___awtoft@sign,f
  6222  1449                     l3343:	
  6223  1449  082C               	movf	___awtoft@c,w
  6224  144A  00A4               	movwf	___ftpack@arg
  6225  144B  082D               	movf	___awtoft@c+1,w
  6226  144C  00A5               	movwf	___ftpack@arg+1
  6227  144D  01A6               	clrf	___ftpack@arg+2
  6228  144E  308E               	movlw	142
  6229  144F  00AF               	movwf	??___awtoft
  6230  1450  082F               	movf	??___awtoft,w
  6231  1451  00A7               	movwf	___ftpack@exp
  6232  1452  0831               	movf	___awtoft@sign,w
  6233  1453  00B0               	movwf	??___awtoft+1
  6234  1454  0830               	movf	??___awtoft+1,w
  6235  1455  00A8               	movwf	___ftpack@sign
  6236  1456  3195  25F9         	fcall	___ftpack
  6237  1458  0140               	movlb	0	; select bank0
  6238  1459  0824               	movf	?___ftpack,w
  6239  145A  00AC               	movwf	?___awtoft
  6240  145B  0825               	movf	?___ftpack+1,w
  6241  145C  00AD               	movwf	?___awtoft+1
  6242  145D  0826               	movf	?___ftpack+2,w
  6243  145E  00AE               	movwf	?___awtoft+2
  6244  145F  0008               	return
  6245  1460                     __end_of___awtoft:	
  6246                           
  6247                           	psect	text14
  6248  0825                     __ptext14:	
  6249 ;; *************** function ___fttol *****************
  6250 ;; Defined at:
  6251 ;;		line 44 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\fttol.c"
  6252 ;; Parameters:    Size  Location     Type
  6253 ;;  f1              3   63[BANK0 ] float 
  6254 ;; Auto vars:     Size  Location     Type
  6255 ;;  lval            4    1[BANK1 ] unsigned long 
  6256 ;;  exp1            1    5[BANK1 ] unsigned char 
  6257 ;;  sign1           1    0[BANK1 ] unsigned char 
  6258 ;; Return value:  Size  Location     Type
  6259 ;;                  4   63[BANK0 ] long 
  6260 ;; Registers used:
  6261 ;;		wreg, status,2, status,0
  6262 ;; Tracked objects:
  6263 ;;		On entry : 0/0
  6264 ;;		On exit  : 0/0
  6265 ;;		Unchanged: 0/0
  6266 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
  6267 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  6268 ;;      Locals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  6269 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  6270 ;;      Totals:         0       8       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  6271 ;;Total ram usage:       14 bytes
  6272 ;; Hardware stack levels used:    1
  6273 ;; Hardware stack levels required when called:    2
  6274 ;; This function calls:
  6275 ;;		Nothing
  6276 ;; This function is called by:
  6277 ;;		_leerref
  6278 ;;		_main
  6279 ;; This function uses a non-reentrant model
  6280 ;;
  6281                           
  6282                           
  6283                           ;psect for function ___fttol
  6284  0825                     ___fttol:	
  6285                           
  6286                           ;incstack = 0
  6287                           ; Regs used in ___fttol: [wreg+status,2+status,0]
  6288  0825  0140               	movlb	0	; select bank0
  6289  0826  085F               	movf	___fttol@f1,w
  6290  0827  00E3               	movwf	??___fttol
  6291  0828  0860               	movf	___fttol@f1+1,w
  6292  0829  00E4               	movwf	??___fttol+1
  6293  082A  0861               	movf	___fttol@f1+2,w
  6294  082B  00E5               	movwf	??___fttol+2
  6295  082C  1003               	clrc
  6296  082D  0D64               	rlf	??___fttol+1,w
  6297  082E  0D65               	rlf	??___fttol+2,w
  6298  082F  00E6               	movwf	??___fttol+3
  6299  0830  0866               	movf	??___fttol+3,w
  6300  0831  0141               	movlb	1	; select bank1
  6301  0832  00C7               	movwf	___fttol@exp1^(0+128)
  6302  0833  0847               	movf	___fttol@exp1^(0+128),w
  6303  0834  1D03               	btfss	3,2
  6304  0835  2840               	goto	l3525
  6305  0836  3000               	movlw	0
  6306  0837  0140               	movlb	0	; select bank0
  6307  0838  00E2               	movwf	?___fttol+3
  6308  0839  3000               	movlw	0
  6309  083A  00E1               	movwf	?___fttol+2
  6310  083B  3000               	movlw	0
  6311  083C  00E0               	movwf	?___fttol+1
  6312  083D  3000               	movlw	0
  6313  083E  00DF               	movwf	?___fttol
  6314  083F  0008               	return
  6315  0840                     l3525:	
  6316  0840  0140               	movlb	0	; select bank0
  6317  0841  085F               	movf	___fttol@f1,w
  6318  0842  00E3               	movwf	??___fttol
  6319  0843  0860               	movf	___fttol@f1+1,w
  6320  0844  00E4               	movwf	??___fttol+1
  6321  0845  0861               	movf	___fttol@f1+2,w
  6322  0846  00E5               	movwf	??___fttol+2
  6323  0847  3017               	movlw	23
  6324  0848                     u4795:	
  6325  0848  36E5               	lsrf	??___fttol+2,f
  6326  0849  0CE4               	rrf	??___fttol+1,f
  6327  084A  0CE3               	rrf	??___fttol,f
  6328  084B  0B89               	decfsz	9,f
  6329  084C  2848               	goto	u4795
  6330  084D  0863               	movf	??___fttol,w
  6331  084E  00E6               	movwf	??___fttol+3
  6332  084F  0866               	movf	??___fttol+3,w
  6333  0850  0141               	movlb	1	; select bank1
  6334  0851  00C2               	movwf	___fttol@sign1^(0+128)
  6335  0852  0140               	movlb	0	; select bank0
  6336  0853  17E0               	bsf	___fttol@f1+1,7
  6337  0854  30FF               	movlw	255
  6338  0855  05DF               	andwf	___fttol@f1,f
  6339  0856  30FF               	movlw	255
  6340  0857  05E0               	andwf	___fttol@f1+1,f
  6341  0858  3000               	movlw	0
  6342  0859  05E1               	andwf	___fttol@f1+2,f
  6343  085A  085F               	movf	___fttol@f1,w
  6344  085B  0141               	movlb	1	; select bank1
  6345  085C  00C3               	movwf	___fttol@lval^(0+128)
  6346  085D  0140               	movlb	0	; select bank0
  6347  085E  0860               	movf	___fttol@f1+1,w
  6348  085F  0141               	movlb	1	; select bank1
  6349  0860  00C4               	movwf	(___fttol@lval^(0+128)+1)
  6350  0861  0140               	movlb	0	; select bank0
  6351  0862  0861               	movf	___fttol@f1+2,w
  6352  0863  0141               	movlb	1	; select bank1
  6353  0864  00C5               	movwf	(___fttol@lval^(0+128)+2)
  6354  0865  01C6               	clrf	(___fttol@lval^(0+128)+3)
  6355  0866  308E               	movlw	142
  6356  0867  02C7               	subwf	___fttol@exp1^(0+128),f
  6357  0868  1FC7               	btfss	___fttol@exp1^(0+128),7
  6358  0869  288A               	goto	l3545
  6359  086A  0847               	movf	___fttol@exp1^(0+128),w
  6360  086B  3A80               	xorlw	128
  6361  086C  3E8F               	addlw	143
  6362  086D  1803               	skipnc
  6363  086E  2879               	goto	l3543
  6364  086F  3000               	movlw	0
  6365  0870  0140               	movlb	0	; select bank0
  6366  0871  00E2               	movwf	?___fttol+3
  6367  0872  3000               	movlw	0
  6368  0873  00E1               	movwf	?___fttol+2
  6369  0874  3000               	movlw	0
  6370  0875  00E0               	movwf	?___fttol+1
  6371  0876  3000               	movlw	0
  6372  0877  00DF               	movwf	?___fttol
  6373  0878  0008               	return
  6374  0879                     l3543:	
  6375  0879  3001               	movlw	1
  6376  087A                     u4825:	
  6377  087A  0141               	movlb	1	; select bank1
  6378  087B  36C6               	lsrf	(___fttol@lval+3)^(0+128),f
  6379  087C  0CC5               	rrf	(___fttol@lval+2)^(0+128),f
  6380  087D  0CC4               	rrf	(___fttol@lval+1)^(0+128),f
  6381  087E  0CC3               	rrf	___fttol@lval^(0+128),f
  6382  087F  0B89               	decfsz	9,f
  6383  0880  287A               	goto	u4825
  6384  0881  3001               	movlw	1
  6385  0882  0140               	movlb	0	; select bank0
  6386  0883  00E3               	movwf	??___fttol
  6387  0884  0863               	movf	??___fttol,w
  6388  0885  0141               	movlb	1	; select bank1
  6389  0886  07C7               	addwf	___fttol@exp1^(0+128),f
  6390  0887  1903               	btfsc	3,2
  6391  0888  28A6               	goto	l3553
  6392  0889  2879               	goto	l3543
  6393  088A                     l3545:	
  6394  088A  3018               	movlw	24
  6395  088B  0247               	subwf	___fttol@exp1^(0+128),w
  6396  088C  1C03               	skipc
  6397  088D  28A2               	goto	l720
  6398  088E  3000               	movlw	0
  6399  088F  0140               	movlb	0	; select bank0
  6400  0890  00E2               	movwf	?___fttol+3
  6401  0891  3000               	movlw	0
  6402  0892  00E1               	movwf	?___fttol+2
  6403  0893  3000               	movlw	0
  6404  0894  00E0               	movwf	?___fttol+1
  6405  0895  3000               	movlw	0
  6406  0896  00DF               	movwf	?___fttol
  6407  0897  0008               	return
  6408  0898                     l3551:	
  6409  0898  3001               	movlw	1
  6410  0899                     u4855:	
  6411  0899  0141               	movlb	1	; select bank1
  6412  089A  35C3               	lslf	___fttol@lval^(0+128),f
  6413  089B  0DC4               	rlf	(___fttol@lval+1)^(0+128),f
  6414  089C  0DC5               	rlf	(___fttol@lval+2)^(0+128),f
  6415  089D  0DC6               	rlf	(___fttol@lval+3)^(0+128),f
  6416  089E  0B89               	decfsz	9,f
  6417  089F  2899               	goto	u4855
  6418  08A0  3001               	movlw	1
  6419  08A1  02C7               	subwf	___fttol@exp1^(0+128),f
  6420  08A2                     l720:	
  6421  08A2  0141               	movlb	1	; select bank1
  6422  08A3  0847               	movf	___fttol@exp1^(0+128),w
  6423  08A4  1D03               	btfss	3,2
  6424  08A5  2898               	goto	l3551
  6425  08A6                     l3553:	
  6426  08A6  0842               	movf	___fttol@sign1^(0+128),w
  6427  08A7  1903               	btfsc	3,2
  6428  08A8  28B4               	goto	l3557
  6429  08A9  09C3               	comf	___fttol@lval^(0+128),f
  6430  08AA  09C4               	comf	(___fttol@lval+1)^(0+128),f
  6431  08AB  09C5               	comf	(___fttol@lval+2)^(0+128),f
  6432  08AC  09C6               	comf	(___fttol@lval+3)^(0+128),f
  6433  08AD  0AC3               	incf	___fttol@lval^(0+128),f
  6434  08AE  1903               	skipnz
  6435  08AF  0AC4               	incf	(___fttol@lval+1)^(0+128),f
  6436  08B0  1903               	skipnz
  6437  08B1  0AC5               	incf	(___fttol@lval+2)^(0+128),f
  6438  08B2  1903               	skipnz
  6439  08B3  0AC6               	incf	(___fttol@lval+3)^(0+128),f
  6440  08B4                     l3557:	
  6441  08B4  0846               	movf	(___fttol@lval+3)^(0+128),w
  6442  08B5  0140               	movlb	0	; select bank0
  6443  08B6  00E2               	movwf	?___fttol+3
  6444  08B7  0141               	movlb	1	; select bank1
  6445  08B8  0845               	movf	(___fttol@lval+2)^(0+128),w
  6446  08B9  0140               	movlb	0	; select bank0
  6447  08BA  00E1               	movwf	?___fttol+2
  6448  08BB  0141               	movlb	1	; select bank1
  6449  08BC  0844               	movf	(___fttol@lval+1)^(0+128),w
  6450  08BD  0140               	movlb	0	; select bank0
  6451  08BE  00E0               	movwf	?___fttol+1
  6452  08BF  0141               	movlb	1	; select bank1
  6453  08C0  0843               	movf	___fttol@lval^(0+128),w
  6454  08C1  0140               	movlb	0	; select bank0
  6455  08C2  00DF               	movwf	?___fttol
  6456  08C3  0008               	return
  6457  08C4                     __end_of___fttol:	
  6458                           
  6459                           	psect	text15
  6460  08C4                     __ptext15:	
  6461 ;; *************** function ___ftdiv *****************
  6462 ;; Defined at:
  6463 ;;		line 56 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\ftdiv.c"
  6464 ;; Parameters:    Size  Location     Type
  6465 ;;  f2              3   34[BANK0 ] float 
  6466 ;;  f1              3   37[BANK0 ] float 
  6467 ;; Auto vars:     Size  Location     Type
  6468 ;;  f3              3   45[BANK0 ] float 
  6469 ;;  sign            1   49[BANK0 ] unsigned char 
  6470 ;;  exp             1   48[BANK0 ] unsigned char 
  6471 ;;  cntr            1   44[BANK0 ] unsigned char 
  6472 ;; Return value:  Size  Location     Type
  6473 ;;                  3   34[BANK0 ] float 
  6474 ;; Registers used:
  6475 ;;		wreg, status,2, status,0, pclath, cstack
  6476 ;; Tracked objects:
  6477 ;;		On entry : 0/0
  6478 ;;		On exit  : 0/0
  6479 ;;		Unchanged: 0/0
  6480 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
  6481 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  6482 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  6483 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  6484 ;;      Totals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  6485 ;;Total ram usage:       16 bytes
  6486 ;; Hardware stack levels used:    1
  6487 ;; Hardware stack levels required when called:    3
  6488 ;; This function calls:
  6489 ;;		___ftpack
  6490 ;; This function is called by:
  6491 ;;		_leerref
  6492 ;;		_main
  6493 ;; This function uses a non-reentrant model
  6494 ;;
  6495                           
  6496                           
  6497                           ;psect for function ___ftdiv
  6498  08C4                     ___ftdiv:	
  6499                           
  6500                           ;incstack = 0
  6501                           ; Regs used in ___ftdiv: [wreg+status,2+status,0+pclath+cstack]
  6502  08C4  0140               	movlb	0	; select bank0
  6503  08C5  0845               	movf	___ftdiv@f1,w
  6504  08C6  00C8               	movwf	??___ftdiv
  6505  08C7  0846               	movf	___ftdiv@f1+1,w
  6506  08C8  00C9               	movwf	??___ftdiv+1
  6507  08C9  0847               	movf	___ftdiv@f1+2,w
  6508  08CA  00CA               	movwf	??___ftdiv+2
  6509  08CB  1003               	clrc
  6510  08CC  0D49               	rlf	??___ftdiv+1,w
  6511  08CD  0D4A               	rlf	??___ftdiv+2,w
  6512  08CE  00CB               	movwf	??___ftdiv+3
  6513  08CF  084B               	movf	??___ftdiv+3,w
  6514  08D0  00D0               	movwf	___ftdiv@exp
  6515  08D1  0850               	movf	___ftdiv@exp,w
  6516  08D2  1D03               	btfss	3,2
  6517  08D3  28DB               	goto	l3483
  6518  08D4  3000               	movlw	0
  6519  08D5  00C2               	movwf	?___ftdiv
  6520  08D6  3000               	movlw	0
  6521  08D7  00C3               	movwf	?___ftdiv+1
  6522  08D8  3000               	movlw	0
  6523  08D9  00C4               	movwf	?___ftdiv+2
  6524  08DA  0008               	return
  6525  08DB                     l3483:	
  6526  08DB  0842               	movf	___ftdiv@f2,w
  6527  08DC  00C8               	movwf	??___ftdiv
  6528  08DD  0843               	movf	___ftdiv@f2+1,w
  6529  08DE  00C9               	movwf	??___ftdiv+1
  6530  08DF  0844               	movf	___ftdiv@f2+2,w
  6531  08E0  00CA               	movwf	??___ftdiv+2
  6532  08E1  1003               	clrc
  6533  08E2  0D49               	rlf	??___ftdiv+1,w
  6534  08E3  0D4A               	rlf	??___ftdiv+2,w
  6535  08E4  00CB               	movwf	??___ftdiv+3
  6536  08E5  084B               	movf	??___ftdiv+3,w
  6537  08E6  00D1               	movwf	___ftdiv@sign
  6538  08E7  0851               	movf	___ftdiv@sign,w
  6539  08E8  1D03               	btfss	3,2
  6540  08E9  28F1               	goto	l3489
  6541  08EA  3000               	movlw	0
  6542  08EB  00C2               	movwf	?___ftdiv
  6543  08EC  3000               	movlw	0
  6544  08ED  00C3               	movwf	?___ftdiv+1
  6545  08EE  3000               	movlw	0
  6546  08EF  00C4               	movwf	?___ftdiv+2
  6547  08F0  0008               	return
  6548  08F1                     l3489:	
  6549  08F1  3000               	movlw	0
  6550  08F2  00CD               	movwf	___ftdiv@f3
  6551  08F3  3000               	movlw	0
  6552  08F4  00CE               	movwf	___ftdiv@f3+1
  6553  08F5  3000               	movlw	0
  6554  08F6  00CF               	movwf	___ftdiv@f3+2
  6555  08F7  3089               	movlw	137
  6556  08F8  0751               	addwf	___ftdiv@sign,w
  6557  08F9  00C8               	movwf	??___ftdiv
  6558  08FA  0848               	movf	??___ftdiv,w
  6559  08FB  02D0               	subwf	___ftdiv@exp,f
  6560  08FC  0845               	movf	___ftdiv@f1,w
  6561  08FD  00C8               	movwf	??___ftdiv
  6562  08FE  0846               	movf	___ftdiv@f1+1,w
  6563  08FF  00C9               	movwf	??___ftdiv+1
  6564  0900  0847               	movf	___ftdiv@f1+2,w
  6565  0901  00CA               	movwf	??___ftdiv+2
  6566  0902  3010               	movlw	16
  6567  0903                     u4725:	
  6568  0903  36CA               	lsrf	??___ftdiv+2,f
  6569  0904  0CC9               	rrf	??___ftdiv+1,f
  6570  0905  0CC8               	rrf	??___ftdiv,f
  6571  0906  0B89               	decfsz	9,f
  6572  0907  2903               	goto	u4725
  6573  0908  0848               	movf	??___ftdiv,w
  6574  0909  00CB               	movwf	??___ftdiv+3
  6575  090A  084B               	movf	??___ftdiv+3,w
  6576  090B  00D1               	movwf	___ftdiv@sign
  6577  090C  0842               	movf	___ftdiv@f2,w
  6578  090D  00C8               	movwf	??___ftdiv
  6579  090E  0843               	movf	___ftdiv@f2+1,w
  6580  090F  00C9               	movwf	??___ftdiv+1
  6581  0910  0844               	movf	___ftdiv@f2+2,w
  6582  0911  00CA               	movwf	??___ftdiv+2
  6583  0912  3010               	movlw	16
  6584  0913                     u4735:	
  6585  0913  36CA               	lsrf	??___ftdiv+2,f
  6586  0914  0CC9               	rrf	??___ftdiv+1,f
  6587  0915  0CC8               	rrf	??___ftdiv,f
  6588  0916  0B89               	decfsz	9,f
  6589  0917  2913               	goto	u4735
  6590  0918  0848               	movf	??___ftdiv,w
  6591  0919  00CB               	movwf	??___ftdiv+3
  6592  091A  084B               	movf	??___ftdiv+3,w
  6593  091B  06D1               	xorwf	___ftdiv@sign,f
  6594  091C  3080               	movlw	128
  6595  091D  00C8               	movwf	??___ftdiv
  6596  091E  0848               	movf	??___ftdiv,w
  6597  091F  05D1               	andwf	___ftdiv@sign,f
  6598  0920  17C6               	bsf	___ftdiv@f1+1,7
  6599  0921  30FF               	movlw	255
  6600  0922  05C5               	andwf	___ftdiv@f1,f
  6601  0923  30FF               	movlw	255
  6602  0924  05C6               	andwf	___ftdiv@f1+1,f
  6603  0925  3000               	movlw	0
  6604  0926  05C7               	andwf	___ftdiv@f1+2,f
  6605  0927  17C3               	bsf	___ftdiv@f2+1,7
  6606  0928  30FF               	movlw	255
  6607  0929  05C2               	andwf	___ftdiv@f2,f
  6608  092A  30FF               	movlw	255
  6609  092B  05C3               	andwf	___ftdiv@f2+1,f
  6610  092C  3000               	movlw	0
  6611  092D  05C4               	andwf	___ftdiv@f2+2,f
  6612  092E  3018               	movlw	24
  6613  092F  00C8               	movwf	??___ftdiv
  6614  0930  0848               	movf	??___ftdiv,w
  6615  0931  00CC               	movwf	___ftdiv@cntr
  6616  0932                     l3503:	
  6617  0932  3001               	movlw	1
  6618  0933                     u4745:	
  6619  0933  35CD               	lslf	___ftdiv@f3,f
  6620  0934  0DCE               	rlf	___ftdiv@f3+1,f
  6621  0935  0DCF               	rlf	___ftdiv@f3+2,f
  6622  0936  0B89               	decfsz	9,f
  6623  0937  2933               	goto	u4745
  6624  0938  0844               	movf	___ftdiv@f2+2,w
  6625  0939  0247               	subwf	___ftdiv@f1+2,w
  6626  093A  1D03               	skipz
  6627  093B  2942               	goto	u4755
  6628  093C  0843               	movf	___ftdiv@f2+1,w
  6629  093D  0246               	subwf	___ftdiv@f1+1,w
  6630  093E  1D03               	skipz
  6631  093F  2942               	goto	u4755
  6632  0940  0842               	movf	___ftdiv@f2,w
  6633  0941  0245               	subwf	___ftdiv@f1,w
  6634  0942                     u4755:	
  6635  0942  1C03               	skipc
  6636  0943  294B               	goto	l3511
  6637  0944  0842               	movf	___ftdiv@f2,w
  6638  0945  02C5               	subwf	___ftdiv@f1,f
  6639  0946  0843               	movf	___ftdiv@f2+1,w
  6640  0947  3BC6               	subwfb	___ftdiv@f1+1,f
  6641  0948  0844               	movf	___ftdiv@f2+2,w
  6642  0949  3BC7               	subwfb	___ftdiv@f1+2,f
  6643  094A  144D               	bsf	___ftdiv@f3,0
  6644  094B                     l3511:	
  6645  094B  3001               	movlw	1
  6646  094C                     u4765:	
  6647  094C  35C5               	lslf	___ftdiv@f1,f
  6648  094D  0DC6               	rlf	___ftdiv@f1+1,f
  6649  094E  0DC7               	rlf	___ftdiv@f1+2,f
  6650  094F  0B89               	decfsz	9,f
  6651  0950  294C               	goto	u4765
  6652  0951  3001               	movlw	1
  6653  0952  02CC               	subwf	___ftdiv@cntr,f
  6654  0953  1D03               	btfss	3,2
  6655  0954  2932               	goto	l3503
  6656  0955  084D               	movf	___ftdiv@f3,w
  6657  0956  00A4               	movwf	___ftpack@arg
  6658  0957  084E               	movf	___ftdiv@f3+1,w
  6659  0958  00A5               	movwf	___ftpack@arg+1
  6660  0959  084F               	movf	___ftdiv@f3+2,w
  6661  095A  00A6               	movwf	___ftpack@arg+2
  6662  095B  0850               	movf	___ftdiv@exp,w
  6663  095C  00C8               	movwf	??___ftdiv
  6664  095D  0848               	movf	??___ftdiv,w
  6665  095E  00A7               	movwf	___ftpack@exp
  6666  095F  0851               	movf	___ftdiv@sign,w
  6667  0960  00C9               	movwf	??___ftdiv+1
  6668  0961  0849               	movf	??___ftdiv+1,w
  6669  0962  00A8               	movwf	___ftpack@sign
  6670  0963  3195  25F9         	fcall	___ftpack
  6671  0965  0140               	movlb	0	; select bank0
  6672  0966  0824               	movf	?___ftpack,w
  6673  0967  00C2               	movwf	?___ftdiv
  6674  0968  0825               	movf	?___ftpack+1,w
  6675  0969  00C3               	movwf	?___ftdiv+1
  6676  096A  0826               	movf	?___ftpack+2,w
  6677  096B  00C4               	movwf	?___ftdiv+2
  6678  096C  0008               	return
  6679  096D                     __end_of___ftdiv:	
  6680                           
  6681                           	psect	text16
  6682  15F9                     __ptext16:	
  6683 ;; *************** function ___ftpack *****************
  6684 ;; Defined at:
  6685 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\float.c"
  6686 ;; Parameters:    Size  Location     Type
  6687 ;;  arg             3    4[BANK0 ] unsigned um
  6688 ;;  exp             1    7[BANK0 ] unsigned char 
  6689 ;;  sign            1    8[BANK0 ] unsigned char 
  6690 ;; Auto vars:     Size  Location     Type
  6691 ;;		None
  6692 ;; Return value:  Size  Location     Type
  6693 ;;                  3    4[BANK0 ] float 
  6694 ;; Registers used:
  6695 ;;		wreg, status,2, status,0
  6696 ;; Tracked objects:
  6697 ;;		On entry : 0/0
  6698 ;;		On exit  : 0/0
  6699 ;;		Unchanged: 0/0
  6700 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
  6701 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  6702 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  6703 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  6704 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  6705 ;;Total ram usage:        8 bytes
  6706 ;; Hardware stack levels used:    1
  6707 ;; Hardware stack levels required when called:    2
  6708 ;; This function calls:
  6709 ;;		Nothing
  6710 ;; This function is called by:
  6711 ;;		___awtoft
  6712 ;;		___ftadd
  6713 ;;		___ftdiv
  6714 ;;		___ftmul
  6715 ;; This function uses a non-reentrant model
  6716 ;;
  6717                           
  6718                           
  6719                           ;psect for function ___ftpack
  6720  15F9                     ___ftpack:	
  6721                           
  6722                           ;incstack = 0
  6723                           ; Regs used in ___ftpack: [wreg+status,2+status,0]
  6724  15F9  0140               	movlb	0	; select bank0
  6725  15FA  0827               	movf	___ftpack@exp,w
  6726  15FB  1903               	btfsc	3,2
  6727  15FC  2E02               	goto	l3173
  6728  15FD  0826               	movf	___ftpack@arg+2,w
  6729  15FE  0425               	iorwf	___ftpack@arg+1,w
  6730  15FF  0424               	iorwf	___ftpack@arg,w
  6731  1600  1D03               	skipz
  6732  1601  2E13               	goto	l3179
  6733  1602                     l3173:	
  6734  1602  3000               	movlw	0
  6735  1603  00A4               	movwf	?___ftpack
  6736  1604  3000               	movlw	0
  6737  1605  00A5               	movwf	?___ftpack+1
  6738  1606  3000               	movlw	0
  6739  1607  00A6               	movwf	?___ftpack+2
  6740  1608  0008               	return
  6741  1609                     l3177:	
  6742  1609  3001               	movlw	1
  6743  160A  00A9               	movwf	??___ftpack
  6744  160B  0829               	movf	??___ftpack,w
  6745  160C  07A7               	addwf	___ftpack@exp,f
  6746  160D  3001               	movlw	1
  6747  160E                     u3995:	
  6748  160E  36A6               	lsrf	___ftpack@arg+2,f
  6749  160F  0CA5               	rrf	___ftpack@arg+1,f
  6750  1610  0CA4               	rrf	___ftpack@arg,f
  6751  1611  0B89               	decfsz	9,f
  6752  1612  2E0E               	goto	u3995
  6753  1613                     l3179:	
  6754  1613  30FE               	movlw	254
  6755  1614  0526               	andwf	___ftpack@arg+2,w
  6756  1615  1903               	btfsc	3,2
  6757  1616  2E2C               	goto	l629
  6758  1617  2E09               	goto	l3177
  6759  1618                     l3181:	
  6760  1618  3001               	movlw	1
  6761  1619  00A9               	movwf	??___ftpack
  6762  161A  0829               	movf	??___ftpack,w
  6763  161B  07A7               	addwf	___ftpack@exp,f
  6764  161C  3001               	movlw	1
  6765  161D  07A4               	addwf	___ftpack@arg,f
  6766  161E  3000               	movlw	0
  6767  161F  1803               	skipnc
  6768  1620  3001               	movlw	1
  6769  1621  07A5               	addwf	___ftpack@arg+1,f
  6770  1622  3000               	movlw	0
  6771  1623  1803               	skipnc
  6772  1624  3001               	movlw	1
  6773  1625  07A6               	addwf	___ftpack@arg+2,f
  6774  1626  3001               	movlw	1
  6775  1627                     u4015:	
  6776  1627  36A6               	lsrf	___ftpack@arg+2,f
  6777  1628  0CA5               	rrf	___ftpack@arg+1,f
  6778  1629  0CA4               	rrf	___ftpack@arg,f
  6779  162A  0B89               	decfsz	9,f
  6780  162B  2E27               	goto	u4015
  6781  162C                     l629:	
  6782  162C  30FF               	movlw	255
  6783  162D  0526               	andwf	___ftpack@arg+2,w
  6784  162E  1903               	btfsc	3,2
  6785  162F  2E39               	goto	l3189
  6786  1630  2E18               	goto	l3181
  6787  1631                     l3187:	
  6788  1631  3001               	movlw	1
  6789  1632  02A7               	subwf	___ftpack@exp,f
  6790  1633  3001               	movlw	1
  6791  1634                     u4035:	
  6792  1634  35A4               	lslf	___ftpack@arg,f
  6793  1635  0DA5               	rlf	___ftpack@arg+1,f
  6794  1636  0DA6               	rlf	___ftpack@arg+2,f
  6795  1637  0B89               	decfsz	9,f
  6796  1638  2E34               	goto	u4035
  6797  1639                     l3189:	
  6798  1639  1BA5               	btfsc	___ftpack@arg+1,7
  6799  163A  2E3F               	goto	l636
  6800  163B  3002               	movlw	2
  6801  163C  0227               	subwf	___ftpack@exp,w
  6802  163D  1803               	skipnc
  6803  163E  2E31               	goto	l3187
  6804  163F                     l636:	
  6805  163F  1827               	btfsc	___ftpack@exp,0
  6806  1640  2E47               	goto	l637
  6807  1641  30FF               	movlw	255
  6808  1642  05A4               	andwf	___ftpack@arg,f
  6809  1643  307F               	movlw	127
  6810  1644  05A5               	andwf	___ftpack@arg+1,f
  6811  1645  30FF               	movlw	255
  6812  1646  05A6               	andwf	___ftpack@arg+2,f
  6813  1647                     l637:	
  6814  1647  1003               	clrc
  6815  1648  0CA7               	rrf	___ftpack@exp,f
  6816  1649  0827               	movf	___ftpack@exp,w
  6817  164A  00A9               	movwf	??___ftpack
  6818  164B  01AA               	clrf	??___ftpack+1
  6819  164C  01AB               	clrf	??___ftpack+2
  6820  164D  3010               	movlw	16
  6821  164E                     u4075:	
  6822  164E  35A9               	lslf	??___ftpack,f
  6823  164F  0DAA               	rlf	??___ftpack+1,f
  6824  1650  0DAB               	rlf	??___ftpack+2,f
  6825  1651  0B89               	decfsz	9,f
  6826  1652  2E4E               	goto	u4075
  6827  1653  0829               	movf	??___ftpack,w
  6828  1654  04A4               	iorwf	___ftpack@arg,f
  6829  1655  082A               	movf	??___ftpack+1,w
  6830  1656  04A5               	iorwf	___ftpack@arg+1,f
  6831  1657  082B               	movf	??___ftpack+2,w
  6832  1658  04A6               	iorwf	___ftpack@arg+2,f
  6833  1659  0828               	movf	___ftpack@sign,w
  6834  165A  1903               	btfsc	3,2
  6835  165B  0008               	return
  6836  165C  17A6               	bsf	___ftpack@arg+2,7
  6837  165D  0008               	return
  6838  165E                     __end_of___ftpack:	
  6839                           
  6840                           	psect	text17
  6841  148D                     __ptext17:	
  6842 ;; *************** function _codigo *****************
  6843 ;; Defined at:
  6844 ;;		line 52 in file "main.c"
  6845 ;; Parameters:    Size  Location     Type
  6846 ;;  num             2   19[BANK0 ] int 
  6847 ;; Auto vars:     Size  Location     Type
  6848 ;;		None
  6849 ;; Return value:  Size  Location     Type
  6850 ;;                  2   19[BANK0 ] int 
  6851 ;; Registers used:
  6852 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  6853 ;; Tracked objects:
  6854 ;;		On entry : 0/0
  6855 ;;		On exit  : 0/0
  6856 ;;		Unchanged: 0/0
  6857 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
  6858 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  6859 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  6860 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  6861 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  6862 ;;Total ram usage:        2 bytes
  6863 ;; Hardware stack levels used:    1
  6864 ;; Hardware stack levels required when called:    2
  6865 ;; This function calls:
  6866 ;;		Nothing
  6867 ;; This function is called by:
  6868 ;;		_main
  6869 ;; This function uses a non-reentrant model
  6870 ;;
  6871                           
  6872                           
  6873                           ;psect for function _codigo
  6874  148D                     _codigo:	
  6875                           
  6876                           ;main.c: 53: switch(num){
  6877                           
  6878                           ;incstack = 0
  6879                           ; Regs used in _codigo: [wreg-fsr0h+status,2+status,0]
  6880  148D  2CA6               	goto	l3705
  6881  148E                     l3683:	
  6882                           ;main.c: 54: case 0:
  6883                           
  6884                           
  6885                           ;main.c: 55: auxcodigo=48;
  6886  148E  3030               	movlw	48
  6887  148F  2CA1               	goto	L13
  6888  1490                     l3685:	
  6889                           ;main.c: 57: case 1:
  6890                           
  6891                           ;main.c: 56: break;
  6892                           
  6893                           
  6894                           ;main.c: 58: auxcodigo=49;
  6895  1490  3031               	movlw	49
  6896  1491  2CA1               	goto	L13
  6897  1492                     l3687:	
  6898                           ;main.c: 60: case 2:
  6899                           
  6900                           ;main.c: 59: break;
  6901                           
  6902                           
  6903                           ;main.c: 61: auxcodigo=50;
  6904  1492  3032               	movlw	50
  6905  1493  2CA1               	goto	L13
  6906  1494                     l3689:	
  6907                           ;main.c: 63: case 3:
  6908                           
  6909                           ;main.c: 62: break;
  6910                           
  6911                           
  6912                           ;main.c: 64: auxcodigo=51;
  6913  1494  3033               	movlw	51
  6914  1495  2CA1               	goto	L13
  6915  1496                     l3691:	
  6916                           ;main.c: 66: case 4:
  6917                           
  6918                           ;main.c: 65: break;
  6919                           
  6920                           
  6921                           ;main.c: 67: auxcodigo=52;
  6922  1496  3034               	movlw	52
  6923  1497  2CA1               	goto	L13
  6924  1498                     l3693:	
  6925                           ;main.c: 69: case 5:
  6926                           
  6927                           ;main.c: 68: break;
  6928                           
  6929                           
  6930                           ;main.c: 70: auxcodigo=53;
  6931  1498  3035               	movlw	53
  6932  1499  2CA1               	goto	L13
  6933  149A                     l3695:	
  6934                           ;main.c: 72: case 6:
  6935                           
  6936                           ;main.c: 71: break;
  6937                           
  6938                           
  6939                           ;main.c: 73: auxcodigo=54;
  6940  149A  3036               	movlw	54
  6941  149B  2CA1               	goto	L13
  6942  149C                     l3697:	
  6943                           ;main.c: 75: case 7:
  6944                           
  6945                           ;main.c: 74: break;
  6946                           
  6947                           
  6948                           ;main.c: 76: auxcodigo=55;
  6949  149C  3037               	movlw	55
  6950  149D  2CA1               	goto	L13
  6951  149E                     l3699:	
  6952                           ;main.c: 78: case 8:
  6953                           
  6954                           ;main.c: 77: break;
  6955                           
  6956                           
  6957                           ;main.c: 79: auxcodigo=56;
  6958  149E  3038               	movlw	56
  6959  149F  2CA1               	goto	L13
  6960  14A0                     l3701:	
  6961                           ;main.c: 81: case 9:
  6962                           
  6963                           ;main.c: 80: break;
  6964                           
  6965                           
  6966                           ;main.c: 82: auxcodigo=57;
  6967  14A0  3039               	movlw	57
  6968  14A1                     L13:	
  6969  14A1  0141               	movlb	1	; select bank1
  6970  14A2  00B2               	movwf	_auxcodigo^(0+128)
  6971  14A3  3000               	movlw	0
  6972  14A4  00B3               	movwf	(_auxcodigo^(0+128)+1)
  6973                           
  6974                           ;main.c: 84: }
  6975                           
  6976                           ;main.c: 83: break;
  6977  14A5  2CB6               	goto	l3707
  6978  14A6                     l3705:	
  6979                           
  6980                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  6981                           ; Switch size 1, requested type "space"
  6982                           ; Number of cases is 1, Range of values is 0 to 0
  6983                           ; switch strategies available:
  6984                           ; Name         Instructions Cycles
  6985                           ; simple_byte            4     3 (average)
  6986                           ; direct_byte            8     6 (fixed)
  6987                           ; jumptable            260     6 (fixed)
  6988                           ;	Chosen strategy is simple_byte
  6989  14A6  0140               	movlb	0	; select bank0
  6990  14A7  0834               	movf	codigo@num+1,w
  6991  14A8  3A00               	xorlw	0	; case 0
  6992  14A9  1903               	skipnz
  6993  14AA  2CAC               	goto	l4211
  6994  14AB  2CB6               	goto	l3707
  6995  14AC                     l4211:	
  6996                           
  6997                           ; Switch size 1, requested type "space"
  6998                           ; Number of cases is 10, Range of values is 0 to 9
  6999                           ; switch strategies available:
  7000                           ; Name         Instructions Cycles
  7001                           ; direct_byte           26     6 (fixed)
  7002                           ; simple_byte           31    16 (average)
  7003                           ; jumptable            260     6 (fixed)
  7004                           ;	Chosen strategy is direct_byte
  7005  14AC  0833               	movf	codigo@num,w
  7006  14AD  0084               	movwf	4
  7007  14AE  300A               	movlw	10
  7008  14AF  0204               	subwf	4,w
  7009  14B0  1803               	skipnc
  7010  14B1  2CB6               	goto	l3707
  7011  14B2  3190               	movlp	high S4213
  7012  14B3  3504               	lslf	4,w
  7013  14B4  3E00               	addlw	low S4213
  7014  14B5  0082               	movwf	2
  7015  14B6                     l3707:	
  7016                           
  7017                           ;main.c: 85: return auxcodigo;
  7018  14B6  0141               	movlb	1	; select bank1
  7019  14B7  0833               	movf	(_auxcodigo+1)^(0+128),w
  7020  14B8  0140               	movlb	0	; select bank0
  7021  14B9  00B4               	movwf	?_codigo+1
  7022  14BA  0141               	movlb	1	; select bank1
  7023  14BB  0832               	movf	_auxcodigo^(0+128),w
  7024  14BC  0140               	movlb	0	; select bank0
  7025  14BD  00B3               	movwf	?_codigo
  7026  14BE  0008               	return
  7027  14BF                     __end_of_codigo:	
  7028                           
  7029                           	psect	swtext1
  7030  1000                     __pswtext1:	
  7031  1000                     S4213:	
  7032  1000  3194  2C8E         	ljmp	l3683
  7033  1002  3194  2C90         	ljmp	l3685
  7034  1004  3194  2C92         	ljmp	l3687
  7035  1006  3194  2C94         	ljmp	l3689
  7036  1008  3194  2C96         	ljmp	l3691
  7037  100A  3194  2C98         	ljmp	l3693
  7038  100C  3194  2C9A         	ljmp	l3695
  7039  100E  3194  2C9C         	ljmp	l3697
  7040  1010  3194  2C9E         	ljmp	l3699
  7041  1012  3194  2CA0         	ljmp	l3701
  7042                           
  7043                           	psect	text18
  7044  07AA                     __ptext18:	
  7045 ;; *************** function ___awdiv *****************
  7046 ;; Defined at:
  7047 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\awdiv.c"
  7048 ;; Parameters:    Size  Location     Type
  7049 ;;  divisor         2    4[BANK0 ] int 
  7050 ;;  dividend        2    6[BANK0 ] int 
  7051 ;; Auto vars:     Size  Location     Type
  7052 ;;  quotient        2   11[BANK0 ] int 
  7053 ;;  sign            1   10[BANK0 ] unsigned char 
  7054 ;;  counter         1    9[BANK0 ] unsigned char 
  7055 ;; Return value:  Size  Location     Type
  7056 ;;                  2    4[BANK0 ] int 
  7057 ;; Registers used:
  7058 ;;		wreg, status,2, status,0
  7059 ;; Tracked objects:
  7060 ;;		On entry : 0/0
  7061 ;;		On exit  : 0/0
  7062 ;;		Unchanged: 0/0
  7063 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
  7064 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  7065 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  7066 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  7067 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  7068 ;;Total ram usage:        9 bytes
  7069 ;; Hardware stack levels used:    1
  7070 ;; Hardware stack levels required when called:    2
  7071 ;; This function calls:
  7072 ;;		Nothing
  7073 ;; This function is called by:
  7074 ;;		_main
  7075 ;; This function uses a non-reentrant model
  7076 ;;
  7077                           
  7078                           
  7079                           ;psect for function ___awdiv
  7080  07AA                     ___awdiv:	
  7081                           
  7082                           ;incstack = 0
  7083                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  7084  07AA  0140               	movlb	0	; select bank0
  7085  07AB  01AA               	clrf	___awdiv@sign
  7086  07AC  1FA5               	btfss	___awdiv@divisor+1,7
  7087  07AD  2FB5               	goto	l3867
  7088  07AE  09A4               	comf	___awdiv@divisor,f
  7089  07AF  09A5               	comf	___awdiv@divisor+1,f
  7090  07B0  0AA4               	incf	___awdiv@divisor,f
  7091  07B1  1903               	skipnz
  7092  07B2  0AA5               	incf	___awdiv@divisor+1,f
  7093  07B3  01AA               	clrf	___awdiv@sign
  7094  07B4  0AAA               	incf	___awdiv@sign,f
  7095  07B5                     l3867:	
  7096  07B5  1FA7               	btfss	___awdiv@dividend+1,7
  7097  07B6  2FC0               	goto	l3873
  7098  07B7  09A6               	comf	___awdiv@dividend,f
  7099  07B8  09A7               	comf	___awdiv@dividend+1,f
  7100  07B9  0AA6               	incf	___awdiv@dividend,f
  7101  07BA  1903               	skipnz
  7102  07BB  0AA7               	incf	___awdiv@dividend+1,f
  7103  07BC  3001               	movlw	1
  7104  07BD  00A8               	movwf	??___awdiv
  7105  07BE  0828               	movf	??___awdiv,w
  7106  07BF  06AA               	xorwf	___awdiv@sign,f
  7107  07C0                     l3873:	
  7108  07C0  01AB               	clrf	___awdiv@quotient
  7109  07C1  01AC               	clrf	___awdiv@quotient+1
  7110  07C2  0824               	movf	___awdiv@divisor,w
  7111  07C3  0425               	iorwf	___awdiv@divisor+1,w
  7112  07C4  1903               	btfsc	3,2
  7113  07C5  2FEF               	goto	l3895
  7114  07C6  01A9               	clrf	___awdiv@counter
  7115  07C7  0AA9               	incf	___awdiv@counter,f
  7116  07C8                     l3883:	
  7117  07C8  1BA5               	btfsc	___awdiv@divisor+1,7
  7118  07C9  2FD4               	goto	l3885
  7119  07CA  3001               	movlw	1
  7120  07CB                     u5285:	
  7121  07CB  35A4               	lslf	___awdiv@divisor,f
  7122  07CC  0DA5               	rlf	___awdiv@divisor+1,f
  7123  07CD  0B89               	decfsz	9,f
  7124  07CE  2FCB               	goto	u5285
  7125  07CF  3001               	movlw	1
  7126  07D0  00A8               	movwf	??___awdiv
  7127  07D1  0828               	movf	??___awdiv,w
  7128  07D2  07A9               	addwf	___awdiv@counter,f
  7129  07D3  2FC8               	goto	l3883
  7130  07D4                     l3885:	
  7131  07D4  3001               	movlw	1
  7132  07D5                     u5305:	
  7133  07D5  35AB               	lslf	___awdiv@quotient,f
  7134  07D6  0DAC               	rlf	___awdiv@quotient+1,f
  7135  07D7  0B89               	decfsz	9,f
  7136  07D8  2FD5               	goto	u5305
  7137  07D9  0825               	movf	___awdiv@divisor+1,w
  7138  07DA  0227               	subwf	___awdiv@dividend+1,w
  7139  07DB  1D03               	skipz
  7140  07DC  2FDF               	goto	u5315
  7141  07DD  0824               	movf	___awdiv@divisor,w
  7142  07DE  0226               	subwf	___awdiv@dividend,w
  7143  07DF                     u5315:	
  7144  07DF  1C03               	skipc
  7145  07E0  2FE6               	goto	l3891
  7146  07E1  0824               	movf	___awdiv@divisor,w
  7147  07E2  02A6               	subwf	___awdiv@dividend,f
  7148  07E3  0825               	movf	___awdiv@divisor+1,w
  7149  07E4  3BA7               	subwfb	___awdiv@dividend+1,f
  7150  07E5  142B               	bsf	___awdiv@quotient,0
  7151  07E6                     l3891:	
  7152  07E6  3001               	movlw	1
  7153  07E7                     u5325:	
  7154  07E7  36A5               	lsrf	___awdiv@divisor+1,f
  7155  07E8  0CA4               	rrf	___awdiv@divisor,f
  7156  07E9  0B89               	decfsz	9,f
  7157  07EA  2FE7               	goto	u5325
  7158  07EB  3001               	movlw	1
  7159  07EC  02A9               	subwf	___awdiv@counter,f
  7160  07ED  1D03               	btfss	3,2
  7161  07EE  2FD4               	goto	l3885
  7162  07EF                     l3895:	
  7163  07EF  082A               	movf	___awdiv@sign,w
  7164  07F0  1903               	btfsc	3,2
  7165  07F1  2FF7               	goto	l3899
  7166  07F2  09AB               	comf	___awdiv@quotient,f
  7167  07F3  09AC               	comf	___awdiv@quotient+1,f
  7168  07F4  0AAB               	incf	___awdiv@quotient,f
  7169  07F5  1903               	skipnz
  7170  07F6  0AAC               	incf	___awdiv@quotient+1,f
  7171  07F7                     l3899:	
  7172  07F7  082C               	movf	___awdiv@quotient+1,w
  7173  07F8  00A5               	movwf	?___awdiv+1
  7174  07F9  082B               	movf	___awdiv@quotient,w
  7175  07FA  00A4               	movwf	?___awdiv
  7176  07FB  0008               	return
  7177  07FC                     __end_of___awdiv:	
  7178                           
  7179                           	psect	text19
  7180  14F4                     __ptext19:	
  7181 ;; *************** function _Lcd_Out2 *****************
  7182 ;; Defined at:
  7183 ;;		line 115 in file "flex_lcd.h"
  7184 ;; Parameters:    Size  Location     Type
  7185 ;;  y               1    wreg     unsigned char 
  7186 ;;  x               1    7[BANK0 ] unsigned char 
  7187 ;;  buffer          1    8[BANK0 ] PTR unsigned char 
  7188 ;;		 -> buffer2(16), buffer1(16), 
  7189 ;; Auto vars:     Size  Location     Type
  7190 ;;  y               1   10[BANK0 ] unsigned char 
  7191 ;;  data            1   11[BANK0 ] unsigned char 
  7192 ;; Return value:  Size  Location     Type
  7193 ;;                  1    wreg      void 
  7194 ;; Registers used:
  7195 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7196 ;; Tracked objects:
  7197 ;;		On entry : 0/0
  7198 ;;		On exit  : 0/0
  7199 ;;		Unchanged: 0/0
  7200 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
  7201 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  7202 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  7203 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  7204 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  7205 ;;Total ram usage:        5 bytes
  7206 ;; Hardware stack levels used:    1
  7207 ;; Hardware stack levels required when called:    3
  7208 ;; This function calls:
  7209 ;;		_Lcd_Chr_CP
  7210 ;;		_Lcd_Cmd
  7211 ;; This function is called by:
  7212 ;;		_main
  7213 ;; This function uses a non-reentrant model
  7214 ;;
  7215                           
  7216                           
  7217                           ;psect for function _Lcd_Out2
  7218  14F4                     _Lcd_Out2:	
  7219                           
  7220                           ;incstack = 0
  7221                           ; Regs used in _Lcd_Out2: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  7222                           ;Lcd_Out2@y stored from wreg
  7223  14F4  0140               	movlb	0	; select bank0
  7224  14F5  00AA               	movwf	Lcd_Out2@y
  7225                           
  7226                           ;flex_lcd.h: 117: unsigned char data;
  7227                           ;flex_lcd.h: 118: switch (y)
  7228  14F6  2D06               	goto	l3671
  7229  14F7                     l3661:	
  7230                           ;flex_lcd.h: 119: {
  7231                           ;flex_lcd.h: 120: case 1: data = 128 + x; break;
  7232                           
  7233  14F7  0827               	movf	Lcd_Out2@x,w
  7234  14F8  3E80               	addlw	128
  7235  14F9  2D02               	goto	L16
  7236  14FA                     l3663:	
  7237                           ;flex_lcd.h: 121: case 2: data = 192 + x; break;
  7238                           
  7239  14FA  0827               	movf	Lcd_Out2@x,w
  7240  14FB  3EC0               	addlw	192
  7241  14FC  2D02               	goto	L16
  7242  14FD                     l3665:	
  7243                           ;flex_lcd.h: 122: case 3: data = 148 + x; break;
  7244                           
  7245  14FD  0827               	movf	Lcd_Out2@x,w
  7246  14FE  3E94               	addlw	148
  7247  14FF  2D02               	goto	L16
  7248  1500                     l3667:	
  7249                           ;flex_lcd.h: 123: case 4: data = 212 + x; break;
  7250                           
  7251  1500  0827               	movf	Lcd_Out2@x,w
  7252  1501  3ED4               	addlw	212
  7253  1502                     L16:	
  7254  1502  00A9               	movwf	??_Lcd_Out2
  7255  1503  0829               	movf	??_Lcd_Out2,w
  7256  1504  00AB               	movwf	Lcd_Out2@data
  7257                           
  7258                           ;flex_lcd.h: 125: }
  7259                           
  7260                           ;flex_lcd.h: 124: default: break;
  7261  1505  2D14               	goto	l3673
  7262  1506                     l3671:	
  7263  1506  082A               	movf	Lcd_Out2@y,w
  7264                           
  7265                           ; Switch size 1, requested type "space"
  7266                           ; Number of cases is 4, Range of values is 1 to 4
  7267                           ; switch strategies available:
  7268                           ; Name         Instructions Cycles
  7269                           ; simple_byte           13     7 (average)
  7270                           ; direct_byte           17     9 (fixed)
  7271                           ; jumptable            263     9 (fixed)
  7272                           ;	Chosen strategy is simple_byte
  7273  1507  3A01               	xorlw	1	; case 1
  7274  1508  1903               	skipnz
  7275  1509  2CF7               	goto	l3661
  7276  150A  3A03               	xorlw	3	; case 2
  7277  150B  1903               	skipnz
  7278  150C  2CFA               	goto	l3663
  7279  150D  3A01               	xorlw	1	; case 3
  7280  150E  1903               	skipnz
  7281  150F  2CFD               	goto	l3665
  7282  1510  3A07               	xorlw	7	; case 4
  7283  1511  1903               	skipnz
  7284  1512  2D00               	goto	l3667
  7285  1513  2D14               	goto	l3673
  7286  1514                     l3673:	
  7287                           
  7288                           ;flex_lcd.h: 126: Lcd_Cmd(data);
  7289  1514  082B               	movf	Lcd_Out2@data,w
  7290  1515  3196  26D2  3194   	fcall	_Lcd_Cmd
  7291  1518                     l3679:	
  7292                           ;flex_lcd.h: 127: while(*buffer)
  7293                           
  7294  1518  0140               	movlb	0	; select bank0
  7295  1519  0828               	movf	Lcd_Out2@buffer,w
  7296  151A  0086               	movwf	6
  7297  151B  3001               	movlw	1	; select bank2/3
  7298  151C  0087               	movwf	7
  7299  151D  0801               	movf	1,w
  7300  151E  1903               	btfsc	3,2
  7301  151F  0008               	return
  7302                           
  7303                           ;flex_lcd.h: 128: {
  7304                           ;flex_lcd.h: 129: Lcd_Chr_CP(*buffer);
  7305  1520  0140               	movlb	0	; select bank0
  7306  1521  0828               	movf	Lcd_Out2@buffer,w
  7307  1522  0086               	movwf	6
  7308  1523  3001               	movlw	1	; select bank2/3
  7309  1524  0087               	movwf	7
  7310  1525  0801               	movf	1,w
  7311  1526  3197  2767  3194   	fcall	_Lcd_Chr_CP
  7312                           
  7313                           ;flex_lcd.h: 130: buffer++;
  7314  1529  3001               	movlw	1
  7315  152A  0140               	movlb	0	; select bank0
  7316  152B  00A9               	movwf	??_Lcd_Out2
  7317  152C  0829               	movf	??_Lcd_Out2,w
  7318  152D  07A8               	addwf	Lcd_Out2@buffer,f
  7319  152E  2D18               	goto	l3679
  7320  152F                     __end_of_Lcd_Out2:	
  7321                           ;flex_lcd.h: 131: }
  7322                           ;flex_lcd.h: 132: return;
  7323                           
  7324                           
  7325                           	psect	text20
  7326  1767                     __ptext20:	
  7327 ;; *************** function _Lcd_Chr_CP *****************
  7328 ;; Defined at:
  7329 ;;		line 136 in file "flex_lcd.h"
  7330 ;; Parameters:    Size  Location     Type
  7331 ;;  data            1    wreg     unsigned char 
  7332 ;; Auto vars:     Size  Location     Type
  7333 ;;  data            1    6[BANK0 ] unsigned char 
  7334 ;; Return value:  Size  Location     Type
  7335 ;;                  1    wreg      void 
  7336 ;; Registers used:
  7337 ;;		wreg, status,2, status,0
  7338 ;; Tracked objects:
  7339 ;;		On entry : 0/0
  7340 ;;		On exit  : 0/0
  7341 ;;		Unchanged: 0/0
  7342 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
  7343 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  7344 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  7345 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  7346 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  7347 ;;Total ram usage:        3 bytes
  7348 ;; Hardware stack levels used:    1
  7349 ;; Hardware stack levels required when called:    2
  7350 ;; This function calls:
  7351 ;;		Nothing
  7352 ;; This function is called by:
  7353 ;;		_Lcd_Out2
  7354 ;;		_Lcd_Out
  7355 ;; This function uses a non-reentrant model
  7356 ;;
  7357                           
  7358                           
  7359                           ;psect for function _Lcd_Chr_CP
  7360  1767                     _Lcd_Chr_CP:	
  7361                           
  7362                           ;incstack = 0
  7363                           ; Regs used in _Lcd_Chr_CP: [wreg+status,2+status,0]
  7364                           ;Lcd_Chr_CP@data stored from wreg
  7365  1767  0140               	movlb	0	; select bank0
  7366  1768  00A6               	movwf	Lcd_Chr_CP@data
  7367                           
  7368                           ;flex_lcd.h: 137: PORTAbits.RA7 = 0; PORTAbits.RA6 = 1;
  7369  1769  138C               	bcf	12,7	;volatile
  7370  176A  170C               	bsf	12,6	;volatile
  7371                           
  7372                           ;flex_lcd.h: 138: PORTCbits.RC3 = (data & 0b10000000)>>7; PORTCbits.RC2 = (data & 0b0100
      +                          0000)>>6;
  7373  176B  0826               	movf	Lcd_Chr_CP@data,w
  7374  176C  00A4               	movwf	??_Lcd_Chr_CP
  7375  176D  3007               	movlw	7
  7376  176E                     u4605:	
  7377  176E  36A4               	lsrf	??_Lcd_Chr_CP,f
  7378  176F  0B89               	decfsz	9,f
  7379  1770  2F6E               	goto	u4605
  7380  1771  0824               	movf	??_Lcd_Chr_CP,w
  7381  1772  3901               	andlw	1
  7382  1773  00A5               	movwf	??_Lcd_Chr_CP+1
  7383  1774  0DA5               	rlf	??_Lcd_Chr_CP+1,f
  7384  1775  0DA5               	rlf	??_Lcd_Chr_CP+1,f
  7385  1776  0DA5               	rlf	??_Lcd_Chr_CP+1,f
  7386  1777  080E               	movf	14,w	;volatile
  7387  1778  0625               	xorwf	??_Lcd_Chr_CP+1,w
  7388  1779  39F7               	andlw	-9
  7389  177A  0625               	xorwf	??_Lcd_Chr_CP+1,w
  7390  177B  008E               	movwf	14	;volatile
  7391  177C  0826               	movf	Lcd_Chr_CP@data,w
  7392  177D  00A4               	movwf	??_Lcd_Chr_CP
  7393  177E  3006               	movlw	6
  7394  177F                     u4615:	
  7395  177F  36A4               	lsrf	??_Lcd_Chr_CP,f
  7396  1780  0B89               	decfsz	9,f
  7397  1781  2F7F               	goto	u4615
  7398  1782  0824               	movf	??_Lcd_Chr_CP,w
  7399  1783  3901               	andlw	1
  7400  1784  00A5               	movwf	??_Lcd_Chr_CP+1
  7401  1785  0DA5               	rlf	??_Lcd_Chr_CP+1,f
  7402  1786  0DA5               	rlf	??_Lcd_Chr_CP+1,f
  7403  1787  080E               	movf	14,w	;volatile
  7404  1788  0625               	xorwf	??_Lcd_Chr_CP+1,w
  7405  1789  39FB               	andlw	-5
  7406  178A  0625               	xorwf	??_Lcd_Chr_CP+1,w
  7407  178B  008E               	movwf	14	;volatile
  7408                           
  7409                           ;flex_lcd.h: 139: PORTCbits.RC1 = (data & 0b00100000)>>5; PORTCbits.RC0 = (data & 0b0001
      +                          0000)>>4;
  7410  178C  0826               	movf	Lcd_Chr_CP@data,w
  7411  178D  00A4               	movwf	??_Lcd_Chr_CP
  7412  178E  3005               	movlw	5
  7413  178F                     u4625:	
  7414  178F  36A4               	lsrf	??_Lcd_Chr_CP,f
  7415  1790  0B89               	decfsz	9,f
  7416  1791  2F8F               	goto	u4625
  7417  1792  0824               	movf	??_Lcd_Chr_CP,w
  7418  1793  3901               	andlw	1
  7419  1794  00A5               	movwf	??_Lcd_Chr_CP+1
  7420  1795  0DA5               	rlf	??_Lcd_Chr_CP+1,f
  7421  1796  080E               	movf	14,w	;volatile
  7422  1797  0625               	xorwf	??_Lcd_Chr_CP+1,w
  7423  1798  39FD               	andlw	-3
  7424  1799  0625               	xorwf	??_Lcd_Chr_CP+1,w
  7425  179A  008E               	movwf	14	;volatile
  7426  179B  0826               	movf	Lcd_Chr_CP@data,w
  7427  179C  00A4               	movwf	??_Lcd_Chr_CP
  7428  179D  3004               	movlw	4
  7429  179E                     u4635:	
  7430  179E  36A4               	lsrf	??_Lcd_Chr_CP,f
  7431  179F  0B89               	decfsz	9,f
  7432  17A0  2F9E               	goto	u4635
  7433  17A1  3001               	movlw	1
  7434  17A2  0524               	andwf	??_Lcd_Chr_CP,w
  7435  17A3  00A5               	movwf	??_Lcd_Chr_CP+1
  7436  17A4  080E               	movf	14,w	;volatile
  7437  17A5  0625               	xorwf	??_Lcd_Chr_CP+1,w
  7438  17A6  39FE               	andlw	-2
  7439  17A7  0625               	xorwf	??_Lcd_Chr_CP+1,w
  7440  17A8  008E               	movwf	14	;volatile
  7441                           
  7442                           ;flex_lcd.h: 140: _delay(10);
  7443  17A9  3003               	movlw	3
  7444  17AA                     u5837:	
  7445  17AA  0B89               	decfsz	9,f
  7446  17AB  2FAA               	goto	u5837
  7447  17AC  0000               	nop
  7448                           
  7449                           ;flex_lcd.h: 141: PORTAbits.RA7 = 1; _delay((unsigned long)((5)*(32000000/4000000.0))); 
      +                          PORTAbits.RA7 = 0;
  7450  17AD  0140               	movlb	0	; select bank0
  7451  17AE  178C               	bsf	12,7	;volatile
  7452  17AF  300D               	movlw	13
  7453  17B0                     u5847:	
  7454  17B0  0B89               	decfsz	9,f
  7455  17B1  2FB0               	goto	u5847
  7456  17B2  0000               	nop
  7457  17B3  0140               	movlb	0	; select bank0
  7458  17B4  138C               	bcf	12,7	;volatile
  7459                           
  7460                           ;flex_lcd.h: 142: PORTCbits.RC3 = (data & 0b00001000)>>3; PORTCbits.RC2 = (data & 0b0000
      +                          0100)>>2;
  7461  17B5  0826               	movf	Lcd_Chr_CP@data,w
  7462  17B6  00A4               	movwf	??_Lcd_Chr_CP
  7463  17B7  3003               	movlw	3
  7464  17B8                     u4645:	
  7465  17B8  36A4               	lsrf	??_Lcd_Chr_CP,f
  7466  17B9  0B89               	decfsz	9,f
  7467  17BA  2FB8               	goto	u4645
  7468  17BB  0824               	movf	??_Lcd_Chr_CP,w
  7469  17BC  3901               	andlw	1
  7470  17BD  00A5               	movwf	??_Lcd_Chr_CP+1
  7471  17BE  0DA5               	rlf	??_Lcd_Chr_CP+1,f
  7472  17BF  0DA5               	rlf	??_Lcd_Chr_CP+1,f
  7473  17C0  0DA5               	rlf	??_Lcd_Chr_CP+1,f
  7474  17C1  080E               	movf	14,w	;volatile
  7475  17C2  0625               	xorwf	??_Lcd_Chr_CP+1,w
  7476  17C3  39F7               	andlw	-9
  7477  17C4  0625               	xorwf	??_Lcd_Chr_CP+1,w
  7478  17C5  008E               	movwf	14	;volatile
  7479  17C6  0826               	movf	Lcd_Chr_CP@data,w
  7480  17C7  00A4               	movwf	??_Lcd_Chr_CP
  7481  17C8  3002               	movlw	2
  7482  17C9                     u4655:	
  7483  17C9  36A4               	lsrf	??_Lcd_Chr_CP,f
  7484  17CA  0B89               	decfsz	9,f
  7485  17CB  2FC9               	goto	u4655
  7486  17CC  0824               	movf	??_Lcd_Chr_CP,w
  7487  17CD  3901               	andlw	1
  7488  17CE  00A5               	movwf	??_Lcd_Chr_CP+1
  7489  17CF  0DA5               	rlf	??_Lcd_Chr_CP+1,f
  7490  17D0  0DA5               	rlf	??_Lcd_Chr_CP+1,f
  7491  17D1  080E               	movf	14,w	;volatile
  7492  17D2  0625               	xorwf	??_Lcd_Chr_CP+1,w
  7493  17D3  39FB               	andlw	-5
  7494  17D4  0625               	xorwf	??_Lcd_Chr_CP+1,w
  7495  17D5  008E               	movwf	14	;volatile
  7496                           
  7497                           ;flex_lcd.h: 143: PORTCbits.RC1 = (data & 0b00000010)>>1; PORTCbits.RC0 = (data & 0b0000
      +                          0001);
  7498  17D6  3626               	lsrf	Lcd_Chr_CP@data,w
  7499  17D7  3901               	andlw	1
  7500  17D8  00A4               	movwf	??_Lcd_Chr_CP
  7501  17D9  0DA4               	rlf	??_Lcd_Chr_CP,f
  7502  17DA  080E               	movf	14,w	;volatile
  7503  17DB  0624               	xorwf	??_Lcd_Chr_CP,w
  7504  17DC  39FD               	andlw	-3
  7505  17DD  0624               	xorwf	??_Lcd_Chr_CP,w
  7506  17DE  008E               	movwf	14	;volatile
  7507  17DF  3001               	movlw	1
  7508  17E0  0526               	andwf	Lcd_Chr_CP@data,w
  7509  17E1  00A4               	movwf	??_Lcd_Chr_CP
  7510  17E2  080E               	movf	14,w	;volatile
  7511  17E3  0624               	xorwf	??_Lcd_Chr_CP,w
  7512  17E4  39FE               	andlw	-2
  7513  17E5  0624               	xorwf	??_Lcd_Chr_CP,w
  7514  17E6  008E               	movwf	14	;volatile
  7515                           
  7516                           ;flex_lcd.h: 144: _delay(10);
  7517  17E7  3003               	movlw	3
  7518  17E8                     u5857:	
  7519  17E8  0B89               	decfsz	9,f
  7520  17E9  2FE8               	goto	u5857
  7521  17EA  0000               	nop
  7522                           
  7523                           ;flex_lcd.h: 145: PORTAbits.RA7 = 1; _delay((unsigned long)((5)*(32000000/4000000.0))); 
      +                          PORTAbits.RA7 = 0;
  7524  17EB  0140               	movlb	0	; select bank0
  7525  17EC  178C               	bsf	12,7	;volatile
  7526  17ED  300D               	movlw	13
  7527  17EE                     u5867:	
  7528  17EE  0B89               	decfsz	9,f
  7529  17EF  2FEE               	goto	u5867
  7530  17F0  0000               	nop
  7531  17F1  0140               	movlb	0	; select bank0
  7532  17F2  138C               	bcf	12,7	;volatile
  7533                           
  7534                           ;flex_lcd.h: 146: _delay((unsigned long)((5)*(32000000/4000000.0))); _delay((unsigned lo
      +                          ng)((5500)*(32000000/4000000.0)));
  7535  17F3  300D               	movlw	13
  7536  17F4                     u5877:	
  7537  17F4  0B89               	decfsz	9,f
  7538  17F5  2FF4               	goto	u5877
  7539  17F6  0000               	nop
  7540  17F7  303A               	movlw	58
  7541  17F8  0140               	movlb	0	; select bank0
  7542  17F9  00A4               	movwf	??_Lcd_Chr_CP
  7543  17FA  3023               	movlw	35
  7544  17FB                     u5887:	
  7545  17FB  0B89               	decfsz	9,f
  7546  17FC  2FFB               	goto	u5887
  7547  17FD  0BA4               	decfsz	??_Lcd_Chr_CP,f
  7548  17FE  2FFB               	goto	u5887
  7549  17FF  0008               	return
  7550  1800                     __end_of_Lcd_Chr_CP:	
  7551                           
  7552                           	psect	text21
  7553  096D                     __ptext21:	
  7554 ;; *************** function _Lcd_Init *****************
  7555 ;; Defined at:
  7556 ;;		line 52 in file "flex_lcd.h"
  7557 ;; Parameters:    Size  Location     Type
  7558 ;;		None
  7559 ;; Auto vars:     Size  Location     Type
  7560 ;;  data            1    8[BANK0 ] unsigned char 
  7561 ;; Return value:  Size  Location     Type
  7562 ;;                  1    wreg      void 
  7563 ;; Registers used:
  7564 ;;		wreg, status,2, status,0, pclath, cstack
  7565 ;; Tracked objects:
  7566 ;;		On entry : 0/0
  7567 ;;		On exit  : 0/0
  7568 ;;		Unchanged: 0/0
  7569 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
  7570 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  7571 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  7572 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  7573 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  7574 ;;Total ram usage:        2 bytes
  7575 ;; Hardware stack levels used:    1
  7576 ;; Hardware stack levels required when called:    3
  7577 ;; This function calls:
  7578 ;;		_Lcd_Cmd
  7579 ;; This function is called by:
  7580 ;;		_main
  7581 ;; This function uses a non-reentrant model
  7582 ;;
  7583                           
  7584                           
  7585                           ;psect for function _Lcd_Init
  7586  096D                     _Lcd_Init:	
  7587                           
  7588                           ;flex_lcd.h: 53: unsigned char data;
  7589                           ;flex_lcd.h: 54: TRISCbits.TRISC3 = 0;
  7590                           
  7591                           ;incstack = 0
  7592                           ; Regs used in _Lcd_Init: [wreg+status,2+status,0+pclath+cstack]
  7593  096D  0140               	movlb	0	; select bank0
  7594  096E  1193               	bcf	19,3	;volatile
  7595                           
  7596                           ;flex_lcd.h: 55: TRISCbits.TRISC2 = 0;
  7597  096F  1113               	bcf	19,2	;volatile
  7598                           
  7599                           ;flex_lcd.h: 56: TRISCbits.TRISC1 = 0;
  7600  0970  1093               	bcf	19,1	;volatile
  7601                           
  7602                           ;flex_lcd.h: 57: TRISCbits.TRISC0 = 0;
  7603  0971  1013               	bcf	19,0	;volatile
  7604                           
  7605                           ;flex_lcd.h: 58: TRISAbits.TRISA7 = 0;
  7606  0972  1391               	bcf	17,7	;volatile
  7607                           
  7608                           ;flex_lcd.h: 59: TRISAbits.TRISA6 = 0;
  7609  0973  1311               	bcf	17,6	;volatile
  7610                           
  7611                           ;flex_lcd.h: 60: PORTCbits.RC3 = 0;
  7612  0974  118E               	bcf	14,3	;volatile
  7613                           
  7614                           ;flex_lcd.h: 61: PORTCbits.RC2 = 0;
  7615  0975  110E               	bcf	14,2	;volatile
  7616                           
  7617                           ;flex_lcd.h: 62: PORTCbits.RC1 = 0;
  7618  0976  108E               	bcf	14,1	;volatile
  7619                           
  7620                           ;flex_lcd.h: 63: PORTCbits.RC0 = 0;
  7621  0977  100E               	bcf	14,0	;volatile
  7622                           
  7623                           ;flex_lcd.h: 64: PORTAbits.RA7 = 0;
  7624  0978  138C               	bcf	12,7	;volatile
  7625                           
  7626                           ;flex_lcd.h: 65: PORTAbits.RA6 = 0;
  7627  0979  130C               	bcf	12,6	;volatile
  7628                           
  7629                           ;flex_lcd.h: 66: _delay((unsigned long)((5500)*(32000000/4000000.0)));
  7630  097A  303A               	movlw	58
  7631  097B  0140               	movlb	0	; select bank0
  7632  097C  00A7               	movwf	??_Lcd_Init
  7633  097D  3023               	movlw	35
  7634  097E                     u5897:	
  7635  097E  0B89               	decfsz	9,f
  7636  097F  297E               	goto	u5897
  7637  0980  0BA7               	decfsz	??_Lcd_Init,f
  7638  0981  297E               	goto	u5897
  7639                           
  7640                           ;flex_lcd.h: 67: _delay((unsigned long)((5500)*(32000000/4000000.0)));
  7641  0982  303A               	movlw	58
  7642  0983  0140               	movlb	0	; select bank0
  7643  0984  00A7               	movwf	??_Lcd_Init
  7644  0985  3023               	movlw	35
  7645  0986                     u5907:	
  7646  0986  0B89               	decfsz	9,f
  7647  0987  2986               	goto	u5907
  7648  0988  0BA7               	decfsz	??_Lcd_Init,f
  7649  0989  2986               	goto	u5907
  7650                           
  7651                           ;flex_lcd.h: 68: _delay((unsigned long)((5500)*(32000000/4000000.0)));
  7652  098A  303A               	movlw	58
  7653  098B  0140               	movlb	0	; select bank0
  7654  098C  00A7               	movwf	??_Lcd_Init
  7655  098D  3023               	movlw	35
  7656  098E                     u5917:	
  7657  098E  0B89               	decfsz	9,f
  7658  098F  298E               	goto	u5917
  7659  0990  0BA7               	decfsz	??_Lcd_Init,f
  7660  0991  298E               	goto	u5917
  7661                           
  7662                           ;flex_lcd.h: 69: _delay((unsigned long)((5500)*(32000000/4000000.0)));
  7663  0992  303A               	movlw	58
  7664  0993  0140               	movlb	0	; select bank0
  7665  0994  00A7               	movwf	??_Lcd_Init
  7666  0995  3023               	movlw	35
  7667  0996                     u5927:	
  7668  0996  0B89               	decfsz	9,f
  7669  0997  2996               	goto	u5927
  7670  0998  0BA7               	decfsz	??_Lcd_Init,f
  7671  0999  2996               	goto	u5927
  7672                           
  7673                           ;flex_lcd.h: 70: _delay((unsigned long)((5500)*(32000000/4000000.0)));
  7674  099A  303A               	movlw	58
  7675  099B  0140               	movlb	0	; select bank0
  7676  099C  00A7               	movwf	??_Lcd_Init
  7677  099D  3023               	movlw	35
  7678  099E                     u5937:	
  7679  099E  0B89               	decfsz	9,f
  7680  099F  299E               	goto	u5937
  7681  09A0  0BA7               	decfsz	??_Lcd_Init,f
  7682  09A1  299E               	goto	u5937
  7683                           
  7684                           ;flex_lcd.h: 71: _delay((unsigned long)((5500)*(32000000/4000000.0)));
  7685  09A2  303A               	movlw	58
  7686  09A3  0140               	movlb	0	; select bank0
  7687  09A4  00A7               	movwf	??_Lcd_Init
  7688  09A5  3023               	movlw	35
  7689  09A6                     u5947:	
  7690  09A6  0B89               	decfsz	9,f
  7691  09A7  29A6               	goto	u5947
  7692  09A8  0BA7               	decfsz	??_Lcd_Init,f
  7693  09A9  29A6               	goto	u5947
  7694                           
  7695                           ;flex_lcd.h: 72: for(data = 1; data < 4; data ++)
  7696  09AA  0140               	movlb	0	; select bank0
  7697  09AB  01A8               	clrf	Lcd_Init@data
  7698  09AC  0AA8               	incf	Lcd_Init@data,f
  7699  09AD  3004               	movlw	4
  7700  09AE  0228               	subwf	Lcd_Init@data,w
  7701  09AF  1803               	btfsc	3,0
  7702  09B0  29D9               	goto	l90
  7703  09B1                     l89:	
  7704                           
  7705                           ;flex_lcd.h: 73: {
  7706                           ;flex_lcd.h: 74: PORTCbits.RC3 = 0; PORTCbits.RC2 = 0; PORTCbits.RC1 = 1; PORTCbits.RC0 
      +                          = 1; PORTAbits.RA7 = 0;
  7707  09B1  118E               	bcf	14,3	;volatile
  7708  09B2  110E               	bcf	14,2	;volatile
  7709  09B3  148E               	bsf	14,1	;volatile
  7710  09B4  140E               	bsf	14,0	;volatile
  7711  09B5  138C               	bcf	12,7	;volatile
  7712                           
  7713                           ;flex_lcd.h: 75: PORTAbits.RA6 = 0; PORTCbits.RC3 = 0; PORTCbits.RC2 = 0; PORTCbits.RC1 
      +                          = 1; PORTCbits.RC0 = 1;
  7714  09B6  130C               	bcf	12,6	;volatile
  7715  09B7  118E               	bcf	14,3	;volatile
  7716  09B8  110E               	bcf	14,2	;volatile
  7717  09B9  148E               	bsf	14,1	;volatile
  7718  09BA  140E               	bsf	14,0	;volatile
  7719                           
  7720                           ;flex_lcd.h: 76: PORTAbits.RA7 = 1; PORTAbits.RA6 = 0;
  7721  09BB  178C               	bsf	12,7	;volatile
  7722  09BC  130C               	bcf	12,6	;volatile
  7723                           
  7724                           ;flex_lcd.h: 77: _delay((unsigned long)((5)*(32000000/4000000.0)));
  7725  09BD  300D               	movlw	13
  7726  09BE                     u5957:	
  7727  09BE  0B89               	decfsz	9,f
  7728  09BF  29BE               	goto	u5957
  7729  09C0  0000               	nop
  7730                           
  7731                           ;flex_lcd.h: 78: PORTCbits.RC3 = 0; PORTCbits.RC2 = 0; PORTCbits.RC1 = 1; PORTCbits.RC0 
      +                          = 1; PORTAbits.RA7 = 0;
  7732  09C1  0140               	movlb	0	; select bank0
  7733  09C2  118E               	bcf	14,3	;volatile
  7734  09C3  110E               	bcf	14,2	;volatile
  7735  09C4  148E               	bsf	14,1	;volatile
  7736  09C5  140E               	bsf	14,0	;volatile
  7737  09C6  138C               	bcf	12,7	;volatile
  7738                           
  7739                           ;flex_lcd.h: 79: PORTAbits.RA6 = 0;
  7740  09C7  130C               	bcf	12,6	;volatile
  7741                           
  7742                           ;flex_lcd.h: 80: _delay((unsigned long)((5500)*(32000000/4000000.0)));
  7743  09C8  303A               	movlw	58
  7744  09C9  0140               	movlb	0	; select bank0
  7745  09CA  00A7               	movwf	??_Lcd_Init
  7746  09CB  3023               	movlw	35
  7747  09CC                     u5967:	
  7748  09CC  0B89               	decfsz	9,f
  7749  09CD  29CC               	goto	u5967
  7750  09CE  0BA7               	decfsz	??_Lcd_Init,f
  7751  09CF  29CC               	goto	u5967
  7752  09D0  3001               	movlw	1
  7753  09D1  0140               	movlb	0	; select bank0
  7754  09D2  00A7               	movwf	??_Lcd_Init
  7755  09D3  0827               	movf	??_Lcd_Init,w
  7756  09D4  07A8               	addwf	Lcd_Init@data,f
  7757  09D5  3004               	movlw	4
  7758  09D6  0228               	subwf	Lcd_Init@data,w
  7759  09D7  1C03               	skipc
  7760  09D8  29B1               	goto	l89
  7761  09D9                     l90:	
  7762                           
  7763                           ;flex_lcd.h: 81: }
  7764                           ;flex_lcd.h: 82: PORTCbits.RC3 = 0; PORTCbits.RC2 = 0; PORTCbits.RC1 = 1; PORTCbits.RC0 
      +                          = 0; PORTAbits.RA7 = 0; PORTAbits.RA6 = 0;
  7765  09D9  118E               	bcf	14,3	;volatile
  7766  09DA  110E               	bcf	14,2	;volatile
  7767  09DB  148E               	bsf	14,1	;volatile
  7768  09DC  100E               	bcf	14,0	;volatile
  7769  09DD  138C               	bcf	12,7	;volatile
  7770  09DE  130C               	bcf	12,6	;volatile
  7771                           
  7772                           ;flex_lcd.h: 83: PORTCbits.RC3 = 0; PORTCbits.RC2 = 0; PORTCbits.RC1 = 1; PORTCbits.RC0 
      +                          = 0; PORTAbits.RA7 = 1; PORTAbits.RA6 = 0;
  7773  09DF  118E               	bcf	14,3	;volatile
  7774  09E0  110E               	bcf	14,2	;volatile
  7775  09E1  148E               	bsf	14,1	;volatile
  7776  09E2  100E               	bcf	14,0	;volatile
  7777  09E3  178C               	bsf	12,7	;volatile
  7778  09E4  130C               	bcf	12,6	;volatile
  7779                           
  7780                           ;flex_lcd.h: 84: _delay((unsigned long)((5)*(32000000/4000000.0)));
  7781  09E5  300D               	movlw	13
  7782  09E6                     u5977:	
  7783  09E6  0B89               	decfsz	9,f
  7784  09E7  29E6               	goto	u5977
  7785  09E8  0000               	nop
  7786                           
  7787                           ;flex_lcd.h: 85: PORTCbits.RC3 = 0; PORTCbits.RC2 = 0; PORTCbits.RC1 = 1; PORTCbits.RC0 
      +                          = 0; PORTAbits.RA7 = 0; PORTAbits.RA6 = 0;
  7788  09E9  0140               	movlb	0	; select bank0
  7789  09EA  118E               	bcf	14,3	;volatile
  7790  09EB  110E               	bcf	14,2	;volatile
  7791  09EC  148E               	bsf	14,1	;volatile
  7792  09ED  100E               	bcf	14,0	;volatile
  7793  09EE  138C               	bcf	12,7	;volatile
  7794  09EF  130C               	bcf	12,6	;volatile
  7795                           
  7796                           ;flex_lcd.h: 86: _delay((unsigned long)((5500)*(32000000/4000000.0)));
  7797  09F0  303A               	movlw	58
  7798  09F1  0140               	movlb	0	; select bank0
  7799  09F2  00A7               	movwf	??_Lcd_Init
  7800  09F3  3023               	movlw	35
  7801  09F4                     u5987:	
  7802  09F4  0B89               	decfsz	9,f
  7803  09F5  29F4               	goto	u5987
  7804  09F6  0BA7               	decfsz	??_Lcd_Init,f
  7805  09F7  29F4               	goto	u5987
  7806                           
  7807                           ;flex_lcd.h: 87: data = 40; Lcd_Cmd(data);
  7808  09F8  3028               	movlw	40
  7809  09F9  0140               	movlb	0	; select bank0
  7810  09FA  00A7               	movwf	??_Lcd_Init
  7811  09FB  0827               	movf	??_Lcd_Init,w
  7812  09FC  00A8               	movwf	Lcd_Init@data
  7813  09FD  0828               	movf	Lcd_Init@data,w
  7814  09FE  3196  26D2  3189   	fcall	_Lcd_Cmd
  7815                           
  7816                           ;flex_lcd.h: 88: data = 16; Lcd_Cmd(data);
  7817  0A01  3010               	movlw	16
  7818  0A02  0140               	movlb	0	; select bank0
  7819  0A03  00A7               	movwf	??_Lcd_Init
  7820  0A04  0827               	movf	??_Lcd_Init,w
  7821  0A05  00A8               	movwf	Lcd_Init@data
  7822  0A06  0828               	movf	Lcd_Init@data,w
  7823  0A07  3196  26D2  3189   	fcall	_Lcd_Cmd
  7824                           
  7825                           ;flex_lcd.h: 89: data = 1; Lcd_Cmd(data);
  7826  0A0A  0140               	movlb	0	; select bank0
  7827  0A0B  01A8               	clrf	Lcd_Init@data
  7828  0A0C  0AA8               	incf	Lcd_Init@data,f
  7829  0A0D  0828               	movf	Lcd_Init@data,w
  7830  0A0E  3196  26D2  3189   	fcall	_Lcd_Cmd
  7831                           
  7832                           ;flex_lcd.h: 90: data = 15; Lcd_Cmd(data);
  7833  0A11  300F               	movlw	15
  7834  0A12  0140               	movlb	0	; select bank0
  7835  0A13  00A7               	movwf	??_Lcd_Init
  7836  0A14  0827               	movf	??_Lcd_Init,w
  7837  0A15  00A8               	movwf	Lcd_Init@data
  7838  0A16  0828               	movf	Lcd_Init@data,w
  7839  0A17  3196  26D2         	fcall	_Lcd_Cmd
  7840  0A19  0008               	return
  7841  0A1A                     __end_of_Lcd_Init:	
  7842                           
  7843                           	psect	text22
  7844  16D2                     __ptext22:	
  7845 ;; *************** function _Lcd_Cmd *****************
  7846 ;; Defined at:
  7847 ;;		line 150 in file "flex_lcd.h"
  7848 ;; Parameters:    Size  Location     Type
  7849 ;;  data            1    wreg     unsigned char 
  7850 ;; Auto vars:     Size  Location     Type
  7851 ;;  data            1    6[BANK0 ] unsigned char 
  7852 ;; Return value:  Size  Location     Type
  7853 ;;                  1    wreg      void 
  7854 ;; Registers used:
  7855 ;;		wreg, status,2, status,0
  7856 ;; Tracked objects:
  7857 ;;		On entry : 0/0
  7858 ;;		On exit  : 0/0
  7859 ;;		Unchanged: 0/0
  7860 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
  7861 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  7862 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  7863 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  7864 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  7865 ;;Total ram usage:        3 bytes
  7866 ;; Hardware stack levels used:    1
  7867 ;; Hardware stack levels required when called:    2
  7868 ;; This function calls:
  7869 ;;		Nothing
  7870 ;; This function is called by:
  7871 ;;		_Lcd_Init
  7872 ;;		_Lcd_Out2
  7873 ;;		_main
  7874 ;;		_Lcd_Out
  7875 ;; This function uses a non-reentrant model
  7876 ;;
  7877                           
  7878                           
  7879                           ;psect for function _Lcd_Cmd
  7880  16D2                     _Lcd_Cmd:	
  7881                           
  7882                           ;incstack = 0
  7883                           ; Regs used in _Lcd_Cmd: [wreg+status,2+status,0]
  7884                           ;Lcd_Cmd@data stored from wreg
  7885  16D2  0140               	movlb	0	; select bank0
  7886  16D3  00A6               	movwf	Lcd_Cmd@data
  7887                           
  7888                           ;flex_lcd.h: 151: PORTAbits.RA7 = 0; PORTAbits.RA6 = 0;
  7889  16D4  138C               	bcf	12,7	;volatile
  7890  16D5  130C               	bcf	12,6	;volatile
  7891                           
  7892                           ;flex_lcd.h: 152: PORTCbits.RC3 = (data & 0b10000000)>>7; PORTCbits.RC2 = (data & 0b0100
      +                          0000)>>6;
  7893  16D6  0826               	movf	Lcd_Cmd@data,w
  7894  16D7  00A4               	movwf	??_Lcd_Cmd
  7895  16D8  3007               	movlw	7
  7896  16D9                     u4545:	
  7897  16D9  36A4               	lsrf	??_Lcd_Cmd,f
  7898  16DA  0B89               	decfsz	9,f
  7899  16DB  2ED9               	goto	u4545
  7900  16DC  0824               	movf	??_Lcd_Cmd,w
  7901  16DD  3901               	andlw	1
  7902  16DE  00A5               	movwf	??_Lcd_Cmd+1
  7903  16DF  0DA5               	rlf	??_Lcd_Cmd+1,f
  7904  16E0  0DA5               	rlf	??_Lcd_Cmd+1,f
  7905  16E1  0DA5               	rlf	??_Lcd_Cmd+1,f
  7906  16E2  080E               	movf	14,w	;volatile
  7907  16E3  0625               	xorwf	??_Lcd_Cmd+1,w
  7908  16E4  39F7               	andlw	-9
  7909  16E5  0625               	xorwf	??_Lcd_Cmd+1,w
  7910  16E6  008E               	movwf	14	;volatile
  7911  16E7  0826               	movf	Lcd_Cmd@data,w
  7912  16E8  00A4               	movwf	??_Lcd_Cmd
  7913  16E9  3006               	movlw	6
  7914  16EA                     u4555:	
  7915  16EA  36A4               	lsrf	??_Lcd_Cmd,f
  7916  16EB  0B89               	decfsz	9,f
  7917  16EC  2EEA               	goto	u4555
  7918  16ED  0824               	movf	??_Lcd_Cmd,w
  7919  16EE  3901               	andlw	1
  7920  16EF  00A5               	movwf	??_Lcd_Cmd+1
  7921  16F0  0DA5               	rlf	??_Lcd_Cmd+1,f
  7922  16F1  0DA5               	rlf	??_Lcd_Cmd+1,f
  7923  16F2  080E               	movf	14,w	;volatile
  7924  16F3  0625               	xorwf	??_Lcd_Cmd+1,w
  7925  16F4  39FB               	andlw	-5
  7926  16F5  0625               	xorwf	??_Lcd_Cmd+1,w
  7927  16F6  008E               	movwf	14	;volatile
  7928                           
  7929                           ;flex_lcd.h: 153: PORTCbits.RC1 = (data & 0b00100000)>>5; PORTCbits.RC0 = (data & 0b0001
      +                          0000)>>4;
  7930  16F7  0826               	movf	Lcd_Cmd@data,w
  7931  16F8  00A4               	movwf	??_Lcd_Cmd
  7932  16F9  3005               	movlw	5
  7933  16FA                     u4565:	
  7934  16FA  36A4               	lsrf	??_Lcd_Cmd,f
  7935  16FB  0B89               	decfsz	9,f
  7936  16FC  2EFA               	goto	u4565
  7937  16FD  0824               	movf	??_Lcd_Cmd,w
  7938  16FE  3901               	andlw	1
  7939  16FF  00A5               	movwf	??_Lcd_Cmd+1
  7940  1700  0DA5               	rlf	??_Lcd_Cmd+1,f
  7941  1701  080E               	movf	14,w	;volatile
  7942  1702  0625               	xorwf	??_Lcd_Cmd+1,w
  7943  1703  39FD               	andlw	-3
  7944  1704  0625               	xorwf	??_Lcd_Cmd+1,w
  7945  1705  008E               	movwf	14	;volatile
  7946  1706  0826               	movf	Lcd_Cmd@data,w
  7947  1707  00A4               	movwf	??_Lcd_Cmd
  7948  1708  3004               	movlw	4
  7949  1709                     u4575:	
  7950  1709  36A4               	lsrf	??_Lcd_Cmd,f
  7951  170A  0B89               	decfsz	9,f
  7952  170B  2F09               	goto	u4575
  7953  170C  3001               	movlw	1
  7954  170D  0524               	andwf	??_Lcd_Cmd,w
  7955  170E  00A5               	movwf	??_Lcd_Cmd+1
  7956  170F  080E               	movf	14,w	;volatile
  7957  1710  0625               	xorwf	??_Lcd_Cmd+1,w
  7958  1711  39FE               	andlw	-2
  7959  1712  0625               	xorwf	??_Lcd_Cmd+1,w
  7960  1713  008E               	movwf	14	;volatile
  7961                           
  7962                           ;flex_lcd.h: 154: _delay(10);
  7963  1714  3003               	movlw	3
  7964  1715                     u5997:	
  7965  1715  0B89               	decfsz	9,f
  7966  1716  2F15               	goto	u5997
  7967  1717  0000               	nop
  7968                           
  7969                           ;flex_lcd.h: 155: PORTAbits.RA7 = 1; _delay((unsigned long)((5)*(32000000/4000000.0))); 
      +                          PORTAbits.RA7 = 0;
  7970  1718  0140               	movlb	0	; select bank0
  7971  1719  178C               	bsf	12,7	;volatile
  7972  171A  300D               	movlw	13
  7973  171B                     u6007:	
  7974  171B  0B89               	decfsz	9,f
  7975  171C  2F1B               	goto	u6007
  7976  171D  0000               	nop
  7977  171E  0140               	movlb	0	; select bank0
  7978  171F  138C               	bcf	12,7	;volatile
  7979                           
  7980                           ;flex_lcd.h: 156: PORTCbits.RC3 = (data & 0b00001000)>>3; PORTCbits.RC2 = (data & 0b0000
      +                          0100)>>2;
  7981  1720  0826               	movf	Lcd_Cmd@data,w
  7982  1721  00A4               	movwf	??_Lcd_Cmd
  7983  1722  3003               	movlw	3
  7984  1723                     u4585:	
  7985  1723  36A4               	lsrf	??_Lcd_Cmd,f
  7986  1724  0B89               	decfsz	9,f
  7987  1725  2F23               	goto	u4585
  7988  1726  0824               	movf	??_Lcd_Cmd,w
  7989  1727  3901               	andlw	1
  7990  1728  00A5               	movwf	??_Lcd_Cmd+1
  7991  1729  0DA5               	rlf	??_Lcd_Cmd+1,f
  7992  172A  0DA5               	rlf	??_Lcd_Cmd+1,f
  7993  172B  0DA5               	rlf	??_Lcd_Cmd+1,f
  7994  172C  080E               	movf	14,w	;volatile
  7995  172D  0625               	xorwf	??_Lcd_Cmd+1,w
  7996  172E  39F7               	andlw	-9
  7997  172F  0625               	xorwf	??_Lcd_Cmd+1,w
  7998  1730  008E               	movwf	14	;volatile
  7999  1731  0826               	movf	Lcd_Cmd@data,w
  8000  1732  00A4               	movwf	??_Lcd_Cmd
  8001  1733  3002               	movlw	2
  8002  1734                     u4595:	
  8003  1734  36A4               	lsrf	??_Lcd_Cmd,f
  8004  1735  0B89               	decfsz	9,f
  8005  1736  2F34               	goto	u4595
  8006  1737  0824               	movf	??_Lcd_Cmd,w
  8007  1738  3901               	andlw	1
  8008  1739  00A5               	movwf	??_Lcd_Cmd+1
  8009  173A  0DA5               	rlf	??_Lcd_Cmd+1,f
  8010  173B  0DA5               	rlf	??_Lcd_Cmd+1,f
  8011  173C  080E               	movf	14,w	;volatile
  8012  173D  0625               	xorwf	??_Lcd_Cmd+1,w
  8013  173E  39FB               	andlw	-5
  8014  173F  0625               	xorwf	??_Lcd_Cmd+1,w
  8015  1740  008E               	movwf	14	;volatile
  8016                           
  8017                           ;flex_lcd.h: 157: PORTCbits.RC1 = (data & 0b00000010)>>1; PORTCbits.RC0 = (data & 0b0000
      +                          0001);
  8018  1741  3626               	lsrf	Lcd_Cmd@data,w
  8019  1742  3901               	andlw	1
  8020  1743  00A4               	movwf	??_Lcd_Cmd
  8021  1744  0DA4               	rlf	??_Lcd_Cmd,f
  8022  1745  080E               	movf	14,w	;volatile
  8023  1746  0624               	xorwf	??_Lcd_Cmd,w
  8024  1747  39FD               	andlw	-3
  8025  1748  0624               	xorwf	??_Lcd_Cmd,w
  8026  1749  008E               	movwf	14	;volatile
  8027  174A  3001               	movlw	1
  8028  174B  0526               	andwf	Lcd_Cmd@data,w
  8029  174C  00A4               	movwf	??_Lcd_Cmd
  8030  174D  080E               	movf	14,w	;volatile
  8031  174E  0624               	xorwf	??_Lcd_Cmd,w
  8032  174F  39FE               	andlw	-2
  8033  1750  0624               	xorwf	??_Lcd_Cmd,w
  8034  1751  008E               	movwf	14	;volatile
  8035                           
  8036                           ;flex_lcd.h: 158: _delay(10);
  8037  1752  3003               	movlw	3
  8038  1753                     u6017:	
  8039  1753  0B89               	decfsz	9,f
  8040  1754  2F53               	goto	u6017
  8041  1755  0000               	nop
  8042                           
  8043                           ;flex_lcd.h: 159: PORTAbits.RA7 = 1; _delay((unsigned long)((5)*(32000000/4000000.0))); 
      +                          PORTAbits.RA7 = 0;
  8044  1756  0140               	movlb	0	; select bank0
  8045  1757  178C               	bsf	12,7	;volatile
  8046  1758  300D               	movlw	13
  8047  1759                     u6027:	
  8048  1759  0B89               	decfsz	9,f
  8049  175A  2F59               	goto	u6027
  8050  175B  0000               	nop
  8051  175C  0140               	movlb	0	; select bank0
  8052  175D  138C               	bcf	12,7	;volatile
  8053                           
  8054                           ;flex_lcd.h: 160: _delay((unsigned long)((5500)*(32000000/4000000.0)));
  8055  175E  303A               	movlw	58
  8056  175F  0140               	movlb	0	; select bank0
  8057  1760  00A4               	movwf	??_Lcd_Cmd
  8058  1761  3023               	movlw	35
  8059  1762                     u6037:	
  8060  1762  0B89               	decfsz	9,f
  8061  1763  2F62               	goto	u6037
  8062  1764  0BA4               	decfsz	??_Lcd_Cmd,f
  8063  1765  2F62               	goto	u6037
  8064  1766  0008               	return
  8065  1767                     __end_of_Lcd_Cmd:	
  8066                           
  8067                           	psect	intentry
  8068  0004                     __pintentry:	
  8069 ;; *************** function _interrupcio *****************
  8070 ;; Defined at:
  8071 ;;		line 132 in file "main.c"
  8072 ;; Parameters:    Size  Location     Type
  8073 ;;		None
  8074 ;; Auto vars:     Size  Location     Type
  8075 ;;		None
  8076 ;; Return value:  Size  Location     Type
  8077 ;;                  1    wreg      void 
  8078 ;; Registers used:
  8079 ;;		wreg, status,2, status,0, pclath, cstack
  8080 ;; Tracked objects:
  8081 ;;		On entry : 0/0
  8082 ;;		On exit  : 0/0
  8083 ;;		Unchanged: 0/0
  8084 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
  8085 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  8086 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  8087 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  8088 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  8089 ;;Total ram usage:        3 bytes
  8090 ;; Hardware stack levels used:    1
  8091 ;; Hardware stack levels required when called:    1
  8092 ;; This function calls:
  8093 ;;		_retardo
  8094 ;;		i1___awdiv
  8095 ;;		i1___wmul
  8096 ;; This function is called by:
  8097 ;;		Interrupt level 1
  8098 ;; This function uses a non-reentrant model
  8099 ;;
  8100                           
  8101  0004                     _interrupcio:	
  8102                           
  8103                           ;incstack = 0
  8104  0004  147E               	bsf	126,0	;set compiler interrupt flag (level 1)
  8105                           
  8106                           ; Regs used in _interrupcio: [wreg+status,2+status,0+pclath+cstack]
  8107  0005  3180               	pagesel	$
  8108  0006  0140               	movlb	0	; select bank0
  8109  0007  087F               	movf	127,w
  8110  0008  00FD               	movwf	??_interrupcio+2
  8111                           
  8112                           ;main.c: 133: if(IOCBFbits.IOCBF0==1){
  8113  0009  017E               	movlb	62	; select bank62
  8114  000A  1C4A               	btfss	74,0	;volatile
  8115  000B  2872               	goto	i1l223
  8116                           
  8117                           ;main.c: 134: angulo=U;
  8118  000C  0140               	movlb	0	; select bank0
  8119  000D  0868               	movf	_U+1,w
  8120  000E  0141               	movlb	1	; select bank1
  8121  000F  00BF               	movwf	(_angulo+1)^(0+128)
  8122  0010  0140               	movlb	0	; select bank0
  8123  0011  0867               	movf	_U,w
  8124  0012  0141               	movlb	1	; select bank1
  8125  0013  00BE               	movwf	_angulo^(0+128)
  8126                           
  8127                           ;main.c: 135: energia=(angulo*100)/limite;
  8128  0014  0140               	movlb	0	; select bank0
  8129  0015  086A               	movf	_limite+1,w
  8130  0016  00F7               	movwf	i1___awdiv@divisor+1
  8131  0017  0869               	movf	_limite,w
  8132  0018  00F6               	movwf	i1___awdiv@divisor
  8133  0019  0141               	movlb	1	; select bank1
  8134  001A  083F               	movf	(_angulo+1)^(0+128),w
  8135  001B  00F1               	movwf	i1___wmul@multiplier+1
  8136  001C  083E               	movf	_angulo^(0+128),w
  8137  001D  00F0               	movwf	i1___wmul@multiplier
  8138  001E  3064               	movlw	100
  8139  001F  00F2               	movwf	i1___wmul@multiplicand
  8140  0020  3000               	movlw	0
  8141  0021  00F3               	movwf	i1___wmul@multiplicand+1
  8142  0022  3194  2407  3180   	fcall	i1___wmul
  8143  0025  0871               	movf	?i1___wmul+1,w
  8144  0026  00F9               	movwf	i1___awdiv@dividend+1
  8145  0027  0870               	movf	?i1___wmul,w
  8146  0028  00F8               	movwf	i1___awdiv@dividend
  8147  0029  3195  25A7  3180   	fcall	i1___awdiv
  8148  002C  0877               	movf	?i1___awdiv+1,w
  8149  002D  0141               	movlb	1	; select bank1
  8150  002E  00B7               	movwf	(_energia+1)^(0+128)
  8151  002F  0876               	movf	?i1___awdiv,w
  8152  0030  00B6               	movwf	_energia^(0+128)
  8153                           
  8154                           ;main.c: 136: angulo=limite-angulo;
  8155  0031  093E               	comf	_angulo^(0+128),w
  8156  0032  00FB               	movwf	??_interrupcio
  8157  0033  093F               	comf	(_angulo+1)^(0+128),w
  8158  0034  00FC               	movwf	??_interrupcio+1
  8159  0035  0AFB               	incf	??_interrupcio,f
  8160  0036  1903               	skipnz
  8161  0037  0AFC               	incf	??_interrupcio+1,f
  8162  0038  0140               	movlb	0	; select bank0
  8163  0039  0869               	movf	_limite,w
  8164  003A  077B               	addwf	??_interrupcio,w
  8165  003B  0141               	movlb	1	; select bank1
  8166  003C  00BE               	movwf	_angulo^(0+128)
  8167  003D  0140               	movlb	0	; select bank0
  8168  003E  086A               	movf	_limite+1,w
  8169  003F  3D7C               	addwfc	??_interrupcio+1,w
  8170  0040  0141               	movlb	1	; select bank1
  8171  0041  00BF               	movwf	(_angulo+1)^(0+128)
  8172                           
  8173                           ;main.c: 137: t=(int)((angulo*83)/180);
  8174  0042  30B4               	movlw	180
  8175  0043  00F6               	movwf	i1___awdiv@divisor
  8176  0044  3000               	movlw	0
  8177  0045  00F7               	movwf	i1___awdiv@divisor+1
  8178  0046  083F               	movf	(_angulo+1)^(0+128),w
  8179  0047  00F1               	movwf	i1___wmul@multiplier+1
  8180  0048  083E               	movf	_angulo^(0+128),w
  8181  0049  00F0               	movwf	i1___wmul@multiplier
  8182  004A  3053               	movlw	83
  8183  004B  00F2               	movwf	i1___wmul@multiplicand
  8184  004C  3000               	movlw	0
  8185  004D  00F3               	movwf	i1___wmul@multiplicand+1
  8186  004E  3194  2407  3180   	fcall	i1___wmul
  8187  0051  0871               	movf	?i1___wmul+1,w
  8188  0052  00F9               	movwf	i1___awdiv@dividend+1
  8189  0053  0870               	movf	?i1___wmul,w
  8190  0054  00F8               	movwf	i1___awdiv@dividend
  8191  0055  3195  25A7  3180   	fcall	i1___awdiv
  8192  0058  0877               	movf	?i1___awdiv+1,w
  8193  0059  0141               	movlb	1	; select bank1
  8194  005A  00BD               	movwf	(_t+1)^(0+128)
  8195  005B  0876               	movf	?i1___awdiv,w
  8196  005C  00BC               	movwf	_t^(0+128)
  8197                           
  8198                           ;main.c: 138: retardo(t);
  8199  005D  083D               	movf	(_t+1)^(0+128),w
  8200  005E  00F1               	movwf	retardo@to+1
  8201  005F  083C               	movf	_t^(0+128),w
  8202  0060  00F0               	movwf	retardo@to
  8203  0061  3188  2002  3180   	fcall	_retardo
  8204                           
  8205                           ;main.c: 139: LATAbits.LATA1=1;
  8206  0064  0140               	movlb	0	; select bank0
  8207  0065  1496               	bsf	22,1	;volatile
  8208                           
  8209                           ;main.c: 140: _delay((unsigned long)((1)*(32000000/4000.0)));
  8210  0066  300B               	movlw	11
  8211  0067  00FB               	movwf	??_interrupcio
  8212  0068  3062               	movlw	98
  8213  0069                     u604_27:	
  8214  0069  0B89               	decfsz	9,f
  8215  006A  2869               	goto	u604_27
  8216  006B  0BFB               	decfsz	??_interrupcio,f
  8217  006C  2869               	goto	u604_27
  8218  006D  3200               	nop2
  8219                           
  8220                           ;main.c: 141: LATAbits.LATA1=0;
  8221  006E  0140               	movlb	0	; select bank0
  8222  006F  1096               	bcf	22,1	;volatile
  8223                           
  8224                           ;main.c: 142: IOCBF=0;
  8225  0070  017E               	movlb	62	; select bank62
  8226  0071  01CA               	clrf	74	;volatile
  8227  0072                     i1l223:	
  8228  0072  087D               	movf	??_interrupcio+2,w
  8229  0073  0140               	movlb	0	; select bank0
  8230  0074  00FF               	movwf	127
  8231  0075  107E               	bcf	126,0	;clear compiler interrupt flag (level 1)
  8232  0076  0009               	retfie
  8233  0077                     __end_of_interrupcio:	
  8234                           
  8235                           	psect	text24
  8236  1407                     __ptext24:	
  8237 ;; *************** function i1___wmul *****************
  8238 ;; Defined at:
  8239 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\Umul16.c"
  8240 ;; Parameters:    Size  Location     Type
  8241 ;;  multiplier      2    0[COMMON] unsigned int 
  8242 ;;  multiplicand    2    2[COMMON] unsigned int 
  8243 ;; Auto vars:     Size  Location     Type
  8244 ;;  __wmul          2    4[COMMON] unsigned int 
  8245 ;; Return value:  Size  Location     Type
  8246 ;;                  2    0[COMMON] unsigned int 
  8247 ;; Registers used:
  8248 ;;		wreg, status,2, status,0
  8249 ;; Tracked objects:
  8250 ;;		On entry : 0/0
  8251 ;;		On exit  : 0/0
  8252 ;;		Unchanged: 0/0
  8253 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
  8254 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  8255 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  8256 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  8257 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  8258 ;;Total ram usage:        6 bytes
  8259 ;; Hardware stack levels used:    1
  8260 ;; This function calls:
  8261 ;;		Nothing
  8262 ;; This function is called by:
  8263 ;;		_interrupcio
  8264 ;; This function uses a non-reentrant model
  8265 ;;
  8266                           
  8267                           
  8268                           ;psect for function i1___wmul
  8269  1407                     i1___wmul:	
  8270                           
  8271                           ;incstack = 0
  8272                           ; Regs used in i1___wmul: [wreg+status,2+status,0]
  8273  1407  01F4               	clrf	i1___wmul@product
  8274  1408  01F5               	clrf	i1___wmul@product+1
  8275  1409                     i1l2781:	
  8276  1409  1C70               	btfss	i1___wmul@multiplier,0
  8277  140A  2C0F               	goto	i1l468
  8278  140B  0872               	movf	i1___wmul@multiplicand,w
  8279  140C  07F4               	addwf	i1___wmul@product,f
  8280  140D  0873               	movf	i1___wmul@multiplicand+1,w
  8281  140E  3DF5               	addwfc	i1___wmul@product+1,f
  8282  140F                     i1l468:	
  8283  140F  3001               	movlw	1
  8284  1410                     u339_25:	
  8285  1410  35F2               	lslf	i1___wmul@multiplicand,f
  8286  1411  0DF3               	rlf	i1___wmul@multiplicand+1,f
  8287  1412  0B89               	decfsz	9,f
  8288  1413  2C10               	goto	u339_25
  8289  1414  3001               	movlw	1
  8290  1415                     u340_25:	
  8291  1415  36F1               	lsrf	i1___wmul@multiplier+1,f
  8292  1416  0CF0               	rrf	i1___wmul@multiplier,f
  8293  1417  0B89               	decfsz	9,f
  8294  1418  2C15               	goto	u340_25
  8295  1419  0870               	movf	i1___wmul@multiplier,w
  8296  141A  0471               	iorwf	i1___wmul@multiplier+1,w
  8297  141B  1D03               	btfss	3,2
  8298  141C  2C09               	goto	i1l2781
  8299  141D  0875               	movf	i1___wmul@product+1,w
  8300  141E  00F1               	movwf	?i1___wmul+1
  8301  141F  0874               	movf	i1___wmul@product,w
  8302  1420  00F0               	movwf	?i1___wmul
  8303  1421  0008               	return
  8304  1422                     __end_ofi1___wmul:	
  8305                           
  8306                           	psect	text25
  8307  15A7                     __ptext25:	
  8308 ;; *************** function i1___awdiv *****************
  8309 ;; Defined at:
  8310 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\awdiv.c"
  8311 ;; Parameters:    Size  Location     Type
  8312 ;;  divisor         2    6[COMMON] int 
  8313 ;;  dividend        2    8[COMMON] int 
  8314 ;; Auto vars:     Size  Location     Type
  8315 ;;  __awdiv         2    2[BANK0 ] int 
  8316 ;;  __awdiv         1    1[BANK0 ] unsigned char 
  8317 ;;  __awdiv         1    0[BANK0 ] unsigned char 
  8318 ;; Return value:  Size  Location     Type
  8319 ;;                  2    6[COMMON] int 
  8320 ;; Registers used:
  8321 ;;		wreg, status,2, status,0
  8322 ;; Tracked objects:
  8323 ;;		On entry : 0/0
  8324 ;;		On exit  : 0/0
  8325 ;;		Unchanged: 0/0
  8326 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
  8327 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  8328 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  8329 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  8330 ;;      Totals:         5       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  8331 ;;Total ram usage:        9 bytes
  8332 ;; Hardware stack levels used:    1
  8333 ;; This function calls:
  8334 ;;		Nothing
  8335 ;; This function is called by:
  8336 ;;		_interrupcio
  8337 ;; This function uses a non-reentrant model
  8338 ;;
  8339                           
  8340                           
  8341                           ;psect for function i1___awdiv
  8342  15A7                     i1___awdiv:	
  8343                           
  8344                           ;incstack = 0
  8345                           ; Regs used in i1___awdiv: [wreg+status,2+status,0]
  8346  15A7  0140               	movlb	0	; select bank0
  8347  15A8  01A1               	clrf	i1___awdiv@sign
  8348  15A9  1FF7               	btfss	i1___awdiv@divisor+1,7
  8349  15AA  2DB2               	goto	i1l2801
  8350  15AB  09F6               	comf	i1___awdiv@divisor,f
  8351  15AC  09F7               	comf	i1___awdiv@divisor+1,f
  8352  15AD  0AF6               	incf	i1___awdiv@divisor,f
  8353  15AE  1903               	skipnz
  8354  15AF  0AF7               	incf	i1___awdiv@divisor+1,f
  8355  15B0  01A1               	clrf	i1___awdiv@sign
  8356  15B1  0AA1               	incf	i1___awdiv@sign,f
  8357  15B2                     i1l2801:	
  8358  15B2  1FF9               	btfss	i1___awdiv@dividend+1,7
  8359  15B3  2DBD               	goto	i1l2807
  8360  15B4  09F8               	comf	i1___awdiv@dividend,f
  8361  15B5  09F9               	comf	i1___awdiv@dividend+1,f
  8362  15B6  0AF8               	incf	i1___awdiv@dividend,f
  8363  15B7  1903               	skipnz
  8364  15B8  0AF9               	incf	i1___awdiv@dividend+1,f
  8365  15B9  3001               	movlw	1
  8366  15BA  00FA               	movwf	??i1___awdiv
  8367  15BB  087A               	movf	??i1___awdiv,w
  8368  15BC  06A1               	xorwf	i1___awdiv@sign,f
  8369  15BD                     i1l2807:	
  8370  15BD  01A2               	clrf	i1___awdiv@quotient
  8371  15BE  01A3               	clrf	i1___awdiv@quotient+1
  8372  15BF  0876               	movf	i1___awdiv@divisor,w
  8373  15C0  0477               	iorwf	i1___awdiv@divisor+1,w
  8374  15C1  1903               	btfsc	3,2
  8375  15C2  2DEC               	goto	i1l2829
  8376  15C3  01A0               	clrf	i1___awdiv@counter
  8377  15C4  0AA0               	incf	i1___awdiv@counter,f
  8378  15C5                     i1l2817:	
  8379  15C5  1BF7               	btfsc	i1___awdiv@divisor+1,7
  8380  15C6  2DD1               	goto	i1l2819
  8381  15C7  3001               	movlw	1
  8382  15C8                     u345_25:	
  8383  15C8  35F6               	lslf	i1___awdiv@divisor,f
  8384  15C9  0DF7               	rlf	i1___awdiv@divisor+1,f
  8385  15CA  0B89               	decfsz	9,f
  8386  15CB  2DC8               	goto	u345_25
  8387  15CC  3001               	movlw	1
  8388  15CD  00FA               	movwf	??i1___awdiv
  8389  15CE  087A               	movf	??i1___awdiv,w
  8390  15CF  07A0               	addwf	i1___awdiv@counter,f
  8391  15D0  2DC5               	goto	i1l2817
  8392  15D1                     i1l2819:	
  8393  15D1  3001               	movlw	1
  8394  15D2                     u347_25:	
  8395  15D2  35A2               	lslf	i1___awdiv@quotient,f
  8396  15D3  0DA3               	rlf	i1___awdiv@quotient+1,f
  8397  15D4  0B89               	decfsz	9,f
  8398  15D5  2DD2               	goto	u347_25
  8399  15D6  0877               	movf	i1___awdiv@divisor+1,w
  8400  15D7  0279               	subwf	i1___awdiv@dividend+1,w
  8401  15D8  1D03               	skipz
  8402  15D9  2DDC               	goto	u348_25
  8403  15DA  0876               	movf	i1___awdiv@divisor,w
  8404  15DB  0278               	subwf	i1___awdiv@dividend,w
  8405  15DC                     u348_25:	
  8406  15DC  1C03               	skipc
  8407  15DD  2DE3               	goto	i1l2825
  8408  15DE  0876               	movf	i1___awdiv@divisor,w
  8409  15DF  02F8               	subwf	i1___awdiv@dividend,f
  8410  15E0  0877               	movf	i1___awdiv@divisor+1,w
  8411  15E1  3BF9               	subwfb	i1___awdiv@dividend+1,f
  8412  15E2  1422               	bsf	i1___awdiv@quotient,0
  8413  15E3                     i1l2825:	
  8414  15E3  3001               	movlw	1
  8415  15E4                     u349_25:	
  8416  15E4  36F7               	lsrf	i1___awdiv@divisor+1,f
  8417  15E5  0CF6               	rrf	i1___awdiv@divisor,f
  8418  15E6  0B89               	decfsz	9,f
  8419  15E7  2DE4               	goto	u349_25
  8420  15E8  3001               	movlw	1
  8421  15E9  02A0               	subwf	i1___awdiv@counter,f
  8422  15EA  1D03               	btfss	3,2
  8423  15EB  2DD1               	goto	i1l2819
  8424  15EC                     i1l2829:	
  8425  15EC  0821               	movf	i1___awdiv@sign,w
  8426  15ED  1903               	btfsc	3,2
  8427  15EE  2DF4               	goto	i1l2833
  8428  15EF  09A2               	comf	i1___awdiv@quotient,f
  8429  15F0  09A3               	comf	i1___awdiv@quotient+1,f
  8430  15F1  0AA2               	incf	i1___awdiv@quotient,f
  8431  15F2  1903               	skipnz
  8432  15F3  0AA3               	incf	i1___awdiv@quotient+1,f
  8433  15F4                     i1l2833:	
  8434  15F4  0823               	movf	i1___awdiv@quotient+1,w
  8435  15F5  00F7               	movwf	?i1___awdiv+1
  8436  15F6  0822               	movf	i1___awdiv@quotient,w
  8437  15F7  00F6               	movwf	?i1___awdiv
  8438  15F8  0008               	return
  8439  15F9                     __end_ofi1___awdiv:	
  8440                           
  8441                           	psect	text26
  8442  0802                     __ptext26:	
  8443 ;; *************** function _retardo *****************
  8444 ;; Defined at:
  8445 ;;		line 122 in file "main.c"
  8446 ;; Parameters:    Size  Location     Type
  8447 ;;  to              2    0[COMMON] int 
  8448 ;; Auto vars:     Size  Location     Type
  8449 ;;		None
  8450 ;; Return value:  Size  Location     Type
  8451 ;;                  1    wreg      void 
  8452 ;; Registers used:
  8453 ;;		wreg, status,2, status,0
  8454 ;; Tracked objects:
  8455 ;;		On entry : 0/0
  8456 ;;		On exit  : 0/0
  8457 ;;		Unchanged: 0/0
  8458 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
  8459 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  8460 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  8461 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  8462 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  8463 ;;Total ram usage:        3 bytes
  8464 ;; Hardware stack levels used:    1
  8465 ;; This function calls:
  8466 ;;		Nothing
  8467 ;; This function is called by:
  8468 ;;		_interrupcio
  8469 ;; This function uses a non-reentrant model
  8470 ;;
  8471                           
  8472                           
  8473                           ;psect for function _retardo
  8474  0802                     _retardo:	
  8475                           
  8476                           ;main.c: 123: to=to+10;
  8477                           
  8478                           ;incstack = 0
  8479                           ; Regs used in _retardo: [wreg+status,2+status,0]
  8480  0802  0870               	movf	retardo@to,w
  8481  0803  3E0A               	addlw	10
  8482  0804  00F0               	movwf	retardo@to
  8483  0805  3000               	movlw	0
  8484  0806  3D71               	addwfc	retardo@to+1,w
  8485  0807  00F1               	movwf	retardo@to+1
  8486  0808                     i1l214:	
  8487                           ;main.c: 124: while(c<=to){
  8488                           
  8489  0808  0871               	movf	retardo@to+1,w
  8490  0809  3A80               	xorlw	128
  8491  080A  00F2               	movwf	??_retardo
  8492  080B  0141               	movlb	1	; select bank1
  8493  080C  0869               	movf	(_c+1)^(0+128),w
  8494  080D  3A80               	xorlw	128
  8495  080E  0272               	subwf	??_retardo,w
  8496  080F  1D03               	skipz
  8497  0810  2813               	goto	u308_25
  8498  0811  0868               	movf	_c^(0+128),w
  8499  0812  0270               	subwf	retardo@to,w
  8500  0813                     u308_25:	
  8501  0813  1C03               	btfss	3,0
  8502  0814  281F               	goto	i1l2623
  8503                           
  8504                           ;main.c: 126: _delay((unsigned long)((100)*(32000000/4000000.0)));
  8505  0815  30A0               	movlw	160
  8506  0816                     u605_27:	
  8507  0816  3200               	nop2
  8508  0817  0B89               	decfsz	9,f
  8509  0818  2816               	goto	u605_27
  8510                           
  8511                           ;main.c: 127: c++;
  8512  0819  3001               	movlw	1
  8513  081A  0141               	movlb	1	; select bank1
  8514  081B  07E8               	addwf	_c^(0+128),f
  8515  081C  3000               	movlw	0
  8516  081D  3DE9               	addwfc	(_c+1)^(0+128),f
  8517  081E  2808               	goto	i1l214
  8518  081F                     i1l2623:	
  8519                           
  8520                           ;main.c: 128: }
  8521                           ;main.c: 129: c=1;
  8522  081F  3001               	movlw	1
  8523  0820  0141               	movlb	1	; select bank1
  8524  0821  00E8               	movwf	_c^(0+128)
  8525  0822  3000               	movlw	0
  8526  0823  00E9               	movwf	(_c^(0+128)+1)
  8527  0824  0008               	return
  8528  0825                     __end_of_retardo:	
  8529  007E                     btemp	set	126	;btemp
  8530  007E                     int$flags	set	126
  8531  007E                     wtemp0	set	126


Data Sizes:
    Strings     30
    Constant    37
    Data        33
    BSS         73
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     71      75
    BANK1            80     21      74
    BANK2            80      8      57
    BANK3            80      0       0
    BANK4            80      0       0
    BANK5            80      0       0
    BANK6            80      0       0
    BANK7            80      0       0
    BANK8            80      0       0
    BANK9            80      0       0
    BANK10           80      0       0
    BANK11           80      0       0
    BANK12           80      0       0
    BANK13           80      0       0
    BANK14           80      0       0
    BANK15           80      0       0
    BANK16           80      0       0
    BANK17           80      0       0
    BANK18           80      0       0
    BANK19           80      0       0
    BANK20           80      0       0
    BANK21           80      0       0
    BANK22           80      0       0
    BANK23           80      0       0
    BANK24           80      0       0
    BANK25           80      0       0
    BANK26           80      0       0
    BANK27           80      0       0
    BANK28           80      0       0
    BANK29           80      0       0
    BANK30           80      0       0
    BANK31           80      0       0
    BANK32           80      0       0
    BANK33           80      0       0
    BANK34           80      0       0
    BANK35           80      0       0
    BANK36           80      0       0
    BANK37           80      0       0
    BANK38           80      0       0
    BANK39           80      0       0
    BANK40           80      0       0
    BANK41           80      0       0
    BANK42           80      0       0
    BANK43           80      0       0
    BANK44           80      0       0
    BANK45           80      0       0
    BANK46           80      0       0
    BANK47           80      0       0
    BANK48           80      0       0
    BANK49           80      0       0
    BANK50           80      0       0

Pointer List with Targets:

    frexp@eptr	PTR int  size(1) Largest target is 2
		 -> log@exponent(BANK1[2]), 

    eval_poly@d	PTR const  size(2) Largest target is 27
		 -> log@coeff(CODE[27]), 

    sprintf@f	PTR const unsigned char  size(2) Largest target is 16
		 -> STR_2(CODE[14]), STR_1(CODE[16]), 

    sprintf@sp	PTR unsigned char  size(1) Largest target is 16
		 -> buffer2(BANK2[16]), buffer1(BANK2[16]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    Lcd_Out2@buffer	PTR unsigned char  size(1) Largest target is 16
		 -> buffer2(BANK2[16]), buffer1(BANK2[16]), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _interrupcio in COMMON

    _interrupcio->i1___awdiv
    i1___awdiv->i1___wmul

Critical Paths under _main in BANK0

    _main->___fttol
    _sprintf->___wmul
    ___lwmod->___lwdiv
    _leerref->___fttol
    _leerref->_log
    _log->_eval_poly
    _eval_poly->___ftadd
    ___wmul->___awdiv
    ___ftmul->___awtoft
    ___ftadd->___ftdiv
    ___awtoft->___ftpack
    ___fttol->___ftadd
    ___ftdiv->___ftmul
    _codigo->___wmul
    _Lcd_Out2->_Lcd_Chr_CP
    _Lcd_Out2->_Lcd_Cmd
    _Lcd_Init->_Lcd_Cmd

Critical Paths under _interrupcio in BANK0

    _interrupcio->i1___awdiv

Critical Paths under _main in BANK1

    _main->_leerref
    _leerref->_log
    _log->_eval_poly

Critical Paths under _interrupcio in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _interrupcio in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _interrupcio in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _interrupcio in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _interrupcio in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _interrupcio in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _interrupcio in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _interrupcio in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _interrupcio in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _interrupcio in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _interrupcio in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _interrupcio in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _interrupcio in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _interrupcio in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _interrupcio in BANK15

    None.

Critical Paths under _main in BANK16

    None.

Critical Paths under _interrupcio in BANK16

    None.

Critical Paths under _main in BANK17

    None.

Critical Paths under _interrupcio in BANK17

    None.

Critical Paths under _main in BANK18

    None.

Critical Paths under _interrupcio in BANK18

    None.

Critical Paths under _main in BANK19

    None.

Critical Paths under _interrupcio in BANK19

    None.

Critical Paths under _main in BANK20

    None.

Critical Paths under _interrupcio in BANK20

    None.

Critical Paths under _main in BANK21

    None.

Critical Paths under _interrupcio in BANK21

    None.

Critical Paths under _main in BANK22

    None.

Critical Paths under _interrupcio in BANK22

    None.

Critical Paths under _main in BANK23

    None.

Critical Paths under _interrupcio in BANK23

    None.

Critical Paths under _main in BANK24

    None.

Critical Paths under _interrupcio in BANK24

    None.

Critical Paths under _main in BANK25

    None.

Critical Paths under _interrupcio in BANK25

    None.

Critical Paths under _main in BANK26

    None.

Critical Paths under _interrupcio in BANK26

    None.

Critical Paths under _main in BANK27

    None.

Critical Paths under _interrupcio in BANK27

    None.

Critical Paths under _main in BANK28

    None.

Critical Paths under _interrupcio in BANK28

    None.

Critical Paths under _main in BANK29

    None.

Critical Paths under _interrupcio in BANK29

    None.

Critical Paths under _main in BANK30

    None.

Critical Paths under _interrupcio in BANK30

    None.

Critical Paths under _main in BANK31

    None.

Critical Paths under _interrupcio in BANK31

    None.

Critical Paths under _main in BANK32

    None.

Critical Paths under _interrupcio in BANK32

    None.

Critical Paths under _main in BANK33

    None.

Critical Paths under _interrupcio in BANK33

    None.

Critical Paths under _main in BANK34

    None.

Critical Paths under _interrupcio in BANK34

    None.

Critical Paths under _main in BANK35

    None.

Critical Paths under _interrupcio in BANK35

    None.

Critical Paths under _main in BANK36

    None.

Critical Paths under _interrupcio in BANK36

    None.

Critical Paths under _main in BANK37

    None.

Critical Paths under _interrupcio in BANK37

    None.

Critical Paths under _main in BANK38

    None.

Critical Paths under _interrupcio in BANK38

    None.

Critical Paths under _main in BANK39

    None.

Critical Paths under _interrupcio in BANK39

    None.

Critical Paths under _main in BANK40

    None.

Critical Paths under _interrupcio in BANK40

    None.

Critical Paths under _main in BANK41

    None.

Critical Paths under _interrupcio in BANK41

    None.

Critical Paths under _main in BANK42

    None.

Critical Paths under _interrupcio in BANK42

    None.

Critical Paths under _main in BANK43

    None.

Critical Paths under _interrupcio in BANK43

    None.

Critical Paths under _main in BANK44

    None.

Critical Paths under _interrupcio in BANK44

    None.

Critical Paths under _main in BANK45

    None.

Critical Paths under _interrupcio in BANK45

    None.

Critical Paths under _main in BANK46

    None.

Critical Paths under _interrupcio in BANK46

    None.

Critical Paths under _main in BANK47

    None.

Critical Paths under _interrupcio in BANK47

    None.

Critical Paths under _main in BANK48

    None.

Critical Paths under _interrupcio in BANK48

    None.

Critical Paths under _main in BANK49

    None.

Critical Paths under _interrupcio in BANK49

    None.

Critical Paths under _main in BANK50

    None.

Critical Paths under _interrupcio in BANK50

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                12    12      0   77216
                                             17 BANK1      4     4      0
                                              0 BANK2      8     8      0
                            _Lcd_Cmd
                           _Lcd_Init
                           _Lcd_Out2
                            ___awdiv
                           ___awtoft
                            ___ftadd
                            ___ftdiv
                            ___ftmul
                            ___fttol
                             ___wmul
                             _codigo
                            _leerref
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             27    21      6    4884
                                             19 BANK0     19    13      6
                            ___lwdiv
                            ___lwmod
                             ___wmul
                            _isdigit
 ---------------------------------------------------------------------------------
 (2) _isdigit                                              2     2      0      99
                                              4 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (2) ___lwmod                                              6     2      4     386
                                             12 BANK0      6     2      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              8     4      4     395
                                              4 BANK0      8     4      4
 ---------------------------------------------------------------------------------
 (1) _leerref                                              9     9      0   43747
                                              8 BANK1      9     9      0
                           ___awtoft
                            ___ftadd
                            ___ftdiv
                            ___ftmul
                            ___fttol
                                _log
 ---------------------------------------------------------------------------------
 (2) _log                                                  6     3      3   26150
                                             70 BANK0      1     1      0
                                              3 BANK1      5     2      3
                           ___awtoft
                            ___ftadd
                            ___ftdiv (ARG)
                             ___ftge
                            ___ftmul
                          _eval_poly
                              _frexp
 ---------------------------------------------------------------------------------
 (3) _frexp                                                6     2      4     476
                                              4 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (3) _eval_poly                                           10     3      7   12278
                                             63 BANK0      7     0      7
                                              0 BANK1      3     3      0
                            ___ftadd
                            ___ftdiv (ARG)
                            ___ftmul
                             ___wmul
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4    2460
                                             13 BANK0      6     2      4
                            ___awdiv (ARG)
 ---------------------------------------------------------------------------------
 (4) ___ftmul                                             16    10      6    4298
                                             18 BANK0     16    10      6
                           ___awtoft (ARG)
                           ___ftpack
                              _frexp (ARG)
 ---------------------------------------------------------------------------------
 (4) ___ftadd                                             13     7      6    5035
                                             50 BANK0     13     7      6
                           ___awtoft (ARG)
                            ___ftdiv (ARG)
                            ___ftmul (ARG)
                           ___ftpack
                             ___wmul (ARG)
                              _frexp (ARG)
 ---------------------------------------------------------------------------------
 (3) ___ftge                                               9     3      6     466
                                              4 BANK0      9     3      6
 ---------------------------------------------------------------------------------
 (3) ___awtoft                                             6     3      3    3213
                                             12 BANK0      6     3      3
                           ___ftpack
 ---------------------------------------------------------------------------------
 (2) ___fttol                                             14    10      4     679
                                             63 BANK0      8     4      4
                                              0 BANK1      6     6      0
                           ___awtoft (ARG)
                            ___ftadd (ARG)
                            ___ftdiv (ARG)
                            ___ftmul (ARG)
 ---------------------------------------------------------------------------------
 (2) ___ftdiv                                             16    10      6    4270
                                             34 BANK0     16    10      6
                           ___awtoft (ARG)
                             ___ftge (ARG)
                            ___ftmul (ARG)
                           ___ftpack
                           ___ftpack (ARG)
                             ___wmul (ARG)
                              _frexp (ARG)
 ---------------------------------------------------------------------------------
 (5) ___ftpack                                             8     3      5    2464
                                              4 BANK0      8     3      5
 ---------------------------------------------------------------------------------
 (1) _codigo                                               2     0      2    2110
                                             19 BANK0      2     0      2
                            ___awdiv (ARG)
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (1) ___awdiv                                              9     5      4    4617
                                              4 BANK0      9     5      4
 ---------------------------------------------------------------------------------
 (1) _Lcd_Out2                                             5     3      2    1067
                                              7 BANK0      5     3      2
                         _Lcd_Chr_CP
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (2) _Lcd_Chr_CP                                           3     3      0     248
                                              4 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (1) _Lcd_Init                                             2     2      0     452
                                              7 BANK0      2     2      0
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (2) _Lcd_Cmd                                              3     3      0     248
                                              4 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (6) _interrupcio                                          3     3      0     709
                                             11 COMMON     3     3      0
                            _retardo
                          i1___awdiv
                           i1___wmul
 ---------------------------------------------------------------------------------
 (7) i1___wmul                                             6     2      4     196
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (7) i1___awdiv                                            9     5      4     404
                                              6 COMMON     5     1      4
                                              0 BANK0      4     4      0
                           i1___wmul (ARG)
 ---------------------------------------------------------------------------------
 (7) _retardo                                              3     1      2     109
                                              0 COMMON     3     1      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Lcd_Cmd
   _Lcd_Init
     _Lcd_Cmd
   _Lcd_Out2
     _Lcd_Chr_CP
     _Lcd_Cmd
   ___awdiv
   ___awtoft
     ___ftpack
   ___ftadd
     ___awtoft (ARG)
       ___ftpack
     ___ftdiv (ARG)
       ___awtoft (ARG)
         ___ftpack
       ___ftge (ARG)
       ___ftmul (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftpack (ARG)
         _frexp (ARG)
       ___ftpack (ARG)
       ___ftpack (ARG)
       ___wmul (ARG)
         ___awdiv (ARG)
       _frexp (ARG)
     ___ftmul (ARG)
       ___awtoft (ARG)
         ___ftpack
       ___ftpack (ARG)
       _frexp (ARG)
     ___ftpack (ARG)
     ___wmul (ARG)
       ___awdiv (ARG)
     _frexp (ARG)
   ___ftdiv
     ___awtoft (ARG)
       ___ftpack
     ___ftge (ARG)
     ___ftmul (ARG)
       ___awtoft (ARG)
         ___ftpack
       ___ftpack (ARG)
       _frexp (ARG)
     ___ftpack (ARG)
     ___ftpack (ARG)
     ___wmul (ARG)
       ___awdiv (ARG)
     _frexp (ARG)
   ___ftmul
     ___awtoft (ARG)
       ___ftpack
     ___ftpack (ARG)
     _frexp (ARG)
   ___fttol
     ___awtoft (ARG)
       ___ftpack
     ___ftadd (ARG)
       ___awtoft (ARG)
         ___ftpack
       ___ftdiv (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftge (ARG)
         ___ftmul (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
           _frexp (ARG)
         ___ftpack (ARG)
         ___ftpack (ARG)
         ___wmul (ARG)
           ___awdiv (ARG)
         _frexp (ARG)
       ___ftmul (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftpack (ARG)
         _frexp (ARG)
       ___ftpack (ARG)
       ___wmul (ARG)
         ___awdiv (ARG)
       _frexp (ARG)
     ___ftdiv (ARG)
       ___awtoft (ARG)
         ___ftpack
       ___ftge (ARG)
       ___ftmul (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftpack (ARG)
         _frexp (ARG)
       ___ftpack (ARG)
       ___ftpack (ARG)
       ___wmul (ARG)
         ___awdiv (ARG)
       _frexp (ARG)
     ___ftmul (ARG)
       ___awtoft (ARG)
         ___ftpack
       ___ftpack (ARG)
       _frexp (ARG)
   ___wmul
     ___awdiv (ARG)
   _codigo
     ___awdiv (ARG)
     ___wmul (ARG)
       ___awdiv (ARG)
   _leerref
     ___awtoft
       ___ftpack
     ___ftadd
       ___awtoft (ARG)
         ___ftpack
       ___ftdiv (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftge (ARG)
         ___ftmul (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
           _frexp (ARG)
         ___ftpack (ARG)
         ___ftpack (ARG)
         ___wmul (ARG)
           ___awdiv (ARG)
         _frexp (ARG)
       ___ftmul (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftpack (ARG)
         _frexp (ARG)
       ___ftpack (ARG)
       ___wmul (ARG)
         ___awdiv (ARG)
       _frexp (ARG)
     ___ftdiv
       ___awtoft (ARG)
         ___ftpack
       ___ftge (ARG)
       ___ftmul (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftpack (ARG)
         _frexp (ARG)
       ___ftpack (ARG)
       ___ftpack (ARG)
       ___wmul (ARG)
         ___awdiv (ARG)
       _frexp (ARG)
     ___ftmul
       ___awtoft (ARG)
         ___ftpack
       ___ftpack (ARG)
       _frexp (ARG)
     ___fttol
       ___awtoft (ARG)
         ___ftpack
       ___ftadd (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftdiv (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftge (ARG)
           ___ftmul (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             _frexp (ARG)
           ___ftpack (ARG)
           ___ftpack (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
           _frexp (ARG)
         ___ftmul (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
           _frexp (ARG)
         ___ftpack (ARG)
         ___wmul (ARG)
           ___awdiv (ARG)
         _frexp (ARG)
       ___ftdiv (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftge (ARG)
         ___ftmul (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
           _frexp (ARG)
         ___ftpack (ARG)
         ___ftpack (ARG)
         ___wmul (ARG)
           ___awdiv (ARG)
         _frexp (ARG)
       ___ftmul (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftpack (ARG)
         _frexp (ARG)
     _log
       ___awtoft
         ___ftpack
       ___ftadd
         ___awtoft (ARG)
           ___ftpack
         ___ftdiv (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftge (ARG)
           ___ftmul (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             _frexp (ARG)
           ___ftpack (ARG)
           ___ftpack (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
           _frexp (ARG)
         ___ftmul (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
           _frexp (ARG)
         ___ftpack (ARG)
         ___wmul (ARG)
           ___awdiv (ARG)
         _frexp (ARG)
       ___ftdiv (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftge (ARG)
         ___ftmul (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
           _frexp (ARG)
         ___ftpack (ARG)
         ___ftpack (ARG)
         ___wmul (ARG)
           ___awdiv (ARG)
         _frexp (ARG)
       ___ftge (ARG)
       ___ftmul (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftpack (ARG)
         _frexp (ARG)
       _eval_poly (ARG)
         ___ftadd
           ___awtoft (ARG)
             ___ftpack
           ___ftdiv (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftge (ARG)
             ___ftmul (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               _frexp (ARG)
             ___ftpack (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
             _frexp (ARG)
           ___ftmul (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             _frexp (ARG)
           ___ftpack (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
           _frexp (ARG)
         ___ftdiv (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftge (ARG)
           ___ftmul (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             _frexp (ARG)
           ___ftpack (ARG)
           ___ftpack (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
           _frexp (ARG)
         ___ftmul (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
           _frexp (ARG)
         ___wmul (ARG)
           ___awdiv (ARG)
       _frexp (ARG)
   _sprintf
     ___lwdiv
     ___lwmod
       ___lwdiv (ARG)
     ___wmul
       ___awdiv (ARG)
     _isdigit

 _interrupcio (ROOT)
   _retardo
   i1___awdiv
     i1___wmul (ARG)
   i1___wmul

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             FF0      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      E       E       2      100.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     47      4B       5       93.8%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BANK1               50     15      4A       7       92.5%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BITBANK2            50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BANK2               50      8      39       9       71.3%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BITBANK3            50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BANK3               50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITBANK4            50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BANK4               50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITBANK5            50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BANK5               50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITBANK6            50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BANK6               50      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITBANK7            50      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BANK7               50      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITBANK8            50      0       0      20        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BANK8               50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BITBANK9            50      0       0      22        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BANK9               50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BITBANK10           50      0       0      24        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BANK10              50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BITBANK11           50      0       0      26        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BANK11              50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
ABS                  0      0      DC      28        0.0%
BITBANK12           50      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BANK12              50      0       0      30        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITBANK13           50      0       0      31        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BANK13              50      0       0      32        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%
BITBANK14           50      0       0      33        0.0%
BITSFR32             0      0       0      33        0.0%
SFR32                0      0       0      33        0.0%
BANK14              50      0       0      34        0.0%
BITSFR33             0      0       0      34        0.0%
SFR33                0      0       0      34        0.0%
BITBANK15           50      0       0      35        0.0%
BITSFR34             0      0       0      35        0.0%
SFR34                0      0       0      35        0.0%
BANK15              50      0       0      36        0.0%
BITSFR35             0      0       0      36        0.0%
SFR35                0      0       0      36        0.0%
BITBANK16           50      0       0      37        0.0%
BITSFR36             0      0       0      37        0.0%
SFR36                0      0       0      37        0.0%
BANK16              50      0       0      38        0.0%
BITSFR37             0      0       0      38        0.0%
SFR37                0      0       0      38        0.0%
BITBANK17           50      0       0      39        0.0%
BITSFR38             0      0       0      39        0.0%
SFR38                0      0       0      39        0.0%
BANK17              50      0       0      40        0.0%
BITSFR39             0      0       0      40        0.0%
SFR39                0      0       0      40        0.0%
BITBANK18           50      0       0      41        0.0%
BITSFR40             0      0       0      41        0.0%
SFR40                0      0       0      41        0.0%
BANK18              50      0       0      42        0.0%
BITSFR41             0      0       0      42        0.0%
SFR41                0      0       0      42        0.0%
BITBANK19           50      0       0      43        0.0%
BITSFR42             0      0       0      43        0.0%
SFR42                0      0       0      43        0.0%
BANK19              50      0       0      44        0.0%
BITSFR43             0      0       0      44        0.0%
SFR43                0      0       0      44        0.0%
BITBANK20           50      0       0      45        0.0%
BITSFR44             0      0       0      45        0.0%
SFR44                0      0       0      45        0.0%
BANK20              50      0       0      46        0.0%
BITSFR45             0      0       0      46        0.0%
SFR45                0      0       0      46        0.0%
BITBANK21           50      0       0      47        0.0%
BITSFR46             0      0       0      47        0.0%
SFR46                0      0       0      47        0.0%
BANK21              50      0       0      48        0.0%
BITSFR47             0      0       0      48        0.0%
SFR47                0      0       0      48        0.0%
BITBANK22           50      0       0      49        0.0%
BITSFR48             0      0       0      49        0.0%
SFR48                0      0       0      49        0.0%
BANK22              50      0       0      50        0.0%
BITSFR49             0      0       0      50        0.0%
SFR49                0      0       0      50        0.0%
BITBANK23           50      0       0      51        0.0%
BITSFR50             0      0       0      51        0.0%
SFR50                0      0       0      51        0.0%
BANK23              50      0       0      52        0.0%
BITSFR51             0      0       0      52        0.0%
SFR51                0      0       0      52        0.0%
BITBANK24           50      0       0      53        0.0%
BITSFR52             0      0       0      53        0.0%
SFR52                0      0       0      53        0.0%
BANK24              50      0       0      54        0.0%
BITSFR53             0      0       0      54        0.0%
SFR53                0      0       0      54        0.0%
BITBANK25           50      0       0      55        0.0%
BITSFR54             0      0       0      55        0.0%
SFR54                0      0       0      55        0.0%
BANK25              50      0       0      56        0.0%
BITSFR55             0      0       0      56        0.0%
SFR55                0      0       0      56        0.0%
BITBANK26           50      0       0      57        0.0%
BITSFR56             0      0       0      57        0.0%
SFR56                0      0       0      57        0.0%
BANK26              50      0       0      58        0.0%
BITSFR57             0      0       0      58        0.0%
SFR57                0      0       0      58        0.0%
BITSFR58             0      0       0      59        0.0%
SFR58                0      0       0      59        0.0%
DATA                 0      0      DC      59        0.0%
BITBANK27           50      0       0      60        0.0%
BITSFR59             0      0       0      60        0.0%
SFR59                0      0       0      60        0.0%
BANK27              50      0       0      61        0.0%
BITSFR60             0      0       0      61        0.0%
SFR60                0      0       0      61        0.0%
BITBANK28           50      0       0      62        0.0%
BITSFR61             0      0       0      62        0.0%
SFR61                0      0       0      62        0.0%
BANK28              50      0       0      63        0.0%
BITSFR62             0      0       0      63        0.0%
SFR62                0      0       0      63        0.0%
BITBANK29           50      0       0      64        0.0%
BITSFR63             0      0       0      64        0.0%
SFR63                0      0       0      64        0.0%
BANK29              50      0       0      65        0.0%
BITBANK30           50      0       0      66        0.0%
BANK30              50      0       0      67        0.0%
BITBANK31           50      0       0      68        0.0%
BANK31              50      0       0      69        0.0%
BITBANK32           50      0       0      70        0.0%
BANK32              50      0       0      71        0.0%
BITBANK33           50      0       0      72        0.0%
BANK33              50      0       0      73        0.0%
BITBANK34           50      0       0      74        0.0%
BANK34              50      0       0      75        0.0%
BITBANK35           50      0       0      76        0.0%
BANK35              50      0       0      77        0.0%
BITBANK36           50      0       0      78        0.0%
BANK36              50      0       0      79        0.0%
BITBANK37           50      0       0      80        0.0%
BANK37              50      0       0      81        0.0%
BITBANK38           50      0       0      82        0.0%
BANK38              50      0       0      83        0.0%
BITBANK39           50      0       0      84        0.0%
BANK39              50      0       0      85        0.0%
BITBANK40           50      0       0      86        0.0%
BANK40              50      0       0      87        0.0%
BITBANK41           50      0       0      88        0.0%
BANK41              50      0       0      89        0.0%
BITBANK42           50      0       0      90        0.0%
BANK42              50      0       0      91        0.0%
BITBANK43           50      0       0      92        0.0%
BANK43              50      0       0      93        0.0%
BITBANK44           50      0       0      94        0.0%
BANK44              50      0       0      95        0.0%
BITBANK45           50      0       0      96        0.0%
BANK45              50      0       0      97        0.0%
BITBANK46           50      0       0      98        0.0%
BANK46              50      0       0      99        0.0%
BITBANK47           50      0       0     100        0.0%
BANK47              50      0       0     101        0.0%
BITBANK48           50      0       0     102        0.0%
BANK48              50      0       0     103        0.0%
BITBANK49           50      0       0     104        0.0%
BANK49              50      0       0     105        0.0%
BITBANK50           50      0       0     106        0.0%
BANK50              50      0       0     107        0.0%


Microchip Technology PIC Macro Assembler V1.45 build -152302408 
Symbol Table                                                                                   Mon May 06 14:02:30 2019

                      _I 00A3                        _P 00AE                        _T 00E0  
                      _U 0067                        _c 00E8                        _t 00BC  
                      pc 0002              __CFG_CP$OFF 0000                       l90 09D9  
                     l89 09B1                       _ZM 00E2                       _Kp 00D7  
                     _Ti 0145             ___awdiv@sign 002A                       _r0 014B  
                     _vm 00A9      ___wmul@multiplicand 002F         i1___wmul@product 0074  
           ___ftadd@exp1 005E             ___ftadd@exp2 005D              __CFG_LVP$ON 0000  
           ___ftadd@sign 005C                      l300 061A                      l205 0E32  
                    l311 06A8                      l231 0282                      l208 0E95  
                    l320 071D                      l305 0651                      l314 06C6  
                    l250 0330                      l242 02F6                      l323 073B  
                    l308 066F                      l317 06E4                      l253 0341  
                    l237 02E5                      l326 0759                      l262 03B6  
                    l351 0CCB                      l271 042B                      l247 0323  
                    l256 035F                      l329 0792                      l265 03D4  
                    l282 04A8                      l291 051D                      l259 037D  
                    l276 0451                      l268 03F2                      l285 04C6  
                    l294 053B                      l279 046F                      l720 08A2  
                    l288 04E4                      l369 0D74                      l297 0589  
                    l636 163F                      l660 0C46                      l468 142B  
                    l637 1647                      l629 162C             __CFG_CPD$OFF 0000  
                    _log 0ACE                      _vcc 00DA             __CFG_BORV$LO 0000  
                    wreg 0009                     S4213 1000             __CFG_ZCD$OFF 0000  
           ___ftdiv@cntr 004C             ___ftdiv@sign 0051                     l3203 1425  
                   l3221 0BCF                     l3231 0BE5                     l3225 0BD6  
                   l3321 0A9E                     l3313 0A8A                     l4113 042E  
                   l4211 14AC                     l3251 0C1C                     l3243 0BFF  
                   l4043 0132                     l3181 1618                     l3173 1602  
                   l3261 0C38                     l3253 0C21                     l3325 0AA6  
                   l3309 0A82                     l4141 061D                     l4061 0287  
                   l4053 018B                     l3511 094B                     l3503 0932  
                   l3343 1449                     l3351 1546                     l3271 0C6A  
                   l3263 0C42                     l3255 0C25                     l3177 1609  
                   l3281 0C85                     l3249 0C12                     l3601 147F  
                   l4081 02EE                     l3187 1631                     l3179 1613  
                   l3355 155C                     l3267 0C58                     l3291 0A31  
                   l4163 0794                     l3701 14A0                     l3189 1639  
                   l3525 0840                     l3605 1488                     l4165 0796  
                   l4085 02FD                     l3551 0898                     l3543 0879  
                   l3375 157E                     l3455 0B05                     l4167 079A  
                   l4087 0304                     l3705 14A6                     l3553 08A6  
                   l3545 088A                     l3297 0A47                     l3393 16C5  
                   l3449 0AF2                     l3473 13F2                     l4169 07A0  
                   l3707 14B6                     l3483 08DB                     l3571 14C8  
                   l3811 0D90                     l3803 0D68                     l3661 14F7  
                   l3557 08B4                     l3573 14D4                     l3821 0DA5  
                   l3813 0D93                     l3663 14FA                     l3671 1506  
                   l3583 14EF                     l3831 0DBE                     l3665 14FD  
                   l3673 1514                     l3489 08F1                     l3667 1500  
                   l3691 1496                     l3683 148E                     l3579 14E6  
                   l3595 1467                     l3851 0DE6                     l3843 0DE2  
                   l3763 0CD0                     l3693 1498                     l3685 1490  
                   l3597 1473                     l3837 0DD2                     l3829 0DBA  
                   l3781 0D2C                     l3765 0CD9                     l3757 0CC7  
                   l3853 0CA3                     l3679 1518                     l3695 149A  
                   l3687 1492                     l3791 0D43                     l3855 0E22  
                   l3873 07C0                     l3697 149C                     l3689 1494  
                   l3769 0CE6                     l3891 07E6                     l3883 07C8  
                   l3867 07B5                     l3699 149E                     l3779 0D14  
                   l3885 07D4                     l3797 0D49                     ?_log 00C5  
                   l3895 07EF                     l3899 07F7                     STR_1 181B  
                   STR_2 182B                     u4015 1627                     u4105 142C  
                   u4035 1634                     u4115 1431                     u4225 0C00  
                   u4075 164E                     u4315 0C39                     u5115 0D5E  
                   u6007 171B                     u4255 0C13                     u4415 0A8B  
                   u6017 1753                     u5305 07D5                     u4425 0A91  
                   u6027 1759                     u5315 07DF                     u5155 0D83  
                   u6037 1762                     u4605 176E                     u5325 07E7  
                   u4285 0C26                     u4615 177F                     u4455 0AA7  
                   u4545 16D9                     u4625 178F                     u4465 0AAD  
                   u4385 0A53                     u4555 16EA                     u4635 179E  
                   u4395 0A63                     u4565 16FA                     u4645 17B8  
                   u5285 07CB                     u4725 0903                     u5365 0182  
                   u4575 1709                     u4655 17C9                     u4735 0913  
                   u5375 027A                     u4585 1723                     u4745 0933  
                   u4825 087A                     u5465 0313                     u4595 1734  
                   u4755 0942                     u4915 14D5                     u4765 094C  
                   u4925 14DF                     u4855 0899                     u4935 14E7  
                   u5807 07A4                     u5575 0438                     u5817 0E2D  
                   u5585 0444                     u5907 0986                     u3995 160E  
                   u4795 0848                     u5827 0E90                     u5917 098E  
                   u5837 17AA                     u4965 146A                     u5685 0627  
                   u5927 0996                     u5847 17B0                     u4895 14CB  
                   u5695 0633                     u5937 099E                     u5857 17E8  
                   u4985 1479                     u5947 09A6                     u5867 17EE  
                   u4995 1480                     u5957 09BE                     u5877 17F4  
                   u5797 0120                     u5967 09CC                     u5887 17FB  
                   u5977 09E6                     u5897 097E                     u5987 09F4  
                   u5997 1715                     _Iant 00A0             __CFG_WRT$OFF 0000  
          __CFG_FCMEN$ON 0000                     _Uant 00AC                     _adc1 00BA  
                   _adc2 00B8           _contadorenviar 00E4                     _beta 0148  
                   _main 00AE             ___ftpack@arg 0024             ___ftpack@exp 0027  
                   _raux 00DD                     _rntc 00A6                     fsr0h 0005  
                   fsr1h 0007                     indf0 0000                     fsr0l 0004  
                   indf1 0001                     fsr1l 0006                     btemp 007E  
                   log@x 00C5            __CFG_BOREN$ON 0000                     start 0077  
        __end_of_Lcd_Cmd 1767            __CFG_CSWEN$ON 0000            __CFG_MCLRE$ON 0000  
           ___ftmul@cntr 0040             ___ftmul@sign 0041               _Lcd_Chr_CP 1767  
           ___fttol@exp1 00C7                    ??_log 0066             ___fttol@lval 00C3  
         Lcd_Out2@buffer 0028                    ?_main 0070           i1___awdiv@sign 0021  
                  _ADPCH 009E          __end_of___awdiv 07FC          __end_of___ftadd 0C9D  
          __CFG_WDTE$OFF 0000          __end_of___ftdiv 096D          __end_of___ftmul 0ACE  
        ___awdiv@divisor 0024          __end_of___fttol 08C4                    _IOCBF 1F4A  
        __end_of___lwdiv 14F4                    i1l214 0808                    i1l223 0072  
        __end_of___lwmod 148D                    i1l468 140F          ___awdiv@counter 0029  
                  _SPBRG 011B                    _PORTA 000C                    _PORTB 000D  
                  _PORTC 000E                    _PORTD 000F            __CFG_PWRTE$ON 0000  
          ___awtoft@sign 0031          __end_of_leerref 1000          __end_of_dpowers 1843  
                  _frexp 156B                    _errno 0123                    _error 00B0  
        __end_of_isdigit 13F4                    _temp0 014E            ___ftpack@sign 0028  
        __end_of_retardo 0825         __end_ofi1___wmul 1422                    status 0003  
    i1___wmul@multiplier 0070                    wtemp0 007E          __end_of_sprintf 0E29  
     __size_ofi1___awdiv 0052         __end_of_Lcd_Init 0A1A         __end_of_Lcd_Out2 152F  
        __initialization 0079             ?_interrupcio 0070              log@exponent 00C8  
           __end_of_main 07AA                   ??_main 00D3            ___fttol@sign1 00C2  
                 ?_frexp 0024                   _ADRESH 008D                   _ADRESL 008C  
       ___awdiv@dividend 0026         __end_of___awtoft 1460         __end_of___ftpack 165E  
                 _RB2PPS 1F1A                   i1l2623 081F                   i1l2801 15B2  
                 i1l2807 15BD                   i1l2833 15F4                   i1l2825 15E3  
                 i1l2817 15C5                   i1l2819 15D1                   i1l2829 15EC  
                 i1l2781 1409           __CFG_WDTCCS$SC 0000                   u308_25 0813  
                 u340_25 1415                   u345_25 15C8                   u347_25 15D2  
                 u339_25 1410                   u348_25 15DC                   u604_27 0069  
                 u349_25 15E4                   u605_27 0816                ??_Lcd_Cmd 0024  
                 _TX1REG 011A                   ___ftge 152F              ?_Lcd_Chr_CP 0070  
                 ___wmul 1422                ??___awdiv 0028                ??___ftadd 0058  
         __CFG_STVREN$ON 0000                ??___ftdiv 0048                ??___ftmul 0038  
              ??___fttol 0063                   _codigo 148D                   _angulo 00BE  
              ??___lwdiv 0028                ??___lwmod 0030                   _limite 0069  
       ___awdiv@quotient 002B    ___ftmul@f3_as_product 003D        __end_ofi1___awdiv 15F9  
              ??_leerref 00CA                ??_isdigit 0024                ??_retardo 0072  
              ??_sprintf 0039         __end_oflog@coeff 181B  __end_of__initialization 00AA  
             ___ftadd@f1 0052               ___ftadd@f2 0055               ___ftge@ff1 0024  
             ___ftge@ff2 0027             eval_poly@res 00C2               ___ftdiv@f1 0045  
             ___ftdiv@f2 0042               ___ftdiv@f3 004D               ___awtoft@c 002C  
             ___ftmul@f1 0032               ___ftmul@f2 0035               ___fttol@f1 005F  
         __pcstackCOMMON 0070             __pidataBANK0 07FC             __pidataBANK1 13F4  
           __pidataBANK2 13D9            __end_of_frexp 15A7                ?i1___wmul 0070  
              ?_Lcd_Init 0070                ?_Lcd_Out2 0027                  ??_frexp 0028  
           sprintf@width 0042      __size_of_Lcd_Chr_CP 0099               __pbssBANK0 0067  
             __pbssBANK1 00A0               __pbssBANK2 0120       __size_of_eval_poly 0074  
             __pmaintext 00AE                  ?___ftge 0024                  ?___wmul 002D  
        __CFG_PPS1WAY$ON 0000               __pintentry 0004                  ?_codigo 0033  
   __size_of_interrupcio 0073                ?___awtoft 002C                ?___ftpack 0024  
    __CFG_RSTOSC$HFINT32 0000               ??i1___wmul 0074       i1___awdiv@dividend 0078  
             ??_Lcd_Init 0027               ??_Lcd_Out2 0029                  _Lcd_Cmd 16D2  
              _ADREFbits 009A       i1___awdiv@quotient 0022     __CFG_SCANE$available 0000  
        __size_of___ftge 003C                  ___awdiv 07AA                  ___ftadd 0BA7  
                ___ftdiv 08C4          __size_of___wmul 001C                  ___ftmul 0A1A  
                ___fttol 0825                  ___lwdiv 14BF                  ___lwmod 1460  
        __size_of_codigo 0032               ??___awtoft 002F               ??___ftpack 0029  
      __end_of_eval_poly 16D2                  __ptext1 0C9D                  __ptext2 13E5  
                __ptext3 1460                  __ptext4 14BF                  __ptext5 0E29  
                __ptext6 0ACE                  __ptext7 156B                  __ptext8 165E  
                __ptext9 1422                  _buffer1 0135                  _buffer2 0125  
                _energia 00B6                  _leerref 0E29                  _dpowers 1839  
           __size_of_log 00D9                  _isdigit 13E5                _IOCBFbits 1F4A  
                _retardo 0802                _IOCBNbits 1F49                  _tkelvin 0120  
             _referencia 00B4                  _sprintf 0C9D                  clrloop0 13CE  
   end_of_initialization 00AA                  init_ram 13D3                  initloop 13D4  
           ??_Lcd_Chr_CP 0024                Lcd_Out2@x 0027                Lcd_Out2@y 002A  
  i1___wmul@multiplicand 0072    __CFG_WDTCPS$WDTCPS_31 0000                _PORTAbits 000C  
              _PORTCbits 000E                _PORTDbits 000F                _TRISAbits 0011  
              _TRISBbits 0012                _TRISCbits 0013                _TRISDbits 0014  
              i1___awdiv 15A7         __CFG_FEXTOSC$OFF 0000       __end_of_Lcd_Chr_CP 1800  
            ___ftdiv@exp 0050                _TXSTAbits 011E              ___ftmul@exp 003C  
         __end_of___ftge 156B           __end_of___wmul 143E              _BAUDCONbits 011F  
         __end_of_codigo 14BF             _leerref$1432 00D0             _leerref$1433 00CD  
    start_initialization 0079        __size_ofi1___wmul 001B               eval_poly@d 0062  
             eval_poly@n 0064               eval_poly@x 005F              __end_of_log 0BA7  
             ?i1___awdiv 0076        __size_of_Lcd_Init 00AD        __size_of_Lcd_Out2 003B  
             frexp@value 0024         __CFG_LPBOREN$OFF 0000                 ??___ftge 002A  
               ??___wmul 0031                 ??_codigo 0035              __pdataBANK0 0069  
            __pdataBANK1 00D7              __pdataBANK2 0145        __size_of___awtoft 0022  
      __size_of___ftpack 0065                ___latbits 0004            __pcstackBANK0 0020  
          __pcstackBANK1 00C2            __pcstackBANK2 0151             _isdigit$1160 0024  
               ?_Lcd_Cmd 0070              sprintf@flag 0041              sprintf@prec 003E  
              _main$1434 0151                _main$1435 0154                _main$1436 0157  
       ___lwdiv@dividend 0026            ??_interrupcio 007B                 ?___awdiv 0024  
               ?___ftadd 0052                 ?___ftdiv 0042                 ?___ftmul 0032  
               ?___fttol 005F                 ?___lwdiv 0024                 ?___lwmod 002C  
      i1___awdiv@divisor 0076        i1___awdiv@counter 0020                __pswtext1 1000  
               ?_leerref 0070                 ?_isdigit 0070                _eval_poly 165E  
              _auxcodigo 00B2                 ?_retardo 0070              ??i1___awdiv 007A  
       ___lwdiv@quotient 002A                 ?_sprintf 0033           __size_of_frexp 003C  
         ___wmul@product 0031                 _LATAbits 0016                 _LATDbits 0019  
              clear_ram0 13CD                 _PIE0bits 0716                 _PIR0bits 070C  
              codigo@num 0033      __end_of_interrupcio 0077             Lcd_Init@data 0028  
             _ADCON0bits 0093        ___wmul@multiplier 002D                 i1___wmul 1407  
               _WPUCbits 1F4F                 _WPUDbits 1F5A               ?_eval_poly 005F  
           Lcd_Out2@data 002B                 _Lcd_Init 096D                 _Lcd_Out2 14F4  
       __size_of_Lcd_Cmd 0095                frexp@eptr 0027         __size_of___awdiv 0052  
       __size_of___ftadd 00F6         __size_of___ftdiv 00A9         __size_of___ftmul 00B4  
       __size_of___fttol 009F         __size_of___lwdiv 0035         __size_of___lwmod 002D  
               ___awtoft 143E                 ___ftpack 15F9               _ANSELAbits 1F38  
             _ANSELBbits 1F43               _ANSELCbits 1F4E               _ANSELDbits 1F59  
             sprintf@val 003F         __size_of_leerref 01D7         __size_of_isdigit 000F  
         Lcd_Chr_CP@data 0026          ___lwdiv@divisor 0024          ___lwdiv@counter 0029  
               __ptext10 0A1A                 __ptext11 0BA7                 __ptext20 1767  
               __ptext12 152F                 __ptext21 096D                 __ptext13 143E  
               __ptext22 16D2                 __ptext14 0825                 __ptext15 08C4  
               __ptext24 1407                 __ptext16 15F9                 __ptext25 15A7  
               __ptext17 148D                 __ptext26 0802                 __ptext18 07AA  
               __ptext19 14F4         __size_of_retardo 0023         __size_of_sprintf 018C  
               _auxboton 00C0              Lcd_Cmd@data 0026                retardo@to 0070  
          __size_of_main 06FC     __CFG_WDTCWS$WDTCWS_7 0000               _RC1STAbits 011D  
            _interrupcio 0004                 int$flags 007E                 log@coeff 1800  
             _INTCONbits 000B              ??_eval_poly 0066                 isdigit@c 0025  
               intlevel1 0000                sprintf@ap 003D                sprintf@sp 0044  
       ___lwmod@dividend 002E        __CFG_CLKOUTEN$OFF 0000               _OSCFRQbits 0893  
          __pstringtext1 1839            __pstringtext2 1800            __pstringtext3 182B  
          __pstringtext4 0000              _temperatura 00E6                 sprintf@c 0045  
               sprintf@f 0033          ___lwmod@divisor 002C          ___lwmod@counter 0031  
             _TX1STAbits 011E  
